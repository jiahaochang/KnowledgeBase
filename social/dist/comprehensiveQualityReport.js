/******/ (function(modules) { // webpackBootstrap
/******/ 	var parentHotUpdateCallback = this["webpackHotUpdate"];
/******/ 	this["webpackHotUpdate"] = 
/******/ 	function webpackHotUpdateCallback(chunkId, moreModules) { // eslint-disable-line no-unused-vars
/******/ 		hotAddUpdateChunk(chunkId, moreModules);
/******/ 		if(parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);
/******/ 	}
/******/ 	
/******/ 	function hotDownloadUpdateChunk(chunkId) { // eslint-disable-line no-unused-vars
/******/ 		var head = document.getElementsByTagName("head")[0];
/******/ 		var script = document.createElement("script");
/******/ 		script.type = "text/javascript";
/******/ 		script.charset = "utf-8";
/******/ 		script.src = __webpack_require__.p + "" + chunkId + "." + hotCurrentHash + ".hot-update.js";
/******/ 		head.appendChild(script);
/******/ 	}
/******/ 	
/******/ 	function hotDownloadManifest(callback) { // eslint-disable-line no-unused-vars
/******/ 		if(typeof XMLHttpRequest === "undefined")
/******/ 			return callback(new Error("No browser support"));
/******/ 		try {
/******/ 			var request = new XMLHttpRequest();
/******/ 			var requestPath = __webpack_require__.p + "" + hotCurrentHash + ".hot-update.json";
/******/ 			request.open("GET", requestPath, true);
/******/ 			request.timeout = 10000;
/******/ 			request.send(null);
/******/ 		} catch(err) {
/******/ 			return callback(err);
/******/ 		}
/******/ 		request.onreadystatechange = function() {
/******/ 			if(request.readyState !== 4) return;
/******/ 			if(request.status === 0) {
/******/ 				// timeout
/******/ 				callback(new Error("Manifest request to " + requestPath + " timed out."));
/******/ 			} else if(request.status === 404) {
/******/ 				// no update available
/******/ 				callback();
/******/ 			} else if(request.status !== 200 && request.status !== 304) {
/******/ 				// other failure
/******/ 				callback(new Error("Manifest request to " + requestPath + " failed."));
/******/ 			} else {
/******/ 				// success
/******/ 				try {
/******/ 					var update = JSON.parse(request.responseText);
/******/ 				} catch(e) {
/******/ 					callback(e);
/******/ 					return;
/******/ 				}
/******/ 				callback(null, update);
/******/ 			}
/******/ 		};
/******/ 	}
/******/
/******/ 	
/******/ 	
/******/ 	// Copied from https://github.com/facebook/react/blob/bef45b0/src/shared/utils/canDefineProperty.js
/******/ 	var canDefineProperty = false;
/******/ 	try {
/******/ 		Object.defineProperty({}, "x", {
/******/ 			get: function() {}
/******/ 		});
/******/ 		canDefineProperty = true;
/******/ 	} catch(x) {
/******/ 		// IE will fail on defineProperty
/******/ 	}
/******/ 	
/******/ 	var hotApplyOnUpdate = true;
/******/ 	var hotCurrentHash = "83fbc1539facf66f1807"; // eslint-disable-line no-unused-vars
/******/ 	var hotCurrentModuleData = {};
/******/ 	var hotCurrentParents = []; // eslint-disable-line no-unused-vars
/******/ 	
/******/ 	function hotCreateRequire(moduleId) { // eslint-disable-line no-unused-vars
/******/ 		var me = installedModules[moduleId];
/******/ 		if(!me) return __webpack_require__;
/******/ 		var fn = function(request) {
/******/ 			if(me.hot.active) {
/******/ 				if(installedModules[request]) {
/******/ 					if(installedModules[request].parents.indexOf(moduleId) < 0)
/******/ 						installedModules[request].parents.push(moduleId);
/******/ 					if(me.children.indexOf(request) < 0)
/******/ 						me.children.push(request);
/******/ 				} else hotCurrentParents = [moduleId];
/******/ 			} else {
/******/ 				console.warn("[HMR] unexpected require(" + request + ") from disposed module " + moduleId);
/******/ 				hotCurrentParents = [];
/******/ 			}
/******/ 			return __webpack_require__(request);
/******/ 		};
/******/ 		for(var name in __webpack_require__) {
/******/ 			if(Object.prototype.hasOwnProperty.call(__webpack_require__, name)) {
/******/ 				if(canDefineProperty) {
/******/ 					Object.defineProperty(fn, name, (function(name) {
/******/ 						return {
/******/ 							configurable: true,
/******/ 							enumerable: true,
/******/ 							get: function() {
/******/ 								return __webpack_require__[name];
/******/ 							},
/******/ 							set: function(value) {
/******/ 								__webpack_require__[name] = value;
/******/ 							}
/******/ 						};
/******/ 					}(name)));
/******/ 				} else {
/******/ 					fn[name] = __webpack_require__[name];
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		function ensure(chunkId, callback) {
/******/ 			if(hotStatus === "ready")
/******/ 				hotSetStatus("prepare");
/******/ 			hotChunksLoading++;
/******/ 			__webpack_require__.e(chunkId, function() {
/******/ 				try {
/******/ 					callback.call(null, fn);
/******/ 				} finally {
/******/ 					finishChunkLoading();
/******/ 				}
/******/ 	
/******/ 				function finishChunkLoading() {
/******/ 					hotChunksLoading--;
/******/ 					if(hotStatus === "prepare") {
/******/ 						if(!hotWaitingFilesMap[chunkId]) {
/******/ 							hotEnsureUpdateChunk(chunkId);
/******/ 						}
/******/ 						if(hotChunksLoading === 0 && hotWaitingFiles === 0) {
/******/ 							hotUpdateDownloaded();
/******/ 						}
/******/ 					}
/******/ 				}
/******/ 			});
/******/ 		}
/******/ 		if(canDefineProperty) {
/******/ 			Object.defineProperty(fn, "e", {
/******/ 				enumerable: true,
/******/ 				value: ensure
/******/ 			});
/******/ 		} else {
/******/ 			fn.e = ensure;
/******/ 		}
/******/ 		return fn;
/******/ 	}
/******/ 	
/******/ 	function hotCreateModule(moduleId) { // eslint-disable-line no-unused-vars
/******/ 		var hot = {
/******/ 			// private stuff
/******/ 			_acceptedDependencies: {},
/******/ 			_declinedDependencies: {},
/******/ 			_selfAccepted: false,
/******/ 			_selfDeclined: false,
/******/ 			_disposeHandlers: [],
/******/ 	
/******/ 			// Module API
/******/ 			active: true,
/******/ 			accept: function(dep, callback) {
/******/ 				if(typeof dep === "undefined")
/******/ 					hot._selfAccepted = true;
/******/ 				else if(typeof dep === "function")
/******/ 					hot._selfAccepted = dep;
/******/ 				else if(typeof dep === "object")
/******/ 					for(var i = 0; i < dep.length; i++)
/******/ 						hot._acceptedDependencies[dep[i]] = callback;
/******/ 				else
/******/ 					hot._acceptedDependencies[dep] = callback;
/******/ 			},
/******/ 			decline: function(dep) {
/******/ 				if(typeof dep === "undefined")
/******/ 					hot._selfDeclined = true;
/******/ 				else if(typeof dep === "number")
/******/ 					hot._declinedDependencies[dep] = true;
/******/ 				else
/******/ 					for(var i = 0; i < dep.length; i++)
/******/ 						hot._declinedDependencies[dep[i]] = true;
/******/ 			},
/******/ 			dispose: function(callback) {
/******/ 				hot._disposeHandlers.push(callback);
/******/ 			},
/******/ 			addDisposeHandler: function(callback) {
/******/ 				hot._disposeHandlers.push(callback);
/******/ 			},
/******/ 			removeDisposeHandler: function(callback) {
/******/ 				var idx = hot._disposeHandlers.indexOf(callback);
/******/ 				if(idx >= 0) hot._disposeHandlers.splice(idx, 1);
/******/ 			},
/******/ 	
/******/ 			// Management API
/******/ 			check: hotCheck,
/******/ 			apply: hotApply,
/******/ 			status: function(l) {
/******/ 				if(!l) return hotStatus;
/******/ 				hotStatusHandlers.push(l);
/******/ 			},
/******/ 			addStatusHandler: function(l) {
/******/ 				hotStatusHandlers.push(l);
/******/ 			},
/******/ 			removeStatusHandler: function(l) {
/******/ 				var idx = hotStatusHandlers.indexOf(l);
/******/ 				if(idx >= 0) hotStatusHandlers.splice(idx, 1);
/******/ 			},
/******/ 	
/******/ 			//inherit from previous dispose call
/******/ 			data: hotCurrentModuleData[moduleId]
/******/ 		};
/******/ 		return hot;
/******/ 	}
/******/ 	
/******/ 	var hotStatusHandlers = [];
/******/ 	var hotStatus = "idle";
/******/ 	
/******/ 	function hotSetStatus(newStatus) {
/******/ 		hotStatus = newStatus;
/******/ 		for(var i = 0; i < hotStatusHandlers.length; i++)
/******/ 			hotStatusHandlers[i].call(null, newStatus);
/******/ 	}
/******/ 	
/******/ 	// while downloading
/******/ 	var hotWaitingFiles = 0;
/******/ 	var hotChunksLoading = 0;
/******/ 	var hotWaitingFilesMap = {};
/******/ 	var hotRequestedFilesMap = {};
/******/ 	var hotAvailibleFilesMap = {};
/******/ 	var hotCallback;
/******/ 	
/******/ 	// The update info
/******/ 	var hotUpdate, hotUpdateNewHash;
/******/ 	
/******/ 	function toModuleId(id) {
/******/ 		var isNumber = (+id) + "" === id;
/******/ 		return isNumber ? +id : id;
/******/ 	}
/******/ 	
/******/ 	function hotCheck(apply, callback) {
/******/ 		if(hotStatus !== "idle") throw new Error("check() is only allowed in idle status");
/******/ 		if(typeof apply === "function") {
/******/ 			hotApplyOnUpdate = false;
/******/ 			callback = apply;
/******/ 		} else {
/******/ 			hotApplyOnUpdate = apply;
/******/ 			callback = callback || function(err) {
/******/ 				if(err) throw err;
/******/ 			};
/******/ 		}
/******/ 		hotSetStatus("check");
/******/ 		hotDownloadManifest(function(err, update) {
/******/ 			if(err) return callback(err);
/******/ 			if(!update) {
/******/ 				hotSetStatus("idle");
/******/ 				callback(null, null);
/******/ 				return;
/******/ 			}
/******/ 	
/******/ 			hotRequestedFilesMap = {};
/******/ 			hotAvailibleFilesMap = {};
/******/ 			hotWaitingFilesMap = {};
/******/ 			for(var i = 0; i < update.c.length; i++)
/******/ 				hotAvailibleFilesMap[update.c[i]] = true;
/******/ 			hotUpdateNewHash = update.h;
/******/ 	
/******/ 			hotSetStatus("prepare");
/******/ 			hotCallback = callback;
/******/ 			hotUpdate = {};
/******/ 			var chunkId = 61;
/******/ 			{ // eslint-disable-line no-lone-blocks
/******/ 				/*globals chunkId */
/******/ 				hotEnsureUpdateChunk(chunkId);
/******/ 			}
/******/ 			if(hotStatus === "prepare" && hotChunksLoading === 0 && hotWaitingFiles === 0) {
/******/ 				hotUpdateDownloaded();
/******/ 			}
/******/ 		});
/******/ 	}
/******/ 	
/******/ 	function hotAddUpdateChunk(chunkId, moreModules) { // eslint-disable-line no-unused-vars
/******/ 		if(!hotAvailibleFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])
/******/ 			return;
/******/ 		hotRequestedFilesMap[chunkId] = false;
/******/ 		for(var moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				hotUpdate[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(--hotWaitingFiles === 0 && hotChunksLoading === 0) {
/******/ 			hotUpdateDownloaded();
/******/ 		}
/******/ 	}
/******/ 	
/******/ 	function hotEnsureUpdateChunk(chunkId) {
/******/ 		if(!hotAvailibleFilesMap[chunkId]) {
/******/ 			hotWaitingFilesMap[chunkId] = true;
/******/ 		} else {
/******/ 			hotRequestedFilesMap[chunkId] = true;
/******/ 			hotWaitingFiles++;
/******/ 			hotDownloadUpdateChunk(chunkId);
/******/ 		}
/******/ 	}
/******/ 	
/******/ 	function hotUpdateDownloaded() {
/******/ 		hotSetStatus("ready");
/******/ 		var callback = hotCallback;
/******/ 		hotCallback = null;
/******/ 		if(!callback) return;
/******/ 		if(hotApplyOnUpdate) {
/******/ 			hotApply(hotApplyOnUpdate, callback);
/******/ 		} else {
/******/ 			var outdatedModules = [];
/******/ 			for(var id in hotUpdate) {
/******/ 				if(Object.prototype.hasOwnProperty.call(hotUpdate, id)) {
/******/ 					outdatedModules.push(toModuleId(id));
/******/ 				}
/******/ 			}
/******/ 			callback(null, outdatedModules);
/******/ 		}
/******/ 	}
/******/ 	
/******/ 	function hotApply(options, callback) {
/******/ 		if(hotStatus !== "ready") throw new Error("apply() is only allowed in ready status");
/******/ 		if(typeof options === "function") {
/******/ 			callback = options;
/******/ 			options = {};
/******/ 		} else if(options && typeof options === "object") {
/******/ 			callback = callback || function(err) {
/******/ 				if(err) throw err;
/******/ 			};
/******/ 		} else {
/******/ 			options = {};
/******/ 			callback = callback || function(err) {
/******/ 				if(err) throw err;
/******/ 			};
/******/ 		}
/******/ 	
/******/ 		function getAffectedStuff(module) {
/******/ 			var outdatedModules = [module];
/******/ 			var outdatedDependencies = {};
/******/ 	
/******/ 			var queue = outdatedModules.slice();
/******/ 			while(queue.length > 0) {
/******/ 				var moduleId = queue.pop();
/******/ 				var module = installedModules[moduleId];
/******/ 				if(!module || module.hot._selfAccepted)
/******/ 					continue;
/******/ 				if(module.hot._selfDeclined) {
/******/ 					return new Error("Aborted because of self decline: " + moduleId);
/******/ 				}
/******/ 				if(moduleId === 0) {
/******/ 					return;
/******/ 				}
/******/ 				for(var i = 0; i < module.parents.length; i++) {
/******/ 					var parentId = module.parents[i];
/******/ 					var parent = installedModules[parentId];
/******/ 					if(parent.hot._declinedDependencies[moduleId]) {
/******/ 						return new Error("Aborted because of declined dependency: " + moduleId + " in " + parentId);
/******/ 					}
/******/ 					if(outdatedModules.indexOf(parentId) >= 0) continue;
/******/ 					if(parent.hot._acceptedDependencies[moduleId]) {
/******/ 						if(!outdatedDependencies[parentId])
/******/ 							outdatedDependencies[parentId] = [];
/******/ 						addAllToSet(outdatedDependencies[parentId], [moduleId]);
/******/ 						continue;
/******/ 					}
/******/ 					delete outdatedDependencies[parentId];
/******/ 					outdatedModules.push(parentId);
/******/ 					queue.push(parentId);
/******/ 				}
/******/ 			}
/******/ 	
/******/ 			return [outdatedModules, outdatedDependencies];
/******/ 		}
/******/ 	
/******/ 		function addAllToSet(a, b) {
/******/ 			for(var i = 0; i < b.length; i++) {
/******/ 				var item = b[i];
/******/ 				if(a.indexOf(item) < 0)
/******/ 					a.push(item);
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// at begin all updates modules are outdated
/******/ 		// the "outdated" status can propagate to parents if they don't accept the children
/******/ 		var outdatedDependencies = {};
/******/ 		var outdatedModules = [];
/******/ 		var appliedUpdate = {};
/******/ 		for(var id in hotUpdate) {
/******/ 			if(Object.prototype.hasOwnProperty.call(hotUpdate, id)) {
/******/ 				var moduleId = toModuleId(id);
/******/ 				var result = getAffectedStuff(moduleId);
/******/ 				if(!result) {
/******/ 					if(options.ignoreUnaccepted)
/******/ 						continue;
/******/ 					hotSetStatus("abort");
/******/ 					return callback(new Error("Aborted because " + moduleId + " is not accepted"));
/******/ 				}
/******/ 				if(result instanceof Error) {
/******/ 					hotSetStatus("abort");
/******/ 					return callback(result);
/******/ 				}
/******/ 				appliedUpdate[moduleId] = hotUpdate[moduleId];
/******/ 				addAllToSet(outdatedModules, result[0]);
/******/ 				for(var moduleId in result[1]) {
/******/ 					if(Object.prototype.hasOwnProperty.call(result[1], moduleId)) {
/******/ 						if(!outdatedDependencies[moduleId])
/******/ 							outdatedDependencies[moduleId] = [];
/******/ 						addAllToSet(outdatedDependencies[moduleId], result[1][moduleId]);
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// Store self accepted outdated modules to require them later by the module system
/******/ 		var outdatedSelfAcceptedModules = [];
/******/ 		for(var i = 0; i < outdatedModules.length; i++) {
/******/ 			var moduleId = outdatedModules[i];
/******/ 			if(installedModules[moduleId] && installedModules[moduleId].hot._selfAccepted)
/******/ 				outdatedSelfAcceptedModules.push({
/******/ 					module: moduleId,
/******/ 					errorHandler: installedModules[moduleId].hot._selfAccepted
/******/ 				});
/******/ 		}
/******/ 	
/******/ 		// Now in "dispose" phase
/******/ 		hotSetStatus("dispose");
/******/ 		var queue = outdatedModules.slice();
/******/ 		while(queue.length > 0) {
/******/ 			var moduleId = queue.pop();
/******/ 			var module = installedModules[moduleId];
/******/ 			if(!module) continue;
/******/ 	
/******/ 			var data = {};
/******/ 	
/******/ 			// Call dispose handlers
/******/ 			var disposeHandlers = module.hot._disposeHandlers;
/******/ 			for(var j = 0; j < disposeHandlers.length; j++) {
/******/ 				var cb = disposeHandlers[j];
/******/ 				cb(data);
/******/ 			}
/******/ 			hotCurrentModuleData[moduleId] = data;
/******/ 	
/******/ 			// disable module (this disables requires from this module)
/******/ 			module.hot.active = false;
/******/ 	
/******/ 			// remove module from cache
/******/ 			delete installedModules[moduleId];
/******/ 	
/******/ 			// remove "parents" references from all children
/******/ 			for(var j = 0; j < module.children.length; j++) {
/******/ 				var child = installedModules[module.children[j]];
/******/ 				if(!child) continue;
/******/ 				var idx = child.parents.indexOf(moduleId);
/******/ 				if(idx >= 0) {
/******/ 					child.parents.splice(idx, 1);
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// remove outdated dependency from module children
/******/ 		for(var moduleId in outdatedDependencies) {
/******/ 			if(Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {
/******/ 				var module = installedModules[moduleId];
/******/ 				var moduleOutdatedDependencies = outdatedDependencies[moduleId];
/******/ 				for(var j = 0; j < moduleOutdatedDependencies.length; j++) {
/******/ 					var dependency = moduleOutdatedDependencies[j];
/******/ 					var idx = module.children.indexOf(dependency);
/******/ 					if(idx >= 0) module.children.splice(idx, 1);
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// Not in "apply" phase
/******/ 		hotSetStatus("apply");
/******/ 	
/******/ 		hotCurrentHash = hotUpdateNewHash;
/******/ 	
/******/ 		// insert new code
/******/ 		for(var moduleId in appliedUpdate) {
/******/ 			if(Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {
/******/ 				modules[moduleId] = appliedUpdate[moduleId];
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// call accept handlers
/******/ 		var error = null;
/******/ 		for(var moduleId in outdatedDependencies) {
/******/ 			if(Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {
/******/ 				var module = installedModules[moduleId];
/******/ 				var moduleOutdatedDependencies = outdatedDependencies[moduleId];
/******/ 				var callbacks = [];
/******/ 				for(var i = 0; i < moduleOutdatedDependencies.length; i++) {
/******/ 					var dependency = moduleOutdatedDependencies[i];
/******/ 					var cb = module.hot._acceptedDependencies[dependency];
/******/ 					if(callbacks.indexOf(cb) >= 0) continue;
/******/ 					callbacks.push(cb);
/******/ 				}
/******/ 				for(var i = 0; i < callbacks.length; i++) {
/******/ 					var cb = callbacks[i];
/******/ 					try {
/******/ 						cb(outdatedDependencies);
/******/ 					} catch(err) {
/******/ 						if(!error)
/******/ 							error = err;
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// Load self accepted modules
/******/ 		for(var i = 0; i < outdatedSelfAcceptedModules.length; i++) {
/******/ 			var item = outdatedSelfAcceptedModules[i];
/******/ 			var moduleId = item.module;
/******/ 			hotCurrentParents = [moduleId];
/******/ 			try {
/******/ 				__webpack_require__(moduleId);
/******/ 			} catch(err) {
/******/ 				if(typeof item.errorHandler === "function") {
/******/ 					try {
/******/ 						item.errorHandler(err);
/******/ 					} catch(err) {
/******/ 						if(!error)
/******/ 							error = err;
/******/ 					}
/******/ 				} else if(!error)
/******/ 					error = err;
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// handle errors in accept handlers and self accepted module load
/******/ 		if(error) {
/******/ 			hotSetStatus("fail");
/******/ 			return callback(error);
/******/ 		}
/******/ 	
/******/ 		hotSetStatus("idle");
/******/ 		callback(null, outdatedModules);
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			hot: hotCreateModule(moduleId),
/******/ 			parents: hotCurrentParents,
/******/ 			children: []
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "./dist/";
/******/
/******/ 	// __webpack_hash__
/******/ 	__webpack_require__.h = function() { return hotCurrentHash; };
/******/
/******/ 	// Load entry module and return exports
/******/ 	return hotCreateRequire(0)(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/*!****************************************!*\
  !*** multi comprehensiveQualityReport ***!
  \****************************************/
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(/*! ./src/comprehensiveQualityReport.tsx */869);


/***/ },
/* 1 */,
/* 2 */,
/* 3 */,
/* 4 */,
/* 5 */,
/* 6 */,
/* 7 */,
/* 8 */,
/* 9 */,
/* 10 */,
/* 11 */,
/* 12 */,
/* 13 */,
/* 14 */,
/* 15 */,
/* 16 */,
/* 17 */,
/* 18 */,
/* 19 */,
/* 20 */,
/* 21 */,
/* 22 */,
/* 23 */,
/* 24 */,
/* 25 */,
/* 26 */,
/* 27 */,
/* 28 */,
/* 29 */,
/* 30 */,
/* 31 */,
/* 32 */,
/* 33 */,
/* 34 */,
/* 35 */,
/* 36 */,
/* 37 */,
/* 38 */,
/* 39 */,
/* 40 */,
/* 41 */,
/* 42 */,
/* 43 */,
/* 44 */,
/* 45 */,
/* 46 */,
/* 47 */,
/* 48 */,
/* 49 */,
/* 50 */,
/* 51 */,
/* 52 */,
/* 53 */,
/* 54 */,
/* 55 */,
/* 56 */,
/* 57 */,
/* 58 */,
/* 59 */,
/* 60 */,
/* 61 */,
/* 62 */,
/* 63 */,
/* 64 */,
/* 65 */,
/* 66 */,
/* 67 */,
/* 68 */,
/* 69 */,
/* 70 */,
/* 71 */,
/* 72 */,
/* 73 */,
/* 74 */,
/* 75 */,
/* 76 */,
/* 77 */,
/* 78 */,
/* 79 */,
/* 80 */,
/* 81 */,
/* 82 */,
/* 83 */,
/* 84 */,
/* 85 */,
/* 86 */,
/* 87 */,
/* 88 */,
/* 89 */,
/* 90 */,
/* 91 */,
/* 92 */,
/* 93 */
/*!**************************!*\
  !*** ./~/react/react.js ***!
  \**************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(/*! ./lib/React */ 94);


/***/ },
/* 94 */
/*!******************************!*\
  !*** ./~/react/lib/React.js ***!
  \******************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule React
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(/*! object-assign */ 96);
	
	var ReactChildren = __webpack_require__(/*! ./ReactChildren */ 97);
	var ReactComponent = __webpack_require__(/*! ./ReactComponent */ 109);
	var ReactClass = __webpack_require__(/*! ./ReactClass */ 112);
	var ReactDOMFactories = __webpack_require__(/*! ./ReactDOMFactories */ 117);
	var ReactElement = __webpack_require__(/*! ./ReactElement */ 101);
	var ReactPropTypes = __webpack_require__(/*! ./ReactPropTypes */ 122);
	var ReactVersion = __webpack_require__(/*! ./ReactVersion */ 123);
	
	var onlyChild = __webpack_require__(/*! ./onlyChild */ 124);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 103);
	
	var createElement = ReactElement.createElement;
	var createFactory = ReactElement.createFactory;
	var cloneElement = ReactElement.cloneElement;
	
	if (process.env.NODE_ENV !== 'production') {
	  var ReactElementValidator = __webpack_require__(/*! ./ReactElementValidator */ 119);
	  createElement = ReactElementValidator.createElement;
	  createFactory = ReactElementValidator.createFactory;
	  cloneElement = ReactElementValidator.cloneElement;
	}
	
	var __spread = _assign;
	
	if (process.env.NODE_ENV !== 'production') {
	  var warned = false;
	  __spread = function () {
	    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;
	    warned = true;
	    return _assign.apply(null, arguments);
	  };
	}
	
	var React = {
	
	  // Modern
	
	  Children: {
	    map: ReactChildren.map,
	    forEach: ReactChildren.forEach,
	    count: ReactChildren.count,
	    toArray: ReactChildren.toArray,
	    only: onlyChild
	  },
	
	  Component: ReactComponent,
	
	  createElement: createElement,
	  cloneElement: cloneElement,
	  isValidElement: ReactElement.isValidElement,
	
	  // Classic
	
	  PropTypes: ReactPropTypes,
	  createClass: ReactClass.createClass,
	  createFactory: createFactory,
	  createMixin: function (mixin) {
	    // Currently a noop. Will be used to validate and trace mixins.
	    return mixin;
	  },
	
	  // This looks DOM specific but these are actually isomorphic helpers
	  // since they are just generating DOM strings.
	  DOM: ReactDOMFactories,
	
	  version: ReactVersion,
	
	  // Deprecated hook for JSX spread, don't use this for anything.
	  __spread: __spread
	};
	
	module.exports = React;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 95 */
/*!******************************!*\
  !*** ./~/process/browser.js ***!
  \******************************/
/***/ function(module, exports) {

	// shim for using process in browser
	
	var process = module.exports = {};
	
	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.
	
	var cachedSetTimeout;
	var cachedClearTimeout;
	
	(function () {
	  try {
	    cachedSetTimeout = setTimeout;
	  } catch (e) {
	    cachedSetTimeout = function () {
	      throw new Error('setTimeout is not defined');
	    }
	  }
	  try {
	    cachedClearTimeout = clearTimeout;
	  } catch (e) {
	    cachedClearTimeout = function () {
	      throw new Error('clearTimeout is not defined');
	    }
	  }
	} ())
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;
	
	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}
	
	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = cachedSetTimeout(cleanUpNextTick);
	    draining = true;
	
	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    cachedClearTimeout(timeout);
	}
	
	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        cachedSetTimeout(drainQueue, 0);
	    }
	};
	
	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};
	
	function noop() {}
	
	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	
	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};
	
	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 96 */
/*!**********************************!*\
  !*** ./~/object-assign/index.js ***!
  \**********************************/
/***/ function(module, exports) {

	'use strict';
	/* eslint-disable no-unused-vars */
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;
	
	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}
	
		return Object(val);
	}
	
	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}
	
			// Detect buggy property enumeration order in older V8 versions.
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc');  // eslint-disable-line
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !==
					'abcdefghijklmnopqrst') {
				return false;
			}
	
			return true;
		} catch (e) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}
	
	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;
	
		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);
	
			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}
	
			if (Object.getOwnPropertySymbols) {
				symbols = Object.getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}
	
		return to;
	};


/***/ },
/* 97 */
/*!**************************************!*\
  !*** ./~/react/lib/ReactChildren.js ***!
  \**************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildren
	 */
	
	'use strict';
	
	var PooledClass = __webpack_require__(/*! ./PooledClass */ 98);
	var ReactElement = __webpack_require__(/*! ./ReactElement */ 101);
	
	var emptyFunction = __webpack_require__(/*! fbjs/lib/emptyFunction */ 104);
	var traverseAllChildren = __webpack_require__(/*! ./traverseAllChildren */ 106);
	
	var twoArgumentPooler = PooledClass.twoArgumentPooler;
	var fourArgumentPooler = PooledClass.fourArgumentPooler;
	
	var userProvidedKeyEscapeRegex = /\/+/g;
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
	}
	
	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * traversal. Allows avoiding binding callbacks.
	 *
	 * @constructor ForEachBookKeeping
	 * @param {!function} forEachFunction Function to perform traversal with.
	 * @param {?*} forEachContext Context to perform context with.
	 */
	function ForEachBookKeeping(forEachFunction, forEachContext) {
	  this.func = forEachFunction;
	  this.context = forEachContext;
	  this.count = 0;
	}
	ForEachBookKeeping.prototype.destructor = function () {
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);
	
	function forEachSingleChild(bookKeeping, child, name) {
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;
	
	  func.call(context, child, bookKeeping.count++);
	}
	
	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }
	  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  ForEachBookKeeping.release(traverseContext);
	}
	
	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * mapping. Allows avoiding binding callbacks.
	 *
	 * @constructor MapBookKeeping
	 * @param {!*} mapResult Object containing the ordered map of results.
	 * @param {!function} mapFunction Function to perform mapping with.
	 * @param {?*} mapContext Context to perform mapping with.
	 */
	function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
	  this.result = mapResult;
	  this.keyPrefix = keyPrefix;
	  this.func = mapFunction;
	  this.context = mapContext;
	  this.count = 0;
	}
	MapBookKeeping.prototype.destructor = function () {
	  this.result = null;
	  this.keyPrefix = null;
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);
	
	function mapSingleChildIntoContext(bookKeeping, child, childKey) {
	  var result = bookKeeping.result;
	  var keyPrefix = bookKeeping.keyPrefix;
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;
	
	
	  var mappedChild = func.call(context, child, bookKeeping.count++);
	  if (Array.isArray(mappedChild)) {
	    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
	  } else if (mappedChild != null) {
	    if (ReactElement.isValidElement(mappedChild)) {
	      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
	      // Keep both the (mapped) and old keys if they differ, just as
	      // traverseAllChildren used to do for objects as children
	      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
	    }
	    result.push(mappedChild);
	  }
	}
	
	function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
	  var escapedPrefix = '';
	  if (prefix != null) {
	    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
	  }
	  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  MapBookKeeping.release(traverseContext);
	}
	
	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func The map function.
	 * @param {*} context Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
	  return result;
	}
	
	function forEachSingleChildDummy(traverseContext, child, name) {
	  return null;
	}
	
	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children, context) {
	  return traverseAllChildren(children, forEachSingleChildDummy, null);
	}
	
	/**
	 * Flatten a children object (typically specified as `props.children`) and
	 * return an array with appropriately re-keyed children.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
	 */
	function toArray(children) {
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
	  return result;
	}
	
	var ReactChildren = {
	  forEach: forEachChildren,
	  map: mapChildren,
	  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
	  count: countChildren,
	  toArray: toArray
	};
	
	module.exports = ReactChildren;

/***/ },
/* 98 */
/*!************************************!*\
  !*** ./~/react/lib/PooledClass.js ***!
  \************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule PooledClass
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(/*! ./reactProdInvariant */ 99);
	
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 100);
	
	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};
	
	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};
	
	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};
	
	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};
	
	var fiveArgumentPooler = function (a1, a2, a3, a4, a5) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4, a5);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4, a5);
	  }
	};
	
	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};
	
	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;
	
	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances.
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function (CopyConstructor, pooler) {
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};
	
	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler,
	  fiveArgumentPooler: fiveArgumentPooler
	};
	
	module.exports = PooledClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 99 */
/*!*******************************************!*\
  !*** ./~/react/lib/reactProdInvariant.js ***!
  \*******************************************/
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule reactProdInvariant
	 * 
	 */
	'use strict';
	
	/**
	 * WARNING: DO NOT manually require this module.
	 * This is a replacement for `invariant(...)` used by the error code system
	 * and will _only_ be required by the corresponding babel pass.
	 * It always throws.
	 */
	
	function reactProdInvariant(code) {
	  var argCount = arguments.length - 1;
	
	  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;
	
	  for (var argIdx = 0; argIdx < argCount; argIdx++) {
	    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
	  }
	
	  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';
	
	  var error = new Error(message);
	  error.name = 'Invariant Violation';
	  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame
	
	  throw error;
	}
	
	module.exports = reactProdInvariant;

/***/ },
/* 100 */
/*!*****************************************!*\
  !*** ./~/react/~/fbjs/lib/invariant.js ***!
  \*****************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */
	
	function invariant(condition, format, a, b, c, d, e, f) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }
	
	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }
	
	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}
	
	module.exports = invariant;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 101 */
/*!*************************************!*\
  !*** ./~/react/lib/ReactElement.js ***!
  \*************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElement
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(/*! object-assign */ 96);
	
	var ReactCurrentOwner = __webpack_require__(/*! ./ReactCurrentOwner */ 102);
	
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 103);
	var canDefineProperty = __webpack_require__(/*! ./canDefineProperty */ 105);
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;
	
	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};
	
	var specialPropKeyWarningShown, specialPropRefWarningShown;
	
	function hasValidRef(config) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (hasOwnProperty.call(config, 'ref')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.ref !== undefined;
	}
	
	function hasValidKey(config) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (hasOwnProperty.call(config, 'key')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.key !== undefined;
	}
	
	/**
	 * Factory method to create a new React element. This no longer adheres to
	 * the class pattern, so do not use new to call it. Also, no instanceof check
	 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
	 * if something is a React Element.
	 *
	 * @param {*} type
	 * @param {*} key
	 * @param {string|object} ref
	 * @param {*} self A *temporary* helper to detect places where `this` is
	 * different from the `owner` when React.createElement is called, so that we
	 * can warn. We want to get rid of owner and replace string `ref`s with arrow
	 * functions, and as long as `this` and owner are the same, there will be no
	 * change in behavior.
	 * @param {*} source An annotation object (added by a transpiler or otherwise)
	 * indicating filename, line number, and/or other information.
	 * @param {*} owner
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function (type, key, ref, self, source, owner, props) {
	  var element = {
	    // This tag allow us to uniquely identify this as a React Element
	    $$typeof: REACT_ELEMENT_TYPE,
	
	    // Built-in properties that belong on the element
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,
	
	    // Record the component responsible for creating this element.
	    _owner: owner
	  };
	
	  if (process.env.NODE_ENV !== 'production') {
	    // The validation flag is currently mutative. We put it on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    element._store = {};
	
	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    if (canDefineProperty) {
	      Object.defineProperty(element._store, 'validated', {
	        configurable: false,
	        enumerable: false,
	        writable: true,
	        value: false
	      });
	      // self and source are DEV only properties.
	      Object.defineProperty(element, '_self', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: self
	      });
	      // Two elements created in two different places should be considered
	      // equal for testing purposes and therefore we hide it from enumeration.
	      Object.defineProperty(element, '_source', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: source
	      });
	    } else {
	      element._store.validated = false;
	      element._self = self;
	      element._source = source;
	    }
	    if (Object.freeze) {
	      Object.freeze(element.props);
	      Object.freeze(element);
	    }
	  }
	
	  return element;
	};
	
	/**
	 * Create and return a new ReactElement of the given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
	 */
	ReactElement.createElement = function (type, config, children) {
	  var propName;
	
	  // Reserved names are extracted
	  var props = {};
	
	  var key = null;
	  var ref = null;
	  var self = null;
	  var source = null;
	
	  if (config != null) {
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(
	      /* eslint-disable no-proto */
	      config.__proto__ == null || config.__proto__ === Object.prototype,
	      /* eslint-enable no-proto */
	      'React.createElement(...): Expected props argument to be a plain object. ' + 'Properties defined in its prototype chain will be ignored.') : void 0;
	    }
	
	    if (hasValidRef(config)) {
	      ref = config.ref;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }
	
	    self = config.__self === undefined ? null : config.__self;
	    source = config.__source === undefined ? null : config.__source;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }
	
	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }
	
	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (props[propName] === undefined) {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
	
	    // Create dummy `key` and `ref` property to `props` to warn users against its use
	    var warnAboutAccessingKey = function () {
	      if (!specialPropKeyWarningShown) {
	        specialPropKeyWarningShown = true;
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	      }
	      return undefined;
	    };
	    warnAboutAccessingKey.isReactWarning = true;
	
	    var warnAboutAccessingRef = function () {
	      if (!specialPropRefWarningShown) {
	        specialPropRefWarningShown = true;
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	      }
	      return undefined;
	    };
	    warnAboutAccessingRef.isReactWarning = true;
	
	    if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
	      if (!props.hasOwnProperty('key')) {
	        Object.defineProperty(props, 'key', {
	          get: warnAboutAccessingKey,
	          configurable: true
	        });
	      }
	      if (!props.hasOwnProperty('ref')) {
	        Object.defineProperty(props, 'ref', {
	          get: warnAboutAccessingRef,
	          configurable: true
	        });
	      }
	    }
	  }
	  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	};
	
	/**
	 * Return a function that produces ReactElements of a given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
	 */
	ReactElement.createFactory = function (type) {
	  var factory = ReactElement.createElement.bind(null, type);
	  // Expose the type on the factory and the prototype so that it can be
	  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
	  // This should not be named `constructor` since this may not be the function
	  // that created the element, and it may not even be a constructor.
	  // Legacy hook TODO: Warn if this is accessed
	  factory.type = type;
	  return factory;
	};
	
	ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
	  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
	
	  return newElement;
	};
	
	/**
	 * Clone and return a new ReactElement using element as the starting point.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
	 */
	ReactElement.cloneElement = function (element, config, children) {
	  var propName;
	
	  // Original props are copied
	  var props = _assign({}, element.props);
	
	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;
	  // Self is preserved since the owner is preserved.
	  var self = element._self;
	  // Source is preserved since cloneElement is unlikely to be targeted by a
	  // transpiler, and the original source is probably a better indicator of the
	  // true owner.
	  var source = element._source;
	
	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;
	
	  if (config != null) {
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(
	      /* eslint-disable no-proto */
	      config.__proto__ == null || config.__proto__ === Object.prototype,
	      /* eslint-enable no-proto */
	      'React.cloneElement(...): Expected props argument to be a plain object. ' + 'Properties defined in its prototype chain will be ignored.') : void 0;
	    }
	
	    if (hasValidRef(config)) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }
	
	    // Remaining properties override existing props
	    var defaultProps;
	    if (element.type && element.type.defaultProps) {
	      defaultProps = element.type.defaultProps;
	    }
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        if (config[propName] === undefined && defaultProps !== undefined) {
	          // Resolve default props
	          props[propName] = defaultProps[propName];
	        } else {
	          props[propName] = config[propName];
	        }
	      }
	    }
	  }
	
	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }
	
	  return ReactElement(element.type, key, ref, self, source, owner, props);
	};
	
	/**
	 * Verifies the object is a ReactElement.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	ReactElement.isValidElement = function (object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	};
	
	ReactElement.REACT_ELEMENT_TYPE = REACT_ELEMENT_TYPE;
	
	module.exports = ReactElement;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 102 */
/*!******************************************!*\
  !*** ./~/react/lib/ReactCurrentOwner.js ***!
  \******************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCurrentOwner
	 */
	
	'use strict';
	
	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 */
	
	var ReactCurrentOwner = {
	
	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null
	
	};
	
	module.exports = ReactCurrentOwner;

/***/ },
/* 103 */
/*!***************************************!*\
  !*** ./~/react/~/fbjs/lib/warning.js ***!
  \***************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var emptyFunction = __webpack_require__(/*! ./emptyFunction */ 104);
	
	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */
	
	var warning = emptyFunction;
	
	if (process.env.NODE_ENV !== 'production') {
	  warning = function warning(condition, format) {
	    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	      args[_key - 2] = arguments[_key];
	    }
	
	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }
	
	    if (format.indexOf('Failed Composite propType: ') === 0) {
	      return; // Ignore CompositeComponent proptype check.
	    }
	
	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // --- Welcome to debugging React ---
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch (x) {}
	    }
	  };
	}
	
	module.exports = warning;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 104 */
/*!*********************************************!*\
  !*** ./~/react/~/fbjs/lib/emptyFunction.js ***!
  \*********************************************/
/***/ function(module, exports) {

	"use strict";
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}
	
	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	var emptyFunction = function emptyFunction() {};
	
	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};
	
	module.exports = emptyFunction;

/***/ },
/* 105 */
/*!******************************************!*\
  !*** ./~/react/lib/canDefineProperty.js ***!
  \******************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule canDefineProperty
	 */
	
	'use strict';
	
	var canDefineProperty = false;
	if (process.env.NODE_ENV !== 'production') {
	  try {
	    Object.defineProperty({}, 'x', { get: function () {} });
	    canDefineProperty = true;
	  } catch (x) {
	    // IE will fail on defineProperty
	  }
	}
	
	module.exports = canDefineProperty;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 106 */
/*!********************************************!*\
  !*** ./~/react/lib/traverseAllChildren.js ***!
  \********************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule traverseAllChildren
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(/*! ./reactProdInvariant */ 99);
	
	var ReactCurrentOwner = __webpack_require__(/*! ./ReactCurrentOwner */ 102);
	var ReactElement = __webpack_require__(/*! ./ReactElement */ 101);
	
	var getIteratorFn = __webpack_require__(/*! ./getIteratorFn */ 107);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 100);
	var KeyEscapeUtils = __webpack_require__(/*! ./KeyEscapeUtils */ 108);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 103);
	
	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';
	
	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */
	
	var didWarnAboutMaps = false;
	
	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  // Do some typechecking here since we call this blindly. We want to ensure
	  // that we don't block potential future ES APIs.
	  if (component && typeof component === 'object' && component.key != null) {
	    // Explicit key
	    return KeyEscapeUtils.escape(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}
	
	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;
	
	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }
	
	  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }
	
	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;
	
	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.') : void 0;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (process.env.NODE_ENV !== 'production') {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
	    }
	  }
	
	  return subtreeCount;
	}
	
	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }
	
	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}
	
	module.exports = traverseAllChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 107 */
/*!**************************************!*\
  !*** ./~/react/lib/getIteratorFn.js ***!
  \**************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getIteratorFn
	 * 
	 */
	
	'use strict';
	
	/* global Symbol */
	
	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.
	
	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}
	
	module.exports = getIteratorFn;

/***/ },
/* 108 */
/*!***************************************!*\
  !*** ./~/react/lib/KeyEscapeUtils.js ***!
  \***************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule KeyEscapeUtils
	 * 
	 */
	
	'use strict';
	
	/**
	 * Escape and wrap key so it is safe to use as a reactid
	 *
	 * @param {string} key to be escaped.
	 * @return {string} the escaped key.
	 */
	
	function escape(key) {
	  var escapeRegex = /[=:]/g;
	  var escaperLookup = {
	    '=': '=0',
	    ':': '=2'
	  };
	  var escapedString = ('' + key).replace(escapeRegex, function (match) {
	    return escaperLookup[match];
	  });
	
	  return '$' + escapedString;
	}
	
	/**
	 * Unescape and unwrap key for human-readable display
	 *
	 * @param {string} key to unescape.
	 * @return {string} the unescaped key.
	 */
	function unescape(key) {
	  var unescapeRegex = /(=0|=2)/g;
	  var unescaperLookup = {
	    '=0': '=',
	    '=2': ':'
	  };
	  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);
	
	  return ('' + keySubstring).replace(unescapeRegex, function (match) {
	    return unescaperLookup[match];
	  });
	}
	
	var KeyEscapeUtils = {
	  escape: escape,
	  unescape: unescape
	};
	
	module.exports = KeyEscapeUtils;

/***/ },
/* 109 */
/*!***************************************!*\
  !*** ./~/react/lib/ReactComponent.js ***!
  \***************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponent
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(/*! ./reactProdInvariant */ 99);
	
	var ReactNoopUpdateQueue = __webpack_require__(/*! ./ReactNoopUpdateQueue */ 110);
	
	var canDefineProperty = __webpack_require__(/*! ./canDefineProperty */ 105);
	var emptyObject = __webpack_require__(/*! fbjs/lib/emptyObject */ 111);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 100);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 103);
	
	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactComponent(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}
	
	ReactComponent.prototype.isReactComponent = {};
	
	/**
	 * Sets a subset of the state. Always use this to mutate
	 * state. You should treat `this.state` as immutable.
	 *
	 * There is no guarantee that `this.state` will be immediately updated, so
	 * accessing `this.state` after calling this method may return the old value.
	 *
	 * There is no guarantee that calls to `setState` will run synchronously,
	 * as they may eventually be batched together.  You can provide an optional
	 * callback that will be executed when the call to setState is actually
	 * completed.
	 *
	 * When a function is provided to setState, it will be called at some point in
	 * the future (not synchronously). It will be called with the up to date
	 * component arguments (state, props, context). These values can be different
	 * from this.* because your function may be called after receiveProps but before
	 * shouldComponentUpdate, and this new state, props, and context will not yet be
	 * assigned to this.
	 *
	 * @param {object|function} partialState Next partial state or function to
	 *        produce next partial state to be merged with current state.
	 * @param {?function} callback Called after state is updated.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.setState = function (partialState, callback) {
	  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
	  this.updater.enqueueSetState(this, partialState);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'setState');
	  }
	};
	
	/**
	 * Forces an update. This should only be invoked when it is known with
	 * certainty that we are **not** in a DOM transaction.
	 *
	 * You may want to call this when you know that some deeper aspect of the
	 * component's state has changed but `setState` was not called.
	 *
	 * This will not invoke `shouldComponentUpdate`, but it will invoke
	 * `componentWillUpdate` and `componentDidUpdate`.
	 *
	 * @param {?function} callback Called after update is complete.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.forceUpdate = function (callback) {
	  this.updater.enqueueForceUpdate(this);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'forceUpdate');
	  }
	};
	
	/**
	 * Deprecated APIs. These APIs used to exist on classic React classes but since
	 * we would like to deprecate them, we're not going to move them over to this
	 * modern base class. Instead, we define a getter that warns if it's accessed.
	 */
	if (process.env.NODE_ENV !== 'production') {
	  var deprecatedAPIs = {
	    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
	    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
	  };
	  var defineDeprecationWarning = function (methodName, info) {
	    if (canDefineProperty) {
	      Object.defineProperty(ReactComponent.prototype, methodName, {
	        get: function () {
	          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;
	          return undefined;
	        }
	      });
	    }
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}
	
	module.exports = ReactComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 110 */
/*!*********************************************!*\
  !*** ./~/react/lib/ReactNoopUpdateQueue.js ***!
  \*********************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNoopUpdateQueue
	 */
	
	'use strict';
	
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 103);
	
	function warnNoop(publicInstance, callerName) {
	  if (process.env.NODE_ENV !== 'production') {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}
	
	/**
	 * This is the abstract API for an update queue.
	 */
	var ReactNoopUpdateQueue = {
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    return false;
	  },
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback) {},
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    warnNoop(publicInstance, 'forceUpdate');
	  },
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    warnNoop(publicInstance, 'replaceState');
	  },
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    warnNoop(publicInstance, 'setState');
	  }
	};
	
	module.exports = ReactNoopUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 111 */
/*!*******************************************!*\
  !*** ./~/react/~/fbjs/lib/emptyObject.js ***!
  \*******************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var emptyObject = {};
	
	if (process.env.NODE_ENV !== 'production') {
	  Object.freeze(emptyObject);
	}
	
	module.exports = emptyObject;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 112 */
/*!***********************************!*\
  !*** ./~/react/lib/ReactClass.js ***!
  \***********************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactClass
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(/*! ./reactProdInvariant */ 99),
	    _assign = __webpack_require__(/*! object-assign */ 96);
	
	var ReactComponent = __webpack_require__(/*! ./ReactComponent */ 109);
	var ReactElement = __webpack_require__(/*! ./ReactElement */ 101);
	var ReactPropTypeLocations = __webpack_require__(/*! ./ReactPropTypeLocations */ 113);
	var ReactPropTypeLocationNames = __webpack_require__(/*! ./ReactPropTypeLocationNames */ 115);
	var ReactNoopUpdateQueue = __webpack_require__(/*! ./ReactNoopUpdateQueue */ 110);
	
	var emptyObject = __webpack_require__(/*! fbjs/lib/emptyObject */ 111);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 100);
	var keyMirror = __webpack_require__(/*! fbjs/lib/keyMirror */ 114);
	var keyOf = __webpack_require__(/*! fbjs/lib/keyOf */ 116);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 103);
	
	var MIXINS_KEY = keyOf({ mixins: null });
	
	/**
	 * Policies that describe methods in `ReactClassInterface`.
	 */
	var SpecPolicy = keyMirror({
	  /**
	   * These methods may be defined only once by the class specification or mixin.
	   */
	  DEFINE_ONCE: null,
	  /**
	   * These methods may be defined by both the class specification and mixins.
	   * Subsequent definitions will be chained. These methods must return void.
	   */
	  DEFINE_MANY: null,
	  /**
	   * These methods are overriding the base class.
	   */
	  OVERRIDE_BASE: null,
	  /**
	   * These methods are similar to DEFINE_MANY, except we assume they return
	   * objects. We try to merge the keys of the return values of all the mixed in
	   * functions. If there is a key conflict we throw.
	   */
	  DEFINE_MANY_MERGED: null
	});
	
	var injectedMixins = [];
	
	/**
	 * Composite components are higher-level components that compose other composite
	 * or host components.
	 *
	 * To create a new type of `ReactClass`, pass a specification of
	 * your new class to `React.createClass`. The only requirement of your class
	 * specification is that you implement a `render` method.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return <div>Hello World</div>;
	 *     }
	 *   });
	 *
	 * The class specification supports a specific protocol of methods that have
	 * special meaning (e.g. `render`). See `ReactClassInterface` for
	 * more the comprehensive protocol. Any other properties and methods in the
	 * class specification will be available on the prototype.
	 *
	 * @interface ReactClassInterface
	 * @internal
	 */
	var ReactClassInterface = {
	
	  /**
	   * An array of Mixin objects to include when defining your component.
	   *
	   * @type {array}
	   * @optional
	   */
	  mixins: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * An object containing properties and methods that should be defined on
	   * the component's constructor instead of its prototype (static methods).
	   *
	   * @type {object}
	   * @optional
	   */
	  statics: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Definition of prop types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  propTypes: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Definition of context types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  contextTypes: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Definition of context types this component sets for its children.
	   *
	   * @type {object}
	   * @optional
	   */
	  childContextTypes: SpecPolicy.DEFINE_MANY,
	
	  // ==== Definition methods ====
	
	  /**
	   * Invoked when the component is mounted. Values in the mapping will be set on
	   * `this.props` if that prop is not specified (i.e. using an `in` check).
	   *
	   * This method is invoked before `getInitialState` and therefore cannot rely
	   * on `this.state` or use `this.setState`.
	   *
	   * @return {object}
	   * @optional
	   */
	  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,
	
	  /**
	   * Invoked once before the component is mounted. The return value will be used
	   * as the initial value of `this.state`.
	   *
	   *   getInitialState: function() {
	   *     return {
	   *       isOn: false,
	   *       fooBaz: new BazFoo()
	   *     }
	   *   }
	   *
	   * @return {object}
	   * @optional
	   */
	  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,
	
	  /**
	   * @return {object}
	   * @optional
	   */
	  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,
	
	  /**
	   * Uses props from `this.props` and state from `this.state` to render the
	   * structure of the component.
	   *
	   * No guarantees are made about when or how often this method is invoked, so
	   * it must not have side effects.
	   *
	   *   render: function() {
	   *     var name = this.props.name;
	   *     return <div>Hello, {name}!</div>;
	   *   }
	   *
	   * @return {ReactComponent}
	   * @nosideeffects
	   * @required
	   */
	  render: SpecPolicy.DEFINE_ONCE,
	
	  // ==== Delegate methods ====
	
	  /**
	   * Invoked when the component is initially created and about to be mounted.
	   * This may have side effects, but any external subscriptions or data created
	   * by this method must be cleaned up in `componentWillUnmount`.
	   *
	   * @optional
	   */
	  componentWillMount: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked when the component has been mounted and has a DOM representation.
	   * However, there is no guarantee that the DOM node is in the document.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been mounted (initialized and rendered) for the first time.
	   *
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidMount: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked before the component receives new props.
	   *
	   * Use this as an opportunity to react to a prop transition by updating the
	   * state using `this.setState`. Current props are accessed via `this.props`.
	   *
	   *   componentWillReceiveProps: function(nextProps, nextContext) {
	   *     this.setState({
	   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	   *     });
	   *   }
	   *
	   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	   * transition may cause a state change, but the opposite is not true. If you
	   * need it, you are probably looking for `componentWillUpdate`.
	   *
	   * @param {object} nextProps
	   * @optional
	   */
	  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked while deciding if the component should be updated as a result of
	   * receiving new props, state and/or context.
	   *
	   * Use this as an opportunity to `return false` when you're certain that the
	   * transition to the new props/state/context will not require a component
	   * update.
	   *
	   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	   *     return !equal(nextProps, this.props) ||
	   *       !equal(nextState, this.state) ||
	   *       !equal(nextContext, this.context);
	   *   }
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @return {boolean} True if the component should update.
	   * @optional
	   */
	  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,
	
	  /**
	   * Invoked when the component is about to update due to a transition from
	   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	   * and `nextContext`.
	   *
	   * Use this as an opportunity to perform preparation before an update occurs.
	   *
	   * NOTE: You **cannot** use `this.setState()` in this method.
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @param {ReactReconcileTransaction} transaction
	   * @optional
	   */
	  componentWillUpdate: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked when the component's DOM representation has been updated.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been updated.
	   *
	   * @param {object} prevProps
	   * @param {?object} prevState
	   * @param {?object} prevContext
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidUpdate: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked when the component is about to be removed from its parent and have
	   * its DOM representation destroyed.
	   *
	   * Use this as an opportunity to deallocate any external resources.
	   *
	   * NOTE: There is no `componentDidUnmount` since your component will have been
	   * destroyed by that point.
	   *
	   * @optional
	   */
	  componentWillUnmount: SpecPolicy.DEFINE_MANY,
	
	  // ==== Advanced methods ====
	
	  /**
	   * Updates the component's currently mounted DOM representation.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   * @overridable
	   */
	  updateComponent: SpecPolicy.OVERRIDE_BASE
	
	};
	
	/**
	 * Mapping from class specification keys to special processing functions.
	 *
	 * Although these are declared like instance properties in the specification
	 * when defining classes using `React.createClass`, they are actually static
	 * and are accessible on the constructor instead of the prototype. Despite
	 * being static, they must be defined outside of the "statics" key under
	 * which all other static methods are defined.
	 */
	var RESERVED_SPEC_KEYS = {
	  displayName: function (Constructor, displayName) {
	    Constructor.displayName = displayName;
	  },
	  mixins: function (Constructor, mixins) {
	    if (mixins) {
	      for (var i = 0; i < mixins.length; i++) {
	        mixSpecIntoComponent(Constructor, mixins[i]);
	      }
	    }
	  },
	  childContextTypes: function (Constructor, childContextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, childContextTypes, ReactPropTypeLocations.childContext);
	    }
	    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);
	  },
	  contextTypes: function (Constructor, contextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, contextTypes, ReactPropTypeLocations.context);
	    }
	    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);
	  },
	  /**
	   * Special case getDefaultProps which should move into statics but requires
	   * automatic merging.
	   */
	  getDefaultProps: function (Constructor, getDefaultProps) {
	    if (Constructor.getDefaultProps) {
	      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
	    } else {
	      Constructor.getDefaultProps = getDefaultProps;
	    }
	  },
	  propTypes: function (Constructor, propTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, propTypes, ReactPropTypeLocations.prop);
	    }
	    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
	  },
	  statics: function (Constructor, statics) {
	    mixStaticSpecIntoComponent(Constructor, statics);
	  },
	  autobind: function () {} };
	
	// noop
	function validateTypeDef(Constructor, typeDef, location) {
	  for (var propName in typeDef) {
	    if (typeDef.hasOwnProperty(propName)) {
	      // use a warning instead of an invariant so components
	      // don't show up in prod but only in __DEV__
	      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;
	    }
	  }
	}
	
	function validateMethodOverride(isAlreadyDefined, name) {
	  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;
	
	  // Disallow overriding of base class methods unless explicitly allowed.
	  if (ReactClassMixin.hasOwnProperty(name)) {
	    !(specPolicy === SpecPolicy.OVERRIDE_BASE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;
	  }
	
	  // Disallow defining methods more than once unless explicitly allowed.
	  if (isAlreadyDefined) {
	    !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;
	  }
	}
	
	/**
	 * Mixin helper which handles policy validation and reserved
	 * specification keys when building React classes.
	 */
	function mixSpecIntoComponent(Constructor, spec) {
	  if (!spec) {
	    return;
	  }
	
	  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;
	  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;
	
	  var proto = Constructor.prototype;
	  var autoBindPairs = proto.__reactAutoBindPairs;
	
	  // By handling mixins before any other properties, we ensure the same
	  // chaining order is applied to methods with DEFINE_MANY policy, whether
	  // mixins are listed before or after these methods in the spec.
	  if (spec.hasOwnProperty(MIXINS_KEY)) {
	    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	  }
	
	  for (var name in spec) {
	    if (!spec.hasOwnProperty(name)) {
	      continue;
	    }
	
	    if (name === MIXINS_KEY) {
	      // We have already handled mixins in a special case above.
	      continue;
	    }
	
	    var property = spec[name];
	    var isAlreadyDefined = proto.hasOwnProperty(name);
	    validateMethodOverride(isAlreadyDefined, name);
	
	    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	      RESERVED_SPEC_KEYS[name](Constructor, property);
	    } else {
	      // Setup methods on prototype:
	      // The following member methods should not be automatically bound:
	      // 1. Expected ReactClass methods (in the "interface").
	      // 2. Overridden methods (that were mixed in).
	      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
	      var isFunction = typeof property === 'function';
	      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;
	
	      if (shouldAutoBind) {
	        autoBindPairs.push(name, property);
	        proto[name] = property;
	      } else {
	        if (isAlreadyDefined) {
	          var specPolicy = ReactClassInterface[name];
	
	          // These cases should already be caught by validateMethodOverride.
	          !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;
	
	          // For methods which are defined more than once, call the existing
	          // methods before calling the new property, merging if appropriate.
	          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
	            proto[name] = createMergedResultFunction(proto[name], property);
	          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
	            proto[name] = createChainedFunction(proto[name], property);
	          }
	        } else {
	          proto[name] = property;
	          if (process.env.NODE_ENV !== 'production') {
	            // Add verbose displayName to the function, which helps when looking
	            // at profiling tools.
	            if (typeof property === 'function' && spec.displayName) {
	              proto[name].displayName = spec.displayName + '_' + name;
	            }
	          }
	        }
	      }
	    }
	  }
	}
	
	function mixStaticSpecIntoComponent(Constructor, statics) {
	  if (!statics) {
	    return;
	  }
	  for (var name in statics) {
	    var property = statics[name];
	    if (!statics.hasOwnProperty(name)) {
	      continue;
	    }
	
	    var isReserved = name in RESERVED_SPEC_KEYS;
	    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;
	
	    var isInherited = name in Constructor;
	    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;
	    Constructor[name] = property;
	  }
	}
	
	/**
	 * Merge two objects, but throw if both contain the same key.
	 *
	 * @param {object} one The first object, which is mutated.
	 * @param {object} two The second object
	 * @return {object} one after it has been mutated to contain everything in two.
	 */
	function mergeIntoWithNoDuplicateKeys(one, two) {
	  !(one && two && typeof one === 'object' && typeof two === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;
	
	  for (var key in two) {
	    if (two.hasOwnProperty(key)) {
	      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;
	      one[key] = two[key];
	    }
	  }
	  return one;
	}
	
	/**
	 * Creates a function that invokes two functions and merges their return values.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createMergedResultFunction(one, two) {
	  return function mergedResult() {
	    var a = one.apply(this, arguments);
	    var b = two.apply(this, arguments);
	    if (a == null) {
	      return b;
	    } else if (b == null) {
	      return a;
	    }
	    var c = {};
	    mergeIntoWithNoDuplicateKeys(c, a);
	    mergeIntoWithNoDuplicateKeys(c, b);
	    return c;
	  };
	}
	
	/**
	 * Creates a function that invokes two functions and ignores their return vales.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createChainedFunction(one, two) {
	  return function chainedFunction() {
	    one.apply(this, arguments);
	    two.apply(this, arguments);
	  };
	}
	
	/**
	 * Binds a method to the component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 * @param {function} method Method to be bound.
	 * @return {function} The bound method.
	 */
	function bindAutoBindMethod(component, method) {
	  var boundMethod = method.bind(component);
	  if (process.env.NODE_ENV !== 'production') {
	    boundMethod.__reactBoundContext = component;
	    boundMethod.__reactBoundMethod = method;
	    boundMethod.__reactBoundArguments = null;
	    var componentName = component.constructor.displayName;
	    var _bind = boundMethod.bind;
	    boundMethod.bind = function (newThis) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }
	
	      // User is trying to bind() an autobound method; we effectively will
	      // ignore the value of "this" that the user is trying to use, so
	      // let's warn.
	      if (newThis !== component && newThis !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;
	      } else if (!args.length) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;
	        return boundMethod;
	      }
	      var reboundMethod = _bind.apply(boundMethod, arguments);
	      reboundMethod.__reactBoundContext = component;
	      reboundMethod.__reactBoundMethod = method;
	      reboundMethod.__reactBoundArguments = args;
	      return reboundMethod;
	    };
	  }
	  return boundMethod;
	}
	
	/**
	 * Binds all auto-bound methods in a component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 */
	function bindAutoBindMethods(component) {
	  var pairs = component.__reactAutoBindPairs;
	  for (var i = 0; i < pairs.length; i += 2) {
	    var autoBindKey = pairs[i];
	    var method = pairs[i + 1];
	    component[autoBindKey] = bindAutoBindMethod(component, method);
	  }
	}
	
	/**
	 * Add more to the ReactClass base class. These are all legacy features and
	 * therefore not already part of the modern ReactComponent.
	 */
	var ReactClassMixin = {
	
	  /**
	   * TODO: This will be deprecated because state should always keep a consistent
	   * type signature and the only use case for this, is to avoid that.
	   */
	  replaceState: function (newState, callback) {
	    this.updater.enqueueReplaceState(this, newState);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback, 'replaceState');
	    }
	  },
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function () {
	    return this.updater.isMounted(this);
	  }
	};
	
	var ReactClassComponent = function () {};
	_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);
	
	/**
	 * Module for creating composite components.
	 *
	 * @class ReactClass
	 */
	var ReactClass = {
	
	  /**
	   * Creates a composite component class given a class specification.
	   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */
	  createClass: function (spec) {
	    var Constructor = function (props, context, updater) {
	      // This constructor gets overridden by mocks. The argument is used
	      // by mocks to assert on what gets mounted.
	
	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;
	      }
	
	      // Wire up auto-binding
	      if (this.__reactAutoBindPairs.length) {
	        bindAutoBindMethods(this);
	      }
	
	      this.props = props;
	      this.context = context;
	      this.refs = emptyObject;
	      this.updater = updater || ReactNoopUpdateQueue;
	
	      this.state = null;
	
	      // ReactClasses doesn't have constructors. Instead, they use the
	      // getInitialState and componentWillMount methods for initialization.
	
	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if (process.env.NODE_ENV !== 'production') {
	        // We allow auto-mocks to proceed as if they're returning null.
	        if (initialState === undefined && this.getInitialState._isMockFunction) {
	          // This is probably bad practice. Consider warning here and
	          // deprecating this convenience.
	          initialState = null;
	        }
	      }
	      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;
	
	      this.state = initialState;
	    };
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;
	    Constructor.prototype.__reactAutoBindPairs = [];
	
	    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));
	
	    mixSpecIntoComponent(Constructor, spec);
	
	    // Initialize the defaultProps property after all mixins have been merged.
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      // This is a tag to indicate that the use of these method names is ok,
	      // since it's used with createClass. If it's not, then it's likely a
	      // mistake so we'll warn you to use the static property, property
	      // initializer or constructor respectively.
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }
	
	    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;
	
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;
	    }
	
	    // Reduce time spent doing lookups by setting these on the prototype.
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }
	
	    return Constructor;
	  },
	
	  injection: {
	    injectMixin: function (mixin) {
	      injectedMixins.push(mixin);
	    }
	  }
	
	};
	
	module.exports = ReactClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 113 */
/*!***********************************************!*\
  !*** ./~/react/lib/ReactPropTypeLocations.js ***!
  \***********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocations
	 */
	
	'use strict';
	
	var keyMirror = __webpack_require__(/*! fbjs/lib/keyMirror */ 114);
	
	var ReactPropTypeLocations = keyMirror({
	  prop: null,
	  context: null,
	  childContext: null
	});
	
	module.exports = ReactPropTypeLocations;

/***/ },
/* 114 */
/*!*****************************************!*\
  !*** ./~/react/~/fbjs/lib/keyMirror.js ***!
  \*****************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(/*! ./invariant */ 100);
	
	/**
	 * Constructs an enumeration with keys equal to their value.
	 *
	 * For example:
	 *
	 *   var COLORS = keyMirror({blue: null, red: null});
	 *   var myColor = COLORS.blue;
	 *   var isColorValid = !!COLORS[myColor];
	 *
	 * The last line could not be performed if the values of the generated enum were
	 * not equal to their keys.
	 *
	 *   Input:  {key1: val1, key2: val2}
	 *   Output: {key1: key1, key2: key2}
	 *
	 * @param {object} obj
	 * @return {object}
	 */
	var keyMirror = function keyMirror(obj) {
	  var ret = {};
	  var key;
	  !(obj instanceof Object && !Array.isArray(obj)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : void 0;
	  for (key in obj) {
	    if (!obj.hasOwnProperty(key)) {
	      continue;
	    }
	    ret[key] = key;
	  }
	  return ret;
	};
	
	module.exports = keyMirror;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 115 */
/*!***************************************************!*\
  !*** ./~/react/lib/ReactPropTypeLocationNames.js ***!
  \***************************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocationNames
	 */
	
	'use strict';
	
	var ReactPropTypeLocationNames = {};
	
	if (process.env.NODE_ENV !== 'production') {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}
	
	module.exports = ReactPropTypeLocationNames;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 116 */
/*!*************************************!*\
  !*** ./~/react/~/fbjs/lib/keyOf.js ***!
  \*************************************/
/***/ function(module, exports) {

	"use strict";
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	/**
	 * Allows extraction of a minified key. Let's the build system minify keys
	 * without losing the ability to dynamically use key strings as values
	 * themselves. Pass in an object with a single key/val pair and it will return
	 * you the string key of that single record. Suppose you want to grab the
	 * value for a key 'className' inside of an object. Key/val minification may
	 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
	 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
	 * reuse those resolutions.
	 */
	var keyOf = function keyOf(oneKeyObj) {
	  var key;
	  for (key in oneKeyObj) {
	    if (!oneKeyObj.hasOwnProperty(key)) {
	      continue;
	    }
	    return key;
	  }
	  return null;
	};
	
	module.exports = keyOf;

/***/ },
/* 117 */
/*!******************************************!*\
  !*** ./~/react/lib/ReactDOMFactories.js ***!
  \******************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFactories
	 */
	
	'use strict';
	
	var ReactElement = __webpack_require__(/*! ./ReactElement */ 101);
	
	var mapObject = __webpack_require__(/*! fbjs/lib/mapObject */ 118);
	
	/**
	 * Create a factory that creates HTML tag elements.
	 *
	 * @param {string} tag Tag name (e.g. `div`).
	 * @private
	 */
	function createDOMFactory(tag) {
	  if (process.env.NODE_ENV !== 'production') {
	    var ReactElementValidator = __webpack_require__(/*! ./ReactElementValidator */ 119);
	    return ReactElementValidator.createFactory(tag);
	  }
	  return ReactElement.createFactory(tag);
	}
	
	/**
	 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
	 * This is also accessible via `React.DOM`.
	 *
	 * @public
	 */
	var ReactDOMFactories = mapObject({
	  a: 'a',
	  abbr: 'abbr',
	  address: 'address',
	  area: 'area',
	  article: 'article',
	  aside: 'aside',
	  audio: 'audio',
	  b: 'b',
	  base: 'base',
	  bdi: 'bdi',
	  bdo: 'bdo',
	  big: 'big',
	  blockquote: 'blockquote',
	  body: 'body',
	  br: 'br',
	  button: 'button',
	  canvas: 'canvas',
	  caption: 'caption',
	  cite: 'cite',
	  code: 'code',
	  col: 'col',
	  colgroup: 'colgroup',
	  data: 'data',
	  datalist: 'datalist',
	  dd: 'dd',
	  del: 'del',
	  details: 'details',
	  dfn: 'dfn',
	  dialog: 'dialog',
	  div: 'div',
	  dl: 'dl',
	  dt: 'dt',
	  em: 'em',
	  embed: 'embed',
	  fieldset: 'fieldset',
	  figcaption: 'figcaption',
	  figure: 'figure',
	  footer: 'footer',
	  form: 'form',
	  h1: 'h1',
	  h2: 'h2',
	  h3: 'h3',
	  h4: 'h4',
	  h5: 'h5',
	  h6: 'h6',
	  head: 'head',
	  header: 'header',
	  hgroup: 'hgroup',
	  hr: 'hr',
	  html: 'html',
	  i: 'i',
	  iframe: 'iframe',
	  img: 'img',
	  input: 'input',
	  ins: 'ins',
	  kbd: 'kbd',
	  keygen: 'keygen',
	  label: 'label',
	  legend: 'legend',
	  li: 'li',
	  link: 'link',
	  main: 'main',
	  map: 'map',
	  mark: 'mark',
	  menu: 'menu',
	  menuitem: 'menuitem',
	  meta: 'meta',
	  meter: 'meter',
	  nav: 'nav',
	  noscript: 'noscript',
	  object: 'object',
	  ol: 'ol',
	  optgroup: 'optgroup',
	  option: 'option',
	  output: 'output',
	  p: 'p',
	  param: 'param',
	  picture: 'picture',
	  pre: 'pre',
	  progress: 'progress',
	  q: 'q',
	  rp: 'rp',
	  rt: 'rt',
	  ruby: 'ruby',
	  s: 's',
	  samp: 'samp',
	  script: 'script',
	  section: 'section',
	  select: 'select',
	  small: 'small',
	  source: 'source',
	  span: 'span',
	  strong: 'strong',
	  style: 'style',
	  sub: 'sub',
	  summary: 'summary',
	  sup: 'sup',
	  table: 'table',
	  tbody: 'tbody',
	  td: 'td',
	  textarea: 'textarea',
	  tfoot: 'tfoot',
	  th: 'th',
	  thead: 'thead',
	  time: 'time',
	  title: 'title',
	  tr: 'tr',
	  track: 'track',
	  u: 'u',
	  ul: 'ul',
	  'var': 'var',
	  video: 'video',
	  wbr: 'wbr',
	
	  // SVG
	  circle: 'circle',
	  clipPath: 'clipPath',
	  defs: 'defs',
	  ellipse: 'ellipse',
	  g: 'g',
	  image: 'image',
	  line: 'line',
	  linearGradient: 'linearGradient',
	  mask: 'mask',
	  path: 'path',
	  pattern: 'pattern',
	  polygon: 'polygon',
	  polyline: 'polyline',
	  radialGradient: 'radialGradient',
	  rect: 'rect',
	  stop: 'stop',
	  svg: 'svg',
	  text: 'text',
	  tspan: 'tspan'
	
	}, createDOMFactory);
	
	module.exports = ReactDOMFactories;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 118 */
/*!*****************************************!*\
  !*** ./~/react/~/fbjs/lib/mapObject.js ***!
  \*****************************************/
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	/**
	 * Executes the provided `callback` once for each enumerable own property in the
	 * object and constructs a new object from the results. The `callback` is
	 * invoked with three arguments:
	 *
	 *  - the property value
	 *  - the property name
	 *  - the object being traversed
	 *
	 * Properties that are added after the call to `mapObject` will not be visited
	 * by `callback`. If the values of existing properties are changed, the value
	 * passed to `callback` will be the value at the time `mapObject` visits them.
	 * Properties that are deleted before being visited are not visited.
	 *
	 * @grep function objectMap()
	 * @grep function objMap()
	 *
	 * @param {?object} object
	 * @param {function} callback
	 * @param {*} context
	 * @return {?object}
	 */
	function mapObject(object, callback, context) {
	  if (!object) {
	    return null;
	  }
	  var result = {};
	  for (var name in object) {
	    if (hasOwnProperty.call(object, name)) {
	      result[name] = callback.call(context, object[name], name, object);
	    }
	  }
	  return result;
	}
	
	module.exports = mapObject;

/***/ },
/* 119 */
/*!**********************************************!*\
  !*** ./~/react/lib/ReactElementValidator.js ***!
  \**********************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElementValidator
	 */
	
	/**
	 * ReactElementValidator provides a wrapper around a element factory
	 * which validates the props passed to the element. This is intended to be
	 * used only in DEV and could be replaced by a static type checker for languages
	 * that support it.
	 */
	
	'use strict';
	
	var ReactCurrentOwner = __webpack_require__(/*! ./ReactCurrentOwner */ 102);
	var ReactComponentTreeDevtool = __webpack_require__(/*! ./ReactComponentTreeDevtool */ 120);
	var ReactElement = __webpack_require__(/*! ./ReactElement */ 101);
	var ReactPropTypeLocations = __webpack_require__(/*! ./ReactPropTypeLocations */ 113);
	
	var checkReactTypeSpec = __webpack_require__(/*! ./checkReactTypeSpec */ 121);
	
	var canDefineProperty = __webpack_require__(/*! ./canDefineProperty */ 105);
	var getIteratorFn = __webpack_require__(/*! ./getIteratorFn */ 107);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 103);
	
	function getDeclarationErrorAddendum() {
	  if (ReactCurrentOwner.current) {
	    var name = ReactCurrentOwner.current.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	/**
	 * Warn if there's no key explicitly set on dynamic arrays of children or
	 * object keys are not valid. This allows us to keep track of children between
	 * updates.
	 */
	var ownerHasKeyUseWarning = {};
	
	function getCurrentComponentErrorInfo(parentType) {
	  var info = getDeclarationErrorAddendum();
	
	  if (!info) {
	    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
	    if (parentName) {
	      info = ' Check the top-level render call using <' + parentName + '>.';
	    }
	  }
	  return info;
	}
	
	/**
	 * Warn if the element doesn't have an explicit key assigned to it.
	 * This element is in an array. The array could grow and shrink or be
	 * reordered. All children that haven't already been validated are required to
	 * have a "key" property assigned to it. Error statuses are cached so a warning
	 * will only be shown once.
	 *
	 * @internal
	 * @param {ReactElement} element Element that requires a key.
	 * @param {*} parentType element's parent's type.
	 */
	function validateExplicitKey(element, parentType) {
	  if (!element._store || element._store.validated || element.key != null) {
	    return;
	  }
	  element._store.validated = true;
	
	  var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});
	
	  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
	  if (memoizer[currentComponentErrorInfo]) {
	    return;
	  }
	  memoizer[currentComponentErrorInfo] = true;
	
	  // Usually the current owner is the offender, but if it accepts children as a
	  // property, it may be the creator of the child that's responsible for
	  // assigning it a key.
	  var childOwner = '';
	  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
	    // Give the component that originally created this child.
	    childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
	  }
	
	  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, ReactComponentTreeDevtool.getCurrentStackAddendum(element)) : void 0;
	}
	
	/**
	 * Ensure that every element either is passed in a static location, in an
	 * array with an explicit keys property defined, or in an object literal
	 * with valid key property.
	 *
	 * @internal
	 * @param {ReactNode} node Statically passed child of any type.
	 * @param {*} parentType node's parent's type.
	 */
	function validateChildKeys(node, parentType) {
	  if (typeof node !== 'object') {
	    return;
	  }
	  if (Array.isArray(node)) {
	    for (var i = 0; i < node.length; i++) {
	      var child = node[i];
	      if (ReactElement.isValidElement(child)) {
	        validateExplicitKey(child, parentType);
	      }
	    }
	  } else if (ReactElement.isValidElement(node)) {
	    // This element was passed in a valid location.
	    if (node._store) {
	      node._store.validated = true;
	    }
	  } else if (node) {
	    var iteratorFn = getIteratorFn(node);
	    // Entry iterators provide implicit keys.
	    if (iteratorFn) {
	      if (iteratorFn !== node.entries) {
	        var iterator = iteratorFn.call(node);
	        var step;
	        while (!(step = iterator.next()).done) {
	          if (ReactElement.isValidElement(step.value)) {
	            validateExplicitKey(step.value, parentType);
	          }
	        }
	      }
	    }
	  }
	}
	
	/**
	 * Given an element, validate that its props follow the propTypes definition,
	 * provided by the type.
	 *
	 * @param {ReactElement} element
	 */
	function validatePropTypes(element) {
	  var componentClass = element.type;
	  if (typeof componentClass !== 'function') {
	    return;
	  }
	  var name = componentClass.displayName || componentClass.name;
	  if (componentClass.propTypes) {
	    checkReactTypeSpec(componentClass.propTypes, element.props, ReactPropTypeLocations.prop, name, element, null);
	  }
	  if (typeof componentClass.getDefaultProps === 'function') {
	    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
	  }
	}
	
	var ReactElementValidator = {
	
	  createElement: function (type, props, children) {
	    var validType = typeof type === 'string' || typeof type === 'function';
	    // We warn in this case but don't throw. We expect the element creation to
	    // succeed and there will likely be errors in render.
	    process.env.NODE_ENV !== 'production' ? warning(validType, 'React.createElement: type should not be null, undefined, boolean, or ' + 'number. It should be a string (for DOM elements) or a ReactClass ' + '(for composite components).%s', getDeclarationErrorAddendum()) : void 0;
	
	    var element = ReactElement.createElement.apply(this, arguments);
	
	    // The result can be nullish if a mock or a custom function is used.
	    // TODO: Drop this when these are no longer allowed as the type argument.
	    if (element == null) {
	      return element;
	    }
	
	    // Skip key warning if the type isn't valid since our key validation logic
	    // doesn't expect a non-string/function type and can throw confusing errors.
	    // We don't want exception behavior to differ between dev and prod.
	    // (Rendering will throw with a helpful message and as soon as the type is
	    // fixed, the key warnings will appear.)
	    if (validType) {
	      for (var i = 2; i < arguments.length; i++) {
	        validateChildKeys(arguments[i], type);
	      }
	    }
	
	    validatePropTypes(element);
	
	    return element;
	  },
	
	  createFactory: function (type) {
	    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
	    // Legacy hook TODO: Warn if this is accessed
	    validatedFactory.type = type;
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (canDefineProperty) {
	        Object.defineProperty(validatedFactory, 'type', {
	          enumerable: false,
	          get: function () {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : void 0;
	            Object.defineProperty(this, 'type', {
	              value: type
	            });
	            return type;
	          }
	        });
	      }
	    }
	
	    return validatedFactory;
	  },
	
	  cloneElement: function (element, props, children) {
	    var newElement = ReactElement.cloneElement.apply(this, arguments);
	    for (var i = 2; i < arguments.length; i++) {
	      validateChildKeys(arguments[i], newElement.type);
	    }
	    validatePropTypes(newElement);
	    return newElement;
	  }
	
	};
	
	module.exports = ReactElementValidator;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 120 */
/*!**************************************************!*\
  !*** ./~/react/lib/ReactComponentTreeDevtool.js ***!
  \**************************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentTreeDevtool
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(/*! ./reactProdInvariant */ 99);
	
	var ReactCurrentOwner = __webpack_require__(/*! ./ReactCurrentOwner */ 102);
	
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 100);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 103);
	
	var tree = {};
	var unmountedIDs = {};
	var rootIDs = {};
	
	function updateTree(id, update) {
	  if (!tree[id]) {
	    tree[id] = {
	      element: null,
	      parentID: null,
	      ownerID: null,
	      text: null,
	      childIDs: [],
	      displayName: 'Unknown',
	      isMounted: false,
	      updateCount: 0
	    };
	  }
	  update(tree[id]);
	}
	
	function purgeDeep(id) {
	  var item = tree[id];
	  if (item) {
	    var childIDs = item.childIDs;
	
	    delete tree[id];
	    childIDs.forEach(purgeDeep);
	  }
	}
	
	function describeComponentFrame(name, source, ownerName) {
	  return '\n    in ' + name + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
	}
	
	function describeID(id) {
	  var name = ReactComponentTreeDevtool.getDisplayName(id);
	  var element = ReactComponentTreeDevtool.getElement(id);
	  var ownerID = ReactComponentTreeDevtool.getOwnerID(id);
	  var ownerName;
	  if (ownerID) {
	    ownerName = ReactComponentTreeDevtool.getDisplayName(ownerID);
	  }
	  process.env.NODE_ENV !== 'production' ? warning(element, 'ReactComponentTreeDevtool: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
	  return describeComponentFrame(name, element && element._source, ownerName);
	}
	
	var ReactComponentTreeDevtool = {
	  onSetDisplayName: function (id, displayName) {
	    updateTree(id, function (item) {
	      return item.displayName = displayName;
	    });
	  },
	  onSetChildren: function (id, nextChildIDs) {
	    updateTree(id, function (item) {
	      item.childIDs = nextChildIDs;
	
	      nextChildIDs.forEach(function (nextChildID) {
	        var nextChild = tree[nextChildID];
	        !nextChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected devtool events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('68') : void 0;
	        !(nextChild.displayName != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetDisplayName() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('69') : void 0;
	        !(nextChild.childIDs != null || nextChild.text != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetChildren() or onSetText() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('70') : void 0;
	        !nextChild.isMounted ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
	        if (nextChild.parentID == null) {
	          nextChild.parentID = id;
	          // TODO: This shouldn't be necessary but mounting a new root during in
	          // componentWillMount currently causes not-yet-mounted components to
	          // be purged from our tree data so their parent ID is missing.
	        }
	        !(nextChild.parentID === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetParent() and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('72', nextChildID, nextChild.parentID, id) : void 0;
	      });
	    });
	  },
	  onSetOwner: function (id, ownerID) {
	    updateTree(id, function (item) {
	      return item.ownerID = ownerID;
	    });
	  },
	  onSetParent: function (id, parentID) {
	    updateTree(id, function (item) {
	      return item.parentID = parentID;
	    });
	  },
	  onSetText: function (id, text) {
	    updateTree(id, function (item) {
	      return item.text = text;
	    });
	  },
	  onBeforeMountComponent: function (id, element) {
	    updateTree(id, function (item) {
	      return item.element = element;
	    });
	  },
	  onBeforeUpdateComponent: function (id, element) {
	    updateTree(id, function (item) {
	      return item.element = element;
	    });
	  },
	  onMountComponent: function (id) {
	    updateTree(id, function (item) {
	      return item.isMounted = true;
	    });
	  },
	  onMountRootComponent: function (id) {
	    rootIDs[id] = true;
	  },
	  onUpdateComponent: function (id) {
	    updateTree(id, function (item) {
	      return item.updateCount++;
	    });
	  },
	  onUnmountComponent: function (id) {
	    updateTree(id, function (item) {
	      return item.isMounted = false;
	    });
	    unmountedIDs[id] = true;
	    delete rootIDs[id];
	  },
	  purgeUnmountedComponents: function () {
	    if (ReactComponentTreeDevtool._preventPurging) {
	      // Should only be used for testing.
	      return;
	    }
	
	    for (var id in unmountedIDs) {
	      purgeDeep(id);
	    }
	    unmountedIDs = {};
	  },
	  isMounted: function (id) {
	    var item = tree[id];
	    return item ? item.isMounted : false;
	  },
	  getCurrentStackAddendum: function (topElement) {
	    var info = '';
	    if (topElement) {
	      var type = topElement.type;
	      var name = typeof type === 'function' ? type.displayName || type.name : type;
	      var owner = topElement._owner;
	      info += describeComponentFrame(name || 'Unknown', topElement._source, owner && owner.getName());
	    }
	
	    var currentOwner = ReactCurrentOwner.current;
	    var id = currentOwner && currentOwner._debugID;
	
	    info += ReactComponentTreeDevtool.getStackAddendumByID(id);
	    return info;
	  },
	  getStackAddendumByID: function (id) {
	    var info = '';
	    while (id) {
	      info += describeID(id);
	      id = ReactComponentTreeDevtool.getParentID(id);
	    }
	    return info;
	  },
	  getChildIDs: function (id) {
	    var item = tree[id];
	    return item ? item.childIDs : [];
	  },
	  getDisplayName: function (id) {
	    var item = tree[id];
	    return item ? item.displayName : 'Unknown';
	  },
	  getElement: function (id) {
	    var item = tree[id];
	    return item ? item.element : null;
	  },
	  getOwnerID: function (id) {
	    var item = tree[id];
	    return item ? item.ownerID : null;
	  },
	  getParentID: function (id) {
	    var item = tree[id];
	    return item ? item.parentID : null;
	  },
	  getSource: function (id) {
	    var item = tree[id];
	    var element = item ? item.element : null;
	    var source = element != null ? element._source : null;
	    return source;
	  },
	  getText: function (id) {
	    var item = tree[id];
	    return item ? item.text : null;
	  },
	  getUpdateCount: function (id) {
	    var item = tree[id];
	    return item ? item.updateCount : 0;
	  },
	  getRootIDs: function () {
	    return Object.keys(rootIDs);
	  },
	  getRegisteredIDs: function () {
	    return Object.keys(tree);
	  }
	};
	
	module.exports = ReactComponentTreeDevtool;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 121 */
/*!*******************************************!*\
  !*** ./~/react/lib/checkReactTypeSpec.js ***!
  \*******************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule checkReactTypeSpec
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(/*! ./reactProdInvariant */ 99);
	
	var ReactPropTypeLocationNames = __webpack_require__(/*! ./ReactPropTypeLocationNames */ 115);
	
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 100);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 103);
	
	var loggedTypeFailures = {};
	
	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?object} element The React element that is being type-checked
	 * @param {?number} debugID The React component instance that is being type-checked
	 * @private
	 */
	function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
	  for (var typeSpecName in typeSpecs) {
	    if (typeSpecs.hasOwnProperty(typeSpecName)) {
	      var error;
	      // Prop type validation may throw. In case they do, we don't want to
	      // fail the render phase where it didn't fail before. So we log it.
	      // After these have been cleaned up, we'll let them throw.
	      try {
	        // This is intentionally an invariant that gets caught. It's the same
	        // behavior as without this statement except with a better message.
	        !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
	        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location);
	      } catch (ex) {
	        error = ex;
	      }
	      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;
	
	        var componentStackInfo = '';
	
	        if (process.env.NODE_ENV !== 'production') {
	          var ReactComponentTreeDevtool = __webpack_require__(/*! ./ReactComponentTreeDevtool */ 120);
	          if (debugID !== null) {
	            componentStackInfo = ReactComponentTreeDevtool.getStackAddendumByID(debugID);
	          } else if (element !== null) {
	            componentStackInfo = ReactComponentTreeDevtool.getCurrentStackAddendum(element);
	          }
	        }
	
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
	      }
	    }
	  }
	}
	
	module.exports = checkReactTypeSpec;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 122 */
/*!***************************************!*\
  !*** ./~/react/lib/ReactPropTypes.js ***!
  \***************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypes
	 */
	
	'use strict';
	
	var ReactElement = __webpack_require__(/*! ./ReactElement */ 101);
	var ReactPropTypeLocationNames = __webpack_require__(/*! ./ReactPropTypeLocationNames */ 115);
	
	var emptyFunction = __webpack_require__(/*! fbjs/lib/emptyFunction */ 104);
	var getIteratorFn = __webpack_require__(/*! ./getIteratorFn */ 107);
	
	/**
	 * Collection of methods that allow declaration and validation of props that are
	 * supplied to React components. Example usage:
	 *
	 *   var Props = require('ReactPropTypes');
	 *   var MyArticle = React.createClass({
	 *     propTypes: {
	 *       // An optional string prop named "description".
	 *       description: Props.string,
	 *
	 *       // A required enum prop named "category".
	 *       category: Props.oneOf(['News','Photos']).isRequired,
	 *
	 *       // A prop named "dialog" that requires an instance of Dialog.
	 *       dialog: Props.instanceOf(Dialog).isRequired
	 *     },
	 *     render: function() { ... }
	 *   });
	 *
	 * A more formal specification of how these methods are used:
	 *
	 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	 *   decl := ReactPropTypes.{type}(.isRequired)?
	 *
	 * Each and every declaration produces a function with the same signature. This
	 * allows the creation of custom validation functions. For example:
	 *
	 *  var MyLink = React.createClass({
	 *    propTypes: {
	 *      // An optional string or URI prop named "href".
	 *      href: function(props, propName, componentName) {
	 *        var propValue = props[propName];
	 *        if (propValue != null && typeof propValue !== 'string' &&
	 *            !(propValue instanceof URI)) {
	 *          return new Error(
	 *            'Expected a string or an URI for ' + propName + ' in ' +
	 *            componentName
	 *          );
	 *        }
	 *      }
	 *    },
	 *    render: function() {...}
	 *  });
	 *
	 * @internal
	 */
	
	var ANONYMOUS = '<<anonymous>>';
	
	var ReactPropTypes = {
	  array: createPrimitiveTypeChecker('array'),
	  bool: createPrimitiveTypeChecker('boolean'),
	  func: createPrimitiveTypeChecker('function'),
	  number: createPrimitiveTypeChecker('number'),
	  object: createPrimitiveTypeChecker('object'),
	  string: createPrimitiveTypeChecker('string'),
	  symbol: createPrimitiveTypeChecker('symbol'),
	
	  any: createAnyTypeChecker(),
	  arrayOf: createArrayOfTypeChecker,
	  element: createElementTypeChecker(),
	  instanceOf: createInstanceTypeChecker,
	  node: createNodeChecker(),
	  objectOf: createObjectOfTypeChecker,
	  oneOf: createEnumTypeChecker,
	  oneOfType: createUnionTypeChecker,
	  shape: createShapeTypeChecker
	};
	
	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	/*eslint-disable no-self-compare*/
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}
	/*eslint-enable no-self-compare*/
	
	function createChainableTypeChecker(validate) {
	  function checkType(isRequired, props, propName, componentName, location, propFullName) {
	    componentName = componentName || ANONYMOUS;
	    propFullName = propFullName || propName;
	    if (props[propName] == null) {
	      var locationName = ReactPropTypeLocationNames[location];
	      if (isRequired) {
	        return new Error('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));
	      }
	      return null;
	    } else {
	      return validate(props, propName, componentName, location, propFullName);
	    }
	  }
	
	  var chainedCheckType = checkType.bind(null, false);
	  chainedCheckType.isRequired = checkType.bind(null, true);
	
	  return chainedCheckType;
	}
	
	function createPrimitiveTypeChecker(expectedType) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== expectedType) {
	      var locationName = ReactPropTypeLocationNames[location];
	      // `propValue` being instance of, say, date/regexp, pass the 'object'
	      // check, but we can offer a more precise error message here rather than
	      // 'of type `object`'.
	      var preciseType = getPreciseType(propValue);
	
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createAnyTypeChecker() {
	  return createChainableTypeChecker(emptyFunction.thatReturns(null));
	}
	
	function createArrayOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new Error('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
	    }
	    var propValue = props[propName];
	    if (!Array.isArray(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	    }
	    for (var i = 0; i < propValue.length; i++) {
	      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']');
	      if (error instanceof Error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createElementTypeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!ReactElement.isValidElement(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a single ReactElement.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createInstanceTypeChecker(expectedClass) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!(props[propName] instanceof expectedClass)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var expectedClassName = expectedClass.name || ANONYMOUS;
	      var actualClassName = getClassName(props[propName]);
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createEnumTypeChecker(expectedValues) {
	  if (!Array.isArray(expectedValues)) {
	    return createChainableTypeChecker(function () {
	      return new Error('Invalid argument supplied to oneOf, expected an instance of array.');
	    });
	  }
	
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    for (var i = 0; i < expectedValues.length; i++) {
	      if (is(propValue, expectedValues[i])) {
	        return null;
	      }
	    }
	
	    var locationName = ReactPropTypeLocationNames[location];
	    var valuesString = JSON.stringify(expectedValues);
	    return new Error('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createObjectOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new Error('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
	    }
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	    }
	    for (var key in propValue) {
	      if (propValue.hasOwnProperty(key)) {
	        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createUnionTypeChecker(arrayOfTypeCheckers) {
	  if (!Array.isArray(arrayOfTypeCheckers)) {
	    return createChainableTypeChecker(function () {
	      return new Error('Invalid argument supplied to oneOfType, expected an instance of array.');
	    });
	  }
	
	  function validate(props, propName, componentName, location, propFullName) {
	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (checker(props, propName, componentName, location, propFullName) == null) {
	        return null;
	      }
	    }
	
	    var locationName = ReactPropTypeLocationNames[location];
	    return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createNodeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!isNode(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createShapeTypeChecker(shapeTypes) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	    }
	    for (var key in shapeTypes) {
	      var checker = shapeTypes[key];
	      if (!checker) {
	        continue;
	      }
	      var error = checker(propValue, key, componentName, location, propFullName + '.' + key);
	      if (error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function isNode(propValue) {
	  switch (typeof propValue) {
	    case 'number':
	    case 'string':
	    case 'undefined':
	      return true;
	    case 'boolean':
	      return !propValue;
	    case 'object':
	      if (Array.isArray(propValue)) {
	        return propValue.every(isNode);
	      }
	      if (propValue === null || ReactElement.isValidElement(propValue)) {
	        return true;
	      }
	
	      var iteratorFn = getIteratorFn(propValue);
	      if (iteratorFn) {
	        var iterator = iteratorFn.call(propValue);
	        var step;
	        if (iteratorFn !== propValue.entries) {
	          while (!(step = iterator.next()).done) {
	            if (!isNode(step.value)) {
	              return false;
	            }
	          }
	        } else {
	          // Iterator will provide entry [k,v] tuples rather than values.
	          while (!(step = iterator.next()).done) {
	            var entry = step.value;
	            if (entry) {
	              if (!isNode(entry[1])) {
	                return false;
	              }
	            }
	          }
	        }
	      } else {
	        return false;
	      }
	
	      return true;
	    default:
	      return false;
	  }
	}
	
	function isSymbol(propType, propValue) {
	  // Native Symbol.
	  if (propType === 'symbol') {
	    return true;
	  }
	
	  // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
	  if (propValue['@@toStringTag'] === 'Symbol') {
	    return true;
	  }
	
	  // Fallback for non-spec compliant Symbols which are polyfilled.
	  if (typeof Symbol === 'function' && propValue instanceof Symbol) {
	    return true;
	  }
	
	  return false;
	}
	
	// Equivalent of `typeof` but with special handling for array and regexp.
	function getPropType(propValue) {
	  var propType = typeof propValue;
	  if (Array.isArray(propValue)) {
	    return 'array';
	  }
	  if (propValue instanceof RegExp) {
	    // Old webkits (at least until Android 4.0) return 'function' rather than
	    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	    // passes PropTypes.object.
	    return 'object';
	  }
	  if (isSymbol(propType, propValue)) {
	    return 'symbol';
	  }
	  return propType;
	}
	
	// This handles more types than `getPropType`. Only used for error messages.
	// See `createPrimitiveTypeChecker`.
	function getPreciseType(propValue) {
	  var propType = getPropType(propValue);
	  if (propType === 'object') {
	    if (propValue instanceof Date) {
	      return 'date';
	    } else if (propValue instanceof RegExp) {
	      return 'regexp';
	    }
	  }
	  return propType;
	}
	
	// Returns class name of the object, if any.
	function getClassName(propValue) {
	  if (!propValue.constructor || !propValue.constructor.name) {
	    return ANONYMOUS;
	  }
	  return propValue.constructor.name;
	}
	
	module.exports = ReactPropTypes;

/***/ },
/* 123 */
/*!*************************************!*\
  !*** ./~/react/lib/ReactVersion.js ***!
  \*************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactVersion
	 */
	
	'use strict';
	
	module.exports = '15.2.1';

/***/ },
/* 124 */
/*!**********************************!*\
  !*** ./~/react/lib/onlyChild.js ***!
  \**********************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule onlyChild
	 */
	'use strict';
	
	var _prodInvariant = __webpack_require__(/*! ./reactProdInvariant */ 99);
	
	var ReactElement = __webpack_require__(/*! ./ReactElement */ 101);
	
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 100);
	
	/**
	 * Returns the first child in a collection of children and verifies that there
	 * is only one child in the collection.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
	 *
	 * The current implementation of this function assumes that a single child gets
	 * passed without a wrapper, but the purpose of this helper function is to
	 * abstract away the particular structure of children.
	 *
	 * @param {?object} children Child collection structure.
	 * @return {ReactElement} The first and only `ReactElement` contained in the
	 * structure.
	 */
	function onlyChild(children) {
	  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'onlyChild must be passed a children with exactly one child.') : _prodInvariant('23') : void 0;
	  return children;
	}
	
	module.exports = onlyChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 125 */
/*!******************************!*\
  !*** ./~/react-dom/index.js ***!
  \******************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(/*! react/lib/ReactDOM */ 126);


/***/ },
/* 126 */
/*!*********************************!*\
  !*** ./~/react/lib/ReactDOM.js ***!
  \*********************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOM
	 */
	
	/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/
	
	'use strict';
	
	var ReactDOMComponentTree = __webpack_require__(/*! ./ReactDOMComponentTree */ 127);
	var ReactDefaultInjection = __webpack_require__(/*! ./ReactDefaultInjection */ 130);
	var ReactMount = __webpack_require__(/*! ./ReactMount */ 256);
	var ReactReconciler = __webpack_require__(/*! ./ReactReconciler */ 150);
	var ReactUpdates = __webpack_require__(/*! ./ReactUpdates */ 147);
	var ReactVersion = __webpack_require__(/*! ./ReactVersion */ 123);
	
	var findDOMNode = __webpack_require__(/*! ./findDOMNode */ 261);
	var getHostComponentFromComposite = __webpack_require__(/*! ./getHostComponentFromComposite */ 262);
	var renderSubtreeIntoContainer = __webpack_require__(/*! ./renderSubtreeIntoContainer */ 263);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 103);
	
	ReactDefaultInjection.inject();
	
	var React = {
	  findDOMNode: findDOMNode,
	  render: ReactMount.render,
	  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
	  version: ReactVersion,
	
	  /* eslint-disable camelcase */
	  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
	  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
	};
	
	// Inject the runtime into a devtools global hook regardless of browser.
	// Allows for debugging when the hook is injected on the page.
	/* eslint-enable camelcase */
	if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
	  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
	    ComponentTree: {
	      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
	      getNodeFromInstance: function (inst) {
	        // inst is an internal instance (but could be a composite)
	        if (inst._renderedComponent) {
	          inst = getHostComponentFromComposite(inst);
	        }
	        if (inst) {
	          return ReactDOMComponentTree.getNodeFromInstance(inst);
	        } else {
	          return null;
	        }
	      }
	    },
	    Mount: ReactMount,
	    Reconciler: ReactReconciler
	  });
	}
	
	if (process.env.NODE_ENV !== 'production') {
	  var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 140);
	  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {
	
	    // First check if devtools is not installed
	    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
	      // If we're in Chrome or Firefox, provide a download link if not installed.
	      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
	        // Firefox does not have the issue with devtools loaded over file://
	        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
	        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
	      }
	    }
	
	    var testFunc = function testFn() {};
	    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;
	
	    // If we're in IE8, check to see if we are in compatibility mode and provide
	    // information on preventing compatibility mode
	    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;
	
	    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;
	
	    var expectedFeatures = [
	    // shims
	    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim];
	
	    for (var i = 0; i < expectedFeatures.length; i++) {
	      if (!expectedFeatures[i]) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
	        break;
	      }
	    }
	  }
	}
	
	module.exports = React;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 127 */
/*!**********************************************!*\
  !*** ./~/react/lib/ReactDOMComponentTree.js ***!
  \**********************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponentTree
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(/*! ./reactProdInvariant */ 99);
	
	var DOMProperty = __webpack_require__(/*! ./DOMProperty */ 128);
	var ReactDOMComponentFlags = __webpack_require__(/*! ./ReactDOMComponentFlags */ 129);
	
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 100);
	
	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var Flags = ReactDOMComponentFlags;
	
	var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);
	
	/**
	 * Drill down (through composites and empty components) until we get a host or
	 * host text component.
	 *
	 * This is pretty polymorphic but unavoidable with the current structure we have
	 * for `_renderedChildren`.
	 */
	function getRenderedHostOrTextFromComponent(component) {
	  var rendered;
	  while (rendered = component._renderedComponent) {
	    component = rendered;
	  }
	  return component;
	}
	
	/**
	 * Populate `_hostNode` on the rendered host/text component with the given
	 * DOM node. The passed `inst` can be a composite.
	 */
	function precacheNode(inst, node) {
	  var hostInst = getRenderedHostOrTextFromComponent(inst);
	  hostInst._hostNode = node;
	  node[internalInstanceKey] = hostInst;
	}
	
	function uncacheNode(inst) {
	  var node = inst._hostNode;
	  if (node) {
	    delete node[internalInstanceKey];
	    inst._hostNode = null;
	  }
	}
	
	/**
	 * Populate `_hostNode` on each child of `inst`, assuming that the children
	 * match up with the DOM (element) children of `node`.
	 *
	 * We cache entire levels at once to avoid an n^2 problem where we access the
	 * children of a node sequentially and have to walk from the start to our target
	 * node every time.
	 *
	 * Since we update `_renderedChildren` and the actual DOM at (slightly)
	 * different times, we could race here and see a newer `_renderedChildren` than
	 * the DOM nodes we see. To avoid this, ReactMultiChild calls
	 * `prepareToManageChildren` before we change `_renderedChildren`, at which
	 * time the container's child nodes are always cached (until it unmounts).
	 */
	function precacheChildNodes(inst, node) {
	  if (inst._flags & Flags.hasCachedChildNodes) {
	    return;
	  }
	  var children = inst._renderedChildren;
	  var childNode = node.firstChild;
	  outer: for (var name in children) {
	    if (!children.hasOwnProperty(name)) {
	      continue;
	    }
	    var childInst = children[name];
	    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
	    if (childID == null) {
	      // We're currently unmounting this child in ReactMultiChild; skip it.
	      continue;
	    }
	    // We assume the child nodes are in the same order as the child instances.
	    for (; childNode !== null; childNode = childNode.nextSibling) {
	      if (childNode.nodeType === 1 && childNode.getAttribute(ATTR_NAME) === String(childID) || childNode.nodeType === 8 && childNode.nodeValue === ' react-text: ' + childID + ' ' || childNode.nodeType === 8 && childNode.nodeValue === ' react-empty: ' + childID + ' ') {
	        precacheNode(childInst, childNode);
	        continue outer;
	      }
	    }
	    // We reached the end of the DOM children without finding an ID match.
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
	  }
	  inst._flags |= Flags.hasCachedChildNodes;
	}
	
	/**
	 * Given a DOM node, return the closest ReactDOMComponent or
	 * ReactDOMTextComponent instance ancestor.
	 */
	function getClosestInstanceFromNode(node) {
	  if (node[internalInstanceKey]) {
	    return node[internalInstanceKey];
	  }
	
	  // Walk up the tree until we find an ancestor whose instance we have cached.
	  var parents = [];
	  while (!node[internalInstanceKey]) {
	    parents.push(node);
	    if (node.parentNode) {
	      node = node.parentNode;
	    } else {
	      // Top of the tree. This node must not be part of a React tree (or is
	      // unmounted, potentially).
	      return null;
	    }
	  }
	
	  var closest;
	  var inst;
	  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
	    closest = inst;
	    if (parents.length) {
	      precacheChildNodes(inst, node);
	    }
	  }
	
	  return closest;
	}
	
	/**
	 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
	 * instance, or null if the node was not rendered by this React.
	 */
	function getInstanceFromNode(node) {
	  var inst = getClosestInstanceFromNode(node);
	  if (inst != null && inst._hostNode === node) {
	    return inst;
	  } else {
	    return null;
	  }
	}
	
	/**
	 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
	 * DOM node.
	 */
	function getNodeFromInstance(inst) {
	  // Without this first invariant, passing a non-DOM-component triggers the next
	  // invariant for a missing parent, which is super confusing.
	  !(inst._hostNode !== undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	
	  if (inst._hostNode) {
	    return inst._hostNode;
	  }
	
	  // Walk up the tree until we find an ancestor whose DOM node we have cached.
	  var parents = [];
	  while (!inst._hostNode) {
	    parents.push(inst);
	    !inst._hostParent ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
	    inst = inst._hostParent;
	  }
	
	  // Now parents contains each ancestor that does *not* have a cached native
	  // node, and `inst` is the deepest ancestor that does.
	  for (; parents.length; inst = parents.pop()) {
	    precacheChildNodes(inst, inst._hostNode);
	  }
	
	  return inst._hostNode;
	}
	
	var ReactDOMComponentTree = {
	  getClosestInstanceFromNode: getClosestInstanceFromNode,
	  getInstanceFromNode: getInstanceFromNode,
	  getNodeFromInstance: getNodeFromInstance,
	  precacheChildNodes: precacheChildNodes,
	  precacheNode: precacheNode,
	  uncacheNode: uncacheNode
	};
	
	module.exports = ReactDOMComponentTree;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 128 */
/*!************************************!*\
  !*** ./~/react/lib/DOMProperty.js ***!
  \************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMProperty
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(/*! ./reactProdInvariant */ 99);
	
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 100);
	
	function checkMask(value, bitmask) {
	  return (value & bitmask) === bitmask;
	}
	
	var DOMPropertyInjection = {
	  /**
	   * Mapping from normalized, camelcased property names to a configuration that
	   * specifies how the associated DOM property should be accessed or rendered.
	   */
	  MUST_USE_PROPERTY: 0x1,
	  HAS_BOOLEAN_VALUE: 0x4,
	  HAS_NUMERIC_VALUE: 0x8,
	  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
	  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,
	
	  /**
	   * Inject some specialized knowledge about the DOM. This takes a config object
	   * with the following properties:
	   *
	   * isCustomAttribute: function that given an attribute name will return true
	   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
	   * attributes where it's impossible to enumerate all of the possible
	   * attribute names,
	   *
	   * Properties: object mapping DOM property name to one of the
	   * DOMPropertyInjection constants or null. If your attribute isn't in here,
	   * it won't get written to the DOM.
	   *
	   * DOMAttributeNames: object mapping React attribute name to the DOM
	   * attribute name. Attribute names not specified use the **lowercase**
	   * normalized name.
	   *
	   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
	   * attribute namespace URL. (Attribute names not specified use no namespace.)
	   *
	   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
	   * Property names not specified use the normalized name.
	   *
	   * DOMMutationMethods: Properties that require special mutation methods. If
	   * `value` is undefined, the mutation method should unset the property.
	   *
	   * @param {object} domPropertyConfig the config as described above.
	   */
	  injectDOMPropertyConfig: function (domPropertyConfig) {
	    var Injection = DOMPropertyInjection;
	    var Properties = domPropertyConfig.Properties || {};
	    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
	    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
	    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
	    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};
	
	    if (domPropertyConfig.isCustomAttribute) {
	      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
	    }
	
	    for (var propName in Properties) {
	      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;
	
	      var lowerCased = propName.toLowerCase();
	      var propConfig = Properties[propName];
	
	      var propertyInfo = {
	        attributeName: lowerCased,
	        attributeNamespace: null,
	        propertyName: propName,
	        mutationMethod: null,
	
	        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
	        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
	        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
	        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
	        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
	      };
	      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;
	
	      if (process.env.NODE_ENV !== 'production') {
	        DOMProperty.getPossibleStandardName[lowerCased] = propName;
	      }
	
	      if (DOMAttributeNames.hasOwnProperty(propName)) {
	        var attributeName = DOMAttributeNames[propName];
	        propertyInfo.attributeName = attributeName;
	        if (process.env.NODE_ENV !== 'production') {
	          DOMProperty.getPossibleStandardName[attributeName] = propName;
	        }
	      }
	
	      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
	        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
	      }
	
	      if (DOMPropertyNames.hasOwnProperty(propName)) {
	        propertyInfo.propertyName = DOMPropertyNames[propName];
	      }
	
	      if (DOMMutationMethods.hasOwnProperty(propName)) {
	        propertyInfo.mutationMethod = DOMMutationMethods[propName];
	      }
	
	      DOMProperty.properties[propName] = propertyInfo;
	    }
	  }
	};
	
	/* eslint-disable max-len */
	var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
	/* eslint-enable max-len */
	
	/**
	 * DOMProperty exports lookup objects that can be used like functions:
	 *
	 *   > DOMProperty.isValid['id']
	 *   true
	 *   > DOMProperty.isValid['foobar']
	 *   undefined
	 *
	 * Although this may be confusing, it performs better in general.
	 *
	 * @see http://jsperf.com/key-exists
	 * @see http://jsperf.com/key-missing
	 */
	var DOMProperty = {
	
	  ID_ATTRIBUTE_NAME: 'data-reactid',
	  ROOT_ATTRIBUTE_NAME: 'data-reactroot',
	
	  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
	  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',
	
	  /**
	   * Map from property "standard name" to an object with info about how to set
	   * the property in the DOM. Each object contains:
	   *
	   * attributeName:
	   *   Used when rendering markup or with `*Attribute()`.
	   * attributeNamespace
	   * propertyName:
	   *   Used on DOM node instances. (This includes properties that mutate due to
	   *   external factors.)
	   * mutationMethod:
	   *   If non-null, used instead of the property or `setAttribute()` after
	   *   initial render.
	   * mustUseProperty:
	   *   Whether the property must be accessed and mutated as an object property.
	   * hasBooleanValue:
	   *   Whether the property should be removed when set to a falsey value.
	   * hasNumericValue:
	   *   Whether the property must be numeric or parse as a numeric and should be
	   *   removed when set to a falsey value.
	   * hasPositiveNumericValue:
	   *   Whether the property must be positive numeric or parse as a positive
	   *   numeric and should be removed when set to a falsey value.
	   * hasOverloadedBooleanValue:
	   *   Whether the property can be used as a flag as well as with a value.
	   *   Removed when strictly equal to false; present without a value when
	   *   strictly equal to true; present with a value otherwise.
	   */
	  properties: {},
	
	  /**
	   * Mapping from lowercase property names to the properly cased version, used
	   * to warn in the case of missing properties. Available only in __DEV__.
	   * @type {Object}
	   */
	  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? {} : null,
	
	  /**
	   * All of the isCustomAttribute() functions that have been injected.
	   */
	  _isCustomAttributeFunctions: [],
	
	  /**
	   * Checks whether a property name is a custom attribute.
	   * @method
	   */
	  isCustomAttribute: function (attributeName) {
	    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
	      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
	      if (isCustomAttributeFn(attributeName)) {
	        return true;
	      }
	    }
	    return false;
	  },
	
	  injection: DOMPropertyInjection
	};
	
	module.exports = DOMProperty;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 129 */
/*!***********************************************!*\
  !*** ./~/react/lib/ReactDOMComponentFlags.js ***!
  \***********************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponentFlags
	 */
	
	'use strict';
	
	var ReactDOMComponentFlags = {
	  hasCachedChildNodes: 1 << 0
	};
	
	module.exports = ReactDOMComponentFlags;

/***/ },
/* 130 */
/*!**********************************************!*\
  !*** ./~/react/lib/ReactDefaultInjection.js ***!
  \**********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultInjection
	 */
	
	'use strict';
	
	var BeforeInputEventPlugin = __webpack_require__(/*! ./BeforeInputEventPlugin */ 131);
	var ChangeEventPlugin = __webpack_require__(/*! ./ChangeEventPlugin */ 146);
	var DefaultEventPluginOrder = __webpack_require__(/*! ./DefaultEventPluginOrder */ 163);
	var EnterLeaveEventPlugin = __webpack_require__(/*! ./EnterLeaveEventPlugin */ 164);
	var HTMLDOMPropertyConfig = __webpack_require__(/*! ./HTMLDOMPropertyConfig */ 169);
	var ReactComponentBrowserEnvironment = __webpack_require__(/*! ./ReactComponentBrowserEnvironment */ 170);
	var ReactDOMComponent = __webpack_require__(/*! ./ReactDOMComponent */ 184);
	var ReactDOMComponentTree = __webpack_require__(/*! ./ReactDOMComponentTree */ 127);
	var ReactDOMEmptyComponent = __webpack_require__(/*! ./ReactDOMEmptyComponent */ 227);
	var ReactDOMTreeTraversal = __webpack_require__(/*! ./ReactDOMTreeTraversal */ 228);
	var ReactDOMTextComponent = __webpack_require__(/*! ./ReactDOMTextComponent */ 229);
	var ReactDefaultBatchingStrategy = __webpack_require__(/*! ./ReactDefaultBatchingStrategy */ 230);
	var ReactEventListener = __webpack_require__(/*! ./ReactEventListener */ 231);
	var ReactInjection = __webpack_require__(/*! ./ReactInjection */ 234);
	var ReactReconcileTransaction = __webpack_require__(/*! ./ReactReconcileTransaction */ 235);
	var SVGDOMPropertyConfig = __webpack_require__(/*! ./SVGDOMPropertyConfig */ 243);
	var SelectEventPlugin = __webpack_require__(/*! ./SelectEventPlugin */ 244);
	var SimpleEventPlugin = __webpack_require__(/*! ./SimpleEventPlugin */ 245);
	
	var alreadyInjected = false;
	
	function inject() {
	  if (alreadyInjected) {
	    // TODO: This is currently true because these injections are shared between
	    // the client and the server package. They should be built independently
	    // and not share any injection state. Then this problem will be solved.
	    return;
	  }
	  alreadyInjected = true;
	
	  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);
	
	  /**
	   * Inject modules for resolving DOM hierarchy and plugin ordering.
	   */
	  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
	  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
	  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);
	
	  /**
	   * Some important event plugins included by default (without having to require
	   * them).
	   */
	  ReactInjection.EventPluginHub.injectEventPluginsByName({
	    SimpleEventPlugin: SimpleEventPlugin,
	    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	    ChangeEventPlugin: ChangeEventPlugin,
	    SelectEventPlugin: SelectEventPlugin,
	    BeforeInputEventPlugin: BeforeInputEventPlugin
	  });
	
	  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);
	
	  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);
	
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);
	
	  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
	    return new ReactDOMEmptyComponent(instantiate);
	  });
	
	  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
	  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);
	
	  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
	}
	
	module.exports = {
	  inject: inject
	};

/***/ },
/* 131 */
/*!***********************************************!*\
  !*** ./~/react/lib/BeforeInputEventPlugin.js ***!
  \***********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule BeforeInputEventPlugin
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(/*! ./EventConstants */ 132);
	var EventPropagators = __webpack_require__(/*! ./EventPropagators */ 133);
	var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 140);
	var FallbackCompositionState = __webpack_require__(/*! ./FallbackCompositionState */ 141);
	var SyntheticCompositionEvent = __webpack_require__(/*! ./SyntheticCompositionEvent */ 143);
	var SyntheticInputEvent = __webpack_require__(/*! ./SyntheticInputEvent */ 145);
	
	var keyOf = __webpack_require__(/*! fbjs/lib/keyOf */ 116);
	
	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;
	
	var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;
	
	var documentMode = null;
	if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}
	
	// Webkit offers a very useful `textInput` event that can be used to
	// directly represent `beforeInput`. The IE `textinput` event is not as
	// useful, so we don't use it.
	var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();
	
	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. Japanese ideographic
	// spaces, for instance (\u3000) are not recorded correctly.
	var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
	
	/**
	 * Opera <= 12 includes TextEvent in window, but does not fire
	 * text input events. Rely on keypress instead.
	 */
	function isPresto() {
	  var opera = window.opera;
	  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
	}
	
	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBeforeInput: null }),
	      captured: keyOf({ onBeforeInputCapture: null })
	    },
	    dependencies: [topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionEnd: null }),
	      captured: keyOf({ onCompositionEndCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionStart: null }),
	      captured: keyOf({ onCompositionStartCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionUpdate: null }),
	      captured: keyOf({ onCompositionUpdateCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  }
	};
	
	// Track whether we've ever handled a keypress on the space key.
	var hasSpaceKeypress = false;
	
	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	  !(nativeEvent.ctrlKey && nativeEvent.altKey);
	}
	
	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionStart:
	      return eventTypes.compositionStart;
	    case topLevelTypes.topCompositionEnd:
	      return eventTypes.compositionEnd;
	    case topLevelTypes.topCompositionUpdate:
	      return eventTypes.compositionUpdate;
	  }
	}
	
	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;
	}
	
	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topKeyUp:
	      // Command keys insert or clear IME input.
	      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
	    case topLevelTypes.topKeyDown:
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return nativeEvent.keyCode !== START_KEYCODE;
	    case topLevelTypes.topKeyPress:
	    case topLevelTypes.topMouseDown:
	    case topLevelTypes.topBlur:
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}
	
	/**
	 * Google Input Tools provides composition data via a CustomEvent,
	 * with the `data` property populated in the `detail` object. If this
	 * is available on the event object, use it. If not, this is a plain
	 * composition event and we have nothing special to extract.
	 *
	 * @param {object} nativeEvent
	 * @return {?string}
	 */
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if (typeof detail === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}
	
	// Track the current IME composition fallback object, if any.
	var currentComposition = null;
	
	/**
	 * @return {?object} A SyntheticCompositionEvent.
	 */
	function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var eventType;
	  var fallbackData;
	
	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!currentComposition) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }
	
	  if (!eventType) {
	    return null;
	  }
	
	  if (useFallbackCompositionData) {
	    // The current composition is stored statically and must not be
	    // overwritten while composition continues.
	    if (!currentComposition && eventType === eventTypes.compositionStart) {
	      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (currentComposition) {
	        fallbackData = currentComposition.getData();
	      }
	    }
	  }
	
	  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);
	
	  if (fallbackData) {
	    // Inject data generated from fallback path into the synthetic event.
	    // This matches the property of native CompositionEventInterface.
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }
	
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}
	
	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The string corresponding to this `beforeInput` event.
	 */
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionEnd:
	      return getDataFromCustomEvent(nativeEvent);
	    case topLevelTypes.topKeyPress:
	      /**
	       * If native `textInput` events are available, our goal is to make
	       * use of them. However, there is a special case: the spacebar key.
	       * In Webkit, preventing default on a spacebar `textInput` event
	       * cancels character insertion, but it *also* causes the browser
	       * to fall back to its default spacebar behavior of scrolling the
	       * page.
	       *
	       * Tracking at:
	       * https://code.google.com/p/chromium/issues/detail?id=355103
	       *
	       * To avoid this issue, use the keypress event as if no `textInput`
	       * event is available.
	       */
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }
	
	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;
	
	    case topLevelTypes.topTextInput:
	      // Record the characters to be added to the DOM.
	      var chars = nativeEvent.data;
	
	      // If it's a spacebar character, assume that we have already handled
	      // it at the keypress level and bail immediately. Android Chrome
	      // doesn't give us keycodes, so we need to blacklist it.
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }
	
	      return chars;
	
	    default:
	      // For other native event types, do nothing.
	      return null;
	  }
	}
	
	/**
	 * For browsers that do not provide the `textInput` event, extract the
	 * appropriate string to use for SyntheticInputEvent.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The fallback string for this `beforeInput` event.
	 */
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  // If we are currently composing (IME) and using a fallback to do so,
	  // try to extract the composed characters from the fallback object.
	  if (currentComposition) {
	    if (topLevelType === topLevelTypes.topCompositionEnd || isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	      var chars = currentComposition.getData();
	      FallbackCompositionState.release(currentComposition);
	      currentComposition = null;
	      return chars;
	    }
	    return null;
	  }
	
	  switch (topLevelType) {
	    case topLevelTypes.topPaste:
	      // If a paste event occurs after a keypress, throw out the input
	      // chars. Paste events should not lead to BeforeInput events.
	      return null;
	    case topLevelTypes.topKeyPress:
	      /**
	       * As of v27, Firefox may fire keypress events even when no character
	       * will be inserted. A few possibilities:
	       *
	       * - `which` is `0`. Arrow keys, Esc key, etc.
	       *
	       * - `which` is the pressed key code, but no char is available.
	       *   Ex: 'AltGr + d` in Polish. There is no modified character for
	       *   this key combination and no character is inserted into the
	       *   document, but FF fires the keypress for char code `100` anyway.
	       *   No `input` event will occur.
	       *
	       * - `which` is the pressed key code, but a command combination is
	       *   being used. Ex: `Cmd+C`. No character is inserted, and no
	       *   `input` event will occur.
	       */
	      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
	        return String.fromCharCode(nativeEvent.which);
	      }
	      return null;
	    case topLevelTypes.topCompositionEnd:
	      return useFallbackCompositionData ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}
	
	/**
	 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
	 * `textInput` or fallback behavior.
	 *
	 * @return {?object} A SyntheticInputEvent.
	 */
	function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var chars;
	
	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }
	
	  // If no characters are being inserted, no BeforeInput event should
	  // be fired.
	  if (!chars) {
	    return null;
	  }
	
	  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);
	
	  event.data = chars;
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}
	
	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 *
	 * This plugin is also responsible for emitting `composition` events, thus
	 * allowing us to share composition fallback code for both `beforeInput` and
	 * `composition` event types.
	 */
	var BeforeInputEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
	  }
	};
	
	module.exports = BeforeInputEventPlugin;

/***/ },
/* 132 */
/*!***************************************!*\
  !*** ./~/react/lib/EventConstants.js ***!
  \***************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventConstants
	 */
	
	'use strict';
	
	var keyMirror = __webpack_require__(/*! fbjs/lib/keyMirror */ 114);
	
	var PropagationPhases = keyMirror({ bubbled: null, captured: null });
	
	/**
	 * Types of raw signals from the browser caught at the top level.
	 */
	var topLevelTypes = keyMirror({
	  topAbort: null,
	  topAnimationEnd: null,
	  topAnimationIteration: null,
	  topAnimationStart: null,
	  topBlur: null,
	  topCanPlay: null,
	  topCanPlayThrough: null,
	  topChange: null,
	  topClick: null,
	  topCompositionEnd: null,
	  topCompositionStart: null,
	  topCompositionUpdate: null,
	  topContextMenu: null,
	  topCopy: null,
	  topCut: null,
	  topDoubleClick: null,
	  topDrag: null,
	  topDragEnd: null,
	  topDragEnter: null,
	  topDragExit: null,
	  topDragLeave: null,
	  topDragOver: null,
	  topDragStart: null,
	  topDrop: null,
	  topDurationChange: null,
	  topEmptied: null,
	  topEncrypted: null,
	  topEnded: null,
	  topError: null,
	  topFocus: null,
	  topInput: null,
	  topInvalid: null,
	  topKeyDown: null,
	  topKeyPress: null,
	  topKeyUp: null,
	  topLoad: null,
	  topLoadedData: null,
	  topLoadedMetadata: null,
	  topLoadStart: null,
	  topMouseDown: null,
	  topMouseMove: null,
	  topMouseOut: null,
	  topMouseOver: null,
	  topMouseUp: null,
	  topPaste: null,
	  topPause: null,
	  topPlay: null,
	  topPlaying: null,
	  topProgress: null,
	  topRateChange: null,
	  topReset: null,
	  topScroll: null,
	  topSeeked: null,
	  topSeeking: null,
	  topSelectionChange: null,
	  topStalled: null,
	  topSubmit: null,
	  topSuspend: null,
	  topTextInput: null,
	  topTimeUpdate: null,
	  topTouchCancel: null,
	  topTouchEnd: null,
	  topTouchMove: null,
	  topTouchStart: null,
	  topTransitionEnd: null,
	  topVolumeChange: null,
	  topWaiting: null,
	  topWheel: null
	});
	
	var EventConstants = {
	  topLevelTypes: topLevelTypes,
	  PropagationPhases: PropagationPhases
	};
	
	module.exports = EventConstants;

/***/ },
/* 133 */
/*!*****************************************!*\
  !*** ./~/react/lib/EventPropagators.js ***!
  \*****************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPropagators
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(/*! ./EventConstants */ 132);
	var EventPluginHub = __webpack_require__(/*! ./EventPluginHub */ 134);
	var EventPluginUtils = __webpack_require__(/*! ./EventPluginUtils */ 136);
	
	var accumulateInto = __webpack_require__(/*! ./accumulateInto */ 138);
	var forEachAccumulated = __webpack_require__(/*! ./forEachAccumulated */ 139);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 103);
	
	var PropagationPhases = EventConstants.PropagationPhases;
	var getListener = EventPluginHub.getListener;
	
	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(inst, event, propagationPhase) {
	  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(inst, registrationName);
	}
	
	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(inst, upwards, event) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
	  }
	  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
	  var listener = listenerAtPhase(inst, event, phase);
	  if (listener) {
	    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	  }
	}
	
	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We cannot perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
	  }
	}
	
	/**
	 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
	 */
	function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    var targetInst = event._targetInst;
	    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
	    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
	  }
	}
	
	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(inst, ignoredDirection, event) {
	  if (event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(inst, registrationName);
	    if (listener) {
	      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	    }
	  }
	}
	
	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event._targetInst, null, event);
	  }
	}
	
	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}
	
	function accumulateTwoPhaseDispatchesSkipTarget(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
	}
	
	function accumulateEnterLeaveDispatches(leave, enter, from, to) {
	  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
	}
	
	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}
	
	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing event a
	 * single one.
	 *
	 * @constructor EventPropagators
	 */
	var EventPropagators = {
	  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	  accumulateDirectDispatches: accumulateDirectDispatches,
	  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
	};
	
	module.exports = EventPropagators;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 134 */
/*!***************************************!*\
  !*** ./~/react/lib/EventPluginHub.js ***!
  \***************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginHub
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(/*! ./reactProdInvariant */ 99);
	
	var EventPluginRegistry = __webpack_require__(/*! ./EventPluginRegistry */ 135);
	var EventPluginUtils = __webpack_require__(/*! ./EventPluginUtils */ 136);
	var ReactErrorUtils = __webpack_require__(/*! ./ReactErrorUtils */ 137);
	
	var accumulateInto = __webpack_require__(/*! ./accumulateInto */ 138);
	var forEachAccumulated = __webpack_require__(/*! ./forEachAccumulated */ 139);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 100);
	
	/**
	 * Internal store for event listeners
	 */
	var listenerBank = {};
	
	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;
	
	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @private
	 */
	var executeDispatchesAndRelease = function (event, simulated) {
	  if (event) {
	    EventPluginUtils.executeDispatchesInOrder(event, simulated);
	
	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};
	var executeDispatchesAndReleaseSimulated = function (e) {
	  return executeDispatchesAndRelease(e, true);
	};
	var executeDispatchesAndReleaseTopLevel = function (e) {
	  return executeDispatchesAndRelease(e, false);
	};
	
	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */
	var EventPluginHub = {
	
	  /**
	   * Methods for injecting dependencies.
	   */
	  injection: {
	
	    /**
	     * @param {array} InjectedEventPluginOrder
	     * @public
	     */
	    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,
	
	    /**
	     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	     */
	    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName
	
	  },
	
	  /**
	   * Stores `listener` at `listenerBank[registrationName][id]`. Is idempotent.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {function} listener The callback to store.
	   */
	  putListener: function (inst, registrationName, listener) {
	    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;
	
	    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
	    bankForRegistrationName[inst._rootNodeID] = listener;
	
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.didPutListener) {
	      PluginModule.didPutListener(inst, registrationName, listener);
	    }
	  },
	
	  /**
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @return {?function} The stored callback.
	   */
	  getListener: function (inst, registrationName) {
	    var bankForRegistrationName = listenerBank[registrationName];
	    return bankForRegistrationName && bankForRegistrationName[inst._rootNodeID];
	  },
	
	  /**
	   * Deletes a listener from the registration bank.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   */
	  deleteListener: function (inst, registrationName) {
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.willDeleteListener) {
	      PluginModule.willDeleteListener(inst, registrationName);
	    }
	
	    var bankForRegistrationName = listenerBank[registrationName];
	    // TODO: This should never be null -- when is it?
	    if (bankForRegistrationName) {
	      delete bankForRegistrationName[inst._rootNodeID];
	    }
	  },
	
	  /**
	   * Deletes all listeners for the DOM element with the supplied ID.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   */
	  deleteAllListeners: function (inst) {
	    for (var registrationName in listenerBank) {
	      if (!listenerBank.hasOwnProperty(registrationName)) {
	        continue;
	      }
	
	      if (!listenerBank[registrationName][inst._rootNodeID]) {
	        continue;
	      }
	
	      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	      if (PluginModule && PluginModule.willDeleteListener) {
	        PluginModule.willDeleteListener(inst, registrationName);
	      }
	
	      delete listenerBank[registrationName][inst._rootNodeID];
	    }
	  },
	
	  /**
	   * Allows registered plugins an opportunity to extract events from top-level
	   * native browser events.
	   *
	   * @return {*} An accumulation of synthetic events.
	   * @internal
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events;
	    var plugins = EventPluginRegistry.plugins;
	    for (var i = 0; i < plugins.length; i++) {
	      // Not every plugin in the ordering may be loaded at runtime.
	      var possiblePlugin = plugins[i];
	      if (possiblePlugin) {
	        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	        if (extractedEvents) {
	          events = accumulateInto(events, extractedEvents);
	        }
	      }
	    }
	    return events;
	  },
	
	  /**
	   * Enqueues a synthetic event that should be dispatched when
	   * `processEventQueue` is invoked.
	   *
	   * @param {*} events An accumulation of synthetic events.
	   * @internal
	   */
	  enqueueEvents: function (events) {
	    if (events) {
	      eventQueue = accumulateInto(eventQueue, events);
	    }
	  },
	
	  /**
	   * Dispatches all synthetic events on the event queue.
	   *
	   * @internal
	   */
	  processEventQueue: function (simulated) {
	    // Set `eventQueue` to null before processing it so that we can tell if more
	    // events get enqueued while processing.
	    var processingEventQueue = eventQueue;
	    eventQueue = null;
	    if (simulated) {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
	    } else {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
	    }
	    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
	    // This would be a good time to rethrow if any of the event handlers threw.
	    ReactErrorUtils.rethrowCaughtError();
	  },
	
	  /**
	   * These are needed for tests only. Do not use!
	   */
	  __purge: function () {
	    listenerBank = {};
	  },
	
	  __getListenerBank: function () {
	    return listenerBank;
	  }
	
	};
	
	module.exports = EventPluginHub;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 135 */
/*!********************************************!*\
  !*** ./~/react/lib/EventPluginRegistry.js ***!
  \********************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginRegistry
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(/*! ./reactProdInvariant */ 99);
	
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 100);
	
	/**
	 * Injectable ordering of event plugins.
	 */
	var EventPluginOrder = null;
	
	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};
	
	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!EventPluginOrder) {
	    // Wait until an `EventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var PluginModule = namesToPlugins[pluginName];
	    var pluginIndex = EventPluginOrder.indexOf(pluginName);
	    !(pluginIndex > -1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
	    if (EventPluginRegistry.plugins[pluginIndex]) {
	      continue;
	    }
	    !PluginModule.extractEvents ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
	    EventPluginRegistry.plugins[pluginIndex] = PluginModule;
	    var publishedEvents = PluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      !publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
	    }
	  }
	}
	
	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
	  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
	  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;
	
	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(phasedRegistrationName, PluginModule, eventName);
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);
	    return true;
	  }
	  return false;
	}
	
	/**
	 * Publishes a registration name that is used to identify dispatched events and
	 * can be used with `EventPluginHub.putListener` to register listeners.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, PluginModule, eventName) {
	  !!EventPluginRegistry.registrationNameModules[registrationName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
	  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
	  EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;
	
	  if (process.env.NODE_ENV !== 'production') {
	    var lowerCasedName = registrationName.toLowerCase();
	    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;
	
	    if (registrationName === 'onDoubleClick') {
	      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
	    }
	  }
	}
	
	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */
	var EventPluginRegistry = {
	
	  /**
	   * Ordered list of injected plugins.
	   */
	  plugins: [],
	
	  /**
	   * Mapping from event name to dispatch config
	   */
	  eventNameDispatchConfigs: {},
	
	  /**
	   * Mapping from registration name to plugin module
	   */
	  registrationNameModules: {},
	
	  /**
	   * Mapping from registration name to event name
	   */
	  registrationNameDependencies: {},
	
	  /**
	   * Mapping from lowercase registration names to the properly cased version,
	   * used to warn in the case of missing event handlers. Available
	   * only in __DEV__.
	   * @type {Object}
	   */
	  possibleRegistrationNames: process.env.NODE_ENV !== 'production' ? {} : null,
	
	  /**
	   * Injects an ordering of plugins (by plugin name). This allows the ordering
	   * to be decoupled from injection of the actual plugins so that ordering is
	   * always deterministic regardless of packaging, on-the-fly injection, etc.
	   *
	   * @param {array} InjectedEventPluginOrder
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginOrder}
	   */
	  injectEventPluginOrder: function (InjectedEventPluginOrder) {
	    !!EventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
	    // Clone the ordering so it cannot be dynamically mutated.
	    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
	    recomputePluginOrdering();
	  },
	
	  /**
	   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	   * in the ordering injected by `injectEventPluginOrder`.
	   *
	   * Plugins can be injected as part of page initialization or on-the-fly.
	   *
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginsByName}
	   */
	  injectEventPluginsByName: function (injectedNamesToPlugins) {
	    var isOrderingDirty = false;
	    for (var pluginName in injectedNamesToPlugins) {
	      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	        continue;
	      }
	      var PluginModule = injectedNamesToPlugins[pluginName];
	      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {
	        !!namesToPlugins[pluginName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
	        namesToPlugins[pluginName] = PluginModule;
	        isOrderingDirty = true;
	      }
	    }
	    if (isOrderingDirty) {
	      recomputePluginOrdering();
	    }
	  },
	
	  /**
	   * Looks up the plugin for the supplied event.
	   *
	   * @param {object} event A synthetic event.
	   * @return {?object} The plugin that created the supplied event.
	   * @internal
	   */
	  getPluginModuleForEvent: function (event) {
	    var dispatchConfig = event.dispatchConfig;
	    if (dispatchConfig.registrationName) {
	      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
	    }
	    for (var phase in dispatchConfig.phasedRegistrationNames) {
	      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
	        continue;
	      }
	      var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];
	      if (PluginModule) {
	        return PluginModule;
	      }
	    }
	    return null;
	  },
	
	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _resetEventPlugins: function () {
	    EventPluginOrder = null;
	    for (var pluginName in namesToPlugins) {
	      if (namesToPlugins.hasOwnProperty(pluginName)) {
	        delete namesToPlugins[pluginName];
	      }
	    }
	    EventPluginRegistry.plugins.length = 0;
	
	    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
	    for (var eventName in eventNameDispatchConfigs) {
	      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
	        delete eventNameDispatchConfigs[eventName];
	      }
	    }
	
	    var registrationNameModules = EventPluginRegistry.registrationNameModules;
	    for (var registrationName in registrationNameModules) {
	      if (registrationNameModules.hasOwnProperty(registrationName)) {
	        delete registrationNameModules[registrationName];
	      }
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
	      for (var lowerCasedName in possibleRegistrationNames) {
	        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
	          delete possibleRegistrationNames[lowerCasedName];
	        }
	      }
	    }
	  }
	
	};
	
	module.exports = EventPluginRegistry;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 136 */
/*!*****************************************!*\
  !*** ./~/react/lib/EventPluginUtils.js ***!
  \*****************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginUtils
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(/*! ./reactProdInvariant */ 99);
	
	var EventConstants = __webpack_require__(/*! ./EventConstants */ 132);
	var ReactErrorUtils = __webpack_require__(/*! ./ReactErrorUtils */ 137);
	
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 100);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 103);
	
	/**
	 * Injected dependencies:
	 */
	
	/**
	 * - `ComponentTree`: [required] Module that can convert between React instances
	 *   and actual node references.
	 */
	var ComponentTree;
	var TreeTraversal;
	var injection = {
	  injectComponentTree: function (Injected) {
	    ComponentTree = Injected;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
	    }
	  },
	  injectTreeTraversal: function (Injected) {
	    TreeTraversal = Injected;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
	    }
	  }
	};
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	function isEndish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;
	}
	
	function isMoveish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;
	}
	function isStartish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;
	}
	
	var validateEventDispatches;
	if (process.env.NODE_ENV !== 'production') {
	  validateEventDispatches = function (event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchInstances = event._dispatchInstances;
	
	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;
	
	    var instancesIsArr = Array.isArray(dispatchInstances);
	    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;
	
	    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
	  };
	}
	
	/**
	 * Dispatch the event to the listener.
	 * @param {SyntheticEvent} event SyntheticEvent to handle
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @param {function} listener Application-level callback
	 * @param {*} inst Internal component instance
	 */
	function executeDispatch(event, simulated, listener, inst) {
	  var type = event.type || 'unknown-event';
	  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
	  if (simulated) {
	    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
	  } else {
	    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
	  }
	  event.currentTarget = null;
	}
	
	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event, simulated) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
	    }
	  } else if (dispatchListeners) {
	    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
	  }
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	}
	
	/**
	 * Standard/simple iteration through an event's collected dispatches, but stops
	 * at the first dispatch execution returning true, and returns that id.
	 *
	 * @return {?string} id of the first dispatch execution who's listener returns
	 * true, or null if no listener returned true.
	 */
	function executeDispatchesInOrderStopAtTrueImpl(event) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      if (dispatchListeners[i](event, dispatchInstances[i])) {
	        return dispatchInstances[i];
	      }
	    }
	  } else if (dispatchListeners) {
	    if (dispatchListeners(event, dispatchInstances)) {
	      return dispatchInstances;
	    }
	  }
	  return null;
	}
	
	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */
	function executeDispatchesInOrderStopAtTrue(event) {
	  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
	  event._dispatchInstances = null;
	  event._dispatchListeners = null;
	  return ret;
	}
	
	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return {*} The return value of executing the single dispatch.
	 */
	function executeDirectDispatch(event) {
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  var dispatchListener = event._dispatchListeners;
	  var dispatchInstance = event._dispatchInstances;
	  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
	  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
	  var res = dispatchListener ? dispatchListener(event) : null;
	  event.currentTarget = null;
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	  return res;
	}
	
	/**
	 * @param {SyntheticEvent} event
	 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
	 */
	function hasDispatches(event) {
	  return !!event._dispatchListeners;
	}
	
	/**
	 * General utilities that are useful in creating custom Event Plugins.
	 */
	var EventPluginUtils = {
	  isEndish: isEndish,
	  isMoveish: isMoveish,
	  isStartish: isStartish,
	
	  executeDirectDispatch: executeDirectDispatch,
	  executeDispatchesInOrder: executeDispatchesInOrder,
	  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
	  hasDispatches: hasDispatches,
	
	  getInstanceFromNode: function (node) {
	    return ComponentTree.getInstanceFromNode(node);
	  },
	  getNodeFromInstance: function (node) {
	    return ComponentTree.getNodeFromInstance(node);
	  },
	  isAncestor: function (a, b) {
	    return TreeTraversal.isAncestor(a, b);
	  },
	  getLowestCommonAncestor: function (a, b) {
	    return TreeTraversal.getLowestCommonAncestor(a, b);
	  },
	  getParentInstance: function (inst) {
	    return TreeTraversal.getParentInstance(inst);
	  },
	  traverseTwoPhase: function (target, fn, arg) {
	    return TreeTraversal.traverseTwoPhase(target, fn, arg);
	  },
	  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
	    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
	  },
	
	  injection: injection
	};
	
	module.exports = EventPluginUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 137 */
/*!****************************************!*\
  !*** ./~/react/lib/ReactErrorUtils.js ***!
  \****************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactErrorUtils
	 */
	
	'use strict';
	
	var caughtError = null;
	
	/**
	 * Call a function while guarding against errors that happens within it.
	 *
	 * @param {?String} name of the guard to use for logging or debugging
	 * @param {Function} func The function to invoke
	 * @param {*} a First argument
	 * @param {*} b Second argument
	 */
	function invokeGuardedCallback(name, func, a, b) {
	  try {
	    return func(a, b);
	  } catch (x) {
	    if (caughtError === null) {
	      caughtError = x;
	    }
	    return undefined;
	  }
	}
	
	var ReactErrorUtils = {
	  invokeGuardedCallback: invokeGuardedCallback,
	
	  /**
	   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
	   * handler are sure to be rethrown by rethrowCaughtError.
	   */
	  invokeGuardedCallbackWithCatch: invokeGuardedCallback,
	
	  /**
	   * During execution of guarded functions we will capture the first error which
	   * we will rethrow to be handled by the top level error handler.
	   */
	  rethrowCaughtError: function () {
	    if (caughtError) {
	      var error = caughtError;
	      caughtError = null;
	      throw error;
	    }
	  }
	};
	
	if (process.env.NODE_ENV !== 'production') {
	  /**
	   * To help development we can get better devtools integration by simulating a
	   * real browser event.
	   */
	  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
	    var fakeNode = document.createElement('react');
	    ReactErrorUtils.invokeGuardedCallback = function (name, func, a, b) {
	      var boundFunc = func.bind(null, a, b);
	      var evtType = 'react-' + name;
	      fakeNode.addEventListener(evtType, boundFunc, false);
	      var evt = document.createEvent('Event');
	      evt.initEvent(evtType, false, false);
	      fakeNode.dispatchEvent(evt);
	      fakeNode.removeEventListener(evtType, boundFunc, false);
	    };
	  }
	}
	
	module.exports = ReactErrorUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 138 */
/*!***************************************!*\
  !*** ./~/react/lib/accumulateInto.js ***!
  \***************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule accumulateInto
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(/*! ./reactProdInvariant */ 99);
	
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 100);
	
	/**
	 * Accumulates items that must not be null or undefined into the first one. This
	 * is used to conserve memory by avoiding array allocations, and thus sacrifices
	 * API cleanness. Since `current` can be null before being passed in and not
	 * null after this function, make sure to assign it back to `current`:
	 *
	 * `a = accumulateInto(a, b);`
	 *
	 * This API should be sparingly used. Try `accumulate` for something cleaner.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */
	
	function accumulateInto(current, next) {
	  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;
	
	  if (current == null) {
	    return next;
	  }
	
	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  if (Array.isArray(current)) {
	    if (Array.isArray(next)) {
	      current.push.apply(current, next);
	      return current;
	    }
	    current.push(next);
	    return current;
	  }
	
	  if (Array.isArray(next)) {
	    // A bit too dangerous to mutate `next`.
	    return [current].concat(next);
	  }
	
	  return [current, next];
	}
	
	module.exports = accumulateInto;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 139 */
/*!*******************************************!*\
  !*** ./~/react/lib/forEachAccumulated.js ***!
  \*******************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule forEachAccumulated
	 * 
	 */
	
	'use strict';
	
	/**
	 * @param {array} arr an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 */
	
	function forEachAccumulated(arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	}
	
	module.exports = forEachAccumulated;

/***/ },
/* 140 */
/*!****************************************************!*\
  !*** ./~/react/~/fbjs/lib/ExecutionEnvironment.js ***!
  \****************************************************/
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	
	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {
	
	  canUseDOM: canUseDOM,
	
	  canUseWorkers: typeof Worker !== 'undefined',
	
	  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),
	
	  canUseViewport: canUseDOM && !!window.screen,
	
	  isInWorker: !canUseDOM // For now, this is true - might change in the future.
	
	};
	
	module.exports = ExecutionEnvironment;

/***/ },
/* 141 */
/*!*************************************************!*\
  !*** ./~/react/lib/FallbackCompositionState.js ***!
  \*************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule FallbackCompositionState
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(/*! object-assign */ 96);
	
	var PooledClass = __webpack_require__(/*! ./PooledClass */ 98);
	
	var getTextContentAccessor = __webpack_require__(/*! ./getTextContentAccessor */ 142);
	
	/**
	 * This helper class stores information about text content of a target node,
	 * allowing comparison of content before and after a given event.
	 *
	 * Identify the node where selection currently begins, then observe
	 * both its text content and its current position in the DOM. Since the
	 * browser may natively replace the target node during composition, we can
	 * use its position to find its replacement.
	 *
	 * @param {DOMEventTarget} root
	 */
	function FallbackCompositionState(root) {
	  this._root = root;
	  this._startText = this.getText();
	  this._fallbackText = null;
	}
	
	_assign(FallbackCompositionState.prototype, {
	  destructor: function () {
	    this._root = null;
	    this._startText = null;
	    this._fallbackText = null;
	  },
	
	  /**
	   * Get current text of input.
	   *
	   * @return {string}
	   */
	  getText: function () {
	    if ('value' in this._root) {
	      return this._root.value;
	    }
	    return this._root[getTextContentAccessor()];
	  },
	
	  /**
	   * Determine the differing substring between the initially stored
	   * text content and the current content.
	   *
	   * @return {string}
	   */
	  getData: function () {
	    if (this._fallbackText) {
	      return this._fallbackText;
	    }
	
	    var start;
	    var startValue = this._startText;
	    var startLength = startValue.length;
	    var end;
	    var endValue = this.getText();
	    var endLength = endValue.length;
	
	    for (start = 0; start < startLength; start++) {
	      if (startValue[start] !== endValue[start]) {
	        break;
	      }
	    }
	
	    var minEnd = startLength - start;
	    for (end = 1; end <= minEnd; end++) {
	      if (startValue[startLength - end] !== endValue[endLength - end]) {
	        break;
	      }
	    }
	
	    var sliceTail = end > 1 ? 1 - end : undefined;
	    this._fallbackText = endValue.slice(start, sliceTail);
	    return this._fallbackText;
	  }
	});
	
	PooledClass.addPoolingTo(FallbackCompositionState);
	
	module.exports = FallbackCompositionState;

/***/ },
/* 142 */
/*!***********************************************!*\
  !*** ./~/react/lib/getTextContentAccessor.js ***!
  \***********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getTextContentAccessor
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 140);
	
	var contentKey = null;
	
	/**
	 * Gets the key used to access text content on a DOM node.
	 *
	 * @return {?string} Key used to access text content.
	 * @internal
	 */
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    // Prefer textContent to innerText because many browsers support both but
	    // SVG <text> elements don't support innerText even when <div> does.
	    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
	  }
	  return contentKey;
	}
	
	module.exports = getTextContentAccessor;

/***/ },
/* 143 */
/*!**************************************************!*\
  !*** ./~/react/lib/SyntheticCompositionEvent.js ***!
  \**************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticCompositionEvent
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(/*! ./SyntheticEvent */ 144);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var CompositionEventInterface = {
	  data: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);
	
	module.exports = SyntheticCompositionEvent;

/***/ },
/* 144 */
/*!***************************************!*\
  !*** ./~/react/lib/SyntheticEvent.js ***!
  \***************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticEvent
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(/*! object-assign */ 96);
	
	var PooledClass = __webpack_require__(/*! ./PooledClass */ 98);
	
	var emptyFunction = __webpack_require__(/*! fbjs/lib/emptyFunction */ 104);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 103);
	
	var didWarnForAddedNewProperty = false;
	var isProxySupported = typeof Proxy === 'function';
	
	var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  target: null,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function (event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};
	
	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {*} targetInst Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @param {DOMEventTarget} nativeEventTarget Target node.
	 */
	function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
	  if (process.env.NODE_ENV !== 'production') {
	    // these have a getter/setter for warnings
	    delete this.nativeEvent;
	    delete this.preventDefault;
	    delete this.stopPropagation;
	  }
	
	  this.dispatchConfig = dispatchConfig;
	  this._targetInst = targetInst;
	  this.nativeEvent = nativeEvent;
	
	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      delete this[propName]; // this has a getter/setter for warnings
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      if (propName === 'target') {
	        this.target = nativeEventTarget;
	      } else {
	        this[propName] = nativeEvent[propName];
	      }
	    }
	  }
	
	  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	  return this;
	}
	
	_assign(SyntheticEvent.prototype, {
	
	  preventDefault: function () {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }
	
	    if (event.preventDefault) {
	      event.preventDefault();
	    } else {
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },
	
	  stopPropagation: function () {
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }
	
	    if (event.stopPropagation) {
	      event.stopPropagation();
	    } else {
	      event.cancelBubble = true;
	    }
	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },
	
	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function () {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },
	
	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,
	
	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function () {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      if (process.env.NODE_ENV !== 'production') {
	        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
	      } else {
	        this[propName] = null;
	      }
	    }
	    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
	      this[shouldBeReleasedProperties[i]] = null;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
	      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
	      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
	    }
	  }
	
	});
	
	SyntheticEvent.Interface = EventInterface;
	
	if (process.env.NODE_ENV !== 'production') {
	  if (isProxySupported) {
	    /*eslint-disable no-func-assign */
	    SyntheticEvent = new Proxy(SyntheticEvent, {
	      construct: function (target, args) {
	        return this.apply(target, Object.create(target.prototype), args);
	      },
	      apply: function (constructor, that, args) {
	        return new Proxy(constructor.apply(that, args), {
	          set: function (target, prop, value) {
	            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
	              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
	              didWarnForAddedNewProperty = true;
	            }
	            target[prop] = value;
	            return true;
	          }
	        });
	      }
	    });
	    /*eslint-enable no-func-assign */
	  }
	}
	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 *
	 * @param {function} Class
	 * @param {?object} Interface
	 */
	SyntheticEvent.augmentClass = function (Class, Interface) {
	  var Super = this;
	
	  var E = function () {};
	  E.prototype = Super.prototype;
	  var prototype = new E();
	
	  _assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;
	
	  Class.Interface = _assign({}, Super.Interface, Interface);
	  Class.augmentClass = Super.augmentClass;
	
	  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
	};
	
	PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);
	
	module.exports = SyntheticEvent;
	
	/**
	  * Helper to nullify syntheticEvent instance properties when destructing
	  *
	  * @param {object} SyntheticEvent
	  * @param {String} propName
	  * @return {object} defineProperty object
	  */
	function getPooledWarningPropertyDefinition(propName, getVal) {
	  var isFunction = typeof getVal === 'function';
	  return {
	    configurable: true,
	    set: set,
	    get: get
	  };
	
	  function set(val) {
	    var action = isFunction ? 'setting the method' : 'setting the property';
	    warn(action, 'This is effectively a no-op');
	    return val;
	  }
	
	  function get() {
	    var action = isFunction ? 'accessing the method' : 'accessing the property';
	    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
	    warn(action, result);
	    return getVal;
	  }
	
	  function warn(action, result) {
	    var warningCondition = false;
	    process.env.NODE_ENV !== 'production' ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\'re seeing this, ' + 'you\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
	  }
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 145 */
/*!********************************************!*\
  !*** ./~/react/lib/SyntheticInputEvent.js ***!
  \********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticInputEvent
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(/*! ./SyntheticEvent */ 144);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var InputEventInterface = {
	  data: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);
	
	module.exports = SyntheticInputEvent;

/***/ },
/* 146 */
/*!******************************************!*\
  !*** ./~/react/lib/ChangeEventPlugin.js ***!
  \******************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ChangeEventPlugin
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(/*! ./EventConstants */ 132);
	var EventPluginHub = __webpack_require__(/*! ./EventPluginHub */ 134);
	var EventPropagators = __webpack_require__(/*! ./EventPropagators */ 133);
	var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 140);
	var ReactDOMComponentTree = __webpack_require__(/*! ./ReactDOMComponentTree */ 127);
	var ReactUpdates = __webpack_require__(/*! ./ReactUpdates */ 147);
	var SyntheticEvent = __webpack_require__(/*! ./SyntheticEvent */ 144);
	
	var getEventTarget = __webpack_require__(/*! ./getEventTarget */ 160);
	var isEventSupported = __webpack_require__(/*! ./isEventSupported */ 161);
	var isTextInputElement = __webpack_require__(/*! ./isTextInputElement */ 162);
	var keyOf = __webpack_require__(/*! fbjs/lib/keyOf */ 116);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var eventTypes = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onChange: null }),
	      captured: keyOf({ onChangeCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]
	  }
	};
	
	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementInst = null;
	var activeElementValue = null;
	var activeElementValueProp = null;
	
	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
	}
	
	var doesChangeEventBubble = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // See `handleChange` comment below
	  doesChangeEventBubble = isEventSupported('change') && (!('documentMode' in document) || document.documentMode > 8);
	}
	
	function manualDispatchChangeEvent(nativeEvent) {
	  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	
	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  ReactUpdates.batchedUpdates(runEventInBatch, event);
	}
	
	function runEventInBatch(event) {
	  EventPluginHub.enqueueEvents(event);
	  EventPluginHub.processEventQueue(false);
	}
	
	function startWatchingForChangeEventIE8(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
	}
	
	function stopWatchingForChangeEventIE8() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
	  activeElement = null;
	  activeElementInst = null;
	}
	
	function getTargetInstForChangeEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topChange) {
	    return targetInst;
	  }
	}
	function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForChangeEventIE8();
	    startWatchingForChangeEventIE8(target, targetInst);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForChangeEventIE8();
	  }
	}
	
	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events.
	  // IE10+ fire input events to often, such when a placeholder
	  // changes or when an input with a placeholder is focused.
	  isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 11);
	}
	
	/**
	 * (For IE <=11) Replacement getter/setter for the `value` property that gets
	 * set on the active element.
	 */
	var newValueProp = {
	  get: function () {
	    return activeElementValueProp.get.call(this);
	  },
	  set: function (val) {
	    // Cast to a string so we can do equality checks.
	    activeElementValue = '' + val;
	    activeElementValueProp.set.call(this, val);
	  }
	};
	
	/**
	 * (For IE <=11) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElementValue = target.value;
	  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');
	
	  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
	  // on DOM elements
	  Object.defineProperty(activeElement, 'value', newValueProp);
	  if (activeElement.attachEvent) {
	    activeElement.attachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.addEventListener('propertychange', handlePropertyChange, false);
	  }
	}
	
	/**
	 * (For IE <=11) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }
	
	  // delete restores the original property definition
	  delete activeElement.value;
	
	  if (activeElement.detachEvent) {
	    activeElement.detachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.removeEventListener('propertychange', handlePropertyChange, false);
	  }
	
	  activeElement = null;
	  activeElementInst = null;
	  activeElementValue = null;
	  activeElementValueProp = null;
	}
	
	/**
	 * (For IE <=11) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  var value = nativeEvent.srcElement.value;
	  if (value === activeElementValue) {
	    return;
	  }
	  activeElementValue = value;
	
	  manualDispatchChangeEvent(nativeEvent);
	}
	
	/**
	 * If a `change` event should be fired, returns the target's ID.
	 */
	function getTargetInstForInputEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topInput) {
	    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
	    // what we want so fall through here and trigger an abstract event
	    return targetInst;
	  }
	}
	
	function handleEventsForInputEventIE(topLevelType, target, targetInst) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // In IE8, we can capture almost all .value changes by adding a
	    // propertychange handler and looking for events with propertyName
	    // equal to 'value'
	    // In IE9-11, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(target, targetInst);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForValueChange();
	  }
	}
	
	// For IE8 and IE9.
	function getTargetInstForInputEventIE(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    if (activeElement && activeElement.value !== activeElementValue) {
	      activeElementValue = activeElement.value;
	      return activeElementInst;
	    }
	  }
	}
	
	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
	}
	
	function getTargetInstForClickEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topClick) {
	    return targetInst;
	  }
	}
	
	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;
	
	    var getTargetInstFunc, handleEventFunc;
	    if (shouldUseChangeEvent(targetNode)) {
	      if (doesChangeEventBubble) {
	        getTargetInstFunc = getTargetInstForChangeEvent;
	      } else {
	        handleEventFunc = handleEventsForChangeEventIE8;
	      }
	    } else if (isTextInputElement(targetNode)) {
	      if (isInputEventSupported) {
	        getTargetInstFunc = getTargetInstForInputEvent;
	      } else {
	        getTargetInstFunc = getTargetInstForInputEventIE;
	        handleEventFunc = handleEventsForInputEventIE;
	      }
	    } else if (shouldUseClickEvent(targetNode)) {
	      getTargetInstFunc = getTargetInstForClickEvent;
	    }
	
	    if (getTargetInstFunc) {
	      var inst = getTargetInstFunc(topLevelType, targetInst);
	      if (inst) {
	        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);
	        event.type = 'change';
	        EventPropagators.accumulateTwoPhaseDispatches(event);
	        return event;
	      }
	    }
	
	    if (handleEventFunc) {
	      handleEventFunc(topLevelType, targetNode, targetInst);
	    }
	  }
	
	};
	
	module.exports = ChangeEventPlugin;

/***/ },
/* 147 */
/*!*************************************!*\
  !*** ./~/react/lib/ReactUpdates.js ***!
  \*************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdates
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(/*! ./reactProdInvariant */ 99),
	    _assign = __webpack_require__(/*! object-assign */ 96);
	
	var CallbackQueue = __webpack_require__(/*! ./CallbackQueue */ 148);
	var PooledClass = __webpack_require__(/*! ./PooledClass */ 98);
	var ReactFeatureFlags = __webpack_require__(/*! ./ReactFeatureFlags */ 149);
	var ReactReconciler = __webpack_require__(/*! ./ReactReconciler */ 150);
	var Transaction = __webpack_require__(/*! ./Transaction */ 159);
	
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 100);
	
	var dirtyComponents = [];
	var updateBatchNumber = 0;
	var asapCallbackQueue = CallbackQueue.getPooled();
	var asapEnqueued = false;
	
	var batchingStrategy = null;
	
	function ensureInjected() {
	  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
	}
	
	var NESTED_UPDATES = {
	  initialize: function () {
	    this.dirtyComponentsLength = dirtyComponents.length;
	  },
	  close: function () {
	    if (this.dirtyComponentsLength !== dirtyComponents.length) {
	      // Additional updates were enqueued by componentDidUpdate handlers or
	      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
	      // these new updates so that if A's componentDidUpdate calls setState on
	      // B, B will update before the callback A's updater provided when calling
	      // setState.
	      dirtyComponents.splice(0, this.dirtyComponentsLength);
	      flushBatchedUpdates();
	    } else {
	      dirtyComponents.length = 0;
	    }
	  }
	};
	
	var UPDATE_QUEUEING = {
	  initialize: function () {
	    this.callbackQueue.reset();
	  },
	  close: function () {
	    this.callbackQueue.notifyAll();
	  }
	};
	
	var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];
	
	function ReactUpdatesFlushTransaction() {
	  this.reinitializeTransaction();
	  this.dirtyComponentsLength = null;
	  this.callbackQueue = CallbackQueue.getPooled();
	  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */true);
	}
	
	_assign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  destructor: function () {
	    this.dirtyComponentsLength = null;
	    CallbackQueue.release(this.callbackQueue);
	    this.callbackQueue = null;
	    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
	    this.reconcileTransaction = null;
	  },
	
	  perform: function (method, scope, a) {
	    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
	    // with this transaction's wrappers around it.
	    return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
	  }
	});
	
	PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);
	
	function batchedUpdates(callback, a, b, c, d, e) {
	  ensureInjected();
	  batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
	}
	
	/**
	 * Array comparator for ReactComponents by mount ordering.
	 *
	 * @param {ReactComponent} c1 first component you're comparing
	 * @param {ReactComponent} c2 second component you're comparing
	 * @return {number} Return value usable by Array.prototype.sort().
	 */
	function mountOrderComparator(c1, c2) {
	  return c1._mountOrder - c2._mountOrder;
	}
	
	function runBatchedUpdates(transaction) {
	  var len = transaction.dirtyComponentsLength;
	  !(len === dirtyComponents.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;
	
	  // Since reconciling a component higher in the owner hierarchy usually (not
	  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
	  // them before their children by sorting the array.
	  dirtyComponents.sort(mountOrderComparator);
	
	  // Any updates enqueued while reconciling must be performed after this entire
	  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
	  // C, B could update twice in a single batch if C's render enqueues an update
	  // to B (since B would have already updated, we should skip it, and the only
	  // way we can know to do so is by checking the batch counter).
	  updateBatchNumber++;
	
	  for (var i = 0; i < len; i++) {
	    // If a component is unmounted before pending changes apply, it will still
	    // be here, but we assume that it has cleared its _pendingCallbacks and
	    // that performUpdateIfNecessary is a noop.
	    var component = dirtyComponents[i];
	
	    // If performUpdateIfNecessary happens to enqueue any new updates, we
	    // shouldn't execute the callbacks until the next render happens, so
	    // stash the callbacks first
	    var callbacks = component._pendingCallbacks;
	    component._pendingCallbacks = null;
	
	    var markerName;
	    if (ReactFeatureFlags.logTopLevelRenders) {
	      var namedComponent = component;
	      // Duck type TopLevelWrapper. This is probably always true.
	      if (component._currentElement.props === component._renderedComponent._currentElement) {
	        namedComponent = component._renderedComponent;
	      }
	      markerName = 'React update: ' + namedComponent.getName();
	      console.time(markerName);
	    }
	
	    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);
	
	    if (markerName) {
	      console.timeEnd(markerName);
	    }
	
	    if (callbacks) {
	      for (var j = 0; j < callbacks.length; j++) {
	        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
	      }
	    }
	  }
	}
	
	var flushBatchedUpdates = function () {
	  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
	  // array and perform any updates enqueued by mount-ready handlers (i.e.,
	  // componentDidUpdate) but we need to check here too in order to catch
	  // updates enqueued by setState callbacks and asap calls.
	  while (dirtyComponents.length || asapEnqueued) {
	    if (dirtyComponents.length) {
	      var transaction = ReactUpdatesFlushTransaction.getPooled();
	      transaction.perform(runBatchedUpdates, null, transaction);
	      ReactUpdatesFlushTransaction.release(transaction);
	    }
	
	    if (asapEnqueued) {
	      asapEnqueued = false;
	      var queue = asapCallbackQueue;
	      asapCallbackQueue = CallbackQueue.getPooled();
	      queue.notifyAll();
	      CallbackQueue.release(queue);
	    }
	  }
	};
	
	/**
	 * Mark a component as needing a rerender, adding an optional callback to a
	 * list of functions which will be executed once the rerender occurs.
	 */
	function enqueueUpdate(component) {
	  ensureInjected();
	
	  // Various parts of our code (such as ReactCompositeComponent's
	  // _renderValidatedComponent) assume that calls to render aren't nested;
	  // verify that that's the case. (This is called by each top-level update
	  // function, like setState, forceUpdate, etc.; creation and
	  // destruction of top-level components is guarded in ReactMount.)
	
	  if (!batchingStrategy.isBatchingUpdates) {
	    batchingStrategy.batchedUpdates(enqueueUpdate, component);
	    return;
	  }
	
	  dirtyComponents.push(component);
	  if (component._updateBatchNumber == null) {
	    component._updateBatchNumber = updateBatchNumber + 1;
	  }
	}
	
	/**
	 * Enqueue a callback to be run at the end of the current batching cycle. Throws
	 * if no updates are currently being performed.
	 */
	function asap(callback, context) {
	  !batchingStrategy.isBatchingUpdates ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;
	  asapCallbackQueue.enqueue(callback, context);
	  asapEnqueued = true;
	}
	
	var ReactUpdatesInjection = {
	  injectReconcileTransaction: function (ReconcileTransaction) {
	    !ReconcileTransaction ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
	    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
	  },
	
	  injectBatchingStrategy: function (_batchingStrategy) {
	    !_batchingStrategy ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
	    !(typeof _batchingStrategy.batchedUpdates === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
	    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
	    batchingStrategy = _batchingStrategy;
	  }
	};
	
	var ReactUpdates = {
	  /**
	   * React references `ReactReconcileTransaction` using this property in order
	   * to allow dependency injection.
	   *
	   * @internal
	   */
	  ReactReconcileTransaction: null,
	
	  batchedUpdates: batchedUpdates,
	  enqueueUpdate: enqueueUpdate,
	  flushBatchedUpdates: flushBatchedUpdates,
	  injection: ReactUpdatesInjection,
	  asap: asap
	};
	
	module.exports = ReactUpdates;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 148 */
/*!**************************************!*\
  !*** ./~/react/lib/CallbackQueue.js ***!
  \**************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CallbackQueue
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(/*! ./reactProdInvariant */ 99),
	    _assign = __webpack_require__(/*! object-assign */ 96);
	
	var PooledClass = __webpack_require__(/*! ./PooledClass */ 98);
	
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 100);
	
	/**
	 * A specialized pseudo-event module to help keep track of components waiting to
	 * be notified when their DOM representations are available for use.
	 *
	 * This implements `PooledClass`, so you should never need to instantiate this.
	 * Instead, use `CallbackQueue.getPooled()`.
	 *
	 * @class ReactMountReady
	 * @implements PooledClass
	 * @internal
	 */
	function CallbackQueue() {
	  this._callbacks = null;
	  this._contexts = null;
	}
	
	_assign(CallbackQueue.prototype, {
	
	  /**
	   * Enqueues a callback to be invoked when `notifyAll` is invoked.
	   *
	   * @param {function} callback Invoked when `notifyAll` is invoked.
	   * @param {?object} context Context to call `callback` with.
	   * @internal
	   */
	  enqueue: function (callback, context) {
	    this._callbacks = this._callbacks || [];
	    this._contexts = this._contexts || [];
	    this._callbacks.push(callback);
	    this._contexts.push(context);
	  },
	
	  /**
	   * Invokes all enqueued callbacks and clears the queue. This is invoked after
	   * the DOM representation of a component has been created or updated.
	   *
	   * @internal
	   */
	  notifyAll: function () {
	    var callbacks = this._callbacks;
	    var contexts = this._contexts;
	    if (callbacks) {
	      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
	      this._callbacks = null;
	      this._contexts = null;
	      for (var i = 0; i < callbacks.length; i++) {
	        callbacks[i].call(contexts[i]);
	      }
	      callbacks.length = 0;
	      contexts.length = 0;
	    }
	  },
	
	  checkpoint: function () {
	    return this._callbacks ? this._callbacks.length : 0;
	  },
	
	  rollback: function (len) {
	    if (this._callbacks) {
	      this._callbacks.length = len;
	      this._contexts.length = len;
	    }
	  },
	
	  /**
	   * Resets the internal queue.
	   *
	   * @internal
	   */
	  reset: function () {
	    this._callbacks = null;
	    this._contexts = null;
	  },
	
	  /**
	   * `PooledClass` looks for this.
	   */
	  destructor: function () {
	    this.reset();
	  }
	
	});
	
	PooledClass.addPoolingTo(CallbackQueue);
	
	module.exports = CallbackQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 149 */
/*!******************************************!*\
  !*** ./~/react/lib/ReactFeatureFlags.js ***!
  \******************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactFeatureFlags
	 * 
	 */
	
	'use strict';
	
	var ReactFeatureFlags = {
	  // When true, call console.time() before and .timeEnd() after each top-level
	  // render (both initial renders and updates). Useful when looking at prod-mode
	  // timeline profiles in Chrome, for example.
	  logTopLevelRenders: false
	};
	
	module.exports = ReactFeatureFlags;

/***/ },
/* 150 */
/*!****************************************!*\
  !*** ./~/react/lib/ReactReconciler.js ***!
  \****************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconciler
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(/*! ./reactProdInvariant */ 99);
	
	var ReactRef = __webpack_require__(/*! ./ReactRef */ 151);
	var ReactInstrumentation = __webpack_require__(/*! ./ReactInstrumentation */ 153);
	
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 100);
	
	/**
	 * Helper to call ReactRef.attachRefs with this composite component, split out
	 * to avoid allocations in the transaction mount-ready queue.
	 */
	function attachRefs() {
	  ReactRef.attachRefs(this, this._currentElement);
	}
	
	var ReactReconciler = {
	
	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} the containing host component instance
	   * @param {?object} info about the host container
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context) {
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement);
	        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'mountComponent');
	      }
	    }
	    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context);
	    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'mountComponent');
	        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
	      }
	    }
	    return markup;
	  },
	
	  /**
	   * Returns a value that can be passed to
	   * ReactComponentEnvironment.replaceNodeWithMarkup.
	   */
	  getHostNode: function (internalInstance) {
	    return internalInstance.getHostNode();
	  },
	
	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (internalInstance, safely) {
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'unmountComponent');
	      }
	    }
	    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
	    internalInstance.unmountComponent(safely);
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'unmountComponent');
	        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
	      }
	    }
	  },
	
	  /**
	   * Update a component using a new element.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @internal
	   */
	  receiveComponent: function (internalInstance, nextElement, transaction, context) {
	    var prevElement = internalInstance._currentElement;
	
	    if (nextElement === prevElement && context === internalInstance._context) {
	      // Since elements are immutable after the owner is rendered,
	      // we can do a cheap identity compare here to determine if this is a
	      // superfluous reconcile. It's possible for state to be mutable but such
	      // change should trigger an update of the owner which would recreate
	      // the element. We explicitly check for the existence of an owner since
	      // it's possible for an element created outside a composite to be
	      // deeply mutated and reused.
	
	      // TODO: Bailing out early is just a perf optimization right?
	      // TODO: Removing the return statement should affect correctness?
	      return;
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
	        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'receiveComponent');
	      }
	    }
	
	    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);
	
	    if (refsChanged) {
	      ReactRef.detachRefs(internalInstance, prevElement);
	    }
	
	    internalInstance.receiveComponent(nextElement, transaction, context);
	
	    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'receiveComponent');
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  },
	
	  /**
	   * Flush any dirty changes in a component.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {
	    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
	      // The component's enqueued batch number should always be the current
	      // batch or the following one.
	      !(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'performUpdateIfNecessary: Unexpected batch number (current %s, pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : _prodInvariant('121', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
	      return;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'performUpdateIfNecessary');
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
	      }
	    }
	    internalInstance.performUpdateIfNecessary(transaction);
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'performUpdateIfNecessary');
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  }
	
	};
	
	module.exports = ReactReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 151 */
/*!*********************************!*\
  !*** ./~/react/lib/ReactRef.js ***!
  \*********************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactRef
	 */
	
	'use strict';
	
	var ReactOwner = __webpack_require__(/*! ./ReactOwner */ 152);
	
	var ReactRef = {};
	
	function attachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(component.getPublicInstance());
	  } else {
	    // Legacy ref
	    ReactOwner.addComponentAsRefTo(component, ref, owner);
	  }
	}
	
	function detachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(null);
	  } else {
	    // Legacy ref
	    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
	  }
	}
	
	ReactRef.attachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    attachRef(ref, instance, element._owner);
	  }
	};
	
	ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
	  // If either the owner or a `ref` has changed, make sure the newest owner
	  // has stored a reference to `this`, and the previous owner (if different)
	  // has forgotten the reference to `this`. We use the element instead
	  // of the public this.props because the post processing cannot determine
	  // a ref. The ref conceptually lives on the element.
	
	  // TODO: Should this even be possible? The owner cannot change because
	  // it's forbidden by shouldUpdateReactComponent. The ref can change
	  // if you swap the keys of but not the refs. Reconsider where this check
	  // is made. It probably belongs where the key checking and
	  // instantiateReactComponent is done.
	
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	
	  return(
	    // This has a few false positives w/r/t empty components.
	    prevEmpty || nextEmpty || nextElement._owner !== prevElement._owner || nextElement.ref !== prevElement.ref
	  );
	};
	
	ReactRef.detachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    detachRef(ref, instance, element._owner);
	  }
	};
	
	module.exports = ReactRef;

/***/ },
/* 152 */
/*!***********************************!*\
  !*** ./~/react/lib/ReactOwner.js ***!
  \***********************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactOwner
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(/*! ./reactProdInvariant */ 99);
	
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 100);
	
	/**
	 * ReactOwners are capable of storing references to owned components.
	 *
	 * All components are capable of //being// referenced by owner components, but
	 * only ReactOwner components are capable of //referencing// owned components.
	 * The named reference is known as a "ref".
	 *
	 * Refs are available when mounted and updated during reconciliation.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return (
	 *         <div onClick={this.handleClick}>
	 *           <CustomComponent ref="custom" />
	 *         </div>
	 *       );
	 *     },
	 *     handleClick: function() {
	 *       this.refs.custom.handleClick();
	 *     },
	 *     componentDidMount: function() {
	 *       this.refs.custom.initialize();
	 *     }
	 *   });
	 *
	 * Refs should rarely be used. When refs are used, they should only be done to
	 * control data that is not handled by React's data flow.
	 *
	 * @class ReactOwner
	 */
	var ReactOwner = {
	
	  /**
	   * @param {?object} object
	   * @return {boolean} True if `object` is a valid owner.
	   * @final
	   */
	  isValidOwner: function (object) {
	    return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
	  },
	
	  /**
	   * Adds a component by ref to an owner component.
	   *
	   * @param {ReactComponent} component Component to reference.
	   * @param {string} ref Name by which to refer to the component.
	   * @param {ReactOwner} owner Component on which to record the ref.
	   * @final
	   * @internal
	   */
	  addComponentAsRefTo: function (component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
	    owner.attachRef(ref, component);
	  },
	
	  /**
	   * Removes a component by ref from an owner component.
	   *
	   * @param {ReactComponent} component Component to dereference.
	   * @param {string} ref Name of the ref to remove.
	   * @param {ReactOwner} owner Component on which the ref is recorded.
	   * @final
	   * @internal
	   */
	  removeComponentAsRefFrom: function (component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
	    var ownerPublicInstance = owner.getPublicInstance();
	    // Check that `component`'s owner is still alive and that `component` is still the current ref
	    // because we do not want to detach the ref if another component stole it.
	    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
	      owner.detachRef(ref);
	    }
	  }
	
	};
	
	module.exports = ReactOwner;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 153 */
/*!*********************************************!*\
  !*** ./~/react/lib/ReactInstrumentation.js ***!
  \*********************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstrumentation
	 */
	
	'use strict';
	
	var debugTool = null;
	
	if (process.env.NODE_ENV !== 'production') {
	  var ReactDebugTool = __webpack_require__(/*! ./ReactDebugTool */ 154);
	  debugTool = ReactDebugTool;
	}
	
	module.exports = { debugTool: debugTool };
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 154 */
/*!***************************************!*\
  !*** ./~/react/lib/ReactDebugTool.js ***!
  \***************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDebugTool
	 */
	
	'use strict';
	
	var ReactInvalidSetStateWarningDevTool = __webpack_require__(/*! ./ReactInvalidSetStateWarningDevTool */ 155);
	var ReactHostOperationHistoryDevtool = __webpack_require__(/*! ./ReactHostOperationHistoryDevtool */ 156);
	var ReactComponentTreeDevtool = __webpack_require__(/*! ./ReactComponentTreeDevtool */ 120);
	var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 140);
	
	var performanceNow = __webpack_require__(/*! fbjs/lib/performanceNow */ 157);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 103);
	
	var eventHandlers = [];
	var handlerDoesThrowForEvent = {};
	
	function emitEvent(handlerFunctionName, arg1, arg2, arg3, arg4, arg5) {
	  eventHandlers.forEach(function (handler) {
	    try {
	      if (handler[handlerFunctionName]) {
	        handler[handlerFunctionName](arg1, arg2, arg3, arg4, arg5);
	      }
	    } catch (e) {
	      process.env.NODE_ENV !== 'production' ? warning(handlerDoesThrowForEvent[handlerFunctionName], 'exception thrown by devtool while handling %s: %s', handlerFunctionName, e + '\n' + e.stack) : void 0;
	      handlerDoesThrowForEvent[handlerFunctionName] = true;
	    }
	  });
	}
	
	var isProfiling = false;
	var flushHistory = [];
	var lifeCycleTimerStack = [];
	var currentFlushNesting = 0;
	var currentFlushMeasurements = null;
	var currentFlushStartTime = null;
	var currentTimerDebugID = null;
	var currentTimerStartTime = null;
	var currentTimerNestedFlushDuration = null;
	var currentTimerType = null;
	
	function clearHistory() {
	  ReactComponentTreeDevtool.purgeUnmountedComponents();
	  ReactHostOperationHistoryDevtool.clearHistory();
	}
	
	function getTreeSnapshot(registeredIDs) {
	  return registeredIDs.reduce(function (tree, id) {
	    var ownerID = ReactComponentTreeDevtool.getOwnerID(id);
	    var parentID = ReactComponentTreeDevtool.getParentID(id);
	    tree[id] = {
	      displayName: ReactComponentTreeDevtool.getDisplayName(id),
	      text: ReactComponentTreeDevtool.getText(id),
	      updateCount: ReactComponentTreeDevtool.getUpdateCount(id),
	      childIDs: ReactComponentTreeDevtool.getChildIDs(id),
	      // Text nodes don't have owners but this is close enough.
	      ownerID: ownerID || ReactComponentTreeDevtool.getOwnerID(parentID),
	      parentID: parentID
	    };
	    return tree;
	  }, {});
	}
	
	function resetMeasurements() {
	  var previousStartTime = currentFlushStartTime;
	  var previousMeasurements = currentFlushMeasurements || [];
	  var previousOperations = ReactHostOperationHistoryDevtool.getHistory();
	
	  if (currentFlushNesting === 0) {
	    currentFlushStartTime = null;
	    currentFlushMeasurements = null;
	    clearHistory();
	    return;
	  }
	
	  if (previousMeasurements.length || previousOperations.length) {
	    var registeredIDs = ReactComponentTreeDevtool.getRegisteredIDs();
	    flushHistory.push({
	      duration: performanceNow() - previousStartTime,
	      measurements: previousMeasurements || [],
	      operations: previousOperations || [],
	      treeSnapshot: getTreeSnapshot(registeredIDs)
	    });
	  }
	
	  clearHistory();
	  currentFlushStartTime = performanceNow();
	  currentFlushMeasurements = [];
	}
	
	function checkDebugID(debugID) {
	  process.env.NODE_ENV !== 'production' ? warning(debugID, 'ReactDebugTool: debugID may not be empty.') : void 0;
	}
	
	function beginLifeCycleTimer(debugID, timerType) {
	  if (currentFlushNesting === 0) {
	    return;
	  }
	  process.env.NODE_ENV !== 'production' ? warning(!currentTimerType, 'There is an internal error in the React performance measurement code. ' + 'Did not expect %s timer to start while %s timer is still in ' + 'progress for %s instance.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
	  currentTimerStartTime = performanceNow();
	  currentTimerNestedFlushDuration = 0;
	  currentTimerDebugID = debugID;
	  currentTimerType = timerType;
	}
	
	function endLifeCycleTimer(debugID, timerType) {
	  if (currentFlushNesting === 0) {
	    return;
	  }
	  process.env.NODE_ENV !== 'production' ? warning(currentTimerType === timerType, 'There is an internal error in the React performance measurement code. ' + 'We did not expect %s timer to stop while %s timer is still in ' + 'progress for %s instance. Please report this as a bug in React.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
	  if (isProfiling) {
	    currentFlushMeasurements.push({
	      timerType: timerType,
	      instanceID: debugID,
	      duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration
	    });
	  }
	  currentTimerStartTime = null;
	  currentTimerNestedFlushDuration = null;
	  currentTimerDebugID = null;
	  currentTimerType = null;
	}
	
	function pauseCurrentLifeCycleTimer() {
	  var currentTimer = {
	    startTime: currentTimerStartTime,
	    nestedFlushStartTime: performanceNow(),
	    debugID: currentTimerDebugID,
	    timerType: currentTimerType
	  };
	  lifeCycleTimerStack.push(currentTimer);
	  currentTimerStartTime = null;
	  currentTimerNestedFlushDuration = null;
	  currentTimerDebugID = null;
	  currentTimerType = null;
	}
	
	function resumeCurrentLifeCycleTimer() {
	  var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop();
	
	  var startTime = _lifeCycleTimerStack$.startTime;
	  var nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime;
	  var debugID = _lifeCycleTimerStack$.debugID;
	  var timerType = _lifeCycleTimerStack$.timerType;
	
	  var nestedFlushDuration = performanceNow() - nestedFlushStartTime;
	  currentTimerStartTime = startTime;
	  currentTimerNestedFlushDuration += nestedFlushDuration;
	  currentTimerDebugID = debugID;
	  currentTimerType = timerType;
	}
	
	var ReactDebugTool = {
	  addDevtool: function (devtool) {
	    eventHandlers.push(devtool);
	  },
	  removeDevtool: function (devtool) {
	    for (var i = 0; i < eventHandlers.length; i++) {
	      if (eventHandlers[i] === devtool) {
	        eventHandlers.splice(i, 1);
	        i--;
	      }
	    }
	  },
	  isProfiling: function () {
	    return isProfiling;
	  },
	  beginProfiling: function () {
	    if (isProfiling) {
	      return;
	    }
	
	    isProfiling = true;
	    flushHistory.length = 0;
	    resetMeasurements();
	    ReactDebugTool.addDevtool(ReactHostOperationHistoryDevtool);
	  },
	  endProfiling: function () {
	    if (!isProfiling) {
	      return;
	    }
	
	    isProfiling = false;
	    resetMeasurements();
	    ReactDebugTool.removeDevtool(ReactHostOperationHistoryDevtool);
	  },
	  getFlushHistory: function () {
	    return flushHistory;
	  },
	  onBeginFlush: function () {
	    currentFlushNesting++;
	    resetMeasurements();
	    pauseCurrentLifeCycleTimer();
	    emitEvent('onBeginFlush');
	  },
	  onEndFlush: function () {
	    resetMeasurements();
	    currentFlushNesting--;
	    resumeCurrentLifeCycleTimer();
	    emitEvent('onEndFlush');
	  },
	  onBeginLifeCycleTimer: function (debugID, timerType) {
	    checkDebugID(debugID);
	    emitEvent('onBeginLifeCycleTimer', debugID, timerType);
	    beginLifeCycleTimer(debugID, timerType);
	  },
	  onEndLifeCycleTimer: function (debugID, timerType) {
	    checkDebugID(debugID);
	    endLifeCycleTimer(debugID, timerType);
	    emitEvent('onEndLifeCycleTimer', debugID, timerType);
	  },
	  onBeginReconcilerTimer: function (debugID, timerType) {
	    checkDebugID(debugID);
	    emitEvent('onBeginReconcilerTimer', debugID, timerType);
	  },
	  onEndReconcilerTimer: function (debugID, timerType) {
	    checkDebugID(debugID);
	    emitEvent('onEndReconcilerTimer', debugID, timerType);
	  },
	  onError: function (debugID) {
	    if (currentTimerDebugID != null) {
	      endLifeCycleTimer(currentTimerDebugID, currentTimerType);
	    }
	    emitEvent('onError', debugID);
	  },
	  onBeginProcessingChildContext: function () {
	    emitEvent('onBeginProcessingChildContext');
	  },
	  onEndProcessingChildContext: function () {
	    emitEvent('onEndProcessingChildContext');
	  },
	  onHostOperation: function (debugID, type, payload) {
	    checkDebugID(debugID);
	    emitEvent('onHostOperation', debugID, type, payload);
	  },
	  onSetState: function () {
	    emitEvent('onSetState');
	  },
	  onSetDisplayName: function (debugID, displayName) {
	    checkDebugID(debugID);
	    emitEvent('onSetDisplayName', debugID, displayName);
	  },
	  onSetChildren: function (debugID, childDebugIDs) {
	    checkDebugID(debugID);
	    childDebugIDs.forEach(checkDebugID);
	    emitEvent('onSetChildren', debugID, childDebugIDs);
	  },
	  onSetOwner: function (debugID, ownerDebugID) {
	    checkDebugID(debugID);
	    emitEvent('onSetOwner', debugID, ownerDebugID);
	  },
	  onSetParent: function (debugID, parentDebugID) {
	    checkDebugID(debugID);
	    emitEvent('onSetParent', debugID, parentDebugID);
	  },
	  onSetText: function (debugID, text) {
	    checkDebugID(debugID);
	    emitEvent('onSetText', debugID, text);
	  },
	  onMountRootComponent: function (debugID) {
	    checkDebugID(debugID);
	    emitEvent('onMountRootComponent', debugID);
	  },
	  onBeforeMountComponent: function (debugID, element) {
	    checkDebugID(debugID);
	    emitEvent('onBeforeMountComponent', debugID, element);
	  },
	  onMountComponent: function (debugID) {
	    checkDebugID(debugID);
	    emitEvent('onMountComponent', debugID);
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    checkDebugID(debugID);
	    emitEvent('onBeforeUpdateComponent', debugID, element);
	  },
	  onUpdateComponent: function (debugID) {
	    checkDebugID(debugID);
	    emitEvent('onUpdateComponent', debugID);
	  },
	  onUnmountComponent: function (debugID) {
	    checkDebugID(debugID);
	    emitEvent('onUnmountComponent', debugID);
	  },
	  onTestEvent: function () {
	    emitEvent('onTestEvent');
	  }
	};
	
	ReactDebugTool.addDevtool(ReactInvalidSetStateWarningDevTool);
	ReactDebugTool.addDevtool(ReactComponentTreeDevtool);
	var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
	if (/[?&]react_perf\b/.test(url)) {
	  ReactDebugTool.beginProfiling();
	}
	
	module.exports = ReactDebugTool;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 155 */
/*!***********************************************************!*\
  !*** ./~/react/lib/ReactInvalidSetStateWarningDevTool.js ***!
  \***********************************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInvalidSetStateWarningDevTool
	 */
	
	'use strict';
	
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 103);
	
	if (process.env.NODE_ENV !== 'production') {
	  var processingChildContext = false;
	
	  var warnInvalidSetState = function () {
	    process.env.NODE_ENV !== 'production' ? warning(!processingChildContext, 'setState(...): Cannot call setState() inside getChildContext()') : void 0;
	  };
	}
	
	var ReactInvalidSetStateWarningDevTool = {
	  onBeginProcessingChildContext: function () {
	    processingChildContext = true;
	  },
	  onEndProcessingChildContext: function () {
	    processingChildContext = false;
	  },
	  onSetState: function () {
	    warnInvalidSetState();
	  }
	};
	
	module.exports = ReactInvalidSetStateWarningDevTool;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 156 */
/*!*********************************************************!*\
  !*** ./~/react/lib/ReactHostOperationHistoryDevtool.js ***!
  \*********************************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactHostOperationHistoryDevtool
	 */
	
	'use strict';
	
	var history = [];
	
	var ReactHostOperationHistoryDevtool = {
	  onHostOperation: function (debugID, type, payload) {
	    history.push({
	      instanceID: debugID,
	      type: type,
	      payload: payload
	    });
	  },
	  clearHistory: function () {
	    if (ReactHostOperationHistoryDevtool._preventClearing) {
	      // Should only be used for tests.
	      return;
	    }
	
	    history = [];
	  },
	  getHistory: function () {
	    return history;
	  }
	};
	
	module.exports = ReactHostOperationHistoryDevtool;

/***/ },
/* 157 */
/*!**********************************************!*\
  !*** ./~/react/~/fbjs/lib/performanceNow.js ***!
  \**********************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var performance = __webpack_require__(/*! ./performance */ 158);
	
	var performanceNow;
	
	/**
	 * Detect if we can use `window.performance.now()` and gracefully fallback to
	 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
	 * because of Facebook's testing infrastructure.
	 */
	if (performance.now) {
	  performanceNow = function performanceNow() {
	    return performance.now();
	  };
	} else {
	  performanceNow = function performanceNow() {
	    return Date.now();
	  };
	}
	
	module.exports = performanceNow;

/***/ },
/* 158 */
/*!*******************************************!*\
  !*** ./~/react/~/fbjs/lib/performance.js ***!
  \*******************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(/*! ./ExecutionEnvironment */ 140);
	
	var performance;
	
	if (ExecutionEnvironment.canUseDOM) {
	  performance = window.performance || window.msPerformance || window.webkitPerformance;
	}
	
	module.exports = performance || {};

/***/ },
/* 159 */
/*!************************************!*\
  !*** ./~/react/lib/Transaction.js ***!
  \************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Transaction
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(/*! ./reactProdInvariant */ 99);
	
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 100);
	
	/**
	 * `Transaction` creates a black box that is able to wrap any method such that
	 * certain invariants are maintained before and after the method is invoked
	 * (Even if an exception is thrown while invoking the wrapped method). Whoever
	 * instantiates a transaction can provide enforcers of the invariants at
	 * creation time. The `Transaction` class itself will supply one additional
	 * automatic invariant for you - the invariant that any transaction instance
	 * should not be run while it is already being run. You would typically create a
	 * single instance of a `Transaction` for reuse multiple times, that potentially
	 * is used to wrap several different methods. Wrappers are extremely simple -
	 * they only require implementing two methods.
	 *
	 * <pre>
	 *                       wrappers (injected at creation time)
	 *                                      +        +
	 *                                      |        |
	 *                    +-----------------|--------|--------------+
	 *                    |                 v        |              |
	 *                    |      +---------------+   |              |
	 *                    |   +--|    wrapper1   |---|----+         |
	 *                    |   |  +---------------+   v    |         |
	 *                    |   |          +-------------+  |         |
	 *                    |   |     +----|   wrapper2  |--------+   |
	 *                    |   |     |    +-------------+  |     |   |
	 *                    |   |     |                     |     |   |
	 *                    |   v     v                     v     v   | wrapper
	 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
	 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
	 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | +---+ +---+   +---------+   +---+ +---+ |
	 *                    |  initialize                    close    |
	 *                    +-----------------------------------------+
	 * </pre>
	 *
	 * Use cases:
	 * - Preserving the input selection ranges before/after reconciliation.
	 *   Restoring selection even in the event of an unexpected error.
	 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
	 *   while guaranteeing that afterwards, the event system is reactivated.
	 * - Flushing a queue of collected DOM mutations to the main UI thread after a
	 *   reconciliation takes place in a worker thread.
	 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
	 *   content.
	 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
	 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
	 * - (Future use case): Layout calculations before and after DOM updates.
	 *
	 * Transactional plugin API:
	 * - A module that has an `initialize` method that returns any precomputation.
	 * - and a `close` method that accepts the precomputation. `close` is invoked
	 *   when the wrapped process is completed, or has failed.
	 *
	 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
	 * that implement `initialize` and `close`.
	 * @return {Transaction} Single transaction for reuse in thread.
	 *
	 * @class Transaction
	 */
	var Mixin = {
	  /**
	   * Sets up this instance so that it is prepared for collecting metrics. Does
	   * so such that this setup method may be used on an instance that is already
	   * initialized, in a way that does not consume additional memory upon reuse.
	   * That can be useful if you decide to make your subclass of this mixin a
	   * "PooledClass".
	   */
	  reinitializeTransaction: function () {
	    this.transactionWrappers = this.getTransactionWrappers();
	    if (this.wrapperInitData) {
	      this.wrapperInitData.length = 0;
	    } else {
	      this.wrapperInitData = [];
	    }
	    this._isInTransaction = false;
	  },
	
	  _isInTransaction: false,
	
	  /**
	   * @abstract
	   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
	   */
	  getTransactionWrappers: null,
	
	  isInTransaction: function () {
	    return !!this._isInTransaction;
	  },
	
	  /**
	   * Executes the function within a safety window. Use this for the top level
	   * methods that result in large amounts of computation/mutations that would
	   * need to be safety checked. The optional arguments helps prevent the need
	   * to bind in many cases.
	   *
	   * @param {function} method Member of scope to call.
	   * @param {Object} scope Scope to invoke from.
	   * @param {Object?=} a Argument to pass to the method.
	   * @param {Object?=} b Argument to pass to the method.
	   * @param {Object?=} c Argument to pass to the method.
	   * @param {Object?=} d Argument to pass to the method.
	   * @param {Object?=} e Argument to pass to the method.
	   * @param {Object?=} f Argument to pass to the method.
	   *
	   * @return {*} Return value from `method`.
	   */
	  perform: function (method, scope, a, b, c, d, e, f) {
	    !!this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
	    var errorThrown;
	    var ret;
	    try {
	      this._isInTransaction = true;
	      // Catching errors makes debugging more difficult, so we start with
	      // errorThrown set to true before setting it to false after calling
	      // close -- if it's still set to true in the finally block, it means
	      // one of these calls threw.
	      errorThrown = true;
	      this.initializeAll(0);
	      ret = method.call(scope, a, b, c, d, e, f);
	      errorThrown = false;
	    } finally {
	      try {
	        if (errorThrown) {
	          // If `method` throws, prefer to show that stack trace over any thrown
	          // by invoking `closeAll`.
	          try {
	            this.closeAll(0);
	          } catch (err) {}
	        } else {
	          // Since `method` didn't throw, we don't want to silence the exception
	          // here.
	          this.closeAll(0);
	        }
	      } finally {
	        this._isInTransaction = false;
	      }
	    }
	    return ret;
	  },
	
	  initializeAll: function (startIndex) {
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      try {
	        // Catching errors makes debugging more difficult, so we start with the
	        // OBSERVED_ERROR state before overwriting it with the real return value
	        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
	        // block, it means wrapper.initialize threw.
	        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
	        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
	      } finally {
	        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
	          // The initializer for wrapper i threw an error; initialize the
	          // remaining wrappers but silence any exceptions from them to ensure
	          // that the first error is the one to bubble up.
	          try {
	            this.initializeAll(i + 1);
	          } catch (err) {}
	        }
	      }
	    }
	  },
	
	  /**
	   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
	   * them the respective return values of `this.transactionWrappers.init[i]`
	   * (`close`rs that correspond to initializers that failed will not be
	   * invoked).
	   */
	  closeAll: function (startIndex) {
	    !this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      var initData = this.wrapperInitData[i];
	      var errorThrown;
	      try {
	        // Catching errors makes debugging more difficult, so we start with
	        // errorThrown set to true before setting it to false after calling
	        // close -- if it's still set to true in the finally block, it means
	        // wrapper.close threw.
	        errorThrown = true;
	        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {
	          wrapper.close.call(this, initData);
	        }
	        errorThrown = false;
	      } finally {
	        if (errorThrown) {
	          // The closer for wrapper i threw an error; close the remaining
	          // wrappers but silence any exceptions from them to ensure that the
	          // first error is the one to bubble up.
	          try {
	            this.closeAll(i + 1);
	          } catch (e) {}
	        }
	      }
	    }
	    this.wrapperInitData.length = 0;
	  }
	};
	
	var Transaction = {
	
	  Mixin: Mixin,
	
	  /**
	   * Token to look for to determine if an error occurred.
	   */
	  OBSERVED_ERROR: {}
	
	};
	
	module.exports = Transaction;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 160 */
/*!***************************************!*\
  !*** ./~/react/lib/getEventTarget.js ***!
  \***************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventTarget
	 */
	
	'use strict';
	
	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */
	
	function getEventTarget(nativeEvent) {
	  var target = nativeEvent.target || nativeEvent.srcElement || window;
	
	  // Normalize SVG <use> element events #4963
	  if (target.correspondingUseElement) {
	    target = target.correspondingUseElement;
	  }
	
	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === 3 ? target.parentNode : target;
	}
	
	module.exports = getEventTarget;

/***/ },
/* 161 */
/*!*****************************************!*\
  !*** ./~/react/lib/isEventSupported.js ***!
  \*****************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isEventSupported
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 140);
	
	var useHasFeature;
	if (ExecutionEnvironment.canUseDOM) {
	  useHasFeature = document.implementation && document.implementation.hasFeature &&
	  // always returns true in newer browsers as per the standard.
	  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
	  document.implementation.hasFeature('', '') !== true;
	}
	
	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
	    return false;
	  }
	
	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = eventName in document;
	
	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }
	
	  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
	    // This is the only way to test support for the `wheel` event in IE9+.
	    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
	  }
	
	  return isSupported;
	}
	
	module.exports = isEventSupported;

/***/ },
/* 162 */
/*!*******************************************!*\
  !*** ./~/react/lib/isTextInputElement.js ***!
  \*******************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isTextInputElement
	 * 
	 */
	
	'use strict';
	
	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */
	
	var supportedInputTypes = {
	  'color': true,
	  'date': true,
	  'datetime': true,
	  'datetime-local': true,
	  'email': true,
	  'month': true,
	  'number': true,
	  'password': true,
	  'range': true,
	  'search': true,
	  'tel': true,
	  'text': true,
	  'time': true,
	  'url': true,
	  'week': true
	};
	
	function isTextInputElement(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	
	  if (nodeName === 'input') {
	    return !!supportedInputTypes[elem.type];
	  }
	
	  if (nodeName === 'textarea') {
	    return true;
	  }
	
	  return false;
	}
	
	module.exports = isTextInputElement;

/***/ },
/* 163 */
/*!************************************************!*\
  !*** ./~/react/lib/DefaultEventPluginOrder.js ***!
  \************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DefaultEventPluginOrder
	 */
	
	'use strict';
	
	var keyOf = __webpack_require__(/*! fbjs/lib/keyOf */ 116);
	
	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */
	var DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];
	
	module.exports = DefaultEventPluginOrder;

/***/ },
/* 164 */
/*!**********************************************!*\
  !*** ./~/react/lib/EnterLeaveEventPlugin.js ***!
  \**********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EnterLeaveEventPlugin
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(/*! ./EventConstants */ 132);
	var EventPropagators = __webpack_require__(/*! ./EventPropagators */ 133);
	var ReactDOMComponentTree = __webpack_require__(/*! ./ReactDOMComponentTree */ 127);
	var SyntheticMouseEvent = __webpack_require__(/*! ./SyntheticMouseEvent */ 165);
	
	var keyOf = __webpack_require__(/*! fbjs/lib/keyOf */ 116);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var eventTypes = {
	  mouseEnter: {
	    registrationName: keyOf({ onMouseEnter: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  },
	  mouseLeave: {
	    registrationName: keyOf({ onMouseLeave: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  }
	};
	
	var EnterLeaveEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }
	    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {
	      // Must not be a mouse in or mouse out - ignoring.
	      return null;
	    }
	
	    var win;
	    if (nativeEventTarget.window === nativeEventTarget) {
	      // `nativeEventTarget` is probably a window object.
	      win = nativeEventTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = nativeEventTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }
	
	    var from;
	    var to;
	    if (topLevelType === topLevelTypes.topMouseOut) {
	      from = targetInst;
	      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
	      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
	    } else {
	      // Moving to a node from outside the window.
	      from = null;
	      to = targetInst;
	    }
	
	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }
	
	    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
	    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);
	
	    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
	    leave.type = 'mouseleave';
	    leave.target = fromNode;
	    leave.relatedTarget = toNode;
	
	    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
	    enter.type = 'mouseenter';
	    enter.target = toNode;
	    enter.relatedTarget = fromNode;
	
	    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);
	
	    return [leave, enter];
	  }
	
	};
	
	module.exports = EnterLeaveEventPlugin;

/***/ },
/* 165 */
/*!********************************************!*\
  !*** ./~/react/lib/SyntheticMouseEvent.js ***!
  \********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticMouseEvent
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(/*! ./SyntheticUIEvent */ 166);
	var ViewportMetrics = __webpack_require__(/*! ./ViewportMetrics */ 167);
	
	var getEventModifierState = __webpack_require__(/*! ./getEventModifierState */ 168);
	
	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var MouseEventInterface = {
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: function (event) {
	    // Webkit, Firefox, IE9+
	    // which:  1 2 3
	    // button: 0 1 2 (standard)
	    var button = event.button;
	    if ('which' in event) {
	      return button;
	    }
	    // IE<9
	    // which:  undefined
	    // button: 0 0 0
	    // button: 1 4 2 (onmouseup)
	    return button === 2 ? 2 : button === 4 ? 1 : 0;
	  },
	  buttons: null,
	  relatedTarget: function (event) {
	    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
	  },
	  // "Proprietary" Interface.
	  pageX: function (event) {
	    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
	  },
	  pageY: function (event) {
	    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);
	
	module.exports = SyntheticMouseEvent;

/***/ },
/* 166 */
/*!*****************************************!*\
  !*** ./~/react/lib/SyntheticUIEvent.js ***!
  \*****************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticUIEvent
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(/*! ./SyntheticEvent */ 144);
	
	var getEventTarget = __webpack_require__(/*! ./getEventTarget */ 160);
	
	/**
	 * @interface UIEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var UIEventInterface = {
	  view: function (event) {
	    if (event.view) {
	      return event.view;
	    }
	
	    var target = getEventTarget(event);
	    if (target.window === target) {
	      // target is a window object
	      return target;
	    }
	
	    var doc = target.ownerDocument;
	    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	    if (doc) {
	      return doc.defaultView || doc.parentWindow;
	    } else {
	      return window;
	    }
	  },
	  detail: function (event) {
	    return event.detail || 0;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);
	
	module.exports = SyntheticUIEvent;

/***/ },
/* 167 */
/*!****************************************!*\
  !*** ./~/react/lib/ViewportMetrics.js ***!
  \****************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ViewportMetrics
	 */
	
	'use strict';
	
	var ViewportMetrics = {
	
	  currentScrollLeft: 0,
	
	  currentScrollTop: 0,
	
	  refreshScrollValues: function (scrollPosition) {
	    ViewportMetrics.currentScrollLeft = scrollPosition.x;
	    ViewportMetrics.currentScrollTop = scrollPosition.y;
	  }
	
	};
	
	module.exports = ViewportMetrics;

/***/ },
/* 168 */
/*!**********************************************!*\
  !*** ./~/react/lib/getEventModifierState.js ***!
  \**********************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventModifierState
	 */
	
	'use strict';
	
	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */
	
	var modifierKeyToProp = {
	  'Alt': 'altKey',
	  'Control': 'ctrlKey',
	  'Meta': 'metaKey',
	  'Shift': 'shiftKey'
	};
	
	// IE8 does not implement getModifierState so we simply map it to the only
	// modifier keys exposed by the event itself, does not support Lock-keys.
	// Currently, all major browsers except Chrome seems to support Lock-keys.
	function modifierStateGetter(keyArg) {
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}
	
	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}
	
	module.exports = getEventModifierState;

/***/ },
/* 169 */
/*!**********************************************!*\
  !*** ./~/react/lib/HTMLDOMPropertyConfig.js ***!
  \**********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule HTMLDOMPropertyConfig
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(/*! ./DOMProperty */ 128);
	
	var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
	var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
	var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
	var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
	var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;
	
	var HTMLDOMPropertyConfig = {
	  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
	  Properties: {
	    /**
	     * Standard Properties
	     */
	    accept: 0,
	    acceptCharset: 0,
	    accessKey: 0,
	    action: 0,
	    allowFullScreen: HAS_BOOLEAN_VALUE,
	    allowTransparency: 0,
	    alt: 0,
	    async: HAS_BOOLEAN_VALUE,
	    autoComplete: 0,
	    // autoFocus is polyfilled/normalized by AutoFocusUtils
	    // autoFocus: HAS_BOOLEAN_VALUE,
	    autoPlay: HAS_BOOLEAN_VALUE,
	    capture: HAS_BOOLEAN_VALUE,
	    cellPadding: 0,
	    cellSpacing: 0,
	    charSet: 0,
	    challenge: 0,
	    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    cite: 0,
	    classID: 0,
	    className: 0,
	    cols: HAS_POSITIVE_NUMERIC_VALUE,
	    colSpan: 0,
	    content: 0,
	    contentEditable: 0,
	    contextMenu: 0,
	    controls: HAS_BOOLEAN_VALUE,
	    coords: 0,
	    crossOrigin: 0,
	    data: 0, // For `<object />` acts as `src`.
	    dateTime: 0,
	    'default': HAS_BOOLEAN_VALUE,
	    defer: HAS_BOOLEAN_VALUE,
	    dir: 0,
	    disabled: HAS_BOOLEAN_VALUE,
	    download: HAS_OVERLOADED_BOOLEAN_VALUE,
	    draggable: 0,
	    encType: 0,
	    form: 0,
	    formAction: 0,
	    formEncType: 0,
	    formMethod: 0,
	    formNoValidate: HAS_BOOLEAN_VALUE,
	    formTarget: 0,
	    frameBorder: 0,
	    headers: 0,
	    height: 0,
	    hidden: HAS_BOOLEAN_VALUE,
	    high: 0,
	    href: 0,
	    hrefLang: 0,
	    htmlFor: 0,
	    httpEquiv: 0,
	    icon: 0,
	    id: 0,
	    inputMode: 0,
	    integrity: 0,
	    is: 0,
	    keyParams: 0,
	    keyType: 0,
	    kind: 0,
	    label: 0,
	    lang: 0,
	    list: 0,
	    loop: HAS_BOOLEAN_VALUE,
	    low: 0,
	    manifest: 0,
	    marginHeight: 0,
	    marginWidth: 0,
	    max: 0,
	    maxLength: 0,
	    media: 0,
	    mediaGroup: 0,
	    method: 0,
	    min: 0,
	    minLength: 0,
	    // Caution; `option.selected` is not updated if `select.multiple` is
	    // disabled with `removeAttribute`.
	    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    name: 0,
	    nonce: 0,
	    noValidate: HAS_BOOLEAN_VALUE,
	    open: HAS_BOOLEAN_VALUE,
	    optimum: 0,
	    pattern: 0,
	    placeholder: 0,
	    poster: 0,
	    preload: 0,
	    profile: 0,
	    radioGroup: 0,
	    readOnly: HAS_BOOLEAN_VALUE,
	    rel: 0,
	    required: HAS_BOOLEAN_VALUE,
	    reversed: HAS_BOOLEAN_VALUE,
	    role: 0,
	    rows: HAS_POSITIVE_NUMERIC_VALUE,
	    rowSpan: HAS_NUMERIC_VALUE,
	    sandbox: 0,
	    scope: 0,
	    scoped: HAS_BOOLEAN_VALUE,
	    scrolling: 0,
	    seamless: HAS_BOOLEAN_VALUE,
	    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    shape: 0,
	    size: HAS_POSITIVE_NUMERIC_VALUE,
	    sizes: 0,
	    span: HAS_POSITIVE_NUMERIC_VALUE,
	    spellCheck: 0,
	    src: 0,
	    srcDoc: 0,
	    srcLang: 0,
	    srcSet: 0,
	    start: HAS_NUMERIC_VALUE,
	    step: 0,
	    style: 0,
	    summary: 0,
	    tabIndex: 0,
	    target: 0,
	    title: 0,
	    // Setting .type throws on non-<input> tags
	    type: 0,
	    useMap: 0,
	    value: 0,
	    width: 0,
	    wmode: 0,
	    wrap: 0,
	
	    /**
	     * RDFa Properties
	     */
	    about: 0,
	    datatype: 0,
	    inlist: 0,
	    prefix: 0,
	    // property is also supported for OpenGraph in meta tags.
	    property: 0,
	    resource: 0,
	    'typeof': 0,
	    vocab: 0,
	
	    /**
	     * Non-standard Properties
	     */
	    // autoCapitalize and autoCorrect are supported in Mobile Safari for
	    // keyboard hints.
	    autoCapitalize: 0,
	    autoCorrect: 0,
	    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
	    autoSave: 0,
	    // color is for Safari mask-icon link
	    color: 0,
	    // itemProp, itemScope, itemType are for
	    // Microdata support. See http://schema.org/docs/gs.html
	    itemProp: 0,
	    itemScope: HAS_BOOLEAN_VALUE,
	    itemType: 0,
	    // itemID and itemRef are for Microdata support as well but
	    // only specified in the WHATWG spec document. See
	    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
	    itemID: 0,
	    itemRef: 0,
	    // results show looking glass icon and recent searches on input
	    // search fields in WebKit/Blink
	    results: 0,
	    // IE-only attribute that specifies security restrictions on an iframe
	    // as an alternative to the sandbox attribute on IE<10
	    security: 0,
	    // IE-only attribute that controls focus behavior
	    unselectable: 0
	  },
	  DOMAttributeNames: {
	    acceptCharset: 'accept-charset',
	    className: 'class',
	    htmlFor: 'for',
	    httpEquiv: 'http-equiv'
	  },
	  DOMPropertyNames: {}
	};
	
	module.exports = HTMLDOMPropertyConfig;

/***/ },
/* 170 */
/*!*********************************************************!*\
  !*** ./~/react/lib/ReactComponentBrowserEnvironment.js ***!
  \*********************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentBrowserEnvironment
	 */
	
	'use strict';
	
	var DOMChildrenOperations = __webpack_require__(/*! ./DOMChildrenOperations */ 171);
	var ReactDOMIDOperations = __webpack_require__(/*! ./ReactDOMIDOperations */ 183);
	
	/**
	 * Abstracts away all functionality of the reconciler that requires knowledge of
	 * the browser context. TODO: These callers should be refactored to avoid the
	 * need for this injection.
	 */
	var ReactComponentBrowserEnvironment = {
	
	  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,
	
	  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup,
	
	  /**
	   * If a particular environment requires that some resources be cleaned up,
	   * specify this in the injected Mixin. In the DOM, we would likely want to
	   * purge any cached node ID lookups.
	   *
	   * @private
	   */
	  unmountIDFromEnvironment: function (rootNodeID) {}
	
	};
	
	module.exports = ReactComponentBrowserEnvironment;

/***/ },
/* 171 */
/*!**********************************************!*\
  !*** ./~/react/lib/DOMChildrenOperations.js ***!
  \**********************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMChildrenOperations
	 */
	
	'use strict';
	
	var DOMLazyTree = __webpack_require__(/*! ./DOMLazyTree */ 172);
	var Danger = __webpack_require__(/*! ./Danger */ 178);
	var ReactMultiChildUpdateTypes = __webpack_require__(/*! ./ReactMultiChildUpdateTypes */ 182);
	var ReactDOMComponentTree = __webpack_require__(/*! ./ReactDOMComponentTree */ 127);
	var ReactInstrumentation = __webpack_require__(/*! ./ReactInstrumentation */ 153);
	
	var createMicrosoftUnsafeLocalFunction = __webpack_require__(/*! ./createMicrosoftUnsafeLocalFunction */ 175);
	var setInnerHTML = __webpack_require__(/*! ./setInnerHTML */ 174);
	var setTextContent = __webpack_require__(/*! ./setTextContent */ 176);
	
	function getNodeAfter(parentNode, node) {
	  // Special case for text components, which return [open, close] comments
	  // from getHostNode.
	  if (Array.isArray(node)) {
	    node = node[1];
	  }
	  return node ? node.nextSibling : parentNode.firstChild;
	}
	
	/**
	 * Inserts `childNode` as a child of `parentNode` at the `index`.
	 *
	 * @param {DOMElement} parentNode Parent node in which to insert.
	 * @param {DOMElement} childNode Child node to insert.
	 * @param {number} index Index at which to insert the child.
	 * @internal
	 */
	var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
	  // We rely exclusively on `insertBefore(node, null)` instead of also using
	  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
	  // we are careful to use `null`.)
	  parentNode.insertBefore(childNode, referenceNode);
	});
	
	function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
	  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
	}
	
	function moveChild(parentNode, childNode, referenceNode) {
	  if (Array.isArray(childNode)) {
	    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
	  } else {
	    insertChildAt(parentNode, childNode, referenceNode);
	  }
	}
	
	function removeChild(parentNode, childNode) {
	  if (Array.isArray(childNode)) {
	    var closingComment = childNode[1];
	    childNode = childNode[0];
	    removeDelimitedText(parentNode, childNode, closingComment);
	    parentNode.removeChild(closingComment);
	  }
	  parentNode.removeChild(childNode);
	}
	
	function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
	  var node = openingComment;
	  while (true) {
	    var nextNode = node.nextSibling;
	    insertChildAt(parentNode, node, referenceNode);
	    if (node === closingComment) {
	      break;
	    }
	    node = nextNode;
	  }
	}
	
	function removeDelimitedText(parentNode, startNode, closingComment) {
	  while (true) {
	    var node = startNode.nextSibling;
	    if (node === closingComment) {
	      // The closing comment is removed by ReactMultiChild.
	      break;
	    } else {
	      parentNode.removeChild(node);
	    }
	  }
	}
	
	function replaceDelimitedText(openingComment, closingComment, stringText) {
	  var parentNode = openingComment.parentNode;
	  var nodeAfterComment = openingComment.nextSibling;
	  if (nodeAfterComment === closingComment) {
	    // There are no text nodes between the opening and closing comments; insert
	    // a new one if stringText isn't empty.
	    if (stringText) {
	      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
	    }
	  } else {
	    if (stringText) {
	      // Set the text content of the first node after the opening comment, and
	      // remove all following nodes up until the closing comment.
	      setTextContent(nodeAfterComment, stringText);
	      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
	    } else {
	      removeDelimitedText(parentNode, openingComment, closingComment);
	    }
	  }
	
	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID, 'replace text', stringText);
	  }
	}
	
	var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
	if (process.env.NODE_ENV !== 'production') {
	  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {
	    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
	    if (prevInstance._debugID !== 0) {
	      ReactInstrumentation.debugTool.onHostOperation(prevInstance._debugID, 'replace with', markup.toString());
	    } else {
	      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
	      if (nextInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation(nextInstance._debugID, 'mount', markup.toString());
	      }
	    }
	  };
	}
	
	/**
	 * Operations for updating with DOM children.
	 */
	var DOMChildrenOperations = {
	
	  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,
	
	  replaceDelimitedText: replaceDelimitedText,
	
	  /**
	   * Updates a component's children by processing a series of updates. The
	   * update configurations are each expected to have a `parentNode` property.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  processUpdates: function (parentNode, updates) {
	    if (process.env.NODE_ENV !== 'production') {
	      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
	    }
	
	    for (var k = 0; k < updates.length; k++) {
	      var update = updates[k];
	      switch (update.type) {
	        case ReactMultiChildUpdateTypes.INSERT_MARKUP:
	          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'insert child', { toIndex: update.toIndex, content: update.content.toString() });
	          }
	          break;
	        case ReactMultiChildUpdateTypes.MOVE_EXISTING:
	          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'move child', { fromIndex: update.fromIndex, toIndex: update.toIndex });
	          }
	          break;
	        case ReactMultiChildUpdateTypes.SET_MARKUP:
	          setInnerHTML(parentNode, update.content);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace children', update.content.toString());
	          }
	          break;
	        case ReactMultiChildUpdateTypes.TEXT_CONTENT:
	          setTextContent(parentNode, update.content);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace text', update.content.toString());
	          }
	          break;
	        case ReactMultiChildUpdateTypes.REMOVE_NODE:
	          removeChild(parentNode, update.fromNode);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'remove child', { fromIndex: update.fromIndex });
	          }
	          break;
	      }
	    }
	  }
	
	};
	
	module.exports = DOMChildrenOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 172 */
/*!************************************!*\
  !*** ./~/react/lib/DOMLazyTree.js ***!
  \************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMLazyTree
	 */
	
	'use strict';
	
	var DOMNamespaces = __webpack_require__(/*! ./DOMNamespaces */ 173);
	var setInnerHTML = __webpack_require__(/*! ./setInnerHTML */ 174);
	
	var createMicrosoftUnsafeLocalFunction = __webpack_require__(/*! ./createMicrosoftUnsafeLocalFunction */ 175);
	var setTextContent = __webpack_require__(/*! ./setTextContent */ 176);
	
	var ELEMENT_NODE_TYPE = 1;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
	
	/**
	 * In IE (8-11) and Edge, appending nodes with no children is dramatically
	 * faster than appending a full subtree, so we essentially queue up the
	 * .appendChild calls here and apply them so each node is added to its parent
	 * before any children are added.
	 *
	 * In other browsers, doing so is slower or neutral compared to the other order
	 * (in Firefox, twice as slow) so we only do this inversion in IE.
	 *
	 * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
	 */
	var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);
	
	function insertTreeChildren(tree) {
	  if (!enableLazy) {
	    return;
	  }
	  var node = tree.node;
	  var children = tree.children;
	  if (children.length) {
	    for (var i = 0; i < children.length; i++) {
	      insertTreeBefore(node, children[i], null);
	    }
	  } else if (tree.html != null) {
	    setInnerHTML(node, tree.html);
	  } else if (tree.text != null) {
	    setTextContent(node, tree.text);
	  }
	}
	
	var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
	  // DocumentFragments aren't actually part of the DOM after insertion so
	  // appending children won't update the DOM. We need to ensure the fragment
	  // is properly populated first, breaking out of our lazy approach for just
	  // this level. Also, some <object> plugins (like Flash Player) will read
	  // <param> nodes immediately upon insertion into the DOM, so <object>
	  // must also be populated prior to insertion into the DOM.
	  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
	    insertTreeChildren(tree);
	    parentNode.insertBefore(tree.node, referenceNode);
	  } else {
	    parentNode.insertBefore(tree.node, referenceNode);
	    insertTreeChildren(tree);
	  }
	});
	
	function replaceChildWithTree(oldNode, newTree) {
	  oldNode.parentNode.replaceChild(newTree.node, oldNode);
	  insertTreeChildren(newTree);
	}
	
	function queueChild(parentTree, childTree) {
	  if (enableLazy) {
	    parentTree.children.push(childTree);
	  } else {
	    parentTree.node.appendChild(childTree.node);
	  }
	}
	
	function queueHTML(tree, html) {
	  if (enableLazy) {
	    tree.html = html;
	  } else {
	    setInnerHTML(tree.node, html);
	  }
	}
	
	function queueText(tree, text) {
	  if (enableLazy) {
	    tree.text = text;
	  } else {
	    setTextContent(tree.node, text);
	  }
	}
	
	function toString() {
	  return this.node.nodeName;
	}
	
	function DOMLazyTree(node) {
	  return {
	    node: node,
	    children: [],
	    html: null,
	    text: null,
	    toString: toString
	  };
	}
	
	DOMLazyTree.insertTreeBefore = insertTreeBefore;
	DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
	DOMLazyTree.queueChild = queueChild;
	DOMLazyTree.queueHTML = queueHTML;
	DOMLazyTree.queueText = queueText;
	
	module.exports = DOMLazyTree;

/***/ },
/* 173 */
/*!**************************************!*\
  !*** ./~/react/lib/DOMNamespaces.js ***!
  \**************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMNamespaces
	 */
	
	'use strict';
	
	var DOMNamespaces = {
	  html: 'http://www.w3.org/1999/xhtml',
	  mathml: 'http://www.w3.org/1998/Math/MathML',
	  svg: 'http://www.w3.org/2000/svg'
	};
	
	module.exports = DOMNamespaces;

/***/ },
/* 174 */
/*!*************************************!*\
  !*** ./~/react/lib/setInnerHTML.js ***!
  \*************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setInnerHTML
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 140);
	var DOMNamespaces = __webpack_require__(/*! ./DOMNamespaces */ 173);
	
	var WHITESPACE_TEST = /^[ \r\n\t\f]/;
	var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;
	
	var createMicrosoftUnsafeLocalFunction = __webpack_require__(/*! ./createMicrosoftUnsafeLocalFunction */ 175);
	
	// SVG temp container for IE lacking innerHTML
	var reusableSVGContainer;
	
	/**
	 * Set the innerHTML property of a node, ensuring that whitespace is preserved
	 * even in IE8.
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
	  // IE does not have innerHTML for SVG nodes, so instead we inject the
	  // new markup in a temp node and then move the child nodes across into
	  // the target node
	  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
	    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
	    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
	    var newNodes = reusableSVGContainer.firstChild.childNodes;
	    for (var i = 0; i < newNodes.length; i++) {
	      node.appendChild(newNodes[i]);
	    }
	  } else {
	    node.innerHTML = html;
	  }
	});
	
	if (ExecutionEnvironment.canUseDOM) {
	  // IE8: When updating a just created node with innerHTML only leading
	  // whitespace is removed. When updating an existing node with innerHTML
	  // whitespace in root TextNodes is also collapsed.
	  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html
	
	  // Feature detection; only IE8 is known to behave improperly like this.
	  var testElement = document.createElement('div');
	  testElement.innerHTML = ' ';
	  if (testElement.innerHTML === '') {
	    setInnerHTML = function (node, html) {
	      // Magic theory: IE8 supposedly differentiates between added and updated
	      // nodes when processing innerHTML, innerHTML on updated nodes suffers
	      // from worse whitespace behavior. Re-adding a node like this triggers
	      // the initial and more favorable whitespace behavior.
	      // TODO: What to do on a detached node?
	      if (node.parentNode) {
	        node.parentNode.replaceChild(node, node);
	      }
	
	      // We also implement a workaround for non-visible tags disappearing into
	      // thin air on IE8, this only happens if there is no visible text
	      // in-front of the non-visible tags. Piggyback on the whitespace fix
	      // and simply check if any non-visible tags appear in the source.
	      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
	        // Recover leading whitespace by temporarily prepending any character.
	        // \uFEFF has the potential advantage of being zero-width/invisible.
	        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
	        // in hopes that this is preserved even if "\uFEFF" is transformed to
	        // the actual Unicode character (by Babel, for example).
	        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
	        node.innerHTML = String.fromCharCode(0xFEFF) + html;
	
	        // deleteData leaves an empty `TextNode` which offsets the index of all
	        // children. Definitely want to avoid this.
	        var textNode = node.firstChild;
	        if (textNode.data.length === 1) {
	          node.removeChild(textNode);
	        } else {
	          textNode.deleteData(0, 1);
	        }
	      } else {
	        node.innerHTML = html;
	      }
	    };
	  }
	  testElement = null;
	}
	
	module.exports = setInnerHTML;

/***/ },
/* 175 */
/*!***********************************************************!*\
  !*** ./~/react/lib/createMicrosoftUnsafeLocalFunction.js ***!
  \***********************************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createMicrosoftUnsafeLocalFunction
	 */
	
	/* globals MSApp */
	
	'use strict';
	
	/**
	 * Create a function which has 'unsafe' privileges (required by windows8 apps)
	 */
	
	var createMicrosoftUnsafeLocalFunction = function (func) {
	  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	    return function (arg0, arg1, arg2, arg3) {
	      MSApp.execUnsafeLocalFunction(function () {
	        return func(arg0, arg1, arg2, arg3);
	      });
	    };
	  } else {
	    return func;
	  }
	};
	
	module.exports = createMicrosoftUnsafeLocalFunction;

/***/ },
/* 176 */
/*!***************************************!*\
  !*** ./~/react/lib/setTextContent.js ***!
  \***************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setTextContent
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 140);
	var escapeTextContentForBrowser = __webpack_require__(/*! ./escapeTextContentForBrowser */ 177);
	var setInnerHTML = __webpack_require__(/*! ./setInnerHTML */ 174);
	
	/**
	 * Set the textContent property of a node, ensuring that whitespace is preserved
	 * even in IE8. innerText is a poor substitute for textContent and, among many
	 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
	 * as it should.
	 *
	 * @param {DOMElement} node
	 * @param {string} text
	 * @internal
	 */
	var setTextContent = function (node, text) {
	  if (text) {
	    var firstChild = node.firstChild;
	
	    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
	      firstChild.nodeValue = text;
	      return;
	    }
	  }
	  node.textContent = text;
	};
	
	if (ExecutionEnvironment.canUseDOM) {
	  if (!('textContent' in document.documentElement)) {
	    setTextContent = function (node, text) {
	      setInnerHTML(node, escapeTextContentForBrowser(text));
	    };
	  }
	}
	
	module.exports = setTextContent;

/***/ },
/* 177 */
/*!****************************************************!*\
  !*** ./~/react/lib/escapeTextContentForBrowser.js ***!
  \****************************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * Based on the escape-html library, which is used under the MIT License below:
	 *
	 * Copyright (c) 2012-2013 TJ Holowaychuk
	 * Copyright (c) 2015 Andreas Lubbe
	 * Copyright (c) 2015 Tiancheng "Timothy" Gu
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining
	 * a copy of this software and associated documentation files (the
	 * 'Software'), to deal in the Software without restriction, including
	 * without limitation the rights to use, copy, modify, merge, publish,
	 * distribute, sublicense, and/or sell copies of the Software, and to
	 * permit persons to whom the Software is furnished to do so, subject to
	 * the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be
	 * included in all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
	 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
	 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
	 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
	 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
	 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
	 *
	 * @providesModule escapeTextContentForBrowser
	 */
	
	'use strict';
	
	// code copied and modified from escape-html
	/**
	 * Module variables.
	 * @private
	 */
	
	var matchHtmlRegExp = /["'&<>]/;
	
	/**
	 * Escape special characters in the given string of html.
	 *
	 * @param  {string} string The string to escape for inserting into HTML
	 * @return {string}
	 * @public
	 */
	
	function escapeHtml(string) {
	  var str = '' + string;
	  var match = matchHtmlRegExp.exec(str);
	
	  if (!match) {
	    return str;
	  }
	
	  var escape;
	  var html = '';
	  var index = 0;
	  var lastIndex = 0;
	
	  for (index = match.index; index < str.length; index++) {
	    switch (str.charCodeAt(index)) {
	      case 34:
	        // "
	        escape = '&quot;';
	        break;
	      case 38:
	        // &
	        escape = '&amp;';
	        break;
	      case 39:
	        // '
	        escape = '&#x27;'; // modified from escape-html; used to be '&#39'
	        break;
	      case 60:
	        // <
	        escape = '&lt;';
	        break;
	      case 62:
	        // >
	        escape = '&gt;';
	        break;
	      default:
	        continue;
	    }
	
	    if (lastIndex !== index) {
	      html += str.substring(lastIndex, index);
	    }
	
	    lastIndex = index + 1;
	    html += escape;
	  }
	
	  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
	}
	// end code copied and modified from escape-html
	
	/**
	 * Escapes text to prevent scripting attacks.
	 *
	 * @param {*} text Text value to escape.
	 * @return {string} An escaped string.
	 */
	function escapeTextContentForBrowser(text) {
	  if (typeof text === 'boolean' || typeof text === 'number') {
	    // this shortcircuit helps perf for types that we know will never have
	    // special characters, especially given that this function is used often
	    // for numeric dom ids.
	    return '' + text;
	  }
	  return escapeHtml(text);
	}
	
	module.exports = escapeTextContentForBrowser;

/***/ },
/* 178 */
/*!*******************************!*\
  !*** ./~/react/lib/Danger.js ***!
  \*******************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Danger
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(/*! ./reactProdInvariant */ 99);
	
	var DOMLazyTree = __webpack_require__(/*! ./DOMLazyTree */ 172);
	var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 140);
	
	var createNodesFromMarkup = __webpack_require__(/*! fbjs/lib/createNodesFromMarkup */ 179);
	var emptyFunction = __webpack_require__(/*! fbjs/lib/emptyFunction */ 104);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 100);
	
	var Danger = {
	
	  /**
	   * Replaces a node with a string of markup at its current position within its
	   * parent. The markup must render into a single root node.
	   *
	   * @param {DOMElement} oldChild Child node to replace.
	   * @param {string} markup Markup to render in place of the child node.
	   * @internal
	   */
	  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
	    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
	    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
	    !(oldChild.nodeName !== 'HTML') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;
	
	    if (typeof markup === 'string') {
	      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
	      oldChild.parentNode.replaceChild(newChild, oldChild);
	    } else {
	      DOMLazyTree.replaceChildWithTree(oldChild, markup);
	    }
	  }
	
	};
	
	module.exports = Danger;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 179 */
/*!*****************************************************!*\
  !*** ./~/react/~/fbjs/lib/createNodesFromMarkup.js ***!
  \*****************************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	/*eslint-disable fb-www/unsafe-html*/
	
	var ExecutionEnvironment = __webpack_require__(/*! ./ExecutionEnvironment */ 140);
	
	var createArrayFromMixed = __webpack_require__(/*! ./createArrayFromMixed */ 180);
	var getMarkupWrap = __webpack_require__(/*! ./getMarkupWrap */ 181);
	var invariant = __webpack_require__(/*! ./invariant */ 100);
	
	/**
	 * Dummy container used to render all markup.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
	
	/**
	 * Pattern used by `getNodeName`.
	 */
	var nodeNamePattern = /^\s*<(\w+)/;
	
	/**
	 * Extracts the `nodeName` of the first element in a string of markup.
	 *
	 * @param {string} markup String of markup.
	 * @return {?string} Node name of the supplied markup.
	 */
	function getNodeName(markup) {
	  var nodeNameMatch = markup.match(nodeNamePattern);
	  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
	}
	
	/**
	 * Creates an array containing the nodes rendered from the supplied markup. The
	 * optionally supplied `handleScript` function will be invoked once for each
	 * <script> element that is rendered. If no `handleScript` function is supplied,
	 * an exception is thrown if any <script> elements are rendered.
	 *
	 * @param {string} markup A string of valid HTML markup.
	 * @param {?function} handleScript Invoked once for each rendered <script>.
	 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
	 */
	function createNodesFromMarkup(markup, handleScript) {
	  var node = dummyNode;
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
	  var nodeName = getNodeName(markup);
	
	  var wrap = nodeName && getMarkupWrap(nodeName);
	  if (wrap) {
	    node.innerHTML = wrap[1] + markup + wrap[2];
	
	    var wrapDepth = wrap[0];
	    while (wrapDepth--) {
	      node = node.lastChild;
	    }
	  } else {
	    node.innerHTML = markup;
	  }
	
	  var scripts = node.getElementsByTagName('script');
	  if (scripts.length) {
	    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
	    createArrayFromMixed(scripts).forEach(handleScript);
	  }
	
	  var nodes = Array.from(node.childNodes);
	  while (node.lastChild) {
	    node.removeChild(node.lastChild);
	  }
	  return nodes;
	}
	
	module.exports = createNodesFromMarkup;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 180 */
/*!****************************************************!*\
  !*** ./~/react/~/fbjs/lib/createArrayFromMixed.js ***!
  \****************************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var invariant = __webpack_require__(/*! ./invariant */ 100);
	
	/**
	 * Convert array-like objects to arrays.
	 *
	 * This API assumes the caller knows the contents of the data type. For less
	 * well defined inputs use createArrayFromMixed.
	 *
	 * @param {object|function|filelist} obj
	 * @return {array}
	 */
	function toArray(obj) {
	  var length = obj.length;
	
	  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
	  // in old versions of Safari).
	  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;
	
	  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;
	
	  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;
	
	  !(typeof obj.callee !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;
	
	  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
	  // without method will throw during the slice call and skip straight to the
	  // fallback.
	  if (obj.hasOwnProperty) {
	    try {
	      return Array.prototype.slice.call(obj);
	    } catch (e) {
	      // IE < 9 does not support Array#slice on collections objects
	    }
	  }
	
	  // Fall back to copying key by key. This assumes all keys have a value,
	  // so will not preserve sparsely populated inputs.
	  var ret = Array(length);
	  for (var ii = 0; ii < length; ii++) {
	    ret[ii] = obj[ii];
	  }
	  return ret;
	}
	
	/**
	 * Perform a heuristic test to determine if an object is "array-like".
	 *
	 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
	 *   Joshu replied: "Mu."
	 *
	 * This function determines if its argument has "array nature": it returns
	 * true if the argument is an actual array, an `arguments' object, or an
	 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
	 *
	 * It will return false for other array-like objects like Filelist.
	 *
	 * @param {*} obj
	 * @return {boolean}
	 */
	function hasArrayNature(obj) {
	  return(
	    // not null/false
	    !!obj && (
	    // arrays are objects, NodeLists are functions in Safari
	    typeof obj == 'object' || typeof obj == 'function') &&
	    // quacks like an array
	    'length' in obj &&
	    // not window
	    !('setInterval' in obj) &&
	    // no DOM node should be considered an array-like
	    // a 'select' element has 'length' and 'item' properties on IE8
	    typeof obj.nodeType != 'number' && (
	    // a real array
	    Array.isArray(obj) ||
	    // arguments
	    'callee' in obj ||
	    // HTMLCollection/NodeList
	    'item' in obj)
	  );
	}
	
	/**
	 * Ensure that the argument is an array by wrapping it in an array if it is not.
	 * Creates a copy of the argument if it is already an array.
	 *
	 * This is mostly useful idiomatically:
	 *
	 *   var createArrayFromMixed = require('createArrayFromMixed');
	 *
	 *   function takesOneOrMoreThings(things) {
	 *     things = createArrayFromMixed(things);
	 *     ...
	 *   }
	 *
	 * This allows you to treat `things' as an array, but accept scalars in the API.
	 *
	 * If you need to convert an array-like object, like `arguments`, into an array
	 * use toArray instead.
	 *
	 * @param {*} obj
	 * @return {array}
	 */
	function createArrayFromMixed(obj) {
	  if (!hasArrayNature(obj)) {
	    return [obj];
	  } else if (Array.isArray(obj)) {
	    return obj.slice();
	  } else {
	    return toArray(obj);
	  }
	}
	
	module.exports = createArrayFromMixed;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 181 */
/*!*********************************************!*\
  !*** ./~/react/~/fbjs/lib/getMarkupWrap.js ***!
  \*********************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	/*eslint-disable fb-www/unsafe-html */
	
	var ExecutionEnvironment = __webpack_require__(/*! ./ExecutionEnvironment */ 140);
	
	var invariant = __webpack_require__(/*! ./invariant */ 100);
	
	/**
	 * Dummy container used to detect which wraps are necessary.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
	
	/**
	 * Some browsers cannot use `innerHTML` to render certain elements standalone,
	 * so we wrap them, render the wrapped nodes, then extract the desired node.
	 *
	 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
	 */
	
	var shouldWrap = {};
	
	var selectWrap = [1, '<select multiple="true">', '</select>'];
	var tableWrap = [1, '<table>', '</table>'];
	var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];
	
	var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];
	
	var markupWrap = {
	  '*': [1, '?<div>', '</div>'],
	
	  'area': [1, '<map>', '</map>'],
	  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
	  'legend': [1, '<fieldset>', '</fieldset>'],
	  'param': [1, '<object>', '</object>'],
	  'tr': [2, '<table><tbody>', '</tbody></table>'],
	
	  'optgroup': selectWrap,
	  'option': selectWrap,
	
	  'caption': tableWrap,
	  'colgroup': tableWrap,
	  'tbody': tableWrap,
	  'tfoot': tableWrap,
	  'thead': tableWrap,
	
	  'td': trWrap,
	  'th': trWrap
	};
	
	// Initialize the SVG elements since we know they'll always need to be wrapped
	// consistently. If they are created inside a <div> they will be initialized in
	// the wrong namespace (and will not display).
	var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
	svgElements.forEach(function (nodeName) {
	  markupWrap[nodeName] = svgWrap;
	  shouldWrap[nodeName] = true;
	});
	
	/**
	 * Gets the markup wrap configuration for the supplied `nodeName`.
	 *
	 * NOTE: This lazily detects which wraps are necessary for the current browser.
	 *
	 * @param {string} nodeName Lowercase `nodeName`.
	 * @return {?array} Markup wrap configuration, if applicable.
	 */
	function getMarkupWrap(nodeName) {
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
	  if (!markupWrap.hasOwnProperty(nodeName)) {
	    nodeName = '*';
	  }
	  if (!shouldWrap.hasOwnProperty(nodeName)) {
	    if (nodeName === '*') {
	      dummyNode.innerHTML = '<link />';
	    } else {
	      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
	    }
	    shouldWrap[nodeName] = !dummyNode.firstChild;
	  }
	  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
	}
	
	module.exports = getMarkupWrap;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 182 */
/*!***************************************************!*\
  !*** ./~/react/lib/ReactMultiChildUpdateTypes.js ***!
  \***************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChildUpdateTypes
	 */
	
	'use strict';
	
	var keyMirror = __webpack_require__(/*! fbjs/lib/keyMirror */ 114);
	
	/**
	 * When a component's children are updated, a series of update configuration
	 * objects are created in order to batch and serialize the required changes.
	 *
	 * Enumerates all the possible types of update configurations.
	 *
	 * @internal
	 */
	var ReactMultiChildUpdateTypes = keyMirror({
	  INSERT_MARKUP: null,
	  MOVE_EXISTING: null,
	  REMOVE_NODE: null,
	  SET_MARKUP: null,
	  TEXT_CONTENT: null
	});
	
	module.exports = ReactMultiChildUpdateTypes;

/***/ },
/* 183 */
/*!*********************************************!*\
  !*** ./~/react/lib/ReactDOMIDOperations.js ***!
  \*********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMIDOperations
	 */
	
	'use strict';
	
	var DOMChildrenOperations = __webpack_require__(/*! ./DOMChildrenOperations */ 171);
	var ReactDOMComponentTree = __webpack_require__(/*! ./ReactDOMComponentTree */ 127);
	
	/**
	 * Operations used to process updates to DOM nodes.
	 */
	var ReactDOMIDOperations = {
	
	  /**
	   * Updates a component's children by processing a series of updates.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
	    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
	    DOMChildrenOperations.processUpdates(node, updates);
	  }
	};
	
	module.exports = ReactDOMIDOperations;

/***/ },
/* 184 */
/*!******************************************!*\
  !*** ./~/react/lib/ReactDOMComponent.js ***!
  \******************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponent
	 */
	
	/* global hasOwnProperty:true */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(/*! ./reactProdInvariant */ 99),
	    _assign = __webpack_require__(/*! object-assign */ 96);
	
	var AutoFocusUtils = __webpack_require__(/*! ./AutoFocusUtils */ 185);
	var CSSPropertyOperations = __webpack_require__(/*! ./CSSPropertyOperations */ 187);
	var DOMLazyTree = __webpack_require__(/*! ./DOMLazyTree */ 172);
	var DOMNamespaces = __webpack_require__(/*! ./DOMNamespaces */ 173);
	var DOMProperty = __webpack_require__(/*! ./DOMProperty */ 128);
	var DOMPropertyOperations = __webpack_require__(/*! ./DOMPropertyOperations */ 195);
	var EventConstants = __webpack_require__(/*! ./EventConstants */ 132);
	var EventPluginHub = __webpack_require__(/*! ./EventPluginHub */ 134);
	var EventPluginRegistry = __webpack_require__(/*! ./EventPluginRegistry */ 135);
	var ReactBrowserEventEmitter = __webpack_require__(/*! ./ReactBrowserEventEmitter */ 201);
	var ReactComponentBrowserEnvironment = __webpack_require__(/*! ./ReactComponentBrowserEnvironment */ 170);
	var ReactDOMButton = __webpack_require__(/*! ./ReactDOMButton */ 204);
	var ReactDOMComponentFlags = __webpack_require__(/*! ./ReactDOMComponentFlags */ 129);
	var ReactDOMComponentTree = __webpack_require__(/*! ./ReactDOMComponentTree */ 127);
	var ReactDOMInput = __webpack_require__(/*! ./ReactDOMInput */ 206);
	var ReactDOMOption = __webpack_require__(/*! ./ReactDOMOption */ 208);
	var ReactDOMSelect = __webpack_require__(/*! ./ReactDOMSelect */ 209);
	var ReactDOMTextarea = __webpack_require__(/*! ./ReactDOMTextarea */ 210);
	var ReactInstrumentation = __webpack_require__(/*! ./ReactInstrumentation */ 153);
	var ReactMultiChild = __webpack_require__(/*! ./ReactMultiChild */ 211);
	var ReactServerRenderingTransaction = __webpack_require__(/*! ./ReactServerRenderingTransaction */ 222);
	
	var emptyFunction = __webpack_require__(/*! fbjs/lib/emptyFunction */ 104);
	var escapeTextContentForBrowser = __webpack_require__(/*! ./escapeTextContentForBrowser */ 177);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 100);
	var isEventSupported = __webpack_require__(/*! ./isEventSupported */ 161);
	var keyOf = __webpack_require__(/*! fbjs/lib/keyOf */ 116);
	var shallowEqual = __webpack_require__(/*! fbjs/lib/shallowEqual */ 225);
	var validateDOMNesting = __webpack_require__(/*! ./validateDOMNesting */ 226);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 103);
	
	var Flags = ReactDOMComponentFlags;
	var deleteListener = EventPluginHub.deleteListener;
	var getNode = ReactDOMComponentTree.getNodeFromInstance;
	var listenTo = ReactBrowserEventEmitter.listenTo;
	var registrationNameModules = EventPluginRegistry.registrationNameModules;
	
	// For quickly matching children type, to test if can be treated as content.
	var CONTENT_TYPES = { 'string': true, 'number': true };
	
	var STYLE = keyOf({ style: null });
	var HTML = keyOf({ __html: null });
	var RESERVED_PROPS = {
	  children: null,
	  dangerouslySetInnerHTML: null,
	  suppressContentEditableWarning: null
	};
	
	// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
	var DOC_FRAGMENT_TYPE = 11;
	
	function getDeclarationErrorAddendum(internalInstance) {
	  if (internalInstance) {
	    var owner = internalInstance._currentElement._owner || null;
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' This DOM node was rendered by `' + name + '`.';
	      }
	    }
	  }
	  return '';
	}
	
	function friendlyStringify(obj) {
	  if (typeof obj === 'object') {
	    if (Array.isArray(obj)) {
	      return '[' + obj.map(friendlyStringify).join(', ') + ']';
	    } else {
	      var pairs = [];
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
	          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
	        }
	      }
	      return '{' + pairs.join(', ') + '}';
	    }
	  } else if (typeof obj === 'string') {
	    return JSON.stringify(obj);
	  } else if (typeof obj === 'function') {
	    return '[function object]';
	  }
	  // Differs from JSON.stringify in that undefined because undefined and that
	  // inf and nan don't become null
	  return String(obj);
	}
	
	var styleMutationWarning = {};
	
	function checkAndWarnForMutatedStyle(style1, style2, component) {
	  if (style1 == null || style2 == null) {
	    return;
	  }
	  if (shallowEqual(style1, style2)) {
	    return;
	  }
	
	  var componentName = component._tag;
	  var owner = component._currentElement._owner;
	  var ownerName;
	  if (owner) {
	    ownerName = owner.getName();
	  }
	
	  var hash = ownerName + '|' + componentName;
	
	  if (styleMutationWarning.hasOwnProperty(hash)) {
	    return;
	  }
	
	  styleMutationWarning[hash] = true;
	
	  process.env.NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
	}
	
	/**
	 * @param {object} component
	 * @param {?object} props
	 */
	function assertValidProps(component, props) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (voidElementTags[component._tag]) {
	    !(props.children == null && props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
	  }
	  if (props.dangerouslySetInnerHTML != null) {
	    !(props.children == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
	    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
	  }
	  !(props.style == null || typeof props.style === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
	}
	
	function enqueuePutListener(inst, registrationName, listener, transaction) {
	  if (transaction instanceof ReactServerRenderingTransaction) {
	    return;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    // IE8 has no API for event capturing and the `onScroll` event doesn't
	    // bubble.
	    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : void 0;
	  }
	  var containerInfo = inst._hostContainerInfo;
	  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
	  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
	  listenTo(registrationName, doc);
	  transaction.getReactMountReady().enqueue(putListener, {
	    inst: inst,
	    registrationName: registrationName,
	    listener: listener
	  });
	}
	
	function putListener() {
	  var listenerToPut = this;
	  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
	}
	
	function inputPostMount() {
	  var inst = this;
	  ReactDOMInput.postMountWrapper(inst);
	}
	
	function textareaPostMount() {
	  var inst = this;
	  ReactDOMTextarea.postMountWrapper(inst);
	}
	
	function optionPostMount() {
	  var inst = this;
	  ReactDOMOption.postMountWrapper(inst);
	}
	
	var setContentChildForInstrumentation = emptyFunction;
	if (process.env.NODE_ENV !== 'production') {
	  setContentChildForInstrumentation = function (content) {
	    var hasExistingContent = this._contentDebugID != null;
	    var debugID = this._debugID;
	    var contentDebugID = debugID + '#text';
	
	    if (content == null) {
	      if (hasExistingContent) {
	        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
	      }
	      this._contentDebugID = null;
	      return;
	    }
	
	    this._contentDebugID = contentDebugID;
	    var text = '' + content;
	
	    ReactInstrumentation.debugTool.onSetDisplayName(contentDebugID, '#text');
	    ReactInstrumentation.debugTool.onSetParent(contentDebugID, debugID);
	    ReactInstrumentation.debugTool.onSetText(contentDebugID, text);
	
	    if (hasExistingContent) {
	      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
	      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
	    } else {
	      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content);
	      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
	      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
	    }
	  };
	}
	
	// There are so many media events, it makes sense to just
	// maintain a list rather than create a `trapBubbledEvent` for each
	var mediaEvents = {
	  topAbort: 'abort',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTimeUpdate: 'timeupdate',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting'
	};
	
	function trapBubbledEventsLocal() {
	  var inst = this;
	  // If a component renders to null or if another component fatals and causes
	  // the state of the tree to be corrupted, `node` here can be null.
	  !inst._rootNodeID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
	  var node = getNode(inst);
	  !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;
	
	  switch (inst._tag) {
	    case 'iframe':
	    case 'object':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'video':
	    case 'audio':
	
	      inst._wrapperState.listeners = [];
	      // Create listener for each media event
	      for (var event in mediaEvents) {
	        if (mediaEvents.hasOwnProperty(event)) {
	          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes[event], mediaEvents[event], node));
	        }
	      }
	      break;
	    case 'source':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node)];
	      break;
	    case 'img':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'form':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', node)];
	      break;
	    case 'input':
	    case 'select':
	    case 'textarea':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topInvalid, 'invalid', node)];
	      break;
	  }
	}
	
	function postUpdateSelectWrapper() {
	  ReactDOMSelect.postUpdateWrapper(this);
	}
	
	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special-case tags.
	
	var omittedCloseTags = {
	  'area': true,
	  'base': true,
	  'br': true,
	  'col': true,
	  'embed': true,
	  'hr': true,
	  'img': true,
	  'input': true,
	  'keygen': true,
	  'link': true,
	  'meta': true,
	  'param': true,
	  'source': true,
	  'track': true,
	  'wbr': true
	};
	
	// NOTE: menuitem's close tag should be omitted, but that causes problems.
	var newlineEatingTags = {
	  'listing': true,
	  'pre': true,
	  'textarea': true
	};
	
	// For HTML, certain tags cannot have children. This has the same purpose as
	// `omittedCloseTags` except that `menuitem` should still have its closing tag.
	
	var voidElementTags = _assign({
	  'menuitem': true
	}, omittedCloseTags);
	
	// We accept any tag to be rendered but since this gets injected into arbitrary
	// HTML, we want to make sure that it's a safe tag.
	// http://www.w3.org/TR/REC-xml/#NT-Name
	
	var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
	var validatedTagCache = {};
	var hasOwnProperty = {}.hasOwnProperty;
	
	function validateDangerousTag(tag) {
	  if (!hasOwnProperty.call(validatedTagCache, tag)) {
	    !VALID_TAG_REGEX.test(tag) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
	    validatedTagCache[tag] = true;
	  }
	}
	
	function isCustomComponent(tagName, props) {
	  return tagName.indexOf('-') >= 0 || props.is != null;
	}
	
	var globalIdCounter = 1;
	
	/**
	 * Creates a new React class that is idempotent and capable of containing other
	 * React components. It accepts event listeners and DOM properties that are
	 * valid according to `DOMProperty`.
	 *
	 *  - Event listeners: `onClick`, `onMouseDown`, etc.
	 *  - DOM properties: `className`, `name`, `title`, etc.
	 *
	 * The `style` property functions differently from the DOM API. It accepts an
	 * object mapping of style properties to values.
	 *
	 * @constructor ReactDOMComponent
	 * @extends ReactMultiChild
	 */
	function ReactDOMComponent(element) {
	  var tag = element.type;
	  validateDangerousTag(tag);
	  this._currentElement = element;
	  this._tag = tag.toLowerCase();
	  this._namespaceURI = null;
	  this._renderedChildren = null;
	  this._previousStyle = null;
	  this._previousStyleCopy = null;
	  this._hostNode = null;
	  this._hostParent = null;
	  this._rootNodeID = null;
	  this._domID = null;
	  this._hostContainerInfo = null;
	  this._wrapperState = null;
	  this._topLevelWrapper = null;
	  this._flags = 0;
	  if (process.env.NODE_ENV !== 'production') {
	    this._ancestorInfo = null;
	    setContentChildForInstrumentation.call(this, null);
	  }
	}
	
	ReactDOMComponent.displayName = 'ReactDOMComponent';
	
	ReactDOMComponent.Mixin = {
	
	  /**
	   * Generates root tag markup then recurses. This method has side effects and
	   * is not idempotent.
	   *
	   * @internal
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?ReactDOMComponent} the containing DOM component instance
	   * @param {?object} info about the host container
	   * @param {object} context
	   * @return {string} The computed markup.
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    this._rootNodeID = globalIdCounter++;
	    this._domID = hostContainerInfo._idCounter++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;
	
	    var props = this._currentElement.props;
	
	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        this._wrapperState = {
	          listeners: null
	        };
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'button':
	        props = ReactDOMButton.getHostProps(this, props, hostParent);
	        break;
	      case 'input':
	        ReactDOMInput.mountWrapper(this, props, hostParent);
	        props = ReactDOMInput.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'option':
	        ReactDOMOption.mountWrapper(this, props, hostParent);
	        props = ReactDOMOption.getHostProps(this, props);
	        break;
	      case 'select':
	        ReactDOMSelect.mountWrapper(this, props, hostParent);
	        props = ReactDOMSelect.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.mountWrapper(this, props, hostParent);
	        props = ReactDOMTextarea.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	    }
	
	    assertValidProps(this, props);
	
	    // We create tags in the namespace of their parent container, except HTML
	    // tags get no namespace.
	    var namespaceURI;
	    var parentTag;
	    if (hostParent != null) {
	      namespaceURI = hostParent._namespaceURI;
	      parentTag = hostParent._tag;
	    } else if (hostContainerInfo._tag) {
	      namespaceURI = hostContainerInfo._namespaceURI;
	      parentTag = hostContainerInfo._tag;
	    }
	    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
	      namespaceURI = DOMNamespaces.html;
	    }
	    if (namespaceURI === DOMNamespaces.html) {
	      if (this._tag === 'svg') {
	        namespaceURI = DOMNamespaces.svg;
	      } else if (this._tag === 'math') {
	        namespaceURI = DOMNamespaces.mathml;
	      }
	    }
	    this._namespaceURI = namespaceURI;
	
	    if (process.env.NODE_ENV !== 'production') {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo._tag) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting(this._tag, this, parentInfo);
	      }
	      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
	    }
	
	    var mountImage;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var el;
	      if (namespaceURI === DOMNamespaces.html) {
	        if (this._tag === 'script') {
	          // Create the script via .innerHTML so its "parser-inserted" flag is
	          // set to true and it does not execute
	          var div = ownerDocument.createElement('div');
	          var type = this._currentElement.type;
	          div.innerHTML = '<' + type + '></' + type + '>';
	          el = div.removeChild(div.firstChild);
	        } else if (props.is) {
	          el = ownerDocument.createElement(this._currentElement.type, props.is);
	        } else {
	          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.
	          // See discussion in https://github.com/facebook/react/pull/6896
	          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
	          el = ownerDocument.createElement(this._currentElement.type);
	        }
	      } else {
	        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
	      }
	      ReactDOMComponentTree.precacheNode(this, el);
	      this._flags |= Flags.hasCachedChildNodes;
	      if (!this._hostParent) {
	        DOMPropertyOperations.setAttributeForRoot(el);
	      }
	      this._updateDOMProperties(null, props, transaction);
	      var lazyTree = DOMLazyTree(el);
	      this._createInitialChildren(transaction, props, context, lazyTree);
	      mountImage = lazyTree;
	    } else {
	      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
	      var tagContent = this._createContentMarkup(transaction, props, context);
	      if (!tagContent && omittedCloseTags[this._tag]) {
	        mountImage = tagOpen + '/>';
	      } else {
	        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
	      }
	    }
	
	    switch (this._tag) {
	      case 'input':
	        transaction.getReactMountReady().enqueue(inputPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'textarea':
	        transaction.getReactMountReady().enqueue(textareaPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'select':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'button':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'option':
	        transaction.getReactMountReady().enqueue(optionPostMount, this);
	        break;
	    }
	
	    return mountImage;
	  },
	
	  /**
	   * Creates markup for the open tag and all attributes.
	   *
	   * This method has side effects because events get registered.
	   *
	   * Iterating over object properties is faster than iterating over arrays.
	   * @see http://jsperf.com/obj-vs-arr-iteration
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @return {string} Markup of opening tag.
	   */
	  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
	    var ret = '<' + this._currentElement.type;
	
	    for (var propKey in props) {
	      if (!props.hasOwnProperty(propKey)) {
	        continue;
	      }
	      var propValue = props[propKey];
	      if (propValue == null) {
	        continue;
	      }
	      if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (propValue) {
	          enqueuePutListener(this, propKey, propValue, transaction);
	        }
	      } else {
	        if (propKey === STYLE) {
	          if (propValue) {
	            if (process.env.NODE_ENV !== 'production') {
	              // See `_updateDOMProperties`. style block
	              this._previousStyle = propValue;
	            }
	            propValue = this._previousStyleCopy = _assign({}, props.style);
	          }
	          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
	        }
	        var markup = null;
	        if (this._tag != null && isCustomComponent(this._tag, props)) {
	          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
	          }
	        } else {
	          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
	        }
	        if (markup) {
	          ret += ' ' + markup;
	        }
	      }
	    }
	
	    // For static pages, no need to put React ID and checksum. Saves lots of
	    // bytes.
	    if (transaction.renderToStaticMarkup) {
	      return ret;
	    }
	
	    if (!this._hostParent) {
	      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
	    }
	    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
	    return ret;
	  },
	
	  /**
	   * Creates markup for the content between the tags.
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @param {object} context
	   * @return {string} Content markup.
	   */
	  _createContentMarkup: function (transaction, props, context) {
	    var ret = '';
	
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        ret = innerHTML.__html;
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        ret = escapeTextContentForBrowser(contentToUse);
	        if (process.env.NODE_ENV !== 'production') {
	          setContentChildForInstrumentation.call(this, contentToUse);
	        }
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        ret = mountImages.join('');
	      }
	    }
	    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
	      // text/html ignores the first character in these tags if it's a newline
	      // Prefer to break application/xml over text/html (for now) by adding
	      // a newline specifically to get eaten by the parser. (Alternately for
	      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
	      // \r is normalized out by HTMLTextAreaElement#value.)
	      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
	      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
	      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
	      // See: Parsing of "textarea" "listing" and "pre" elements
	      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
	      return '\n' + ret;
	    } else {
	      return ret;
	    }
	  },
	
	  _createInitialChildren: function (transaction, props, context, lazyTree) {
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        if (process.env.NODE_ENV !== 'production') {
	          setContentChildForInstrumentation.call(this, contentToUse);
	        }
	        DOMLazyTree.queueText(lazyTree, contentToUse);
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        for (var i = 0; i < mountImages.length; i++) {
	          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
	        }
	      }
	    }
	  },
	
	  /**
	   * Receives a next element and updates the component.
	   *
	   * @internal
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   */
	  receiveComponent: function (nextElement, transaction, context) {
	    var prevElement = this._currentElement;
	    this._currentElement = nextElement;
	    this.updateComponent(transaction, prevElement, nextElement, context);
	  },
	
	  /**
	   * Updates a DOM component after it has already been allocated and
	   * attached to the DOM. Reconciles the root DOM node, then recurses.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevElement
	   * @param {ReactElement} nextElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevElement, nextElement, context) {
	    var lastProps = prevElement.props;
	    var nextProps = this._currentElement.props;
	
	    switch (this._tag) {
	      case 'button':
	        lastProps = ReactDOMButton.getHostProps(this, lastProps);
	        nextProps = ReactDOMButton.getHostProps(this, nextProps);
	        break;
	      case 'input':
	        ReactDOMInput.updateWrapper(this);
	        lastProps = ReactDOMInput.getHostProps(this, lastProps);
	        nextProps = ReactDOMInput.getHostProps(this, nextProps);
	        break;
	      case 'option':
	        lastProps = ReactDOMOption.getHostProps(this, lastProps);
	        nextProps = ReactDOMOption.getHostProps(this, nextProps);
	        break;
	      case 'select':
	        lastProps = ReactDOMSelect.getHostProps(this, lastProps);
	        nextProps = ReactDOMSelect.getHostProps(this, nextProps);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.updateWrapper(this);
	        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
	        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
	        break;
	    }
	
	    assertValidProps(this, nextProps);
	    this._updateDOMProperties(lastProps, nextProps, transaction);
	    this._updateDOMChildren(lastProps, nextProps, transaction, context);
	
	    if (this._tag === 'select') {
	      // <select> value update needs to occur after <option> children
	      // reconciliation
	      transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
	    }
	  },
	
	  /**
	   * Reconciles the properties by detecting differences in property values and
	   * updating the DOM as necessary. This function is probably the single most
	   * critical path for performance optimization.
	   *
	   * TODO: Benchmark whether checking for changed values in memory actually
	   *       improves performance (especially statically positioned elements).
	   * TODO: Benchmark the effects of putting this at the top since 99% of props
	   *       do not change for a given reconciliation.
	   * TODO: Benchmark areas that can be improved with caching.
	   *
	   * @private
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {?DOMElement} node
	   */
	  _updateDOMProperties: function (lastProps, nextProps, transaction) {
	    var propKey;
	    var styleName;
	    var styleUpdates;
	    for (propKey in lastProps) {
	      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        var lastStyle = this._previousStyleCopy;
	        for (styleName in lastStyle) {
	          if (lastStyle.hasOwnProperty(styleName)) {
	            styleUpdates = styleUpdates || {};
	            styleUpdates[styleName] = '';
	          }
	        }
	        this._previousStyleCopy = null;
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (lastProps[propKey]) {
	          // Only call deleteListener if there was a listener previously or
	          // else willDeleteListener gets called when there wasn't actually a
	          // listener (e.g., onClick={null})
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, lastProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
	      }
	    }
	    for (propKey in nextProps) {
	      var nextProp = nextProps[propKey];
	      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
	      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        if (nextProp) {
	          if (process.env.NODE_ENV !== 'production') {
	            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
	            this._previousStyle = nextProp;
	          }
	          nextProp = this._previousStyleCopy = _assign({}, nextProp);
	        } else {
	          this._previousStyleCopy = null;
	        }
	        if (lastProp) {
	          // Unset styles on `lastProp` but not on `nextProp`.
	          for (styleName in lastProp) {
	            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = '';
	            }
	          }
	          // Update styles that changed since `lastProp`.
	          for (styleName in nextProp) {
	            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = nextProp[styleName];
	            }
	          }
	        } else {
	          // Relies on `updateStylesByID` not mutating `styleUpdates`.
	          styleUpdates = nextProp;
	        }
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (nextProp) {
	          enqueuePutListener(this, propKey, nextProp, transaction);
	        } else if (lastProp) {
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, nextProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        var node = getNode(this);
	        // If we're updating to null or undefined, we should remove the property
	        // from the DOM node instead of inadvertently setting to a string. This
	        // brings us in line with the same behavior we have on initial render.
	        if (nextProp != null) {
	          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
	        } else {
	          DOMPropertyOperations.deleteValueForProperty(node, propKey);
	        }
	      }
	    }
	    if (styleUpdates) {
	      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
	    }
	  },
	
	  /**
	   * Reconciles the children with the various properties that affect the
	   * children content.
	   *
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   */
	  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
	    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
	    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;
	
	    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
	    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;
	
	    // Note the use of `!=` which checks for null or undefined.
	    var lastChildren = lastContent != null ? null : lastProps.children;
	    var nextChildren = nextContent != null ? null : nextProps.children;
	
	    // If we're switching from children to content/html or vice versa, remove
	    // the old content
	    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
	    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
	    if (lastChildren != null && nextChildren == null) {
	      this.updateChildren(null, transaction, context);
	    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
	      this.updateTextContent('');
	      if (process.env.NODE_ENV !== 'production') {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    }
	
	    if (nextContent != null) {
	      if (lastContent !== nextContent) {
	        this.updateTextContent('' + nextContent);
	        if (process.env.NODE_ENV !== 'production') {
	          setContentChildForInstrumentation.call(this, nextContent);
	        }
	      }
	    } else if (nextHtml != null) {
	      if (lastHtml !== nextHtml) {
	        this.updateMarkup('' + nextHtml);
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    } else if (nextChildren != null) {
	      if (process.env.NODE_ENV !== 'production') {
	        setContentChildForInstrumentation.call(this, null);
	      }
	
	      this.updateChildren(nextChildren, transaction, context);
	    }
	  },
	
	  getHostNode: function () {
	    return getNode(this);
	  },
	
	  /**
	   * Destroys all event registrations for this instance. Does not remove from
	   * the DOM. That must be done by the parent.
	   *
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        var listeners = this._wrapperState.listeners;
	        if (listeners) {
	          for (var i = 0; i < listeners.length; i++) {
	            listeners[i].remove();
	          }
	        }
	        break;
	      case 'html':
	      case 'head':
	      case 'body':
	        /**
	         * Components like <html> <head> and <body> can't be removed or added
	         * easily in a cross-browser way, however it's valuable to be able to
	         * take advantage of React's reconciliation for styling and <title>
	         * management. So we just document it and throw in dangerous cases.
	         */
	         true ? process.env.NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
	        break;
	    }
	
	    this.unmountChildren(safely);
	    ReactDOMComponentTree.uncacheNode(this);
	    EventPluginHub.deleteAllListeners(this);
	    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
	    this._rootNodeID = null;
	    this._domID = null;
	    this._wrapperState = null;
	
	    if (process.env.NODE_ENV !== 'production') {
	      setContentChildForInstrumentation.call(this, null);
	    }
	  },
	
	  getPublicInstance: function () {
	    return getNode(this);
	  }
	
	};
	
	_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);
	
	module.exports = ReactDOMComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 185 */
/*!***************************************!*\
  !*** ./~/react/lib/AutoFocusUtils.js ***!
  \***************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule AutoFocusUtils
	 */
	
	'use strict';
	
	var ReactDOMComponentTree = __webpack_require__(/*! ./ReactDOMComponentTree */ 127);
	
	var focusNode = __webpack_require__(/*! fbjs/lib/focusNode */ 186);
	
	var AutoFocusUtils = {
	  focusDOMComponent: function () {
	    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
	  }
	};
	
	module.exports = AutoFocusUtils;

/***/ },
/* 186 */
/*!*****************************************!*\
  !*** ./~/react/~/fbjs/lib/focusNode.js ***!
  \*****************************************/
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	/**
	 * @param {DOMElement} node input/textarea to focus
	 */
	
	function focusNode(node) {
	  // IE8 can throw "Can't move focus to the control because it is invisible,
	  // not enabled, or of a type that does not accept the focus." for all kinds of
	  // reasons that are too expensive and fragile to test.
	  try {
	    node.focus();
	  } catch (e) {}
	}
	
	module.exports = focusNode;

/***/ },
/* 187 */
/*!**********************************************!*\
  !*** ./~/react/lib/CSSPropertyOperations.js ***!
  \**********************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSPropertyOperations
	 */
	
	'use strict';
	
	var CSSProperty = __webpack_require__(/*! ./CSSProperty */ 188);
	var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 140);
	var ReactInstrumentation = __webpack_require__(/*! ./ReactInstrumentation */ 153);
	
	var camelizeStyleName = __webpack_require__(/*! fbjs/lib/camelizeStyleName */ 189);
	var dangerousStyleValue = __webpack_require__(/*! ./dangerousStyleValue */ 191);
	var hyphenateStyleName = __webpack_require__(/*! fbjs/lib/hyphenateStyleName */ 192);
	var memoizeStringOnly = __webpack_require__(/*! fbjs/lib/memoizeStringOnly */ 194);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 103);
	
	var processStyleName = memoizeStringOnly(function (styleName) {
	  return hyphenateStyleName(styleName);
	});
	
	var hasShorthandPropertyBug = false;
	var styleFloatAccessor = 'cssFloat';
	if (ExecutionEnvironment.canUseDOM) {
	  var tempStyle = document.createElement('div').style;
	  try {
	    // IE8 throws "Invalid argument." if resetting shorthand style properties.
	    tempStyle.font = '';
	  } catch (e) {
	    hasShorthandPropertyBug = true;
	  }
	  // IE8 only supports accessing cssFloat (standard) as styleFloat
	  if (document.documentElement.style.cssFloat === undefined) {
	    styleFloatAccessor = 'styleFloat';
	  }
	}
	
	if (process.env.NODE_ENV !== 'production') {
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
	
	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;
	
	  var warnedStyleNames = {};
	  var warnedStyleValues = {};
	  var warnedForNaNValue = false;
	
	  var warnHyphenatedStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }
	
	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
	  };
	
	  var warnBadVendoredStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }
	
	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
	  };
	
	  var warnStyleValueWithSemicolon = function (name, value, owner) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }
	
	    warnedStyleValues[value] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon.%s ' + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
	  };
	
	  var warnStyleValueIsNaN = function (name, value, owner) {
	    if (warnedForNaNValue) {
	      return;
	    }
	
	    warnedForNaNValue = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
	  };
	
	  var checkRenderMessage = function (owner) {
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' Check the render method of `' + name + '`.';
	      }
	    }
	    return '';
	  };
	
	  /**
	   * @param {string} name
	   * @param {*} value
	   * @param {ReactDOMComponent} component
	   */
	  var warnValidStyle = function (name, value, component) {
	    var owner;
	    if (component) {
	      owner = component._currentElement._owner;
	    }
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name, owner);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name, owner);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value, owner);
	    }
	
	    if (typeof value === 'number' && isNaN(value)) {
	      warnStyleValueIsNaN(name, value, owner);
	    }
	  };
	}
	
	/**
	 * Operations for dealing with CSS properties.
	 */
	var CSSPropertyOperations = {
	
	  /**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   * @return {?string}
	   */
	  createMarkupForStyles: function (styles, component) {
	    var serialized = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var styleValue = styles[styleName];
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styleValue, component);
	      }
	      if (styleValue != null) {
	        serialized += processStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';
	      }
	    }
	    return serialized || null;
	  },
	
	  /**
	   * Sets the value for multiple styles on a node.  If a value is specified as
	   * '' (empty string), the corresponding style property will be unset.
	   *
	   * @param {DOMElement} node
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   */
	  setValueForStyles: function (node, styles, component) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onHostOperation(component._debugID, 'update styles', styles);
	    }
	
	    var style = node.style;
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styles[styleName], component);
	      }
	      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);
	      if (styleName === 'float' || styleName === 'cssFloat') {
	        styleName = styleFloatAccessor;
	      }
	      if (styleValue) {
	        style[styleName] = styleValue;
	      } else {
	        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
	        if (expansion) {
	          // Shorthand property that IE8 won't like unsetting, so unset each
	          // component to placate it
	          for (var individualStyleName in expansion) {
	            style[individualStyleName] = '';
	          }
	        } else {
	          style[styleName] = '';
	        }
	      }
	    }
	  }
	
	};
	
	module.exports = CSSPropertyOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 188 */
/*!************************************!*\
  !*** ./~/react/lib/CSSProperty.js ***!
  \************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSProperty
	 */
	
	'use strict';
	
	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */
	
	var isUnitlessNumber = {
	  animationIterationCount: true,
	  borderImageOutset: true,
	  borderImageSlice: true,
	  borderImageWidth: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  gridRow: true,
	  gridColumn: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,
	
	  // SVG-related properties
	  fillOpacity: true,
	  floodOpacity: true,
	  stopOpacity: true,
	  strokeDasharray: true,
	  strokeDashoffset: true,
	  strokeMiterlimit: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};
	
	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}
	
	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];
	
	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});
	
	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundAttachment: true,
	    backgroundColor: true,
	    backgroundImage: true,
	    backgroundPositionX: true,
	    backgroundPositionY: true,
	    backgroundRepeat: true
	  },
	  backgroundPosition: {
	    backgroundPositionX: true,
	    backgroundPositionY: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  },
	  outline: {
	    outlineWidth: true,
	    outlineStyle: true,
	    outlineColor: true
	  }
	};
	
	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};
	
	module.exports = CSSProperty;

/***/ },
/* 189 */
/*!*************************************************!*\
  !*** ./~/react/~/fbjs/lib/camelizeStyleName.js ***!
  \*************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	var camelize = __webpack_require__(/*! ./camelize */ 190);
	
	var msPattern = /^-ms-/;
	
	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}
	
	module.exports = camelizeStyleName;

/***/ },
/* 190 */
/*!****************************************!*\
  !*** ./~/react/~/fbjs/lib/camelize.js ***!
  \****************************************/
/***/ function(module, exports) {

	"use strict";
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var _hyphenPattern = /-(.)/g;
	
	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}
	
	module.exports = camelize;

/***/ },
/* 191 */
/*!********************************************!*\
  !*** ./~/react/lib/dangerousStyleValue.js ***!
  \********************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule dangerousStyleValue
	 */
	
	'use strict';
	
	var CSSProperty = __webpack_require__(/*! ./CSSProperty */ 188);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 103);
	
	var isUnitlessNumber = CSSProperty.isUnitlessNumber;
	var styleWarnings = {};
	
	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @param {ReactDOMComponent} component
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value, component) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901
	
	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }
	
	  var isNonNumeric = isNaN(value);
	  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }
	
	  if (typeof value === 'string') {
	    if (process.env.NODE_ENV !== 'production') {
	      // Allow '0' to pass through without warning. 0 is already special and
	      // doesn't require units, so we don't need to warn about it.
	      if (component && value !== '0') {
	        var owner = component._currentElement._owner;
	        var ownerName = owner ? owner.getName() : null;
	        if (ownerName && !styleWarnings[ownerName]) {
	          styleWarnings[ownerName] = {};
	        }
	        var warned = false;
	        if (ownerName) {
	          var warnings = styleWarnings[ownerName];
	          warned = warnings[name];
	          if (!warned) {
	            warnings[name] = true;
	          }
	        }
	        if (!warned) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
	        }
	      }
	    }
	    value = value.trim();
	  }
	  return value + 'px';
	}
	
	module.exports = dangerousStyleValue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 192 */
/*!**************************************************!*\
  !*** ./~/react/~/fbjs/lib/hyphenateStyleName.js ***!
  \**************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	var hyphenate = __webpack_require__(/*! ./hyphenate */ 193);
	
	var msPattern = /^ms-/;
	
	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}
	
	module.exports = hyphenateStyleName;

/***/ },
/* 193 */
/*!*****************************************!*\
  !*** ./~/react/~/fbjs/lib/hyphenate.js ***!
  \*****************************************/
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var _uppercasePattern = /([A-Z])/g;
	
	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}
	
	module.exports = hyphenate;

/***/ },
/* 194 */
/*!*************************************************!*\
  !*** ./~/react/~/fbjs/lib/memoizeStringOnly.js ***!
  \*************************************************/
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 */
	
	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function (string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}
	
	module.exports = memoizeStringOnly;

/***/ },
/* 195 */
/*!**********************************************!*\
  !*** ./~/react/lib/DOMPropertyOperations.js ***!
  \**********************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMPropertyOperations
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(/*! ./DOMProperty */ 128);
	var ReactDOMComponentTree = __webpack_require__(/*! ./ReactDOMComponentTree */ 127);
	var ReactDOMInstrumentation = __webpack_require__(/*! ./ReactDOMInstrumentation */ 196);
	var ReactInstrumentation = __webpack_require__(/*! ./ReactInstrumentation */ 153);
	
	var quoteAttributeValueForBrowser = __webpack_require__(/*! ./quoteAttributeValueForBrowser */ 200);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 103);
	
	var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
	var illegalAttributeNameCache = {};
	var validatedAttributeNameCache = {};
	
	function isAttributeNameSafe(attributeName) {
	  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
	    return true;
	  }
	  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
	    return false;
	  }
	  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
	    validatedAttributeNameCache[attributeName] = true;
	    return true;
	  }
	  illegalAttributeNameCache[attributeName] = true;
	  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
	  return false;
	}
	
	function shouldIgnoreValue(propertyInfo, value) {
	  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
	}
	
	/**
	 * Operations for dealing with DOM properties.
	 */
	var DOMPropertyOperations = {
	
	  /**
	   * Creates markup for the ID property.
	   *
	   * @param {string} id Unescaped ID.
	   * @return {string} Markup string.
	   */
	  createMarkupForID: function (id) {
	    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
	  },
	
	  setAttributeForID: function (node, id) {
	    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
	  },
	
	  createMarkupForRoot: function () {
	    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
	  },
	
	  setAttributeForRoot: function (node) {
	    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
	  },
	
	  /**
	   * Creates markup for a property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {?string} Markup string, or null if the property was invalid.
	   */
	  createMarkupForProperty: function (name, value) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactDOMInstrumentation.debugTool.onCreateMarkupForProperty(name, value);
	    }
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      if (shouldIgnoreValue(propertyInfo, value)) {
	        return '';
	      }
	      var attributeName = propertyInfo.attributeName;
	      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	        return attributeName + '=""';
	      }
	      return attributeName + '=' + quoteAttributeValueForBrowser(value);
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        return '';
	      }
	      return name + '=' + quoteAttributeValueForBrowser(value);
	    }
	    return null;
	  },
	
	  /**
	   * Creates markup for a custom property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {string} Markup string, or empty string if the property was invalid.
	   */
	  createMarkupForCustomAttribute: function (name, value) {
	    if (!isAttributeNameSafe(name) || value == null) {
	      return '';
	    }
	    return name + '=' + quoteAttributeValueForBrowser(value);
	  },
	
	  /**
	   * Sets the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   * @param {*} value
	   */
	  setValueForProperty: function (node, name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, value);
	      } else if (shouldIgnoreValue(propertyInfo, value)) {
	        this.deleteValueForProperty(node, name);
	        return;
	      } else if (propertyInfo.mustUseProperty) {
	        // Contrary to `setAttribute`, object properties are properly
	        // `toString`ed by IE8/9.
	        node[propertyInfo.propertyName] = value;
	      } else {
	        var attributeName = propertyInfo.attributeName;
	        var namespace = propertyInfo.attributeNamespace;
	        // `setAttribute` with objects becomes only `[object]` in IE8/9,
	        // ('' + value) makes it output the correct toString()-value.
	        if (namespace) {
	          node.setAttributeNS(namespace, attributeName, '' + value);
	        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	          node.setAttribute(attributeName, '');
	        } else {
	          node.setAttribute(attributeName, '' + value);
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      DOMPropertyOperations.setValueForAttribute(node, name, value);
	      return;
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      ReactDOMInstrumentation.debugTool.onSetValueForProperty(node, name, value);
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);
	    }
	  },
	
	  setValueForAttribute: function (node, name, value) {
	    if (!isAttributeNameSafe(name)) {
	      return;
	    }
	    if (value == null) {
	      node.removeAttribute(name);
	    } else {
	      node.setAttribute(name, '' + value);
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);
	    }
	  },
	
	  /**
	   * Deletes an attributes from a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForAttribute: function (node, name) {
	    node.removeAttribute(name);
	    if (process.env.NODE_ENV !== 'production') {
	      ReactDOMInstrumentation.debugTool.onDeleteValueForProperty(node, name);
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);
	    }
	  },
	
	  /**
	   * Deletes the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForProperty: function (node, name) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, undefined);
	      } else if (propertyInfo.mustUseProperty) {
	        var propName = propertyInfo.propertyName;
	        if (propertyInfo.hasBooleanValue) {
	          node[propName] = false;
	        } else {
	          node[propName] = '';
	        }
	      } else {
	        node.removeAttribute(propertyInfo.attributeName);
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      node.removeAttribute(name);
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      ReactDOMInstrumentation.debugTool.onDeleteValueForProperty(node, name);
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);
	    }
	  }
	
	};
	
	module.exports = DOMPropertyOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 196 */
/*!************************************************!*\
  !*** ./~/react/lib/ReactDOMInstrumentation.js ***!
  \************************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMInstrumentation
	 */
	
	'use strict';
	
	var debugTool = null;
	
	if (process.env.NODE_ENV !== 'production') {
	  var ReactDOMDebugTool = __webpack_require__(/*! ./ReactDOMDebugTool */ 197);
	  debugTool = ReactDOMDebugTool;
	}
	
	module.exports = { debugTool: debugTool };
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 197 */
/*!******************************************!*\
  !*** ./~/react/lib/ReactDOMDebugTool.js ***!
  \******************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMDebugTool
	 */
	
	'use strict';
	
	var ReactDOMNullInputValuePropDevtool = __webpack_require__(/*! ./ReactDOMNullInputValuePropDevtool */ 198);
	var ReactDOMUnknownPropertyDevtool = __webpack_require__(/*! ./ReactDOMUnknownPropertyDevtool */ 199);
	var ReactDebugTool = __webpack_require__(/*! ./ReactDebugTool */ 154);
	
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 103);
	
	var eventHandlers = [];
	var handlerDoesThrowForEvent = {};
	
	function emitEvent(handlerFunctionName, arg1, arg2, arg3, arg4, arg5) {
	  eventHandlers.forEach(function (handler) {
	    try {
	      if (handler[handlerFunctionName]) {
	        handler[handlerFunctionName](arg1, arg2, arg3, arg4, arg5);
	      }
	    } catch (e) {
	      process.env.NODE_ENV !== 'production' ? warning(handlerDoesThrowForEvent[handlerFunctionName], 'exception thrown by devtool while handling %s: %s', handlerFunctionName, e + '\n' + e.stack) : void 0;
	      handlerDoesThrowForEvent[handlerFunctionName] = true;
	    }
	  });
	}
	
	var ReactDOMDebugTool = {
	  addDevtool: function (devtool) {
	    ReactDebugTool.addDevtool(devtool);
	    eventHandlers.push(devtool);
	  },
	  removeDevtool: function (devtool) {
	    ReactDebugTool.removeDevtool(devtool);
	    for (var i = 0; i < eventHandlers.length; i++) {
	      if (eventHandlers[i] === devtool) {
	        eventHandlers.splice(i, 1);
	        i--;
	      }
	    }
	  },
	  onCreateMarkupForProperty: function (name, value) {
	    emitEvent('onCreateMarkupForProperty', name, value);
	  },
	  onSetValueForProperty: function (node, name, value) {
	    emitEvent('onSetValueForProperty', node, name, value);
	  },
	  onDeleteValueForProperty: function (node, name) {
	    emitEvent('onDeleteValueForProperty', node, name);
	  },
	  onTestEvent: function () {
	    emitEvent('onTestEvent');
	  }
	};
	
	ReactDOMDebugTool.addDevtool(ReactDOMUnknownPropertyDevtool);
	ReactDOMDebugTool.addDevtool(ReactDOMNullInputValuePropDevtool);
	
	module.exports = ReactDOMDebugTool;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 198 */
/*!**********************************************************!*\
  !*** ./~/react/lib/ReactDOMNullInputValuePropDevtool.js ***!
  \**********************************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMNullInputValuePropDevtool
	 */
	
	'use strict';
	
	var ReactComponentTreeDevtool = __webpack_require__(/*! ./ReactComponentTreeDevtool */ 120);
	
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 103);
	
	var didWarnValueNull = false;
	
	function handleElement(debugID, element) {
	  if (element == null) {
	    return;
	  }
	  if (element.type !== 'input' && element.type !== 'textarea' && element.type !== 'select') {
	    return;
	  }
	  if (element.props != null && element.props.value === null && !didWarnValueNull) {
	    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', element.type, ReactComponentTreeDevtool.getStackAddendumByID(debugID)) : void 0;
	
	    didWarnValueNull = true;
	  }
	}
	
	var ReactDOMUnknownPropertyDevtool = {
	  onBeforeMountComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  }
	};
	
	module.exports = ReactDOMUnknownPropertyDevtool;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 199 */
/*!*******************************************************!*\
  !*** ./~/react/lib/ReactDOMUnknownPropertyDevtool.js ***!
  \*******************************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMUnknownPropertyDevtool
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(/*! ./DOMProperty */ 128);
	var EventPluginRegistry = __webpack_require__(/*! ./EventPluginRegistry */ 135);
	var ReactComponentTreeDevtool = __webpack_require__(/*! ./ReactComponentTreeDevtool */ 120);
	
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 103);
	
	if (process.env.NODE_ENV !== 'production') {
	  var reactProps = {
	    children: true,
	    dangerouslySetInnerHTML: true,
	    key: true,
	    ref: true,
	
	    autoFocus: true,
	    defaultValue: true,
	    valueLink: true,
	    defaultChecked: true,
	    checkedLink: true,
	    innerHTML: true,
	    suppressContentEditableWarning: true,
	    onFocusIn: true,
	    onFocusOut: true
	  };
	  var warnedProperties = {};
	
	  var validateProperty = function (tagName, name, debugID) {
	    if (DOMProperty.properties.hasOwnProperty(name) || DOMProperty.isCustomAttribute(name)) {
	      return true;
	    }
	    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
	      return true;
	    }
	    if (EventPluginRegistry.registrationNameModules.hasOwnProperty(name)) {
	      return true;
	    }
	    warnedProperties[name] = true;
	    var lowerCasedName = name.toLowerCase();
	
	    // data-* attributes should be lowercase; suggest the lowercase version
	    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;
	
	    var registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName] : null;
	
	    if (standardName != null) {
	      process.env.NODE_ENV !== 'production' ? warning(standardName == null, 'Unknown DOM property %s. Did you mean %s?%s', name, standardName, ReactComponentTreeDevtool.getStackAddendumByID(debugID)) : void 0;
	      return true;
	    } else if (registrationName != null) {
	      process.env.NODE_ENV !== 'production' ? warning(registrationName == null, 'Unknown event handler property %s. Did you mean `%s`?%s', name, registrationName, ReactComponentTreeDevtool.getStackAddendumByID(debugID)) : void 0;
	      return true;
	    } else {
	      // We were unable to guess which prop the user intended.
	      // It is likely that the user was just blindly spreading/forwarding props
	      // Components should be careful to only render valid props/attributes.
	      // Warning will be invoked in warnUnknownProperties to allow grouping.
	      return false;
	    }
	  };
	}
	
	var warnUnknownProperties = function (debugID, element) {
	  var unknownProps = [];
	  for (var key in element.props) {
	    var isValid = validateProperty(element.type, key, debugID);
	    if (!isValid) {
	      unknownProps.push(key);
	    }
	  }
	
	  var unknownPropString = unknownProps.map(function (prop) {
	    return '`' + prop + '`';
	  }).join(', ');
	
	  if (unknownProps.length === 1) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown prop %s on <%s> tag. Remove this prop from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeDevtool.getStackAddendumByID(debugID)) : void 0;
	  } else if (unknownProps.length > 1) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown props %s on <%s> tag. Remove these props from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeDevtool.getStackAddendumByID(debugID)) : void 0;
	  }
	};
	
	function handleElement(debugID, element) {
	  if (element == null || typeof element.type !== 'string') {
	    return;
	  }
	  if (element.type.indexOf('-') >= 0 || element.props.is) {
	    return;
	  }
	  warnUnknownProperties(debugID, element);
	}
	
	var ReactDOMUnknownPropertyDevtool = {
	  onBeforeMountComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  }
	};
	
	module.exports = ReactDOMUnknownPropertyDevtool;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 200 */
/*!******************************************************!*\
  !*** ./~/react/lib/quoteAttributeValueForBrowser.js ***!
  \******************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule quoteAttributeValueForBrowser
	 */
	
	'use strict';
	
	var escapeTextContentForBrowser = __webpack_require__(/*! ./escapeTextContentForBrowser */ 177);
	
	/**
	 * Escapes attribute value to prevent scripting attacks.
	 *
	 * @param {*} value Value to escape.
	 * @return {string} An escaped string.
	 */
	function quoteAttributeValueForBrowser(value) {
	  return '"' + escapeTextContentForBrowser(value) + '"';
	}
	
	module.exports = quoteAttributeValueForBrowser;

/***/ },
/* 201 */
/*!*************************************************!*\
  !*** ./~/react/lib/ReactBrowserEventEmitter.js ***!
  \*************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactBrowserEventEmitter
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(/*! object-assign */ 96);
	
	var EventConstants = __webpack_require__(/*! ./EventConstants */ 132);
	var EventPluginRegistry = __webpack_require__(/*! ./EventPluginRegistry */ 135);
	var ReactEventEmitterMixin = __webpack_require__(/*! ./ReactEventEmitterMixin */ 202);
	var ViewportMetrics = __webpack_require__(/*! ./ViewportMetrics */ 167);
	
	var getVendorPrefixedEventName = __webpack_require__(/*! ./getVendorPrefixedEventName */ 203);
	var isEventSupported = __webpack_require__(/*! ./isEventSupported */ 161);
	
	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactEventListener, which is injected and can therefore support pluggable
	 *    event sources. This is the only work that occurs in the main thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */
	
	var hasEventPageXY;
	var alreadyListeningTo = {};
	var isMonitoringScrollValue = false;
	var reactTopListenersCounter = 0;
	
	// For events like 'submit' which don't consistently bubble (which we trap at a
	// lower node than `document`), binding at `document` would cause duplicate
	// events so we don't include them here
	var topEventMapping = {
	  topAbort: 'abort',
	  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
	  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
	  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
	  topBlur: 'blur',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topChange: 'change',
	  topClick: 'click',
	  topCompositionEnd: 'compositionend',
	  topCompositionStart: 'compositionstart',
	  topCompositionUpdate: 'compositionupdate',
	  topContextMenu: 'contextmenu',
	  topCopy: 'copy',
	  topCut: 'cut',
	  topDoubleClick: 'dblclick',
	  topDrag: 'drag',
	  topDragEnd: 'dragend',
	  topDragEnter: 'dragenter',
	  topDragExit: 'dragexit',
	  topDragLeave: 'dragleave',
	  topDragOver: 'dragover',
	  topDragStart: 'dragstart',
	  topDrop: 'drop',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topFocus: 'focus',
	  topInput: 'input',
	  topKeyDown: 'keydown',
	  topKeyPress: 'keypress',
	  topKeyUp: 'keyup',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topMouseDown: 'mousedown',
	  topMouseMove: 'mousemove',
	  topMouseOut: 'mouseout',
	  topMouseOver: 'mouseover',
	  topMouseUp: 'mouseup',
	  topPaste: 'paste',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topScroll: 'scroll',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topSelectionChange: 'selectionchange',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTextInput: 'textInput',
	  topTimeUpdate: 'timeupdate',
	  topTouchCancel: 'touchcancel',
	  topTouchEnd: 'touchend',
	  topTouchMove: 'touchmove',
	  topTouchStart: 'touchstart',
	  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting',
	  topWheel: 'wheel'
	};
	
	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);
	
	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}
	
	/**
	 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
	 * example:
	 *
	 *   EventPluginHub.putListener('myID', 'onClick', myFunction);
	 *
	 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
	 *
	 * @internal
	 */
	var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {
	
	  /**
	   * Injectable event backend
	   */
	  ReactEventListener: null,
	
	  injection: {
	    /**
	     * @param {object} ReactEventListener
	     */
	    injectReactEventListener: function (ReactEventListener) {
	      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
	      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
	    }
	  },
	
	  /**
	   * Sets whether or not any created callbacks should be enabled.
	   *
	   * @param {boolean} enabled True if callbacks should be enabled.
	   */
	  setEnabled: function (enabled) {
	    if (ReactBrowserEventEmitter.ReactEventListener) {
	      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
	    }
	  },
	
	  /**
	   * @return {boolean} True if callbacks are enabled.
	   */
	  isEnabled: function () {
	    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
	  },
	
	  /**
	   * We listen for bubbled touch events on the document object.
	   *
	   * Firefox v8.01 (and possibly others) exhibited strange behavior when
	   * mounting `onmousemove` events at some node that was not the document
	   * element. The symptoms were that if your mouse is not moving over something
	   * contained within that mount point (for example on the background) the
	   * top-level listeners for `onmousemove` won't be called. However, if you
	   * register the `mousemove` on the document object, then it will of course
	   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	   * top-level listeners to the document object only, at least for these
	   * movement types of events and possibly all events.
	   *
	   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	   *
	   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	   * they bubble to document.
	   *
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {object} contentDocumentHandle Document which owns the container
	   */
	  listenTo: function (registrationName, contentDocumentHandle) {
	    var mountAt = contentDocumentHandle;
	    var isListening = getListeningForDocument(mountAt);
	    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];
	
	    var topLevelTypes = EventConstants.topLevelTypes;
	    for (var i = 0; i < dependencies.length; i++) {
	      var dependency = dependencies[i];
	      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	        if (dependency === topLevelTypes.topWheel) {
	          if (isEventSupported('wheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);
	          } else if (isEventSupported('mousewheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);
	          } else {
	            // Firefox needs to capture a different mouse scroll event.
	            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);
	          }
	        } else if (dependency === topLevelTypes.topScroll) {
	
	          if (isEventSupported('scroll', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);
	          } else {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
	          }
	        } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {
	
	          if (isEventSupported('focus', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);
	          } else if (isEventSupported('focusin')) {
	            // IE has `focusin` and `focusout` events which bubble.
	            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);
	          }
	
	          // to make sure blur and focus event listeners are only attached once
	          isListening[topLevelTypes.topBlur] = true;
	          isListening[topLevelTypes.topFocus] = true;
	        } else if (topEventMapping.hasOwnProperty(dependency)) {
	          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
	        }
	
	        isListening[dependency] = true;
	      }
	    }
	  },
	
	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
	  },
	
	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
	  },
	
	  /**
	   * Listens to window scroll and resize events. We cache scroll values so that
	   * application code can access them without triggering reflows.
	   *
	   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
	   * pageX/pageY isn't supported (legacy browsers).
	   *
	   * NOTE: Scroll events do not bubble.
	   *
	   * @see http://www.quirksmode.org/dom/events/scroll.html
	   */
	  ensureScrollValueMonitoring: function () {
	    if (hasEventPageXY === undefined) {
	      hasEventPageXY = document.createEvent && 'pageX' in document.createEvent('MouseEvent');
	    }
	    if (!hasEventPageXY && !isMonitoringScrollValue) {
	      var refresh = ViewportMetrics.refreshScrollValues;
	      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
	      isMonitoringScrollValue = true;
	    }
	  }
	
	});
	
	module.exports = ReactBrowserEventEmitter;

/***/ },
/* 202 */
/*!***********************************************!*\
  !*** ./~/react/lib/ReactEventEmitterMixin.js ***!
  \***********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventEmitterMixin
	 */
	
	'use strict';
	
	var EventPluginHub = __webpack_require__(/*! ./EventPluginHub */ 134);
	
	function runEventQueueInBatch(events) {
	  EventPluginHub.enqueueEvents(events);
	  EventPluginHub.processEventQueue(false);
	}
	
	var ReactEventEmitterMixin = {
	
	  /**
	   * Streams a fired top-level event to `EventPluginHub` where plugins have the
	   * opportunity to create `ReactEvent`s to be dispatched.
	   */
	  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	    runEventQueueInBatch(events);
	  }
	};
	
	module.exports = ReactEventEmitterMixin;

/***/ },
/* 203 */
/*!***************************************************!*\
  !*** ./~/react/lib/getVendorPrefixedEventName.js ***!
  \***************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getVendorPrefixedEventName
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 140);
	
	/**
	 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
	 *
	 * @param {string} styleProp
	 * @param {string} eventName
	 * @returns {object}
	 */
	function makePrefixMap(styleProp, eventName) {
	  var prefixes = {};
	
	  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
	  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
	  prefixes['Moz' + styleProp] = 'moz' + eventName;
	  prefixes['ms' + styleProp] = 'MS' + eventName;
	  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();
	
	  return prefixes;
	}
	
	/**
	 * A list of event names to a configurable list of vendor prefixes.
	 */
	var vendorPrefixes = {
	  animationend: makePrefixMap('Animation', 'AnimationEnd'),
	  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
	  animationstart: makePrefixMap('Animation', 'AnimationStart'),
	  transitionend: makePrefixMap('Transition', 'TransitionEnd')
	};
	
	/**
	 * Event names that have already been detected and prefixed (if applicable).
	 */
	var prefixedEventNames = {};
	
	/**
	 * Element to check for prefixes on.
	 */
	var style = {};
	
	/**
	 * Bootstrap if a DOM exists.
	 */
	if (ExecutionEnvironment.canUseDOM) {
	  style = document.createElement('div').style;
	
	  // On some platforms, in particular some releases of Android 4.x,
	  // the un-prefixed "animation" and "transition" properties are defined on the
	  // style object but the events that fire will still be prefixed, so we need
	  // to check if the un-prefixed events are usable, and if not remove them from the map.
	  if (!('AnimationEvent' in window)) {
	    delete vendorPrefixes.animationend.animation;
	    delete vendorPrefixes.animationiteration.animation;
	    delete vendorPrefixes.animationstart.animation;
	  }
	
	  // Same as above
	  if (!('TransitionEvent' in window)) {
	    delete vendorPrefixes.transitionend.transition;
	  }
	}
	
	/**
	 * Attempts to determine the correct vendor prefixed event name.
	 *
	 * @param {string} eventName
	 * @returns {string}
	 */
	function getVendorPrefixedEventName(eventName) {
	  if (prefixedEventNames[eventName]) {
	    return prefixedEventNames[eventName];
	  } else if (!vendorPrefixes[eventName]) {
	    return eventName;
	  }
	
	  var prefixMap = vendorPrefixes[eventName];
	
	  for (var styleProp in prefixMap) {
	    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
	      return prefixedEventNames[eventName] = prefixMap[styleProp];
	    }
	  }
	
	  return '';
	}
	
	module.exports = getVendorPrefixedEventName;

/***/ },
/* 204 */
/*!***************************************!*\
  !*** ./~/react/lib/ReactDOMButton.js ***!
  \***************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMButton
	 */
	
	'use strict';
	
	var DisabledInputUtils = __webpack_require__(/*! ./DisabledInputUtils */ 205);
	
	/**
	 * Implements a <button> host component that does not receive mouse events
	 * when `disabled` is set.
	 */
	var ReactDOMButton = {
	  getHostProps: DisabledInputUtils.getHostProps
	};
	
	module.exports = ReactDOMButton;

/***/ },
/* 205 */
/*!*******************************************!*\
  !*** ./~/react/lib/DisabledInputUtils.js ***!
  \*******************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DisabledInputUtils
	 */
	
	'use strict';
	
	var disableableMouseListenerNames = {
	  onClick: true,
	  onDoubleClick: true,
	  onMouseDown: true,
	  onMouseMove: true,
	  onMouseUp: true,
	
	  onClickCapture: true,
	  onDoubleClickCapture: true,
	  onMouseDownCapture: true,
	  onMouseMoveCapture: true,
	  onMouseUpCapture: true
	};
	
	/**
	 * Implements a host component that does not receive mouse events
	 * when `disabled` is set.
	 */
	var DisabledInputUtils = {
	  getHostProps: function (inst, props) {
	    if (!props.disabled) {
	      return props;
	    }
	
	    // Copy the props, except the mouse listeners
	    var hostProps = {};
	    for (var key in props) {
	      if (!disableableMouseListenerNames[key] && props.hasOwnProperty(key)) {
	        hostProps[key] = props[key];
	      }
	    }
	
	    return hostProps;
	  }
	};
	
	module.exports = DisabledInputUtils;

/***/ },
/* 206 */
/*!**************************************!*\
  !*** ./~/react/lib/ReactDOMInput.js ***!
  \**************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMInput
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(/*! ./reactProdInvariant */ 99),
	    _assign = __webpack_require__(/*! object-assign */ 96);
	
	var DisabledInputUtils = __webpack_require__(/*! ./DisabledInputUtils */ 205);
	var DOMPropertyOperations = __webpack_require__(/*! ./DOMPropertyOperations */ 195);
	var LinkedValueUtils = __webpack_require__(/*! ./LinkedValueUtils */ 207);
	var ReactDOMComponentTree = __webpack_require__(/*! ./ReactDOMComponentTree */ 127);
	var ReactUpdates = __webpack_require__(/*! ./ReactUpdates */ 147);
	
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 100);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 103);
	
	var didWarnValueLink = false;
	var didWarnCheckedLink = false;
	var didWarnValueDefaultValue = false;
	var didWarnCheckedDefaultChecked = false;
	var didWarnControlledToUncontrolled = false;
	var didWarnUncontrolledToControlled = false;
	
	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMInput.updateWrapper(this);
	  }
	}
	
	function isControlled(props) {
	  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
	  return usesChecked ? props.checked !== undefined : props.value !== undefined;
	}
	
	/**
	 * Implements an <input> host component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */
	var ReactDOMInput = {
	  getHostProps: function (inst, props) {
	    var value = LinkedValueUtils.getValue(props);
	    var checked = LinkedValueUtils.getChecked(props);
	
	    var hostProps = _assign({
	      // Make sure we set .type before any other properties (setting .value
	      // before .type means .value is lost in IE11 and below)
	      type: undefined
	    }, DisabledInputUtils.getHostProps(inst, props), {
	      defaultChecked: undefined,
	      defaultValue: undefined,
	      value: value != null ? value : inst._wrapperState.initialValue,
	      checked: checked != null ? checked : inst._wrapperState.initialChecked,
	      onChange: inst._wrapperState.onChange
	    });
	
	    return hostProps;
	  },
	
	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);
	
	      var owner = inst._currentElement._owner;
	
	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnCheckedLink = true;
	      }
	      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnCheckedDefaultChecked = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnValueDefaultValue = true;
	      }
	    }
	
	    var defaultValue = props.defaultValue;
	    inst._wrapperState = {
	      initialChecked: props.checked != null ? props.checked : props.defaultChecked,
	      initialValue: props.value != null ? props.value : defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };
	
	    if (process.env.NODE_ENV !== 'production') {
	      inst._wrapperState.controlled = isControlled(props);
	    }
	  },
	
	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    if (process.env.NODE_ENV !== 'production') {
	      var controlled = isControlled(props);
	      var owner = inst._currentElement._owner;
	
	      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnUncontrolledToControlled = true;
	      }
	      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnControlledToUncontrolled = true;
	      }
	    }
	
	    // TODO: Shouldn't this be getChecked(props)?
	    var checked = props.checked;
	    if (checked != null) {
	      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
	    }
	
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      var newValue = '' + value;
	
	      // To avoid side effects (such as losing text selection), only set value if changed
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	    } else {
	      if (props.value == null && props.defaultValue != null) {
	        node.defaultValue = '' + props.defaultValue;
	      }
	      if (props.checked == null && props.defaultChecked != null) {
	        node.defaultChecked = !!props.defaultChecked;
	      }
	    }
	  },
	
	  postMountWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	
	    // Detach value from defaultValue. We won't do anything if we're working on
	    // submit or reset inputs as those values & defaultValues are linked. They
	    // are not resetable nodes so this operation doesn't matter and actually
	    // removes browser-default values (eg "Submit Query") when no value is
	    // provided.
	    if (props.type !== 'submit' && props.type !== 'reset') {
	      node.value = node.value;
	    }
	
	    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
	    // this is needed to work around a chrome bug where setting defaultChecked
	    // will sometimes influence the value of checked (even after detachment).
	    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
	    // We need to temporarily unset name to avoid disrupting radio button groups.
	    var name = node.name;
	    if (name !== '') {
	      node.name = '';
	    }
	    node.defaultChecked = !node.defaultChecked;
	    node.defaultChecked = !node.defaultChecked;
	    if (name !== '') {
	      node.name = name;
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	
	  // Here we use asap to wait until all updates have propagated, which
	  // is important when using controlled components within layers:
	  // https://github.com/facebook/react/issues/1698
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	
	  var name = props.name;
	  if (props.type === 'radio' && name != null) {
	    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
	    var queryRoot = rootNode;
	
	    while (queryRoot.parentNode) {
	      queryRoot = queryRoot.parentNode;
	    }
	
	    // If `rootNode.form` was non-null, then we could try `form.elements`,
	    // but that sometimes behaves strangely in IE8. We could also try using
	    // `form.getElementsByName`, but that will only return direct children
	    // and won't include inputs that use the HTML5 `form=` attribute. Since
	    // the input might not even be in a form, let's just use the global
	    // `querySelectorAll` to ensure we don't miss anything.
	    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');
	
	    for (var i = 0; i < group.length; i++) {
	      var otherNode = group[i];
	      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
	        continue;
	      }
	      // This will throw if radio buttons rendered by different copies of React
	      // and the same name are rendered into the same form (same as #1939).
	      // That's probably okay; we don't support it just as we don't support
	      // mixing React radio buttons with non-React ones.
	      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
	      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
	      // If this is a controlled radio button group, forcing the input that
	      // was previously checked to update will cause it to be come re-checked
	      // as appropriate.
	      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
	    }
	  }
	
	  return returnValue;
	}
	
	module.exports = ReactDOMInput;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 207 */
/*!*****************************************!*\
  !*** ./~/react/lib/LinkedValueUtils.js ***!
  \*****************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule LinkedValueUtils
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(/*! ./reactProdInvariant */ 99);
	
	var ReactPropTypes = __webpack_require__(/*! ./ReactPropTypes */ 122);
	var ReactPropTypeLocations = __webpack_require__(/*! ./ReactPropTypeLocations */ 113);
	
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 100);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 103);
	
	var hasReadOnlyValue = {
	  'button': true,
	  'checkbox': true,
	  'image': true,
	  'hidden': true,
	  'radio': true,
	  'reset': true,
	  'submit': true
	};
	
	function _assertSingleLink(inputProps) {
	  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
	}
	function _assertValueLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
	}
	
	function _assertCheckedLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
	}
	
	var propTypes = {
	  value: function (props, propName, componentName) {
	    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  checked: function (props, propName, componentName) {
	    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  onChange: ReactPropTypes.func
	};
	
	var loggedTypeFailures = {};
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	/**
	 * Provide a linked `value` attribute for controlled forms. You should not use
	 * this outside of the ReactDOM controlled form components.
	 */
	var LinkedValueUtils = {
	  checkPropTypes: function (tagName, props, owner) {
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop);
	      }
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;
	
	        var addendum = getDeclarationErrorAddendum(owner);
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
	      }
	    }
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current value of the input either from value prop or link.
	   */
	  getValue: function (inputProps) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.value;
	    }
	    return inputProps.value;
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current checked status of the input either from checked prop
	   *             or link.
	   */
	  getChecked: function (inputProps) {
	    if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.value;
	    }
	    return inputProps.checked;
	  },
	
	  /**
	   * @param {object} inputProps Props for form component
	   * @param {SyntheticEvent} event change event to handle
	   */
	  executeOnChange: function (inputProps, event) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.requestChange(event.target.value);
	    } else if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.requestChange(event.target.checked);
	    } else if (inputProps.onChange) {
	      return inputProps.onChange.call(undefined, event);
	    }
	  }
	};
	
	module.exports = LinkedValueUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 208 */
/*!***************************************!*\
  !*** ./~/react/lib/ReactDOMOption.js ***!
  \***************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMOption
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(/*! object-assign */ 96);
	
	var ReactChildren = __webpack_require__(/*! ./ReactChildren */ 97);
	var ReactDOMComponentTree = __webpack_require__(/*! ./ReactDOMComponentTree */ 127);
	var ReactDOMSelect = __webpack_require__(/*! ./ReactDOMSelect */ 209);
	
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 103);
	var didWarnInvalidOptionChildren = false;
	
	function flattenChildren(children) {
	  var content = '';
	
	  // Flatten children and warn if they aren't strings or numbers;
	  // invalid types are ignored.
	  ReactChildren.forEach(children, function (child) {
	    if (child == null) {
	      return;
	    }
	    if (typeof child === 'string' || typeof child === 'number') {
	      content += child;
	    } else if (!didWarnInvalidOptionChildren) {
	      didWarnInvalidOptionChildren = true;
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
	    }
	  });
	
	  return content;
	}
	
	/**
	 * Implements an <option> host component that warns when `selected` is set.
	 */
	var ReactDOMOption = {
	  mountWrapper: function (inst, props, hostParent) {
	    // TODO (yungsters): Remove support for `selected` in <option>.
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
	    }
	
	    // Look up whether this option is 'selected'
	    var selectValue = null;
	    if (hostParent != null) {
	      var selectParent = hostParent;
	
	      if (selectParent._tag === 'optgroup') {
	        selectParent = selectParent._hostParent;
	      }
	
	      if (selectParent != null && selectParent._tag === 'select') {
	        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
	      }
	    }
	
	    // If the value is null (e.g., no specified value or after initial mount)
	    // or missing (e.g., for <datalist>), we don't change props.selected
	    var selected = null;
	    if (selectValue != null) {
	      var value;
	      if (props.value != null) {
	        value = props.value + '';
	      } else {
	        value = flattenChildren(props.children);
	      }
	      selected = false;
	      if (Array.isArray(selectValue)) {
	        // multiple
	        for (var i = 0; i < selectValue.length; i++) {
	          if ('' + selectValue[i] === value) {
	            selected = true;
	            break;
	          }
	        }
	      } else {
	        selected = '' + selectValue === value;
	      }
	    }
	
	    inst._wrapperState = { selected: selected };
	  },
	
	  postMountWrapper: function (inst) {
	    // value="" should make a value attribute (#6219)
	    var props = inst._currentElement.props;
	    if (props.value != null) {
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      node.setAttribute('value', props.value);
	    }
	  },
	
	  getHostProps: function (inst, props) {
	    var hostProps = _assign({ selected: undefined, children: undefined }, props);
	
	    // Read state only from initial mount because <select> updates value
	    // manually; we need the initial state only for server rendering
	    if (inst._wrapperState.selected != null) {
	      hostProps.selected = inst._wrapperState.selected;
	    }
	
	    var content = flattenChildren(props.children);
	
	    if (content) {
	      hostProps.children = content;
	    }
	
	    return hostProps;
	  }
	
	};
	
	module.exports = ReactDOMOption;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 209 */
/*!***************************************!*\
  !*** ./~/react/lib/ReactDOMSelect.js ***!
  \***************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelect
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(/*! object-assign */ 96);
	
	var DisabledInputUtils = __webpack_require__(/*! ./DisabledInputUtils */ 205);
	var LinkedValueUtils = __webpack_require__(/*! ./LinkedValueUtils */ 207);
	var ReactDOMComponentTree = __webpack_require__(/*! ./ReactDOMComponentTree */ 127);
	var ReactUpdates = __webpack_require__(/*! ./ReactUpdates */ 147);
	
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 103);
	
	var didWarnValueLink = false;
	var didWarnValueDefaultValue = false;
	
	function updateOptionsIfPendingUpdateAndMounted() {
	  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
	    this._wrapperState.pendingUpdate = false;
	
	    var props = this._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);
	
	    if (value != null) {
	      updateOptions(this, Boolean(props.multiple), value);
	    }
	  }
	}
	
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	var valuePropNames = ['value', 'defaultValue'];
	
	/**
	 * Validation function for `value` and `defaultValue`.
	 * @private
	 */
	function checkSelectPropTypes(inst, props) {
	  var owner = inst._currentElement._owner;
	  LinkedValueUtils.checkPropTypes('select', props, owner);
	
	  if (props.valueLink !== undefined && !didWarnValueLink) {
	    process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
	    didWarnValueLink = true;
	  }
	
	  for (var i = 0; i < valuePropNames.length; i++) {
	    var propName = valuePropNames[i];
	    if (props[propName] == null) {
	      continue;
	    }
	    if (props.multiple) {
	      process.env.NODE_ENV !== 'production' ? warning(Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    } else {
	      process.env.NODE_ENV !== 'production' ? warning(!Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    }
	  }
	}
	
	/**
	 * @param {ReactDOMComponent} inst
	 * @param {boolean} multiple
	 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
	 * @private
	 */
	function updateOptions(inst, multiple, propValue) {
	  var selectedValue, i;
	  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;
	
	  if (multiple) {
	    selectedValue = {};
	    for (i = 0; i < propValue.length; i++) {
	      selectedValue['' + propValue[i]] = true;
	    }
	    for (i = 0; i < options.length; i++) {
	      var selected = selectedValue.hasOwnProperty(options[i].value);
	      if (options[i].selected !== selected) {
	        options[i].selected = selected;
	      }
	    }
	  } else {
	    // Do not set `select.value` as exact behavior isn't consistent across all
	    // browsers for all cases.
	    selectedValue = '' + propValue;
	    for (i = 0; i < options.length; i++) {
	      if (options[i].value === selectedValue) {
	        options[i].selected = true;
	        return;
	      }
	    }
	    if (options.length) {
	      options[0].selected = true;
	    }
	  }
	}
	
	/**
	 * Implements a <select> host component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * stringable. If `multiple` is true, the prop must be an array of stringables.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */
	var ReactDOMSelect = {
	  getHostProps: function (inst, props) {
	    return _assign({}, DisabledInputUtils.getHostProps(inst, props), {
	      onChange: inst._wrapperState.onChange,
	      value: undefined
	    });
	  },
	
	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      checkSelectPropTypes(inst, props);
	    }
	
	    var value = LinkedValueUtils.getValue(props);
	    inst._wrapperState = {
	      pendingUpdate: false,
	      initialValue: value != null ? value : props.defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst),
	      wasMultiple: Boolean(props.multiple)
	    };
	
	    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	      didWarnValueDefaultValue = true;
	    }
	  },
	
	  getSelectValueContext: function (inst) {
	    // ReactDOMOption looks at this initial value so the initial generated
	    // markup has correct `selected` attributes
	    return inst._wrapperState.initialValue;
	  },
	
	  postUpdateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    // After the initial mount, we control selected-ness manually so don't pass
	    // this value down
	    inst._wrapperState.initialValue = undefined;
	
	    var wasMultiple = inst._wrapperState.wasMultiple;
	    inst._wrapperState.wasMultiple = Boolean(props.multiple);
	
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      inst._wrapperState.pendingUpdate = false;
	      updateOptions(inst, Boolean(props.multiple), value);
	    } else if (wasMultiple !== Boolean(props.multiple)) {
	      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
	      if (props.defaultValue != null) {
	        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
	      } else {
	        // Revert the select back to its default unselected state.
	        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
	      }
	    }
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	
	  if (this._rootNodeID) {
	    this._wrapperState.pendingUpdate = true;
	  }
	  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
	  return returnValue;
	}
	
	module.exports = ReactDOMSelect;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 210 */
/*!*****************************************!*\
  !*** ./~/react/lib/ReactDOMTextarea.js ***!
  \*****************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextarea
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(/*! ./reactProdInvariant */ 99),
	    _assign = __webpack_require__(/*! object-assign */ 96);
	
	var DisabledInputUtils = __webpack_require__(/*! ./DisabledInputUtils */ 205);
	var LinkedValueUtils = __webpack_require__(/*! ./LinkedValueUtils */ 207);
	var ReactDOMComponentTree = __webpack_require__(/*! ./ReactDOMComponentTree */ 127);
	var ReactUpdates = __webpack_require__(/*! ./ReactUpdates */ 147);
	
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 100);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 103);
	
	var didWarnValueLink = false;
	var didWarnValDefaultVal = false;
	
	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMTextarea.updateWrapper(this);
	  }
	}
	
	/**
	 * Implements a <textarea> host component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */
	var ReactDOMTextarea = {
	  getHostProps: function (inst, props) {
	    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;
	
	    // Always set children to the same thing. In IE9, the selection range will
	    // get reset if `textContent` is mutated.  We could add a check in setTextContent
	    // to only set the value if/when the value differs from the node value (which would
	    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.
	    // The value can be a boolean or object so that's why it's forced to be a string.
	    var hostProps = _assign({}, DisabledInputUtils.getHostProps(inst, props), {
	      value: undefined,
	      defaultValue: undefined,
	      children: '' + inst._wrapperState.initialValue,
	      onChange: inst._wrapperState.onChange
	    });
	
	    return hostProps;
	  },
	
	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	        didWarnValDefaultVal = true;
	      }
	    }
	
	    var value = LinkedValueUtils.getValue(props);
	    var initialValue = value;
	
	    // Only bother fetching default value if we're going to use it
	    if (value == null) {
	      var defaultValue = props.defaultValue;
	      // TODO (yungsters): Remove support for children content in <textarea>.
	      var children = props.children;
	      if (children != null) {
	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
	        }
	        !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
	        if (Array.isArray(children)) {
	          !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
	          children = children[0];
	        }
	
	        defaultValue = '' + children;
	      }
	      if (defaultValue == null) {
	        defaultValue = '';
	      }
	      initialValue = defaultValue;
	    }
	
	    inst._wrapperState = {
	      initialValue: '' + initialValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };
	  },
	
	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;
	
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      var newValue = '' + value;
	
	      // To avoid side effects (such as losing text selection), only set value if changed
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	      if (props.defaultValue == null) {
	        node.defaultValue = newValue;
	      }
	    }
	    if (props.defaultValue != null) {
	      node.defaultValue = props.defaultValue;
	    }
	  },
	
	  postMountWrapper: function (inst) {
	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	
	    // Warning: node.value may be the empty string at this point (IE11) if placeholder is set.
	    node.value = node.textContent; // Detach value from defaultValue
	  }
	};
	
	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	  return returnValue;
	}
	
	module.exports = ReactDOMTextarea;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 211 */
/*!****************************************!*\
  !*** ./~/react/lib/ReactMultiChild.js ***!
  \****************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChild
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(/*! ./reactProdInvariant */ 99);
	
	var ReactComponentEnvironment = __webpack_require__(/*! ./ReactComponentEnvironment */ 212);
	var ReactInstanceMap = __webpack_require__(/*! ./ReactInstanceMap */ 213);
	var ReactInstrumentation = __webpack_require__(/*! ./ReactInstrumentation */ 153);
	var ReactMultiChildUpdateTypes = __webpack_require__(/*! ./ReactMultiChildUpdateTypes */ 182);
	
	var ReactCurrentOwner = __webpack_require__(/*! ./ReactCurrentOwner */ 102);
	var ReactReconciler = __webpack_require__(/*! ./ReactReconciler */ 150);
	var ReactChildReconciler = __webpack_require__(/*! ./ReactChildReconciler */ 214);
	
	var emptyFunction = __webpack_require__(/*! fbjs/lib/emptyFunction */ 104);
	var flattenChildren = __webpack_require__(/*! ./flattenChildren */ 221);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 100);
	
	/**
	 * Make an update for markup to be rendered and inserted at a supplied index.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @param {number} toIndex Destination index.
	 * @private
	 */
	function makeInsertMarkup(markup, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}
	
	/**
	 * Make an update for moving an existing element to another index.
	 *
	 * @param {number} fromIndex Source index of the existing element.
	 * @param {number} toIndex Destination index of the element.
	 * @private
	 */
	function makeMove(child, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: ReactReconciler.getHostNode(child),
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}
	
	/**
	 * Make an update for removing an element at an index.
	 *
	 * @param {number} fromIndex Index of the element to remove.
	 * @private
	 */
	function makeRemove(child, node) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.REMOVE_NODE,
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: node,
	    toIndex: null,
	    afterNode: null
	  };
	}
	
	/**
	 * Make an update for setting the markup of a node.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @private
	 */
	function makeSetMarkup(markup) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.SET_MARKUP,
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}
	
	/**
	 * Make an update for setting the text content.
	 *
	 * @param {string} textContent Text content to set.
	 * @private
	 */
	function makeTextContent(textContent) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
	    content: textContent,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}
	
	/**
	 * Push an update, if any, onto the queue. Creates a new queue if none is
	 * passed and always returns the queue. Mutative.
	 */
	function enqueue(queue, update) {
	  if (update) {
	    queue = queue || [];
	    queue.push(update);
	  }
	  return queue;
	}
	
	/**
	 * Processes any enqueued updates.
	 *
	 * @private
	 */
	function processQueue(inst, updateQueue) {
	  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
	}
	
	var setParentForInstrumentation = emptyFunction;
	var setChildrenForInstrumentation = emptyFunction;
	if (process.env.NODE_ENV !== 'production') {
	  var getDebugID = function (inst) {
	    if (!inst._debugID) {
	      // Check for ART-like instances. TODO: This is silly/gross.
	      var internal;
	      if (internal = ReactInstanceMap.get(inst)) {
	        inst = internal;
	      }
	    }
	    return inst._debugID;
	  };
	  setParentForInstrumentation = function (child) {
	    if (child._debugID !== 0) {
	      ReactInstrumentation.debugTool.onSetParent(child._debugID, getDebugID(this));
	    }
	  };
	  setChildrenForInstrumentation = function (children) {
	    var debugID = getDebugID(this);
	    // TODO: React Native empty components are also multichild.
	    // This means they still get into this method but don't have _debugID.
	    if (debugID !== 0) {
	      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
	        return children[key]._debugID;
	      }) : []);
	    }
	  };
	}
	
	/**
	 * ReactMultiChild are capable of reconciling multiple children.
	 *
	 * @class ReactMultiChild
	 * @internal
	 */
	var ReactMultiChild = {
	
	  /**
	   * Provides common functionality for components that must reconcile multiple
	   * children. This is used by `ReactDOMComponent` to mount, update, and
	   * unmount child components.
	   *
	   * @lends {ReactMultiChild.prototype}
	   */
	  Mixin: {
	
	    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, this._debugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	        }
	      }
	      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	    },
	
	    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, removedNodes, transaction, context) {
	      var nextChildren;
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            nextChildren = flattenChildren(nextNestedChildrenElements, this._debugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	          ReactChildReconciler.updateChildren(prevChildren, nextChildren, removedNodes, transaction, context);
	          return nextChildren;
	        }
	      }
	      nextChildren = flattenChildren(nextNestedChildrenElements);
	      ReactChildReconciler.updateChildren(prevChildren, nextChildren, removedNodes, transaction, context);
	      return nextChildren;
	    },
	
	    /**
	     * Generates a "mount image" for each of the supplied children. In the case
	     * of `ReactDOMComponent`, a mount image is a string of markup.
	     *
	     * @param {?object} nestedChildren Nested child maps.
	     * @return {array} An array of mounted representations.
	     * @internal
	     */
	    mountChildren: function (nestedChildren, transaction, context) {
	      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
	      this._renderedChildren = children;
	
	      var mountImages = [];
	      var index = 0;
	      for (var name in children) {
	        if (children.hasOwnProperty(name)) {
	          var child = children[name];
	          if (process.env.NODE_ENV !== 'production') {
	            setParentForInstrumentation.call(this, child);
	          }
	          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context);
	          child._mountIndex = index++;
	          mountImages.push(mountImage);
	        }
	      }
	
	      if (process.env.NODE_ENV !== 'production') {
	        setChildrenForInstrumentation.call(this, children);
	      }
	
	      return mountImages;
	    },
	
	    /**
	     * Replaces any rendered children with a text content string.
	     *
	     * @param {string} nextContent String of content.
	     * @internal
	     */
	    updateTextContent: function (nextContent) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      // Set new text content.
	      var updates = [makeTextContent(nextContent)];
	      processQueue(this, updates);
	    },
	
	    /**
	     * Replaces any rendered children with a markup string.
	     *
	     * @param {string} nextMarkup String of markup.
	     * @internal
	     */
	    updateMarkup: function (nextMarkup) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      var updates = [makeSetMarkup(nextMarkup)];
	      processQueue(this, updates);
	    },
	
	    /**
	     * Updates the rendered children with new children.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     */
	    updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      // Hook used by React ART
	      this._updateChildren(nextNestedChildrenElements, transaction, context);
	    },
	
	    /**
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @final
	     * @protected
	     */
	    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      var prevChildren = this._renderedChildren;
	      var removedNodes = {};
	      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, removedNodes, transaction, context);
	      if (!nextChildren && !prevChildren) {
	        return;
	      }
	      var updates = null;
	      var name;
	      // `nextIndex` will increment for each child in `nextChildren`, but
	      // `lastIndex` will be the last index visited in `prevChildren`.
	      var lastIndex = 0;
	      var nextIndex = 0;
	      var lastPlacedNode = null;
	      for (name in nextChildren) {
	        if (!nextChildren.hasOwnProperty(name)) {
	          continue;
	        }
	        var prevChild = prevChildren && prevChildren[name];
	        var nextChild = nextChildren[name];
	        if (prevChild === nextChild) {
	          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
	          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	          prevChild._mountIndex = nextIndex;
	        } else {
	          if (prevChild) {
	            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
	            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	            // The `removedNodes` loop below will actually remove the child.
	          }
	          // The child must be instantiated before it's mounted.
	          updates = enqueue(updates, this._mountChildAtIndex(nextChild, lastPlacedNode, nextIndex, transaction, context));
	        }
	        nextIndex++;
	        lastPlacedNode = ReactReconciler.getHostNode(nextChild);
	      }
	      // Remove children that are no longer present.
	      for (name in removedNodes) {
	        if (removedNodes.hasOwnProperty(name)) {
	          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
	        }
	      }
	      if (updates) {
	        processQueue(this, updates);
	      }
	      this._renderedChildren = nextChildren;
	
	      if (process.env.NODE_ENV !== 'production') {
	        setChildrenForInstrumentation.call(this, nextChildren);
	      }
	    },
	
	    /**
	     * Unmounts all rendered children. This should be used to clean up children
	     * when this component is unmounted. It does not actually perform any
	     * backend operations.
	     *
	     * @internal
	     */
	    unmountChildren: function (safely) {
	      var renderedChildren = this._renderedChildren;
	      ReactChildReconciler.unmountChildren(renderedChildren, safely);
	      this._renderedChildren = null;
	    },
	
	    /**
	     * Moves a child component to the supplied index.
	     *
	     * @param {ReactComponent} child Component to move.
	     * @param {number} toIndex Destination index of the element.
	     * @param {number} lastIndex Last index visited of the siblings of `child`.
	     * @protected
	     */
	    moveChild: function (child, afterNode, toIndex, lastIndex) {
	      // If the index of `child` is less than `lastIndex`, then it needs to
	      // be moved. Otherwise, we do not need to move it because a child will be
	      // inserted or moved before `child`.
	      if (child._mountIndex < lastIndex) {
	        return makeMove(child, afterNode, toIndex);
	      }
	    },
	
	    /**
	     * Creates a child component.
	     *
	     * @param {ReactComponent} child Component to create.
	     * @param {string} mountImage Markup to insert.
	     * @protected
	     */
	    createChild: function (child, afterNode, mountImage) {
	      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
	    },
	
	    /**
	     * Removes a child component.
	     *
	     * @param {ReactComponent} child Child to remove.
	     * @protected
	     */
	    removeChild: function (child, node) {
	      return makeRemove(child, node);
	    },
	
	    /**
	     * Mounts a child with the supplied name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to mount.
	     * @param {string} name Name of the child.
	     * @param {number} index Index at which to insert the child.
	     * @param {ReactReconcileTransaction} transaction
	     * @private
	     */
	    _mountChildAtIndex: function (child, afterNode, index, transaction, context) {
	      var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context);
	      child._mountIndex = index;
	      return this.createChild(child, afterNode, mountImage);
	    },
	
	    /**
	     * Unmounts a rendered child.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to unmount.
	     * @private
	     */
	    _unmountChild: function (child, node) {
	      var update = this.removeChild(child, node);
	      child._mountIndex = null;
	      return update;
	    }
	
	  }
	
	};
	
	module.exports = ReactMultiChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 212 */
/*!**************************************************!*\
  !*** ./~/react/lib/ReactComponentEnvironment.js ***!
  \**************************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentEnvironment
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(/*! ./reactProdInvariant */ 99);
	
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 100);
	
	var injected = false;
	
	var ReactComponentEnvironment = {
	
	  /**
	   * Optionally injectable environment dependent cleanup hook. (server vs.
	   * browser etc). Example: A browser system caches DOM nodes based on component
	   * ID and must remove that cache entry when this instance is unmounted.
	   */
	  unmountIDFromEnvironment: null,
	
	  /**
	   * Optionally injectable hook for swapping out mount images in the middle of
	   * the tree.
	   */
	  replaceNodeWithMarkup: null,
	
	  /**
	   * Optionally injectable hook for processing a queue of child updates. Will
	   * later move into MultiChildComponents.
	   */
	  processChildrenUpdates: null,
	
	  injection: {
	    injectEnvironment: function (environment) {
	      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
	      ReactComponentEnvironment.unmountIDFromEnvironment = environment.unmountIDFromEnvironment;
	      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
	      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
	      injected = true;
	    }
	  }
	
	};
	
	module.exports = ReactComponentEnvironment;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 213 */
/*!*****************************************!*\
  !*** ./~/react/lib/ReactInstanceMap.js ***!
  \*****************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstanceMap
	 */
	
	'use strict';
	
	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 */
	
	// TODO: Replace this with ES6: var ReactInstanceMap = new Map();
	
	var ReactInstanceMap = {
	
	  /**
	   * This API should be called `delete` but we'd have to make sure to always
	   * transform these to strings for IE support. When this transform is fully
	   * supported we can rename it.
	   */
	  remove: function (key) {
	    key._reactInternalInstance = undefined;
	  },
	
	  get: function (key) {
	    return key._reactInternalInstance;
	  },
	
	  has: function (key) {
	    return key._reactInternalInstance !== undefined;
	  },
	
	  set: function (key, value) {
	    key._reactInternalInstance = value;
	  }
	
	};
	
	module.exports = ReactInstanceMap;

/***/ },
/* 214 */
/*!*********************************************!*\
  !*** ./~/react/lib/ReactChildReconciler.js ***!
  \*********************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildReconciler
	 */
	
	'use strict';
	
	var ReactReconciler = __webpack_require__(/*! ./ReactReconciler */ 150);
	
	var instantiateReactComponent = __webpack_require__(/*! ./instantiateReactComponent */ 215);
	var KeyEscapeUtils = __webpack_require__(/*! ./KeyEscapeUtils */ 108);
	var shouldUpdateReactComponent = __webpack_require__(/*! ./shouldUpdateReactComponent */ 218);
	var traverseAllChildren = __webpack_require__(/*! ./traverseAllChildren */ 106);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 103);
	
	function instantiateChild(childInstances, child, name, selfDebugID) {
	  // We found a component instance.
	  var keyUnique = childInstances[name] === undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    var ReactComponentTreeDevtool = __webpack_require__(/*! ./ReactComponentTreeDevtool */ 120);
	    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeDevtool.getStackAddendumByID(selfDebugID)) : void 0;
	  }
	  if (child != null && keyUnique) {
	    childInstances[name] = instantiateReactComponent(child, true);
	  }
	}
	
	/**
	 * ReactChildReconciler provides helpers for initializing or updating a set of
	 * children. Its output is suitable for passing it onto ReactMultiChild which
	 * does diffed reordering and insertion.
	 */
	var ReactChildReconciler = {
	  /**
	   * Generates a "mount image" for each of the supplied children. In the case
	   * of `ReactDOMComponent`, a mount image is a string of markup.
	   *
	   * @param {?object} nestedChildNodes Nested child maps.
	   * @return {?object} A set of child instances.
	   * @internal
	   */
	  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID // __DEV__ only
	  ) {
	    if (nestedChildNodes == null) {
	      return null;
	    }
	    var childInstances = {};
	
	    if (process.env.NODE_ENV !== 'production') {
	      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
	        return instantiateChild(childInsts, child, name, selfDebugID);
	      }, childInstances);
	    } else {
	      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
	    }
	    return childInstances;
	  },
	
	  /**
	   * Updates the rendered children and returns a new set of children.
	   *
	   * @param {?object} prevChildren Previously initialized set of children.
	   * @param {?object} nextChildren Flat child element maps.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @return {?object} A new set of child instances.
	   * @internal
	   */
	  updateChildren: function (prevChildren, nextChildren, removedNodes, transaction, context) {
	    // We currently don't have a way to track moves here but if we use iterators
	    // instead of for..in we can zip the iterators and check if an item has
	    // moved.
	    // TODO: If nothing has changed, return the prevChildren object so that we
	    // can quickly bailout if nothing has changed.
	    if (!nextChildren && !prevChildren) {
	      return;
	    }
	    var name;
	    var prevChild;
	    for (name in nextChildren) {
	      if (!nextChildren.hasOwnProperty(name)) {
	        continue;
	      }
	      prevChild = prevChildren && prevChildren[name];
	      var prevElement = prevChild && prevChild._currentElement;
	      var nextElement = nextChildren[name];
	      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
	        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
	        nextChildren[name] = prevChild;
	      } else {
	        if (prevChild) {
	          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	          ReactReconciler.unmountComponent(prevChild, false);
	        }
	        // The child must be instantiated before it's mounted.
	        var nextChildInstance = instantiateReactComponent(nextElement, true);
	        nextChildren[name] = nextChildInstance;
	      }
	    }
	    // Unmount children that are no longer present.
	    for (name in prevChildren) {
	      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	        prevChild = prevChildren[name];
	        removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	        ReactReconciler.unmountComponent(prevChild, false);
	      }
	    }
	  },
	
	  /**
	   * Unmounts all rendered children. This should be used to clean up children
	   * when this component is unmounted.
	   *
	   * @param {?object} renderedChildren Previously initialized set of children.
	   * @internal
	   */
	  unmountChildren: function (renderedChildren, safely) {
	    for (var name in renderedChildren) {
	      if (renderedChildren.hasOwnProperty(name)) {
	        var renderedChild = renderedChildren[name];
	        ReactReconciler.unmountComponent(renderedChild, safely);
	      }
	    }
	  }
	
	};
	
	module.exports = ReactChildReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 215 */
/*!**************************************************!*\
  !*** ./~/react/lib/instantiateReactComponent.js ***!
  \**************************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule instantiateReactComponent
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(/*! ./reactProdInvariant */ 99),
	    _assign = __webpack_require__(/*! object-assign */ 96);
	
	var ReactCompositeComponent = __webpack_require__(/*! ./ReactCompositeComponent */ 216);
	var ReactEmptyComponent = __webpack_require__(/*! ./ReactEmptyComponent */ 219);
	var ReactHostComponent = __webpack_require__(/*! ./ReactHostComponent */ 220);
	var ReactInstrumentation = __webpack_require__(/*! ./ReactInstrumentation */ 153);
	
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 100);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 103);
	
	// To avoid a cyclic dependency, we create the final class in this module
	var ReactCompositeComponentWrapper = function (element) {
	  this.construct(element);
	};
	_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, {
	  _instantiateReactComponent: instantiateReactComponent
	});
	
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	function getDisplayName(instance) {
	  var element = instance._currentElement;
	  if (element == null) {
	    return '#empty';
	  } else if (typeof element === 'string' || typeof element === 'number') {
	    return '#text';
	  } else if (typeof element.type === 'string') {
	    return element.type;
	  } else if (instance.getName) {
	    return instance.getName() || 'Unknown';
	  } else {
	    return element.type.displayName || element.type.name || 'Unknown';
	  }
	}
	
	/**
	 * Check if the type reference is a known internal type. I.e. not a user
	 * provided composite type.
	 *
	 * @param {function} type
	 * @return {boolean} Returns true if this is a valid internal type.
	 */
	function isInternalComponentType(type) {
	  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
	}
	
	var nextDebugID = 1;
	
	/**
	 * Given a ReactNode, create an instance that will actually be mounted.
	 *
	 * @param {ReactNode} node
	 * @param {boolean} shouldHaveDebugID
	 * @return {object} A new instance of the element's constructor.
	 * @protected
	 */
	function instantiateReactComponent(node, shouldHaveDebugID) {
	  var instance;
	
	  if (node === null || node === false) {
	    instance = ReactEmptyComponent.create(instantiateReactComponent);
	  } else if (typeof node === 'object') {
	    var element = node;
	    !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : _prodInvariant('130', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : void 0;
	
	    // Special case string values
	    if (typeof element.type === 'string') {
	      instance = ReactHostComponent.createInternalComponent(element);
	    } else if (isInternalComponentType(element.type)) {
	      // This is temporarily available for custom components that are not string
	      // representations. I.e. ART. Once those are updated to use the string
	      // representation, we can drop this code path.
	      instance = new element.type(element);
	
	      // We renamed this. Allow the old name for compat. :(
	      if (!instance.getHostNode) {
	        instance.getHostNode = instance.getNativeNode;
	      }
	    } else {
	      instance = new ReactCompositeComponentWrapper(element);
	    }
	  } else if (typeof node === 'string' || typeof node === 'number') {
	    instance = ReactHostComponent.createInstanceForText(node);
	  } else {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;
	  }
	
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
	  }
	
	  // These two fields are used by the DOM and ART diffing algorithms
	  // respectively. Instead of using expandos on components, we should be
	  // storing the state needed by the diffing algorithms elsewhere.
	  instance._mountIndex = 0;
	  instance._mountImage = null;
	
	  if (process.env.NODE_ENV !== 'production') {
	    if (shouldHaveDebugID) {
	      var debugID = nextDebugID++;
	      instance._debugID = debugID;
	      var displayName = getDisplayName(instance);
	      ReactInstrumentation.debugTool.onSetDisplayName(debugID, displayName);
	      var owner = node && node._owner;
	      if (owner) {
	        ReactInstrumentation.debugTool.onSetOwner(debugID, owner._debugID);
	      }
	    } else {
	      instance._debugID = 0;
	    }
	  }
	
	  // Internal instances should fully constructed at this point, so they should
	  // not get any new fields added to them at this point.
	  if (process.env.NODE_ENV !== 'production') {
	    if (Object.preventExtensions) {
	      Object.preventExtensions(instance);
	    }
	  }
	
	  return instance;
	}
	
	module.exports = instantiateReactComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 216 */
/*!************************************************!*\
  !*** ./~/react/lib/ReactCompositeComponent.js ***!
  \************************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCompositeComponent
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(/*! ./reactProdInvariant */ 99),
	    _assign = __webpack_require__(/*! object-assign */ 96);
	
	var ReactComponentEnvironment = __webpack_require__(/*! ./ReactComponentEnvironment */ 212);
	var ReactCurrentOwner = __webpack_require__(/*! ./ReactCurrentOwner */ 102);
	var ReactElement = __webpack_require__(/*! ./ReactElement */ 101);
	var ReactErrorUtils = __webpack_require__(/*! ./ReactErrorUtils */ 137);
	var ReactInstanceMap = __webpack_require__(/*! ./ReactInstanceMap */ 213);
	var ReactInstrumentation = __webpack_require__(/*! ./ReactInstrumentation */ 153);
	var ReactNodeTypes = __webpack_require__(/*! ./ReactNodeTypes */ 217);
	var ReactPropTypeLocations = __webpack_require__(/*! ./ReactPropTypeLocations */ 113);
	var ReactReconciler = __webpack_require__(/*! ./ReactReconciler */ 150);
	
	var checkReactTypeSpec = __webpack_require__(/*! ./checkReactTypeSpec */ 121);
	
	var emptyObject = __webpack_require__(/*! fbjs/lib/emptyObject */ 111);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 100);
	var shouldUpdateReactComponent = __webpack_require__(/*! ./shouldUpdateReactComponent */ 218);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 103);
	
	function StatelessComponent(Component) {}
	StatelessComponent.prototype.render = function () {
	  var Component = ReactInstanceMap.get(this)._currentElement.type;
	  var element = Component(this.props, this.context, this.updater);
	  warnIfInvalidElement(Component, element);
	  return element;
	};
	
	function warnIfInvalidElement(Component, element) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || ReactElement.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
	  }
	}
	
	function invokeComponentDidMountWithTimer() {
	  var publicInstance = this._instance;
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentDidMount');
	  }
	  publicInstance.componentDidMount();
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentDidMount');
	  }
	}
	
	function invokeComponentDidUpdateWithTimer(prevProps, prevState, prevContext) {
	  var publicInstance = this._instance;
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentDidUpdate');
	  }
	  publicInstance.componentDidUpdate(prevProps, prevState, prevContext);
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentDidUpdate');
	  }
	}
	
	function shouldConstruct(Component) {
	  return Component.prototype && Component.prototype.isReactComponent;
	}
	
	/**
	 * ------------------ The Life-Cycle of a Composite Component ------------------
	 *
	 * - constructor: Initialization of state. The instance is now retained.
	 *   - componentWillMount
	 *   - render
	 *   - [children's constructors]
	 *     - [children's componentWillMount and render]
	 *     - [children's componentDidMount]
	 *     - componentDidMount
	 *
	 *       Update Phases:
	 *       - componentWillReceiveProps (only called if parent updated)
	 *       - shouldComponentUpdate
	 *         - componentWillUpdate
	 *           - render
	 *           - [children's constructors or receive props phases]
	 *         - componentDidUpdate
	 *
	 *     - componentWillUnmount
	 *     - [children's componentWillUnmount]
	 *   - [children destroyed]
	 * - (destroyed): The instance is now blank, released by React and ready for GC.
	 *
	 * -----------------------------------------------------------------------------
	 */
	
	/**
	 * An incrementing ID assigned to each component when it is mounted. This is
	 * used to enforce the order in which `ReactUpdates` updates dirty components.
	 *
	 * @private
	 */
	var nextMountID = 1;
	
	/**
	 * @lends {ReactCompositeComponent.prototype}
	 */
	var ReactCompositeComponentMixin = {
	
	  /**
	   * Base constructor for all composite component.
	   *
	   * @param {ReactElement} element
	   * @final
	   * @internal
	   */
	  construct: function (element) {
	    this._currentElement = element;
	    this._rootNodeID = null;
	    this._instance = null;
	    this._hostParent = null;
	    this._hostContainerInfo = null;
	
	    // See ReactUpdateQueue
	    this._updateBatchNumber = null;
	    this._pendingElement = null;
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	
	    this._renderedNodeType = null;
	    this._renderedComponent = null;
	    this._context = null;
	    this._mountOrder = 0;
	    this._topLevelWrapper = null;
	
	    // See ReactUpdates and ReactUpdateQueue.
	    this._pendingCallbacks = null;
	
	    // ComponentWillUnmount shall only be called once
	    this._calledComponentWillUnmount = false;
	
	    if (process.env.NODE_ENV !== 'production') {
	      this._warnedAboutRefsInRender = false;
	    }
	  },
	
	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} hostParent
	   * @param {?object} hostContainerInfo
	   * @param {?object} context
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    this._context = context;
	    this._mountOrder = nextMountID++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;
	
	    var publicProps = this._currentElement.props;
	    var publicContext = this._processContext(context);
	
	    var Component = this._currentElement.type;
	
	    var updateQueue = transaction.getUpdateQueue();
	
	    // Initialize the public class
	    var inst = this._constructComponent(publicProps, publicContext, updateQueue);
	    var renderedElement;
	
	    // Support functional components
	    if (!shouldConstruct(Component) && (inst == null || inst.render == null)) {
	      renderedElement = inst;
	      warnIfInvalidElement(Component, renderedElement);
	      !(inst === null || inst === false || ReactElement.isValidElement(inst)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
	      inst = new StatelessComponent(Component);
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      // This will throw later in _renderValidatedComponent, but add an early
	      // warning now to help debugging
	      if (inst.render == null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
	      }
	
	      var propsMutated = inst.props !== publicProps;
	      var componentName = Component.displayName || Component.name || 'Component';
	
	      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\'s constructor was passed.', componentName, componentName) : void 0;
	    }
	
	    // These should be set up in the constructor, but as a convenience for
	    // simpler class abstractions, we set them up after the fact.
	    inst.props = publicProps;
	    inst.context = publicContext;
	    inst.refs = emptyObject;
	    inst.updater = updateQueue;
	
	    this._instance = inst;
	
	    // Store a reference from the instance back to the internal representation
	    ReactInstanceMap.set(inst, this);
	
	    if (process.env.NODE_ENV !== 'production') {
	      // Since plain JS classes are defined without any special initialization
	      // logic, we can not catch common errors early. Therefore, we have to
	      // catch them here, at initialization time, instead.
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
	    }
	
	    var initialState = inst.state;
	    if (initialState === undefined) {
	      inst.state = initialState = null;
	    }
	    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;
	
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	
	    var markup;
	    if (inst.unstable_handleError) {
	      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } else {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }
	
	    if (inst.componentDidMount) {
	      if (process.env.NODE_ENV !== 'production') {
	        transaction.getReactMountReady().enqueue(invokeComponentDidMountWithTimer, this);
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
	      }
	    }
	
	    return markup;
	  },
	
	  _constructComponent: function (publicProps, publicContext, updateQueue) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactCurrentOwner.current = this;
	      try {
	        return this._constructComponentWithoutOwner(publicProps, publicContext, updateQueue);
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      return this._constructComponentWithoutOwner(publicProps, publicContext, updateQueue);
	    }
	  },
	
	  _constructComponentWithoutOwner: function (publicProps, publicContext, updateQueue) {
	    var Component = this._currentElement.type;
	    var instanceOrElement;
	    if (shouldConstruct(Component)) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'ctor');
	        }
	      }
	      instanceOrElement = new Component(publicProps, publicContext, updateQueue);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'ctor');
	        }
	      }
	    } else {
	      // This can still be an instance in case of factory components
	      // but we'll count this as time spent rendering as the more common case.
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'render');
	        }
	      }
	      instanceOrElement = Component(publicProps, publicContext, updateQueue);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'render');
	        }
	      }
	    }
	    return instanceOrElement;
	  },
	
	  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var markup;
	    var checkpoint = transaction.checkpoint();
	    try {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } catch (e) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onError();
	        }
	      }
	      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
	      transaction.rollback(checkpoint);
	      this._instance.unstable_handleError(e);
	      if (this._pendingStateQueue) {
	        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
	      }
	      checkpoint = transaction.checkpoint();
	
	      this._renderedComponent.unmountComponent(true);
	      transaction.rollback(checkpoint);
	
	      // Try again - we've informed the component about the error, so they can render an error message this time.
	      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }
	    return markup;
	  },
	
	  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var inst = this._instance;
	    if (inst.componentWillMount) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillMount');
	        }
	      }
	      inst.componentWillMount();
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillMount');
	        }
	      }
	      // When mounting, calls to `setState` by `componentWillMount` will set
	      // `this._pendingStateQueue` without triggering a re-render.
	      if (this._pendingStateQueue) {
	        inst.state = this._processPendingState(inst.props, inst.context);
	      }
	    }
	
	    // If not a stateless component, we now render
	    if (renderedElement === undefined) {
	      renderedElement = this._renderValidatedComponent();
	    }
	
	    var nodeType = ReactNodeTypes.getType(renderedElement);
	    this._renderedNodeType = nodeType;
	    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	    );
	    this._renderedComponent = child;
	    if (process.env.NODE_ENV !== 'production') {
	      if (child._debugID !== 0 && this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onSetParent(child._debugID, this._debugID);
	      }
	    }
	
	    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context));
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, child._debugID !== 0 ? [child._debugID] : []);
	      }
	    }
	
	    return markup;
	  },
	
	  getHostNode: function () {
	    return ReactReconciler.getHostNode(this._renderedComponent);
	  },
	
	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    if (!this._renderedComponent) {
	      return;
	    }
	    var inst = this._instance;
	
	    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
	      inst._calledComponentWillUnmount = true;
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillUnmount');
	        }
	      }
	      if (safely) {
	        var name = this.getName() + '.componentWillUnmount()';
	        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
	      } else {
	        inst.componentWillUnmount();
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillUnmount');
	        }
	      }
	    }
	
	    if (this._renderedComponent) {
	      ReactReconciler.unmountComponent(this._renderedComponent, safely);
	      this._renderedNodeType = null;
	      this._renderedComponent = null;
	      this._instance = null;
	    }
	
	    // Reset pending fields
	    // Even if this component is scheduled for another update in ReactUpdates,
	    // it would still be ignored because these fields are reset.
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	    this._pendingCallbacks = null;
	    this._pendingElement = null;
	
	    // These fields do not really need to be reset since this object is no
	    // longer accessible.
	    this._context = null;
	    this._rootNodeID = null;
	    this._topLevelWrapper = null;
	
	    // Delete the reference from the instance to this internal representation
	    // which allow the internals to be properly cleaned up even if the user
	    // leaks a reference to the public instance.
	    ReactInstanceMap.remove(inst);
	
	    // Some existing components rely on inst.props even after they've been
	    // destroyed (in event handlers).
	    // TODO: inst.props = null;
	    // TODO: inst.state = null;
	    // TODO: inst.context = null;
	  },
	
	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _maskContext: function (context) {
	    var Component = this._currentElement.type;
	    var contextTypes = Component.contextTypes;
	    if (!contextTypes) {
	      return emptyObject;
	    }
	    var maskedContext = {};
	    for (var contextName in contextTypes) {
	      maskedContext[contextName] = context[contextName];
	    }
	    return maskedContext;
	  },
	
	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`, and asserts that they are valid.
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _processContext: function (context) {
	    var maskedContext = this._maskContext(context);
	    if (process.env.NODE_ENV !== 'production') {
	      var Component = this._currentElement.type;
	      if (Component.contextTypes) {
	        this._checkContextTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);
	      }
	    }
	    return maskedContext;
	  },
	
	  /**
	   * @param {object} currentContext
	   * @return {object}
	   * @private
	   */
	  _processChildContext: function (currentContext) {
	    var Component = this._currentElement.type;
	    var inst = this._instance;
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onBeginProcessingChildContext();
	    }
	    var childContext = inst.getChildContext && inst.getChildContext();
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onEndProcessingChildContext();
	    }
	    if (childContext) {
	      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
	      if (process.env.NODE_ENV !== 'production') {
	        this._checkContextTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);
	      }
	      for (var name in childContext) {
	        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
	      }
	      return _assign({}, currentContext, childContext);
	    }
	    return currentContext;
	  },
	
	  /**
	   * Assert that the context types are valid
	   *
	   * @param {object} typeSpecs Map of context field to a ReactPropType
	   * @param {object} values Runtime values that need to be type-checked
	   * @param {string} location e.g. "prop", "context", "child context"
	   * @private
	   */
	  _checkContextTypes: function (typeSpecs, values, location) {
	    checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
	  },
	
	  receiveComponent: function (nextElement, transaction, nextContext) {
	    var prevElement = this._currentElement;
	    var prevContext = this._context;
	
	    this._pendingElement = null;
	
	    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
	  },
	
	  /**
	   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
	   * is set, update the component.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (transaction) {
	    if (this._pendingElement != null) {
	      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
	    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
	      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
	    } else {
	      this._updateBatchNumber = null;
	    }
	  },
	
	  /**
	   * Perform an update to a mounted component. The componentWillReceiveProps and
	   * shouldComponentUpdate methods are called, then (assuming the update isn't
	   * skipped) the remaining update lifecycle methods are called and the DOM
	   * representation is updated.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevParentElement
	   * @param {ReactElement} nextParentElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
	    var inst = this._instance;
	    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;
	
	    var willReceive = false;
	    var nextContext;
	    var nextProps;
	
	    // Determine if the context has changed or not
	    if (this._context === nextUnmaskedContext) {
	      nextContext = inst.context;
	    } else {
	      nextContext = this._processContext(nextUnmaskedContext);
	      willReceive = true;
	    }
	
	    nextProps = nextParentElement.props;
	
	    // Not a simple state update but a props update
	    if (prevParentElement !== nextParentElement) {
	      willReceive = true;
	    }
	
	    // An update here will schedule an update but immediately set
	    // _pendingStateQueue which will ensure that any state updates gets
	    // immediately reconciled instead of waiting for the next batch.
	    if (willReceive && inst.componentWillReceiveProps) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillReceiveProps');
	        }
	      }
	      inst.componentWillReceiveProps(nextProps, nextContext);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillReceiveProps');
	        }
	      }
	    }
	
	    var nextState = this._processPendingState(nextProps, nextContext);
	    var shouldUpdate = true;
	
	    if (!this._pendingForceUpdate && inst.shouldComponentUpdate) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'shouldComponentUpdate');
	        }
	      }
	      shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'shouldComponentUpdate');
	        }
	      }
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
	    }
	
	    this._updateBatchNumber = null;
	    if (shouldUpdate) {
	      this._pendingForceUpdate = false;
	      // Will set `this.props`, `this.state` and `this.context`.
	      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
	    } else {
	      // If it's determined that a component should not update, we still want
	      // to set props and state but we shortcut the rest of the update.
	      this._currentElement = nextParentElement;
	      this._context = nextUnmaskedContext;
	      inst.props = nextProps;
	      inst.state = nextState;
	      inst.context = nextContext;
	    }
	  },
	
	  _processPendingState: function (props, context) {
	    var inst = this._instance;
	    var queue = this._pendingStateQueue;
	    var replace = this._pendingReplaceState;
	    this._pendingReplaceState = false;
	    this._pendingStateQueue = null;
	
	    if (!queue) {
	      return inst.state;
	    }
	
	    if (replace && queue.length === 1) {
	      return queue[0];
	    }
	
	    var nextState = _assign({}, replace ? queue[0] : inst.state);
	    for (var i = replace ? 1 : 0; i < queue.length; i++) {
	      var partial = queue[i];
	      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
	    }
	
	    return nextState;
	  },
	
	  /**
	   * Merges new props and state, notifies delegate methods of update and
	   * performs update.
	   *
	   * @param {ReactElement} nextElement Next element
	   * @param {object} nextProps Next public object to set as properties.
	   * @param {?object} nextState Next object to set as state.
	   * @param {?object} nextContext Next public object to set as context.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?object} unmaskedContext
	   * @private
	   */
	  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
	    var inst = this._instance;
	
	    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
	    var prevProps;
	    var prevState;
	    var prevContext;
	    if (hasComponentDidUpdate) {
	      prevProps = inst.props;
	      prevState = inst.state;
	      prevContext = inst.context;
	    }
	
	    if (inst.componentWillUpdate) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillUpdate');
	        }
	      }
	      inst.componentWillUpdate(nextProps, nextState, nextContext);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillUpdate');
	        }
	      }
	    }
	
	    this._currentElement = nextElement;
	    this._context = unmaskedContext;
	    inst.props = nextProps;
	    inst.state = nextState;
	    inst.context = nextContext;
	
	    this._updateRenderedComponent(transaction, unmaskedContext);
	
	    if (hasComponentDidUpdate) {
	      if (process.env.NODE_ENV !== 'production') {
	        transaction.getReactMountReady().enqueue(invokeComponentDidUpdateWithTimer.bind(this, prevProps, prevState, prevContext), this);
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
	      }
	    }
	  },
	
	  /**
	   * Call the component's `render` method and update the DOM accordingly.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  _updateRenderedComponent: function (transaction, context) {
	    var prevComponentInstance = this._renderedComponent;
	    var prevRenderedElement = prevComponentInstance._currentElement;
	    var nextRenderedElement = this._renderValidatedComponent();
	    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
	      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
	    } else {
	      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
	      ReactReconciler.unmountComponent(prevComponentInstance, false);
	
	      var nodeType = ReactNodeTypes.getType(nextRenderedElement);
	      this._renderedNodeType = nodeType;
	      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	      );
	      this._renderedComponent = child;
	      if (process.env.NODE_ENV !== 'production') {
	        if (child._debugID !== 0 && this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onSetParent(child._debugID, this._debugID);
	        }
	      }
	
	      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context));
	
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onSetChildren(this._debugID, child._debugID !== 0 ? [child._debugID] : []);
	        }
	      }
	
	      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
	    }
	  },
	
	  /**
	   * Overridden in shallow rendering.
	   *
	   * @protected
	   */
	  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {
	    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
	  },
	
	  /**
	   * @protected
	   */
	  _renderValidatedComponentWithoutOwnerOrContext: function () {
	    var inst = this._instance;
	
	    if (process.env.NODE_ENV !== 'production') {
	      if (this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'render');
	      }
	    }
	    var renderedComponent = inst.render();
	    if (process.env.NODE_ENV !== 'production') {
	      if (this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'render');
	      }
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      // We allow auto-mocks to proceed as if they're returning null.
	      if (renderedComponent === undefined && inst.render._isMockFunction) {
	        // This is probably bad practice. Consider warning here and
	        // deprecating this convenience.
	        renderedComponent = null;
	      }
	    }
	
	    return renderedComponent;
	  },
	
	  /**
	   * @private
	   */
	  _renderValidatedComponent: function () {
	    var renderedComponent;
	    ReactCurrentOwner.current = this;
	    try {
	      renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
	    } finally {
	      ReactCurrentOwner.current = null;
	    }
	    !(
	    // TODO: An `isValidNode` function would probably be more appropriate
	    renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;
	
	    return renderedComponent;
	  },
	
	  /**
	   * Lazily allocates the refs object and stores `component` as `ref`.
	   *
	   * @param {string} ref Reference name.
	   * @param {component} component Component to store as `ref`.
	   * @final
	   * @private
	   */
	  attachRef: function (ref, component) {
	    var inst = this.getPublicInstance();
	    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
	    var publicComponentInstance = component.getPublicInstance();
	    if (process.env.NODE_ENV !== 'production') {
	      var componentName = component && component.getName ? component.getName() : 'a component';
	      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
	    }
	    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
	    refs[ref] = publicComponentInstance;
	  },
	
	  /**
	   * Detaches a reference name.
	   *
	   * @param {string} ref Name to dereference.
	   * @final
	   * @private
	   */
	  detachRef: function (ref) {
	    var refs = this.getPublicInstance().refs;
	    delete refs[ref];
	  },
	
	  /**
	   * Get a text description of the component that can be used to identify it
	   * in error messages.
	   * @return {string} The name or null.
	   * @internal
	   */
	  getName: function () {
	    var type = this._currentElement.type;
	    var constructor = this._instance && this._instance.constructor;
	    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
	  },
	
	  /**
	   * Get the publicly accessible representation of this component - i.e. what
	   * is exposed by refs and returned by render. Can be null for stateless
	   * components.
	   *
	   * @return {ReactComponent} the public component instance.
	   * @internal
	   */
	  getPublicInstance: function () {
	    var inst = this._instance;
	    if (inst instanceof StatelessComponent) {
	      return null;
	    }
	    return inst;
	  },
	
	  // Stub
	  _instantiateReactComponent: null
	
	};
	
	var ReactCompositeComponent = {
	
	  Mixin: ReactCompositeComponentMixin
	
	};
	
	module.exports = ReactCompositeComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 217 */
/*!***************************************!*\
  !*** ./~/react/lib/ReactNodeTypes.js ***!
  \***************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNodeTypes
	 * 
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(/*! ./reactProdInvariant */ 99);
	
	var ReactElement = __webpack_require__(/*! ./ReactElement */ 101);
	
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 100);
	
	var ReactNodeTypes = {
	  HOST: 0,
	  COMPOSITE: 1,
	  EMPTY: 2,
	
	  getType: function (node) {
	    if (node === null || node === false) {
	      return ReactNodeTypes.EMPTY;
	    } else if (ReactElement.isValidElement(node)) {
	      if (typeof node.type === 'function') {
	        return ReactNodeTypes.COMPOSITE;
	      } else {
	        return ReactNodeTypes.HOST;
	      }
	    }
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
	  }
	};
	
	module.exports = ReactNodeTypes;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 218 */
/*!***************************************************!*\
  !*** ./~/react/lib/shouldUpdateReactComponent.js ***!
  \***************************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule shouldUpdateReactComponent
	 */
	
	'use strict';
	
	/**
	 * Given a `prevElement` and `nextElement`, determines if the existing
	 * instance should be updated as opposed to being destroyed or replaced by a new
	 * instance. Both arguments are elements. This ensures that this logic can
	 * operate on stateless trees without any backing instance.
	 *
	 * @param {?object} prevElement
	 * @param {?object} nextElement
	 * @return {boolean} True if the existing instance should be updated.
	 * @protected
	 */
	
	function shouldUpdateReactComponent(prevElement, nextElement) {
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	  if (prevEmpty || nextEmpty) {
	    return prevEmpty === nextEmpty;
	  }
	
	  var prevType = typeof prevElement;
	  var nextType = typeof nextElement;
	  if (prevType === 'string' || prevType === 'number') {
	    return nextType === 'string' || nextType === 'number';
	  } else {
	    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
	  }
	}
	
	module.exports = shouldUpdateReactComponent;

/***/ },
/* 219 */
/*!********************************************!*\
  !*** ./~/react/lib/ReactEmptyComponent.js ***!
  \********************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEmptyComponent
	 */
	
	'use strict';
	
	var emptyComponentFactory;
	
	var ReactEmptyComponentInjection = {
	  injectEmptyComponentFactory: function (factory) {
	    emptyComponentFactory = factory;
	  }
	};
	
	var ReactEmptyComponent = {
	  create: function (instantiate) {
	    return emptyComponentFactory(instantiate);
	  }
	};
	
	ReactEmptyComponent.injection = ReactEmptyComponentInjection;
	
	module.exports = ReactEmptyComponent;

/***/ },
/* 220 */
/*!*******************************************!*\
  !*** ./~/react/lib/ReactHostComponent.js ***!
  \*******************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactHostComponent
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(/*! ./reactProdInvariant */ 99),
	    _assign = __webpack_require__(/*! object-assign */ 96);
	
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 100);
	
	var genericComponentClass = null;
	// This registry keeps track of wrapper classes around host tags.
	var tagToComponentClass = {};
	var textComponentClass = null;
	
	var ReactHostComponentInjection = {
	  // This accepts a class that receives the tag string. This is a catch all
	  // that can render any kind of tag.
	  injectGenericComponentClass: function (componentClass) {
	    genericComponentClass = componentClass;
	  },
	  // This accepts a text component class that takes the text string to be
	  // rendered as props.
	  injectTextComponentClass: function (componentClass) {
	    textComponentClass = componentClass;
	  },
	  // This accepts a keyed object with classes as values. Each key represents a
	  // tag. That particular tag will use this class instead of the generic one.
	  injectComponentClasses: function (componentClasses) {
	    _assign(tagToComponentClass, componentClasses);
	  }
	};
	
	/**
	 * Get a host internal component class for a specific tag.
	 *
	 * @param {ReactElement} element The element to create.
	 * @return {function} The internal class constructor function.
	 */
	function createInternalComponent(element) {
	  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
	  return new genericComponentClass(element);
	}
	
	/**
	 * @param {ReactText} text
	 * @return {ReactComponent}
	 */
	function createInstanceForText(text) {
	  return new textComponentClass(text);
	}
	
	/**
	 * @param {ReactComponent} component
	 * @return {boolean}
	 */
	function isTextComponent(component) {
	  return component instanceof textComponentClass;
	}
	
	var ReactHostComponent = {
	  createInternalComponent: createInternalComponent,
	  createInstanceForText: createInstanceForText,
	  isTextComponent: isTextComponent,
	  injection: ReactHostComponentInjection
	};
	
	module.exports = ReactHostComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 221 */
/*!****************************************!*\
  !*** ./~/react/lib/flattenChildren.js ***!
  \****************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule flattenChildren
	 * 
	 */
	
	'use strict';
	
	var KeyEscapeUtils = __webpack_require__(/*! ./KeyEscapeUtils */ 108);
	var traverseAllChildren = __webpack_require__(/*! ./traverseAllChildren */ 106);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 103);
	
	/**
	 * @param {function} traverseContext Context passed through traversal.
	 * @param {?ReactComponent} child React child component.
	 * @param {!string} name String name of key path to child.
	 * @param {number=} selfDebugID Optional debugID of the current internal instance.
	 */
	function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
	  // We found a component instance.
	  if (traverseContext && typeof traverseContext === 'object') {
	    var result = traverseContext;
	    var keyUnique = result[name] === undefined;
	    if (process.env.NODE_ENV !== 'production') {
	      var ReactComponentTreeDevtool = __webpack_require__(/*! ./ReactComponentTreeDevtool */ 120);
	      process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeDevtool.getStackAddendumByID(selfDebugID)) : void 0;
	    }
	    if (keyUnique && child != null) {
	      result[name] = child;
	    }
	  }
	}
	
	/**
	 * Flattens children that are typically specified as `props.children`. Any null
	 * children will not be included in the resulting object.
	 * @return {!object} flattened children keyed by name.
	 */
	function flattenChildren(children, selfDebugID) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};
	
	  if (process.env.NODE_ENV !== 'production') {
	    traverseAllChildren(children, function (traverseContext, child, name) {
	      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
	    }, result);
	  } else {
	    traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  }
	  return result;
	}
	
	module.exports = flattenChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 222 */
/*!********************************************************!*\
  !*** ./~/react/lib/ReactServerRenderingTransaction.js ***!
  \********************************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerRenderingTransaction
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(/*! object-assign */ 96);
	
	var PooledClass = __webpack_require__(/*! ./PooledClass */ 98);
	var Transaction = __webpack_require__(/*! ./Transaction */ 159);
	var ReactInstrumentation = __webpack_require__(/*! ./ReactInstrumentation */ 153);
	var ReactServerUpdateQueue = __webpack_require__(/*! ./ReactServerUpdateQueue */ 223);
	
	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [];
	
	if (process.env.NODE_ENV !== 'production') {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}
	
	var noopCallbackQueue = {
	  enqueue: function () {}
	};
	
	/**
	 * @class ReactServerRenderingTransaction
	 * @param {boolean} renderToStaticMarkup
	 */
	function ReactServerRenderingTransaction(renderToStaticMarkup) {
	  this.reinitializeTransaction();
	  this.renderToStaticMarkup = renderToStaticMarkup;
	  this.useCreateElement = false;
	  this.updateQueue = new ReactServerUpdateQueue(this);
	}
	
	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array} Empty list of operation wrap procedures.
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return noopCallbackQueue;
	  },
	
	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function () {
	    return this.updateQueue;
	  },
	
	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {},
	
	  checkpoint: function () {},
	
	  rollback: function () {}
	};
	
	_assign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);
	
	PooledClass.addPoolingTo(ReactServerRenderingTransaction);
	
	module.exports = ReactServerRenderingTransaction;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 223 */
/*!***********************************************!*\
  !*** ./~/react/lib/ReactServerUpdateQueue.js ***!
  \***********************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerUpdateQueue
	 * 
	 */
	
	'use strict';
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var ReactUpdateQueue = __webpack_require__(/*! ./ReactUpdateQueue */ 224);
	var Transaction = __webpack_require__(/*! ./Transaction */ 159);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 103);
	
	function warnNoop(publicInstance, callerName) {
	  if (process.env.NODE_ENV !== 'production') {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}
	
	/**
	 * This is the update queue used for server rendering.
	 * It delegates to ReactUpdateQueue while server rendering is in progress and
	 * switches to ReactNoopUpdateQueue after the transaction has completed.
	 * @class ReactServerUpdateQueue
	 * @param {Transaction} transaction
	 */
	
	var ReactServerUpdateQueue = function () {
	  /* :: transaction: Transaction; */
	
	  function ReactServerUpdateQueue(transaction) {
	    _classCallCheck(this, ReactServerUpdateQueue);
	
	    this.transaction = transaction;
	  }
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	
	
	  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
	    return false;
	  };
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
	    }
	  };
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueForceUpdate(publicInstance);
	    } else {
	      warnNoop(publicInstance, 'forceUpdate');
	    }
	  };
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} completeState Next state.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
	    } else {
	      warnNoop(publicInstance, 'replaceState');
	    }
	  };
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} partialState Next partial state to be merged with state.
	   * @internal
	   */
	
	
	  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
	    } else {
	      warnNoop(publicInstance, 'setState');
	    }
	  };
	
	  return ReactServerUpdateQueue;
	}();
	
	module.exports = ReactServerUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 224 */
/*!*****************************************!*\
  !*** ./~/react/lib/ReactUpdateQueue.js ***!
  \*****************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdateQueue
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(/*! ./reactProdInvariant */ 99);
	
	var ReactCurrentOwner = __webpack_require__(/*! ./ReactCurrentOwner */ 102);
	var ReactInstanceMap = __webpack_require__(/*! ./ReactInstanceMap */ 213);
	var ReactInstrumentation = __webpack_require__(/*! ./ReactInstrumentation */ 153);
	var ReactUpdates = __webpack_require__(/*! ./ReactUpdates */ 147);
	
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 100);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 103);
	
	function enqueueUpdate(internalInstance) {
	  ReactUpdates.enqueueUpdate(internalInstance);
	}
	
	function formatUnexpectedArgument(arg) {
	  var type = typeof arg;
	  if (type !== 'object') {
	    return type;
	  }
	  var displayName = arg.constructor && arg.constructor.name || type;
	  var keys = Object.keys(arg);
	  if (keys.length > 0 && keys.length < 20) {
	    return displayName + ' (keys: ' + keys.join(', ') + ')';
	  }
	  return displayName;
	}
	
	function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
	  var internalInstance = ReactInstanceMap.get(publicInstance);
	  if (!internalInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      // Only warn when we have a callerName. Otherwise we should be silent.
	      // We're probably calling from enqueueCallback. We don't want to warn
	      // there because we already warned for the corresponding lifecycle method.
	      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor.displayName) : void 0;
	    }
	    return null;
	  }
	
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
	  }
	
	  return internalInstance;
	}
	
	/**
	 * ReactUpdateQueue allows for state updates to be scheduled into a later
	 * reconciliation step.
	 */
	var ReactUpdateQueue = {
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	        owner._warnedAboutRefsInRender = true;
	      }
	    }
	    var internalInstance = ReactInstanceMap.get(publicInstance);
	    if (internalInstance) {
	      // During componentWillMount and render this will still be null but after
	      // that will always render to something. At least for now. So we can use
	      // this hack.
	      return !!internalInstance._renderedComponent;
	    } else {
	      return false;
	    }
	  },
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @param {string} callerName Name of the calling function in the public API.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback, callerName) {
	    ReactUpdateQueue.validateCallback(callback, callerName);
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);
	
	    // Previously we would throw an error if we didn't have an internal
	    // instance. Since we want to make it a no-op instead, we mirror the same
	    // behavior we have in other enqueue* methods.
	    // We also need to ignore callbacks in componentWillMount. See
	    // enqueueUpdates.
	    if (!internalInstance) {
	      return null;
	    }
	
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    // TODO: The callback here is ignored when setState is called from
	    // componentWillMount. Either fix it or disallow doing so completely in
	    // favor of getInitialState. Alternatively, we can disallow
	    // componentWillMount during server-side rendering.
	    enqueueUpdate(internalInstance);
	  },
	
	  enqueueCallbackInternal: function (internalInstance, callback) {
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    internalInstance._pendingForceUpdate = true;
	
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    internalInstance._pendingStateQueue = [completeState];
	    internalInstance._pendingReplaceState = true;
	
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onSetState();
	      process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
	    }
	
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');
	
	    if (!internalInstance) {
	      return;
	    }
	
	    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
	    queue.push(partialState);
	
	    enqueueUpdate(internalInstance);
	  },
	
	  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {
	    internalInstance._pendingElement = nextElement;
	    // TODO: introduce _pendingContext instead of setting it directly.
	    internalInstance._context = nextContext;
	    enqueueUpdate(internalInstance);
	  },
	
	  validateCallback: function (callback, callerName) {
	    !(!callback || typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
	  }
	
	};
	
	module.exports = ReactUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 225 */
/*!********************************************!*\
  !*** ./~/react/~/fbjs/lib/shallowEqual.js ***!
  \********************************************/
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 * 
	 */
	
	/*eslint-disable no-self-compare */
	
	'use strict';
	
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}
	
	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) {
	    return true;
	  }
	
	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }
	
	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);
	
	  if (keysA.length !== keysB.length) {
	    return false;
	  }
	
	  // Test for A's keys different from B.
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }
	
	  return true;
	}
	
	module.exports = shallowEqual;

/***/ },
/* 226 */
/*!*******************************************!*\
  !*** ./~/react/lib/validateDOMNesting.js ***!
  \*******************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule validateDOMNesting
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(/*! object-assign */ 96);
	
	var emptyFunction = __webpack_require__(/*! fbjs/lib/emptyFunction */ 104);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 103);
	
	var validateDOMNesting = emptyFunction;
	
	if (process.env.NODE_ENV !== 'production') {
	  // This validation code was written based on the HTML5 parsing spec:
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  //
	  // Note: this does not catch all invalid nesting, nor does it try to (as it's
	  // not clear what practical benefit doing so provides); instead, we warn only
	  // for cases where the parser will give a parse tree differing from what React
	  // intended. For example, <b><div></div></b> is invalid but we don't warn
	  // because it still parses correctly; we do warn for other cases like nested
	  // <p> tags where the beginning of the second element implicitly closes the
	  // first, causing a confusing mess.
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#special
	  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
	  // TODO: Distinguish by namespace here -- for <title>, including it here
	  // errs on the side of fewer warnings
	  'foreignObject', 'desc', 'title'];
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
	  var buttonScopeTags = inScopeTags.concat(['button']);
	
	  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
	  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];
	
	  var emptyAncestorInfo = {
	    current: null,
	
	    formTag: null,
	    aTagInScope: null,
	    buttonTagInScope: null,
	    nobrTagInScope: null,
	    pTagInButtonScope: null,
	
	    listItemTagAutoclosing: null,
	    dlItemTagAutoclosing: null
	  };
	
	  var updatedAncestorInfo = function (oldInfo, tag, instance) {
	    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
	    var info = { tag: tag, instance: instance };
	
	    if (inScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.aTagInScope = null;
	      ancestorInfo.buttonTagInScope = null;
	      ancestorInfo.nobrTagInScope = null;
	    }
	    if (buttonScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.pTagInButtonScope = null;
	    }
	
	    // See rules for 'li', 'dd', 'dt' start tags in
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
	      ancestorInfo.listItemTagAutoclosing = null;
	      ancestorInfo.dlItemTagAutoclosing = null;
	    }
	
	    ancestorInfo.current = info;
	
	    if (tag === 'form') {
	      ancestorInfo.formTag = info;
	    }
	    if (tag === 'a') {
	      ancestorInfo.aTagInScope = info;
	    }
	    if (tag === 'button') {
	      ancestorInfo.buttonTagInScope = info;
	    }
	    if (tag === 'nobr') {
	      ancestorInfo.nobrTagInScope = info;
	    }
	    if (tag === 'p') {
	      ancestorInfo.pTagInButtonScope = info;
	    }
	    if (tag === 'li') {
	      ancestorInfo.listItemTagAutoclosing = info;
	    }
	    if (tag === 'dd' || tag === 'dt') {
	      ancestorInfo.dlItemTagAutoclosing = info;
	    }
	
	    return ancestorInfo;
	  };
	
	  /**
	   * Returns whether
	   */
	  var isTagValidWithParent = function (tag, parentTag) {
	    // First, let's check if we're in an unusual parsing mode...
	    switch (parentTag) {
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
	      case 'select':
	        return tag === 'option' || tag === 'optgroup' || tag === '#text';
	      case 'optgroup':
	        return tag === 'option' || tag === '#text';
	      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
	      // but
	      case 'option':
	        return tag === '#text';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
	      // No special behavior since these rules fall back to "in body" mode for
	      // all except special table nodes which cause bad parsing behavior anyway.
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
	      case 'tr':
	        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
	      case 'tbody':
	      case 'thead':
	      case 'tfoot':
	        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
	      case 'colgroup':
	        return tag === 'col' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
	      case 'table':
	        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
	      case 'head':
	        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
	
	      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
	      case 'html':
	        return tag === 'head' || tag === 'body';
	      case '#document':
	        return tag === 'html';
	    }
	
	    // Probably in the "in body" parsing mode, so we outlaw only tag combos
	    // where the parsing rules cause implicit opens or closes to be added.
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    switch (tag) {
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';
	
	      case 'rp':
	      case 'rt':
	        return impliedEndTags.indexOf(parentTag) === -1;
	
	      case 'body':
	      case 'caption':
	      case 'col':
	      case 'colgroup':
	      case 'frame':
	      case 'head':
	      case 'html':
	      case 'tbody':
	      case 'td':
	      case 'tfoot':
	      case 'th':
	      case 'thead':
	      case 'tr':
	        // These tags are only valid with a few parents that have special child
	        // parsing rules -- if we're down here, then none of those matched and
	        // so we allow it only if we don't know what the parent is, as all other
	        // cases are invalid.
	        return parentTag == null;
	    }
	
	    return true;
	  };
	
	  /**
	   * Returns whether
	   */
	  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
	    switch (tag) {
	      case 'address':
	      case 'article':
	      case 'aside':
	      case 'blockquote':
	      case 'center':
	      case 'details':
	      case 'dialog':
	      case 'dir':
	      case 'div':
	      case 'dl':
	      case 'fieldset':
	      case 'figcaption':
	      case 'figure':
	      case 'footer':
	      case 'header':
	      case 'hgroup':
	      case 'main':
	      case 'menu':
	      case 'nav':
	      case 'ol':
	      case 'p':
	      case 'section':
	      case 'summary':
	      case 'ul':
	
	      case 'pre':
	      case 'listing':
	
	      case 'table':
	
	      case 'hr':
	
	      case 'xmp':
	
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return ancestorInfo.pTagInButtonScope;
	
	      case 'form':
	        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
	
	      case 'li':
	        return ancestorInfo.listItemTagAutoclosing;
	
	      case 'dd':
	      case 'dt':
	        return ancestorInfo.dlItemTagAutoclosing;
	
	      case 'button':
	        return ancestorInfo.buttonTagInScope;
	
	      case 'a':
	        // Spec says something about storing a list of markers, but it sounds
	        // equivalent to this check.
	        return ancestorInfo.aTagInScope;
	
	      case 'nobr':
	        return ancestorInfo.nobrTagInScope;
	    }
	
	    return null;
	  };
	
	  /**
	   * Given a ReactCompositeComponent instance, return a list of its recursive
	   * owners, starting at the root and ending with the instance itself.
	   */
	  var findOwnerStack = function (instance) {
	    if (!instance) {
	      return [];
	    }
	
	    var stack = [];
	    do {
	      stack.push(instance);
	    } while (instance = instance._currentElement._owner);
	    stack.reverse();
	    return stack;
	  };
	
	  var didWarn = {};
	
	  validateDOMNesting = function (childTag, childInstance, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;
	
	    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
	    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
	    var problematic = invalidParent || invalidAncestor;
	
	    if (problematic) {
	      var ancestorTag = problematic.tag;
	      var ancestorInstance = problematic.instance;
	
	      var childOwner = childInstance && childInstance._currentElement._owner;
	      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;
	
	      var childOwners = findOwnerStack(childOwner);
	      var ancestorOwners = findOwnerStack(ancestorOwner);
	
	      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
	      var i;
	
	      var deepestCommon = -1;
	      for (i = 0; i < minStackLen; i++) {
	        if (childOwners[i] === ancestorOwners[i]) {
	          deepestCommon = i;
	        } else {
	          break;
	        }
	      }
	
	      var UNKNOWN = '(unknown)';
	      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ownerInfo = [].concat(
	      // If the parent and child instances have a common owner ancestor, start
	      // with that -- otherwise we just start with the parent's owners.
	      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
	      // If we're warning about an invalid (non-parent) ancestry, add '...'
	      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');
	
	      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
	      if (didWarn[warnKey]) {
	        return;
	      }
	      didWarn[warnKey] = true;
	
	      var tagDisplayName = childTag;
	      if (childTag !== '#text') {
	        tagDisplayName = '<' + childTag + '>';
	      }
	
	      if (invalidParent) {
	        var info = '';
	        if (ancestorTag === 'table' && childTag === 'tr') {
	          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
	        }
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>. ' + 'See %s.%s', tagDisplayName, ancestorTag, ownerInfo, info) : void 0;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
	      }
	    }
	  };
	
	  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;
	
	  // For testing
	  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;
	    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
	  };
	}
	
	module.exports = validateDOMNesting;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 227 */
/*!***********************************************!*\
  !*** ./~/react/lib/ReactDOMEmptyComponent.js ***!
  \***********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMEmptyComponent
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(/*! object-assign */ 96);
	
	var DOMLazyTree = __webpack_require__(/*! ./DOMLazyTree */ 172);
	var ReactDOMComponentTree = __webpack_require__(/*! ./ReactDOMComponentTree */ 127);
	
	var ReactDOMEmptyComponent = function (instantiate) {
	  // ReactCompositeComponent uses this:
	  this._currentElement = null;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;
	  this._hostContainerInfo = null;
	  this._domID = null;
	};
	_assign(ReactDOMEmptyComponent.prototype, {
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    var domID = hostContainerInfo._idCounter++;
	    this._domID = domID;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;
	
	    var nodeValue = ' react-empty: ' + this._domID + ' ';
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var node = ownerDocument.createComment(nodeValue);
	      ReactDOMComponentTree.precacheNode(this, node);
	      return DOMLazyTree(node);
	    } else {
	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd insert a comment node, but since this is a situation
	        // where React won't take over (static pages), we can simply return
	        // nothing.
	        return '';
	      }
	      return '<!--' + nodeValue + '-->';
	    }
	  },
	  receiveComponent: function () {},
	  getHostNode: function () {
	    return ReactDOMComponentTree.getNodeFromInstance(this);
	  },
	  unmountComponent: function () {
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	});
	
	module.exports = ReactDOMEmptyComponent;

/***/ },
/* 228 */
/*!**********************************************!*\
  !*** ./~/react/lib/ReactDOMTreeTraversal.js ***!
  \**********************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTreeTraversal
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(/*! ./reactProdInvariant */ 99);
	
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 100);
	
	/**
	 * Return the lowest common ancestor of A and B, or null if they are in
	 * different trees.
	 */
	function getLowestCommonAncestor(instA, instB) {
	  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	
	  var depthA = 0;
	  for (var tempA = instA; tempA; tempA = tempA._hostParent) {
	    depthA++;
	  }
	  var depthB = 0;
	  for (var tempB = instB; tempB; tempB = tempB._hostParent) {
	    depthB++;
	  }
	
	  // If A is deeper, crawl up.
	  while (depthA - depthB > 0) {
	    instA = instA._hostParent;
	    depthA--;
	  }
	
	  // If B is deeper, crawl up.
	  while (depthB - depthA > 0) {
	    instB = instB._hostParent;
	    depthB--;
	  }
	
	  // Walk in lockstep until we find a match.
	  var depth = depthA;
	  while (depth--) {
	    if (instA === instB) {
	      return instA;
	    }
	    instA = instA._hostParent;
	    instB = instB._hostParent;
	  }
	  return null;
	}
	
	/**
	 * Return if A is an ancestor of B.
	 */
	function isAncestor(instA, instB) {
	  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
	  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
	
	  while (instB) {
	    if (instB === instA) {
	      return true;
	    }
	    instB = instB._hostParent;
	  }
	  return false;
	}
	
	/**
	 * Return the parent instance of the passed-in instance.
	 */
	function getParentInstance(inst) {
	  !('_hostNode' in inst) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;
	
	  return inst._hostParent;
	}
	
	/**
	 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	 */
	function traverseTwoPhase(inst, fn, arg) {
	  var path = [];
	  while (inst) {
	    path.push(inst);
	    inst = inst._hostParent;
	  }
	  var i;
	  for (i = path.length; i-- > 0;) {
	    fn(path[i], false, arg);
	  }
	  for (i = 0; i < path.length; i++) {
	    fn(path[i], true, arg);
	  }
	}
	
	/**
	 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	 * should would receive a `mouseEnter` or `mouseLeave` event.
	 *
	 * Does not invoke the callback on the nearest common ancestor because nothing
	 * "entered" or "left" that element.
	 */
	function traverseEnterLeave(from, to, fn, argFrom, argTo) {
	  var common = from && to ? getLowestCommonAncestor(from, to) : null;
	  var pathFrom = [];
	  while (from && from !== common) {
	    pathFrom.push(from);
	    from = from._hostParent;
	  }
	  var pathTo = [];
	  while (to && to !== common) {
	    pathTo.push(to);
	    to = to._hostParent;
	  }
	  var i;
	  for (i = 0; i < pathFrom.length; i++) {
	    fn(pathFrom[i], true, argFrom);
	  }
	  for (i = pathTo.length; i-- > 0;) {
	    fn(pathTo[i], false, argTo);
	  }
	}
	
	module.exports = {
	  isAncestor: isAncestor,
	  getLowestCommonAncestor: getLowestCommonAncestor,
	  getParentInstance: getParentInstance,
	  traverseTwoPhase: traverseTwoPhase,
	  traverseEnterLeave: traverseEnterLeave
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 229 */
/*!**********************************************!*\
  !*** ./~/react/lib/ReactDOMTextComponent.js ***!
  \**********************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextComponent
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(/*! ./reactProdInvariant */ 99),
	    _assign = __webpack_require__(/*! object-assign */ 96);
	
	var DOMChildrenOperations = __webpack_require__(/*! ./DOMChildrenOperations */ 171);
	var DOMLazyTree = __webpack_require__(/*! ./DOMLazyTree */ 172);
	var ReactDOMComponentTree = __webpack_require__(/*! ./ReactDOMComponentTree */ 127);
	var ReactInstrumentation = __webpack_require__(/*! ./ReactInstrumentation */ 153);
	
	var escapeTextContentForBrowser = __webpack_require__(/*! ./escapeTextContentForBrowser */ 177);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 100);
	var validateDOMNesting = __webpack_require__(/*! ./validateDOMNesting */ 226);
	
	/**
	 * Text nodes violate a couple assumptions that React makes about components:
	 *
	 *  - When mounting text into the DOM, adjacent text nodes are merged.
	 *  - Text nodes cannot be assigned a React root ID.
	 *
	 * This component is used to wrap strings between comment nodes so that they
	 * can undergo the same reconciliation that is applied to elements.
	 *
	 * TODO: Investigate representing React components in the DOM with text nodes.
	 *
	 * @class ReactDOMTextComponent
	 * @extends ReactComponent
	 * @internal
	 */
	var ReactDOMTextComponent = function (text) {
	  // TODO: This is really a ReactText (ReactNode), not a ReactElement
	  this._currentElement = text;
	  this._stringText = '' + text;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;
	
	  // Properties
	  this._domID = null;
	  this._mountIndex = 0;
	  this._closingComment = null;
	  this._commentNodes = null;
	};
	
	_assign(ReactDOMTextComponent.prototype, {
	
	  /**
	   * Creates the markup for this text node. This node is not intended to have
	   * any features besides containing text content.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup for this text node.
	   * @internal
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onSetText(this._debugID, this._stringText);
	
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo != null) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting('#text', this, parentInfo);
	      }
	    }
	
	    var domID = hostContainerInfo._idCounter++;
	    var openingValue = ' react-text: ' + domID + ' ';
	    var closingValue = ' /react-text ';
	    this._domID = domID;
	    this._hostParent = hostParent;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var openingComment = ownerDocument.createComment(openingValue);
	      var closingComment = ownerDocument.createComment(closingValue);
	      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
	      if (this._stringText) {
	        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
	      }
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
	      ReactDOMComponentTree.precacheNode(this, openingComment);
	      this._closingComment = closingComment;
	      return lazyTree;
	    } else {
	      var escapedText = escapeTextContentForBrowser(this._stringText);
	
	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd wrap this between comment nodes for the reasons stated
	        // above, but since this is a situation where React won't take over
	        // (static pages), we can simply return the text as it is.
	        return escapedText;
	      }
	
	      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
	    }
	  },
	
	  /**
	   * Updates this component by updating the text content.
	   *
	   * @param {ReactText} nextText The next text content
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  receiveComponent: function (nextText, transaction) {
	    if (nextText !== this._currentElement) {
	      this._currentElement = nextText;
	      var nextStringText = '' + nextText;
	      if (nextStringText !== this._stringText) {
	        // TODO: Save this as pending props and use performUpdateIfNecessary
	        // and/or updateComponent to do the actual update for consistency with
	        // other component types?
	        this._stringText = nextStringText;
	        var commentNodes = this.getHostNode();
	        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);
	
	        if (process.env.NODE_ENV !== 'production') {
	          ReactInstrumentation.debugTool.onSetText(this._debugID, nextStringText);
	        }
	      }
	    }
	  },
	
	  getHostNode: function () {
	    var hostNode = this._commentNodes;
	    if (hostNode) {
	      return hostNode;
	    }
	    if (!this._closingComment) {
	      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
	      var node = openingComment.nextSibling;
	      while (true) {
	        !(node != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
	        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
	          this._closingComment = node;
	          break;
	        }
	        node = node.nextSibling;
	      }
	    }
	    hostNode = [this._hostNode, this._closingComment];
	    this._commentNodes = hostNode;
	    return hostNode;
	  },
	
	  unmountComponent: function () {
	    this._closingComment = null;
	    this._commentNodes = null;
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	
	});
	
	module.exports = ReactDOMTextComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 230 */
/*!*****************************************************!*\
  !*** ./~/react/lib/ReactDefaultBatchingStrategy.js ***!
  \*****************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultBatchingStrategy
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(/*! object-assign */ 96);
	
	var ReactUpdates = __webpack_require__(/*! ./ReactUpdates */ 147);
	var Transaction = __webpack_require__(/*! ./Transaction */ 159);
	
	var emptyFunction = __webpack_require__(/*! fbjs/lib/emptyFunction */ 104);
	
	var RESET_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: function () {
	    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
	  }
	};
	
	var FLUSH_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
	};
	
	var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];
	
	function ReactDefaultBatchingStrategyTransaction() {
	  this.reinitializeTransaction();
	}
	
	_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  }
	});
	
	var transaction = new ReactDefaultBatchingStrategyTransaction();
	
	var ReactDefaultBatchingStrategy = {
	  isBatchingUpdates: false,
	
	  /**
	   * Call the provided function in a context within which calls to `setState`
	   * and friends are batched such that components aren't updated unnecessarily.
	   */
	  batchedUpdates: function (callback, a, b, c, d, e) {
	    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;
	
	    ReactDefaultBatchingStrategy.isBatchingUpdates = true;
	
	    // The code is written this way to avoid extra allocations
	    if (alreadyBatchingUpdates) {
	      callback(a, b, c, d, e);
	    } else {
	      transaction.perform(callback, null, a, b, c, d, e);
	    }
	  }
	};
	
	module.exports = ReactDefaultBatchingStrategy;

/***/ },
/* 231 */
/*!*******************************************!*\
  !*** ./~/react/lib/ReactEventListener.js ***!
  \*******************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventListener
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(/*! object-assign */ 96);
	
	var EventListener = __webpack_require__(/*! fbjs/lib/EventListener */ 232);
	var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 140);
	var PooledClass = __webpack_require__(/*! ./PooledClass */ 98);
	var ReactDOMComponentTree = __webpack_require__(/*! ./ReactDOMComponentTree */ 127);
	var ReactUpdates = __webpack_require__(/*! ./ReactUpdates */ 147);
	
	var getEventTarget = __webpack_require__(/*! ./getEventTarget */ 160);
	var getUnboundedScrollPosition = __webpack_require__(/*! fbjs/lib/getUnboundedScrollPosition */ 233);
	
	/**
	 * Find the deepest React component completely containing the root of the
	 * passed-in instance (for use when entire React trees are nested within each
	 * other). If React trees are not nested, returns null.
	 */
	function findParent(inst) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  while (inst._hostParent) {
	    inst = inst._hostParent;
	  }
	  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
	  var container = rootNode.parentNode;
	  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
	}
	
	// Used to store ancestor hierarchy in top level callback
	function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
	  this.topLevelType = topLevelType;
	  this.nativeEvent = nativeEvent;
	  this.ancestors = [];
	}
	_assign(TopLevelCallbackBookKeeping.prototype, {
	  destructor: function () {
	    this.topLevelType = null;
	    this.nativeEvent = null;
	    this.ancestors.length = 0;
	  }
	});
	PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);
	
	function handleTopLevelImpl(bookKeeping) {
	  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
	  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);
	
	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = targetInst;
	  do {
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = ancestor && findParent(ancestor);
	  } while (ancestor);
	
	  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
	    targetInst = bookKeeping.ancestors[i];
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}
	
	function scrollValueMonitor(cb) {
	  var scrollPosition = getUnboundedScrollPosition(window);
	  cb(scrollPosition);
	}
	
	var ReactEventListener = {
	  _enabled: true,
	  _handleTopLevel: null,
	
	  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,
	
	  setHandleTopLevel: function (handleTopLevel) {
	    ReactEventListener._handleTopLevel = handleTopLevel;
	  },
	
	  setEnabled: function (enabled) {
	    ReactEventListener._enabled = !!enabled;
	  },
	
	  isEnabled: function () {
	    return ReactEventListener._enabled;
	  },
	
	  /**
	   * Traps top-level events by using event bubbling.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },
	
	  /**
	   * Traps a top-level event by using event capturing.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },
	
	  monitorScrollValue: function (refresh) {
	    var callback = scrollValueMonitor.bind(null, refresh);
	    EventListener.listen(window, 'scroll', callback);
	  },
	
	  dispatchEvent: function (topLevelType, nativeEvent) {
	    if (!ReactEventListener._enabled) {
	      return;
	    }
	
	    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
	    try {
	      // Event queue being processed in the same cycle allows
	      // `preventDefault`.
	      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
	    } finally {
	      TopLevelCallbackBookKeeping.release(bookKeeping);
	    }
	  }
	};
	
	module.exports = ReactEventListener;

/***/ },
/* 232 */
/*!*********************************************!*\
  !*** ./~/react/~/fbjs/lib/EventListener.js ***!
  \*********************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @typechecks
	 */
	
	var emptyFunction = __webpack_require__(/*! ./emptyFunction */ 104);
	
	/**
	 * Upstream version of event listener. Does not take into account specific
	 * nature of platform.
	 */
	var EventListener = {
	  /**
	   * Listen to DOM events during the bubble phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  listen: function listen(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, false);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, false);
	        }
	      };
	    } else if (target.attachEvent) {
	      target.attachEvent('on' + eventType, callback);
	      return {
	        remove: function remove() {
	          target.detachEvent('on' + eventType, callback);
	        }
	      };
	    }
	  },
	
	  /**
	   * Listen to DOM events during the capture phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  capture: function capture(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, true);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, true);
	        }
	      };
	    } else {
	      if (process.env.NODE_ENV !== 'production') {
	        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
	      }
	      return {
	        remove: emptyFunction
	      };
	    }
	  },
	
	  registerDefault: function registerDefault() {}
	};
	
	module.exports = EventListener;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 233 */
/*!**********************************************************!*\
  !*** ./~/react/~/fbjs/lib/getUnboundedScrollPosition.js ***!
  \**********************************************************/
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	/**
	 * Gets the scroll position of the supplied element or window.
	 *
	 * The return values are unbounded, unlike `getScrollPosition`. This means they
	 * may be negative or exceed the element boundaries (which is possible using
	 * inertial scrolling).
	 *
	 * @param {DOMWindow|DOMElement} scrollable
	 * @return {object} Map with `x` and `y` keys.
	 */
	
	function getUnboundedScrollPosition(scrollable) {
	  if (scrollable === window) {
	    return {
	      x: window.pageXOffset || document.documentElement.scrollLeft,
	      y: window.pageYOffset || document.documentElement.scrollTop
	    };
	  }
	  return {
	    x: scrollable.scrollLeft,
	    y: scrollable.scrollTop
	  };
	}
	
	module.exports = getUnboundedScrollPosition;

/***/ },
/* 234 */
/*!***************************************!*\
  !*** ./~/react/lib/ReactInjection.js ***!
  \***************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInjection
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(/*! ./DOMProperty */ 128);
	var EventPluginHub = __webpack_require__(/*! ./EventPluginHub */ 134);
	var EventPluginUtils = __webpack_require__(/*! ./EventPluginUtils */ 136);
	var ReactComponentEnvironment = __webpack_require__(/*! ./ReactComponentEnvironment */ 212);
	var ReactClass = __webpack_require__(/*! ./ReactClass */ 112);
	var ReactEmptyComponent = __webpack_require__(/*! ./ReactEmptyComponent */ 219);
	var ReactBrowserEventEmitter = __webpack_require__(/*! ./ReactBrowserEventEmitter */ 201);
	var ReactHostComponent = __webpack_require__(/*! ./ReactHostComponent */ 220);
	var ReactUpdates = __webpack_require__(/*! ./ReactUpdates */ 147);
	
	var ReactInjection = {
	  Component: ReactComponentEnvironment.injection,
	  Class: ReactClass.injection,
	  DOMProperty: DOMProperty.injection,
	  EmptyComponent: ReactEmptyComponent.injection,
	  EventPluginHub: EventPluginHub.injection,
	  EventPluginUtils: EventPluginUtils.injection,
	  EventEmitter: ReactBrowserEventEmitter.injection,
	  HostComponent: ReactHostComponent.injection,
	  Updates: ReactUpdates.injection
	};
	
	module.exports = ReactInjection;

/***/ },
/* 235 */
/*!**************************************************!*\
  !*** ./~/react/lib/ReactReconcileTransaction.js ***!
  \**************************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconcileTransaction
	 */
	
	'use strict';
	
	var _assign = __webpack_require__(/*! object-assign */ 96);
	
	var CallbackQueue = __webpack_require__(/*! ./CallbackQueue */ 148);
	var PooledClass = __webpack_require__(/*! ./PooledClass */ 98);
	var ReactBrowserEventEmitter = __webpack_require__(/*! ./ReactBrowserEventEmitter */ 201);
	var ReactInputSelection = __webpack_require__(/*! ./ReactInputSelection */ 236);
	var ReactInstrumentation = __webpack_require__(/*! ./ReactInstrumentation */ 153);
	var Transaction = __webpack_require__(/*! ./Transaction */ 159);
	var ReactUpdateQueue = __webpack_require__(/*! ./ReactUpdateQueue */ 224);
	
	/**
	 * Ensures that, when possible, the selection range (currently selected text
	 * input) is not disturbed by performing the transaction.
	 */
	var SELECTION_RESTORATION = {
	  /**
	   * @return {Selection} Selection information.
	   */
	  initialize: ReactInputSelection.getSelectionInformation,
	  /**
	   * @param {Selection} sel Selection information returned from `initialize`.
	   */
	  close: ReactInputSelection.restoreSelection
	};
	
	/**
	 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
	 * high level DOM manipulations (like temporarily removing a text input from the
	 * DOM).
	 */
	var EVENT_SUPPRESSION = {
	  /**
	   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
	   * the reconciliation.
	   */
	  initialize: function () {
	    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
	    ReactBrowserEventEmitter.setEnabled(false);
	    return currentlyEnabled;
	  },
	
	  /**
	   * @param {boolean} previouslyEnabled Enabled status of
	   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
	   *   restores the previous value.
	   */
	  close: function (previouslyEnabled) {
	    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
	  }
	};
	
	/**
	 * Provides a queue for collecting `componentDidMount` and
	 * `componentDidUpdate` callbacks during the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function () {
	    this.reactMountReady.reset();
	  },
	
	  /**
	   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
	   */
	  close: function () {
	    this.reactMountReady.notifyAll();
	  }
	};
	
	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];
	
	if (process.env.NODE_ENV !== 'production') {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}
	
	/**
	 * Currently:
	 * - The order that these are listed in the transaction is critical:
	 * - Suppresses events.
	 * - Restores selection range.
	 *
	 * Future:
	 * - Restore document/overflow scroll positions that were unintentionally
	 *   modified via DOM insertions above the top viewport boundary.
	 * - Implement/integrate with customized constraint based layout system and keep
	 *   track of which dimensions must be remeasured.
	 *
	 * @class ReactReconcileTransaction
	 */
	function ReactReconcileTransaction(useCreateElement) {
	  this.reinitializeTransaction();
	  // Only server-side rendering really needs this option (see
	  // `ReactServerRendering`), but server-side uses
	  // `ReactServerRenderingTransaction` instead. This option is here so that it's
	  // accessible and defaults to false when `ReactDOMComponent` and
	  // `ReactDOMTextComponent` checks it in `mountComponent`.`
	  this.renderToStaticMarkup = false;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = useCreateElement;
	}
	
	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array<object>} List of operation wrap procedures.
	   *   TODO: convert to array<TransactionWrapper>
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return this.reactMountReady;
	  },
	
	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function () {
	    return ReactUpdateQueue;
	  },
	
	  /**
	   * Save current transaction state -- if the return value from this method is
	   * passed to `rollback`, the transaction will be reset to that state.
	   */
	  checkpoint: function () {
	    // reactMountReady is the our only stateful wrapper
	    return this.reactMountReady.checkpoint();
	  },
	
	  rollback: function (checkpoint) {
	    this.reactMountReady.rollback(checkpoint);
	  },
	
	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};
	
	_assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);
	
	PooledClass.addPoolingTo(ReactReconcileTransaction);
	
	module.exports = ReactReconcileTransaction;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 236 */
/*!********************************************!*\
  !*** ./~/react/lib/ReactInputSelection.js ***!
  \********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInputSelection
	 */
	
	'use strict';
	
	var ReactDOMSelection = __webpack_require__(/*! ./ReactDOMSelection */ 237);
	
	var containsNode = __webpack_require__(/*! fbjs/lib/containsNode */ 239);
	var focusNode = __webpack_require__(/*! fbjs/lib/focusNode */ 186);
	var getActiveElement = __webpack_require__(/*! fbjs/lib/getActiveElement */ 242);
	
	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}
	
	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */
	var ReactInputSelection = {
	
	  hasSelectionCapabilities: function (elem) {
	    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
	  },
	
	  getSelectionInformation: function () {
	    var focusedElem = getActiveElement();
	    return {
	      focusedElem: focusedElem,
	      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
	    };
	  },
	
	  /**
	   * @restoreSelection: If any selection information was potentially lost,
	   * restore it. This is useful when performing operations that could remove dom
	   * nodes and place them back in, resulting in focus being lost.
	   */
	  restoreSelection: function (priorSelectionInformation) {
	    var curFocusedElem = getActiveElement();
	    var priorFocusedElem = priorSelectionInformation.focusedElem;
	    var priorSelectionRange = priorSelectionInformation.selectionRange;
	    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
	      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
	        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
	      }
	      focusNode(priorFocusedElem);
	    }
	  },
	
	  /**
	   * @getSelection: Gets the selection bounds of a focused textarea, input or
	   * contentEditable node.
	   * -@input: Look up selection bounds of this input
	   * -@return {start: selectionStart, end: selectionEnd}
	   */
	  getSelection: function (input) {
	    var selection;
	
	    if ('selectionStart' in input) {
	      // Modern browser with input or textarea.
	      selection = {
	        start: input.selectionStart,
	        end: input.selectionEnd
	      };
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      // IE8 input.
	      var range = document.selection.createRange();
	      // There can only be one selection per document in IE, so it must
	      // be in our element.
	      if (range.parentElement() === input) {
	        selection = {
	          start: -range.moveStart('character', -input.value.length),
	          end: -range.moveEnd('character', -input.value.length)
	        };
	      }
	    } else {
	      // Content editable or old IE textarea.
	      selection = ReactDOMSelection.getOffsets(input);
	    }
	
	    return selection || { start: 0, end: 0 };
	  },
	
	  /**
	   * @setSelection: Sets the selection bounds of a textarea or input and focuses
	   * the input.
	   * -@input     Set selection bounds of this input or textarea
	   * -@offsets   Object of same form that is returned from get*
	   */
	  setSelection: function (input, offsets) {
	    var start = offsets.start;
	    var end = offsets.end;
	    if (end === undefined) {
	      end = start;
	    }
	
	    if ('selectionStart' in input) {
	      input.selectionStart = start;
	      input.selectionEnd = Math.min(end, input.value.length);
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      var range = input.createTextRange();
	      range.collapse(true);
	      range.moveStart('character', start);
	      range.moveEnd('character', end - start);
	      range.select();
	    } else {
	      ReactDOMSelection.setOffsets(input, offsets);
	    }
	  }
	};
	
	module.exports = ReactInputSelection;

/***/ },
/* 237 */
/*!******************************************!*\
  !*** ./~/react/lib/ReactDOMSelection.js ***!
  \******************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelection
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 140);
	
	var getNodeForCharacterOffset = __webpack_require__(/*! ./getNodeForCharacterOffset */ 238);
	var getTextContentAccessor = __webpack_require__(/*! ./getTextContentAccessor */ 142);
	
	/**
	 * While `isCollapsed` is available on the Selection object and `collapsed`
	 * is available on the Range object, IE11 sometimes gets them wrong.
	 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
	 */
	function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
	  return anchorNode === focusNode && anchorOffset === focusOffset;
	}
	
	/**
	 * Get the appropriate anchor and focus node/offset pairs for IE.
	 *
	 * The catch here is that IE's selection API doesn't provide information
	 * about whether the selection is forward or backward, so we have to
	 * behave as though it's always forward.
	 *
	 * IE text differs from modern selection in that it behaves as though
	 * block elements end with a new line. This means character offsets will
	 * differ between the two APIs.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getIEOffsets(node) {
	  var selection = document.selection;
	  var selectedRange = selection.createRange();
	  var selectedLength = selectedRange.text.length;
	
	  // Duplicate selection so we can move range without breaking user selection.
	  var fromStart = selectedRange.duplicate();
	  fromStart.moveToElementText(node);
	  fromStart.setEndPoint('EndToStart', selectedRange);
	
	  var startOffset = fromStart.text.length;
	  var endOffset = startOffset + selectedLength;
	
	  return {
	    start: startOffset,
	    end: endOffset
	  };
	}
	
	/**
	 * @param {DOMElement} node
	 * @return {?object}
	 */
	function getModernOffsets(node) {
	  var selection = window.getSelection && window.getSelection();
	
	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }
	
	  var anchorNode = selection.anchorNode;
	  var anchorOffset = selection.anchorOffset;
	  var focusNode = selection.focusNode;
	  var focusOffset = selection.focusOffset;
	
	  var currentRange = selection.getRangeAt(0);
	
	  // In Firefox, range.startContainer and range.endContainer can be "anonymous
	  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
	  // divs do not seem to expose properties, triggering a "Permission denied
	  // error" if any of its properties are accessed. The only seemingly possible
	  // way to avoid erroring is to access a property that typically works for
	  // non-anonymous divs and catch any error that may otherwise arise. See
	  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
	  try {
	    /* eslint-disable no-unused-expressions */
	    currentRange.startContainer.nodeType;
	    currentRange.endContainer.nodeType;
	    /* eslint-enable no-unused-expressions */
	  } catch (e) {
	    return null;
	  }
	
	  // If the node and offset values are the same, the selection is collapsed.
	  // `Selection.isCollapsed` is available natively, but IE sometimes gets
	  // this value wrong.
	  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);
	
	  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;
	
	  var tempRange = currentRange.cloneRange();
	  tempRange.selectNodeContents(node);
	  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);
	
	  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);
	
	  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
	  var end = start + rangeLength;
	
	  // Detect whether the selection is backward.
	  var detectionRange = document.createRange();
	  detectionRange.setStart(anchorNode, anchorOffset);
	  detectionRange.setEnd(focusNode, focusOffset);
	  var isBackward = detectionRange.collapsed;
	
	  return {
	    start: isBackward ? end : start,
	    end: isBackward ? start : end
	  };
	}
	
	/**
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setIEOffsets(node, offsets) {
	  var range = document.selection.createRange().duplicate();
	  var start, end;
	
	  if (offsets.end === undefined) {
	    start = offsets.start;
	    end = start;
	  } else if (offsets.start > offsets.end) {
	    start = offsets.end;
	    end = offsets.start;
	  } else {
	    start = offsets.start;
	    end = offsets.end;
	  }
	
	  range.moveToElementText(node);
	  range.moveStart('character', start);
	  range.setEndPoint('EndToStart', range);
	  range.moveEnd('character', end - start);
	  range.select();
	}
	
	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programmatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setModernOffsets(node, offsets) {
	  if (!window.getSelection) {
	    return;
	  }
	
	  var selection = window.getSelection();
	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);
	
	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }
	
	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);
	
	  if (startMarker && endMarker) {
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();
	
	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}
	
	var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);
	
	var ReactDOMSelection = {
	  /**
	   * @param {DOMElement} node
	   */
	  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,
	
	  /**
	   * @param {DOMElement|DOMTextNode} node
	   * @param {object} offsets
	   */
	  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
	};
	
	module.exports = ReactDOMSelection;

/***/ },
/* 238 */
/*!**************************************************!*\
  !*** ./~/react/lib/getNodeForCharacterOffset.js ***!
  \**************************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getNodeForCharacterOffset
	 */
	
	'use strict';
	
	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */
	
	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}
	
	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}
	
	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;
	
	  while (node) {
	    if (node.nodeType === 3) {
	      nodeEnd = nodeStart + node.textContent.length;
	
	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }
	
	      nodeStart = nodeEnd;
	    }
	
	    node = getLeafNode(getSiblingNode(node));
	  }
	}
	
	module.exports = getNodeForCharacterOffset;

/***/ },
/* 239 */
/*!********************************************!*\
  !*** ./~/react/~/fbjs/lib/containsNode.js ***!
  \********************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	var isTextNode = __webpack_require__(/*! ./isTextNode */ 240);
	
	/*eslint-disable no-bitwise */
	
	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 */
	function containsNode(outerNode, innerNode) {
	  if (!outerNode || !innerNode) {
	    return false;
	  } else if (outerNode === innerNode) {
	    return true;
	  } else if (isTextNode(outerNode)) {
	    return false;
	  } else if (isTextNode(innerNode)) {
	    return containsNode(outerNode, innerNode.parentNode);
	  } else if ('contains' in outerNode) {
	    return outerNode.contains(innerNode);
	  } else if (outerNode.compareDocumentPosition) {
	    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	  } else {
	    return false;
	  }
	}
	
	module.exports = containsNode;

/***/ },
/* 240 */
/*!******************************************!*\
  !*** ./~/react/~/fbjs/lib/isTextNode.js ***!
  \******************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var isNode = __webpack_require__(/*! ./isNode */ 241);
	
	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}
	
	module.exports = isTextNode;

/***/ },
/* 241 */
/*!**************************************!*\
  !*** ./~/react/~/fbjs/lib/isNode.js ***!
  \**************************************/
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */
	function isNode(object) {
	  return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
	}
	
	module.exports = isNode;

/***/ },
/* 242 */
/*!************************************************!*\
  !*** ./~/react/~/fbjs/lib/getActiveElement.js ***!
  \************************************************/
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	/* eslint-disable fb-www/typeof-undefined */
	
	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document or document body is not
	 * yet defined.
	 */
	function getActiveElement() /*?DOMElement*/{
	  if (typeof document === 'undefined') {
	    return null;
	  }
	  try {
	    return document.activeElement || document.body;
	  } catch (e) {
	    return document.body;
	  }
	}
	
	module.exports = getActiveElement;

/***/ },
/* 243 */
/*!*********************************************!*\
  !*** ./~/react/lib/SVGDOMPropertyConfig.js ***!
  \*********************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SVGDOMPropertyConfig
	 */
	
	'use strict';
	
	var NS = {
	  xlink: 'http://www.w3.org/1999/xlink',
	  xml: 'http://www.w3.org/XML/1998/namespace'
	};
	
	// We use attributes for everything SVG so let's avoid some duplication and run
	// code instead.
	// The following are all specified in the HTML config already so we exclude here.
	// - class (as className)
	// - color
	// - height
	// - id
	// - lang
	// - max
	// - media
	// - method
	// - min
	// - name
	// - style
	// - target
	// - type
	// - width
	var ATTRS = {
	  accentHeight: 'accent-height',
	  accumulate: 0,
	  additive: 0,
	  alignmentBaseline: 'alignment-baseline',
	  allowReorder: 'allowReorder',
	  alphabetic: 0,
	  amplitude: 0,
	  arabicForm: 'arabic-form',
	  ascent: 0,
	  attributeName: 'attributeName',
	  attributeType: 'attributeType',
	  autoReverse: 'autoReverse',
	  azimuth: 0,
	  baseFrequency: 'baseFrequency',
	  baseProfile: 'baseProfile',
	  baselineShift: 'baseline-shift',
	  bbox: 0,
	  begin: 0,
	  bias: 0,
	  by: 0,
	  calcMode: 'calcMode',
	  capHeight: 'cap-height',
	  clip: 0,
	  clipPath: 'clip-path',
	  clipRule: 'clip-rule',
	  clipPathUnits: 'clipPathUnits',
	  colorInterpolation: 'color-interpolation',
	  colorInterpolationFilters: 'color-interpolation-filters',
	  colorProfile: 'color-profile',
	  colorRendering: 'color-rendering',
	  contentScriptType: 'contentScriptType',
	  contentStyleType: 'contentStyleType',
	  cursor: 0,
	  cx: 0,
	  cy: 0,
	  d: 0,
	  decelerate: 0,
	  descent: 0,
	  diffuseConstant: 'diffuseConstant',
	  direction: 0,
	  display: 0,
	  divisor: 0,
	  dominantBaseline: 'dominant-baseline',
	  dur: 0,
	  dx: 0,
	  dy: 0,
	  edgeMode: 'edgeMode',
	  elevation: 0,
	  enableBackground: 'enable-background',
	  end: 0,
	  exponent: 0,
	  externalResourcesRequired: 'externalResourcesRequired',
	  fill: 0,
	  fillOpacity: 'fill-opacity',
	  fillRule: 'fill-rule',
	  filter: 0,
	  filterRes: 'filterRes',
	  filterUnits: 'filterUnits',
	  floodColor: 'flood-color',
	  floodOpacity: 'flood-opacity',
	  focusable: 0,
	  fontFamily: 'font-family',
	  fontSize: 'font-size',
	  fontSizeAdjust: 'font-size-adjust',
	  fontStretch: 'font-stretch',
	  fontStyle: 'font-style',
	  fontVariant: 'font-variant',
	  fontWeight: 'font-weight',
	  format: 0,
	  from: 0,
	  fx: 0,
	  fy: 0,
	  g1: 0,
	  g2: 0,
	  glyphName: 'glyph-name',
	  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
	  glyphOrientationVertical: 'glyph-orientation-vertical',
	  glyphRef: 'glyphRef',
	  gradientTransform: 'gradientTransform',
	  gradientUnits: 'gradientUnits',
	  hanging: 0,
	  horizAdvX: 'horiz-adv-x',
	  horizOriginX: 'horiz-origin-x',
	  ideographic: 0,
	  imageRendering: 'image-rendering',
	  'in': 0,
	  in2: 0,
	  intercept: 0,
	  k: 0,
	  k1: 0,
	  k2: 0,
	  k3: 0,
	  k4: 0,
	  kernelMatrix: 'kernelMatrix',
	  kernelUnitLength: 'kernelUnitLength',
	  kerning: 0,
	  keyPoints: 'keyPoints',
	  keySplines: 'keySplines',
	  keyTimes: 'keyTimes',
	  lengthAdjust: 'lengthAdjust',
	  letterSpacing: 'letter-spacing',
	  lightingColor: 'lighting-color',
	  limitingConeAngle: 'limitingConeAngle',
	  local: 0,
	  markerEnd: 'marker-end',
	  markerMid: 'marker-mid',
	  markerStart: 'marker-start',
	  markerHeight: 'markerHeight',
	  markerUnits: 'markerUnits',
	  markerWidth: 'markerWidth',
	  mask: 0,
	  maskContentUnits: 'maskContentUnits',
	  maskUnits: 'maskUnits',
	  mathematical: 0,
	  mode: 0,
	  numOctaves: 'numOctaves',
	  offset: 0,
	  opacity: 0,
	  operator: 0,
	  order: 0,
	  orient: 0,
	  orientation: 0,
	  origin: 0,
	  overflow: 0,
	  overlinePosition: 'overline-position',
	  overlineThickness: 'overline-thickness',
	  paintOrder: 'paint-order',
	  panose1: 'panose-1',
	  pathLength: 'pathLength',
	  patternContentUnits: 'patternContentUnits',
	  patternTransform: 'patternTransform',
	  patternUnits: 'patternUnits',
	  pointerEvents: 'pointer-events',
	  points: 0,
	  pointsAtX: 'pointsAtX',
	  pointsAtY: 'pointsAtY',
	  pointsAtZ: 'pointsAtZ',
	  preserveAlpha: 'preserveAlpha',
	  preserveAspectRatio: 'preserveAspectRatio',
	  primitiveUnits: 'primitiveUnits',
	  r: 0,
	  radius: 0,
	  refX: 'refX',
	  refY: 'refY',
	  renderingIntent: 'rendering-intent',
	  repeatCount: 'repeatCount',
	  repeatDur: 'repeatDur',
	  requiredExtensions: 'requiredExtensions',
	  requiredFeatures: 'requiredFeatures',
	  restart: 0,
	  result: 0,
	  rotate: 0,
	  rx: 0,
	  ry: 0,
	  scale: 0,
	  seed: 0,
	  shapeRendering: 'shape-rendering',
	  slope: 0,
	  spacing: 0,
	  specularConstant: 'specularConstant',
	  specularExponent: 'specularExponent',
	  speed: 0,
	  spreadMethod: 'spreadMethod',
	  startOffset: 'startOffset',
	  stdDeviation: 'stdDeviation',
	  stemh: 0,
	  stemv: 0,
	  stitchTiles: 'stitchTiles',
	  stopColor: 'stop-color',
	  stopOpacity: 'stop-opacity',
	  strikethroughPosition: 'strikethrough-position',
	  strikethroughThickness: 'strikethrough-thickness',
	  string: 0,
	  stroke: 0,
	  strokeDasharray: 'stroke-dasharray',
	  strokeDashoffset: 'stroke-dashoffset',
	  strokeLinecap: 'stroke-linecap',
	  strokeLinejoin: 'stroke-linejoin',
	  strokeMiterlimit: 'stroke-miterlimit',
	  strokeOpacity: 'stroke-opacity',
	  strokeWidth: 'stroke-width',
	  surfaceScale: 'surfaceScale',
	  systemLanguage: 'systemLanguage',
	  tableValues: 'tableValues',
	  targetX: 'targetX',
	  targetY: 'targetY',
	  textAnchor: 'text-anchor',
	  textDecoration: 'text-decoration',
	  textRendering: 'text-rendering',
	  textLength: 'textLength',
	  to: 0,
	  transform: 0,
	  u1: 0,
	  u2: 0,
	  underlinePosition: 'underline-position',
	  underlineThickness: 'underline-thickness',
	  unicode: 0,
	  unicodeBidi: 'unicode-bidi',
	  unicodeRange: 'unicode-range',
	  unitsPerEm: 'units-per-em',
	  vAlphabetic: 'v-alphabetic',
	  vHanging: 'v-hanging',
	  vIdeographic: 'v-ideographic',
	  vMathematical: 'v-mathematical',
	  values: 0,
	  vectorEffect: 'vector-effect',
	  version: 0,
	  vertAdvY: 'vert-adv-y',
	  vertOriginX: 'vert-origin-x',
	  vertOriginY: 'vert-origin-y',
	  viewBox: 'viewBox',
	  viewTarget: 'viewTarget',
	  visibility: 0,
	  widths: 0,
	  wordSpacing: 'word-spacing',
	  writingMode: 'writing-mode',
	  x: 0,
	  xHeight: 'x-height',
	  x1: 0,
	  x2: 0,
	  xChannelSelector: 'xChannelSelector',
	  xlinkActuate: 'xlink:actuate',
	  xlinkArcrole: 'xlink:arcrole',
	  xlinkHref: 'xlink:href',
	  xlinkRole: 'xlink:role',
	  xlinkShow: 'xlink:show',
	  xlinkTitle: 'xlink:title',
	  xlinkType: 'xlink:type',
	  xmlBase: 'xml:base',
	  xmlLang: 'xml:lang',
	  xmlSpace: 'xml:space',
	  y: 0,
	  y1: 0,
	  y2: 0,
	  yChannelSelector: 'yChannelSelector',
	  z: 0,
	  zoomAndPan: 'zoomAndPan'
	};
	
	var SVGDOMPropertyConfig = {
	  Properties: {},
	  DOMAttributeNamespaces: {
	    xlinkActuate: NS.xlink,
	    xlinkArcrole: NS.xlink,
	    xlinkHref: NS.xlink,
	    xlinkRole: NS.xlink,
	    xlinkShow: NS.xlink,
	    xlinkTitle: NS.xlink,
	    xlinkType: NS.xlink,
	    xmlBase: NS.xml,
	    xmlLang: NS.xml,
	    xmlSpace: NS.xml
	  },
	  DOMAttributeNames: {}
	};
	
	Object.keys(ATTRS).forEach(function (key) {
	  SVGDOMPropertyConfig.Properties[key] = 0;
	  if (ATTRS[key]) {
	    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
	  }
	});
	
	module.exports = SVGDOMPropertyConfig;

/***/ },
/* 244 */
/*!******************************************!*\
  !*** ./~/react/lib/SelectEventPlugin.js ***!
  \******************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SelectEventPlugin
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(/*! ./EventConstants */ 132);
	var EventPropagators = __webpack_require__(/*! ./EventPropagators */ 133);
	var ExecutionEnvironment = __webpack_require__(/*! fbjs/lib/ExecutionEnvironment */ 140);
	var ReactDOMComponentTree = __webpack_require__(/*! ./ReactDOMComponentTree */ 127);
	var ReactInputSelection = __webpack_require__(/*! ./ReactInputSelection */ 236);
	var SyntheticEvent = __webpack_require__(/*! ./SyntheticEvent */ 144);
	
	var getActiveElement = __webpack_require__(/*! fbjs/lib/getActiveElement */ 242);
	var isTextInputElement = __webpack_require__(/*! ./isTextInputElement */ 162);
	var keyOf = __webpack_require__(/*! fbjs/lib/keyOf */ 116);
	var shallowEqual = __webpack_require__(/*! fbjs/lib/shallowEqual */ 225);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;
	
	var eventTypes = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSelect: null }),
	      captured: keyOf({ onSelectCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]
	  }
	};
	
	var activeElement = null;
	var activeElementInst = null;
	var lastSelection = null;
	var mouseDown = false;
	
	// Track whether a listener exists for this plugin. If none exist, we do
	// not extract events. See #3639.
	var hasListener = false;
	var ON_SELECT_KEY = keyOf({ onSelect: null });
	
	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (window.getSelection) {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  } else if (document.selection) {
	    var range = document.selection.createRange();
	    return {
	      parentElement: range.parentElement(),
	      text: range.text,
	      top: range.boundingTop,
	      left: range.boundingLeft
	    };
	  }
	}
	
	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent, nativeEventTarget) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
	    return null;
	  }
	
	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;
	
	    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);
	
	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement;
	
	    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);
	
	    return syntheticEvent;
	  }
	
	  return null;
	}
	
	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (!hasListener) {
	      return null;
	    }
	
	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;
	
	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case topLevelTypes.topFocus:
	        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
	          activeElement = targetNode;
	          activeElementInst = targetInst;
	          lastSelection = null;
	        }
	        break;
	      case topLevelTypes.topBlur:
	        activeElement = null;
	        activeElementInst = null;
	        lastSelection = null;
	        break;
	
	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case topLevelTypes.topMouseDown:
	        mouseDown = true;
	        break;
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topMouseUp:
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	
	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't). IE's event fires out of order with respect
	      // to key and input events on deletion, so we discard it.
	      //
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      // This is also our approach for IE handling, for the reason above.
	      case topLevelTypes.topSelectionChange:
	        if (skipSelectionChangeEvent) {
	          break;
	        }
	      // falls through
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	    }
	
	    return null;
	  },
	
	  didPutListener: function (inst, registrationName, listener) {
	    if (registrationName === ON_SELECT_KEY) {
	      hasListener = true;
	    }
	  }
	};
	
	module.exports = SelectEventPlugin;

/***/ },
/* 245 */
/*!******************************************!*\
  !*** ./~/react/lib/SimpleEventPlugin.js ***!
  \******************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SimpleEventPlugin
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(/*! ./reactProdInvariant */ 99);
	
	var EventConstants = __webpack_require__(/*! ./EventConstants */ 132);
	var EventListener = __webpack_require__(/*! fbjs/lib/EventListener */ 232);
	var EventPropagators = __webpack_require__(/*! ./EventPropagators */ 133);
	var ReactDOMComponentTree = __webpack_require__(/*! ./ReactDOMComponentTree */ 127);
	var SyntheticAnimationEvent = __webpack_require__(/*! ./SyntheticAnimationEvent */ 246);
	var SyntheticClipboardEvent = __webpack_require__(/*! ./SyntheticClipboardEvent */ 247);
	var SyntheticEvent = __webpack_require__(/*! ./SyntheticEvent */ 144);
	var SyntheticFocusEvent = __webpack_require__(/*! ./SyntheticFocusEvent */ 248);
	var SyntheticKeyboardEvent = __webpack_require__(/*! ./SyntheticKeyboardEvent */ 249);
	var SyntheticMouseEvent = __webpack_require__(/*! ./SyntheticMouseEvent */ 165);
	var SyntheticDragEvent = __webpack_require__(/*! ./SyntheticDragEvent */ 252);
	var SyntheticTouchEvent = __webpack_require__(/*! ./SyntheticTouchEvent */ 253);
	var SyntheticTransitionEvent = __webpack_require__(/*! ./SyntheticTransitionEvent */ 254);
	var SyntheticUIEvent = __webpack_require__(/*! ./SyntheticUIEvent */ 166);
	var SyntheticWheelEvent = __webpack_require__(/*! ./SyntheticWheelEvent */ 255);
	
	var emptyFunction = __webpack_require__(/*! fbjs/lib/emptyFunction */ 104);
	var getEventCharCode = __webpack_require__(/*! ./getEventCharCode */ 250);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 100);
	var keyOf = __webpack_require__(/*! fbjs/lib/keyOf */ 116);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var eventTypes = {
	  abort: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAbort: true }),
	      captured: keyOf({ onAbortCapture: true })
	    }
	  },
	  animationEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationEnd: true }),
	      captured: keyOf({ onAnimationEndCapture: true })
	    }
	  },
	  animationIteration: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationIteration: true }),
	      captured: keyOf({ onAnimationIterationCapture: true })
	    }
	  },
	  animationStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationStart: true }),
	      captured: keyOf({ onAnimationStartCapture: true })
	    }
	  },
	  blur: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBlur: true }),
	      captured: keyOf({ onBlurCapture: true })
	    }
	  },
	  canPlay: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlay: true }),
	      captured: keyOf({ onCanPlayCapture: true })
	    }
	  },
	  canPlayThrough: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlayThrough: true }),
	      captured: keyOf({ onCanPlayThroughCapture: true })
	    }
	  },
	  click: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onClick: true }),
	      captured: keyOf({ onClickCapture: true })
	    }
	  },
	  contextMenu: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onContextMenu: true }),
	      captured: keyOf({ onContextMenuCapture: true })
	    }
	  },
	  copy: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCopy: true }),
	      captured: keyOf({ onCopyCapture: true })
	    }
	  },
	  cut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCut: true }),
	      captured: keyOf({ onCutCapture: true })
	    }
	  },
	  doubleClick: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDoubleClick: true }),
	      captured: keyOf({ onDoubleClickCapture: true })
	    }
	  },
	  drag: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrag: true }),
	      captured: keyOf({ onDragCapture: true })
	    }
	  },
	  dragEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnd: true }),
	      captured: keyOf({ onDragEndCapture: true })
	    }
	  },
	  dragEnter: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnter: true }),
	      captured: keyOf({ onDragEnterCapture: true })
	    }
	  },
	  dragExit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragExit: true }),
	      captured: keyOf({ onDragExitCapture: true })
	    }
	  },
	  dragLeave: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragLeave: true }),
	      captured: keyOf({ onDragLeaveCapture: true })
	    }
	  },
	  dragOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragOver: true }),
	      captured: keyOf({ onDragOverCapture: true })
	    }
	  },
	  dragStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragStart: true }),
	      captured: keyOf({ onDragStartCapture: true })
	    }
	  },
	  drop: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrop: true }),
	      captured: keyOf({ onDropCapture: true })
	    }
	  },
	  durationChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDurationChange: true }),
	      captured: keyOf({ onDurationChangeCapture: true })
	    }
	  },
	  emptied: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEmptied: true }),
	      captured: keyOf({ onEmptiedCapture: true })
	    }
	  },
	  encrypted: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEncrypted: true }),
	      captured: keyOf({ onEncryptedCapture: true })
	    }
	  },
	  ended: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEnded: true }),
	      captured: keyOf({ onEndedCapture: true })
	    }
	  },
	  error: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onError: true }),
	      captured: keyOf({ onErrorCapture: true })
	    }
	  },
	  focus: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onFocus: true }),
	      captured: keyOf({ onFocusCapture: true })
	    }
	  },
	  input: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onInput: true }),
	      captured: keyOf({ onInputCapture: true })
	    }
	  },
	  invalid: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onInvalid: true }),
	      captured: keyOf({ onInvalidCapture: true })
	    }
	  },
	  keyDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyDown: true }),
	      captured: keyOf({ onKeyDownCapture: true })
	    }
	  },
	  keyPress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyPress: true }),
	      captured: keyOf({ onKeyPressCapture: true })
	    }
	  },
	  keyUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyUp: true }),
	      captured: keyOf({ onKeyUpCapture: true })
	    }
	  },
	  load: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoad: true }),
	      captured: keyOf({ onLoadCapture: true })
	    }
	  },
	  loadedData: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedData: true }),
	      captured: keyOf({ onLoadedDataCapture: true })
	    }
	  },
	  loadedMetadata: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedMetadata: true }),
	      captured: keyOf({ onLoadedMetadataCapture: true })
	    }
	  },
	  loadStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadStart: true }),
	      captured: keyOf({ onLoadStartCapture: true })
	    }
	  },
	  // Note: We do not allow listening to mouseOver events. Instead, use the
	  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
	  mouseDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseDown: true }),
	      captured: keyOf({ onMouseDownCapture: true })
	    }
	  },
	  mouseMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseMove: true }),
	      captured: keyOf({ onMouseMoveCapture: true })
	    }
	  },
	  mouseOut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOut: true }),
	      captured: keyOf({ onMouseOutCapture: true })
	    }
	  },
	  mouseOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOver: true }),
	      captured: keyOf({ onMouseOverCapture: true })
	    }
	  },
	  mouseUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseUp: true }),
	      captured: keyOf({ onMouseUpCapture: true })
	    }
	  },
	  paste: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPaste: true }),
	      captured: keyOf({ onPasteCapture: true })
	    }
	  },
	  pause: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPause: true }),
	      captured: keyOf({ onPauseCapture: true })
	    }
	  },
	  play: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlay: true }),
	      captured: keyOf({ onPlayCapture: true })
	    }
	  },
	  playing: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlaying: true }),
	      captured: keyOf({ onPlayingCapture: true })
	    }
	  },
	  progress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onProgress: true }),
	      captured: keyOf({ onProgressCapture: true })
	    }
	  },
	  rateChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onRateChange: true }),
	      captured: keyOf({ onRateChangeCapture: true })
	    }
	  },
	  reset: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onReset: true }),
	      captured: keyOf({ onResetCapture: true })
	    }
	  },
	  scroll: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onScroll: true }),
	      captured: keyOf({ onScrollCapture: true })
	    }
	  },
	  seeked: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeked: true }),
	      captured: keyOf({ onSeekedCapture: true })
	    }
	  },
	  seeking: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeking: true }),
	      captured: keyOf({ onSeekingCapture: true })
	    }
	  },
	  stalled: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onStalled: true }),
	      captured: keyOf({ onStalledCapture: true })
	    }
	  },
	  submit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSubmit: true }),
	      captured: keyOf({ onSubmitCapture: true })
	    }
	  },
	  suspend: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSuspend: true }),
	      captured: keyOf({ onSuspendCapture: true })
	    }
	  },
	  timeUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTimeUpdate: true }),
	      captured: keyOf({ onTimeUpdateCapture: true })
	    }
	  },
	  touchCancel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchCancel: true }),
	      captured: keyOf({ onTouchCancelCapture: true })
	    }
	  },
	  touchEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchEnd: true }),
	      captured: keyOf({ onTouchEndCapture: true })
	    }
	  },
	  touchMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchMove: true }),
	      captured: keyOf({ onTouchMoveCapture: true })
	    }
	  },
	  touchStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchStart: true }),
	      captured: keyOf({ onTouchStartCapture: true })
	    }
	  },
	  transitionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTransitionEnd: true }),
	      captured: keyOf({ onTransitionEndCapture: true })
	    }
	  },
	  volumeChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onVolumeChange: true }),
	      captured: keyOf({ onVolumeChangeCapture: true })
	    }
	  },
	  waiting: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWaiting: true }),
	      captured: keyOf({ onWaitingCapture: true })
	    }
	  },
	  wheel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWheel: true }),
	      captured: keyOf({ onWheelCapture: true })
	    }
	  }
	};
	
	var topLevelEventsToDispatchConfig = {
	  topAbort: eventTypes.abort,
	  topAnimationEnd: eventTypes.animationEnd,
	  topAnimationIteration: eventTypes.animationIteration,
	  topAnimationStart: eventTypes.animationStart,
	  topBlur: eventTypes.blur,
	  topCanPlay: eventTypes.canPlay,
	  topCanPlayThrough: eventTypes.canPlayThrough,
	  topClick: eventTypes.click,
	  topContextMenu: eventTypes.contextMenu,
	  topCopy: eventTypes.copy,
	  topCut: eventTypes.cut,
	  topDoubleClick: eventTypes.doubleClick,
	  topDrag: eventTypes.drag,
	  topDragEnd: eventTypes.dragEnd,
	  topDragEnter: eventTypes.dragEnter,
	  topDragExit: eventTypes.dragExit,
	  topDragLeave: eventTypes.dragLeave,
	  topDragOver: eventTypes.dragOver,
	  topDragStart: eventTypes.dragStart,
	  topDrop: eventTypes.drop,
	  topDurationChange: eventTypes.durationChange,
	  topEmptied: eventTypes.emptied,
	  topEncrypted: eventTypes.encrypted,
	  topEnded: eventTypes.ended,
	  topError: eventTypes.error,
	  topFocus: eventTypes.focus,
	  topInput: eventTypes.input,
	  topInvalid: eventTypes.invalid,
	  topKeyDown: eventTypes.keyDown,
	  topKeyPress: eventTypes.keyPress,
	  topKeyUp: eventTypes.keyUp,
	  topLoad: eventTypes.load,
	  topLoadedData: eventTypes.loadedData,
	  topLoadedMetadata: eventTypes.loadedMetadata,
	  topLoadStart: eventTypes.loadStart,
	  topMouseDown: eventTypes.mouseDown,
	  topMouseMove: eventTypes.mouseMove,
	  topMouseOut: eventTypes.mouseOut,
	  topMouseOver: eventTypes.mouseOver,
	  topMouseUp: eventTypes.mouseUp,
	  topPaste: eventTypes.paste,
	  topPause: eventTypes.pause,
	  topPlay: eventTypes.play,
	  topPlaying: eventTypes.playing,
	  topProgress: eventTypes.progress,
	  topRateChange: eventTypes.rateChange,
	  topReset: eventTypes.reset,
	  topScroll: eventTypes.scroll,
	  topSeeked: eventTypes.seeked,
	  topSeeking: eventTypes.seeking,
	  topStalled: eventTypes.stalled,
	  topSubmit: eventTypes.submit,
	  topSuspend: eventTypes.suspend,
	  topTimeUpdate: eventTypes.timeUpdate,
	  topTouchCancel: eventTypes.touchCancel,
	  topTouchEnd: eventTypes.touchEnd,
	  topTouchMove: eventTypes.touchMove,
	  topTouchStart: eventTypes.touchStart,
	  topTransitionEnd: eventTypes.transitionEnd,
	  topVolumeChange: eventTypes.volumeChange,
	  topWaiting: eventTypes.waiting,
	  topWheel: eventTypes.wheel
	};
	
	for (var type in topLevelEventsToDispatchConfig) {
	  topLevelEventsToDispatchConfig[type].dependencies = [type];
	}
	
	var ON_CLICK_KEY = keyOf({ onClick: null });
	var onClickListeners = {};
	
	var SimpleEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor;
	    switch (topLevelType) {
	      case topLevelTypes.topAbort:
	      case topLevelTypes.topCanPlay:
	      case topLevelTypes.topCanPlayThrough:
	      case topLevelTypes.topDurationChange:
	      case topLevelTypes.topEmptied:
	      case topLevelTypes.topEncrypted:
	      case topLevelTypes.topEnded:
	      case topLevelTypes.topError:
	      case topLevelTypes.topInput:
	      case topLevelTypes.topInvalid:
	      case topLevelTypes.topLoad:
	      case topLevelTypes.topLoadedData:
	      case topLevelTypes.topLoadedMetadata:
	      case topLevelTypes.topLoadStart:
	      case topLevelTypes.topPause:
	      case topLevelTypes.topPlay:
	      case topLevelTypes.topPlaying:
	      case topLevelTypes.topProgress:
	      case topLevelTypes.topRateChange:
	      case topLevelTypes.topReset:
	      case topLevelTypes.topSeeked:
	      case topLevelTypes.topSeeking:
	      case topLevelTypes.topStalled:
	      case topLevelTypes.topSubmit:
	      case topLevelTypes.topSuspend:
	      case topLevelTypes.topTimeUpdate:
	      case topLevelTypes.topVolumeChange:
	      case topLevelTypes.topWaiting:
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent;
	        break;
	      case topLevelTypes.topKeyPress:
	        // Firefox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events. Enter is however both printable and
	        // non-printable. One would expect Tab to be as well (but it isn't).
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case topLevelTypes.topBlur:
	      case topLevelTypes.topFocus:
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case topLevelTypes.topClick:
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topDoubleClick:
	      case topLevelTypes.topMouseDown:
	      case topLevelTypes.topMouseMove:
	      case topLevelTypes.topMouseOut:
	      case topLevelTypes.topMouseOver:
	      case topLevelTypes.topMouseUp:
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case topLevelTypes.topDrag:
	      case topLevelTypes.topDragEnd:
	      case topLevelTypes.topDragEnter:
	      case topLevelTypes.topDragExit:
	      case topLevelTypes.topDragLeave:
	      case topLevelTypes.topDragOver:
	      case topLevelTypes.topDragStart:
	      case topLevelTypes.topDrop:
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case topLevelTypes.topTouchCancel:
	      case topLevelTypes.topTouchEnd:
	      case topLevelTypes.topTouchMove:
	      case topLevelTypes.topTouchStart:
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case topLevelTypes.topAnimationEnd:
	      case topLevelTypes.topAnimationIteration:
	      case topLevelTypes.topAnimationStart:
	        EventConstructor = SyntheticAnimationEvent;
	        break;
	      case topLevelTypes.topTransitionEnd:
	        EventConstructor = SyntheticTransitionEvent;
	        break;
	      case topLevelTypes.topScroll:
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case topLevelTypes.topWheel:
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case topLevelTypes.topCopy:
	      case topLevelTypes.topCut:
	      case topLevelTypes.topPaste:
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	    }
	    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
	    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
	    EventPropagators.accumulateTwoPhaseDispatches(event);
	    return event;
	  },
	
	  didPutListener: function (inst, registrationName, listener) {
	    // Mobile Safari does not fire properly bubble click events on
	    // non-interactive elements, which means delegated click listeners do not
	    // fire. The workaround for this bug involves attaching an empty click
	    // listener on the target node.
	    if (registrationName === ON_CLICK_KEY) {
	      var id = inst._rootNodeID;
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      if (!onClickListeners[id]) {
	        onClickListeners[id] = EventListener.listen(node, 'click', emptyFunction);
	      }
	    }
	  },
	
	  willDeleteListener: function (inst, registrationName) {
	    if (registrationName === ON_CLICK_KEY) {
	      var id = inst._rootNodeID;
	      onClickListeners[id].remove();
	      delete onClickListeners[id];
	    }
	  }
	
	};
	
	module.exports = SimpleEventPlugin;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 246 */
/*!************************************************!*\
  !*** ./~/react/lib/SyntheticAnimationEvent.js ***!
  \************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticAnimationEvent
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(/*! ./SyntheticEvent */ 144);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
	 */
	var AnimationEventInterface = {
	  animationName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);
	
	module.exports = SyntheticAnimationEvent;

/***/ },
/* 247 */
/*!************************************************!*\
  !*** ./~/react/lib/SyntheticClipboardEvent.js ***!
  \************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticClipboardEvent
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(/*! ./SyntheticEvent */ 144);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var ClipboardEventInterface = {
	  clipboardData: function (event) {
	    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);
	
	module.exports = SyntheticClipboardEvent;

/***/ },
/* 248 */
/*!********************************************!*\
  !*** ./~/react/lib/SyntheticFocusEvent.js ***!
  \********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticFocusEvent
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(/*! ./SyntheticUIEvent */ 166);
	
	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var FocusEventInterface = {
	  relatedTarget: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);
	
	module.exports = SyntheticFocusEvent;

/***/ },
/* 249 */
/*!***********************************************!*\
  !*** ./~/react/lib/SyntheticKeyboardEvent.js ***!
  \***********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticKeyboardEvent
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(/*! ./SyntheticUIEvent */ 166);
	
	var getEventCharCode = __webpack_require__(/*! ./getEventCharCode */ 250);
	var getEventKey = __webpack_require__(/*! ./getEventKey */ 251);
	var getEventModifierState = __webpack_require__(/*! ./getEventModifierState */ 168);
	
	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var KeyboardEventInterface = {
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function (event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.
	
	    // KeyPress is deprecated, but its replacement is not yet final and not
	    // implemented in any major browser. Only KeyPress has charCode.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function (event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.
	
	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function (event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);
	
	module.exports = SyntheticKeyboardEvent;

/***/ },
/* 250 */
/*!*****************************************!*\
  !*** ./~/react/lib/getEventCharCode.js ***!
  \*****************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventCharCode
	 */
	
	'use strict';
	
	/**
	 * `charCode` represents the actual "character code" and is safe to use with
	 * `String.fromCharCode`. As such, only keys that correspond to printable
	 * characters produce a valid `charCode`, the only exception to this is Enter.
	 * The Tab-key is considered non-printable and does not have a `charCode`,
	 * presumably because it does not produce a tab-character in browsers.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {number} Normalized `charCode` property.
	 */
	
	function getEventCharCode(nativeEvent) {
	  var charCode;
	  var keyCode = nativeEvent.keyCode;
	
	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;
	
	    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
	    charCode = keyCode;
	  }
	
	  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
	  // Must not discard the (non-)printable Enter-key.
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }
	
	  return 0;
	}
	
	module.exports = getEventCharCode;

/***/ },
/* 251 */
/*!************************************!*\
  !*** ./~/react/lib/getEventKey.js ***!
  \************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventKey
	 */
	
	'use strict';
	
	var getEventCharCode = __webpack_require__(/*! ./getEventCharCode */ 250);
	
	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  'Esc': 'Escape',
	  'Spacebar': ' ',
	  'Left': 'ArrowLeft',
	  'Up': 'ArrowUp',
	  'Right': 'ArrowRight',
	  'Down': 'ArrowDown',
	  'Del': 'Delete',
	  'Win': 'OS',
	  'Menu': 'ContextMenu',
	  'Apps': 'ContextMenu',
	  'Scroll': 'ScrollLock',
	  'MozPrintableKey': 'Unidentified'
	};
	
	/**
	 * Translation from legacy `keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  8: 'Backspace',
	  9: 'Tab',
	  12: 'Clear',
	  13: 'Enter',
	  16: 'Shift',
	  17: 'Control',
	  18: 'Alt',
	  19: 'Pause',
	  20: 'CapsLock',
	  27: 'Escape',
	  32: ' ',
	  33: 'PageUp',
	  34: 'PageDown',
	  35: 'End',
	  36: 'Home',
	  37: 'ArrowLeft',
	  38: 'ArrowUp',
	  39: 'ArrowRight',
	  40: 'ArrowDown',
	  45: 'Insert',
	  46: 'Delete',
	  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
	  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
	  144: 'NumLock',
	  145: 'ScrollLock',
	  224: 'Meta'
	};
	
	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.
	
	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }
	
	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);
	
	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}
	
	module.exports = getEventKey;

/***/ },
/* 252 */
/*!*******************************************!*\
  !*** ./~/react/lib/SyntheticDragEvent.js ***!
  \*******************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticDragEvent
	 */
	
	'use strict';
	
	var SyntheticMouseEvent = __webpack_require__(/*! ./SyntheticMouseEvent */ 165);
	
	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var DragEventInterface = {
	  dataTransfer: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);
	
	module.exports = SyntheticDragEvent;

/***/ },
/* 253 */
/*!********************************************!*\
  !*** ./~/react/lib/SyntheticTouchEvent.js ***!
  \********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticTouchEvent
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(/*! ./SyntheticUIEvent */ 166);
	
	var getEventModifierState = __webpack_require__(/*! ./getEventModifierState */ 168);
	
	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var TouchEventInterface = {
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);
	
	module.exports = SyntheticTouchEvent;

/***/ },
/* 254 */
/*!*************************************************!*\
  !*** ./~/react/lib/SyntheticTransitionEvent.js ***!
  \*************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticTransitionEvent
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(/*! ./SyntheticEvent */ 144);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
	 */
	var TransitionEventInterface = {
	  propertyName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);
	
	module.exports = SyntheticTransitionEvent;

/***/ },
/* 255 */
/*!********************************************!*\
  !*** ./~/react/lib/SyntheticWheelEvent.js ***!
  \********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticWheelEvent
	 */
	
	'use strict';
	
	var SyntheticMouseEvent = __webpack_require__(/*! ./SyntheticMouseEvent */ 165);
	
	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var WheelEventInterface = {
	  deltaX: function (event) {
	    return 'deltaX' in event ? event.deltaX :
	    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
	  },
	  deltaY: function (event) {
	    return 'deltaY' in event ? event.deltaY :
	    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	    'wheelDeltaY' in event ? -event.wheelDeltaY :
	    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	    'wheelDelta' in event ? -event.wheelDelta : 0;
	  },
	  deltaZ: null,
	
	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticMouseEvent}
	 */
	function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}
	
	SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);
	
	module.exports = SyntheticWheelEvent;

/***/ },
/* 256 */
/*!***********************************!*\
  !*** ./~/react/lib/ReactMount.js ***!
  \***********************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMount
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(/*! ./reactProdInvariant */ 99);
	
	var DOMLazyTree = __webpack_require__(/*! ./DOMLazyTree */ 172);
	var DOMProperty = __webpack_require__(/*! ./DOMProperty */ 128);
	var ReactBrowserEventEmitter = __webpack_require__(/*! ./ReactBrowserEventEmitter */ 201);
	var ReactCurrentOwner = __webpack_require__(/*! ./ReactCurrentOwner */ 102);
	var ReactDOMComponentTree = __webpack_require__(/*! ./ReactDOMComponentTree */ 127);
	var ReactDOMContainerInfo = __webpack_require__(/*! ./ReactDOMContainerInfo */ 257);
	var ReactDOMFeatureFlags = __webpack_require__(/*! ./ReactDOMFeatureFlags */ 258);
	var ReactElement = __webpack_require__(/*! ./ReactElement */ 101);
	var ReactFeatureFlags = __webpack_require__(/*! ./ReactFeatureFlags */ 149);
	var ReactInstanceMap = __webpack_require__(/*! ./ReactInstanceMap */ 213);
	var ReactInstrumentation = __webpack_require__(/*! ./ReactInstrumentation */ 153);
	var ReactMarkupChecksum = __webpack_require__(/*! ./ReactMarkupChecksum */ 259);
	var ReactReconciler = __webpack_require__(/*! ./ReactReconciler */ 150);
	var ReactUpdateQueue = __webpack_require__(/*! ./ReactUpdateQueue */ 224);
	var ReactUpdates = __webpack_require__(/*! ./ReactUpdates */ 147);
	
	var emptyObject = __webpack_require__(/*! fbjs/lib/emptyObject */ 111);
	var instantiateReactComponent = __webpack_require__(/*! ./instantiateReactComponent */ 215);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 100);
	var setInnerHTML = __webpack_require__(/*! ./setInnerHTML */ 174);
	var shouldUpdateReactComponent = __webpack_require__(/*! ./shouldUpdateReactComponent */ 218);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 103);
	
	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;
	
	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;
	
	var instancesByReactRootID = {};
	
	/**
	 * Finds the index of the first character
	 * that's not common between the two given strings.
	 *
	 * @return {number} the index of the character where the strings diverge
	 */
	function firstDifferenceIndex(string1, string2) {
	  var minLen = Math.min(string1.length, string2.length);
	  for (var i = 0; i < minLen; i++) {
	    if (string1.charAt(i) !== string2.charAt(i)) {
	      return i;
	    }
	  }
	  return string1.length === string2.length ? -1 : minLen;
	}
	
	/**
	 * @param {DOMElement|DOMDocument} container DOM element that may contain
	 * a React component
	 * @return {?*} DOM element that may have the reactRoot ID, or null.
	 */
	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }
	
	  if (container.nodeType === DOC_NODE_TYPE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}
	
	function internalGetID(node) {
	  // If node is something like a window, document, or text node, none of
	  // which support attributes or a .getAttribute method, gracefully return
	  // the empty string, as if the attribute were missing.
	  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
	}
	
	/**
	 * Mounts this component and inserts it into the DOM.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {ReactReconcileTransaction} transaction
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
	  var markerName;
	  if (ReactFeatureFlags.logTopLevelRenders) {
	    var wrappedElement = wrapperInstance._currentElement.props;
	    var type = wrappedElement.type;
	    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
	    console.time(markerName);
	  }
	
	  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context);
	
	  if (markerName) {
	    console.timeEnd(markerName);
	  }
	
	  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
	  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
	}
	
	/**
	 * Batched mount.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */
	  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
	  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}
	
	/**
	 * Unmounts a component and removes it from the DOM.
	 *
	 * @param {ReactComponent} instance React component instance.
	 * @param {DOMElement} container DOM element to unmount from.
	 * @final
	 * @internal
	 * @see {ReactMount.unmountComponentAtNode}
	 */
	function unmountComponentFromNode(instance, container, safely) {
	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onBeginFlush();
	  }
	  ReactReconciler.unmountComponent(instance, safely);
	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onEndFlush();
	  }
	
	  if (container.nodeType === DOC_NODE_TYPE) {
	    container = container.documentElement;
	  }
	
	  // http://jsperf.com/emptying-a-node
	  while (container.lastChild) {
	    container.removeChild(container.lastChild);
	  }
	}
	
	/**
	 * True if the supplied DOM node has a direct React-rendered child that is
	 * not a React root element. Useful for warning in `render`,
	 * `unmountComponentAtNode`, etc.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM element contains a direct child that was
	 * rendered by React but is not a root element.
	 * @internal
	 */
	function hasNonRootReactChild(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  if (rootEl) {
	    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
	    return !!(inst && inst._hostParent);
	  }
	}
	
	function getHostRootInstanceInContainer(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
	  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
	}
	
	function getTopLevelWrapperInContainer(container) {
	  var root = getHostRootInstanceInContainer(container);
	  return root ? root._hostContainerInfo._topLevelWrapper : null;
	}
	
	/**
	 * Temporary (?) hack so that we can store all top-level pending updates on
	 * composites instead of having to worry about different types of components
	 * here.
	 */
	var topLevelRootCounter = 1;
	var TopLevelWrapper = function () {
	  this.rootID = topLevelRootCounter++;
	};
	TopLevelWrapper.prototype.isReactComponent = {};
	if (process.env.NODE_ENV !== 'production') {
	  TopLevelWrapper.displayName = 'TopLevelWrapper';
	}
	TopLevelWrapper.prototype.render = function () {
	  // this.props is actually a ReactElement
	  return this.props;
	};
	
	/**
	 * Mounting is the process of initializing a React component by creating its
	 * representative DOM elements and inserting them into a supplied `container`.
	 * Any prior content inside `container` is destroyed in the process.
	 *
	 *   ReactMount.render(
	 *     component,
	 *     document.getElementById('container')
	 *   );
	 *
	 *   <div id="container">                   <-- Supplied `container`.
	 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
	 *       // ...                                 component.
	 *     </div>
	 *   </div>
	 *
	 * Inside of `container`, the first element rendered is the "reactRoot".
	 */
	var ReactMount = {
	
	  TopLevelWrapper: TopLevelWrapper,
	
	  /**
	   * Used by devtools. The keys are not important.
	   */
	  _instancesByReactRootID: instancesByReactRootID,
	
	  /**
	   * This is a hook provided to support rendering React components while
	   * ensuring that the apparent scroll position of its `container` does not
	   * change.
	   *
	   * @param {DOMElement} container The `container` being rendered into.
	   * @param {function} renderCallback This must be called once to do the render.
	   */
	  scrollMonitor: function (container, renderCallback) {
	    renderCallback();
	  },
	
	  /**
	   * Take a component that's already mounted into the DOM and replace its props
	   * @param {ReactComponent} prevComponent component instance already in the DOM
	   * @param {ReactElement} nextElement component instance to render
	   * @param {DOMElement} container container to render into
	   * @param {?function} callback function triggered on completion
	   */
	  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {
	    ReactMount.scrollMonitor(container, function () {
	      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
	      if (callback) {
	        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
	      }
	    });
	
	    return prevComponent;
	  },
	
	  /**
	   * Render a new component into the DOM. Hooked by devtools!
	   *
	   * @param {ReactElement} nextElement element to render
	   * @param {DOMElement} container container to render into
	   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
	   * @return {ReactComponent} nextComponent
	   */
	  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case.
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;
	
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;
	
	    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
	    var componentInstance = instantiateReactComponent(nextElement, false);
	
	    // The initial render is synchronous but any updates that happen during
	    // rendering, in componentWillMount or componentDidMount, will be batched
	    // according to the current batching strategy.
	
	    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);
	
	    var wrapperID = componentInstance._instance.rootID;
	    instancesByReactRootID[wrapperID] = componentInstance;
	
	    if (process.env.NODE_ENV !== 'production') {
	      // The instance here is TopLevelWrapper so we report mount for its child.
	      ReactInstrumentation.debugTool.onMountRootComponent(componentInstance._renderedComponent._debugID);
	    }
	
	    return componentInstance;
	  },
	
	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
	    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
	  },
	
	  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
	    !ReactElement.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :
	    // Check if it quacks like an element
	    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;
	
	    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;
	
	    var nextWrappedElement = ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);
	
	    var nextContext;
	    if (parentComponent) {
	      var parentInst = ReactInstanceMap.get(parentComponent);
	      nextContext = parentInst._processChildContext(parentInst._context);
	    } else {
	      nextContext = emptyObject;
	    }
	
	    var prevComponent = getTopLevelWrapperInContainer(container);
	
	    if (prevComponent) {
	      var prevWrappedElement = prevComponent._currentElement;
	      var prevElement = prevWrappedElement.props;
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        var publicInst = prevComponent._renderedComponent.getPublicInstance();
	        var updatedCallback = callback && function () {
	          callback.call(publicInst);
	        };
	        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);
	        return publicInst;
	      } else {
	        ReactMount.unmountComponentAtNode(container);
	      }
	    }
	
	    var reactRootElement = getReactRootElementInContainer(container);
	    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
	    var containerHasNonRootReactChild = hasNonRootReactChild(container);
	
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;
	
	      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
	        var rootElementSibling = reactRootElement;
	        while (rootElementSibling) {
	          if (internalGetID(rootElementSibling)) {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
	            break;
	          }
	          rootElementSibling = rootElementSibling.nextSibling;
	        }
	      }
	    }
	
	    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
	    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
	    if (callback) {
	      callback.call(component);
	    }
	    return component;
	  },
	
	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  render: function (nextElement, container, callback) {
	    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
	  },
	
	  /**
	   * Unmounts and destroys the React component rendered in the `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
	   *
	   * @param {DOMElement} container DOM element containing a React component.
	   * @return {boolean} True if a component was found in and unmounted from
	   *                   `container`
	   */
	  unmountComponentAtNode: function (container) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case. (Strictly speaking, unmounting won't cause a
	    // render but we still don't expect to be in a render call here.)
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;
	
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;
	
	    var prevComponent = getTopLevelWrapperInContainer(container);
	    if (!prevComponent) {
	      // Check if the node being unmounted was rendered by React, but isn't a
	      // root node.
	      var containerHasNonRootReactChild = hasNonRootReactChild(container);
	
	      // Check if the container itself is a React root node.
	      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);
	
	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
	      }
	
	      return false;
	    }
	    delete instancesByReactRootID[prevComponent._instance.rootID];
	    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
	    return true;
	  },
	
	  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;
	
	    if (shouldReuseMarkup) {
	      var rootElement = getReactRootElementInContainer(container);
	      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
	        ReactDOMComponentTree.precacheNode(instance, rootElement);
	        return;
	      } else {
	        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	
	        var rootMarkup = rootElement.outerHTML;
	        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);
	
	        var normalizedMarkup = markup;
	        if (process.env.NODE_ENV !== 'production') {
	          // because rootMarkup is retrieved from the DOM, various normalizations
	          // will have occurred which will not be present in `markup`. Here,
	          // insert markup into a <div> or <iframe> depending on the container
	          // type to perform the same normalizations before comparing.
	          var normalizer;
	          if (container.nodeType === ELEMENT_NODE_TYPE) {
	            normalizer = document.createElement('div');
	            normalizer.innerHTML = markup;
	            normalizedMarkup = normalizer.innerHTML;
	          } else {
	            normalizer = document.createElement('iframe');
	            document.body.appendChild(normalizer);
	            normalizer.contentDocument.write(markup);
	            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
	            document.body.removeChild(normalizer);
	          }
	        }
	
	        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
	        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);
	
	        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;
	
	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
	        }
	      }
	    }
	
	    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;
	
	    if (transaction.useCreateElement) {
	      while (container.lastChild) {
	        container.removeChild(container.lastChild);
	      }
	      DOMLazyTree.insertTreeBefore(container, markup, null);
	    } else {
	      setInnerHTML(container, markup);
	      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
	    }
	
	    if (process.env.NODE_ENV !== 'production') {
	      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
	      if (hostNode._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation(hostNode._debugID, 'mount', markup.toString());
	      }
	    }
	  }
	};
	
	module.exports = ReactMount;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 257 */
/*!**********************************************!*\
  !*** ./~/react/lib/ReactDOMContainerInfo.js ***!
  \**********************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMContainerInfo
	 */
	
	'use strict';
	
	var validateDOMNesting = __webpack_require__(/*! ./validateDOMNesting */ 226);
	
	var DOC_NODE_TYPE = 9;
	
	function ReactDOMContainerInfo(topLevelWrapper, node) {
	  var info = {
	    _topLevelWrapper: topLevelWrapper,
	    _idCounter: 1,
	    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
	    _node: node,
	    _tag: node ? node.nodeName.toLowerCase() : null,
	    _namespaceURI: node ? node.namespaceURI : null
	  };
	  if (process.env.NODE_ENV !== 'production') {
	    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
	  }
	  return info;
	}
	
	module.exports = ReactDOMContainerInfo;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 258 */
/*!*********************************************!*\
  !*** ./~/react/lib/ReactDOMFeatureFlags.js ***!
  \*********************************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFeatureFlags
	 */
	
	'use strict';
	
	var ReactDOMFeatureFlags = {
	  useCreateElement: true
	};
	
	module.exports = ReactDOMFeatureFlags;

/***/ },
/* 259 */
/*!********************************************!*\
  !*** ./~/react/lib/ReactMarkupChecksum.js ***!
  \********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMarkupChecksum
	 */
	
	'use strict';
	
	var adler32 = __webpack_require__(/*! ./adler32 */ 260);
	
	var TAG_END = /\/?>/;
	var COMMENT_START = /^<\!\-\-/;
	
	var ReactMarkupChecksum = {
	  CHECKSUM_ATTR_NAME: 'data-react-checksum',
	
	  /**
	   * @param {string} markup Markup string
	   * @return {string} Markup string with checksum attribute attached
	   */
	  addChecksumToMarkup: function (markup) {
	    var checksum = adler32(markup);
	
	    // Add checksum (handle both parent tags, comments and self-closing tags)
	    if (COMMENT_START.test(markup)) {
	      return markup;
	    } else {
	      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
	    }
	  },
	
	  /**
	   * @param {string} markup to use
	   * @param {DOMElement} element root React element
	   * @returns {boolean} whether or not the markup is the same
	   */
	  canReuseMarkup: function (markup, element) {
	    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
	    var markupChecksum = adler32(markup);
	    return markupChecksum === existingChecksum;
	  }
	};
	
	module.exports = ReactMarkupChecksum;

/***/ },
/* 260 */
/*!********************************!*\
  !*** ./~/react/lib/adler32.js ***!
  \********************************/
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule adler32
	 * 
	 */
	
	'use strict';
	
	var MOD = 65521;
	
	// adler32 is not cryptographically strong, and is only used to sanity check that
	// markup generated on the server matches the markup generated on the client.
	// This implementation (a modified version of the SheetJS version) has been optimized
	// for our use case, at the expense of conforming to the adler32 specification
	// for non-ascii inputs.
	function adler32(data) {
	  var a = 1;
	  var b = 0;
	  var i = 0;
	  var l = data.length;
	  var m = l & ~0x3;
	  while (i < m) {
	    var n = Math.min(i + 4096, m);
	    for (; i < n; i += 4) {
	      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
	    }
	    a %= MOD;
	    b %= MOD;
	  }
	  for (; i < l; i++) {
	    b += a += data.charCodeAt(i);
	  }
	  a %= MOD;
	  b %= MOD;
	  return a | b << 16;
	}
	
	module.exports = adler32;

/***/ },
/* 261 */
/*!************************************!*\
  !*** ./~/react/lib/findDOMNode.js ***!
  \************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule findDOMNode
	 */
	
	'use strict';
	
	var _prodInvariant = __webpack_require__(/*! ./reactProdInvariant */ 99);
	
	var ReactCurrentOwner = __webpack_require__(/*! ./ReactCurrentOwner */ 102);
	var ReactDOMComponentTree = __webpack_require__(/*! ./ReactDOMComponentTree */ 127);
	var ReactInstanceMap = __webpack_require__(/*! ./ReactInstanceMap */ 213);
	
	var getHostComponentFromComposite = __webpack_require__(/*! ./getHostComponentFromComposite */ 262);
	var invariant = __webpack_require__(/*! fbjs/lib/invariant */ 100);
	var warning = __webpack_require__(/*! fbjs/lib/warning */ 103);
	
	/**
	 * Returns the DOM node rendered by this element.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
	 *
	 * @param {ReactComponent|DOMElement} componentOrElement
	 * @return {?DOMElement} The root node of this element.
	 */
	function findDOMNode(componentOrElement) {
	  if (process.env.NODE_ENV !== 'production') {
	    var owner = ReactCurrentOwner.current;
	    if (owner !== null) {
	      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	      owner._warnedAboutRefsInRender = true;
	    }
	  }
	  if (componentOrElement == null) {
	    return null;
	  }
	  if (componentOrElement.nodeType === 1) {
	    return componentOrElement;
	  }
	
	  var inst = ReactInstanceMap.get(componentOrElement);
	  if (inst) {
	    inst = getHostComponentFromComposite(inst);
	    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
	  }
	
	  if (typeof componentOrElement.render === 'function') {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
	  } else {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
	  }
	}
	
	module.exports = findDOMNode;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./~/process/browser.js */ 95)))

/***/ },
/* 262 */
/*!******************************************************!*\
  !*** ./~/react/lib/getHostComponentFromComposite.js ***!
  \******************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getHostComponentFromComposite
	 */
	
	'use strict';
	
	var ReactNodeTypes = __webpack_require__(/*! ./ReactNodeTypes */ 217);
	
	function getHostComponentFromComposite(inst) {
	  var type;
	
	  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
	    inst = inst._renderedComponent;
	  }
	
	  if (type === ReactNodeTypes.HOST) {
	    return inst._renderedComponent;
	  } else if (type === ReactNodeTypes.EMPTY) {
	    return null;
	  }
	}
	
	module.exports = getHostComponentFromComposite;

/***/ },
/* 263 */
/*!***************************************************!*\
  !*** ./~/react/lib/renderSubtreeIntoContainer.js ***!
  \***************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	* @providesModule renderSubtreeIntoContainer
	*/
	
	'use strict';
	
	var ReactMount = __webpack_require__(/*! ./ReactMount */ 256);
	
	module.exports = ReactMount.renderSubtreeIntoContainer;

/***/ },
/* 264 */,
/* 265 */,
/* 266 */,
/* 267 */,
/* 268 */,
/* 269 */,
/* 270 */,
/* 271 */,
/* 272 */,
/* 273 */,
/* 274 */,
/* 275 */,
/* 276 */,
/* 277 */,
/* 278 */,
/* 279 */,
/* 280 */,
/* 281 */,
/* 282 */,
/* 283 */,
/* 284 */,
/* 285 */,
/* 286 */,
/* 287 */,
/* 288 */,
/* 289 */,
/* 290 */,
/* 291 */,
/* 292 */,
/* 293 */,
/* 294 */,
/* 295 */,
/* 296 */,
/* 297 */,
/* 298 */,
/* 299 */,
/* 300 */,
/* 301 */,
/* 302 */,
/* 303 */,
/* 304 */,
/* 305 */,
/* 306 */,
/* 307 */,
/* 308 */,
/* 309 */,
/* 310 */,
/* 311 */,
/* 312 */,
/* 313 */,
/* 314 */,
/* 315 */,
/* 316 */,
/* 317 */,
/* 318 */,
/* 319 */,
/* 320 */,
/* 321 */,
/* 322 */,
/* 323 */,
/* 324 */,
/* 325 */,
/* 326 */,
/* 327 */,
/* 328 */,
/* 329 */,
/* 330 */,
/* 331 */,
/* 332 */,
/* 333 */,
/* 334 */,
/* 335 */,
/* 336 */,
/* 337 */,
/* 338 */,
/* 339 */,
/* 340 */,
/* 341 */,
/* 342 */,
/* 343 */,
/* 344 */,
/* 345 */,
/* 346 */,
/* 347 */,
/* 348 */,
/* 349 */,
/* 350 */,
/* 351 */,
/* 352 */,
/* 353 */,
/* 354 */,
/* 355 */
/*!*****************************!*\
  !*** ./common/commonVar.ts ***!
  \*****************************/
/***/ function(module, exports) {

	"use strict";
	//export const serverIP = 'test.nicezhuanye.com';
	//export const serverIP = '192.168.31.216:8080';
	//export const serverIP = 'test.nicezhuanye.com:8091';
	//export const serverIP = 'school.nicezhuanye.com';
	//export const serverIP = '192.168.1.110:8080';
	//export const serverIP = '192.168.199.195:8080';
	//export const serverIP = 'nicezy.wicp.net';
	//export const serverIP = 'localhost:8080';
	//export const serverIP = '192.168.199.246:8080';
	//export const serverIP = '192.168.1.108:8080';
	exports.serverIP = hzyCommon.serverIP;
	exports.isTestBackendAPI = false;
	exports.GlobalDatasource = "GlobalForceUseMockData"; //GlobalForceToUseRealData|GlobalUseComponentData|GlobalForceUseMockData;
	var isUseRegionIDAndSchoolIDInRestPath = true; //是否在rest的路径中使用regionID 和 schoolID
	window.MutationObserver = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;
	exports.debug = hzyCommon.debug;
	exports.wechatDebug = false;
	exports.console = window.console || {
	    log: function () {
	        return;
	    }
	};
	exports.stepID2NameMap = {
	    "1": "学科兴趣排序",
	    "2": "学科能力排序",
	    "3": "职业性格测评",
	    "4": "职业兴趣测评",
	    "7": "学科初选",
	    "13": "选择意向专业"
	};
	exports.subjectNameDisplayMap = {
	    "物理": "物理",
	    "化学": "化学",
	    "生物": "生物",
	    "历史": "历史",
	    "地理": "地理",
	    "政治": "政治",
	    "技术": "技术"
	};
	function isDebug() {
	    return hzyCommon.isDebug();
	}
	exports.isDebug = isDebug;
	//todo
	var schoolID = 4;
	var regionID = 98;
	//var schoolID = getSchoolIDFromStorage();
	//var regionID = getRegionIDFromStorage();
	//todo 根据userid不同baseUrl的regionID和schoolID不同
	var regionIDAndSchoolIDPath = isUseRegionIDAndSchoolIDInRestPath ? '/' + regionID + "/" + schoolID : "";
	///rest
	exports.baseUrl = 'http://' + exports.serverIP + '/Nicezhuanye'; //
	//export const loginUrl = 'http://' + serverIP + '/Nicezhuanye/app/loginv2.html';//
	exports.loginUrl = 'http://' + exports.serverIP + '/Nicezhuanye/webapp/login.html';
	exports.comprehensiveURL = 'http://' + exports.serverIP + '/Nicezhuanye/social';
	exports.currentVersion = "2.0";
	exports.clientType = "MobileBrowser";
	//response status flag
	exports.statusSuccess = "success";
	exports.statusFail = "fail";
	//hot line number
	exports.hotLine = "4000913985";


/***/ },
/* 356 */,
/* 357 */,
/* 358 */,
/* 359 */,
/* 360 */,
/* 361 */,
/* 362 */,
/* 363 */
/*!***************************************!*\
  !*** ./~/immutable/dist/immutable.js ***!
  \***************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 *  Copyright (c) 2014-2015, Facebook, Inc.
	 *  All rights reserved.
	 *
	 *  This source code is licensed under the BSD-style license found in the
	 *  LICENSE file in the root directory of this source tree. An additional grant
	 *  of patent rights can be found in the PATENTS file in the same directory.
	 */
	
	(function (global, factory) {
	   true ? module.exports = factory() :
	  typeof define === 'function' && define.amd ? define(factory) :
	  (global.Immutable = factory());
	}(this, function () { 'use strict';var SLICE$0 = Array.prototype.slice;
	
	  function createClass(ctor, superClass) {
	    if (superClass) {
	      ctor.prototype = Object.create(superClass.prototype);
	    }
	    ctor.prototype.constructor = ctor;
	  }
	
	  function Iterable(value) {
	      return isIterable(value) ? value : Seq(value);
	    }
	
	
	  createClass(KeyedIterable, Iterable);
	    function KeyedIterable(value) {
	      return isKeyed(value) ? value : KeyedSeq(value);
	    }
	
	
	  createClass(IndexedIterable, Iterable);
	    function IndexedIterable(value) {
	      return isIndexed(value) ? value : IndexedSeq(value);
	    }
	
	
	  createClass(SetIterable, Iterable);
	    function SetIterable(value) {
	      return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);
	    }
	
	
	
	  function isIterable(maybeIterable) {
	    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);
	  }
	
	  function isKeyed(maybeKeyed) {
	    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);
	  }
	
	  function isIndexed(maybeIndexed) {
	    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);
	  }
	
	  function isAssociative(maybeAssociative) {
	    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);
	  }
	
	  function isOrdered(maybeOrdered) {
	    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);
	  }
	
	  Iterable.isIterable = isIterable;
	  Iterable.isKeyed = isKeyed;
	  Iterable.isIndexed = isIndexed;
	  Iterable.isAssociative = isAssociative;
	  Iterable.isOrdered = isOrdered;
	
	  Iterable.Keyed = KeyedIterable;
	  Iterable.Indexed = IndexedIterable;
	  Iterable.Set = SetIterable;
	
	
	  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';
	  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';
	  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';
	  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';
	
	  // Used for setting prototype methods that IE8 chokes on.
	  var DELETE = 'delete';
	
	  // Constants describing the size of trie nodes.
	  var SHIFT = 5; // Resulted in best performance after ______?
	  var SIZE = 1 << SHIFT;
	  var MASK = SIZE - 1;
	
	  // A consistent shared value representing "not set" which equals nothing other
	  // than itself, and nothing that could be provided externally.
	  var NOT_SET = {};
	
	  // Boolean references, Rough equivalent of `bool &`.
	  var CHANGE_LENGTH = { value: false };
	  var DID_ALTER = { value: false };
	
	  function MakeRef(ref) {
	    ref.value = false;
	    return ref;
	  }
	
	  function SetRef(ref) {
	    ref && (ref.value = true);
	  }
	
	  // A function which returns a value representing an "owner" for transient writes
	  // to tries. The return value will only ever equal itself, and will not equal
	  // the return of any subsequent call of this function.
	  function OwnerID() {}
	
	  // http://jsperf.com/copy-array-inline
	  function arrCopy(arr, offset) {
	    offset = offset || 0;
	    var len = Math.max(0, arr.length - offset);
	    var newArr = new Array(len);
	    for (var ii = 0; ii < len; ii++) {
	      newArr[ii] = arr[ii + offset];
	    }
	    return newArr;
	  }
	
	  function ensureSize(iter) {
	    if (iter.size === undefined) {
	      iter.size = iter.__iterate(returnTrue);
	    }
	    return iter.size;
	  }
	
	  function wrapIndex(iter, index) {
	    // This implements "is array index" which the ECMAString spec defines as:
	    //
	    //     A String property name P is an array index if and only if
	    //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal
	    //     to 2^32−1.
	    //
	    // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects
	    if (typeof index !== 'number') {
	      var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32
	      if ('' + uint32Index !== index || uint32Index === 4294967295) {
	        return NaN;
	      }
	      index = uint32Index;
	    }
	    return index < 0 ? ensureSize(iter) + index : index;
	  }
	
	  function returnTrue() {
	    return true;
	  }
	
	  function wholeSlice(begin, end, size) {
	    return (begin === 0 || (size !== undefined && begin <= -size)) &&
	      (end === undefined || (size !== undefined && end >= size));
	  }
	
	  function resolveBegin(begin, size) {
	    return resolveIndex(begin, size, 0);
	  }
	
	  function resolveEnd(end, size) {
	    return resolveIndex(end, size, size);
	  }
	
	  function resolveIndex(index, size, defaultIndex) {
	    return index === undefined ?
	      defaultIndex :
	      index < 0 ?
	        Math.max(0, size + index) :
	        size === undefined ?
	          index :
	          Math.min(size, index);
	  }
	
	  /* global Symbol */
	
	  var ITERATE_KEYS = 0;
	  var ITERATE_VALUES = 1;
	  var ITERATE_ENTRIES = 2;
	
	  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	  var FAUX_ITERATOR_SYMBOL = '@@iterator';
	
	  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;
	
	
	  function Iterator(next) {
	      this.next = next;
	    }
	
	    Iterator.prototype.toString = function() {
	      return '[Iterator]';
	    };
	
	
	  Iterator.KEYS = ITERATE_KEYS;
	  Iterator.VALUES = ITERATE_VALUES;
	  Iterator.ENTRIES = ITERATE_ENTRIES;
	
	  Iterator.prototype.inspect =
	  Iterator.prototype.toSource = function () { return this.toString(); }
	  Iterator.prototype[ITERATOR_SYMBOL] = function () {
	    return this;
	  };
	
	
	  function iteratorValue(type, k, v, iteratorResult) {
	    var value = type === 0 ? k : type === 1 ? v : [k, v];
	    iteratorResult ? (iteratorResult.value = value) : (iteratorResult = {
	      value: value, done: false
	    });
	    return iteratorResult;
	  }
	
	  function iteratorDone() {
	    return { value: undefined, done: true };
	  }
	
	  function hasIterator(maybeIterable) {
	    return !!getIteratorFn(maybeIterable);
	  }
	
	  function isIterator(maybeIterator) {
	    return maybeIterator && typeof maybeIterator.next === 'function';
	  }
	
	  function getIterator(iterable) {
	    var iteratorFn = getIteratorFn(iterable);
	    return iteratorFn && iteratorFn.call(iterable);
	  }
	
	  function getIteratorFn(iterable) {
	    var iteratorFn = iterable && (
	      (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||
	      iterable[FAUX_ITERATOR_SYMBOL]
	    );
	    if (typeof iteratorFn === 'function') {
	      return iteratorFn;
	    }
	  }
	
	  function isArrayLike(value) {
	    return value && typeof value.length === 'number';
	  }
	
	  createClass(Seq, Iterable);
	    function Seq(value) {
	      return value === null || value === undefined ? emptySequence() :
	        isIterable(value) ? value.toSeq() : seqFromValue(value);
	    }
	
	    Seq.of = function(/*...values*/) {
	      return Seq(arguments);
	    };
	
	    Seq.prototype.toSeq = function() {
	      return this;
	    };
	
	    Seq.prototype.toString = function() {
	      return this.__toString('Seq {', '}');
	    };
	
	    Seq.prototype.cacheResult = function() {
	      if (!this._cache && this.__iterateUncached) {
	        this._cache = this.entrySeq().toArray();
	        this.size = this._cache.length;
	      }
	      return this;
	    };
	
	    // abstract __iterateUncached(fn, reverse)
	
	    Seq.prototype.__iterate = function(fn, reverse) {
	      return seqIterate(this, fn, reverse, true);
	    };
	
	    // abstract __iteratorUncached(type, reverse)
	
	    Seq.prototype.__iterator = function(type, reverse) {
	      return seqIterator(this, type, reverse, true);
	    };
	
	
	
	  createClass(KeyedSeq, Seq);
	    function KeyedSeq(value) {
	      return value === null || value === undefined ?
	        emptySequence().toKeyedSeq() :
	        isIterable(value) ?
	          (isKeyed(value) ? value.toSeq() : value.fromEntrySeq()) :
	          keyedSeqFromValue(value);
	    }
	
	    KeyedSeq.prototype.toKeyedSeq = function() {
	      return this;
	    };
	
	
	
	  createClass(IndexedSeq, Seq);
	    function IndexedSeq(value) {
	      return value === null || value === undefined ? emptySequence() :
	        !isIterable(value) ? indexedSeqFromValue(value) :
	        isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();
	    }
	
	    IndexedSeq.of = function(/*...values*/) {
	      return IndexedSeq(arguments);
	    };
	
	    IndexedSeq.prototype.toIndexedSeq = function() {
	      return this;
	    };
	
	    IndexedSeq.prototype.toString = function() {
	      return this.__toString('Seq [', ']');
	    };
	
	    IndexedSeq.prototype.__iterate = function(fn, reverse) {
	      return seqIterate(this, fn, reverse, false);
	    };
	
	    IndexedSeq.prototype.__iterator = function(type, reverse) {
	      return seqIterator(this, type, reverse, false);
	    };
	
	
	
	  createClass(SetSeq, Seq);
	    function SetSeq(value) {
	      return (
	        value === null || value === undefined ? emptySequence() :
	        !isIterable(value) ? indexedSeqFromValue(value) :
	        isKeyed(value) ? value.entrySeq() : value
	      ).toSetSeq();
	    }
	
	    SetSeq.of = function(/*...values*/) {
	      return SetSeq(arguments);
	    };
	
	    SetSeq.prototype.toSetSeq = function() {
	      return this;
	    };
	
	
	
	  Seq.isSeq = isSeq;
	  Seq.Keyed = KeyedSeq;
	  Seq.Set = SetSeq;
	  Seq.Indexed = IndexedSeq;
	
	  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';
	
	  Seq.prototype[IS_SEQ_SENTINEL] = true;
	
	
	
	  createClass(ArraySeq, IndexedSeq);
	    function ArraySeq(array) {
	      this._array = array;
	      this.size = array.length;
	    }
	
	    ArraySeq.prototype.get = function(index, notSetValue) {
	      return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;
	    };
	
	    ArraySeq.prototype.__iterate = function(fn, reverse) {
	      var array = this._array;
	      var maxIndex = array.length - 1;
	      for (var ii = 0; ii <= maxIndex; ii++) {
	        if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {
	          return ii + 1;
	        }
	      }
	      return ii;
	    };
	
	    ArraySeq.prototype.__iterator = function(type, reverse) {
	      var array = this._array;
	      var maxIndex = array.length - 1;
	      var ii = 0;
	      return new Iterator(function() 
	        {return ii > maxIndex ?
	          iteratorDone() :
	          iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++])}
	      );
	    };
	
	
	
	  createClass(ObjectSeq, KeyedSeq);
	    function ObjectSeq(object) {
	      var keys = Object.keys(object);
	      this._object = object;
	      this._keys = keys;
	      this.size = keys.length;
	    }
	
	    ObjectSeq.prototype.get = function(key, notSetValue) {
	      if (notSetValue !== undefined && !this.has(key)) {
	        return notSetValue;
	      }
	      return this._object[key];
	    };
	
	    ObjectSeq.prototype.has = function(key) {
	      return this._object.hasOwnProperty(key);
	    };
	
	    ObjectSeq.prototype.__iterate = function(fn, reverse) {
	      var object = this._object;
	      var keys = this._keys;
	      var maxIndex = keys.length - 1;
	      for (var ii = 0; ii <= maxIndex; ii++) {
	        var key = keys[reverse ? maxIndex - ii : ii];
	        if (fn(object[key], key, this) === false) {
	          return ii + 1;
	        }
	      }
	      return ii;
	    };
	
	    ObjectSeq.prototype.__iterator = function(type, reverse) {
	      var object = this._object;
	      var keys = this._keys;
	      var maxIndex = keys.length - 1;
	      var ii = 0;
	      return new Iterator(function()  {
	        var key = keys[reverse ? maxIndex - ii : ii];
	        return ii++ > maxIndex ?
	          iteratorDone() :
	          iteratorValue(type, key, object[key]);
	      });
	    };
	
	  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;
	
	
	  createClass(IterableSeq, IndexedSeq);
	    function IterableSeq(iterable) {
	      this._iterable = iterable;
	      this.size = iterable.length || iterable.size;
	    }
	
	    IterableSeq.prototype.__iterateUncached = function(fn, reverse) {
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var iterable = this._iterable;
	      var iterator = getIterator(iterable);
	      var iterations = 0;
	      if (isIterator(iterator)) {
	        var step;
	        while (!(step = iterator.next()).done) {
	          if (fn(step.value, iterations++, this) === false) {
	            break;
	          }
	        }
	      }
	      return iterations;
	    };
	
	    IterableSeq.prototype.__iteratorUncached = function(type, reverse) {
	      if (reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      var iterable = this._iterable;
	      var iterator = getIterator(iterable);
	      if (!isIterator(iterator)) {
	        return new Iterator(iteratorDone);
	      }
	      var iterations = 0;
	      return new Iterator(function()  {
	        var step = iterator.next();
	        return step.done ? step : iteratorValue(type, iterations++, step.value);
	      });
	    };
	
	
	
	  createClass(IteratorSeq, IndexedSeq);
	    function IteratorSeq(iterator) {
	      this._iterator = iterator;
	      this._iteratorCache = [];
	    }
	
	    IteratorSeq.prototype.__iterateUncached = function(fn, reverse) {
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var iterator = this._iterator;
	      var cache = this._iteratorCache;
	      var iterations = 0;
	      while (iterations < cache.length) {
	        if (fn(cache[iterations], iterations++, this) === false) {
	          return iterations;
	        }
	      }
	      var step;
	      while (!(step = iterator.next()).done) {
	        var val = step.value;
	        cache[iterations] = val;
	        if (fn(val, iterations++, this) === false) {
	          break;
	        }
	      }
	      return iterations;
	    };
	
	    IteratorSeq.prototype.__iteratorUncached = function(type, reverse) {
	      if (reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      var iterator = this._iterator;
	      var cache = this._iteratorCache;
	      var iterations = 0;
	      return new Iterator(function()  {
	        if (iterations >= cache.length) {
	          var step = iterator.next();
	          if (step.done) {
	            return step;
	          }
	          cache[iterations] = step.value;
	        }
	        return iteratorValue(type, iterations, cache[iterations++]);
	      });
	    };
	
	
	
	
	  // # pragma Helper functions
	
	  function isSeq(maybeSeq) {
	    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);
	  }
	
	  var EMPTY_SEQ;
	
	  function emptySequence() {
	    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));
	  }
	
	  function keyedSeqFromValue(value) {
	    var seq =
	      Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() :
	      isIterator(value) ? new IteratorSeq(value).fromEntrySeq() :
	      hasIterator(value) ? new IterableSeq(value).fromEntrySeq() :
	      typeof value === 'object' ? new ObjectSeq(value) :
	      undefined;
	    if (!seq) {
	      throw new TypeError(
	        'Expected Array or iterable object of [k, v] entries, '+
	        'or keyed object: ' + value
	      );
	    }
	    return seq;
	  }
	
	  function indexedSeqFromValue(value) {
	    var seq = maybeIndexedSeqFromValue(value);
	    if (!seq) {
	      throw new TypeError(
	        'Expected Array or iterable object of values: ' + value
	      );
	    }
	    return seq;
	  }
	
	  function seqFromValue(value) {
	    var seq = maybeIndexedSeqFromValue(value) ||
	      (typeof value === 'object' && new ObjectSeq(value));
	    if (!seq) {
	      throw new TypeError(
	        'Expected Array or iterable object of values, or keyed object: ' + value
	      );
	    }
	    return seq;
	  }
	
	  function maybeIndexedSeqFromValue(value) {
	    return (
	      isArrayLike(value) ? new ArraySeq(value) :
	      isIterator(value) ? new IteratorSeq(value) :
	      hasIterator(value) ? new IterableSeq(value) :
	      undefined
	    );
	  }
	
	  function seqIterate(seq, fn, reverse, useKeys) {
	    var cache = seq._cache;
	    if (cache) {
	      var maxIndex = cache.length - 1;
	      for (var ii = 0; ii <= maxIndex; ii++) {
	        var entry = cache[reverse ? maxIndex - ii : ii];
	        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {
	          return ii + 1;
	        }
	      }
	      return ii;
	    }
	    return seq.__iterateUncached(fn, reverse);
	  }
	
	  function seqIterator(seq, type, reverse, useKeys) {
	    var cache = seq._cache;
	    if (cache) {
	      var maxIndex = cache.length - 1;
	      var ii = 0;
	      return new Iterator(function()  {
	        var entry = cache[reverse ? maxIndex - ii : ii];
	        return ii++ > maxIndex ?
	          iteratorDone() :
	          iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);
	      });
	    }
	    return seq.__iteratorUncached(type, reverse);
	  }
	
	  function fromJS(json, converter) {
	    return converter ?
	      fromJSWith(converter, json, '', {'': json}) :
	      fromJSDefault(json);
	  }
	
	  function fromJSWith(converter, json, key, parentJSON) {
	    if (Array.isArray(json)) {
	      return converter.call(parentJSON, key, IndexedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));
	    }
	    if (isPlainObj(json)) {
	      return converter.call(parentJSON, key, KeyedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));
	    }
	    return json;
	  }
	
	  function fromJSDefault(json) {
	    if (Array.isArray(json)) {
	      return IndexedSeq(json).map(fromJSDefault).toList();
	    }
	    if (isPlainObj(json)) {
	      return KeyedSeq(json).map(fromJSDefault).toMap();
	    }
	    return json;
	  }
	
	  function isPlainObj(value) {
	    return value && (value.constructor === Object || value.constructor === undefined);
	  }
	
	  /**
	   * An extension of the "same-value" algorithm as [described for use by ES6 Map
	   * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)
	   *
	   * NaN is considered the same as NaN, however -0 and 0 are considered the same
	   * value, which is different from the algorithm described by
	   * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).
	   *
	   * This is extended further to allow Objects to describe the values they
	   * represent, by way of `valueOf` or `equals` (and `hashCode`).
	   *
	   * Note: because of this extension, the key equality of Immutable.Map and the
	   * value equality of Immutable.Set will differ from ES6 Map and Set.
	   *
	   * ### Defining custom values
	   *
	   * The easiest way to describe the value an object represents is by implementing
	   * `valueOf`. For example, `Date` represents a value by returning a unix
	   * timestamp for `valueOf`:
	   *
	   *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...
	   *     var date2 = new Date(1234567890000);
	   *     date1.valueOf(); // 1234567890000
	   *     assert( date1 !== date2 );
	   *     assert( Immutable.is( date1, date2 ) );
	   *
	   * Note: overriding `valueOf` may have other implications if you use this object
	   * where JavaScript expects a primitive, such as implicit string coercion.
	   *
	   * For more complex types, especially collections, implementing `valueOf` may
	   * not be performant. An alternative is to implement `equals` and `hashCode`.
	   *
	   * `equals` takes another object, presumably of similar type, and returns true
	   * if the it is equal. Equality is symmetrical, so the same result should be
	   * returned if this and the argument are flipped.
	   *
	   *     assert( a.equals(b) === b.equals(a) );
	   *
	   * `hashCode` returns a 32bit integer number representing the object which will
	   * be used to determine how to store the value object in a Map or Set. You must
	   * provide both or neither methods, one must not exist without the other.
	   *
	   * Also, an important relationship between these methods must be upheld: if two
	   * values are equal, they *must* return the same hashCode. If the values are not
	   * equal, they might have the same hashCode; this is called a hash collision,
	   * and while undesirable for performance reasons, it is acceptable.
	   *
	   *     if (a.equals(b)) {
	   *       assert( a.hashCode() === b.hashCode() );
	   *     }
	   *
	   * All Immutable collections implement `equals` and `hashCode`.
	   *
	   */
	  function is(valueA, valueB) {
	    if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {
	      return true;
	    }
	    if (!valueA || !valueB) {
	      return false;
	    }
	    if (typeof valueA.valueOf === 'function' &&
	        typeof valueB.valueOf === 'function') {
	      valueA = valueA.valueOf();
	      valueB = valueB.valueOf();
	      if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {
	        return true;
	      }
	      if (!valueA || !valueB) {
	        return false;
	      }
	    }
	    if (typeof valueA.equals === 'function' &&
	        typeof valueB.equals === 'function' &&
	        valueA.equals(valueB)) {
	      return true;
	    }
	    return false;
	  }
	
	  function deepEqual(a, b) {
	    if (a === b) {
	      return true;
	    }
	
	    if (
	      !isIterable(b) ||
	      a.size !== undefined && b.size !== undefined && a.size !== b.size ||
	      a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash ||
	      isKeyed(a) !== isKeyed(b) ||
	      isIndexed(a) !== isIndexed(b) ||
	      isOrdered(a) !== isOrdered(b)
	    ) {
	      return false;
	    }
	
	    if (a.size === 0 && b.size === 0) {
	      return true;
	    }
	
	    var notAssociative = !isAssociative(a);
	
	    if (isOrdered(a)) {
	      var entries = a.entries();
	      return b.every(function(v, k)  {
	        var entry = entries.next().value;
	        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));
	      }) && entries.next().done;
	    }
	
	    var flipped = false;
	
	    if (a.size === undefined) {
	      if (b.size === undefined) {
	        if (typeof a.cacheResult === 'function') {
	          a.cacheResult();
	        }
	      } else {
	        flipped = true;
	        var _ = a;
	        a = b;
	        b = _;
	      }
	    }
	
	    var allEqual = true;
	    var bSize = b.__iterate(function(v, k)  {
	      if (notAssociative ? !a.has(v) :
	          flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {
	        allEqual = false;
	        return false;
	      }
	    });
	
	    return allEqual && a.size === bSize;
	  }
	
	  createClass(Repeat, IndexedSeq);
	
	    function Repeat(value, times) {
	      if (!(this instanceof Repeat)) {
	        return new Repeat(value, times);
	      }
	      this._value = value;
	      this.size = times === undefined ? Infinity : Math.max(0, times);
	      if (this.size === 0) {
	        if (EMPTY_REPEAT) {
	          return EMPTY_REPEAT;
	        }
	        EMPTY_REPEAT = this;
	      }
	    }
	
	    Repeat.prototype.toString = function() {
	      if (this.size === 0) {
	        return 'Repeat []';
	      }
	      return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';
	    };
	
	    Repeat.prototype.get = function(index, notSetValue) {
	      return this.has(index) ? this._value : notSetValue;
	    };
	
	    Repeat.prototype.includes = function(searchValue) {
	      return is(this._value, searchValue);
	    };
	
	    Repeat.prototype.slice = function(begin, end) {
	      var size = this.size;
	      return wholeSlice(begin, end, size) ? this :
	        new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));
	    };
	
	    Repeat.prototype.reverse = function() {
	      return this;
	    };
	
	    Repeat.prototype.indexOf = function(searchValue) {
	      if (is(this._value, searchValue)) {
	        return 0;
	      }
	      return -1;
	    };
	
	    Repeat.prototype.lastIndexOf = function(searchValue) {
	      if (is(this._value, searchValue)) {
	        return this.size;
	      }
	      return -1;
	    };
	
	    Repeat.prototype.__iterate = function(fn, reverse) {
	      for (var ii = 0; ii < this.size; ii++) {
	        if (fn(this._value, ii, this) === false) {
	          return ii + 1;
	        }
	      }
	      return ii;
	    };
	
	    Repeat.prototype.__iterator = function(type, reverse) {var this$0 = this;
	      var ii = 0;
	      return new Iterator(function() 
	        {return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone()}
	      );
	    };
	
	    Repeat.prototype.equals = function(other) {
	      return other instanceof Repeat ?
	        is(this._value, other._value) :
	        deepEqual(other);
	    };
	
	
	  var EMPTY_REPEAT;
	
	  function invariant(condition, error) {
	    if (!condition) throw new Error(error);
	  }
	
	  createClass(Range, IndexedSeq);
	
	    function Range(start, end, step) {
	      if (!(this instanceof Range)) {
	        return new Range(start, end, step);
	      }
	      invariant(step !== 0, 'Cannot step a Range by 0');
	      start = start || 0;
	      if (end === undefined) {
	        end = Infinity;
	      }
	      step = step === undefined ? 1 : Math.abs(step);
	      if (end < start) {
	        step = -step;
	      }
	      this._start = start;
	      this._end = end;
	      this._step = step;
	      this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);
	      if (this.size === 0) {
	        if (EMPTY_RANGE) {
	          return EMPTY_RANGE;
	        }
	        EMPTY_RANGE = this;
	      }
	    }
	
	    Range.prototype.toString = function() {
	      if (this.size === 0) {
	        return 'Range []';
	      }
	      return 'Range [ ' +
	        this._start + '...' + this._end +
	        (this._step !== 1 ? ' by ' + this._step : '') +
	      ' ]';
	    };
	
	    Range.prototype.get = function(index, notSetValue) {
	      return this.has(index) ?
	        this._start + wrapIndex(this, index) * this._step :
	        notSetValue;
	    };
	
	    Range.prototype.includes = function(searchValue) {
	      var possibleIndex = (searchValue - this._start) / this._step;
	      return possibleIndex >= 0 &&
	        possibleIndex < this.size &&
	        possibleIndex === Math.floor(possibleIndex);
	    };
	
	    Range.prototype.slice = function(begin, end) {
	      if (wholeSlice(begin, end, this.size)) {
	        return this;
	      }
	      begin = resolveBegin(begin, this.size);
	      end = resolveEnd(end, this.size);
	      if (end <= begin) {
	        return new Range(0, 0);
	      }
	      return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);
	    };
	
	    Range.prototype.indexOf = function(searchValue) {
	      var offsetValue = searchValue - this._start;
	      if (offsetValue % this._step === 0) {
	        var index = offsetValue / this._step;
	        if (index >= 0 && index < this.size) {
	          return index
	        }
	      }
	      return -1;
	    };
	
	    Range.prototype.lastIndexOf = function(searchValue) {
	      return this.indexOf(searchValue);
	    };
	
	    Range.prototype.__iterate = function(fn, reverse) {
	      var maxIndex = this.size - 1;
	      var step = this._step;
	      var value = reverse ? this._start + maxIndex * step : this._start;
	      for (var ii = 0; ii <= maxIndex; ii++) {
	        if (fn(value, ii, this) === false) {
	          return ii + 1;
	        }
	        value += reverse ? -step : step;
	      }
	      return ii;
	    };
	
	    Range.prototype.__iterator = function(type, reverse) {
	      var maxIndex = this.size - 1;
	      var step = this._step;
	      var value = reverse ? this._start + maxIndex * step : this._start;
	      var ii = 0;
	      return new Iterator(function()  {
	        var v = value;
	        value += reverse ? -step : step;
	        return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);
	      });
	    };
	
	    Range.prototype.equals = function(other) {
	      return other instanceof Range ?
	        this._start === other._start &&
	        this._end === other._end &&
	        this._step === other._step :
	        deepEqual(this, other);
	    };
	
	
	  var EMPTY_RANGE;
	
	  createClass(Collection, Iterable);
	    function Collection() {
	      throw TypeError('Abstract');
	    }
	
	
	  createClass(KeyedCollection, Collection);function KeyedCollection() {}
	
	  createClass(IndexedCollection, Collection);function IndexedCollection() {}
	
	  createClass(SetCollection, Collection);function SetCollection() {}
	
	
	  Collection.Keyed = KeyedCollection;
	  Collection.Indexed = IndexedCollection;
	  Collection.Set = SetCollection;
	
	  var imul =
	    typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ?
	    Math.imul :
	    function imul(a, b) {
	      a = a | 0; // int
	      b = b | 0; // int
	      var c = a & 0xffff;
	      var d = b & 0xffff;
	      // Shift by 0 fixes the sign on the high part.
	      return (c * d) + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0) | 0; // int
	    };
	
	  // v8 has an optimization for storing 31-bit signed numbers.
	  // Values which have either 00 or 11 as the high order bits qualify.
	  // This function drops the highest order bit in a signed number, maintaining
	  // the sign bit.
	  function smi(i32) {
	    return ((i32 >>> 1) & 0x40000000) | (i32 & 0xBFFFFFFF);
	  }
	
	  function hash(o) {
	    if (o === false || o === null || o === undefined) {
	      return 0;
	    }
	    if (typeof o.valueOf === 'function') {
	      o = o.valueOf();
	      if (o === false || o === null || o === undefined) {
	        return 0;
	      }
	    }
	    if (o === true) {
	      return 1;
	    }
	    var type = typeof o;
	    if (type === 'number') {
	      if (o !== o || o === Infinity) {
	        return 0;
	      }
	      var h = o | 0;
	      if (h !== o) {
	        h ^= o * 0xFFFFFFFF;
	      }
	      while (o > 0xFFFFFFFF) {
	        o /= 0xFFFFFFFF;
	        h ^= o;
	      }
	      return smi(h);
	    }
	    if (type === 'string') {
	      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);
	    }
	    if (typeof o.hashCode === 'function') {
	      return o.hashCode();
	    }
	    if (type === 'object') {
	      return hashJSObj(o);
	    }
	    if (typeof o.toString === 'function') {
	      return hashString(o.toString());
	    }
	    throw new Error('Value type ' + type + ' cannot be hashed.');
	  }
	
	  function cachedHashString(string) {
	    var hash = stringHashCache[string];
	    if (hash === undefined) {
	      hash = hashString(string);
	      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {
	        STRING_HASH_CACHE_SIZE = 0;
	        stringHashCache = {};
	      }
	      STRING_HASH_CACHE_SIZE++;
	      stringHashCache[string] = hash;
	    }
	    return hash;
	  }
	
	  // http://jsperf.com/hashing-strings
	  function hashString(string) {
	    // This is the hash from JVM
	    // The hash code for a string is computed as
	    // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],
	    // where s[i] is the ith character of the string and n is the length of
	    // the string. We "mod" the result to make it between 0 (inclusive) and 2^31
	    // (exclusive) by dropping high bits.
	    var hash = 0;
	    for (var ii = 0; ii < string.length; ii++) {
	      hash = 31 * hash + string.charCodeAt(ii) | 0;
	    }
	    return smi(hash);
	  }
	
	  function hashJSObj(obj) {
	    var hash;
	    if (usingWeakMap) {
	      hash = weakMap.get(obj);
	      if (hash !== undefined) {
	        return hash;
	      }
	    }
	
	    hash = obj[UID_HASH_KEY];
	    if (hash !== undefined) {
	      return hash;
	    }
	
	    if (!canDefineProperty) {
	      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];
	      if (hash !== undefined) {
	        return hash;
	      }
	
	      hash = getIENodeHash(obj);
	      if (hash !== undefined) {
	        return hash;
	      }
	    }
	
	    hash = ++objHashUID;
	    if (objHashUID & 0x40000000) {
	      objHashUID = 0;
	    }
	
	    if (usingWeakMap) {
	      weakMap.set(obj, hash);
	    } else if (isExtensible !== undefined && isExtensible(obj) === false) {
	      throw new Error('Non-extensible objects are not allowed as keys.');
	    } else if (canDefineProperty) {
	      Object.defineProperty(obj, UID_HASH_KEY, {
	        'enumerable': false,
	        'configurable': false,
	        'writable': false,
	        'value': hash
	      });
	    } else if (obj.propertyIsEnumerable !== undefined &&
	               obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {
	      // Since we can't define a non-enumerable property on the object
	      // we'll hijack one of the less-used non-enumerable properties to
	      // save our hash on it. Since this is a function it will not show up in
	      // `JSON.stringify` which is what we want.
	      obj.propertyIsEnumerable = function() {
	        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);
	      };
	      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;
	    } else if (obj.nodeType !== undefined) {
	      // At this point we couldn't get the IE `uniqueID` to use as a hash
	      // and we couldn't use a non-enumerable property to exploit the
	      // dontEnum bug so we simply add the `UID_HASH_KEY` on the node
	      // itself.
	      obj[UID_HASH_KEY] = hash;
	    } else {
	      throw new Error('Unable to set a non-enumerable property on object.');
	    }
	
	    return hash;
	  }
	
	  // Get references to ES5 object methods.
	  var isExtensible = Object.isExtensible;
	
	  // True if Object.defineProperty works as expected. IE8 fails this test.
	  var canDefineProperty = (function() {
	    try {
	      Object.defineProperty({}, '@', {});
	      return true;
	    } catch (e) {
	      return false;
	    }
	  }());
	
	  // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it
	  // and avoid memory leaks from the IE cloneNode bug.
	  function getIENodeHash(node) {
	    if (node && node.nodeType > 0) {
	      switch (node.nodeType) {
	        case 1: // Element
	          return node.uniqueID;
	        case 9: // Document
	          return node.documentElement && node.documentElement.uniqueID;
	      }
	    }
	  }
	
	  // If possible, use a WeakMap.
	  var usingWeakMap = typeof WeakMap === 'function';
	  var weakMap;
	  if (usingWeakMap) {
	    weakMap = new WeakMap();
	  }
	
	  var objHashUID = 0;
	
	  var UID_HASH_KEY = '__immutablehash__';
	  if (typeof Symbol === 'function') {
	    UID_HASH_KEY = Symbol(UID_HASH_KEY);
	  }
	
	  var STRING_HASH_CACHE_MIN_STRLEN = 16;
	  var STRING_HASH_CACHE_MAX_SIZE = 255;
	  var STRING_HASH_CACHE_SIZE = 0;
	  var stringHashCache = {};
	
	  function assertNotInfinite(size) {
	    invariant(
	      size !== Infinity,
	      'Cannot perform this action with an infinite size.'
	    );
	  }
	
	  createClass(Map, KeyedCollection);
	
	    // @pragma Construction
	
	    function Map(value) {
	      return value === null || value === undefined ? emptyMap() :
	        isMap(value) && !isOrdered(value) ? value :
	        emptyMap().withMutations(function(map ) {
	          var iter = KeyedIterable(value);
	          assertNotInfinite(iter.size);
	          iter.forEach(function(v, k)  {return map.set(k, v)});
	        });
	    }
	
	    Map.of = function() {var keyValues = SLICE$0.call(arguments, 0);
	      return emptyMap().withMutations(function(map ) {
	        for (var i = 0; i < keyValues.length; i += 2) {
	          if (i + 1 >= keyValues.length) {
	            throw new Error('Missing value for key: ' + keyValues[i]);
	          }
	          map.set(keyValues[i], keyValues[i + 1]);
	        }
	      });
	    };
	
	    Map.prototype.toString = function() {
	      return this.__toString('Map {', '}');
	    };
	
	    // @pragma Access
	
	    Map.prototype.get = function(k, notSetValue) {
	      return this._root ?
	        this._root.get(0, undefined, k, notSetValue) :
	        notSetValue;
	    };
	
	    // @pragma Modification
	
	    Map.prototype.set = function(k, v) {
	      return updateMap(this, k, v);
	    };
	
	    Map.prototype.setIn = function(keyPath, v) {
	      return this.updateIn(keyPath, NOT_SET, function()  {return v});
	    };
	
	    Map.prototype.remove = function(k) {
	      return updateMap(this, k, NOT_SET);
	    };
	
	    Map.prototype.deleteIn = function(keyPath) {
	      return this.updateIn(keyPath, function()  {return NOT_SET});
	    };
	
	    Map.prototype.update = function(k, notSetValue, updater) {
	      return arguments.length === 1 ?
	        k(this) :
	        this.updateIn([k], notSetValue, updater);
	    };
	
	    Map.prototype.updateIn = function(keyPath, notSetValue, updater) {
	      if (!updater) {
	        updater = notSetValue;
	        notSetValue = undefined;
	      }
	      var updatedValue = updateInDeepMap(
	        this,
	        forceIterator(keyPath),
	        notSetValue,
	        updater
	      );
	      return updatedValue === NOT_SET ? undefined : updatedValue;
	    };
	
	    Map.prototype.clear = function() {
	      if (this.size === 0) {
	        return this;
	      }
	      if (this.__ownerID) {
	        this.size = 0;
	        this._root = null;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return emptyMap();
	    };
	
	    // @pragma Composition
	
	    Map.prototype.merge = function(/*...iters*/) {
	      return mergeIntoMapWith(this, undefined, arguments);
	    };
	
	    Map.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return mergeIntoMapWith(this, merger, iters);
	    };
	
	    Map.prototype.mergeIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);
	      return this.updateIn(
	        keyPath,
	        emptyMap(),
	        function(m ) {return typeof m.merge === 'function' ?
	          m.merge.apply(m, iters) :
	          iters[iters.length - 1]}
	      );
	    };
	
	    Map.prototype.mergeDeep = function(/*...iters*/) {
	      return mergeIntoMapWith(this, deepMerger, arguments);
	    };
	
	    Map.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return mergeIntoMapWith(this, deepMergerWith(merger), iters);
	    };
	
	    Map.prototype.mergeDeepIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);
	      return this.updateIn(
	        keyPath,
	        emptyMap(),
	        function(m ) {return typeof m.mergeDeep === 'function' ?
	          m.mergeDeep.apply(m, iters) :
	          iters[iters.length - 1]}
	      );
	    };
	
	    Map.prototype.sort = function(comparator) {
	      // Late binding
	      return OrderedMap(sortFactory(this, comparator));
	    };
	
	    Map.prototype.sortBy = function(mapper, comparator) {
	      // Late binding
	      return OrderedMap(sortFactory(this, comparator, mapper));
	    };
	
	    // @pragma Mutability
	
	    Map.prototype.withMutations = function(fn) {
	      var mutable = this.asMutable();
	      fn(mutable);
	      return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;
	    };
	
	    Map.prototype.asMutable = function() {
	      return this.__ownerID ? this : this.__ensureOwner(new OwnerID());
	    };
	
	    Map.prototype.asImmutable = function() {
	      return this.__ensureOwner();
	    };
	
	    Map.prototype.wasAltered = function() {
	      return this.__altered;
	    };
	
	    Map.prototype.__iterator = function(type, reverse) {
	      return new MapIterator(this, type, reverse);
	    };
	
	    Map.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      var iterations = 0;
	      this._root && this._root.iterate(function(entry ) {
	        iterations++;
	        return fn(entry[1], entry[0], this$0);
	      }, reverse);
	      return iterations;
	    };
	
	    Map.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this.__altered = false;
	        return this;
	      }
	      return makeMap(this.size, this._root, ownerID, this.__hash);
	    };
	
	
	  function isMap(maybeMap) {
	    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);
	  }
	
	  Map.isMap = isMap;
	
	  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';
	
	  var MapPrototype = Map.prototype;
	  MapPrototype[IS_MAP_SENTINEL] = true;
	  MapPrototype[DELETE] = MapPrototype.remove;
	  MapPrototype.removeIn = MapPrototype.deleteIn;
	
	
	  // #pragma Trie Nodes
	
	
	
	    function ArrayMapNode(ownerID, entries) {
	      this.ownerID = ownerID;
	      this.entries = entries;
	    }
	
	    ArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      var entries = this.entries;
	      for (var ii = 0, len = entries.length; ii < len; ii++) {
	        if (is(key, entries[ii][0])) {
	          return entries[ii][1];
	        }
	      }
	      return notSetValue;
	    };
	
	    ArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      var removed = value === NOT_SET;
	
	      var entries = this.entries;
	      var idx = 0;
	      for (var len = entries.length; idx < len; idx++) {
	        if (is(key, entries[idx][0])) {
	          break;
	        }
	      }
	      var exists = idx < len;
	
	      if (exists ? entries[idx][1] === value : removed) {
	        return this;
	      }
	
	      SetRef(didAlter);
	      (removed || !exists) && SetRef(didChangeSize);
	
	      if (removed && entries.length === 1) {
	        return; // undefined
	      }
	
	      if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {
	        return createNodes(ownerID, entries, key, value);
	      }
	
	      var isEditable = ownerID && ownerID === this.ownerID;
	      var newEntries = isEditable ? entries : arrCopy(entries);
	
	      if (exists) {
	        if (removed) {
	          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());
	        } else {
	          newEntries[idx] = [key, value];
	        }
	      } else {
	        newEntries.push([key, value]);
	      }
	
	      if (isEditable) {
	        this.entries = newEntries;
	        return this;
	      }
	
	      return new ArrayMapNode(ownerID, newEntries);
	    };
	
	
	
	
	    function BitmapIndexedNode(ownerID, bitmap, nodes) {
	      this.ownerID = ownerID;
	      this.bitmap = bitmap;
	      this.nodes = nodes;
	    }
	
	    BitmapIndexedNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }
	      var bit = (1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK));
	      var bitmap = this.bitmap;
	      return (bitmap & bit) === 0 ? notSetValue :
	        this.nodes[popCount(bitmap & (bit - 1))].get(shift + SHIFT, keyHash, key, notSetValue);
	    };
	
	    BitmapIndexedNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }
	      var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
	      var bit = 1 << keyHashFrag;
	      var bitmap = this.bitmap;
	      var exists = (bitmap & bit) !== 0;
	
	      if (!exists && value === NOT_SET) {
	        return this;
	      }
	
	      var idx = popCount(bitmap & (bit - 1));
	      var nodes = this.nodes;
	      var node = exists ? nodes[idx] : undefined;
	      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);
	
	      if (newNode === node) {
	        return this;
	      }
	
	      if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {
	        return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);
	      }
	
	      if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {
	        return nodes[idx ^ 1];
	      }
	
	      if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {
	        return newNode;
	      }
	
	      var isEditable = ownerID && ownerID === this.ownerID;
	      var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;
	      var newNodes = exists ? newNode ?
	        setIn(nodes, idx, newNode, isEditable) :
	        spliceOut(nodes, idx, isEditable) :
	        spliceIn(nodes, idx, newNode, isEditable);
	
	      if (isEditable) {
	        this.bitmap = newBitmap;
	        this.nodes = newNodes;
	        return this;
	      }
	
	      return new BitmapIndexedNode(ownerID, newBitmap, newNodes);
	    };
	
	
	
	
	    function HashArrayMapNode(ownerID, count, nodes) {
	      this.ownerID = ownerID;
	      this.count = count;
	      this.nodes = nodes;
	    }
	
	    HashArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }
	      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
	      var node = this.nodes[idx];
	      return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;
	    };
	
	    HashArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }
	      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
	      var removed = value === NOT_SET;
	      var nodes = this.nodes;
	      var node = nodes[idx];
	
	      if (removed && !node) {
	        return this;
	      }
	
	      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);
	      if (newNode === node) {
	        return this;
	      }
	
	      var newCount = this.count;
	      if (!node) {
	        newCount++;
	      } else if (!newNode) {
	        newCount--;
	        if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {
	          return packNodes(ownerID, nodes, newCount, idx);
	        }
	      }
	
	      var isEditable = ownerID && ownerID === this.ownerID;
	      var newNodes = setIn(nodes, idx, newNode, isEditable);
	
	      if (isEditable) {
	        this.count = newCount;
	        this.nodes = newNodes;
	        return this;
	      }
	
	      return new HashArrayMapNode(ownerID, newCount, newNodes);
	    };
	
	
	
	
	    function HashCollisionNode(ownerID, keyHash, entries) {
	      this.ownerID = ownerID;
	      this.keyHash = keyHash;
	      this.entries = entries;
	    }
	
	    HashCollisionNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      var entries = this.entries;
	      for (var ii = 0, len = entries.length; ii < len; ii++) {
	        if (is(key, entries[ii][0])) {
	          return entries[ii][1];
	        }
	      }
	      return notSetValue;
	    };
	
	    HashCollisionNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      if (keyHash === undefined) {
	        keyHash = hash(key);
	      }
	
	      var removed = value === NOT_SET;
	
	      if (keyHash !== this.keyHash) {
	        if (removed) {
	          return this;
	        }
	        SetRef(didAlter);
	        SetRef(didChangeSize);
	        return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);
	      }
	
	      var entries = this.entries;
	      var idx = 0;
	      for (var len = entries.length; idx < len; idx++) {
	        if (is(key, entries[idx][0])) {
	          break;
	        }
	      }
	      var exists = idx < len;
	
	      if (exists ? entries[idx][1] === value : removed) {
	        return this;
	      }
	
	      SetRef(didAlter);
	      (removed || !exists) && SetRef(didChangeSize);
	
	      if (removed && len === 2) {
	        return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);
	      }
	
	      var isEditable = ownerID && ownerID === this.ownerID;
	      var newEntries = isEditable ? entries : arrCopy(entries);
	
	      if (exists) {
	        if (removed) {
	          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());
	        } else {
	          newEntries[idx] = [key, value];
	        }
	      } else {
	        newEntries.push([key, value]);
	      }
	
	      if (isEditable) {
	        this.entries = newEntries;
	        return this;
	      }
	
	      return new HashCollisionNode(ownerID, this.keyHash, newEntries);
	    };
	
	
	
	
	    function ValueNode(ownerID, keyHash, entry) {
	      this.ownerID = ownerID;
	      this.keyHash = keyHash;
	      this.entry = entry;
	    }
	
	    ValueNode.prototype.get = function(shift, keyHash, key, notSetValue) {
	      return is(key, this.entry[0]) ? this.entry[1] : notSetValue;
	    };
	
	    ValueNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	      var removed = value === NOT_SET;
	      var keyMatch = is(key, this.entry[0]);
	      if (keyMatch ? value === this.entry[1] : removed) {
	        return this;
	      }
	
	      SetRef(didAlter);
	
	      if (removed) {
	        SetRef(didChangeSize);
	        return; // undefined
	      }
	
	      if (keyMatch) {
	        if (ownerID && ownerID === this.ownerID) {
	          this.entry[1] = value;
	          return this;
	        }
	        return new ValueNode(ownerID, this.keyHash, [key, value]);
	      }
	
	      SetRef(didChangeSize);
	      return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);
	    };
	
	
	
	  // #pragma Iterators
	
	  ArrayMapNode.prototype.iterate =
	  HashCollisionNode.prototype.iterate = function (fn, reverse) {
	    var entries = this.entries;
	    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {
	      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {
	        return false;
	      }
	    }
	  }
	
	  BitmapIndexedNode.prototype.iterate =
	  HashArrayMapNode.prototype.iterate = function (fn, reverse) {
	    var nodes = this.nodes;
	    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {
	      var node = nodes[reverse ? maxIndex - ii : ii];
	      if (node && node.iterate(fn, reverse) === false) {
	        return false;
	      }
	    }
	  }
	
	  ValueNode.prototype.iterate = function (fn, reverse) {
	    return fn(this.entry);
	  }
	
	  createClass(MapIterator, Iterator);
	
	    function MapIterator(map, type, reverse) {
	      this._type = type;
	      this._reverse = reverse;
	      this._stack = map._root && mapIteratorFrame(map._root);
	    }
	
	    MapIterator.prototype.next = function() {
	      var type = this._type;
	      var stack = this._stack;
	      while (stack) {
	        var node = stack.node;
	        var index = stack.index++;
	        var maxIndex;
	        if (node.entry) {
	          if (index === 0) {
	            return mapIteratorValue(type, node.entry);
	          }
	        } else if (node.entries) {
	          maxIndex = node.entries.length - 1;
	          if (index <= maxIndex) {
	            return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);
	          }
	        } else {
	          maxIndex = node.nodes.length - 1;
	          if (index <= maxIndex) {
	            var subNode = node.nodes[this._reverse ? maxIndex - index : index];
	            if (subNode) {
	              if (subNode.entry) {
	                return mapIteratorValue(type, subNode.entry);
	              }
	              stack = this._stack = mapIteratorFrame(subNode, stack);
	            }
	            continue;
	          }
	        }
	        stack = this._stack = this._stack.__prev;
	      }
	      return iteratorDone();
	    };
	
	
	  function mapIteratorValue(type, entry) {
	    return iteratorValue(type, entry[0], entry[1]);
	  }
	
	  function mapIteratorFrame(node, prev) {
	    return {
	      node: node,
	      index: 0,
	      __prev: prev
	    };
	  }
	
	  function makeMap(size, root, ownerID, hash) {
	    var map = Object.create(MapPrototype);
	    map.size = size;
	    map._root = root;
	    map.__ownerID = ownerID;
	    map.__hash = hash;
	    map.__altered = false;
	    return map;
	  }
	
	  var EMPTY_MAP;
	  function emptyMap() {
	    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));
	  }
	
	  function updateMap(map, k, v) {
	    var newRoot;
	    var newSize;
	    if (!map._root) {
	      if (v === NOT_SET) {
	        return map;
	      }
	      newSize = 1;
	      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);
	    } else {
	      var didChangeSize = MakeRef(CHANGE_LENGTH);
	      var didAlter = MakeRef(DID_ALTER);
	      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);
	      if (!didAlter.value) {
	        return map;
	      }
	      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);
	    }
	    if (map.__ownerID) {
	      map.size = newSize;
	      map._root = newRoot;
	      map.__hash = undefined;
	      map.__altered = true;
	      return map;
	    }
	    return newRoot ? makeMap(newSize, newRoot) : emptyMap();
	  }
	
	  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {
	    if (!node) {
	      if (value === NOT_SET) {
	        return node;
	      }
	      SetRef(didAlter);
	      SetRef(didChangeSize);
	      return new ValueNode(ownerID, keyHash, [key, value]);
	    }
	    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);
	  }
	
	  function isLeafNode(node) {
	    return node.constructor === ValueNode || node.constructor === HashCollisionNode;
	  }
	
	  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {
	    if (node.keyHash === keyHash) {
	      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);
	    }
	
	    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;
	    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;
	
	    var newNode;
	    var nodes = idx1 === idx2 ?
	      [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] :
	      ((newNode = new ValueNode(ownerID, keyHash, entry)), idx1 < idx2 ? [node, newNode] : [newNode, node]);
	
	    return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);
	  }
	
	  function createNodes(ownerID, entries, key, value) {
	    if (!ownerID) {
	      ownerID = new OwnerID();
	    }
	    var node = new ValueNode(ownerID, hash(key), [key, value]);
	    for (var ii = 0; ii < entries.length; ii++) {
	      var entry = entries[ii];
	      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);
	    }
	    return node;
	  }
	
	  function packNodes(ownerID, nodes, count, excluding) {
	    var bitmap = 0;
	    var packedII = 0;
	    var packedNodes = new Array(count);
	    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {
	      var node = nodes[ii];
	      if (node !== undefined && ii !== excluding) {
	        bitmap |= bit;
	        packedNodes[packedII++] = node;
	      }
	    }
	    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);
	  }
	
	  function expandNodes(ownerID, nodes, bitmap, including, node) {
	    var count = 0;
	    var expandedNodes = new Array(SIZE);
	    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {
	      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;
	    }
	    expandedNodes[including] = node;
	    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);
	  }
	
	  function mergeIntoMapWith(map, merger, iterables) {
	    var iters = [];
	    for (var ii = 0; ii < iterables.length; ii++) {
	      var value = iterables[ii];
	      var iter = KeyedIterable(value);
	      if (!isIterable(value)) {
	        iter = iter.map(function(v ) {return fromJS(v)});
	      }
	      iters.push(iter);
	    }
	    return mergeIntoCollectionWith(map, merger, iters);
	  }
	
	  function deepMerger(existing, value, key) {
	    return existing && existing.mergeDeep && isIterable(value) ?
	      existing.mergeDeep(value) :
	      is(existing, value) ? existing : value;
	  }
	
	  function deepMergerWith(merger) {
	    return function(existing, value, key)  {
	      if (existing && existing.mergeDeepWith && isIterable(value)) {
	        return existing.mergeDeepWith(merger, value);
	      }
	      var nextValue = merger(existing, value, key);
	      return is(existing, nextValue) ? existing : nextValue;
	    };
	  }
	
	  function mergeIntoCollectionWith(collection, merger, iters) {
	    iters = iters.filter(function(x ) {return x.size !== 0});
	    if (iters.length === 0) {
	      return collection;
	    }
	    if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {
	      return collection.constructor(iters[0]);
	    }
	    return collection.withMutations(function(collection ) {
	      var mergeIntoMap = merger ?
	        function(value, key)  {
	          collection.update(key, NOT_SET, function(existing )
	            {return existing === NOT_SET ? value : merger(existing, value, key)}
	          );
	        } :
	        function(value, key)  {
	          collection.set(key, value);
	        }
	      for (var ii = 0; ii < iters.length; ii++) {
	        iters[ii].forEach(mergeIntoMap);
	      }
	    });
	  }
	
	  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {
	    var isNotSet = existing === NOT_SET;
	    var step = keyPathIter.next();
	    if (step.done) {
	      var existingValue = isNotSet ? notSetValue : existing;
	      var newValue = updater(existingValue);
	      return newValue === existingValue ? existing : newValue;
	    }
	    invariant(
	      isNotSet || (existing && existing.set),
	      'invalid keyPath'
	    );
	    var key = step.value;
	    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);
	    var nextUpdated = updateInDeepMap(
	      nextExisting,
	      keyPathIter,
	      notSetValue,
	      updater
	    );
	    return nextUpdated === nextExisting ? existing :
	      nextUpdated === NOT_SET ? existing.remove(key) :
	      (isNotSet ? emptyMap() : existing).set(key, nextUpdated);
	  }
	
	  function popCount(x) {
	    x = x - ((x >> 1) & 0x55555555);
	    x = (x & 0x33333333) + ((x >> 2) & 0x33333333);
	    x = (x + (x >> 4)) & 0x0f0f0f0f;
	    x = x + (x >> 8);
	    x = x + (x >> 16);
	    return x & 0x7f;
	  }
	
	  function setIn(array, idx, val, canEdit) {
	    var newArray = canEdit ? array : arrCopy(array);
	    newArray[idx] = val;
	    return newArray;
	  }
	
	  function spliceIn(array, idx, val, canEdit) {
	    var newLen = array.length + 1;
	    if (canEdit && idx + 1 === newLen) {
	      array[idx] = val;
	      return array;
	    }
	    var newArray = new Array(newLen);
	    var after = 0;
	    for (var ii = 0; ii < newLen; ii++) {
	      if (ii === idx) {
	        newArray[ii] = val;
	        after = -1;
	      } else {
	        newArray[ii] = array[ii + after];
	      }
	    }
	    return newArray;
	  }
	
	  function spliceOut(array, idx, canEdit) {
	    var newLen = array.length - 1;
	    if (canEdit && idx === newLen) {
	      array.pop();
	      return array;
	    }
	    var newArray = new Array(newLen);
	    var after = 0;
	    for (var ii = 0; ii < newLen; ii++) {
	      if (ii === idx) {
	        after = 1;
	      }
	      newArray[ii] = array[ii + after];
	    }
	    return newArray;
	  }
	
	  var MAX_ARRAY_MAP_SIZE = SIZE / 4;
	  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;
	  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;
	
	  createClass(List, IndexedCollection);
	
	    // @pragma Construction
	
	    function List(value) {
	      var empty = emptyList();
	      if (value === null || value === undefined) {
	        return empty;
	      }
	      if (isList(value)) {
	        return value;
	      }
	      var iter = IndexedIterable(value);
	      var size = iter.size;
	      if (size === 0) {
	        return empty;
	      }
	      assertNotInfinite(size);
	      if (size > 0 && size < SIZE) {
	        return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));
	      }
	      return empty.withMutations(function(list ) {
	        list.setSize(size);
	        iter.forEach(function(v, i)  {return list.set(i, v)});
	      });
	    }
	
	    List.of = function(/*...values*/) {
	      return this(arguments);
	    };
	
	    List.prototype.toString = function() {
	      return this.__toString('List [', ']');
	    };
	
	    // @pragma Access
	
	    List.prototype.get = function(index, notSetValue) {
	      index = wrapIndex(this, index);
	      if (index >= 0 && index < this.size) {
	        index += this._origin;
	        var node = listNodeFor(this, index);
	        return node && node.array[index & MASK];
	      }
	      return notSetValue;
	    };
	
	    // @pragma Modification
	
	    List.prototype.set = function(index, value) {
	      return updateList(this, index, value);
	    };
	
	    List.prototype.remove = function(index) {
	      return !this.has(index) ? this :
	        index === 0 ? this.shift() :
	        index === this.size - 1 ? this.pop() :
	        this.splice(index, 1);
	    };
	
	    List.prototype.insert = function(index, value) {
	      return this.splice(index, 0, value);
	    };
	
	    List.prototype.clear = function() {
	      if (this.size === 0) {
	        return this;
	      }
	      if (this.__ownerID) {
	        this.size = this._origin = this._capacity = 0;
	        this._level = SHIFT;
	        this._root = this._tail = null;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return emptyList();
	    };
	
	    List.prototype.push = function(/*...values*/) {
	      var values = arguments;
	      var oldSize = this.size;
	      return this.withMutations(function(list ) {
	        setListBounds(list, 0, oldSize + values.length);
	        for (var ii = 0; ii < values.length; ii++) {
	          list.set(oldSize + ii, values[ii]);
	        }
	      });
	    };
	
	    List.prototype.pop = function() {
	      return setListBounds(this, 0, -1);
	    };
	
	    List.prototype.unshift = function(/*...values*/) {
	      var values = arguments;
	      return this.withMutations(function(list ) {
	        setListBounds(list, -values.length);
	        for (var ii = 0; ii < values.length; ii++) {
	          list.set(ii, values[ii]);
	        }
	      });
	    };
	
	    List.prototype.shift = function() {
	      return setListBounds(this, 1);
	    };
	
	    // @pragma Composition
	
	    List.prototype.merge = function(/*...iters*/) {
	      return mergeIntoListWith(this, undefined, arguments);
	    };
	
	    List.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return mergeIntoListWith(this, merger, iters);
	    };
	
	    List.prototype.mergeDeep = function(/*...iters*/) {
	      return mergeIntoListWith(this, deepMerger, arguments);
	    };
	
	    List.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return mergeIntoListWith(this, deepMergerWith(merger), iters);
	    };
	
	    List.prototype.setSize = function(size) {
	      return setListBounds(this, 0, size);
	    };
	
	    // @pragma Iteration
	
	    List.prototype.slice = function(begin, end) {
	      var size = this.size;
	      if (wholeSlice(begin, end, size)) {
	        return this;
	      }
	      return setListBounds(
	        this,
	        resolveBegin(begin, size),
	        resolveEnd(end, size)
	      );
	    };
	
	    List.prototype.__iterator = function(type, reverse) {
	      var index = 0;
	      var values = iterateList(this, reverse);
	      return new Iterator(function()  {
	        var value = values();
	        return value === DONE ?
	          iteratorDone() :
	          iteratorValue(type, index++, value);
	      });
	    };
	
	    List.prototype.__iterate = function(fn, reverse) {
	      var index = 0;
	      var values = iterateList(this, reverse);
	      var value;
	      while ((value = values()) !== DONE) {
	        if (fn(value, index++, this) === false) {
	          break;
	        }
	      }
	      return index;
	    };
	
	    List.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        return this;
	      }
	      return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);
	    };
	
	
	  function isList(maybeList) {
	    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);
	  }
	
	  List.isList = isList;
	
	  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';
	
	  var ListPrototype = List.prototype;
	  ListPrototype[IS_LIST_SENTINEL] = true;
	  ListPrototype[DELETE] = ListPrototype.remove;
	  ListPrototype.setIn = MapPrototype.setIn;
	  ListPrototype.deleteIn =
	  ListPrototype.removeIn = MapPrototype.removeIn;
	  ListPrototype.update = MapPrototype.update;
	  ListPrototype.updateIn = MapPrototype.updateIn;
	  ListPrototype.mergeIn = MapPrototype.mergeIn;
	  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
	  ListPrototype.withMutations = MapPrototype.withMutations;
	  ListPrototype.asMutable = MapPrototype.asMutable;
	  ListPrototype.asImmutable = MapPrototype.asImmutable;
	  ListPrototype.wasAltered = MapPrototype.wasAltered;
	
	
	
	    function VNode(array, ownerID) {
	      this.array = array;
	      this.ownerID = ownerID;
	    }
	
	    // TODO: seems like these methods are very similar
	
	    VNode.prototype.removeBefore = function(ownerID, level, index) {
	      if (index === level ? 1 << level : 0 || this.array.length === 0) {
	        return this;
	      }
	      var originIndex = (index >>> level) & MASK;
	      if (originIndex >= this.array.length) {
	        return new VNode([], ownerID);
	      }
	      var removingFirst = originIndex === 0;
	      var newChild;
	      if (level > 0) {
	        var oldChild = this.array[originIndex];
	        newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);
	        if (newChild === oldChild && removingFirst) {
	          return this;
	        }
	      }
	      if (removingFirst && !newChild) {
	        return this;
	      }
	      var editable = editableVNode(this, ownerID);
	      if (!removingFirst) {
	        for (var ii = 0; ii < originIndex; ii++) {
	          editable.array[ii] = undefined;
	        }
	      }
	      if (newChild) {
	        editable.array[originIndex] = newChild;
	      }
	      return editable;
	    };
	
	    VNode.prototype.removeAfter = function(ownerID, level, index) {
	      if (index === (level ? 1 << level : 0) || this.array.length === 0) {
	        return this;
	      }
	      var sizeIndex = ((index - 1) >>> level) & MASK;
	      if (sizeIndex >= this.array.length) {
	        return this;
	      }
	
	      var newChild;
	      if (level > 0) {
	        var oldChild = this.array[sizeIndex];
	        newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);
	        if (newChild === oldChild && sizeIndex === this.array.length - 1) {
	          return this;
	        }
	      }
	
	      var editable = editableVNode(this, ownerID);
	      editable.array.splice(sizeIndex + 1);
	      if (newChild) {
	        editable.array[sizeIndex] = newChild;
	      }
	      return editable;
	    };
	
	
	
	  var DONE = {};
	
	  function iterateList(list, reverse) {
	    var left = list._origin;
	    var right = list._capacity;
	    var tailPos = getTailOffset(right);
	    var tail = list._tail;
	
	    return iterateNodeOrLeaf(list._root, list._level, 0);
	
	    function iterateNodeOrLeaf(node, level, offset) {
	      return level === 0 ?
	        iterateLeaf(node, offset) :
	        iterateNode(node, level, offset);
	    }
	
	    function iterateLeaf(node, offset) {
	      var array = offset === tailPos ? tail && tail.array : node && node.array;
	      var from = offset > left ? 0 : left - offset;
	      var to = right - offset;
	      if (to > SIZE) {
	        to = SIZE;
	      }
	      return function()  {
	        if (from === to) {
	          return DONE;
	        }
	        var idx = reverse ? --to : from++;
	        return array && array[idx];
	      };
	    }
	
	    function iterateNode(node, level, offset) {
	      var values;
	      var array = node && node.array;
	      var from = offset > left ? 0 : (left - offset) >> level;
	      var to = ((right - offset) >> level) + 1;
	      if (to > SIZE) {
	        to = SIZE;
	      }
	      return function()  {
	        do {
	          if (values) {
	            var value = values();
	            if (value !== DONE) {
	              return value;
	            }
	            values = null;
	          }
	          if (from === to) {
	            return DONE;
	          }
	          var idx = reverse ? --to : from++;
	          values = iterateNodeOrLeaf(
	            array && array[idx], level - SHIFT, offset + (idx << level)
	          );
	        } while (true);
	      };
	    }
	  }
	
	  function makeList(origin, capacity, level, root, tail, ownerID, hash) {
	    var list = Object.create(ListPrototype);
	    list.size = capacity - origin;
	    list._origin = origin;
	    list._capacity = capacity;
	    list._level = level;
	    list._root = root;
	    list._tail = tail;
	    list.__ownerID = ownerID;
	    list.__hash = hash;
	    list.__altered = false;
	    return list;
	  }
	
	  var EMPTY_LIST;
	  function emptyList() {
	    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));
	  }
	
	  function updateList(list, index, value) {
	    index = wrapIndex(list, index);
	
	    if (index !== index) {
	      return list;
	    }
	
	    if (index >= list.size || index < 0) {
	      return list.withMutations(function(list ) {
	        index < 0 ?
	          setListBounds(list, index).set(0, value) :
	          setListBounds(list, 0, index + 1).set(index, value)
	      });
	    }
	
	    index += list._origin;
	
	    var newTail = list._tail;
	    var newRoot = list._root;
	    var didAlter = MakeRef(DID_ALTER);
	    if (index >= getTailOffset(list._capacity)) {
	      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);
	    } else {
	      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);
	    }
	
	    if (!didAlter.value) {
	      return list;
	    }
	
	    if (list.__ownerID) {
	      list._root = newRoot;
	      list._tail = newTail;
	      list.__hash = undefined;
	      list.__altered = true;
	      return list;
	    }
	    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);
	  }
	
	  function updateVNode(node, ownerID, level, index, value, didAlter) {
	    var idx = (index >>> level) & MASK;
	    var nodeHas = node && idx < node.array.length;
	    if (!nodeHas && value === undefined) {
	      return node;
	    }
	
	    var newNode;
	
	    if (level > 0) {
	      var lowerNode = node && node.array[idx];
	      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);
	      if (newLowerNode === lowerNode) {
	        return node;
	      }
	      newNode = editableVNode(node, ownerID);
	      newNode.array[idx] = newLowerNode;
	      return newNode;
	    }
	
	    if (nodeHas && node.array[idx] === value) {
	      return node;
	    }
	
	    SetRef(didAlter);
	
	    newNode = editableVNode(node, ownerID);
	    if (value === undefined && idx === newNode.array.length - 1) {
	      newNode.array.pop();
	    } else {
	      newNode.array[idx] = value;
	    }
	    return newNode;
	  }
	
	  function editableVNode(node, ownerID) {
	    if (ownerID && node && ownerID === node.ownerID) {
	      return node;
	    }
	    return new VNode(node ? node.array.slice() : [], ownerID);
	  }
	
	  function listNodeFor(list, rawIndex) {
	    if (rawIndex >= getTailOffset(list._capacity)) {
	      return list._tail;
	    }
	    if (rawIndex < 1 << (list._level + SHIFT)) {
	      var node = list._root;
	      var level = list._level;
	      while (node && level > 0) {
	        node = node.array[(rawIndex >>> level) & MASK];
	        level -= SHIFT;
	      }
	      return node;
	    }
	  }
	
	  function setListBounds(list, begin, end) {
	    // Sanitize begin & end using this shorthand for ToInt32(argument)
	    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32
	    if (begin !== undefined) {
	      begin = begin | 0;
	    }
	    if (end !== undefined) {
	      end = end | 0;
	    }
	    var owner = list.__ownerID || new OwnerID();
	    var oldOrigin = list._origin;
	    var oldCapacity = list._capacity;
	    var newOrigin = oldOrigin + begin;
	    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;
	    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {
	      return list;
	    }
	
	    // If it's going to end after it starts, it's empty.
	    if (newOrigin >= newCapacity) {
	      return list.clear();
	    }
	
	    var newLevel = list._level;
	    var newRoot = list._root;
	
	    // New origin might need creating a higher root.
	    var offsetShift = 0;
	    while (newOrigin + offsetShift < 0) {
	      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);
	      newLevel += SHIFT;
	      offsetShift += 1 << newLevel;
	    }
	    if (offsetShift) {
	      newOrigin += offsetShift;
	      oldOrigin += offsetShift;
	      newCapacity += offsetShift;
	      oldCapacity += offsetShift;
	    }
	
	    var oldTailOffset = getTailOffset(oldCapacity);
	    var newTailOffset = getTailOffset(newCapacity);
	
	    // New size might need creating a higher root.
	    while (newTailOffset >= 1 << (newLevel + SHIFT)) {
	      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);
	      newLevel += SHIFT;
	    }
	
	    // Locate or create the new tail.
	    var oldTail = list._tail;
	    var newTail = newTailOffset < oldTailOffset ?
	      listNodeFor(list, newCapacity - 1) :
	      newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;
	
	    // Merge Tail into tree.
	    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {
	      newRoot = editableVNode(newRoot, owner);
	      var node = newRoot;
	      for (var level = newLevel; level > SHIFT; level -= SHIFT) {
	        var idx = (oldTailOffset >>> level) & MASK;
	        node = node.array[idx] = editableVNode(node.array[idx], owner);
	      }
	      node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;
	    }
	
	    // If the size has been reduced, there's a chance the tail needs to be trimmed.
	    if (newCapacity < oldCapacity) {
	      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);
	    }
	
	    // If the new origin is within the tail, then we do not need a root.
	    if (newOrigin >= newTailOffset) {
	      newOrigin -= newTailOffset;
	      newCapacity -= newTailOffset;
	      newLevel = SHIFT;
	      newRoot = null;
	      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);
	
	    // Otherwise, if the root has been trimmed, garbage collect.
	    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {
	      offsetShift = 0;
	
	      // Identify the new top root node of the subtree of the old root.
	      while (newRoot) {
	        var beginIndex = (newOrigin >>> newLevel) & MASK;
	        if (beginIndex !== (newTailOffset >>> newLevel) & MASK) {
	          break;
	        }
	        if (beginIndex) {
	          offsetShift += (1 << newLevel) * beginIndex;
	        }
	        newLevel -= SHIFT;
	        newRoot = newRoot.array[beginIndex];
	      }
	
	      // Trim the new sides of the new root.
	      if (newRoot && newOrigin > oldOrigin) {
	        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);
	      }
	      if (newRoot && newTailOffset < oldTailOffset) {
	        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);
	      }
	      if (offsetShift) {
	        newOrigin -= offsetShift;
	        newCapacity -= offsetShift;
	      }
	    }
	
	    if (list.__ownerID) {
	      list.size = newCapacity - newOrigin;
	      list._origin = newOrigin;
	      list._capacity = newCapacity;
	      list._level = newLevel;
	      list._root = newRoot;
	      list._tail = newTail;
	      list.__hash = undefined;
	      list.__altered = true;
	      return list;
	    }
	    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);
	  }
	
	  function mergeIntoListWith(list, merger, iterables) {
	    var iters = [];
	    var maxSize = 0;
	    for (var ii = 0; ii < iterables.length; ii++) {
	      var value = iterables[ii];
	      var iter = IndexedIterable(value);
	      if (iter.size > maxSize) {
	        maxSize = iter.size;
	      }
	      if (!isIterable(value)) {
	        iter = iter.map(function(v ) {return fromJS(v)});
	      }
	      iters.push(iter);
	    }
	    if (maxSize > list.size) {
	      list = list.setSize(maxSize);
	    }
	    return mergeIntoCollectionWith(list, merger, iters);
	  }
	
	  function getTailOffset(size) {
	    return size < SIZE ? 0 : (((size - 1) >>> SHIFT) << SHIFT);
	  }
	
	  createClass(OrderedMap, Map);
	
	    // @pragma Construction
	
	    function OrderedMap(value) {
	      return value === null || value === undefined ? emptyOrderedMap() :
	        isOrderedMap(value) ? value :
	        emptyOrderedMap().withMutations(function(map ) {
	          var iter = KeyedIterable(value);
	          assertNotInfinite(iter.size);
	          iter.forEach(function(v, k)  {return map.set(k, v)});
	        });
	    }
	
	    OrderedMap.of = function(/*...values*/) {
	      return this(arguments);
	    };
	
	    OrderedMap.prototype.toString = function() {
	      return this.__toString('OrderedMap {', '}');
	    };
	
	    // @pragma Access
	
	    OrderedMap.prototype.get = function(k, notSetValue) {
	      var index = this._map.get(k);
	      return index !== undefined ? this._list.get(index)[1] : notSetValue;
	    };
	
	    // @pragma Modification
	
	    OrderedMap.prototype.clear = function() {
	      if (this.size === 0) {
	        return this;
	      }
	      if (this.__ownerID) {
	        this.size = 0;
	        this._map.clear();
	        this._list.clear();
	        return this;
	      }
	      return emptyOrderedMap();
	    };
	
	    OrderedMap.prototype.set = function(k, v) {
	      return updateOrderedMap(this, k, v);
	    };
	
	    OrderedMap.prototype.remove = function(k) {
	      return updateOrderedMap(this, k, NOT_SET);
	    };
	
	    OrderedMap.prototype.wasAltered = function() {
	      return this._map.wasAltered() || this._list.wasAltered();
	    };
	
	    OrderedMap.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return this._list.__iterate(
	        function(entry ) {return entry && fn(entry[1], entry[0], this$0)},
	        reverse
	      );
	    };
	
	    OrderedMap.prototype.__iterator = function(type, reverse) {
	      return this._list.fromEntrySeq().__iterator(type, reverse);
	    };
	
	    OrderedMap.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      var newMap = this._map.__ensureOwner(ownerID);
	      var newList = this._list.__ensureOwner(ownerID);
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this._map = newMap;
	        this._list = newList;
	        return this;
	      }
	      return makeOrderedMap(newMap, newList, ownerID, this.__hash);
	    };
	
	
	  function isOrderedMap(maybeOrderedMap) {
	    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);
	  }
	
	  OrderedMap.isOrderedMap = isOrderedMap;
	
	  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;
	  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;
	
	
	
	  function makeOrderedMap(map, list, ownerID, hash) {
	    var omap = Object.create(OrderedMap.prototype);
	    omap.size = map ? map.size : 0;
	    omap._map = map;
	    omap._list = list;
	    omap.__ownerID = ownerID;
	    omap.__hash = hash;
	    return omap;
	  }
	
	  var EMPTY_ORDERED_MAP;
	  function emptyOrderedMap() {
	    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));
	  }
	
	  function updateOrderedMap(omap, k, v) {
	    var map = omap._map;
	    var list = omap._list;
	    var i = map.get(k);
	    var has = i !== undefined;
	    var newMap;
	    var newList;
	    if (v === NOT_SET) { // removed
	      if (!has) {
	        return omap;
	      }
	      if (list.size >= SIZE && list.size >= map.size * 2) {
	        newList = list.filter(function(entry, idx)  {return entry !== undefined && i !== idx});
	        newMap = newList.toKeyedSeq().map(function(entry ) {return entry[0]}).flip().toMap();
	        if (omap.__ownerID) {
	          newMap.__ownerID = newList.__ownerID = omap.__ownerID;
	        }
	      } else {
	        newMap = map.remove(k);
	        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);
	      }
	    } else {
	      if (has) {
	        if (v === list.get(i)[1]) {
	          return omap;
	        }
	        newMap = map;
	        newList = list.set(i, [k, v]);
	      } else {
	        newMap = map.set(k, list.size);
	        newList = list.set(list.size, [k, v]);
	      }
	    }
	    if (omap.__ownerID) {
	      omap.size = newMap.size;
	      omap._map = newMap;
	      omap._list = newList;
	      omap.__hash = undefined;
	      return omap;
	    }
	    return makeOrderedMap(newMap, newList);
	  }
	
	  createClass(ToKeyedSequence, KeyedSeq);
	    function ToKeyedSequence(indexed, useKeys) {
	      this._iter = indexed;
	      this._useKeys = useKeys;
	      this.size = indexed.size;
	    }
	
	    ToKeyedSequence.prototype.get = function(key, notSetValue) {
	      return this._iter.get(key, notSetValue);
	    };
	
	    ToKeyedSequence.prototype.has = function(key) {
	      return this._iter.has(key);
	    };
	
	    ToKeyedSequence.prototype.valueSeq = function() {
	      return this._iter.valueSeq();
	    };
	
	    ToKeyedSequence.prototype.reverse = function() {var this$0 = this;
	      var reversedSequence = reverseFactory(this, true);
	      if (!this._useKeys) {
	        reversedSequence.valueSeq = function()  {return this$0._iter.toSeq().reverse()};
	      }
	      return reversedSequence;
	    };
	
	    ToKeyedSequence.prototype.map = function(mapper, context) {var this$0 = this;
	      var mappedSequence = mapFactory(this, mapper, context);
	      if (!this._useKeys) {
	        mappedSequence.valueSeq = function()  {return this$0._iter.toSeq().map(mapper, context)};
	      }
	      return mappedSequence;
	    };
	
	    ToKeyedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      var ii;
	      return this._iter.__iterate(
	        this._useKeys ?
	          function(v, k)  {return fn(v, k, this$0)} :
	          ((ii = reverse ? resolveSize(this) : 0),
	            function(v ) {return fn(v, reverse ? --ii : ii++, this$0)}),
	        reverse
	      );
	    };
	
	    ToKeyedSequence.prototype.__iterator = function(type, reverse) {
	      if (this._useKeys) {
	        return this._iter.__iterator(type, reverse);
	      }
	      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
	      var ii = reverse ? resolveSize(this) : 0;
	      return new Iterator(function()  {
	        var step = iterator.next();
	        return step.done ? step :
	          iteratorValue(type, reverse ? --ii : ii++, step.value, step);
	      });
	    };
	
	  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;
	
	
	  createClass(ToIndexedSequence, IndexedSeq);
	    function ToIndexedSequence(iter) {
	      this._iter = iter;
	      this.size = iter.size;
	    }
	
	    ToIndexedSequence.prototype.includes = function(value) {
	      return this._iter.includes(value);
	    };
	
	    ToIndexedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      var iterations = 0;
	      return this._iter.__iterate(function(v ) {return fn(v, iterations++, this$0)}, reverse);
	    };
	
	    ToIndexedSequence.prototype.__iterator = function(type, reverse) {
	      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
	      var iterations = 0;
	      return new Iterator(function()  {
	        var step = iterator.next();
	        return step.done ? step :
	          iteratorValue(type, iterations++, step.value, step)
	      });
	    };
	
	
	
	  createClass(ToSetSequence, SetSeq);
	    function ToSetSequence(iter) {
	      this._iter = iter;
	      this.size = iter.size;
	    }
	
	    ToSetSequence.prototype.has = function(key) {
	      return this._iter.includes(key);
	    };
	
	    ToSetSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return this._iter.__iterate(function(v ) {return fn(v, v, this$0)}, reverse);
	    };
	
	    ToSetSequence.prototype.__iterator = function(type, reverse) {
	      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
	      return new Iterator(function()  {
	        var step = iterator.next();
	        return step.done ? step :
	          iteratorValue(type, step.value, step.value, step);
	      });
	    };
	
	
	
	  createClass(FromEntriesSequence, KeyedSeq);
	    function FromEntriesSequence(entries) {
	      this._iter = entries;
	      this.size = entries.size;
	    }
	
	    FromEntriesSequence.prototype.entrySeq = function() {
	      return this._iter.toSeq();
	    };
	
	    FromEntriesSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return this._iter.__iterate(function(entry ) {
	        // Check if entry exists first so array access doesn't throw for holes
	        // in the parent iteration.
	        if (entry) {
	          validateEntry(entry);
	          var indexedIterable = isIterable(entry);
	          return fn(
	            indexedIterable ? entry.get(1) : entry[1],
	            indexedIterable ? entry.get(0) : entry[0],
	            this$0
	          );
	        }
	      }, reverse);
	    };
	
	    FromEntriesSequence.prototype.__iterator = function(type, reverse) {
	      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);
	      return new Iterator(function()  {
	        while (true) {
	          var step = iterator.next();
	          if (step.done) {
	            return step;
	          }
	          var entry = step.value;
	          // Check if entry exists first so array access doesn't throw for holes
	          // in the parent iteration.
	          if (entry) {
	            validateEntry(entry);
	            var indexedIterable = isIterable(entry);
	            return iteratorValue(
	              type,
	              indexedIterable ? entry.get(0) : entry[0],
	              indexedIterable ? entry.get(1) : entry[1],
	              step
	            );
	          }
	        }
	      });
	    };
	
	
	  ToIndexedSequence.prototype.cacheResult =
	  ToKeyedSequence.prototype.cacheResult =
	  ToSetSequence.prototype.cacheResult =
	  FromEntriesSequence.prototype.cacheResult =
	    cacheResultThrough;
	
	
	  function flipFactory(iterable) {
	    var flipSequence = makeSequence(iterable);
	    flipSequence._iter = iterable;
	    flipSequence.size = iterable.size;
	    flipSequence.flip = function()  {return iterable};
	    flipSequence.reverse = function () {
	      var reversedSequence = iterable.reverse.apply(this); // super.reverse()
	      reversedSequence.flip = function()  {return iterable.reverse()};
	      return reversedSequence;
	    };
	    flipSequence.has = function(key ) {return iterable.includes(key)};
	    flipSequence.includes = function(key ) {return iterable.has(key)};
	    flipSequence.cacheResult = cacheResultThrough;
	    flipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
	      return iterable.__iterate(function(v, k)  {return fn(k, v, this$0) !== false}, reverse);
	    }
	    flipSequence.__iteratorUncached = function(type, reverse) {
	      if (type === ITERATE_ENTRIES) {
	        var iterator = iterable.__iterator(type, reverse);
	        return new Iterator(function()  {
	          var step = iterator.next();
	          if (!step.done) {
	            var k = step.value[0];
	            step.value[0] = step.value[1];
	            step.value[1] = k;
	          }
	          return step;
	        });
	      }
	      return iterable.__iterator(
	        type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,
	        reverse
	      );
	    }
	    return flipSequence;
	  }
	
	
	  function mapFactory(iterable, mapper, context) {
	    var mappedSequence = makeSequence(iterable);
	    mappedSequence.size = iterable.size;
	    mappedSequence.has = function(key ) {return iterable.has(key)};
	    mappedSequence.get = function(key, notSetValue)  {
	      var v = iterable.get(key, NOT_SET);
	      return v === NOT_SET ?
	        notSetValue :
	        mapper.call(context, v, key, iterable);
	    };
	    mappedSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
	      return iterable.__iterate(
	        function(v, k, c)  {return fn(mapper.call(context, v, k, c), k, this$0) !== false},
	        reverse
	      );
	    }
	    mappedSequence.__iteratorUncached = function (type, reverse) {
	      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
	      return new Iterator(function()  {
	        var step = iterator.next();
	        if (step.done) {
	          return step;
	        }
	        var entry = step.value;
	        var key = entry[0];
	        return iteratorValue(
	          type,
	          key,
	          mapper.call(context, entry[1], key, iterable),
	          step
	        );
	      });
	    }
	    return mappedSequence;
	  }
	
	
	  function reverseFactory(iterable, useKeys) {
	    var reversedSequence = makeSequence(iterable);
	    reversedSequence._iter = iterable;
	    reversedSequence.size = iterable.size;
	    reversedSequence.reverse = function()  {return iterable};
	    if (iterable.flip) {
	      reversedSequence.flip = function () {
	        var flipSequence = flipFactory(iterable);
	        flipSequence.reverse = function()  {return iterable.flip()};
	        return flipSequence;
	      };
	    }
	    reversedSequence.get = function(key, notSetValue) 
	      {return iterable.get(useKeys ? key : -1 - key, notSetValue)};
	    reversedSequence.has = function(key )
	      {return iterable.has(useKeys ? key : -1 - key)};
	    reversedSequence.includes = function(value ) {return iterable.includes(value)};
	    reversedSequence.cacheResult = cacheResultThrough;
	    reversedSequence.__iterate = function (fn, reverse) {var this$0 = this;
	      return iterable.__iterate(function(v, k)  {return fn(v, k, this$0)}, !reverse);
	    };
	    reversedSequence.__iterator =
	      function(type, reverse)  {return iterable.__iterator(type, !reverse)};
	    return reversedSequence;
	  }
	
	
	  function filterFactory(iterable, predicate, context, useKeys) {
	    var filterSequence = makeSequence(iterable);
	    if (useKeys) {
	      filterSequence.has = function(key ) {
	        var v = iterable.get(key, NOT_SET);
	        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);
	      };
	      filterSequence.get = function(key, notSetValue)  {
	        var v = iterable.get(key, NOT_SET);
	        return v !== NOT_SET && predicate.call(context, v, key, iterable) ?
	          v : notSetValue;
	      };
	    }
	    filterSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
	      var iterations = 0;
	      iterable.__iterate(function(v, k, c)  {
	        if (predicate.call(context, v, k, c)) {
	          iterations++;
	          return fn(v, useKeys ? k : iterations - 1, this$0);
	        }
	      }, reverse);
	      return iterations;
	    };
	    filterSequence.__iteratorUncached = function (type, reverse) {
	      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
	      var iterations = 0;
	      return new Iterator(function()  {
	        while (true) {
	          var step = iterator.next();
	          if (step.done) {
	            return step;
	          }
	          var entry = step.value;
	          var key = entry[0];
	          var value = entry[1];
	          if (predicate.call(context, value, key, iterable)) {
	            return iteratorValue(type, useKeys ? key : iterations++, value, step);
	          }
	        }
	      });
	    }
	    return filterSequence;
	  }
	
	
	  function countByFactory(iterable, grouper, context) {
	    var groups = Map().asMutable();
	    iterable.__iterate(function(v, k)  {
	      groups.update(
	        grouper.call(context, v, k, iterable),
	        0,
	        function(a ) {return a + 1}
	      );
	    });
	    return groups.asImmutable();
	  }
	
	
	  function groupByFactory(iterable, grouper, context) {
	    var isKeyedIter = isKeyed(iterable);
	    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();
	    iterable.__iterate(function(v, k)  {
	      groups.update(
	        grouper.call(context, v, k, iterable),
	        function(a ) {return (a = a || [], a.push(isKeyedIter ? [k, v] : v), a)}
	      );
	    });
	    var coerce = iterableClass(iterable);
	    return groups.map(function(arr ) {return reify(iterable, coerce(arr))});
	  }
	
	
	  function sliceFactory(iterable, begin, end, useKeys) {
	    var originalSize = iterable.size;
	
	    // Sanitize begin & end using this shorthand for ToInt32(argument)
	    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32
	    if (begin !== undefined) {
	      begin = begin | 0;
	    }
	    if (end !== undefined) {
	      if (end === Infinity) {
	        end = originalSize;
	      } else {
	        end = end | 0;
	      }
	    }
	
	    if (wholeSlice(begin, end, originalSize)) {
	      return iterable;
	    }
	
	    var resolvedBegin = resolveBegin(begin, originalSize);
	    var resolvedEnd = resolveEnd(end, originalSize);
	
	    // begin or end will be NaN if they were provided as negative numbers and
	    // this iterable's size is unknown. In that case, cache first so there is
	    // a known size and these do not resolve to NaN.
	    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {
	      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);
	    }
	
	    // Note: resolvedEnd is undefined when the original sequence's length is
	    // unknown and this slice did not supply an end and should contain all
	    // elements after resolvedBegin.
	    // In that case, resolvedSize will be NaN and sliceSize will remain undefined.
	    var resolvedSize = resolvedEnd - resolvedBegin;
	    var sliceSize;
	    if (resolvedSize === resolvedSize) {
	      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;
	    }
	
	    var sliceSeq = makeSequence(iterable);
	
	    // If iterable.size is undefined, the size of the realized sliceSeq is
	    // unknown at this point unless the number of items to slice is 0
	    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;
	
	    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {
	      sliceSeq.get = function (index, notSetValue) {
	        index = wrapIndex(this, index);
	        return index >= 0 && index < sliceSize ?
	          iterable.get(index + resolvedBegin, notSetValue) :
	          notSetValue;
	      }
	    }
	
	    sliceSeq.__iterateUncached = function(fn, reverse) {var this$0 = this;
	      if (sliceSize === 0) {
	        return 0;
	      }
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var skipped = 0;
	      var isSkipping = true;
	      var iterations = 0;
	      iterable.__iterate(function(v, k)  {
	        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {
	          iterations++;
	          return fn(v, useKeys ? k : iterations - 1, this$0) !== false &&
	                 iterations !== sliceSize;
	        }
	      });
	      return iterations;
	    };
	
	    sliceSeq.__iteratorUncached = function(type, reverse) {
	      if (sliceSize !== 0 && reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      // Don't bother instantiating parent iterator if taking 0.
	      var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);
	      var skipped = 0;
	      var iterations = 0;
	      return new Iterator(function()  {
	        while (skipped++ < resolvedBegin) {
	          iterator.next();
	        }
	        if (++iterations > sliceSize) {
	          return iteratorDone();
	        }
	        var step = iterator.next();
	        if (useKeys || type === ITERATE_VALUES) {
	          return step;
	        } else if (type === ITERATE_KEYS) {
	          return iteratorValue(type, iterations - 1, undefined, step);
	        } else {
	          return iteratorValue(type, iterations - 1, step.value[1], step);
	        }
	      });
	    }
	
	    return sliceSeq;
	  }
	
	
	  function takeWhileFactory(iterable, predicate, context) {
	    var takeSequence = makeSequence(iterable);
	    takeSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var iterations = 0;
	      iterable.__iterate(function(v, k, c) 
	        {return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0)}
	      );
	      return iterations;
	    };
	    takeSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;
	      if (reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
	      var iterating = true;
	      return new Iterator(function()  {
	        if (!iterating) {
	          return iteratorDone();
	        }
	        var step = iterator.next();
	        if (step.done) {
	          return step;
	        }
	        var entry = step.value;
	        var k = entry[0];
	        var v = entry[1];
	        if (!predicate.call(context, v, k, this$0)) {
	          iterating = false;
	          return iteratorDone();
	        }
	        return type === ITERATE_ENTRIES ? step :
	          iteratorValue(type, k, v, step);
	      });
	    };
	    return takeSequence;
	  }
	
	
	  function skipWhileFactory(iterable, predicate, context, useKeys) {
	    var skipSequence = makeSequence(iterable);
	    skipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;
	      if (reverse) {
	        return this.cacheResult().__iterate(fn, reverse);
	      }
	      var isSkipping = true;
	      var iterations = 0;
	      iterable.__iterate(function(v, k, c)  {
	        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {
	          iterations++;
	          return fn(v, useKeys ? k : iterations - 1, this$0);
	        }
	      });
	      return iterations;
	    };
	    skipSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;
	      if (reverse) {
	        return this.cacheResult().__iterator(type, reverse);
	      }
	      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);
	      var skipping = true;
	      var iterations = 0;
	      return new Iterator(function()  {
	        var step, k, v;
	        do {
	          step = iterator.next();
	          if (step.done) {
	            if (useKeys || type === ITERATE_VALUES) {
	              return step;
	            } else if (type === ITERATE_KEYS) {
	              return iteratorValue(type, iterations++, undefined, step);
	            } else {
	              return iteratorValue(type, iterations++, step.value[1], step);
	            }
	          }
	          var entry = step.value;
	          k = entry[0];
	          v = entry[1];
	          skipping && (skipping = predicate.call(context, v, k, this$0));
	        } while (skipping);
	        return type === ITERATE_ENTRIES ? step :
	          iteratorValue(type, k, v, step);
	      });
	    };
	    return skipSequence;
	  }
	
	
	  function concatFactory(iterable, values) {
	    var isKeyedIterable = isKeyed(iterable);
	    var iters = [iterable].concat(values).map(function(v ) {
	      if (!isIterable(v)) {
	        v = isKeyedIterable ?
	          keyedSeqFromValue(v) :
	          indexedSeqFromValue(Array.isArray(v) ? v : [v]);
	      } else if (isKeyedIterable) {
	        v = KeyedIterable(v);
	      }
	      return v;
	    }).filter(function(v ) {return v.size !== 0});
	
	    if (iters.length === 0) {
	      return iterable;
	    }
	
	    if (iters.length === 1) {
	      var singleton = iters[0];
	      if (singleton === iterable ||
	          isKeyedIterable && isKeyed(singleton) ||
	          isIndexed(iterable) && isIndexed(singleton)) {
	        return singleton;
	      }
	    }
	
	    var concatSeq = new ArraySeq(iters);
	    if (isKeyedIterable) {
	      concatSeq = concatSeq.toKeyedSeq();
	    } else if (!isIndexed(iterable)) {
	      concatSeq = concatSeq.toSetSeq();
	    }
	    concatSeq = concatSeq.flatten(true);
	    concatSeq.size = iters.reduce(
	      function(sum, seq)  {
	        if (sum !== undefined) {
	          var size = seq.size;
	          if (size !== undefined) {
	            return sum + size;
	          }
	        }
	      },
	      0
	    );
	    return concatSeq;
	  }
	
	
	  function flattenFactory(iterable, depth, useKeys) {
	    var flatSequence = makeSequence(iterable);
	    flatSequence.__iterateUncached = function(fn, reverse) {
	      var iterations = 0;
	      var stopped = false;
	      function flatDeep(iter, currentDepth) {var this$0 = this;
	        iter.__iterate(function(v, k)  {
	          if ((!depth || currentDepth < depth) && isIterable(v)) {
	            flatDeep(v, currentDepth + 1);
	          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {
	            stopped = true;
	          }
	          return !stopped;
	        }, reverse);
	      }
	      flatDeep(iterable, 0);
	      return iterations;
	    }
	    flatSequence.__iteratorUncached = function(type, reverse) {
	      var iterator = iterable.__iterator(type, reverse);
	      var stack = [];
	      var iterations = 0;
	      return new Iterator(function()  {
	        while (iterator) {
	          var step = iterator.next();
	          if (step.done !== false) {
	            iterator = stack.pop();
	            continue;
	          }
	          var v = step.value;
	          if (type === ITERATE_ENTRIES) {
	            v = v[1];
	          }
	          if ((!depth || stack.length < depth) && isIterable(v)) {
	            stack.push(iterator);
	            iterator = v.__iterator(type, reverse);
	          } else {
	            return useKeys ? step : iteratorValue(type, iterations++, v, step);
	          }
	        }
	        return iteratorDone();
	      });
	    }
	    return flatSequence;
	  }
	
	
	  function flatMapFactory(iterable, mapper, context) {
	    var coerce = iterableClass(iterable);
	    return iterable.toSeq().map(
	      function(v, k)  {return coerce(mapper.call(context, v, k, iterable))}
	    ).flatten(true);
	  }
	
	
	  function interposeFactory(iterable, separator) {
	    var interposedSequence = makeSequence(iterable);
	    interposedSequence.size = iterable.size && iterable.size * 2 -1;
	    interposedSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;
	      var iterations = 0;
	      iterable.__iterate(function(v, k) 
	        {return (!iterations || fn(separator, iterations++, this$0) !== false) &&
	        fn(v, iterations++, this$0) !== false},
	        reverse
	      );
	      return iterations;
	    };
	    interposedSequence.__iteratorUncached = function(type, reverse) {
	      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);
	      var iterations = 0;
	      var step;
	      return new Iterator(function()  {
	        if (!step || iterations % 2) {
	          step = iterator.next();
	          if (step.done) {
	            return step;
	          }
	        }
	        return iterations % 2 ?
	          iteratorValue(type, iterations++, separator) :
	          iteratorValue(type, iterations++, step.value, step);
	      });
	    };
	    return interposedSequence;
	  }
	
	
	  function sortFactory(iterable, comparator, mapper) {
	    if (!comparator) {
	      comparator = defaultComparator;
	    }
	    var isKeyedIterable = isKeyed(iterable);
	    var index = 0;
	    var entries = iterable.toSeq().map(
	      function(v, k)  {return [k, v, index++, mapper ? mapper(v, k, iterable) : v]}
	    ).toArray();
	    entries.sort(function(a, b)  {return comparator(a[3], b[3]) || a[2] - b[2]}).forEach(
	      isKeyedIterable ?
	      function(v, i)  { entries[i].length = 2; } :
	      function(v, i)  { entries[i] = v[1]; }
	    );
	    return isKeyedIterable ? KeyedSeq(entries) :
	      isIndexed(iterable) ? IndexedSeq(entries) :
	      SetSeq(entries);
	  }
	
	
	  function maxFactory(iterable, comparator, mapper) {
	    if (!comparator) {
	      comparator = defaultComparator;
	    }
	    if (mapper) {
	      var entry = iterable.toSeq()
	        .map(function(v, k)  {return [v, mapper(v, k, iterable)]})
	        .reduce(function(a, b)  {return maxCompare(comparator, a[1], b[1]) ? b : a});
	      return entry && entry[0];
	    } else {
	      return iterable.reduce(function(a, b)  {return maxCompare(comparator, a, b) ? b : a});
	    }
	  }
	
	  function maxCompare(comparator, a, b) {
	    var comp = comparator(b, a);
	    // b is considered the new max if the comparator declares them equal, but
	    // they are not equal and b is in fact a nullish value.
	    return (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) || comp > 0;
	  }
	
	
	  function zipWithFactory(keyIter, zipper, iters) {
	    var zipSequence = makeSequence(keyIter);
	    zipSequence.size = new ArraySeq(iters).map(function(i ) {return i.size}).min();
	    // Note: this a generic base implementation of __iterate in terms of
	    // __iterator which may be more generically useful in the future.
	    zipSequence.__iterate = function(fn, reverse) {
	      /* generic:
	      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);
	      var step;
	      var iterations = 0;
	      while (!(step = iterator.next()).done) {
	        iterations++;
	        if (fn(step.value[1], step.value[0], this) === false) {
	          break;
	        }
	      }
	      return iterations;
	      */
	      // indexed:
	      var iterator = this.__iterator(ITERATE_VALUES, reverse);
	      var step;
	      var iterations = 0;
	      while (!(step = iterator.next()).done) {
	        if (fn(step.value, iterations++, this) === false) {
	          break;
	        }
	      }
	      return iterations;
	    };
	    zipSequence.__iteratorUncached = function(type, reverse) {
	      var iterators = iters.map(function(i )
	        {return (i = Iterable(i), getIterator(reverse ? i.reverse() : i))}
	      );
	      var iterations = 0;
	      var isDone = false;
	      return new Iterator(function()  {
	        var steps;
	        if (!isDone) {
	          steps = iterators.map(function(i ) {return i.next()});
	          isDone = steps.some(function(s ) {return s.done});
	        }
	        if (isDone) {
	          return iteratorDone();
	        }
	        return iteratorValue(
	          type,
	          iterations++,
	          zipper.apply(null, steps.map(function(s ) {return s.value}))
	        );
	      });
	    };
	    return zipSequence
	  }
	
	
	  // #pragma Helper Functions
	
	  function reify(iter, seq) {
	    return isSeq(iter) ? seq : iter.constructor(seq);
	  }
	
	  function validateEntry(entry) {
	    if (entry !== Object(entry)) {
	      throw new TypeError('Expected [K, V] tuple: ' + entry);
	    }
	  }
	
	  function resolveSize(iter) {
	    assertNotInfinite(iter.size);
	    return ensureSize(iter);
	  }
	
	  function iterableClass(iterable) {
	    return isKeyed(iterable) ? KeyedIterable :
	      isIndexed(iterable) ? IndexedIterable :
	      SetIterable;
	  }
	
	  function makeSequence(iterable) {
	    return Object.create(
	      (
	        isKeyed(iterable) ? KeyedSeq :
	        isIndexed(iterable) ? IndexedSeq :
	        SetSeq
	      ).prototype
	    );
	  }
	
	  function cacheResultThrough() {
	    if (this._iter.cacheResult) {
	      this._iter.cacheResult();
	      this.size = this._iter.size;
	      return this;
	    } else {
	      return Seq.prototype.cacheResult.call(this);
	    }
	  }
	
	  function defaultComparator(a, b) {
	    return a > b ? 1 : a < b ? -1 : 0;
	  }
	
	  function forceIterator(keyPath) {
	    var iter = getIterator(keyPath);
	    if (!iter) {
	      // Array might not be iterable in this environment, so we need a fallback
	      // to our wrapped type.
	      if (!isArrayLike(keyPath)) {
	        throw new TypeError('Expected iterable or array-like: ' + keyPath);
	      }
	      iter = getIterator(Iterable(keyPath));
	    }
	    return iter;
	  }
	
	  createClass(Record, KeyedCollection);
	
	    function Record(defaultValues, name) {
	      var hasInitialized;
	
	      var RecordType = function Record(values) {
	        if (values instanceof RecordType) {
	          return values;
	        }
	        if (!(this instanceof RecordType)) {
	          return new RecordType(values);
	        }
	        if (!hasInitialized) {
	          hasInitialized = true;
	          var keys = Object.keys(defaultValues);
	          setProps(RecordTypePrototype, keys);
	          RecordTypePrototype.size = keys.length;
	          RecordTypePrototype._name = name;
	          RecordTypePrototype._keys = keys;
	          RecordTypePrototype._defaultValues = defaultValues;
	        }
	        this._map = Map(values);
	      };
	
	      var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);
	      RecordTypePrototype.constructor = RecordType;
	
	      return RecordType;
	    }
	
	    Record.prototype.toString = function() {
	      return this.__toString(recordName(this) + ' {', '}');
	    };
	
	    // @pragma Access
	
	    Record.prototype.has = function(k) {
	      return this._defaultValues.hasOwnProperty(k);
	    };
	
	    Record.prototype.get = function(k, notSetValue) {
	      if (!this.has(k)) {
	        return notSetValue;
	      }
	      var defaultVal = this._defaultValues[k];
	      return this._map ? this._map.get(k, defaultVal) : defaultVal;
	    };
	
	    // @pragma Modification
	
	    Record.prototype.clear = function() {
	      if (this.__ownerID) {
	        this._map && this._map.clear();
	        return this;
	      }
	      var RecordType = this.constructor;
	      return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));
	    };
	
	    Record.prototype.set = function(k, v) {
	      if (!this.has(k)) {
	        throw new Error('Cannot set unknown key "' + k + '" on ' + recordName(this));
	      }
	      if (this._map && !this._map.has(k)) {
	        var defaultVal = this._defaultValues[k];
	        if (v === defaultVal) {
	          return this;
	        }
	      }
	      var newMap = this._map && this._map.set(k, v);
	      if (this.__ownerID || newMap === this._map) {
	        return this;
	      }
	      return makeRecord(this, newMap);
	    };
	
	    Record.prototype.remove = function(k) {
	      if (!this.has(k)) {
	        return this;
	      }
	      var newMap = this._map && this._map.remove(k);
	      if (this.__ownerID || newMap === this._map) {
	        return this;
	      }
	      return makeRecord(this, newMap);
	    };
	
	    Record.prototype.wasAltered = function() {
	      return this._map.wasAltered();
	    };
	
	    Record.prototype.__iterator = function(type, reverse) {var this$0 = this;
	      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterator(type, reverse);
	    };
	
	    Record.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterate(fn, reverse);
	    };
	
	    Record.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      var newMap = this._map && this._map.__ensureOwner(ownerID);
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this._map = newMap;
	        return this;
	      }
	      return makeRecord(this, newMap, ownerID);
	    };
	
	
	  var RecordPrototype = Record.prototype;
	  RecordPrototype[DELETE] = RecordPrototype.remove;
	  RecordPrototype.deleteIn =
	  RecordPrototype.removeIn = MapPrototype.removeIn;
	  RecordPrototype.merge = MapPrototype.merge;
	  RecordPrototype.mergeWith = MapPrototype.mergeWith;
	  RecordPrototype.mergeIn = MapPrototype.mergeIn;
	  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;
	  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;
	  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;
	  RecordPrototype.setIn = MapPrototype.setIn;
	  RecordPrototype.update = MapPrototype.update;
	  RecordPrototype.updateIn = MapPrototype.updateIn;
	  RecordPrototype.withMutations = MapPrototype.withMutations;
	  RecordPrototype.asMutable = MapPrototype.asMutable;
	  RecordPrototype.asImmutable = MapPrototype.asImmutable;
	
	
	  function makeRecord(likeRecord, map, ownerID) {
	    var record = Object.create(Object.getPrototypeOf(likeRecord));
	    record._map = map;
	    record.__ownerID = ownerID;
	    return record;
	  }
	
	  function recordName(record) {
	    return record._name || record.constructor.name || 'Record';
	  }
	
	  function setProps(prototype, names) {
	    try {
	      names.forEach(setProp.bind(undefined, prototype));
	    } catch (error) {
	      // Object.defineProperty failed. Probably IE8.
	    }
	  }
	
	  function setProp(prototype, name) {
	    Object.defineProperty(prototype, name, {
	      get: function() {
	        return this.get(name);
	      },
	      set: function(value) {
	        invariant(this.__ownerID, 'Cannot set on an immutable record.');
	        this.set(name, value);
	      }
	    });
	  }
	
	  createClass(Set, SetCollection);
	
	    // @pragma Construction
	
	    function Set(value) {
	      return value === null || value === undefined ? emptySet() :
	        isSet(value) && !isOrdered(value) ? value :
	        emptySet().withMutations(function(set ) {
	          var iter = SetIterable(value);
	          assertNotInfinite(iter.size);
	          iter.forEach(function(v ) {return set.add(v)});
	        });
	    }
	
	    Set.of = function(/*...values*/) {
	      return this(arguments);
	    };
	
	    Set.fromKeys = function(value) {
	      return this(KeyedIterable(value).keySeq());
	    };
	
	    Set.prototype.toString = function() {
	      return this.__toString('Set {', '}');
	    };
	
	    // @pragma Access
	
	    Set.prototype.has = function(value) {
	      return this._map.has(value);
	    };
	
	    // @pragma Modification
	
	    Set.prototype.add = function(value) {
	      return updateSet(this, this._map.set(value, true));
	    };
	
	    Set.prototype.remove = function(value) {
	      return updateSet(this, this._map.remove(value));
	    };
	
	    Set.prototype.clear = function() {
	      return updateSet(this, this._map.clear());
	    };
	
	    // @pragma Composition
	
	    Set.prototype.union = function() {var iters = SLICE$0.call(arguments, 0);
	      iters = iters.filter(function(x ) {return x.size !== 0});
	      if (iters.length === 0) {
	        return this;
	      }
	      if (this.size === 0 && !this.__ownerID && iters.length === 1) {
	        return this.constructor(iters[0]);
	      }
	      return this.withMutations(function(set ) {
	        for (var ii = 0; ii < iters.length; ii++) {
	          SetIterable(iters[ii]).forEach(function(value ) {return set.add(value)});
	        }
	      });
	    };
	
	    Set.prototype.intersect = function() {var iters = SLICE$0.call(arguments, 0);
	      if (iters.length === 0) {
	        return this;
	      }
	      iters = iters.map(function(iter ) {return SetIterable(iter)});
	      var originalSet = this;
	      return this.withMutations(function(set ) {
	        originalSet.forEach(function(value ) {
	          if (!iters.every(function(iter ) {return iter.includes(value)})) {
	            set.remove(value);
	          }
	        });
	      });
	    };
	
	    Set.prototype.subtract = function() {var iters = SLICE$0.call(arguments, 0);
	      if (iters.length === 0) {
	        return this;
	      }
	      iters = iters.map(function(iter ) {return SetIterable(iter)});
	      var originalSet = this;
	      return this.withMutations(function(set ) {
	        originalSet.forEach(function(value ) {
	          if (iters.some(function(iter ) {return iter.includes(value)})) {
	            set.remove(value);
	          }
	        });
	      });
	    };
	
	    Set.prototype.merge = function() {
	      return this.union.apply(this, arguments);
	    };
	
	    Set.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);
	      return this.union.apply(this, iters);
	    };
	
	    Set.prototype.sort = function(comparator) {
	      // Late binding
	      return OrderedSet(sortFactory(this, comparator));
	    };
	
	    Set.prototype.sortBy = function(mapper, comparator) {
	      // Late binding
	      return OrderedSet(sortFactory(this, comparator, mapper));
	    };
	
	    Set.prototype.wasAltered = function() {
	      return this._map.wasAltered();
	    };
	
	    Set.prototype.__iterate = function(fn, reverse) {var this$0 = this;
	      return this._map.__iterate(function(_, k)  {return fn(k, k, this$0)}, reverse);
	    };
	
	    Set.prototype.__iterator = function(type, reverse) {
	      return this._map.map(function(_, k)  {return k}).__iterator(type, reverse);
	    };
	
	    Set.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      var newMap = this._map.__ensureOwner(ownerID);
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this._map = newMap;
	        return this;
	      }
	      return this.__make(newMap, ownerID);
	    };
	
	
	  function isSet(maybeSet) {
	    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);
	  }
	
	  Set.isSet = isSet;
	
	  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';
	
	  var SetPrototype = Set.prototype;
	  SetPrototype[IS_SET_SENTINEL] = true;
	  SetPrototype[DELETE] = SetPrototype.remove;
	  SetPrototype.mergeDeep = SetPrototype.merge;
	  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;
	  SetPrototype.withMutations = MapPrototype.withMutations;
	  SetPrototype.asMutable = MapPrototype.asMutable;
	  SetPrototype.asImmutable = MapPrototype.asImmutable;
	
	  SetPrototype.__empty = emptySet;
	  SetPrototype.__make = makeSet;
	
	  function updateSet(set, newMap) {
	    if (set.__ownerID) {
	      set.size = newMap.size;
	      set._map = newMap;
	      return set;
	    }
	    return newMap === set._map ? set :
	      newMap.size === 0 ? set.__empty() :
	      set.__make(newMap);
	  }
	
	  function makeSet(map, ownerID) {
	    var set = Object.create(SetPrototype);
	    set.size = map ? map.size : 0;
	    set._map = map;
	    set.__ownerID = ownerID;
	    return set;
	  }
	
	  var EMPTY_SET;
	  function emptySet() {
	    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));
	  }
	
	  createClass(OrderedSet, Set);
	
	    // @pragma Construction
	
	    function OrderedSet(value) {
	      return value === null || value === undefined ? emptyOrderedSet() :
	        isOrderedSet(value) ? value :
	        emptyOrderedSet().withMutations(function(set ) {
	          var iter = SetIterable(value);
	          assertNotInfinite(iter.size);
	          iter.forEach(function(v ) {return set.add(v)});
	        });
	    }
	
	    OrderedSet.of = function(/*...values*/) {
	      return this(arguments);
	    };
	
	    OrderedSet.fromKeys = function(value) {
	      return this(KeyedIterable(value).keySeq());
	    };
	
	    OrderedSet.prototype.toString = function() {
	      return this.__toString('OrderedSet {', '}');
	    };
	
	
	  function isOrderedSet(maybeOrderedSet) {
	    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);
	  }
	
	  OrderedSet.isOrderedSet = isOrderedSet;
	
	  var OrderedSetPrototype = OrderedSet.prototype;
	  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;
	
	  OrderedSetPrototype.__empty = emptyOrderedSet;
	  OrderedSetPrototype.__make = makeOrderedSet;
	
	  function makeOrderedSet(map, ownerID) {
	    var set = Object.create(OrderedSetPrototype);
	    set.size = map ? map.size : 0;
	    set._map = map;
	    set.__ownerID = ownerID;
	    return set;
	  }
	
	  var EMPTY_ORDERED_SET;
	  function emptyOrderedSet() {
	    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));
	  }
	
	  createClass(Stack, IndexedCollection);
	
	    // @pragma Construction
	
	    function Stack(value) {
	      return value === null || value === undefined ? emptyStack() :
	        isStack(value) ? value :
	        emptyStack().unshiftAll(value);
	    }
	
	    Stack.of = function(/*...values*/) {
	      return this(arguments);
	    };
	
	    Stack.prototype.toString = function() {
	      return this.__toString('Stack [', ']');
	    };
	
	    // @pragma Access
	
	    Stack.prototype.get = function(index, notSetValue) {
	      var head = this._head;
	      index = wrapIndex(this, index);
	      while (head && index--) {
	        head = head.next;
	      }
	      return head ? head.value : notSetValue;
	    };
	
	    Stack.prototype.peek = function() {
	      return this._head && this._head.value;
	    };
	
	    // @pragma Modification
	
	    Stack.prototype.push = function(/*...values*/) {
	      if (arguments.length === 0) {
	        return this;
	      }
	      var newSize = this.size + arguments.length;
	      var head = this._head;
	      for (var ii = arguments.length - 1; ii >= 0; ii--) {
	        head = {
	          value: arguments[ii],
	          next: head
	        };
	      }
	      if (this.__ownerID) {
	        this.size = newSize;
	        this._head = head;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return makeStack(newSize, head);
	    };
	
	    Stack.prototype.pushAll = function(iter) {
	      iter = IndexedIterable(iter);
	      if (iter.size === 0) {
	        return this;
	      }
	      assertNotInfinite(iter.size);
	      var newSize = this.size;
	      var head = this._head;
	      iter.reverse().forEach(function(value ) {
	        newSize++;
	        head = {
	          value: value,
	          next: head
	        };
	      });
	      if (this.__ownerID) {
	        this.size = newSize;
	        this._head = head;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return makeStack(newSize, head);
	    };
	
	    Stack.prototype.pop = function() {
	      return this.slice(1);
	    };
	
	    Stack.prototype.unshift = function(/*...values*/) {
	      return this.push.apply(this, arguments);
	    };
	
	    Stack.prototype.unshiftAll = function(iter) {
	      return this.pushAll(iter);
	    };
	
	    Stack.prototype.shift = function() {
	      return this.pop.apply(this, arguments);
	    };
	
	    Stack.prototype.clear = function() {
	      if (this.size === 0) {
	        return this;
	      }
	      if (this.__ownerID) {
	        this.size = 0;
	        this._head = undefined;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return emptyStack();
	    };
	
	    Stack.prototype.slice = function(begin, end) {
	      if (wholeSlice(begin, end, this.size)) {
	        return this;
	      }
	      var resolvedBegin = resolveBegin(begin, this.size);
	      var resolvedEnd = resolveEnd(end, this.size);
	      if (resolvedEnd !== this.size) {
	        // super.slice(begin, end);
	        return IndexedCollection.prototype.slice.call(this, begin, end);
	      }
	      var newSize = this.size - resolvedBegin;
	      var head = this._head;
	      while (resolvedBegin--) {
	        head = head.next;
	      }
	      if (this.__ownerID) {
	        this.size = newSize;
	        this._head = head;
	        this.__hash = undefined;
	        this.__altered = true;
	        return this;
	      }
	      return makeStack(newSize, head);
	    };
	
	    // @pragma Mutability
	
	    Stack.prototype.__ensureOwner = function(ownerID) {
	      if (ownerID === this.__ownerID) {
	        return this;
	      }
	      if (!ownerID) {
	        this.__ownerID = ownerID;
	        this.__altered = false;
	        return this;
	      }
	      return makeStack(this.size, this._head, ownerID, this.__hash);
	    };
	
	    // @pragma Iteration
	
	    Stack.prototype.__iterate = function(fn, reverse) {
	      if (reverse) {
	        return this.reverse().__iterate(fn);
	      }
	      var iterations = 0;
	      var node = this._head;
	      while (node) {
	        if (fn(node.value, iterations++, this) === false) {
	          break;
	        }
	        node = node.next;
	      }
	      return iterations;
	    };
	
	    Stack.prototype.__iterator = function(type, reverse) {
	      if (reverse) {
	        return this.reverse().__iterator(type);
	      }
	      var iterations = 0;
	      var node = this._head;
	      return new Iterator(function()  {
	        if (node) {
	          var value = node.value;
	          node = node.next;
	          return iteratorValue(type, iterations++, value);
	        }
	        return iteratorDone();
	      });
	    };
	
	
	  function isStack(maybeStack) {
	    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);
	  }
	
	  Stack.isStack = isStack;
	
	  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';
	
	  var StackPrototype = Stack.prototype;
	  StackPrototype[IS_STACK_SENTINEL] = true;
	  StackPrototype.withMutations = MapPrototype.withMutations;
	  StackPrototype.asMutable = MapPrototype.asMutable;
	  StackPrototype.asImmutable = MapPrototype.asImmutable;
	  StackPrototype.wasAltered = MapPrototype.wasAltered;
	
	
	  function makeStack(size, head, ownerID, hash) {
	    var map = Object.create(StackPrototype);
	    map.size = size;
	    map._head = head;
	    map.__ownerID = ownerID;
	    map.__hash = hash;
	    map.__altered = false;
	    return map;
	  }
	
	  var EMPTY_STACK;
	  function emptyStack() {
	    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));
	  }
	
	  /**
	   * Contributes additional methods to a constructor
	   */
	  function mixin(ctor, methods) {
	    var keyCopier = function(key ) { ctor.prototype[key] = methods[key]; };
	    Object.keys(methods).forEach(keyCopier);
	    Object.getOwnPropertySymbols &&
	      Object.getOwnPropertySymbols(methods).forEach(keyCopier);
	    return ctor;
	  }
	
	  Iterable.Iterator = Iterator;
	
	  mixin(Iterable, {
	
	    // ### Conversion to other types
	
	    toArray: function() {
	      assertNotInfinite(this.size);
	      var array = new Array(this.size || 0);
	      this.valueSeq().__iterate(function(v, i)  { array[i] = v; });
	      return array;
	    },
	
	    toIndexedSeq: function() {
	      return new ToIndexedSequence(this);
	    },
	
	    toJS: function() {
	      return this.toSeq().map(
	        function(value ) {return value && typeof value.toJS === 'function' ? value.toJS() : value}
	      ).__toJS();
	    },
	
	    toJSON: function() {
	      return this.toSeq().map(
	        function(value ) {return value && typeof value.toJSON === 'function' ? value.toJSON() : value}
	      ).__toJS();
	    },
	
	    toKeyedSeq: function() {
	      return new ToKeyedSequence(this, true);
	    },
	
	    toMap: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return Map(this.toKeyedSeq());
	    },
	
	    toObject: function() {
	      assertNotInfinite(this.size);
	      var object = {};
	      this.__iterate(function(v, k)  { object[k] = v; });
	      return object;
	    },
	
	    toOrderedMap: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return OrderedMap(this.toKeyedSeq());
	    },
	
	    toOrderedSet: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);
	    },
	
	    toSet: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return Set(isKeyed(this) ? this.valueSeq() : this);
	    },
	
	    toSetSeq: function() {
	      return new ToSetSequence(this);
	    },
	
	    toSeq: function() {
	      return isIndexed(this) ? this.toIndexedSeq() :
	        isKeyed(this) ? this.toKeyedSeq() :
	        this.toSetSeq();
	    },
	
	    toStack: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return Stack(isKeyed(this) ? this.valueSeq() : this);
	    },
	
	    toList: function() {
	      // Use Late Binding here to solve the circular dependency.
	      return List(isKeyed(this) ? this.valueSeq() : this);
	    },
	
	
	    // ### Common JavaScript methods and properties
	
	    toString: function() {
	      return '[Iterable]';
	    },
	
	    __toString: function(head, tail) {
	      if (this.size === 0) {
	        return head + tail;
	      }
	      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;
	    },
	
	
	    // ### ES6 Collection methods (ES6 Array and Map)
	
	    concat: function() {var values = SLICE$0.call(arguments, 0);
	      return reify(this, concatFactory(this, values));
	    },
	
	    includes: function(searchValue) {
	      return this.some(function(value ) {return is(value, searchValue)});
	    },
	
	    entries: function() {
	      return this.__iterator(ITERATE_ENTRIES);
	    },
	
	    every: function(predicate, context) {
	      assertNotInfinite(this.size);
	      var returnValue = true;
	      this.__iterate(function(v, k, c)  {
	        if (!predicate.call(context, v, k, c)) {
	          returnValue = false;
	          return false;
	        }
	      });
	      return returnValue;
	    },
	
	    filter: function(predicate, context) {
	      return reify(this, filterFactory(this, predicate, context, true));
	    },
	
	    find: function(predicate, context, notSetValue) {
	      var entry = this.findEntry(predicate, context);
	      return entry ? entry[1] : notSetValue;
	    },
	
	    forEach: function(sideEffect, context) {
	      assertNotInfinite(this.size);
	      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);
	    },
	
	    join: function(separator) {
	      assertNotInfinite(this.size);
	      separator = separator !== undefined ? '' + separator : ',';
	      var joined = '';
	      var isFirst = true;
	      this.__iterate(function(v ) {
	        isFirst ? (isFirst = false) : (joined += separator);
	        joined += v !== null && v !== undefined ? v.toString() : '';
	      });
	      return joined;
	    },
	
	    keys: function() {
	      return this.__iterator(ITERATE_KEYS);
	    },
	
	    map: function(mapper, context) {
	      return reify(this, mapFactory(this, mapper, context));
	    },
	
	    reduce: function(reducer, initialReduction, context) {
	      assertNotInfinite(this.size);
	      var reduction;
	      var useFirst;
	      if (arguments.length < 2) {
	        useFirst = true;
	      } else {
	        reduction = initialReduction;
	      }
	      this.__iterate(function(v, k, c)  {
	        if (useFirst) {
	          useFirst = false;
	          reduction = v;
	        } else {
	          reduction = reducer.call(context, reduction, v, k, c);
	        }
	      });
	      return reduction;
	    },
	
	    reduceRight: function(reducer, initialReduction, context) {
	      var reversed = this.toKeyedSeq().reverse();
	      return reversed.reduce.apply(reversed, arguments);
	    },
	
	    reverse: function() {
	      return reify(this, reverseFactory(this, true));
	    },
	
	    slice: function(begin, end) {
	      return reify(this, sliceFactory(this, begin, end, true));
	    },
	
	    some: function(predicate, context) {
	      return !this.every(not(predicate), context);
	    },
	
	    sort: function(comparator) {
	      return reify(this, sortFactory(this, comparator));
	    },
	
	    values: function() {
	      return this.__iterator(ITERATE_VALUES);
	    },
	
	
	    // ### More sequential methods
	
	    butLast: function() {
	      return this.slice(0, -1);
	    },
	
	    isEmpty: function() {
	      return this.size !== undefined ? this.size === 0 : !this.some(function()  {return true});
	    },
	
	    count: function(predicate, context) {
	      return ensureSize(
	        predicate ? this.toSeq().filter(predicate, context) : this
	      );
	    },
	
	    countBy: function(grouper, context) {
	      return countByFactory(this, grouper, context);
	    },
	
	    equals: function(other) {
	      return deepEqual(this, other);
	    },
	
	    entrySeq: function() {
	      var iterable = this;
	      if (iterable._cache) {
	        // We cache as an entries array, so we can just return the cache!
	        return new ArraySeq(iterable._cache);
	      }
	      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();
	      entriesSequence.fromEntrySeq = function()  {return iterable.toSeq()};
	      return entriesSequence;
	    },
	
	    filterNot: function(predicate, context) {
	      return this.filter(not(predicate), context);
	    },
	
	    findEntry: function(predicate, context, notSetValue) {
	      var found = notSetValue;
	      this.__iterate(function(v, k, c)  {
	        if (predicate.call(context, v, k, c)) {
	          found = [k, v];
	          return false;
	        }
	      });
	      return found;
	    },
	
	    findKey: function(predicate, context) {
	      var entry = this.findEntry(predicate, context);
	      return entry && entry[0];
	    },
	
	    findLast: function(predicate, context, notSetValue) {
	      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);
	    },
	
	    findLastEntry: function(predicate, context, notSetValue) {
	      return this.toKeyedSeq().reverse().findEntry(predicate, context, notSetValue);
	    },
	
	    findLastKey: function(predicate, context) {
	      return this.toKeyedSeq().reverse().findKey(predicate, context);
	    },
	
	    first: function() {
	      return this.find(returnTrue);
	    },
	
	    flatMap: function(mapper, context) {
	      return reify(this, flatMapFactory(this, mapper, context));
	    },
	
	    flatten: function(depth) {
	      return reify(this, flattenFactory(this, depth, true));
	    },
	
	    fromEntrySeq: function() {
	      return new FromEntriesSequence(this);
	    },
	
	    get: function(searchKey, notSetValue) {
	      return this.find(function(_, key)  {return is(key, searchKey)}, undefined, notSetValue);
	    },
	
	    getIn: function(searchKeyPath, notSetValue) {
	      var nested = this;
	      // Note: in an ES6 environment, we would prefer:
	      // for (var key of searchKeyPath) {
	      var iter = forceIterator(searchKeyPath);
	      var step;
	      while (!(step = iter.next()).done) {
	        var key = step.value;
	        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;
	        if (nested === NOT_SET) {
	          return notSetValue;
	        }
	      }
	      return nested;
	    },
	
	    groupBy: function(grouper, context) {
	      return groupByFactory(this, grouper, context);
	    },
	
	    has: function(searchKey) {
	      return this.get(searchKey, NOT_SET) !== NOT_SET;
	    },
	
	    hasIn: function(searchKeyPath) {
	      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;
	    },
	
	    isSubset: function(iter) {
	      iter = typeof iter.includes === 'function' ? iter : Iterable(iter);
	      return this.every(function(value ) {return iter.includes(value)});
	    },
	
	    isSuperset: function(iter) {
	      iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);
	      return iter.isSubset(this);
	    },
	
	    keyOf: function(searchValue) {
	      return this.findKey(function(value ) {return is(value, searchValue)});
	    },
	
	    keySeq: function() {
	      return this.toSeq().map(keyMapper).toIndexedSeq();
	    },
	
	    last: function() {
	      return this.toSeq().reverse().first();
	    },
	
	    lastKeyOf: function(searchValue) {
	      return this.toKeyedSeq().reverse().keyOf(searchValue);
	    },
	
	    max: function(comparator) {
	      return maxFactory(this, comparator);
	    },
	
	    maxBy: function(mapper, comparator) {
	      return maxFactory(this, comparator, mapper);
	    },
	
	    min: function(comparator) {
	      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);
	    },
	
	    minBy: function(mapper, comparator) {
	      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);
	    },
	
	    rest: function() {
	      return this.slice(1);
	    },
	
	    skip: function(amount) {
	      return this.slice(Math.max(0, amount));
	    },
	
	    skipLast: function(amount) {
	      return reify(this, this.toSeq().reverse().skip(amount).reverse());
	    },
	
	    skipWhile: function(predicate, context) {
	      return reify(this, skipWhileFactory(this, predicate, context, true));
	    },
	
	    skipUntil: function(predicate, context) {
	      return this.skipWhile(not(predicate), context);
	    },
	
	    sortBy: function(mapper, comparator) {
	      return reify(this, sortFactory(this, comparator, mapper));
	    },
	
	    take: function(amount) {
	      return this.slice(0, Math.max(0, amount));
	    },
	
	    takeLast: function(amount) {
	      return reify(this, this.toSeq().reverse().take(amount).reverse());
	    },
	
	    takeWhile: function(predicate, context) {
	      return reify(this, takeWhileFactory(this, predicate, context));
	    },
	
	    takeUntil: function(predicate, context) {
	      return this.takeWhile(not(predicate), context);
	    },
	
	    valueSeq: function() {
	      return this.toIndexedSeq();
	    },
	
	
	    // ### Hashable Object
	
	    hashCode: function() {
	      return this.__hash || (this.__hash = hashIterable(this));
	    }
	
	
	    // ### Internal
	
	    // abstract __iterate(fn, reverse)
	
	    // abstract __iterator(type, reverse)
	  });
	
	  // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';
	  // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';
	  // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';
	  // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';
	
	  var IterablePrototype = Iterable.prototype;
	  IterablePrototype[IS_ITERABLE_SENTINEL] = true;
	  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;
	  IterablePrototype.__toJS = IterablePrototype.toArray;
	  IterablePrototype.__toStringMapper = quoteString;
	  IterablePrototype.inspect =
	  IterablePrototype.toSource = function() { return this.toString(); };
	  IterablePrototype.chain = IterablePrototype.flatMap;
	  IterablePrototype.contains = IterablePrototype.includes;
	
	  mixin(KeyedIterable, {
	
	    // ### More sequential methods
	
	    flip: function() {
	      return reify(this, flipFactory(this));
	    },
	
	    mapEntries: function(mapper, context) {var this$0 = this;
	      var iterations = 0;
	      return reify(this,
	        this.toSeq().map(
	          function(v, k)  {return mapper.call(context, [k, v], iterations++, this$0)}
	        ).fromEntrySeq()
	      );
	    },
	
	    mapKeys: function(mapper, context) {var this$0 = this;
	      return reify(this,
	        this.toSeq().flip().map(
	          function(k, v)  {return mapper.call(context, k, v, this$0)}
	        ).flip()
	      );
	    }
	
	  });
	
	  var KeyedIterablePrototype = KeyedIterable.prototype;
	  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;
	  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;
	  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;
	  KeyedIterablePrototype.__toStringMapper = function(v, k)  {return JSON.stringify(k) + ': ' + quoteString(v)};
	
	
	
	  mixin(IndexedIterable, {
	
	    // ### Conversion to other types
	
	    toKeyedSeq: function() {
	      return new ToKeyedSequence(this, false);
	    },
	
	
	    // ### ES6 Collection methods (ES6 Array and Map)
	
	    filter: function(predicate, context) {
	      return reify(this, filterFactory(this, predicate, context, false));
	    },
	
	    findIndex: function(predicate, context) {
	      var entry = this.findEntry(predicate, context);
	      return entry ? entry[0] : -1;
	    },
	
	    indexOf: function(searchValue) {
	      var key = this.keyOf(searchValue);
	      return key === undefined ? -1 : key;
	    },
	
	    lastIndexOf: function(searchValue) {
	      var key = this.lastKeyOf(searchValue);
	      return key === undefined ? -1 : key;
	    },
	
	    reverse: function() {
	      return reify(this, reverseFactory(this, false));
	    },
	
	    slice: function(begin, end) {
	      return reify(this, sliceFactory(this, begin, end, false));
	    },
	
	    splice: function(index, removeNum /*, ...values*/) {
	      var numArgs = arguments.length;
	      removeNum = Math.max(removeNum | 0, 0);
	      if (numArgs === 0 || (numArgs === 2 && !removeNum)) {
	        return this;
	      }
	      // If index is negative, it should resolve relative to the size of the
	      // collection. However size may be expensive to compute if not cached, so
	      // only call count() if the number is in fact negative.
	      index = resolveBegin(index, index < 0 ? this.count() : this.size);
	      var spliced = this.slice(0, index);
	      return reify(
	        this,
	        numArgs === 1 ?
	          spliced :
	          spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum))
	      );
	    },
	
	
	    // ### More collection methods
	
	    findLastIndex: function(predicate, context) {
	      var entry = this.findLastEntry(predicate, context);
	      return entry ? entry[0] : -1;
	    },
	
	    first: function() {
	      return this.get(0);
	    },
	
	    flatten: function(depth) {
	      return reify(this, flattenFactory(this, depth, false));
	    },
	
	    get: function(index, notSetValue) {
	      index = wrapIndex(this, index);
	      return (index < 0 || (this.size === Infinity ||
	          (this.size !== undefined && index > this.size))) ?
	        notSetValue :
	        this.find(function(_, key)  {return key === index}, undefined, notSetValue);
	    },
	
	    has: function(index) {
	      index = wrapIndex(this, index);
	      return index >= 0 && (this.size !== undefined ?
	        this.size === Infinity || index < this.size :
	        this.indexOf(index) !== -1
	      );
	    },
	
	    interpose: function(separator) {
	      return reify(this, interposeFactory(this, separator));
	    },
	
	    interleave: function(/*...iterables*/) {
	      var iterables = [this].concat(arrCopy(arguments));
	      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);
	      var interleaved = zipped.flatten(true);
	      if (zipped.size) {
	        interleaved.size = zipped.size * iterables.length;
	      }
	      return reify(this, interleaved);
	    },
	
	    keySeq: function() {
	      return Range(0, this.size);
	    },
	
	    last: function() {
	      return this.get(-1);
	    },
	
	    skipWhile: function(predicate, context) {
	      return reify(this, skipWhileFactory(this, predicate, context, false));
	    },
	
	    zip: function(/*, ...iterables */) {
	      var iterables = [this].concat(arrCopy(arguments));
	      return reify(this, zipWithFactory(this, defaultZipper, iterables));
	    },
	
	    zipWith: function(zipper/*, ...iterables */) {
	      var iterables = arrCopy(arguments);
	      iterables[0] = this;
	      return reify(this, zipWithFactory(this, zipper, iterables));
	    }
	
	  });
	
	  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;
	  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;
	
	
	
	  mixin(SetIterable, {
	
	    // ### ES6 Collection methods (ES6 Array and Map)
	
	    get: function(value, notSetValue) {
	      return this.has(value) ? value : notSetValue;
	    },
	
	    includes: function(value) {
	      return this.has(value);
	    },
	
	
	    // ### More sequential methods
	
	    keySeq: function() {
	      return this.valueSeq();
	    }
	
	  });
	
	  SetIterable.prototype.has = IterablePrototype.includes;
	  SetIterable.prototype.contains = SetIterable.prototype.includes;
	
	
	  // Mixin subclasses
	
	  mixin(KeyedSeq, KeyedIterable.prototype);
	  mixin(IndexedSeq, IndexedIterable.prototype);
	  mixin(SetSeq, SetIterable.prototype);
	
	  mixin(KeyedCollection, KeyedIterable.prototype);
	  mixin(IndexedCollection, IndexedIterable.prototype);
	  mixin(SetCollection, SetIterable.prototype);
	
	
	  // #pragma Helper functions
	
	  function keyMapper(v, k) {
	    return k;
	  }
	
	  function entryMapper(v, k) {
	    return [k, v];
	  }
	
	  function not(predicate) {
	    return function() {
	      return !predicate.apply(this, arguments);
	    }
	  }
	
	  function neg(predicate) {
	    return function() {
	      return -predicate.apply(this, arguments);
	    }
	  }
	
	  function quoteString(value) {
	    return typeof value === 'string' ? JSON.stringify(value) : String(value);
	  }
	
	  function defaultZipper() {
	    return arrCopy(arguments);
	  }
	
	  function defaultNegComparator(a, b) {
	    return a < b ? 1 : a > b ? -1 : 0;
	  }
	
	  function hashIterable(iterable) {
	    if (iterable.size === Infinity) {
	      return 0;
	    }
	    var ordered = isOrdered(iterable);
	    var keyed = isKeyed(iterable);
	    var h = ordered ? 1 : 0;
	    var size = iterable.__iterate(
	      keyed ?
	        ordered ?
	          function(v, k)  { h = 31 * h + hashMerge(hash(v), hash(k)) | 0; } :
	          function(v, k)  { h = h + hashMerge(hash(v), hash(k)) | 0; } :
	        ordered ?
	          function(v ) { h = 31 * h + hash(v) | 0; } :
	          function(v ) { h = h + hash(v) | 0; }
	    );
	    return murmurHashOfSize(size, h);
	  }
	
	  function murmurHashOfSize(size, h) {
	    h = imul(h, 0xCC9E2D51);
	    h = imul(h << 15 | h >>> -15, 0x1B873593);
	    h = imul(h << 13 | h >>> -13, 5);
	    h = (h + 0xE6546B64 | 0) ^ size;
	    h = imul(h ^ h >>> 16, 0x85EBCA6B);
	    h = imul(h ^ h >>> 13, 0xC2B2AE35);
	    h = smi(h ^ h >>> 16);
	    return h;
	  }
	
	  function hashMerge(a, b) {
	    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0; // int
	  }
	
	  var Immutable = {
	
	    Iterable: Iterable,
	
	    Seq: Seq,
	    Collection: Collection,
	    Map: Map,
	    OrderedMap: OrderedMap,
	    List: List,
	    Stack: Stack,
	    Set: Set,
	    OrderedSet: OrderedSet,
	
	    Record: Record,
	    Range: Range,
	    Repeat: Repeat,
	
	    is: is,
	    fromJS: fromJS
	
	  };
	
	  return Immutable;
	
	}));

/***/ },
/* 364 */
/*!*****************************************************!*\
  !*** ./actions/SubjectLib/SubjectLibActionTypes.ts ***!
  \*****************************************************/
/***/ function(module, exports) {

	"use strict";
	//所有程序中用到的有关此模块的actionID 都引用于此 ****必须全局唯一*****
	exports.INIT_SUBJLIB_CURRENTSUBJ = "INIT_SUBJLIB_CURRENTSUBJ";
	exports.MERGE_SUBJLIB_CURRENTSUBJ = 'MERGE_SUBJLIB_CURRENTSUBJ';


/***/ },
/* 365 */,
/* 366 */
/*!*************************************************!*\
  !*** ./actions/MajorLib/MajorLibActionTypes.ts ***!
  \*************************************************/
/***/ function(module, exports) {

	"use strict";
	exports.MERGE_SUBJ_CLASSIFICATION = "MERGE_SUBJ_CLASSIFICATION";
	exports.MERGE_SUBJ_CATEGORIES = 'MERGE_SUBJ_CATEGORIES';
	exports.MERGE_MAJOR_CATEGORIES = 'MERGE_MAJOR_CATEGORIES';
	exports.MERGE_MAJOR_CLICKFLAG = 'MERGE_MAJOR_CLICKFLAG';
	exports.MERGE_MAJOR_SEARCHVAL = 'MERGE_MAJOR_SEARCHVAL';
	exports.MERGE_MAJOR_SHOW_WHO = 'MERGE_MAJOR_SHOW_WHO';
	//学科库
	//获取学科库
	exports.GET_MAJORLIB_MAJORLIB = "GET_MAJORLIB_MAJORLIB";
	//获取学科详细解读
	exports.GET_MAJORLIB_MAJORDETAIL = "GET_MAJORLIB_MAJORDETAIL";


/***/ },
/* 367 */,
/* 368 */
/*!*****************************************************!*\
  !*** ./actions/CollegeLib/CollegeLibActionTypes.ts ***!
  \*****************************************************/
/***/ function(module, exports) {

	"use strict";
	exports.MERGE_COLLEGEOPTIONS_PROVINCE = "MERGE_COLLEGEOPTIONS_PROVINCE";
	exports.MERGE_COLLEGEOPTIONS_LEVEL = 'MERGE_COLLEGEOPTIONS_LEVEL';
	exports.MERGE_COLLEGEOPTIONS_TYPE = 'MERGE_COLLEGEOPTIONS_TYPE';
	exports.MERGE_COLLEGEOPTIONS_COLLEGEPROP = 'MERGE_COLLEGEOPTIONS_COLLEGEPROP';
	exports.MERGE_COLLEGEOPTIONS_INPUT = 'MERGE_COLLEGEOPTIONS_INPUT';
	exports.MERGE_CURRENTPAGE = 'MERGE_CURRENTPAGE';
	exports.MERGE_COLLEGERESULT = 'MERGE_COLLEGERESULT';
	//院校库
	//获取院校类别列表
	exports.GET_COLLEGELIB_CONDITIONS = "GET_COLLEGELIB_CONDITIONS";
	//通过筛选条件返回大学列表
	exports.GET_COLLEGELIB_COLLEGELIST = "GET_COLLEGELIB_COLLEGELIST";
	//通过大学ID返回大学详情
	exports.GET_COLLEGELIB_COLLEGEDETAIL = "GET_COLLEGELIB_COLLEGEDETAIL";


/***/ },
/* 369 */,
/* 370 */,
/* 371 */
/*!*********************************************!*\
  !*** ./actions/JobLib/JobLibActionTypes.ts ***!
  \*********************************************/
/***/ function(module, exports) {

	/*
	export const MERGE_JOBOPTIONS_JOB= "MERGE_JOBOPTIONS_JOB";
	export const MERGE_JOBOPTIONS_INPUT = 'MERGE_JOBOPTIONS_INPUT';
	*/
	"use strict";
	//获取职业信息
	exports.GET_JOBLIB_JOBLIB = "GET_JOBLIB_JOBLIB";
	exports.GET_JOBLIB_JOBINTRODUCTION = "GET_JOBLIB_JOBINTRODUCTION";
	exports.GET_JOBLIB_SEARCHRESULT = "GET_JOBLIB_SEARCHRESULT";


/***/ },
/* 372 */,
/* 373 */
/*!*********************************************!*\
  !*** ./actions/Search/SearchActionTypes.ts ***!
  \*********************************************/
/***/ function(module, exports) {

	"use strict";
	//获取搜索用户信息
	exports.GET_SEARCH_PERSONALINFOLIST = "GET_SEARCH_PERSONALINFOLIST";
	//通过ajax请求搜索结果筛选选项内容
	exports.GET_SEARCH_OPTIONS = "GET_SEARCH_OPTIONS";


/***/ },
/* 374 */,
/* 375 */,
/* 376 */,
/* 377 */
/*!*********************************!*\
  !*** ./common/GlobalContext.ts ***!
  \*********************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	function __export(m) {
	    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
	}
	var storeGlobal;
	function initStoreGlobal(store) {
	    storeGlobal = store;
	}
	exports.initStoreGlobal = initStoreGlobal;
	function getStoreGlobal() {
	    return storeGlobal;
	}
	exports.getStoreGlobal = getStoreGlobal;
	var availChosenSubjs;
	function getAvailChosenSubjs() {
	    return availChosenSubjs;
	}
	exports.getAvailChosenSubjs = getAvailChosenSubjs;
	function setAvailChosenSubjs(availSubjs) {
	    availChosenSubjs = availSubjs;
	}
	exports.setAvailChosenSubjs = setAvailChosenSubjs;
	var subjectNameDisplayMap;
	function setSubjectNameDisplayMap(nameDisplayMap) {
	    subjectNameDisplayMap = nameDisplayMap;
	}
	exports.setSubjectNameDisplayMap = setSubjectNameDisplayMap;
	function getSubjectNameDisplayMap() {
	    return subjectNameDisplayMap;
	}
	exports.getSubjectNameDisplayMap = getSubjectNameDisplayMap;
	var systemInfo;
	function getSystemInfo() {
	    return systemInfo;
	}
	exports.getSystemInfo = getSystemInfo;
	function setSystemInfo(info) {
	    systemInfo = info;
	}
	exports.setSystemInfo = setSystemInfo;
	var shownSystems;
	function getShownSystems() {
	    return shownSystems;
	}
	exports.getShownSystems = getShownSystems;
	function setShownSystems(systems) {
	    shownSystems = systems;
	}
	exports.setShownSystems = setShownSystems;
	var defaultSystem;
	function getDefaultSystem() {
	    return defaultSystem;
	}
	exports.getDefaultSystem = getDefaultSystem;
	function setDefaultSystem(system) {
	    defaultSystem = system;
	}
	exports.setDefaultSystem = setDefaultSystem;
	var qqFace;
	function setQQFace(qq) {
	    qqFace = qq;
	}
	exports.setQQFace = setQQFace;
	function getQQFace() {
	    return qqFace;
	}
	exports.getQQFace = getQQFace;
	var termOptions;
	function setTermOptions(options) {
	    termOptions = options;
	}
	exports.setTermOptions = setTermOptions;
	function getTermOptions() {
	    return termOptions;
	}
	exports.getTermOptions = getTermOptions;
	__export(__webpack_require__(/*! ./GlobalContext */ 377));


/***/ },
/* 378 */
/*!******************************!*\
  !*** ./common/commonFunc.ts ***!
  \******************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var commonVar_1 = __webpack_require__(/*! ./commonVar */ 355);
	var GlobalContext_1 = __webpack_require__(/*! ./GlobalContext */ 377);
	var Immutable = __webpack_require__(/*! immutable */ 363);
	function ajaxAsyncGet(url, successfunc, errorfunc) {
	    hzyCommon.ajaxAsyncGet(url, successfunc, errorfunc);
	}
	exports.ajaxAsyncGet = ajaxAsyncGet;
	function ajaxSyncGet(url, successfunc, errorfunc) {
	    hzyCommon.ajaxSyncGet(url, successfunc, errorfunc);
	}
	exports.ajaxSyncGet = ajaxSyncGet;
	function getValueFromSessionStorage(key, defaultValue) {
	    return hzyCommon.getValueFromSessionStorage(key, defaultValue);
	}
	exports.getValueFromSessionStorage = getValueFromSessionStorage;
	function setValueToSessionStorage(key, value) {
	    hzyCommon.setValueToSessionStorage(key, value);
	}
	exports.setValueToSessionStorage = setValueToSessionStorage;
	function removeSessionStorage(key) {
	    hzyCommon.removeSessionStorage(key);
	}
	exports.removeSessionStorage = removeSessionStorage;
	function getValueFromLocalStorage(key, defaultValue) {
	    return hzyCommon.getValueFromLocalStorage(key, defaultValue);
	}
	exports.getValueFromLocalStorage = getValueFromLocalStorage;
	function setValueToLocalStorage(key, value) {
	    hzyCommon.setValueToLocalStorage(key, value);
	}
	exports.setValueToLocalStorage = setValueToLocalStorage;
	function removeLocalStorage(key) {
	    hzyCommon.removeLocalStorage(key);
	}
	exports.removeLocalStorage = removeLocalStorage;
	function isEmptyObject(obj) {
	    return hzyCommon.isEmptyObject(obj);
	}
	exports.isEmptyObject = isEmptyObject;
	function isArray(obj) {
	    return hzyCommon.isArray(obj);
	}
	exports.isArray = isArray;
	function assignDataForAjax(obj) {
	    if (!obj.UserID && getValueFromSessionStorage("UserID")) {
	        obj.UserID = getValueFromSessionStorage("UserID");
	    }
	    if (!obj.token && getValueFromSessionStorage("token")) {
	        obj.token = getValueFromSessionStorage("token");
	    }
	    if (!obj.SchoolID && getValueFromSessionStorage("schoolID")) {
	        obj.SchoolID = getValueFromSessionStorage("schoolID");
	    }
	    if (!obj.SystemID && getValueFromSessionStorage("systemID")) {
	        obj.SystemID = getValueFromSessionStorage("systemID");
	    }
	    if (!obj.Grade && getValueFromSessionStorage("grade")) {
	        obj.Grade = getValueFromSessionStorage("grade");
	    }
	    if (!obj.RegionID && getValueFromSessionStorage("RegionID")) {
	        obj.RegionID = getValueFromSessionStorage("RegionID");
	    }
	    if (!obj.StuClass && getValueFromSessionStorage("stuClass")) {
	        obj.StuClass = getValueFromSessionStorage("stuClass");
	    }
	    return JSON.stringify(obj);
	}
	exports.assignDataForAjax = assignDataForAjax;
	function assignAuthCodeForShare() {
	    var authCode = getValueFromSessionStorage('authCode');
	    var authCodeQueryString = "";
	    if (authCode) {
	        authCodeQueryString = "AuthCode=" + authCode + "&timestamp=" + new Date().getTime();
	    }
	    else {
	        if (commonVar_1.isDebug()) {
	            alert("error: AuthCode empty ");
	        }
	    }
	    return authCodeQueryString;
	}
	exports.assignAuthCodeForShare = assignAuthCodeForShare;
	function getUrlFromPropsAndQuery(this_) {
	    // 变量命名为 url
	    var url = "";
	    if (!this_.props) {
	        return url;
	    }
	    var propsUrl = this_.props.url;
	    var queryUrl = this_.props.location ? this_.props.location.query.url : "";
	    if (!!propsUrl) {
	        url = propsUrl;
	    }
	    else if (!!queryUrl) {
	        url = queryUrl;
	    }
	    return url;
	}
	exports.getUrlFromPropsAndQuery = getUrlFromPropsAndQuery;
	function hasKeyInMap(key, map) {
	    //return Immutable.Map(map).has(key);
	    if (!map) {
	        return false;
	    }
	    return (typeof map[key]) !== "undefined";
	}
	exports.hasKeyInMap = hasKeyInMap;
	//将数组改成n个一组[[1,2,3,4,5],[6,7,8,9,10],[11,12,13,14,15]]
	function changeArrayForNewGroup(list, n) {
	    var array = [];
	    var length = list.length;
	    var copyList = Immutable.fromJS(list).toJS();
	    var loopCount = parseInt((length / n).toString());
	    var j = 0, k = n;
	    for (var i = 0; i < loopCount; i++) {
	        var after = copyList.splice(j, k);
	        array.push(after);
	    }
	    if (length % n != 0) {
	        array.push(copyList);
	    }
	    return array;
	}
	exports.changeArrayForNewGroup = changeArrayForNewGroup;
	//数组去掉重复项
	function removeRepeatElementInArray(list) {
	    var new_arr = [];
	    for (var i = 0; i < list.length; i++) {
	        var items = list[i];
	        //判断元素是否存在于new_arr中，如果不存在则插入到new_arr的最后
	        if ($.inArray(items, new_arr) == -1) {
	            new_arr.push(items);
	        }
	    }
	    return new_arr;
	}
	exports.removeRepeatElementInArray = removeRepeatElementInArray;
	//数组去掉重复项，single is map [{a:1,b:2}] key:需要比较的object的键
	function removeRepeatObjectElementInArray(list, key) {
	    var re = [list[0]];
	    for (var i = 1; i < list.length; i++) {
	        var item = list[i];
	        if (!containsItems(re, item, key)) {
	            re.push(item);
	        }
	    }
	    return re;
	}
	exports.removeRepeatObjectElementInArray = removeRepeatObjectElementInArray;
	function containsItems(array, item, key) {
	    for (var i = 0; i < array.length; i++) {
	        if (array[i][key] == item[key]) {
	            return true;
	        }
	    }
	    return false;
	}
	exports.containsItems = containsItems;
	function scrollTo(jqueryElement) {
	    $('html, body').animate({
	        scrollTop: jqueryElement.offset().top - 79
	    }, 500);
	}
	exports.scrollTo = scrollTo;
	/**
	 * 从数组中获取随机个元素 传入的数组会被改变
	 * @param array 被选取的元素
	 * @param count 选取个数
	 * @returns {Array}
	 */
	function getRandomElementFromArray(array, count) {
	    var result = [];
	    //var copyArray = Immutable.fromJS(array).toJS();
	    var copyArray = array;
	    while (result.length < count) {
	        var temp = (Math.random() * copyArray.length) >> 0;
	        result.push(copyArray.splice(temp, 1)[0]);
	    }
	    return result;
	}
	exports.getRandomElementFromArray = getRandomElementFromArray;
	/**
	 * 找到单个元素在数组中位置
	 * @param singleItem 单个元素
	 * @param itemArray 元素数组
	 * @param matchKeyArray 如果单个元素是object 可以通过指定key进行匹配
	 * @returns {number} -1 表示不存在 其余返回位置
	 */
	function getIndexInArray(singleItem, itemArray, matchKeyArray) {
	    var index = -1;
	    if (!matchKeyArray) {
	        for (var i = 0; i < itemArray.length; i++) {
	            if (JSON.stringify(singleItem) === JSON.stringify(itemArray[i])) {
	                index = i;
	                break;
	            }
	        }
	        return index;
	    }
	    else {
	        for (var i = 0; i < itemArray.length; i++) {
	            var isAllKeysMatch = true;
	            for (var m = 0; m < matchKeyArray.length; m++) {
	                var key = matchKeyArray[m];
	                if (singleItem[key] !== itemArray[i][key]) {
	                    isAllKeysMatch = false;
	                    break;
	                }
	            }
	            if (isAllKeysMatch) {
	                index = i;
	                break;
	            }
	        }
	        return index;
	    }
	}
	exports.getIndexInArray = getIndexInArray;
	function isInArray(singleItem, itemArray, matchKeyArray) {
	    return getIndexInArray(singleItem, itemArray, matchKeyArray) !== -1;
	}
	exports.isInArray = isInArray;
	/**
	 * 重新分配array， 将operateArray 从deleteFromArray中删除，添加到addToArray中
	 * @param addToArray
	 * @param deleteFromArray
	 * @param operateArray 被移动的小array
	 */
	function reallocArray(addToArray, deleteFromArray, operateArray) {
	    Array.prototype.push.apply(addToArray, operateArray);
	    deleteArray(deleteFromArray, operateArray);
	}
	exports.reallocArray = reallocArray;
	function deleteArray(deleteFromArray, operateArray) {
	    for (var i = 0; i < operateArray.length; i++) {
	        var index = getIndexInArray(operateArray[i], deleteFromArray);
	        deleteFromArray.splice(index, 1);
	    }
	    return deleteFromArray;
	}
	exports.deleteArray = deleteArray;
	//format data
	function formatDate(time, targetFormat) {
	    var t = new Date(time);
	    var tf = function (i) { return (i < 10 ? '0' : '') + i; };
	    var format = "yyyy-MM-dd";
	    if (targetFormat) {
	        format = targetFormat;
	    }
	    return format.replace(/yyyy|MM|dd|HH|mm|ss/g, function (a) {
	        switch (a) {
	            case 'yyyy':
	                return tf(t.getFullYear());
	                break;
	            case 'MM':
	                return tf(t.getMonth() + 1);
	                break;
	            case 'mm':
	                return tf(t.getMinutes());
	                break;
	            case 'dd':
	                return tf(t.getDate());
	                break;
	            case 'HH':
	                return tf(t.getHours());
	                break;
	            case 'ss':
	                return tf(t.getSeconds());
	                break;
	        }
	    });
	}
	exports.formatDate = formatDate;
	//根据termID,获取 学年 ,yearMonths
	function getYearMonthsByTermID(termID) {
	    var passedTerms = GlobalContext_1.getTermOptions();
	    var yearMonths = [];
	    for (var _i = 0, passedTerms_1 = passedTerms; _i < passedTerms_1.length; _i++) {
	        var item = passedTerms_1[_i];
	        if (item.termID == termID) {
	            var currentYear = item.termYear;
	            var nextYear = parseInt(currentYear) + 1;
	            for (var i = 9; i <= 12; i++) {
	                var map = {};
	                map["month"] = i;
	                map["year"] = currentYear;
	                yearMonths.push(map);
	            }
	            for (var j = 1; j <= 6; j++) {
	                var map = {};
	                map["month"] = j;
	                map["year"] = nextYear;
	                yearMonths.push(map);
	            }
	        }
	    }
	    return yearMonths;
	}
	exports.getYearMonthsByTermID = getYearMonthsByTermID;
	/**
	 *
	 * @param dimScores
	 * @param paramBackFlag  参数是否正序读取  影响rightText取list的第一个，还是最后一个
	 * paramBackFlag = true  leftChar = [0].dimName
	 */
	function progressDualAxis(dimScores, paramBackFlag) {
	    var newArray = [];
	    for (var _i = 0, dimScores_1 = dimScores; _i < dimScores_1.length; _i++) {
	        var item = dimScores_1[_i];
	        var leftText = "", leftChar = "", rightText = "", rightChar = "", direction = "", dimScore = 0;
	        var score = item.score;
	        var totalScore = item.totalScore;
	        var middleScore = totalScore / 2;
	        var displayDim = item.displayDim;
	        if (paramBackFlag) {
	            leftChar = displayDim[0].dimType;
	            leftText = displayDim[0].dimName;
	            rightChar = displayDim[1].dimType;
	            rightText = displayDim[1].dimName;
	            direction = score > middleScore ? "right" : "left";
	            dimScore = Math.abs(score - middleScore) * 100 / middleScore;
	        }
	        else {
	            leftChar = displayDim[1].dimType;
	            leftText = displayDim[1].dimName;
	            rightChar = displayDim[0].dimType;
	            rightText = displayDim[0].dimName;
	            direction = score > middleScore ? "left" : "right";
	            dimScore = Math.abs(score - middleScore) * 100 / middleScore;
	        }
	        var dimMap = {
	            leftChar: leftChar,
	            leftText: leftText,
	            rightChar: rightChar,
	            rightText: rightText,
	            direction: direction,
	            dimScore: dimScore
	        };
	        newArray.push(dimMap);
	    }
	    return newArray;
	}
	exports.progressDualAxis = progressDualAxis;
	/* *
	*判断是否是字符串
	* @param str
	* @return {boolean}
	*/
	function isString(str) {
	    return Object.prototype.toString.call(str) === "[object String]";
	}
	exports.isString = isString;
	function isObject(str) {
	    return Object.prototype.toString.call(str) === "[object Object]";
	}
	/**
	 * 将map object转化为字符串，保证相同object转化为相同string，可以作为key来存储
	 * @param obj
	 */
	function transformObjectToString(obj) {
	    var keys = Object.keys(obj);
	    keys.sort();
	    var keyValueStringArray = [];
	    for (var i = 0; i < keys.length; i++) {
	        var key = keys[i];
	        var value = obj[key];
	        var valueString = "";
	        if (isObject(value)) {
	            valueString = transformObjectToString(value);
	        }
	        else {
	            valueString = JSON.stringify(value);
	        }
	        keyValueStringArray.push(key + "_" + valueString + "-");
	    }
	    return keyValueStringArray.toString();
	}
	exports.transformObjectToString = transformObjectToString;


/***/ },
/* 379 */,
/* 380 */
/*!*************************************************!*\
  !*** ./actions/HomePage/HomePageActionTypes.ts ***!
  \*************************************************/
/***/ function(module, exports) {

	//所有程序中用到的有关此模块的actionID 都引用于此 ****必须全局唯一*****
	"use strict";
	//学生主页
	//获取当前学期 放在初始化中
	//主页所有请求都有学期
	// 获取排名情况
	exports.GET_STUDENT_RANKSTATE = "GET_STUDENT_RANKSTATE";
	// 7选3卡片
	exports.GET_STUDENT_SUBJECTCHOICESTATE = "GET_STUDENT_SUBJECTCHOICESTATE";
	// 生涯探索卡片
	exports.GET_STUDENT_CAREERSTATE = "GET_STUDENT_CAREERSTATE";
	//自我剖析  ---获取
	exports.GET_STUDENT_ANALYZEMYSELF = "GET_STUDENT_ANALYZEMYSELF";
	//自我剖析  ---保存
	exports.SET_STUDENT_ANALYZEMYSELF = "SET_STUDENT_ANALYZEMYSELF";
	// 目标设定卡片
	exports.GET_STUDENT_TARGETSTATE = "GET_STUDENT_TARGETSTATE";
	// 目标设定卡片 --- 保存
	exports.SET_STUDENT_TARGETSTATE = "SET_STUDENT_TARGETSTATE";
	// 综合素质记录 
	exports.GET_STUDENT_COMPROHENSIVEQUALITYCARDS = "GET_STUDENT_COMPROHENSIVEQUALITYCARDS";
	//选修课，选择名称--所属类别--课程学分
	exports.GET_ELECTIVECOURSE_CATEGORY = "GET_ELECTIVECOURSE_CATEGORY";
	// 最近来访
	exports.GET_STUDENT_LATESTVISITOR = "GET_STUDENT_LATESTVISITOR";
	// 同学眼中的我
	exports.GET_STUDENT_IMPRESSION = "GET_STUDENT_IMPRESSION";
	//同学眼中的我  ---  school印象列表
	exports.SCHOOL_PROVIDED_IMPRESSIONS = "SCHOOL_PROVIDED_IMPRESSIONS";
	//同学眼中的我  ---  保存印象
	exports.SET_STUDENT_IMPRESSIONS = "SET_STUDENT_IMPRESSIONS";
	exports.READ_STUDENT_USERINFO = "READ_STUDENT_USERINFO";


/***/ },
/* 381 */
/*!***********************************************************************!*\
  !*** ./actions/TeacherPersonalPage/TeacherPersonalPageActionTypes.ts ***!
  \***********************************************************************/
/***/ function(module, exports) {

	//所有程序中用到的有关此模块的actionID 都引用于此 ****必须全局唯一*****
	"use strict";
	//获取老师的个人信息
	exports.READ_TEACHER_USERINFO = "READ_TEACHER_USERINFO";
	// 获取班主任页面拥有的菜单
	exports.GET_TEACHER_MODULECONFIG = "GET_TEACHER_MODULECONFIG";
	// 班主任 获取班级同学列表
	exports.GET_TEACHER_CLASSMATELIST = "GET_TEACHER_CLASSMATELIST";
	// 班主任
	// 获取班级排名状态
	exports.GET_TEACHER_RANKSTATE = "GET_TEACHER_RANKSTATE";
	// 获取过往通知 发送班级通知 获取班级通知  删除班级通知
	exports.GET_TEACHER_CLASSNOTIFICATION = "GET_TEACHER_CLASSNOTIFICATION";
	exports.SET_TEACHER_CLASSNOTIFICATION = "SET_TEACHER_CLASSNOTIFICATION";
	exports.DELETE_TEACHER_CLASSNOTIFICATION = "DELETE_TEACHER_CLASSNOTIFICATION";
	// 获取班级积分排名
	exports.GET_TEACHER_RANKINCLASS = "GET_TEACHER_RANKINCLASS";
	// 获取过往班团活动 新增班团活动 修改班团活动 删除班团活动
	exports.READ_TEACHER_ACTIVITY = "READ_TEACHER_ACTIVITY";
	exports.SAVE_TEACHER_ACTIVITY = "SAVE_TEACHER_ACTIVITY";
	exports.DELETE_TEACHER_ACTIVITY = "DELETE_TEACHER_ACTIVITY";
	// 添加学生表现前 获取表现所需的列表
	exports.READ_TEACHER_STUDENTPERFORMANCEOPTIONS = "READ_TEACHER_STUDENTPERFORMANCEOPTIONS";
	// 获取学生过往表现记录 获取表现记录类型列表 新增表现记录 删除表现记录
	exports.READ_TEACHER_STUDENTPERFORMANCE_RECORD = "READ_TEACHER_STUDENTPERFORMANCE_RECORD";
	exports.SAVE_TEACHER_STUDENTPERFORMANCE_RECORD = "SAVE_TEACHER_STUDENTPERFORMANCE_RECORD";
	exports.DELETE_TEACHER_STUDENTPERFORMANCE_RECORD = "DELETE_TEACHER_STUDENTPERFORMANCE_RECORD";
	// 获取特殊学生列表 添加特殊学生 移除特殊学生
	exports.READ_TEACHER_SPECIALSTUDENT = "READ_TEACHER_SPECIALSTUDENT";
	exports.CREATE_TEACHER_SPECIALSTUDENT = "CREATE_TEACHER_SPECIALSTUDENT";
	exports.DELETE_TEACHER_SPECIALSTUDENT = "DELETE_TEACHER_SPECIALSTUDENT";
	// 获取特殊学生的过往情况分析记录 新增特殊学生的情况分析记录 修改特殊学生的情况分析记录 删除特殊学生的情况分析记录
	exports.READ_TEACHER_SPECIALSTUDENT_RECORD = "READ_TEACHER_SPECIALSTUDENT_RECORD";
	exports.SAVE_TEACHER_SPECIALSTUDENT_RECORD = "SAVE_TEACHER_SPECIALSTUDENT_RECORD";
	exports.DELETE_TEACHER_SPECIALSTUDENT_RECORD = "DELETE_TEACHER_SPECIALSTUDENT_RECORD";
	// 获取此学生此学期的星星评价 提交此学生此学期的星星评价
	exports.GET_TEACHER_EVALUATESTUDENT_STAR = "GET_TEACHER_EVALUATESTUDENT_STAR";
	exports.SET_TEACHER_EVALUATESTUDENT_STAR = "SET_TEACHER_EVALUATESTUDENT_STAR";
	// 获取老师对此学生此学期的学期整体评价 提交老师对此学生此学期的学期整体评价
	exports.GET_TEACHER_TERMEVALUATE = "GET_TEACHER_TERMEVALUATE";
	exports.SET_TEACHER_TERMEVALUATE = "SET_TEACHER_TERMEVALUATE";
	// 获取此年月此学生的班主任月度评语 提交此年月此学生的班主任月度评语
	exports.SET_TEACHER_MONTHEVALUATE = "SET_TEACHER_MONTHEVALUATE";
	// 获取此年月此学生的月度总结
	exports.GET_TEACHER_STUDENTMONTHSUMMARY = "GET_TEACHER_STUDENTMONTHSUMMARY";
	//使用老师管理学生评语处请求，获取评价学生选项列表，前台需要处理为树形结构
	exports.GET_TEACHER_STUTERMQUALITYEVALUATIONITEMS = "GET_TEACHER_STUTERMQUALITYEVALUATIONITEMS";
	//老师管理学生评语 列表
	exports.READ_TEACHER_EVALUATESTUDENTDICT = "READ_TEACHER_EVALUATESTUDENTDICT";
	//添加/修改评语字典
	exports.SAVE_TEACHER_REVIEWWORD = "SAVE_TEACHER_REVIEWWORD";
	//删除评语字典
	exports.DELETE_TEACHER_REVIEWWORD = "DELETE_TEACHER_REVIEWWORD";
	//提交素质评价的结果 一个方面 三个小方面
	exports.SUBMIT_TEACHER_STUTERMQUALITYEVALUATION = "SUBMIT_TEACHER_STUTERMQUALITYEVALUATION";


/***/ },
/* 382 */
/*!***************************************************!*\
  !*** ./actions/AdminPage/AdminPageActionTypes.ts ***!
  \***************************************************/
/***/ function(module, exports) {

	//所有程序中用到的有关此模块的actionID 都引用于此 ****必须全局唯一*****
	"use strict";
	//管理员主页
	exports.READ_ADMIN_USERINFO = "READ_ADMIN_USERINFO";
	exports.GET_ADMIN_TERMWITHGRADEYEARSTRUCT = "GET_ADMIN_TERMWITHGRADEYEARSTRUCT";
	//获取学校账户统计
	exports.GET_ADMIN_SCHOOLACCOUNTSTATISTIC = "GET_ADMIN_SCHOOLACCOUNTSTATISTIC";
	// 获取全部管理员账户 增删改查
	exports.READ_ADMIN_MANAGERCOUNT = "READ_ADMIN_MANAGERCOUNT";
	exports.CREATE_ADMIN_MANAGERCOUNT = "CREATE_ADMIN_MANAGERCOUNT";
	exports.UPDATE_ADMIN_MANAGERCOUNT = "UPDATE_ADMIN_MANAGERCOUNT";
	exports.DELETE_ADMIN_MANAGERCOUNT = "DELETE_ADMIN_MANAGERCOUNT";
	// 获取全部学生账户 获取年级列表 班级列表 编辑
	exports.READ_ADMIN_STUDENTACCOUNT = "READ_ADMIN_STUDENTACCOUNT";
	exports.CREATE_ADMIN_STUDENTACCOUNT = "CREATE_ADMIN_STUDENTACCOUNT";
	exports.UPDATE_ADMIN_STUDENTACCOUNT = "UPDATE_ADMIN_STUDENTACCOUNT";
	exports.DELETE_ADMIN_STUDENTACCOUNT = "DELETE_ADMIN_STUDENTACCOUNT";
	// 获取所有成绩条目 增删改查 上传成绩
	exports.READ_ADMIN_EXAMINFO = "READ_ADMIN_EXAMINFO";
	exports.CREATE_ADMIN_EXAMINFO = "CREATE_ADMIN_EXAMINFO";
	exports.UPDATE_ADMIN_EXAMINFO = "UPDATE_ADMIN_EXAMINFO";
	exports.DELETE_ADMIN_EXAMINFO = "DELETE_ADMIN_EXAMINFO";
	exports.UPLOAD_ADMIN_EXAMSCORE = "UPLOAD_ADMIN_EXAMSCORE";
	// 获取月度主题 保存月度主题
	exports.GET_ADMIN_MONTHTHEME = "GET_ADMIN_MONTHTHEME";
	exports.SET_ADMIN_MONTHTHEME = "SET_ADMIN_MONTHTHEME";
	exports.READ_ADMIN_EVENTHOLDER = "READ_ADMIN_EVENTHOLDER";
	exports.CREATE_ADMIN_EVENTHOLDER = "CREATE_ADMIN_EVENTHOLDER";
	exports.UPDATE_ADMIN_EVENTHOLDER = "UPDATE_ADMIN_EVENTHOLDER";
	exports.DELETE_ADMIN_EVENTHOLDER = "DELETE_ADMIN_EVENTHOLDER";
	// 获取学生描述关键词类别：“德智体美劳其他”
	exports.GET_ADMIN_IMPRESSIONTYPES = "GET_ADMIN_IMPRESSIONTYPES";
	// 学生描述关键词增删改查
	exports.READ_ADMIN_IMPRESSIONWORD = "READ_ADMIN_IMPRESSIONWORD";
	exports.CREATE_ADMIN_IMPRESSIONWORD = "CREATE_ADMIN_IMPRESSIONWORD";
	exports.UPDATE_ADMIN_IMPRESSIONWORD = "UPDATE_ADMIN_IMPRESSIONWORD";
	exports.DELETE_ADMIN_IMPRESSIONWORD = "DELETE_ADMIN_IMPRESSIONWORD";
	// 获取积分条目 设置积分条目
	exports.GET_ADMIN_INTEGRALSCOREITEM = "GET_ADMIN_INTEGRALSCOREITEM";
	exports.SET_ADMIN_INTEGRALSCOREITEM = "SET_ADMIN_INTEGRALSCOREITEM";
	// 综合素质活动库统计 学生活跃度统计
	exports.GET_ADMIN_ACTIVITYLIBSTATISTICS = "GET_ADMIN_ACTIVITYLIBSTATISTICS";
	exports.GET_ADMIN_STUDENTACTIVITYSTATISTICS = "GET_ADMIN_STUDENTACTIVITYSTATISTICS";
	// 获取学生档案列表 新增学生档案 下载学生档案 获取班级年级 学期列表
	exports.READ_ADMIN_STUDENTRECORD = "READ_ADMIN_STUDENTRECORD";
	exports.CREATE_ADMIN_STUDENTRECORD = "CREATE_ADMIN_STUDENTRECORD";
	exports.DOWNLOAD_ADMIN_STUDENTRECORD = "DOWNLOAD_ADMIN_STUDENTRECORD";
	// 获取举报条目 删除条目 标记条目 核准条目 二期
	exports.READ_ADMIN_REPORTITEM = "READ_ADMIN_REPORTITEM";
	exports.MARK_ADMIN_REPORTITEM = "MARK_ADMIN_REPORTITEM";
	exports.ACCEPT_ADMIN_REPORTITEM = "ACCEPT_ADMIN_REPORTITEM";
	exports.DELETE_ADMIN_REPORTITEM = "DELETE_ADMIN_REPORTITEM";
	//校园寻星--获取评选条目
	exports.GET_ADMIN_STAROPTIONS = "GET_ADMIN_STAROPTIONS";


/***/ },
/* 383 */
/*!*******************************!*\
  !*** ./common/storageUtil.ts ***!
  \*******************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var storageKeys = __webpack_require__(/*! ./storageKey */ 384);
	var commonFunc_1 = __webpack_require__(/*! ./commonFunc */ 378);
	/**
	 * 封装storage操作 解耦 具体操作实现过程
	 * @param termID
	 */
	function setTermIDToStorage(termID) {
	    commonFunc_1.setValueToSessionStorage(storageKeys.session_termID, termID);
	}
	exports.setTermIDToStorage = setTermIDToStorage;
	function getTermIDFromStorage() {
	    return commonFunc_1.getValueFromSessionStorage(storageKeys.session_termID);
	}
	exports.getTermIDFromStorage = getTermIDFromStorage;
	function setRoleEnumToStorage(roleEnum) {
	    commonFunc_1.setValueToSessionStorage(storageKeys.session_roleEnum, roleEnum);
	}
	exports.setRoleEnumToStorage = setRoleEnumToStorage;
	function getRoleEnumFromStorage() {
	    return commonFunc_1.getValueFromSessionStorage(storageKeys.session_roleEnum);
	}
	exports.getRoleEnumFromStorage = getRoleEnumFromStorage;
	function getSchoolIDFromStorage() {
	    return commonFunc_1.getValueFromSessionStorage(storageKeys.session_schoolID);
	}
	exports.getSchoolIDFromStorage = getSchoolIDFromStorage;
	function getRegionIDFromStorage() {
	    return commonFunc_1.getValueFromSessionStorage(storageKeys.session_regionID);
	}
	exports.getRegionIDFromStorage = getRegionIDFromStorage;
	function getUserIDFromStorage() {
	    return commonFunc_1.getValueFromSessionStorage(storageKeys.session_UserID);
	}
	exports.getUserIDFromStorage = getUserIDFromStorage;


/***/ },
/* 384 */
/*!******************************!*\
  !*** ./common/storageKey.ts ***!
  \******************************/
/***/ function(module, exports) {

	"use strict";
	//本地永久存储的localStorage key值
	exports.local_system_id = "systemID";
	exports.local_open_id = "openID";
	exports.local_school_id = "schoolID";
	exports.local_region_id = "regionID";
	exports.local_region_choose = "regionChoose";
	exports.local_school_choose = "schoolChoose";
	//学科兴趣StrInt、职业性格MBTI、职业兴趣Holland 测试题目及答案缓存使用localstorage，因为key值过多不便书写，现将key的规则在此说明
	//题目缓存key: UserID_StrInt_question UserID_MBTI_question UserID_Holland_question
	//答案缓存key: UserID_StrInt_answer_0 最后一位数字为题目显示的顺序，从0开始
	//会话级别的sessionStorage key值
	exports.session_qrcode_src = "qrcodeSrc";
	exports.session_qrcode_time = "qrcodeTime";
	exports.session_collegeScope = "collegeScope";
	exports.session_UserID = "UserID";
	exports.session_systemID = "systemID";
	exports.session_regionID = "RegionID";
	exports.session_token = "token";
	exports.session_grade = "grade";
	exports.session_stuClass = "stuClass";
	exports.session_schoolID = "schoolID";
	exports.session_nextStepID = "nextStepID";
	exports.session_isDone = "isDone";
	exports.session_authCode = "authCode";
	exports.session_state = "state";
	exports.session_termID = "termID";
	exports.session_roleEnum = "roleEnum";


/***/ },
/* 385 */
/*!****************************!*\
  !*** ./common/ajaxUtil.ts ***!
  \****************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var commonVar = __webpack_require__(/*! ./commonVar */ 355);
	var commonFunc = __webpack_require__(/*! ./commonFunc */ 378);
	var antd_1 = __webpack_require__(/*! antd */ 386);
	"use strict";
	var operateActionUtil_1 = __webpack_require__(/*! ./operateActionUtil */ 387);
	var commonVar_1 = __webpack_require__(/*! ./commonVar */ 355);
	var MockUtil_1 = __webpack_require__(/*! test/mock/MockUtil */ 410);
	var ActionInfoUtil_1 = __webpack_require__(/*! ./Module/ActionInfoUtil */ 389);
	var storageUtil_1 = __webpack_require__(/*! ./storageUtil */ 383);
	var CommonActionTypes_1 = __webpack_require__(/*! ../actions/CommonAction/CommonActionTypes */ 399);
	var objectAssign = __webpack_require__(/*! object-assign */ 96);
	function isUserMockData(actionID) {
	    //return true;
	    if (commonVar_1.GlobalDatasource === "GlobalForceToUseRealData") {
	        return false;
	    }
	    else if (commonVar_1.GlobalDatasource === "GlobalForceUseMockData") {
	        var actionBasicInfo = ActionInfoUtil_1.getActionBasicInfo(actionID);
	        var componentUserMockDataFlagExistAndIsFalse = actionBasicInfo && !(typeof (actionBasicInfo.useMockData) === "undefined") && !actionBasicInfo.useMockData;
	        return componentUserMockDataFlagExistAndIsFalse ? false : true;
	    }
	    else if (commonVar_1.GlobalDatasource === "GlobalUseComponentData") {
	        return ActionInfoUtil_1.getActionBasicInfo(actionID) && ActionInfoUtil_1.getActionBasicInfo(actionID).userMockData;
	    }
	}
	exports.isUserMockData = isUserMockData;
	function ajaxSyncPost(url, jsondata, successfunc, errorfunc) {
	    hzyCommon.ajaxSyncPost(url, jsondata, successfunc, errorfunc);
	}
	function ajaxAsyncPost(url, jsondata, successfunc, errorfunc) {
	    hzyCommon.ajaxAsyncPost(url, jsondata, successfunc, errorfunc);
	}
	/**
	 *  异步请求 必须传递successFunc
	 * @param actionID
	 * @param successFunc
	 * @param isForceUseMockData
	 * @param failFunc
	 * @param errorFunc
	 */
	function getDataByActionIDAsync(actionID, successFunc, failFunc, errorFunc) {
	    getDataByActionIDWithQueryAsync(actionID, {}, successFunc, failFunc, errorFunc);
	}
	exports.getDataByActionIDAsync = getDataByActionIDAsync;
	/**
	 * 异步请求 带参数 必须传递successFunc
	 * @param actionID
	 * @param queryObj
	 * @param successFunc
	 * @param isForceUseMockData
	 * @param failFunc
	 * @param errorFunc
	 */
	function getDataByActionIDWithQueryAsync(actionID, queryObj, successFunc, failFunc, errorFunc) {
	    getDataByActionIDWithQueryAndRequestMethod(actionID, queryObj, successFunc, ajaxAsyncPost, true, failFunc, errorFunc);
	}
	exports.getDataByActionIDWithQueryAsync = getDataByActionIDWithQueryAsync;
	function getDataByActionIDWithQueryAndRequestMethod(actionID, queryObj, successFunc, requestMethod, checkTargetUserID, failFunc, errorFunc) {
	    if (commonVar.isDebug()) {
	        console.log("actionID:" + actionID);
	    }
	    var actionInfo = operateActionUtil_1.getActionInfo(actionID);
	    var baseUrl = commonVar.baseUrl;
	    //todo targetUserID命名统一（优先级高）有可能跨省跨学校的地方-> ajax -> regionID schoolID -> baseUrl （优先级低）
	    //queryObject 中targetUserID, 并且 targetUserID !== 我的userID 那么发送请求获取对应regionID schoolID
	    if (checkTargetUserID && !!queryObj && !!queryObj["targetUserID"] && queryObj["targetUserID"] != storageUtil_1.getUserIDFromStorage()) {
	        getDataByActionIDWithQueryAndRequestMethod(CommonActionTypes_1.GET_COMMON_OTHERUSERREGIONSCHOOLINFO, { queryUserID: queryObj["targetUserID"] }, function (response) {
	            var _a = response.result, schoolID = _a.schoolID, regionID = _a.regionID;
	            baseUrl = commonVar.baseUrl + "/" + regionID + "/" + schoolID; //
	        }, ajaxSyncPost, false);
	    }
	    else {
	        baseUrl = commonVar.baseUrl + "/" + storageUtil_1.getRegionIDFromStorage() + "/" + storageUtil_1.getSchoolIDFromStorage();
	    }
	    var postUrl = baseUrl + actionInfo.url;
	    var data = {
	        privilege: actionInfo.privilege
	    };
	    data = objectAssign({}, queryObj);
	    if (commonVar.isDebug()) {
	        console.log("%casync postUrl: " + postUrl, "color:green");
	        console.log(actionID + " data");
	        console.log(data);
	    }
	    /*if (isForceUseMockData || commonVar.isUseMockData){
	     mockDataByActionIDAndUrl(actionID, postUrl)
	     }*/
	    var postData = commonFunc.assignDataForAjax(data);
	    var responseData = {};
	    var useMockData = isUserMockData(actionID);
	    if (useMockData) {
	        MockUtil_1.mockDataByUrl(actionInfo.url);
	    }
	    requestMethod(postUrl, postData, function (response) {
	        //todo 使用mockjs 返回的是json字符串 需要转化为json
	        if (commonVar.isDebug() && useMockData && commonFunc.isString(response)) {
	            response = JSON.parse(response);
	        }
	        if (response.status == "success") {
	            responseData = response;
	            if (commonVar.isDebug()) {
	                console.log(actionID + " response:");
	                console.log(response);
	            }
	            if (typeof (successFunc) == "function") {
	                if (commonVar.isDebug() && requestMethod.name == "ajaxAsyncPost") {
	                    //todo 开发时 模拟异步延迟 1秒，正式环境要去掉
	                    setTimeout(function () { successFunc(response); }, 1000);
	                }
	                else {
	                    successFunc(response);
	                }
	            }
	        }
	        else {
	            if (commonVar.isDebug()) {
	                console.log("%cajax fail: " + postUrl, "color:red");
	                if (commonVar.isDebug()) {
	                    console.log(actionID + " response:");
	                    console.log(response);
	                }
	            }
	            if (typeof (failFunc) == "function") {
	                failFunc(response);
	            }
	        }
	    }, function (response) {
	        if (commonVar.isDebug()) {
	            console.log("%cajax error : " + postUrl, "color:red");
	        }
	        if (XMLHttpRequest.status == 911) {
	            antd_1.Modal.error({
	                title: "会话超时, 请重新登陆",
	                onOk: function () {
	                    window.location.href = commonVar.loginUrl;
	                }
	            });
	        }
	        if (typeof (errorFunc) == "function") {
	            errorFunc(XMLHttpRequest, response);
	        }
	    });
	    return responseData;
	}
	/**
	 * 同步请求
	 * @param actionID
	 * @param successFunc
	 * @param isForceUseMockData
	 * @param failFunc
	 * @param errorFunc
	 * @returns {any}
	 */
	function getDataByActionID(actionID, successFunc, failFunc, errorFunc) {
	    var result = getDataByActionIDWithQuery(actionID, {}, successFunc);
	    return result;
	}
	exports.getDataByActionID = getDataByActionID;
	/**
	 * 同步带参请求
	 * @param actionID
	 * @param queryObj
	 * @param successFunc
	 * @param isForceUseMockData
	 * @param failFunc
	 * @param errorFunc
	 * @returns {{}}
	 */
	function getDataByActionIDWithQuery(actionID, queryObj, successFunc, failFunc, errorFunc) {
	    return getDataByActionIDWithQueryAndRequestMethod(actionID, queryObj, successFunc, ajaxSyncPost, true, failFunc, errorFunc);
	}
	exports.getDataByActionIDWithQuery = getDataByActionIDWithQuery;
	/**
	 * 从缓存中获取结果，如果缓存中没有，发起ajax，然后将结果放入缓存
	 * 缓存的key 是actionID 如果queryObj不为空，将其序列化后，以下划线链接
	 */
	function getDataFromContextByActionID(contextArray, actionID, queryObj) {
	    var key = actionID;
	    if (!commonFunc.isEmptyObject(queryObj)) {
	        key = key + "_" + commonFunc.transformObjectToString(queryObj);
	    }
	    if (contextArray[key]) {
	        return contextArray[key];
	    }
	    else {
	        var response = getDataByActionIDWithQuery(actionID, queryObj);
	        contextArray[key] = response;
	        return response;
	    }
	}
	exports.getDataFromContextByActionID = getDataFromContextByActionID;
	function getDataFromContextByActionIDAsync(contextArray, actionID, successFunc, queryObj) {
	    var key = actionID;
	    if (!commonFunc.isEmptyObject(queryObj)) {
	        key = key + "_" + commonFunc.transformObjectToString(queryObj);
	    }
	    if (contextArray[key]) {
	        successFunc(contextArray[key]);
	    }
	    else {
	        getDataByActionIDWithQueryAsync(actionID, queryObj, function (response) {
	            contextArray[key] = response;
	            successFunc(response);
	        });
	    }
	}
	exports.getDataFromContextByActionIDAsync = getDataFromContextByActionIDAsync;


/***/ },
/* 386 */
/*!*****************************!*\
  !*** ./~/antd/dist/antd.js ***!
  \*****************************/
/***/ function(module, exports, __webpack_require__) {

	/*!
	 * antd v1.6.5
	 * 
	 * Copyright 2015-present, Alipay, Inc.
	 * All rights reserved.
	 */
	(function webpackUniversalModuleDefinition(root, factory) {
		if(true)
			module.exports = factory(__webpack_require__(/*! react */ 93), __webpack_require__(/*! react-dom */ 125));
		else if(typeof define === 'function' && define.amd)
			define(["react", "react-dom"], factory);
		else if(typeof exports === 'object')
			exports["antd"] = factory(require("react"), require("react-dom"));
		else
			root["antd"] = factory(root["React"], root["ReactDOM"]);
	})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_4__) {
	return /******/ (function(modules) { // webpackBootstrap
	/******/ 	// The module cache
	/******/ 	var installedModules = {};
	/******/
	/******/ 	// The require function
	/******/ 	function __webpack_require__(moduleId) {
	/******/
	/******/ 		// Check if module is in cache
	/******/ 		if(installedModules[moduleId])
	/******/ 			return installedModules[moduleId].exports;
	/******/
	/******/ 		// Create a new module (and put it into the cache)
	/******/ 		var module = installedModules[moduleId] = {
	/******/ 			exports: {},
	/******/ 			id: moduleId,
	/******/ 			loaded: false
	/******/ 		};
	/******/
	/******/ 		// Execute the module function
	/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
	/******/
	/******/ 		// Flag the module as loaded
	/******/ 		module.loaded = true;
	/******/
	/******/ 		// Return the exports of the module
	/******/ 		return module.exports;
	/******/ 	}
	/******/
	/******/
	/******/ 	// expose the modules object (__webpack_modules__)
	/******/ 	__webpack_require__.m = modules;
	/******/
	/******/ 	// expose the module cache
	/******/ 	__webpack_require__.c = installedModules;
	/******/
	/******/ 	// __webpack_public_path__
	/******/ 	__webpack_require__.p = "";
	/******/
	/******/ 	// Load entry module and return exports
	/******/ 	return __webpack_require__(0);
	/******/ })
	/************************************************************************/
	/******/ ((function(modules) {
		// Check all modules for deduplicated modules
		for(var i in modules) {
			if(Object.prototype.hasOwnProperty.call(modules, i)) {
				switch(typeof modules[i]) {
				case "function": break;
				case "object":
					// Module can be created from a template
					modules[i] = (function(_m) {
						var args = _m.slice(1), fn = modules[_m[0]];
						return function (a,b,c) {
							fn.apply(this, [a,b,c].concat(args));
						};
					}(modules[i]));
					break;
				default:
					// Module is a copy of another module
					modules[i] = modules[modules[i]];
					break;
				}
			}
		}
		return modules;
	}([
	/* 0 */
	/***/ function(module, exports, __webpack_require__) {
	
		module.exports = __webpack_require__(259);
	
	
	/***/ },
	/* 1 */
	/***/ function(module, exports) {
	
		module.exports = __WEBPACK_EXTERNAL_MODULE_1__;
	
	/***/ },
	/* 2 */
	/***/ function(module, exports, __webpack_require__) {
	
		var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
		  Copyright (c) 2016 Jed Watson.
		  Licensed under the MIT License (MIT), see
		  http://jedwatson.github.io/classnames
		*/
		/* global define */
		
		(function () {
			'use strict';
		
			var hasOwn = {}.hasOwnProperty;
		
			function classNames () {
				var classes = [];
		
				for (var i = 0; i < arguments.length; i++) {
					var arg = arguments[i];
					if (!arg) continue;
		
					var argType = typeof arg;
		
					if (argType === 'string' || argType === 'number') {
						classes.push(arg);
					} else if (Array.isArray(arg)) {
						classes.push(classNames.apply(null, arg));
					} else if (argType === 'object') {
						for (var key in arg) {
							if (hasOwn.call(arg, key) && arg[key]) {
								classes.push(key);
							}
						}
					}
				}
		
				return classes.join(' ');
			}
		
			if (typeof module !== 'undefined' && module.exports) {
				module.exports = classNames;
			} else if (true) {
				// register as 'classnames', consistent with npm package name
				!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
					return classNames;
				}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
			} else {
				window.classNames = classNames;
			}
		}());
	
	
	/***/ },
	/* 3 */
	/***/ function(module, exports) {
	
		// removed by extract-text-webpack-plugin
	
	/***/ },
	/* 4 */
	/***/ function(module, exports) {
	
		module.exports = __WEBPACK_EXTERNAL_MODULE_4__;
	
	/***/ },
	/* 5 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
		
		exports.warning = warning;
		exports.format = format;
		exports.isEmptyValue = isEmptyValue;
		exports.isEmptyObject = isEmptyObject;
		exports.asyncMap = asyncMap;
		exports.complementError = complementError;
		exports.deepMerge = deepMerge;
		var formatRegExp = /%[sdj%]/g;
		
		var warning2 = function warning2() {};
		
		if (true) {
		  warning2 = function warning2(type, message) {
		    if (typeof console !== 'undefined' && console.warn) {
		      console.warn(type, message);
		    }
		  };
		}
		
		function warning(type, errors) {
		  // only warn native warning, default type is string, confuses many people...
		  if (errors.every(function (e) {
		    return typeof e === 'string';
		  })) {
		    warning2(type, errors);
		  }
		}
		
		function format() {
		  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		    args[_key] = arguments[_key];
		  }
		
		  var i = 1;
		  var f = args[0];
		  var len = args.length;
		  if (typeof f === 'function') {
		    return f.apply(null, args.slice(1));
		  }
		  if (typeof f === 'string') {
		    var str = String(f).replace(formatRegExp, function (x) {
		      if (x === '%%') {
		        return '%';
		      }
		      if (i >= len) {
		        return x;
		      }
		      switch (x) {
		        case '%s':
		          return String(args[i++]);
		        case '%d':
		          return Number(args[i++]);
		        case '%j':
		          try {
		            return JSON.stringify(args[i++]);
		          } catch (_) {
		            return '[Circular]';
		          }
		          break;
		        default:
		          return x;
		      }
		    });
		    for (var arg = args[i]; i < len; arg = args[++i]) {
		      str += ' ' + arg;
		    }
		    return str;
		  }
		  return f;
		}
		
		function isNativeStringType(type) {
		  return type === 'string' || type === 'url' || type === 'hex' || type === 'email';
		}
		
		function isEmptyValue(value, type) {
		  if (value === undefined || value === null) {
		    return true;
		  }
		  if (type === 'array' && Array.isArray(value) && !value.length) {
		    return true;
		  }
		  if (isNativeStringType(type) && typeof value === 'string' && !value) {
		    return true;
		  }
		  return false;
		}
		
		function isEmptyObject(obj) {
		  return Object.keys(obj).length === 0;
		}
		
		function asyncParallelArray(arr, func, callback) {
		  var results = [];
		  var total = 0;
		  var arrLength = arr.length;
		
		  function count(errors) {
		    results.push.apply(results, errors);
		    total++;
		    if (total === arrLength) {
		      callback(results);
		    }
		  }
		
		  arr.forEach(function (a) {
		    func(a, count);
		  });
		}
		
		function asyncSerialArray(arr, func, callback) {
		  var index = 0;
		  var arrLength = arr.length;
		
		  function next(errors) {
		    if (errors.length) {
		      callback(errors);
		      return;
		    }
		    var original = index;
		    index = index + 1;
		    if (original < arrLength) {
		      func(arr[original], next);
		    } else {
		      callback([]);
		    }
		  }
		
		  next([]);
		}
		
		function flattenObjArr(objArr) {
		  var ret = [];
		  Object.keys(objArr).forEach(function (k) {
		    ret.push.apply(ret, objArr[k]);
		  });
		  return ret;
		}
		
		function asyncMap(objArr, option, func, callback) {
		  if (option.first) {
		    var flattenArr = flattenObjArr(objArr);
		    return asyncSerialArray(flattenArr, func, callback);
		  }
		  var firstFields = option.firstFields || [];
		  if (firstFields === true) {
		    firstFields = Object.keys(objArr);
		  }
		  var objArrKeys = Object.keys(objArr);
		  var objArrLength = objArrKeys.length;
		  var total = 0;
		  var results = [];
		  var next = function next(errors) {
		    results.push.apply(results, errors);
		    total++;
		    if (total === objArrLength) {
		      callback(results);
		    }
		  };
		  objArrKeys.forEach(function (key) {
		    var arr = objArr[key];
		    if (firstFields.indexOf(key) !== -1) {
		      asyncSerialArray(arr, func, next);
		    } else {
		      asyncParallelArray(arr, func, next);
		    }
		  });
		}
		
		function complementError(rule) {
		  return function (oe) {
		    if (oe && oe.message) {
		      oe.field = oe.field || rule.fullField;
		      return oe;
		    }
		    return {
		      message: oe,
		      field: oe.field || rule.fullField
		    };
		  };
		}
		
		function deepMerge(target, source) {
		  if (source) {
		    for (var s in source) {
		      if (source.hasOwnProperty(s)) {
		        var value = source[s];
		        if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && _typeof(target[s]) === 'object') {
		          target[s] = _extends({}, target[s], value);
		        } else {
		          target[s] = value;
		        }
		      }
		    }
		  }
		  return target;
		}
	
	/***/ },
	/* 6 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
		
		exports["default"] = function (props) {
		  var type = props.type;
		  var _props$className = props.className;
		  var className = _props$className === undefined ? '' : _props$className;
		
		  var other = _objectWithoutProperties(props, ['type', 'className']);
		
		  className += ' anticon anticon-' + type;
		  return _react2["default"].createElement('i', _extends({ className: className.trim() }, other));
		};
		
		module.exports = exports['default'];
	
	/***/ },
	/* 7 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		// export this package's api
		module.exports = __webpack_require__(287);
	
	/***/ },
	/* 8 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = {
		  required: __webpack_require__(54),
		  whitespace: __webpack_require__(139),
		  type: __webpack_require__(138),
		  range: __webpack_require__(137),
		  "enum": __webpack_require__(135),
		  pattern: __webpack_require__(136)
		};
		module.exports = exports['default'];
	
	/***/ },
	/* 9 */
	/***/ function(module, exports, __webpack_require__) {
	
		/*
		 * GregorianCalendar class
		 * @ignore
		 * @author yiminghe@gmail.com
		 */
		'use strict';
		
		var toInt = parseInt;
		var Utils = __webpack_require__(275);
		var defaultLocale = __webpack_require__(89);
		var Const = __webpack_require__(88);
		
		/*
		 * GregorianCalendar class.
		 *
		 * - no arguments:
		 *   Constructs a default GregorianCalendar using the current time
		 *   in the default time zone with the default locale.
		 * - one argument locale:
		 *   Constructs a GregorianCalendar
		 *   based on the current time in the default time zone with the given locale.
		 *
		 * @class Date.Gregorian
		 */
		function GregorianCalendar(loc) {
		  var locale = loc || defaultLocale;
		
		  this.locale = locale;
		
		  this.fields = [];
		
		  /*
		   * The currently set time for this date.
		   * @protected
		   * @type Number|undefined
		   */
		  this.time = undefined;
		  /*
		   * The timezoneOffset in minutes used by this date.
		   * @type Number
		   * @protected
		   */
		
		  this.timezoneOffset = locale.timezoneOffset;
		
		  /*
		   * The first day of the week
		   * @type Number
		   * @protected
		   */
		  this.firstDayOfWeek = locale.firstDayOfWeek;
		
		  /*
		   * The number of days required for the first week in a month or year,
		   * with possible values from 1 to 7.
		   * @@protected
		   * @type Number
		   */
		  this.minimalDaysInFirstWeek = locale.minimalDaysInFirstWeek;
		
		  this.fieldsComputed = false;
		}
		
		Utils.mix(GregorianCalendar, Const);
		
		Utils.mix(GregorianCalendar, {
		  Utils: Utils,
		
		  defaultLocale: defaultLocale,
		
		  /*
		   * Determines if the given year is a leap year.
		   * Returns true if the given year is a leap year. To specify BC year numbers,
		   * 1 - year number must be given. For example, year BC 4 is specified as -3.
		   * @param {Number} year the given year.
		   * @returns {Boolean} true if the given year is a leap year; false otherwise.
		   * @static
		   * @method
		   */
		  isLeapYear: Utils.isLeapYear,
		
		  /*
		   * Enum indicating year field of date
		   * @type Number
		   */
		  YEAR: 1,
		  /*
		   * Enum indicating month field of date
		   * @type Number
		   */
		  MONTH: 2,
		  /*
		   * Enum indicating the day of the month
		   * @type Number
		   */
		  DAY_OF_MONTH: 3,
		  /*
		   * Enum indicating the hour (24).
		   * @type Number
		   */
		  HOUR_OF_DAY: 4,
		  /*
		   * Enum indicating the minute of the day
		   * @type Number
		   */
		  MINUTES: 5,
		  /*
		   * Enum indicating the second of the day
		   * @type Number
		   */
		  SECONDS: 6,
		  /*
		   * Enum indicating the millisecond of the day
		   * @type Number
		   */
		  MILLISECONDS: 7,
		  /*
		   * Enum indicating the week number within the current year
		   * @type Number
		   */
		  WEEK_OF_YEAR: 8,
		  /*
		   * Enum indicating the week number within the current month
		   * @type Number
		   */
		  WEEK_OF_MONTH: 9,
		
		  /*
		   * Enum indicating the day of the day number within the current year
		   * @type Number
		   */
		  DAY_OF_YEAR: 10,
		  /*
		   * Enum indicating the day of the week
		   * @type Number
		   */
		  DAY_OF_WEEK: 11,
		  /*
		   * Enum indicating the day of the ordinal number of the day of the week
		   * @type Number
		   */
		  DAY_OF_WEEK_IN_MONTH: 12,
		
		  /*
		   * Enum indicating am
		   * @type Number
		   */
		  AM: 0,
		  /*
		   * Enum indicating pm
		   * @type Number
		   */
		  PM: 1
		});
		
		var FIELDS = ['', 'Year', 'Month', 'DayOfMonth', 'HourOfDay', 'Minutes', 'Seconds', 'Milliseconds', 'WeekOfYear', 'WeekOfMonth', 'DayOfYear', 'DayOfWeek', 'DayOfWeekInMonth'];
		
		var YEAR = GregorianCalendar.YEAR;
		var MONTH = GregorianCalendar.MONTH;
		var DAY_OF_MONTH = GregorianCalendar.DAY_OF_MONTH;
		var HOUR_OF_DAY = GregorianCalendar.HOUR_OF_DAY;
		var MINUTE = GregorianCalendar.MINUTES;
		var SECONDS = GregorianCalendar.SECONDS;
		
		var MILLISECONDS = GregorianCalendar.MILLISECONDS;
		var DAY_OF_WEEK_IN_MONTH = GregorianCalendar.DAY_OF_WEEK_IN_MONTH;
		var DAY_OF_YEAR = GregorianCalendar.DAY_OF_YEAR;
		var DAY_OF_WEEK = GregorianCalendar.DAY_OF_WEEK;
		
		var WEEK_OF_MONTH = GregorianCalendar.WEEK_OF_MONTH;
		var WEEK_OF_YEAR = GregorianCalendar.WEEK_OF_YEAR;
		
		var MONTH_LENGTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // 0-based
		var LEAP_MONTH_LENGTH = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // 0-based
		
		var ONE_SECOND = 1000;
		var ONE_MINUTE = 60 * ONE_SECOND;
		var ONE_HOUR = 60 * ONE_MINUTE;
		var ONE_DAY = 24 * ONE_HOUR;
		var ONE_WEEK = ONE_DAY * 7;
		
		var EPOCH_OFFSET = 719163; // Fixed date of January 1, 1970 (Gregorian)
		
		var mod = Utils.mod;
		var _isLeapYear = Utils.isLeapYear;
		var floorDivide = Math.floor;
		
		var MIN_VALUES = [undefined, 1, // YEAR
		GregorianCalendar.JANUARY, // MONTH
		1, // DAY_OF_MONTH
		0, // HOUR_OF_DAY
		0, // MINUTE
		0, // SECONDS
		0, // MILLISECONDS
		
		1, // WEEK_OF_YEAR
		undefined, // WEEK_OF_MONTH
		
		1, // DAY_OF_YEAR
		GregorianCalendar.SUNDAY, // DAY_OF_WEEK
		1];
		
		// DAY_OF_WEEK_IN_MONTH
		var MAX_VALUES = [undefined, 292278994, // YEAR
		GregorianCalendar.DECEMBER, // MONTH
		undefined, // DAY_OF_MONTH
		23, // HOUR_OF_DAY
		59, // MINUTE
		59, // SECONDS
		999, // MILLISECONDS
		undefined, // WEEK_OF_YEAR
		undefined, // WEEK_OF_MONTH
		undefined, // DAY_OF_YEAR
		GregorianCalendar.SATURDAY, // DAY_OF_WEEK
		undefined];
		
		// ------------------- private start
		
		// DAY_OF_WEEK_IN_MONTH
		function getMonthLength(year, month) {
		  return _isLeapYear(year) ? LEAP_MONTH_LENGTH[month] : MONTH_LENGTH[month];
		}
		
		function getYearLength(year) {
		  return _isLeapYear(year) ? 366 : 365;
		}
		
		function adjustDayOfMonth(self) {
		  var fields = self.fields;
		  var year = fields[YEAR];
		  var month = fields[MONTH];
		  var monthLen = getMonthLength(year, month);
		  var dayOfMonth = fields[DAY_OF_MONTH];
		  if (dayOfMonth > monthLen) {
		    self.set(DAY_OF_MONTH, monthLen);
		  }
		}
		
		function getDayOfWeekDateOnOrBefore(fixedDate, dayOfWeek) {
		  // 1.1.1 is monday
		  // one week has 7 days
		  return fixedDate - mod(fixedDate - dayOfWeek, 7);
		}
		
		function getWeekNumber(self, fixedDay1, fixedDate) {
		  var fixedDay1st = getDayOfWeekDateOnOrBefore(fixedDay1 + 6, self.firstDayOfWeek);
		  var nDays = fixedDay1st - fixedDay1;
		  if (nDays >= self.minimalDaysInFirstWeek) {
		    fixedDay1st -= 7;
		  }
		  var normalizedDayOfPeriod = fixedDate - fixedDay1st;
		  return floorDivide(normalizedDayOfPeriod / 7) + 1;
		}
		
		// ------------------- private end
		
		GregorianCalendar.prototype = {
		  constructor: GregorianCalendar,
		
		  isGregorianCalendar: 1,
		
		  /*
		   * Determines if current year is a leap year.
		   * Returns true if the given year is a leap year. To specify BC year numbers,
		   * 1 - year number must be given. For example, year BC 4 is specified as -3.
		   * @returns {Boolean} true if the given year is a leap year; false otherwise.
		   * @method
		   * @member Date.Gregorian
		   */
		  isLeapYear: function isLeapYear() {
		    return _isLeapYear(this.getYear());
		  },
		
		  /*
		   * Return local info for current date instance
		   * @returns {Object}
		   */
		  getLocale: function getLocale() {
		    return this.locale;
		  },
		
		  /*
		   * Returns the minimum value for
		   * the given calendar field of this GregorianCalendar instance.
		   * The minimum value is defined as the smallest value
		   * returned by the get method for any possible time value,
		   * taking into consideration the current values of the getFirstDayOfWeek,
		   * getMinimalDaysInFirstWeek.
		   * @param field the calendar field.
		   * @returns {Number} the minimum value for the given calendar field.
		   */
		  getActualMinimum: function getActualMinimum(field) {
		    if (MIN_VALUES[field] !== undefined) {
		      return MIN_VALUES[field];
		    }
		    if (field === WEEK_OF_MONTH) {
		      var cal = this.clone();
		      cal.clear();
		      cal.set(this.fields[YEAR], this.fields[MONTH], 1);
		      return cal.get(WEEK_OF_MONTH);
		    }
		
		    throw new Error('minimum value not defined!');
		  },
		
		  /*
		   * Returns the maximum value for the given calendar field
		   * of this GregorianCalendar instance.
		   * The maximum value is defined as the largest value returned
		   * by the get method for any possible time value, taking into consideration
		   * the current values of the getFirstDayOfWeek, getMinimalDaysInFirstWeek methods.
		   * @param field the calendar field.
		   * @returns {Number} the maximum value for the given calendar field.
		   */
		  getActualMaximum: function getActualMaximum(field) {
		    if (MAX_VALUES[field] !== undefined) {
		      return MAX_VALUES[field];
		    }
		    var value = undefined;
		    var fields = this.fields;
		    switch (field) {
		      case DAY_OF_MONTH:
		        value = getMonthLength(fields[YEAR], fields[MONTH]);
		        break;
		
		      case WEEK_OF_YEAR:
		        var endOfYear = this.clone();
		        endOfYear.clear();
		        endOfYear.set(fields[YEAR], GregorianCalendar.DECEMBER, 31);
		        value = endOfYear.get(WEEK_OF_YEAR);
		        if (value === 1) {
		          value = 52;
		        }
		        break;
		
		      case WEEK_OF_MONTH:
		        var endOfMonth = this.clone();
		        endOfMonth.clear();
		        endOfMonth.set(fields[YEAR], fields[MONTH], getMonthLength(fields[YEAR], fields[MONTH]));
		        value = endOfMonth.get(WEEK_OF_MONTH);
		        break;
		
		      case DAY_OF_YEAR:
		        value = getYearLength(fields[YEAR]);
		        break;
		
		      case DAY_OF_WEEK_IN_MONTH:
		        value = toInt((getMonthLength(fields[YEAR], fields[MONTH]) - 1) / 7) + 1;
		        break;
		      default:
		        break;
		    }
		    if (value === undefined) {
		      throw new Error('maximum value not defined!');
		    }
		    return value;
		  },
		
		  /*
		   * Determines if the given calendar field has a value set,
		   * including cases that the value has been set by internal fields calculations
		   * triggered by a get method call.
		   * @param field the calendar field to be cleared.
		   * @returns {boolean} true if the given calendar field has a value set; false otherwise.
		   */
		  isSet: function isSet(field) {
		    return this.fields[field] !== undefined;
		  },
		
		  /*
		   * Converts the time value (millisecond offset from the Epoch)
		   * to calendar field values.
		   * @protected
		   */
		  computeFields: function computeFields() {
		    var time = this.time;
		    var timezoneOffset = this.timezoneOffset * ONE_MINUTE;
		    var fixedDate = toInt(timezoneOffset / ONE_DAY);
		    var timeOfDay = timezoneOffset % ONE_DAY;
		    fixedDate += toInt(time / ONE_DAY);
		    timeOfDay += time % ONE_DAY;
		    if (timeOfDay >= ONE_DAY) {
		      timeOfDay -= ONE_DAY;
		      fixedDate++;
		    } else {
		      while (timeOfDay < 0) {
		        timeOfDay += ONE_DAY;
		        fixedDate--;
		      }
		    }
		
		    fixedDate += EPOCH_OFFSET;
		
		    var date = Utils.getGregorianDateFromFixedDate(fixedDate);
		
		    var year = date.year;
		
		    var fields = this.fields;
		    fields[YEAR] = year;
		    fields[MONTH] = date.month;
		    fields[DAY_OF_MONTH] = date.dayOfMonth;
		    fields[DAY_OF_WEEK] = date.dayOfWeek;
		
		    if (timeOfDay !== 0) {
		      fields[HOUR_OF_DAY] = toInt(timeOfDay / ONE_HOUR);
		      var r = timeOfDay % ONE_HOUR;
		      fields[MINUTE] = toInt(r / ONE_MINUTE);
		      r %= ONE_MINUTE;
		      fields[SECONDS] = toInt(r / ONE_SECOND);
		      fields[MILLISECONDS] = r % ONE_SECOND;
		    } else {
		      fields[HOUR_OF_DAY] = fields[MINUTE] = fields[SECONDS] = fields[MILLISECONDS] = 0;
		    }
		
		    var fixedDateJan1 = Utils.getFixedDate(year, GregorianCalendar.JANUARY, 1);
		    var dayOfYear = fixedDate - fixedDateJan1 + 1;
		    var fixDateMonth1 = fixedDate - date.dayOfMonth + 1;
		
		    fields[DAY_OF_YEAR] = dayOfYear;
		    fields[DAY_OF_WEEK_IN_MONTH] = toInt((date.dayOfMonth - 1) / 7) + 1;
		
		    var weekOfYear = getWeekNumber(this, fixedDateJan1, fixedDate);
		
		    // 本周没有足够的时间在当前年
		    if (weekOfYear === 0) {
		      // If the date belongs to the last week of the
		      // previous year, use the week number of "12/31" of
		      // the "previous" year.
		      var fixedDec31 = fixedDateJan1 - 1;
		      var prevJan1 = fixedDateJan1 - getYearLength(year - 1);
		      weekOfYear = getWeekNumber(this, prevJan1, fixedDec31);
		    } else
		      // 本周是年末最后一周，可能有足够的时间在新的一年
		      if (weekOfYear >= 52) {
		        var nextJan1 = fixedDateJan1 + getYearLength(year);
		        var nextJan1st = getDayOfWeekDateOnOrBefore(nextJan1 + 6, this.firstDayOfWeek);
		        var nDays = nextJan1st - nextJan1;
		        // 本周有足够天数在新的一年
		        if (nDays >= this.minimalDaysInFirstWeek &&
		        // 当天确实在本周，weekOfYear === 53 时是不需要这个判断
		        fixedDate >= nextJan1st - 7) {
		          weekOfYear = 1;
		        }
		      }
		
		    fields[WEEK_OF_YEAR] = weekOfYear;
		    fields[WEEK_OF_MONTH] = getWeekNumber(this, fixDateMonth1, fixedDate);
		
		    this.fieldsComputed = true;
		  },
		
		  /*
		   * Converts calendar field values to the time value
		   * (millisecond offset from the Epoch).
		   * @protected
		   */
		  computeTime: function computeTime() {
		    var year = undefined;
		    var fields = this.fields;
		    if (this.isSet(YEAR)) {
		      year = fields[YEAR];
		    } else {
		      year = new Date().getFullYear();
		    }
		    var timeOfDay = 0;
		    if (this.isSet(HOUR_OF_DAY)) {
		      timeOfDay += fields[HOUR_OF_DAY];
		    }
		    timeOfDay *= 60;
		    timeOfDay += fields[MINUTE] || 0;
		    timeOfDay *= 60;
		    timeOfDay += fields[SECONDS] || 0;
		    timeOfDay *= 1000;
		    timeOfDay += fields[MILLISECONDS] || 0;
		    var fixedDate = 0;
		    fields[YEAR] = year;
		    fixedDate = fixedDate + this.getFixedDate();
		    // millis represents local wall-clock time in milliseconds.
		    var millis = (fixedDate - EPOCH_OFFSET) * ONE_DAY + timeOfDay;
		    millis -= this.timezoneOffset * ONE_MINUTE;
		    this.time = millis;
		    this.computeFields();
		  },
		
		  /*
		   * Fills in any unset fields in the calendar fields. First,
		   * the computeTime() method is called if the time value (millisecond offset from the Epoch)
		   * has not been calculated from calendar field values.
		   * Then, the computeFields() method is called to calculate all calendar field values.
		   * @protected
		   */
		  complete: function complete() {
		    if (this.time === undefined) {
		      this.computeTime();
		    }
		    if (!this.fieldsComputed) {
		      this.computeFields();
		    }
		  },
		
		  getFixedDate: function getFixedDate() {
		    var self = this;
		
		    var fields = self.fields;
		
		    var firstDayOfWeekCfg = self.firstDayOfWeek;
		
		    var year = fields[YEAR];
		
		    var month = GregorianCalendar.JANUARY;
		
		    if (self.isSet(MONTH)) {
		      month = fields[MONTH];
		      if (month > GregorianCalendar.DECEMBER) {
		        year += toInt(month / 12);
		        month %= 12;
		      } else if (month < GregorianCalendar.JANUARY) {
		        year += floorDivide(month / 12);
		        month = mod(month, 12);
		      }
		    }
		
		    // Get the fixed date since Jan 1, 1 (Gregorian). We are on
		    // the first day of either `month' or January in 'year'.
		    var fixedDate = Utils.getFixedDate(year, month, 1);
		    var firstDayOfWeek = undefined;
		    var dayOfWeek = self.firstDayOfWeek;
		
		    if (self.isSet(DAY_OF_WEEK)) {
		      dayOfWeek = fields[DAY_OF_WEEK];
		    }
		
		    if (self.isSet(MONTH)) {
		      if (self.isSet(DAY_OF_MONTH)) {
		        fixedDate += fields[DAY_OF_MONTH] - 1;
		      } else {
		        if (self.isSet(WEEK_OF_MONTH)) {
		          firstDayOfWeek = getDayOfWeekDateOnOrBefore(fixedDate + 6, firstDayOfWeekCfg);
		
		          // If we have enough days in the first week, then
		          // move to the previous week.
		          if (firstDayOfWeek - fixedDate >= self.minimalDaysInFirstWeek) {
		            firstDayOfWeek -= 7;
		          }
		
		          if (dayOfWeek !== firstDayOfWeekCfg) {
		            firstDayOfWeek = getDayOfWeekDateOnOrBefore(firstDayOfWeek + 6, dayOfWeek);
		          }
		
		          fixedDate = firstDayOfWeek + 7 * (fields[WEEK_OF_MONTH] - 1);
		        } else {
		          var dowim = undefined;
		          if (self.isSet(DAY_OF_WEEK_IN_MONTH)) {
		            dowim = fields[DAY_OF_WEEK_IN_MONTH];
		          } else {
		            dowim = 1;
		          }
		          var lastDate = 7 * dowim;
		          if (dowim < 0) {
		            lastDate = getMonthLength(year, month) + 7 * (dowim + 1);
		          }
		          fixedDate = getDayOfWeekDateOnOrBefore(fixedDate + lastDate - 1, dayOfWeek);
		        }
		      }
		    } else {
		      // We are on the first day of the year.
		      if (self.isSet(DAY_OF_YEAR)) {
		        fixedDate += fields[DAY_OF_YEAR] - 1;
		      } else if (self.isSet(WEEK_OF_YEAR)) {
		        firstDayOfWeek = getDayOfWeekDateOnOrBefore(fixedDate + 6, firstDayOfWeekCfg);
		        // If we have enough days in the first week, then move
		        // to the previous week.
		        if (firstDayOfWeek - fixedDate >= self.minimalDaysInFirstWeek) {
		          firstDayOfWeek -= 7;
		        }
		        if (dayOfWeek !== firstDayOfWeekCfg) {
		          firstDayOfWeek = getDayOfWeekDateOnOrBefore(firstDayOfWeek + 6, dayOfWeek);
		        }
		        fixedDate = firstDayOfWeek + 7 * (fields[WEEK_OF_YEAR] - 1);
		      }
		    }
		
		    return fixedDate;
		  },
		
		  /*
		   * Returns this Calendar's time value in milliseconds
		   * @member Date.Gregorian
		   * @returns {Number} the current time as UTC milliseconds from the epoch.
		   */
		  getTime: function getTime() {
		    if (this.time === undefined) {
		      this.computeTime();
		    }
		    return this.time;
		  },
		
		  /*
		   * Sets this Calendar's current time from the given long value.
		   * @param time the new time in UTC milliseconds from the epoch.
		   */
		  setTime: function setTime(time) {
		    this.time = time;
		    this.fieldsComputed = false;
		    this.complete();
		  },
		
		  /*
		   * Returns the value of the given calendar field.
		   * @param field the given calendar field.
		   * @returns {Number} the value for the given calendar field.
		   */
		  get: function get(field) {
		    this.complete();
		    return this.fields[field];
		  },
		
		  /*
		   * Returns the year of the given calendar field.
		   * @method getYear
		   * @returns {Number} the year for the given calendar field.
		   */
		
		  /*
		   * Returns the month of the given calendar field.
		   * @method getMonth
		   * @returns {Number} the month for the given calendar field.
		   */
		
		  /*
		   * Returns the day of month of the given calendar field.
		   * @method getDayOfMonth
		   * @returns {Number} the day of month for the given calendar field.
		   */
		
		  /*
		   * Returns the hour of day of the given calendar field.
		   * @method getHourOfDay
		   * @returns {Number} the hour of day for the given calendar field.
		   */
		
		  /*
		   * Returns the minute of the given calendar field.
		   * @method getMinute
		   * @returns {Number} the minute for the given calendar field.
		   */
		
		  /*
		   * Returns the second of the given calendar field.
		   * @method getSecond
		   * @returns {Number} the second for the given calendar field.
		   */
		
		  /*
		   * Returns the millisecond of the given calendar field.
		   * @method getMilliSecond
		   * @returns {Number} the millisecond for the given calendar field.
		   */
		
		  /*
		   * Returns the week of year of the given calendar field.
		   * @method getWeekOfYear
		   * @returns {Number} the week of year for the given calendar field.
		   */
		
		  /*
		   * Returns the week of month of the given calendar field.
		   * @method getWeekOfMonth
		   * @returns {Number} the week of month for the given calendar field.
		   */
		
		  /*
		   * Returns the day of year of the given calendar field.
		   * @method getDayOfYear
		   * @returns {Number} the day of year for the given calendar field.
		   */
		
		  /*
		   * Returns the day of week of the given calendar field.
		   * @method getDayOfWeek
		   * @returns {Number} the day of week for the given calendar field.
		   */
		
		  /*
		   * Returns the day of week in month of the given calendar field.
		   * @method getDayOfWeekInMonth
		   * @returns {Number} the day of week in month for the given calendar field.
		   */
		
		  /*
		   * Sets the given calendar field to the given value.
		   * @param field the given calendar field.
		   * @param v the value to be set for the given calendar field.
		   */
		  set: function set(field, v) {
		    var len = arguments.length;
		    if (len === 2) {
		      this.fields[field] = v;
		    } else if (len < MILLISECONDS + 1) {
		      for (var i = 0; i < len; i++) {
		        this.fields[YEAR + i] = arguments[i];
		      }
		    } else {
		      throw new Error('illegal arguments for GregorianCalendar set');
		    }
		    this.time = undefined;
		  },
		
		  /*
		   * Set the year of the given calendar field.
		   * @method setYear
		   */
		
		  /*
		   * Set the month of the given calendar field.
		   * @method setMonth
		   */
		
		  /*
		   * Set the day of month of the given calendar field.
		   * @method setDayOfMonth
		   */
		
		  /*
		   * Set the hour of day of the given calendar field.
		   * @method setHourOfDay
		   */
		
		  /*
		   * Set the minute of the given calendar field.
		   * @method setMinute
		   */
		
		  /*
		   * Set the second of the given calendar field.
		   * @method setSecond
		   */
		
		  /*
		   * Set the millisecond of the given calendar field.
		   * @method setMilliSecond
		   */
		
		  /*
		   * Set the week of year of the given calendar field.
		   * @method setWeekOfYear
		   */
		
		  /*
		   * Set the week of month of the given calendar field.
		   * @method setWeekOfMonth
		   */
		
		  /*
		   * Set the day of year of the given calendar field.
		   * @method setDayOfYear
		   */
		
		  /*
		   * Set the day of week of the given calendar field.
		   * @method setDayOfWeek
		   */
		
		  /*
		   * Set the day of week in month of the given calendar field.
		   * @method setDayOfWeekInMonth
		   */
		
		  /*
		   * add for specified field based on two rules:
		   *
		   *  - Add rule 1. The value of field after the call minus the value of field before the
		   *  call is amount, modulo any overflow that has occurred in field
		   *  Overflow occurs when a field value exceeds its range and,
		   *  as a result, the next larger field is incremented or
		   *  decremented and the field value is adjusted back into its range.
		   *
		   *  - Add rule 2. If a smaller field is expected to be invariant,
		   *  but it is impossible for it to be equal to its
		   *  prior value because of changes in its minimum or maximum after
		   *  field is changed, then its value is adjusted to be as close
		   *  as possible to its expected value. A smaller field represents a
		   *  smaller unit of time. HOUR_OF_DAY is a smaller field than
		   *  DAY_OF_MONTH. No adjustment is made to smaller fields
		   *  that are not expected to be invariant. The calendar system
		   *  determines what fields are expected to be invariant.
		   *
		   *
		   *      @example
		   *      use('date/gregorian',function(S, GregorianCalendar){
		   *          const d = new GregorianCalendar();
		   *          d.set(2012, GregorianCalendar.JANUARY, 31);
		   *          d.add(Gregorian.MONTH,1);
		   *          // 2012-2-29
		   *          document.writeln('<p>'+d.getYear()+'-'+d.getMonth()+'-'+d.getDayOfWeek())
		   *          d.add(Gregorian.MONTH,12);
		   *          // 2013-2-28
		   *          document.writeln('<p>'+d.getYear()+'-'+d.getMonth()+'-'+d.getDayOfWeek())
		   *      });
		   *
		   * @param field the calendar field.
		   * @param {Number} amount he amount of date or time to be added to the field.
		   */
		  add: function add(field, a) {
		    if (!a) {
		      return;
		    }
		    var amount = a;
		    var self = this;
		    var fields = self.fields;
		    // computer and retrieve original value
		    var value = self.get(field);
		    if (field === YEAR) {
		      value += amount;
		      self.set(YEAR, value);
		      adjustDayOfMonth(self);
		    } else if (field === MONTH) {
		      value += amount;
		      var yearAmount = floorDivide(value / 12);
		      value = mod(value, 12);
		      if (yearAmount) {
		        self.set(YEAR, fields[YEAR] + yearAmount);
		      }
		      self.set(MONTH, value);
		      adjustDayOfMonth(self);
		    } else {
		      switch (field) {
		        case HOUR_OF_DAY:
		          amount *= ONE_HOUR;
		          break;
		        case MINUTE:
		          amount *= ONE_MINUTE;
		          break;
		        case SECONDS:
		          amount *= ONE_SECOND;
		          break;
		        case MILLISECONDS:
		          break;
		        case WEEK_OF_MONTH:
		        case WEEK_OF_YEAR:
		        case DAY_OF_WEEK_IN_MONTH:
		          amount *= ONE_WEEK;
		          break;
		        case DAY_OF_WEEK:
		        case DAY_OF_YEAR:
		        case DAY_OF_MONTH:
		          amount *= ONE_DAY;
		          break;
		        default:
		          throw new Error('illegal field for add');
		      }
		      self.setTime(self.time + amount);
		    }
		  },
		
		  /*
		   * add the year of the given calendar field.
		   * @method addYear
		   * @param {Number} amount the signed amount to add to field.
		   */
		
		  /*
		   * add the month of the given calendar field.
		   * @method addMonth
		   * @param {Number} amount the signed amount to add to field.
		   */
		
		  /*
		   * add the day of month of the given calendar field.
		   * @method addDayOfMonth
		   * @param {Number} amount the signed amount to add to field.
		   */
		
		  /*
		   * add the hour of day of the given calendar field.
		   * @method addHourOfDay
		   * @param {Number} amount the signed amount to add to field.
		   */
		
		  /*
		   * add the minute of the given calendar field.
		   * @method addMinute
		   * @param {Number} amount the signed amount to add to field.
		   */
		
		  /*
		   * add the second of the given calendar field.
		   * @method addSecond
		   * @param {Number} amount the signed amount to add to field.
		   */
		
		  /*
		   * add the millisecond of the given calendar field.
		   * @method addMilliSecond
		   * @param {Number} amount the signed amount to add to field.
		   */
		
		  /*
		   * add the week of year of the given calendar field.
		   * @method addWeekOfYear
		   * @param {Number} amount the signed amount to add to field.
		   */
		
		  /*
		   * add the week of month of the given calendar field.
		   * @method addWeekOfMonth
		   * @param {Number} amount the signed amount to add to field.
		   */
		
		  /*
		   * add the day of year of the given calendar field.
		   * @method addDayOfYear
		   * @param {Number} amount the signed amount to add to field.
		   */
		
		  /*
		   * add the day of week of the given calendar field.
		   * @method addDayOfWeek
		   * @param {Number} amount the signed amount to add to field.
		   */
		
		  /*
		   * add the day of week in month of the given calendar field.
		   * @method addDayOfWeekInMonth
		   * @param {Number} amount the signed amount to add to field.
		   */
		
		  /*
		   * Get rolled value for the field
		   * @protected
		   */
		  getRolledValue: function getRolledValue(value, a, min, max) {
		    var amount = a;
		    var diff = value - min;
		    var range = max - min + 1;
		    amount %= range;
		    return min + (diff + amount + range) % range;
		  },
		
		  /*
		   * Adds a signed amount to the specified calendar field without changing larger fields.
		   * A negative roll amount means to subtract from field without changing
		   * larger fields. If the specified amount is 0, this method performs nothing.
		   *
		   *
		   *
		   *      @example
		   *      const d = new GregorianCalendar();
		   *      d.set(1999, GregorianCalendar.AUGUST, 31);
		   *      // 1999-4-30
		   *      // Tuesday June 1, 1999
		   *      d.set(1999, GregorianCalendar.JUNE, 1);
		   *      d.add(Gregorian.WEEK_OF_MONTH,-1); // === d.add(Gregorian.WEEK_OF_MONTH,
		   *      d.get(Gregorian.WEEK_OF_MONTH));
		   *      // 1999-06-29
		   *
		   *
		   * @param field the calendar field.
		   * @param {Number} amount the signed amount to add to field.
		   */
		  roll: function roll(field, amount) {
		    if (!amount) {
		      return;
		    }
		    var self = this;
		    // computer and retrieve original value
		    var value = self.get(field);
		    var min = self.getActualMinimum(field);
		    var max = self.getActualMaximum(field);
		    value = self.getRolledValue(value, amount, min, max);
		
		    self.set(field, value);
		
		    // consider compute time priority
		    switch (field) {
		      case MONTH:
		        adjustDayOfMonth(self);
		        break;
		      default:
		        // other fields are set already when get
		        self.updateFieldsBySet(field);
		        break;
		    }
		  },
		
		  /*
		   * keep field stable.
		   *
		   * 2015-09-29 setMonth 2 vs rollSetMonth 2
		   *
		   */
		  rollSet: function rollSet(field, v) {
		    this.set(field, v);
		    switch (field) {
		      case MONTH:
		        adjustDayOfMonth(this);
		        break;
		      default:
		        // other fields are set already when get
		        this.updateFieldsBySet(field);
		        break;
		    }
		  },
		
		  /*
		   * roll the year of the given calendar field.
		   * @method rollYear
		   * @param {Number} amount the signed amount to add to field.
		   */
		
		  /*
		   * roll the month of the given calendar field.
		   * @param {Number} amount the signed amount to add to field.
		   * @method rollMonth
		   */
		
		  /*
		   * roll the day of month of the given calendar field.
		   * @method rollDayOfMonth
		   * @param {Number} amount the signed amount to add to field.
		   */
		
		  /*
		   * roll the hour of day of the given calendar field.
		   * @method rollHourOfDay
		   * @param {Number} amount the signed amount to add to field.
		   */
		
		  /*
		   * roll the minute of the given calendar field.
		   * @method rollMinute
		   * @param {Number} amount the signed amount to add to field.
		   */
		
		  /*
		   * roll the second of the given calendar field.
		   * @method rollSecond
		   * @param {Number} amount the signed amount to add to field.
		   */
		
		  /*
		   * roll the millisecond of the given calendar field.
		   * @method rollMilliSecond
		   * @param {Number} amount the signed amount to add to field.
		   */
		
		  /*
		   * roll the week of year of the given calendar field.
		   * @method rollWeekOfYear
		   * @param {Number} amount the signed amount to add to field.
		   */
		
		  /*
		   * roll the week of month of the given calendar field.
		   * @method rollWeekOfMonth
		   * @param {Number} amount the signed amount to add to field.
		   */
		
		  /*
		   * roll the day of year of the given calendar field.
		   * @method rollDayOfYear
		   * @param {Number} amount the signed amount to add to field.
		   */
		
		  /*
		   * roll the day of week of the given calendar field.
		   * @method rollDayOfWeek
		   * @param {Number} amount the signed amount to add to field.
		   */
		
		  /*
		   * remove other priority fields when call getFixedDate
		   * precondition: other fields are all set or computed
		   * @protected
		   */
		  updateFieldsBySet: function updateFieldsBySet(field) {
		    var fields = this.fields;
		    switch (field) {
		      case WEEK_OF_MONTH:
		        fields[DAY_OF_MONTH] = undefined;
		        break;
		      case DAY_OF_YEAR:
		        fields[MONTH] = undefined;
		        break;
		      case DAY_OF_WEEK:
		        fields[DAY_OF_MONTH] = undefined;
		        break;
		      case WEEK_OF_YEAR:
		        fields[DAY_OF_YEAR] = undefined;
		        fields[MONTH] = undefined;
		        break;
		      default:
		        break;
		    }
		  },
		
		  /*
		   * get current date instance's timezone offset
		   * @returns {Number}
		   */
		  getTimezoneOffset: function getTimezoneOffset() {
		    return this.timezoneOffset;
		  },
		
		  /*
		   * set current date instance's timezone offset
		   */
		  setTimezoneOffset: function setTimezoneOffset(timezoneOffset) {
		    if (this.timezoneOffset !== timezoneOffset) {
		      this.fieldsComputed = undefined;
		      this.timezoneOffset = timezoneOffset;
		    }
		  },
		
		  /*
		   * set first day of week for current date instance
		   */
		  setFirstDayOfWeek: function setFirstDayOfWeek(firstDayOfWeek) {
		    if (this.firstDayOfWeek !== firstDayOfWeek) {
		      this.firstDayOfWeek = firstDayOfWeek;
		      this.fieldsComputed = false;
		    }
		  },
		
		  /*
		   * Gets what the first day of the week is; e.g., SUNDAY in the U.S., MONDAY in France.
		   * @returns {Number} the first day of the week.
		   */
		  getFirstDayOfWeek: function getFirstDayOfWeek() {
		    return this.firstDayOfWeek;
		  },
		
		  /*
		   * Sets what the minimal days required in the first week of the year are; For example,
		   * if the first week is defined as one that contains the first day of the first month of a year,
		   * call this method with value 1.
		   * If it must be a full week, use value 7.
		   * @param minimalDaysInFirstWeek the given minimal days required in the first week of the year.
		   */
		  setMinimalDaysInFirstWeek: function setMinimalDaysInFirstWeek(minimalDaysInFirstWeek) {
		    if (this.minimalDaysInFirstWeek !== minimalDaysInFirstWeek) {
		      this.minimalDaysInFirstWeek = minimalDaysInFirstWeek;
		      this.fieldsComputed = false;
		    }
		  },
		
		  /*
		   * Gets what the minimal days required in the first week of the year are; e.g.,
		   * if the first week is defined as one that contains the first day of the first month of a year,
		   * this method returns 1.
		   * If the minimal days required must be a full week, this method returns 7.
		   * @returns {Number} the minimal days required in the first week of the year.
		   */
		  getMinimalDaysInFirstWeek: function getMinimalDaysInFirstWeek() {
		    return this.minimalDaysInFirstWeek;
		  },
		
		  /*
		   * Returns the number of weeks in the week year
		   * represented by this GregorianCalendar.
		   *
		   * For example, if this GregorianCalendar's date is
		   * December 31, 2008 with the ISO
		   * 8601 compatible setting, this method will return 53 for the
		   * period: December 29, 2008 to January 3, 2010
		   * while getActualMaximum(WEEK_OF_YEAR) will return
		   * 52 for the period: December 31, 2007 to December 28, 2008.
		   *
		   * @return {Number} the number of weeks in the week year.
		   */
		  getWeeksInWeekYear: function getWeeksInWeekYear() {
		    var weekYear = this.getWeekYear();
		    if (weekYear === this.get(YEAR)) {
		      return this.getActualMaximum(WEEK_OF_YEAR);
		    }
		    // Use the 2nd week for calculating the max of WEEK_OF_YEAR
		    var gc = this.clone();
		    gc.clear();
		    gc.setWeekDate(weekYear, 2, this.get(DAY_OF_WEEK));
		    return gc.getActualMaximum(WEEK_OF_YEAR);
		  },
		
		  /*
		   * Returns the week year represented by this GregorianCalendar.
		   * The dates in the weeks between 1 and the
		   * maximum week number of the week year have the same week year value
		   * that may be one year before or after the calendar year value.
		   *
		   * @return {Number} the week year represented by this GregorianCalendar.
		   */
		  getWeekYear: function getWeekYear() {
		    var year = this.get(YEAR); // implicitly  complete
		    var weekOfYear = this.get(WEEK_OF_YEAR);
		    var month = this.get(MONTH);
		    if (month === GregorianCalendar.JANUARY) {
		      if (weekOfYear >= 52) {
		        --year;
		      }
		    } else if (month === GregorianCalendar.DECEMBER) {
		      if (weekOfYear === 1) {
		        ++year;
		      }
		    }
		    return year;
		  },
		  /*
		   * Sets this GregorianCalendar to the date given by the date specifiers - weekYear,
		   * weekOfYear, and dayOfWeek. weekOfYear follows the WEEK_OF_YEAR numbering.
		   * The dayOfWeek value must be one of the DAY_OF_WEEK values: SUNDAY to SATURDAY.
		   *
		   * @param weekYear    the week year
		   * @param weekOfYear  the week number based on weekYear
		   * @param dayOfWeek   the day of week value
		   */
		  setWeekDate: function setWeekDate(weekYear, weekOfYear, dayOfWeek) {
		    if (dayOfWeek < GregorianCalendar.SUNDAY || dayOfWeek > GregorianCalendar.SATURDAY) {
		      throw new Error('invalid dayOfWeek: ' + dayOfWeek);
		    }
		    var fields = this.fields;
		    // To avoid changing the time of day fields by date
		    // calculations, use a clone with the GMT time zone.
		    var gc = this.clone();
		    gc.clear();
		    gc.setTimezoneOffset(0);
		    gc.set(YEAR, weekYear);
		    gc.set(WEEK_OF_YEAR, 1);
		    gc.set(DAY_OF_WEEK, this.getFirstDayOfWeek());
		    var days = dayOfWeek - this.getFirstDayOfWeek();
		    if (days < 0) {
		      days += 7;
		    }
		    days += 7 * (weekOfYear - 1);
		    if (days !== 0) {
		      gc.add(DAY_OF_YEAR, days);
		    } else {
		      gc.complete();
		    }
		    fields[YEAR] = gc.get(YEAR);
		    fields[MONTH] = gc.get(MONTH);
		    fields[DAY_OF_MONTH] = gc.get(DAY_OF_MONTH);
		    this.complete();
		  },
		  /*
		   * Creates and returns a copy of this object.
		   * @returns {Date.Gregorian}
		   */
		  clone: function clone() {
		    if (this.time === undefined) {
		      this.computeTime();
		    }
		    var cal = new GregorianCalendar(this.locale);
		    cal.setTimezoneOffset(cal.getTimezoneOffset());
		    cal.setFirstDayOfWeek(cal.getFirstDayOfWeek());
		    cal.setMinimalDaysInFirstWeek(cal.getMinimalDaysInFirstWeek());
		    cal.setTime(this.time);
		    return cal;
		  },
		
		  /*
		   * Compares this GregorianCalendar to the specified Object.
		   * The result is true if and only if the argument is a GregorianCalendar object
		   * that represents the same time value (millisecond offset from the Epoch)
		   * under the same Calendar parameters and Gregorian change date as this object.
		   * @param {Date.Gregorian} obj the object to compare with.
		   * @returns {boolean} true if this object is equal to obj; false otherwise.
		   */
		  equals: function equals(obj) {
		    return this.getTime() === obj.getTime() && this.firstDayOfWeek === obj.firstDayOfWeek && this.timezoneOffset === obj.timezoneOffset && this.minimalDaysInFirstWeek === obj.minimalDaysInFirstWeek;
		  },
		
		  compareToDay: function compareToDay(d2) {
		    var d1Year = this.getYear();
		    var d2Year = d2.getYear();
		    var d1Month = this.getMonth();
		    var d2Month = d2.getMonth();
		    var d1Day = this.getDayOfMonth();
		    var d2Day = d2.getDayOfMonth();
		    if (d1Year !== d2Year) {
		      return d1Year - d2Year;
		    }
		    if (d1Month !== d2Month) {
		      return d1Month - d2Month;
		    }
		    return d1Day - d2Day;
		  },
		
		  /*
		   * Sets all the calendar field values or specified field and the time value
		   * (millisecond offset from the Epoch) of this Calendar undefined.
		   * This means that isSet() will return false for all the calendar fields,
		   * and the date and time calculations will treat the fields as if they had never been set.
		   * @param [field] the calendar field to be cleared.
		   */
		  clear: function clear(field) {
		    if (field === undefined) {
		      this.field = [];
		    } else {
		      this.fields[field] = undefined;
		    }
		    this.time = undefined;
		    this.fieldsComputed = false;
		  },
		
		  toString: function toString() {
		    // for debug
		    var v = this;
		    return '[GregorianCalendar]: ' + v.getYear() + '/' + v.getMonth() + '/' + v.getDayOfMonth() + ' ' + v.getHourOfDay() + ':' + v.getMinutes() + ':' + v.getSeconds();
		  }
		};
		
		var GregorianCalendarProto = GregorianCalendar.prototype;
		
		Utils.each(FIELDS, function (f, index) {
		  if (f) {
		    GregorianCalendarProto['get' + f] = function get() {
		      return this.get(index);
		    };
		
		    GregorianCalendarProto['isSet' + f] = function isSet() {
		      return this.isSet(index);
		    };
		
		    GregorianCalendarProto['set' + f] = function set(v) {
		      return this.set(index, v);
		    };
		
		    GregorianCalendarProto['add' + f] = function add(v) {
		      return this.add(index, v);
		    };
		
		    GregorianCalendarProto['roll' + f] = function roll(v) {
		      return this.roll(index, v);
		    };
		
		    GregorianCalendarProto['rollSet' + f] = function rollSet(v) {
		      return this.rollSet(index, v);
		    };
		  }
		});
		
		module.exports = GregorianCalendar;
		/*
		 http://docs.oracle.com/javase/7/docs/api/java/util/GregorianCalendar.html
		
		 TODO
		 - day saving time
		 - i18n
		 - julian calendar
		 */
	
	/***/ },
	/* 10 */
	/***/ function(module, exports) {
	
		'use strict';
		/* eslint-disable no-unused-vars */
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		var propIsEnumerable = Object.prototype.propertyIsEnumerable;
		
		function toObject(val) {
			if (val === null || val === undefined) {
				throw new TypeError('Object.assign cannot be called with null or undefined');
			}
		
			return Object(val);
		}
		
		function shouldUseNative() {
			try {
				if (!Object.assign) {
					return false;
				}
		
				// Detect buggy property enumeration order in older V8 versions.
		
				// https://bugs.chromium.org/p/v8/issues/detail?id=4118
				var test1 = new String('abc');  // eslint-disable-line
				test1[5] = 'de';
				if (Object.getOwnPropertyNames(test1)[0] === '5') {
					return false;
				}
		
				// https://bugs.chromium.org/p/v8/issues/detail?id=3056
				var test2 = {};
				for (var i = 0; i < 10; i++) {
					test2['_' + String.fromCharCode(i)] = i;
				}
				var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
					return test2[n];
				});
				if (order2.join('') !== '0123456789') {
					return false;
				}
		
				// https://bugs.chromium.org/p/v8/issues/detail?id=3056
				var test3 = {};
				'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
					test3[letter] = letter;
				});
				if (Object.keys(Object.assign({}, test3)).join('') !==
						'abcdefghijklmnopqrst') {
					return false;
				}
		
				return true;
			} catch (e) {
				// We don't expect any of the above to throw, but better to be safe.
				return false;
			}
		}
		
		module.exports = shouldUseNative() ? Object.assign : function (target, source) {
			var from;
			var to = toObject(target);
			var symbols;
		
			for (var s = 1; s < arguments.length; s++) {
				from = Object(arguments[s]);
		
				for (var key in from) {
					if (hasOwnProperty.call(from, key)) {
						to[key] = from[key];
					}
				}
		
				if (Object.getOwnPropertySymbols) {
					symbols = Object.getOwnPropertySymbols(from);
					for (var i = 0; i < symbols.length; i++) {
						if (propIsEnumerable.call(from, symbols[i])) {
							to[symbols[i]] = from[symbols[i]];
						}
					}
				}
			}
		
			return to;
		};
	
	
	/***/ },
	/* 11 */
	/***/ function(module, exports) {
	
		/**
		 * @ignore
		 * some key-codes definition and utils from closure-library
		 * @author yiminghe@gmail.com
		 */
		
		'use strict';
		
		var KeyCode = {
		  /**
		   * MAC_ENTER
		   */
		  MAC_ENTER: 3,
		  /**
		   * BACKSPACE
		   */
		  BACKSPACE: 8,
		  /**
		   * TAB
		   */
		  TAB: 9,
		  /**
		   * NUMLOCK on FF/Safari Mac
		   */
		  NUM_CENTER: 12, // NUMLOCK on FF/Safari Mac
		  /**
		   * ENTER
		   */
		  ENTER: 13,
		  /**
		   * SHIFT
		   */
		  SHIFT: 16,
		  /**
		   * CTRL
		   */
		  CTRL: 17,
		  /**
		   * ALT
		   */
		  ALT: 18,
		  /**
		   * PAUSE
		   */
		  PAUSE: 19,
		  /**
		   * CAPS_LOCK
		   */
		  CAPS_LOCK: 20,
		  /**
		   * ESC
		   */
		  ESC: 27,
		  /**
		   * SPACE
		   */
		  SPACE: 32,
		  /**
		   * PAGE_UP
		   */
		  PAGE_UP: 33, // also NUM_NORTH_EAST
		  /**
		   * PAGE_DOWN
		   */
		  PAGE_DOWN: 34, // also NUM_SOUTH_EAST
		  /**
		   * END
		   */
		  END: 35, // also NUM_SOUTH_WEST
		  /**
		   * HOME
		   */
		  HOME: 36, // also NUM_NORTH_WEST
		  /**
		   * LEFT
		   */
		  LEFT: 37, // also NUM_WEST
		  /**
		   * UP
		   */
		  UP: 38, // also NUM_NORTH
		  /**
		   * RIGHT
		   */
		  RIGHT: 39, // also NUM_EAST
		  /**
		   * DOWN
		   */
		  DOWN: 40, // also NUM_SOUTH
		  /**
		   * PRINT_SCREEN
		   */
		  PRINT_SCREEN: 44,
		  /**
		   * INSERT
		   */
		  INSERT: 45, // also NUM_INSERT
		  /**
		   * DELETE
		   */
		  DELETE: 46, // also NUM_DELETE
		  /**
		   * ZERO
		   */
		  ZERO: 48,
		  /**
		   * ONE
		   */
		  ONE: 49,
		  /**
		   * TWO
		   */
		  TWO: 50,
		  /**
		   * THREE
		   */
		  THREE: 51,
		  /**
		   * FOUR
		   */
		  FOUR: 52,
		  /**
		   * FIVE
		   */
		  FIVE: 53,
		  /**
		   * SIX
		   */
		  SIX: 54,
		  /**
		   * SEVEN
		   */
		  SEVEN: 55,
		  /**
		   * EIGHT
		   */
		  EIGHT: 56,
		  /**
		   * NINE
		   */
		  NINE: 57,
		  /**
		   * QUESTION_MARK
		   */
		  QUESTION_MARK: 63, // needs localization
		  /**
		   * A
		   */
		  A: 65,
		  /**
		   * B
		   */
		  B: 66,
		  /**
		   * C
		   */
		  C: 67,
		  /**
		   * D
		   */
		  D: 68,
		  /**
		   * E
		   */
		  E: 69,
		  /**
		   * F
		   */
		  F: 70,
		  /**
		   * G
		   */
		  G: 71,
		  /**
		   * H
		   */
		  H: 72,
		  /**
		   * I
		   */
		  I: 73,
		  /**
		   * J
		   */
		  J: 74,
		  /**
		   * K
		   */
		  K: 75,
		  /**
		   * L
		   */
		  L: 76,
		  /**
		   * M
		   */
		  M: 77,
		  /**
		   * N
		   */
		  N: 78,
		  /**
		   * O
		   */
		  O: 79,
		  /**
		   * P
		   */
		  P: 80,
		  /**
		   * Q
		   */
		  Q: 81,
		  /**
		   * R
		   */
		  R: 82,
		  /**
		   * S
		   */
		  S: 83,
		  /**
		   * T
		   */
		  T: 84,
		  /**
		   * U
		   */
		  U: 85,
		  /**
		   * V
		   */
		  V: 86,
		  /**
		   * W
		   */
		  W: 87,
		  /**
		   * X
		   */
		  X: 88,
		  /**
		   * Y
		   */
		  Y: 89,
		  /**
		   * Z
		   */
		  Z: 90,
		  /**
		   * META
		   */
		  META: 91, // WIN_KEY_LEFT
		  /**
		   * WIN_KEY_RIGHT
		   */
		  WIN_KEY_RIGHT: 92,
		  /**
		   * CONTEXT_MENU
		   */
		  CONTEXT_MENU: 93,
		  /**
		   * NUM_ZERO
		   */
		  NUM_ZERO: 96,
		  /**
		   * NUM_ONE
		   */
		  NUM_ONE: 97,
		  /**
		   * NUM_TWO
		   */
		  NUM_TWO: 98,
		  /**
		   * NUM_THREE
		   */
		  NUM_THREE: 99,
		  /**
		   * NUM_FOUR
		   */
		  NUM_FOUR: 100,
		  /**
		   * NUM_FIVE
		   */
		  NUM_FIVE: 101,
		  /**
		   * NUM_SIX
		   */
		  NUM_SIX: 102,
		  /**
		   * NUM_SEVEN
		   */
		  NUM_SEVEN: 103,
		  /**
		   * NUM_EIGHT
		   */
		  NUM_EIGHT: 104,
		  /**
		   * NUM_NINE
		   */
		  NUM_NINE: 105,
		  /**
		   * NUM_MULTIPLY
		   */
		  NUM_MULTIPLY: 106,
		  /**
		   * NUM_PLUS
		   */
		  NUM_PLUS: 107,
		  /**
		   * NUM_MINUS
		   */
		  NUM_MINUS: 109,
		  /**
		   * NUM_PERIOD
		   */
		  NUM_PERIOD: 110,
		  /**
		   * NUM_DIVISION
		   */
		  NUM_DIVISION: 111,
		  /**
		   * F1
		   */
		  F1: 112,
		  /**
		   * F2
		   */
		  F2: 113,
		  /**
		   * F3
		   */
		  F3: 114,
		  /**
		   * F4
		   */
		  F4: 115,
		  /**
		   * F5
		   */
		  F5: 116,
		  /**
		   * F6
		   */
		  F6: 117,
		  /**
		   * F7
		   */
		  F7: 118,
		  /**
		   * F8
		   */
		  F8: 119,
		  /**
		   * F9
		   */
		  F9: 120,
		  /**
		   * F10
		   */
		  F10: 121,
		  /**
		   * F11
		   */
		  F11: 122,
		  /**
		   * F12
		   */
		  F12: 123,
		  /**
		   * NUMLOCK
		   */
		  NUMLOCK: 144,
		  /**
		   * SEMICOLON
		   */
		  SEMICOLON: 186, // needs localization
		  /**
		   * DASH
		   */
		  DASH: 189, // needs localization
		  /**
		   * EQUALS
		   */
		  EQUALS: 187, // needs localization
		  /**
		   * COMMA
		   */
		  COMMA: 188, // needs localization
		  /**
		   * PERIOD
		   */
		  PERIOD: 190, // needs localization
		  /**
		   * SLASH
		   */
		  SLASH: 191, // needs localization
		  /**
		   * APOSTROPHE
		   */
		  APOSTROPHE: 192, // needs localization
		  /**
		   * SINGLE_QUOTE
		   */
		  SINGLE_QUOTE: 222, // needs localization
		  /**
		   * OPEN_SQUARE_BRACKET
		   */
		  OPEN_SQUARE_BRACKET: 219, // needs localization
		  /**
		   * BACKSLASH
		   */
		  BACKSLASH: 220, // needs localization
		  /**
		   * CLOSE_SQUARE_BRACKET
		   */
		  CLOSE_SQUARE_BRACKET: 221, // needs localization
		  /**
		   * WIN_KEY
		   */
		  WIN_KEY: 224,
		  /**
		   * MAC_FF_META
		   */
		  MAC_FF_META: 224, // Firefox (Gecko) fires this for the meta key instead of 91
		  /**
		   * WIN_IME
		   */
		  WIN_IME: 229
		};
		
		/*
		 whether text and modified key is entered at the same time.
		 */
		KeyCode.isTextModifyingKeyEvent = function isTextModifyingKeyEvent(e) {
		  var keyCode = e.keyCode;
		  if (e.altKey && !e.ctrlKey || e.metaKey ||
		  // Function keys don't generate text
		  keyCode >= KeyCode.F1 && keyCode <= KeyCode.F12) {
		    return false;
		  }
		
		  // The following keys are quite harmless, even in combination with
		  // CTRL, ALT or SHIFT.
		  switch (keyCode) {
		    case KeyCode.ALT:
		    case KeyCode.CAPS_LOCK:
		    case KeyCode.CONTEXT_MENU:
		    case KeyCode.CTRL:
		    case KeyCode.DOWN:
		    case KeyCode.END:
		    case KeyCode.ESC:
		    case KeyCode.HOME:
		    case KeyCode.INSERT:
		    case KeyCode.LEFT:
		    case KeyCode.MAC_FF_META:
		    case KeyCode.META:
		    case KeyCode.NUMLOCK:
		    case KeyCode.NUM_CENTER:
		    case KeyCode.PAGE_DOWN:
		    case KeyCode.PAGE_UP:
		    case KeyCode.PAUSE:
		    case KeyCode.PRINT_SCREEN:
		    case KeyCode.RIGHT:
		    case KeyCode.SHIFT:
		    case KeyCode.UP:
		    case KeyCode.WIN_KEY:
		    case KeyCode.WIN_KEY_RIGHT:
		      return false;
		    default:
		      return true;
		  }
		};
		
		/*
		 whether character is entered.
		 */
		KeyCode.isCharacterKey = function isCharacterKey(keyCode) {
		  if (keyCode >= KeyCode.ZERO && keyCode <= KeyCode.NINE) {
		    return true;
		  }
		
		  if (keyCode >= KeyCode.NUM_ZERO && keyCode <= KeyCode.NUM_MULTIPLY) {
		    return true;
		  }
		
		  if (keyCode >= KeyCode.A && keyCode <= KeyCode.Z) {
		    return true;
		  }
		
		  // Safari sends zero key code for non-latin characters.
		  if (window.navigation.userAgent.indexOf('WebKit') !== -1 && keyCode === 0) {
		    return true;
		  }
		
		  switch (keyCode) {
		    case KeyCode.SPACE:
		    case KeyCode.QUESTION_MARK:
		    case KeyCode.NUM_PLUS:
		    case KeyCode.NUM_MINUS:
		    case KeyCode.NUM_PERIOD:
		    case KeyCode.NUM_DIVISION:
		    case KeyCode.SEMICOLON:
		    case KeyCode.DASH:
		    case KeyCode.EQUALS:
		    case KeyCode.COMMA:
		    case KeyCode.PERIOD:
		    case KeyCode.SLASH:
		    case KeyCode.APOSTROPHE:
		    case KeyCode.SINGLE_QUOTE:
		    case KeyCode.OPEN_SQUARE_BRACKET:
		    case KeyCode.BACKSLASH:
		    case KeyCode.CLOSE_SQUARE_BRACKET:
		      return true;
		    default:
		      return false;
		  }
		};
		
		module.exports = KeyCode;
	
	/***/ },
	/* 12 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		exports.getTodayTime = getTodayTime;
		exports.getTitleString = getTitleString;
		exports.getTodayTimeStr = getTodayTimeStr;
		exports.getFormatter = getFormatter;
		exports.syncTime = syncTime;
		exports.getTimeConfig = getTimeConfig;
		exports.isTimeValidByConfig = isTimeValidByConfig;
		exports.isTimeValid = isTimeValid;
		exports.isAllowedDate = isAllowedDate;
		
		var _gregorianCalendarFormat = __webpack_require__(29);
		
		var _gregorianCalendarFormat2 = _interopRequireDefault(_gregorianCalendarFormat);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		var defaultDisabledTime = {
		  disabledHours: function disabledHours() {
		    return [];
		  },
		  disabledMinutes: function disabledMinutes() {
		    return [];
		  },
		  disabledSeconds: function disabledSeconds() {
		    return [];
		  }
		};
		
		function getTodayTime(value) {
		  var today = value.clone();
		  today.setTime(Date.now());
		  return today;
		}
		
		function getTitleString(value) {
		  return value.getYear() + '-' + (value.getMonth() + 1) + '-' + value.getDayOfMonth();
		}
		
		function getTodayTimeStr(value) {
		  var today = getTodayTime(value);
		  return getTitleString(today);
		}
		
		function getFormatter(format, locale) {
		  if (typeof format === 'string') {
		    return new _gregorianCalendarFormat2["default"](format, locale.format);
		  }
		  return format;
		}
		
		function syncTime(from, to) {
		  to.setHourOfDay(from.getHourOfDay());
		  to.setMinutes(from.getMinutes());
		  to.setSeconds(from.getSeconds());
		}
		
		function getTimeConfig(value, disabledTime) {
		  var disabledTimeConfig = disabledTime ? disabledTime(value) : {};
		  disabledTimeConfig = _extends({}, defaultDisabledTime, disabledTimeConfig);
		  return disabledTimeConfig;
		}
		
		function isTimeValidByConfig(value, disabledTimeConfig) {
		  var invalidTime = false;
		  if (value) {
		    var hour = value.getHourOfDay();
		    var minutes = value.getMinutes();
		    var seconds = value.getSeconds();
		    var disabledHours = disabledTimeConfig.disabledHours();
		    if (disabledHours.indexOf(hour) === -1) {
		      var disabledMinutes = disabledTimeConfig.disabledMinutes(hour);
		      if (disabledMinutes.indexOf(minutes) === -1) {
		        var disabledSeconds = disabledTimeConfig.disabledSeconds(hour, minutes);
		        invalidTime = disabledSeconds.indexOf(seconds) !== -1;
		      } else {
		        invalidTime = true;
		      }
		    } else {
		      invalidTime = true;
		    }
		  }
		  return !invalidTime;
		}
		
		function isTimeValid(value, disabledTime) {
		  var disabledTimeConfig = getTimeConfig(value, disabledTime);
		  return isTimeValidByConfig(value, disabledTimeConfig);
		}
		
		function isAllowedDate(value, disabledDate, disabledTime) {
		  if (disabledDate) {
		    if (disabledDate(value)) {
		      return false;
		    }
		  }
		  if (disabledTime) {
		    if (!isTimeValid(value, disabledTime)) {
		      return false;
		    }
		  }
		  return true;
		}
	
	/***/ },
	/* 13 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		exports['default'] = addEventListenerWrap;
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		var _addDomEventListener = __webpack_require__(52);
		
		var _addDomEventListener2 = _interopRequireDefault(_addDomEventListener);
		
		var _reactDom = __webpack_require__(4);
		
		var _reactDom2 = _interopRequireDefault(_reactDom);
		
		function addEventListenerWrap(target, eventType, cb) {
		  /* eslint camelcase: 2 */
		  var callback = _reactDom2['default'].unstable_batchedUpdates ? function run(e) {
		    _reactDom2['default'].unstable_batchedUpdates(cb, e);
		  } : cb;
		  return (0, _addDomEventListener2['default'])(target, eventType, callback);
		}
		
		module.exports = exports['default'];
	
	/***/ },
	/* 14 */
	/***/ function(module, exports, __webpack_require__) {
	
		module.exports = __webpack_require__(414);
	
	/***/ },
	/* 15 */
	[461, 436],
	/* 16 */
	/***/ function(module, exports, __webpack_require__) {
	
		/*!
		 * object.omit <https://github.com/jonschlinkert/object.omit>
		 *
		 * Copyright (c) 2014-2015, Jon Schlinkert.
		 * Licensed under the MIT License.
		 */
		
		'use strict';
		
		var isObject = __webpack_require__(277);
		var forOwn = __webpack_require__(273);
		
		module.exports = function omit(obj, keys) {
		  if (!isObject(obj)) return {};
		
		  var keys = [].concat.apply([], [].slice.call(arguments, 1));
		  var last = keys[keys.length - 1];
		  var res = {}, fn;
		
		  if (typeof last === 'function') {
		    fn = keys.pop();
		  }
		
		  var isFunction = typeof fn === 'function';
		  if (!keys.length && !isFunction) {
		    return obj;
		  }
		
		  forOwn(obj, function (value, key) {
		    if (keys.indexOf(key) === -1) {
		
		      if (!isFunction) {
		        res[key] = value;
		      } else if (fn(value, key, obj)) {
		        res[key] = value;
		      }
		    }
		  });
		  return res;
		};
	
	
	/***/ },
	/* 17 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		module.exports = __webpack_require__(393);
	
	/***/ },
	/* 18 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2014-2015, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 */
		
		'use strict';
		
		/**
		 * Similar to invariant but only logs a warning if the condition is not met.
		 * This can be used to log issues in development environments in critical
		 * paths. Removing the logging code for production environments will keep the
		 * same logic and follow the same code paths.
		 */
		
		var warning = function() {};
		
		if (true) {
		  warning = function(condition, format, args) {
		    var len = arguments.length;
		    args = new Array(len > 2 ? len - 2 : 0);
		    for (var key = 2; key < len; key++) {
		      args[key - 2] = arguments[key];
		    }
		    if (format === undefined) {
		      throw new Error(
		        '`warning(condition, format, ...args)` requires a warning ' +
		        'message argument'
		      );
		    }
		
		    if (format.length < 10 || (/^[s\W]*$/).test(format)) {
		      throw new Error(
		        'The warning format should be able to uniquely identify this ' +
		        'warning. Please, use a more descriptive format than: ' + format
		      );
		    }
		
		    if (!condition) {
		      var argIndex = 0;
		      var message = 'Warning: ' +
		        format.replace(/%s/g, function() {
		          return args[argIndex++];
		        });
		      if (typeof console !== 'undefined') {
		        console.error(message);
		      }
		      try {
		        // This error was thrown as a convenience so that you can use this stack
		        // to find the callsite that caused this warning to fire.
		        throw new Error(message);
		      } catch(x) {}
		    }
		  };
		}
		
		module.exports = warning;
	
	
	/***/ },
	/* 19 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _button = __webpack_require__(166);
		
		var _button2 = _interopRequireDefault(_button);
		
		var _buttonGroup = __webpack_require__(165);
		
		var _buttonGroup2 = _interopRequireDefault(_buttonGroup);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		_button2["default"].Group = _buttonGroup2["default"];
		exports["default"] = _button2["default"];
		module.exports = exports['default'];
	
	/***/ },
	/* 20 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp;
		
		var _rcCheckbox = __webpack_require__(105);
		
		var _rcCheckbox2 = _interopRequireDefault(_rcCheckbox);
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _Group = __webpack_require__(177);
		
		var _Group2 = _interopRequireDefault(_Group);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var _reactAddonsPureRenderMixin = __webpack_require__(14);
		
		var _reactAddonsPureRenderMixin2 = _interopRequireDefault(_reactAddonsPureRenderMixin);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var Checkbox = (_temp = _class = function (_React$Component) {
		  _inherits(Checkbox, _React$Component);
		
		  function Checkbox() {
		    _classCallCheck(this, Checkbox);
		
		    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
		  }
		
		  Checkbox.prototype.shouldComponentUpdate = function shouldComponentUpdate() {
		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }
		
		    return _reactAddonsPureRenderMixin2["default"].shouldComponentUpdate.apply(this, args);
		  };
		
		  Checkbox.prototype.render = function render() {
		    var _classNames;
		
		    var _props = this.props;
		    var prefixCls = _props.prefixCls;
		    var style = _props.style;
		    var children = _props.children;
		    var className = _props.className;
		
		    var restProps = _objectWithoutProperties(_props, ['prefixCls', 'style', 'children', 'className']);
		
		    var classString = (0, _classnames2["default"])((_classNames = {}, _defineProperty(_classNames, className, !!className), _defineProperty(_classNames, prefixCls + '-wrapper', true), _classNames));
		    return _react2["default"].createElement(
		      'label',
		      { className: classString, style: style },
		      _react2["default"].createElement(_rcCheckbox2["default"], _extends({}, restProps, { prefixCls: prefixCls, children: null })),
		      children !== undefined ? _react2["default"].createElement(
		        'span',
		        null,
		        children
		      ) : null
		    );
		  };
		
		  return Checkbox;
		}(_react2["default"].Component), _class.Group = _Group2["default"], _class.defaultProps = {
		  prefixCls: 'ant-checkbox'
		}, _temp);
		exports["default"] = Checkbox;
		module.exports = exports['default'];
	
	/***/ },
	/* 21 */
	[461, 430],
	/* 22 */
	/***/ function(module, exports) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		var RE_NUM = /[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source;
		
		var getComputedStyleX = undefined;
		
		function css(el, name, v) {
		  var value = v;
		  if (typeof name === 'object') {
		    for (var i in name) {
		      if (name.hasOwnProperty(i)) {
		        css(el, i, name[i]);
		      }
		    }
		    return undefined;
		  }
		  if (typeof value !== 'undefined') {
		    if (typeof value === 'number') {
		      value = value + 'px';
		    }
		    el.style[name] = value;
		    return undefined;
		  }
		  return getComputedStyleX(el, name);
		}
		
		function getClientPosition(elem) {
		  var box = undefined;
		  var x = undefined;
		  var y = undefined;
		  var doc = elem.ownerDocument;
		  var body = doc.body;
		  var docElem = doc && doc.documentElement;
		  // 根据 GBS 最新数据，A-Grade Browsers 都已支持 getBoundingClientRect 方法，不用再考虑传统的实现方式
		  box = elem.getBoundingClientRect();
		
		  // 注：jQuery 还考虑减去 docElem.clientLeft/clientTop
		  // 但测试发现，这样反而会导致当 html 和 body 有边距/边框样式时，获取的值不正确
		  // 此外，ie6 会忽略 html 的 margin 值，幸运地是没有谁会去设置 html 的 margin
		
		  x = box.left;
		  y = box.top;
		
		  // In IE, most of the time, 2 extra pixels are added to the top and left
		  // due to the implicit 2-pixel inset border.  In IE6/7 quirks mode and
		  // IE6 standards mode, this border can be overridden by setting the
		  // document element's border to zero -- thus, we cannot rely on the
		  // offset always being 2 pixels.
		
		  // In quirks mode, the offset can be determined by querying the body's
		  // clientLeft/clientTop, but in standards mode, it is found by querying
		  // the document element's clientLeft/clientTop.  Since we already called
		  // getClientBoundingRect we have already forced a reflow, so it is not
		  // too expensive just to query them all.
		
		  // ie 下应该减去窗口的边框吧，毕竟默认 absolute 都是相对窗口定位的
		  // 窗口边框标准是设 documentElement ,quirks 时设置 body
		  // 最好禁止在 body 和 html 上边框 ，但 ie < 9 html 默认有 2px ，减去
		  // 但是非 ie 不可能设置窗口边框，body html 也不是窗口 ,ie 可以通过 html,body 设置
		  // 标准 ie 下 docElem.clientTop 就是 border-top
		  // ie7 html 即窗口边框改变不了。永远为 2
		  // 但标准 firefox/chrome/ie9 下 docElem.clientTop 是窗口边框，即使设了 border-top 也为 0
		
		  x -= docElem.clientLeft || body.clientLeft || 0;
		  y -= docElem.clientTop || body.clientTop || 0;
		
		  return { left: x, top: y };
		}
		
		function getScroll(w, top) {
		  var ret = w['page' + (top ? 'Y' : 'X') + 'Offset'];
		  var method = 'scroll' + (top ? 'Top' : 'Left');
		  if (typeof ret !== 'number') {
		    var d = w.document;
		    // ie6,7,8 standard mode
		    ret = d.documentElement[method];
		    if (typeof ret !== 'number') {
		      // quirks mode
		      ret = d.body[method];
		    }
		  }
		  return ret;
		}
		
		function getScrollLeft(w) {
		  return getScroll(w);
		}
		
		function getScrollTop(w) {
		  return getScroll(w, true);
		}
		
		function getOffset(el) {
		  var pos = getClientPosition(el);
		  var doc = el.ownerDocument;
		  var w = doc.defaultView || doc.parentWindow;
		  pos.left += getScrollLeft(w);
		  pos.top += getScrollTop(w);
		  return pos;
		}
		function _getComputedStyle(elem, name, cs) {
		  var computedStyle = cs;
		  var val = '';
		  var d = elem.ownerDocument;
		  computedStyle = computedStyle || d.defaultView.getComputedStyle(elem, null);
		
		  // https://github.com/kissyteam/kissy/issues/61
		  if (computedStyle) {
		    val = computedStyle.getPropertyValue(name) || computedStyle[name];
		  }
		
		  return val;
		}
		
		var _RE_NUM_NO_PX = new RegExp('^(' + RE_NUM + ')(?!px)[a-z%]+$', 'i');
		var RE_POS = /^(top|right|bottom|left)$/;
		var CURRENT_STYLE = 'currentStyle';
		var RUNTIME_STYLE = 'runtimeStyle';
		var LEFT = 'left';
		var PX = 'px';
		
		function _getComputedStyleIE(elem, name) {
		  // currentStyle maybe null
		  // http://msdn.microsoft.com/en-us/library/ms535231.aspx
		  var ret = elem[CURRENT_STYLE] && elem[CURRENT_STYLE][name];
		
		  // 当 width/height 设置为百分比时，通过 pixelLeft 方式转换的 width/height 值
		  // 一开始就处理了! CUSTOM_STYLE.height,CUSTOM_STYLE.width ,cssHook 解决@2011-08-19
		  // 在 ie 下不对，需要直接用 offset 方式
		  // borderWidth 等值也有问题，但考虑到 borderWidth 设为百分比的概率很小，这里就不考虑了
		
		  // From the awesome hack by Dean Edwards
		  // http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291
		  // If we're not dealing with a regular pixel number
		  // but a number that has a weird ending, we need to convert it to pixels
		  // exclude left right for relativity
		  if (_RE_NUM_NO_PX.test(ret) && !RE_POS.test(name)) {
		    // Remember the original values
		    var style = elem.style;
		    var left = style[LEFT];
		    var rsLeft = elem[RUNTIME_STYLE][LEFT];
		
		    // prevent flashing of content
		    elem[RUNTIME_STYLE][LEFT] = elem[CURRENT_STYLE][LEFT];
		
		    // Put in the new values to get a computed value out
		    style[LEFT] = name === 'fontSize' ? '1em' : ret || 0;
		    ret = style.pixelLeft + PX;
		
		    // Revert the changed values
		    style[LEFT] = left;
		
		    elem[RUNTIME_STYLE][LEFT] = rsLeft;
		  }
		  return ret === '' ? 'auto' : ret;
		}
		
		if (typeof window !== 'undefined') {
		  getComputedStyleX = window.getComputedStyle ? _getComputedStyle : _getComputedStyleIE;
		}
		
		function getOffsetDirection(dir, option) {
		  if (dir === 'left') {
		    return option.useCssRight ? 'right' : dir;
		  }
		  return option.useCssBottom ? 'bottom' : dir;
		}
		
		function oppositeOffsetDirection(dir) {
		  if (dir === 'left') {
		    return 'right';
		  } else if (dir === 'right') {
		    return 'left';
		  } else if (dir === 'top') {
		    return 'bottom';
		  } else if (dir === 'bottom') {
		    return 'top';
		  }
		}
		
		// 设置 elem 相对 elem.ownerDocument 的坐标
		function setOffset(elem, offset, option) {
		  // set position first, in-case top/left are set even on static elem
		  if (css(elem, 'position') === 'static') {
		    elem.style.position = 'relative';
		  }
		  var presetH = -999;
		  var presetV = -999;
		  var horizontalProperty = getOffsetDirection('left', option);
		  var verticalProperty = getOffsetDirection('top', option);
		  var oppositeHorizontalProperty = oppositeOffsetDirection(horizontalProperty);
		  var oppositeVerticalProperty = oppositeOffsetDirection(verticalProperty);
		
		  if (horizontalProperty !== 'left') {
		    presetH = 999;
		  }
		
		  if (verticalProperty !== 'top') {
		    presetV = 999;
		  }
		
		  if ('left' in offset) {
		    elem.style[oppositeHorizontalProperty] = '';
		    elem.style[horizontalProperty] = presetH + 'px';
		  }
		  if ('top' in offset) {
		    elem.style[oppositeVerticalProperty] = '';
		    elem.style[verticalProperty] = presetV + 'px';
		  }
		  var old = getOffset(elem);
		  var ret = {};
		  var key = undefined;
		  for (key in offset) {
		    if (offset.hasOwnProperty(key)) {
		      var dir = getOffsetDirection(key, option);
		      var preset = key === 'left' ? presetH : presetV;
		      if (dir === key) {
		        ret[dir] = preset + offset[key] - old[key];
		      } else {
		        ret[dir] = preset + old[key] - offset[key];
		      }
		    }
		  }
		  css(elem, ret);
		}
		
		function each(arr, fn) {
		  for (var i = 0; i < arr.length; i++) {
		    fn(arr[i]);
		  }
		}
		
		function isBorderBoxFn(elem) {
		  return getComputedStyleX(elem, 'boxSizing') === 'border-box';
		}
		
		var BOX_MODELS = ['margin', 'border', 'padding'];
		var CONTENT_INDEX = -1;
		var PADDING_INDEX = 2;
		var BORDER_INDEX = 1;
		var MARGIN_INDEX = 0;
		
		function swap(elem, options, callback) {
		  var old = {};
		  var style = elem.style;
		  var name = undefined;
		
		  // Remember the old values, and insert the new ones
		  for (name in options) {
		    if (options.hasOwnProperty(name)) {
		      old[name] = style[name];
		      style[name] = options[name];
		    }
		  }
		
		  callback.call(elem);
		
		  // Revert the old values
		  for (name in options) {
		    if (options.hasOwnProperty(name)) {
		      style[name] = old[name];
		    }
		  }
		}
		
		function getPBMWidth(elem, props, which) {
		  var value = 0;
		  var prop = undefined;
		  var j = undefined;
		  var i = undefined;
		  for (j = 0; j < props.length; j++) {
		    prop = props[j];
		    if (prop) {
		      for (i = 0; i < which.length; i++) {
		        var cssProp = undefined;
		        if (prop === 'border') {
		          cssProp = prop + which[i] + 'Width';
		        } else {
		          cssProp = prop + which[i];
		        }
		        value += parseFloat(getComputedStyleX(elem, cssProp)) || 0;
		      }
		    }
		  }
		  return value;
		}
		
		/**
		 * A crude way of determining if an object is a window
		 * @member util
		 */
		function isWindow(obj) {
		  // must use == for ie8
		  /* eslint eqeqeq:0 */
		  return obj !== null && obj !== undefined && obj == obj.window;
		}
		
		var domUtils = {};
		
		each(['Width', 'Height'], function (name) {
		  domUtils['doc' + name] = function (refWin) {
		    var d = refWin.document;
		    return Math.max(
		    // firefox chrome documentElement.scrollHeight< body.scrollHeight
		    // ie standard mode : documentElement.scrollHeight> body.scrollHeight
		    d.documentElement['scroll' + name],
		    // quirks : documentElement.scrollHeight 最大等于可视窗口多一点？
		    d.body['scroll' + name], domUtils['viewport' + name](d));
		  };
		
		  domUtils['viewport' + name] = function (win) {
		    // pc browser includes scrollbar in window.innerWidth
		    var prop = 'client' + name;
		    var doc = win.document;
		    var body = doc.body;
		    var documentElement = doc.documentElement;
		    var documentElementProp = documentElement[prop];
		    // 标准模式取 documentElement
		    // backcompat 取 body
		    return doc.compatMode === 'CSS1Compat' && documentElementProp || body && body[prop] || documentElementProp;
		  };
		});
		
		/*
		 得到元素的大小信息
		 @param elem
		 @param name
		 @param {String} [extra]  'padding' : (css width) + padding
		 'border' : (css width) + padding + border
		 'margin' : (css width) + padding + border + margin
		 */
		function getWH(elem, name, ex) {
		  var extra = ex;
		  if (isWindow(elem)) {
		    return name === 'width' ? domUtils.viewportWidth(elem) : domUtils.viewportHeight(elem);
		  } else if (elem.nodeType === 9) {
		    return name === 'width' ? domUtils.docWidth(elem) : domUtils.docHeight(elem);
		  }
		  var which = name === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom'];
		  var borderBoxValue = name === 'width' ? elem.offsetWidth : elem.offsetHeight;
		  var computedStyle = getComputedStyleX(elem);
		  var isBorderBox = isBorderBoxFn(elem, computedStyle);
		  var cssBoxValue = 0;
		  if (borderBoxValue === null || borderBoxValue === undefined || borderBoxValue <= 0) {
		    borderBoxValue = undefined;
		    // Fall back to computed then un computed css if necessary
		    cssBoxValue = getComputedStyleX(elem, name);
		    if (cssBoxValue === null || cssBoxValue === undefined || Number(cssBoxValue) < 0) {
		      cssBoxValue = elem.style[name] || 0;
		    }
		    // Normalize '', auto, and prepare for extra
		    cssBoxValue = parseFloat(cssBoxValue) || 0;
		  }
		  if (extra === undefined) {
		    extra = isBorderBox ? BORDER_INDEX : CONTENT_INDEX;
		  }
		  var borderBoxValueOrIsBorderBox = borderBoxValue !== undefined || isBorderBox;
		  var val = borderBoxValue || cssBoxValue;
		  if (extra === CONTENT_INDEX) {
		    if (borderBoxValueOrIsBorderBox) {
		      return val - getPBMWidth(elem, ['border', 'padding'], which, computedStyle);
		    }
		    return cssBoxValue;
		  } else if (borderBoxValueOrIsBorderBox) {
		    if (extra === BORDER_INDEX) {
		      return val;
		    }
		    return val + (extra === PADDING_INDEX ? -getPBMWidth(elem, ['border'], which, computedStyle) : getPBMWidth(elem, ['margin'], which, computedStyle));
		  }
		  return cssBoxValue + getPBMWidth(elem, BOX_MODELS.slice(extra), which, computedStyle);
		}
		
		var cssShow = { position: 'absolute', visibility: 'hidden', display: 'block' };
		
		// fix #119 : https://github.com/kissyteam/kissy/issues/119
		function getWHIgnoreDisplay() {
		  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		    args[_key] = arguments[_key];
		  }
		
		  var val = undefined;
		  var elem = args[0];
		  // in case elem is window
		  // elem.offsetWidth === undefined
		  if (elem.offsetWidth !== 0) {
		    val = getWH.apply(undefined, args);
		  } else {
		    swap(elem, cssShow, function () {
		      val = getWH.apply(undefined, args);
		    });
		  }
		  return val;
		}
		
		each(['width', 'height'], function (name) {
		  var first = name.charAt(0).toUpperCase() + name.slice(1);
		  domUtils['outer' + first] = function (el, includeMargin) {
		    return el && getWHIgnoreDisplay(el, name, includeMargin ? MARGIN_INDEX : BORDER_INDEX);
		  };
		  var which = name === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom'];
		
		  domUtils[name] = function (elem, v) {
		    var val = v;
		    if (val !== undefined) {
		      if (elem) {
		        var computedStyle = getComputedStyleX(elem);
		        var isBorderBox = isBorderBoxFn(elem);
		        if (isBorderBox) {
		          val += getPBMWidth(elem, ['padding', 'border'], which, computedStyle);
		        }
		        return css(elem, name, val);
		      }
		      return undefined;
		    }
		    return elem && getWHIgnoreDisplay(elem, name, CONTENT_INDEX);
		  };
		});
		
		function mix(to, from) {
		  for (var i in from) {
		    if (from.hasOwnProperty(i)) {
		      to[i] = from[i];
		    }
		  }
		  return to;
		}
		
		var utils = {
		  getWindow: function getWindow(node) {
		    if (node && node.document && node.setTimeout) {
		      return node;
		    }
		    var doc = node.ownerDocument || node;
		    return doc.defaultView || doc.parentWindow;
		  },
		  offset: function offset(el, value, option) {
		    if (typeof value !== 'undefined') {
		      setOffset(el, value, option || {});
		    } else {
		      return getOffset(el);
		    }
		  },
		  isWindow: isWindow,
		  each: each,
		  css: css,
		  clone: function clone(obj) {
		    var i = undefined;
		    var ret = {};
		    for (i in obj) {
		      if (obj.hasOwnProperty(i)) {
		        ret[i] = obj[i];
		      }
		    }
		    var overflow = obj.overflow;
		    if (overflow) {
		      for (i in obj) {
		        if (obj.hasOwnProperty(i)) {
		          ret.overflow[i] = obj.overflow[i];
		        }
		      }
		    }
		    return ret;
		  },
		  mix: mix,
		  getWindowScrollLeft: function getWindowScrollLeft(w) {
		    return getScrollLeft(w);
		  },
		  getWindowScrollTop: function getWindowScrollTop(w) {
		    return getScrollTop(w);
		  },
		  merge: function merge() {
		    var ret = {};
		
		    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
		      args[_key2] = arguments[_key2];
		    }
		
		    for (var i = 0; i < args.length; i++) {
		      utils.mix(ret, args[i]);
		    }
		    return ret;
		  },
		  viewportWidth: 0,
		  viewportHeight: 0
		};
		
		mix(utils, domUtils);
		
		exports['default'] = utils;
		module.exports = exports['default'];
	
	/***/ },
	/* 23 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.Divider = exports.ItemGroup = exports.MenuItemGroup = exports.MenuItem = exports.Item = exports.SubMenu = undefined;
		
		var _Menu = __webpack_require__(323);
		
		var _Menu2 = _interopRequireDefault(_Menu);
		
		var _SubMenu = __webpack_require__(326);
		
		var _SubMenu2 = _interopRequireDefault(_SubMenu);
		
		var _MenuItem = __webpack_require__(324);
		
		var _MenuItem2 = _interopRequireDefault(_MenuItem);
		
		var _MenuItemGroup = __webpack_require__(325);
		
		var _MenuItemGroup2 = _interopRequireDefault(_MenuItemGroup);
		
		var _Divider = __webpack_require__(322);
		
		var _Divider2 = _interopRequireDefault(_Divider);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		exports.SubMenu = _SubMenu2["default"];
		exports.Item = _MenuItem2["default"];
		exports.MenuItem = _MenuItem2["default"];
		exports.MenuItemGroup = _MenuItemGroup2["default"];
		exports.ItemGroup = _MenuItemGroup2["default"];
		exports.Divider = _Divider2["default"];
		exports["default"] = _Menu2["default"];
	
	/***/ },
	/* 24 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.noop = noop;
		exports.getKeyFromChildrenIndex = getKeyFromChildrenIndex;
		exports.loopMenuItem = loopMenuItem;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		var now = Date.now();
		
		function noop() {}
		
		function getKeyFromChildrenIndex(child, menuEventKey, index) {
		  var prefix = menuEventKey || '';
		  return child.key || prefix + 'item_' + now + '_' + index;
		}
		
		function loopMenuItem(children, cb) {
		  var index = -1;
		  _react2["default"].Children.forEach(children, function (c) {
		    index++;
		    if (c && c.type.isMenuItemGroup) {
		      _react2["default"].Children.forEach(c.props.children, function (c2) {
		        index++;
		        cb(c2, index);
		      });
		    } else {
		      cb(c, index);
		    }
		  });
		}
	
	/***/ },
	/* 25 */
	[461, 425],
	/* 26 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _radio = __webpack_require__(39);
		
		var _radio2 = _interopRequireDefault(_radio);
		
		var _group = __webpack_require__(221);
		
		var _group2 = _interopRequireDefault(_group);
		
		var _radioButton = __webpack_require__(74);
		
		var _radioButton2 = _interopRequireDefault(_radioButton);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		_radio2["default"].Button = _radioButton2["default"];
		_radio2["default"].Group = _group2["default"];
		exports["default"] = _radio2["default"];
		module.exports = exports['default'];
	
	/***/ },
	/* 27 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _rcSelect = __webpack_require__(351);
		
		var _rcSelect2 = _interopRequireDefault(_rcSelect);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var Select = (_temp = _class = function (_React$Component) {
		  _inherits(Select, _React$Component);
		
		  function Select() {
		    _classCallCheck(this, Select);
		
		    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
		  }
		
		  Select.prototype.render = function render() {
		    var _classNames;
		
		    var _props = this.props;
		    var size = _props.size;
		    var className = _props.className;
		    var combobox = _props.combobox;
		    var notFoundContent = _props.notFoundContent;
		    var prefixCls = _props.prefixCls;
		    var showSearch = _props.showSearch;
		    var optionLabelProp = _props.optionLabelProp;
		
		
		    var cls = (0, _classnames2["default"])((_classNames = {}, _defineProperty(_classNames, prefixCls + '-lg', size === 'large'), _defineProperty(_classNames, prefixCls + '-sm', size === 'small'), _defineProperty(_classNames, className, !!className), _defineProperty(_classNames, prefixCls + '-show-search', showSearch), _classNames));
		
		    var antLocale = this.context.antLocale;
		
		    if (antLocale && antLocale.Select) {
		      notFoundContent = notFoundContent || antLocale.Select.notFoundContent;
		    }
		
		    if (combobox) {
		      notFoundContent = null;
		      // children 带 dom 结构时，无法填入输入框
		      optionLabelProp = optionLabelProp || 'value';
		    }
		
		    return _react2["default"].createElement(_rcSelect2["default"], _extends({}, this.props, {
		      className: cls,
		      optionLabelProp: optionLabelProp || 'children',
		      notFoundContent: notFoundContent
		    }));
		  };
		
		  return Select;
		}(_react2["default"].Component), _class.Option = _rcSelect.Option, _class.OptGroup = _rcSelect.OptGroup, _class.defaultProps = {
		  prefixCls: 'ant-select',
		  transitionName: 'slide-up',
		  choiceTransitionName: 'zoom',
		  showSearch: false
		}, _class.contextTypes = {
		  antLocale: _react2["default"].PropTypes.object
		}, _temp);
		exports["default"] = Select;
		module.exports = exports['default'];
	
	/***/ },
	/* 28 */
	[462, 446],
	/* 29 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * @ignore
		 * DateTimeFormat for
		 * Inspired by DateTimeFormat from JDK.
		 * @author yiminghe@gmail.com
		 */
		
		'use strict';
		
		var GregorianCalendar = __webpack_require__(9);
		var enUsLocale = __webpack_require__(44);
		var MAX_VALUE = Number.MAX_VALUE;
		var warning = __webpack_require__(274);
		
		/**
		 * date or time style enum
		 * @enum {Number} Date.Formatter.Style
		 */
		var DateTimeStyle = {
		  /**
		   * full style
		   */
		  FULL: 0,
		  /**
		   * long style
		   */
		  LONG: 1,
		  /**
		   * medium style
		   */
		  MEDIUM: 2,
		  /**
		   * short style
		   */
		  SHORT: 3
		};
		
		/*
		 Letter    Date or Time Component    Presentation    Examples
		 G    Era designator    Text    AD
		 y    Year    Year    1996; 96
		 Y    WeekYear    WeekYear    1996; 96
		 M    Month in year    Month    July; Jul; 07
		 w    Week in year    Number    27
		 W    Week in month    Number    2
		 D    Day in year    Number    189
		 d    Day in month    Number    10
		 F    Day of week in month    Number    2
		 E    Day in week    Text    Tuesday; Tue
		 a    Am/pm marker    Text    PM
		 H    Hour in day (0-23)    Number    0
		 k    Hour in day (1-24)    Number    24
		 K    Hour in am/pm (0-11)    Number    0
		 h    Hour in am/pm (1-12)    Number    12
		 m    Minute in hour    Number    30
		 s    Second in minute    Number    55
		 S    Millisecond    Number    978
		 x z    Time zone    General time zone    Pacific Standard Time; PST; GMT-08:00
		 Z    Time zone    RFC 822 time zone    -0800
		 */
		
		var patternChars = new Array(GregorianCalendar.DAY_OF_WEEK_IN_MONTH + 2).join('1');
		var ERA = 0;
		var calendarIndexMap = {};
		
		patternChars = patternChars.split('');
		patternChars[ERA] = 'G';
		patternChars[GregorianCalendar.YEAR] = 'y';
		patternChars[GregorianCalendar.MONTH] = 'M';
		patternChars[GregorianCalendar.DAY_OF_MONTH] = 'd';
		patternChars[GregorianCalendar.HOUR_OF_DAY] = 'H';
		patternChars[GregorianCalendar.MINUTES] = 'm';
		patternChars[GregorianCalendar.SECONDS] = 's';
		patternChars[GregorianCalendar.MILLISECONDS] = 'S';
		patternChars[GregorianCalendar.WEEK_OF_YEAR] = 'w';
		patternChars[GregorianCalendar.WEEK_OF_MONTH] = 'W';
		patternChars[GregorianCalendar.DAY_OF_YEAR] = 'D';
		patternChars[GregorianCalendar.DAY_OF_WEEK_IN_MONTH] = 'F';
		patternChars.push('Y');
		
		patternChars.forEach(function (v, key) {
		  var k = key;
		  if (v === 'Y') {
		    k = GregorianCalendar.YEAR;
		  }
		  if (v) {
		    calendarIndexMap[v] = k;
		  }
		});
		
		function mix(t, s) {
		  for (var p in s) {
		    if (s.hasOwnProperty(p)) {
		      t[p] = s[p];
		    }
		  }
		}
		
		var SUBSTITUTE_REG = /\\?\{([^{}]+)\}/g;
		var EMPTY = '';
		
		function substitute(str, o, regexp) {
		  if (typeof str !== 'string' || !o) {
		    return str;
		  }
		
		  return str.replace(regexp || SUBSTITUTE_REG, function (match, name) {
		    if (match.charAt(0) === '\\') {
		      return match.slice(1);
		    }
		    return o[name] === undefined ? EMPTY : o[name];
		  });
		}
		
		patternChars = patternChars.join('') + 'ahkKZE';
		
		function encode(lastField, count, compiledPattern) {
		  compiledPattern.push({
		    field: lastField,
		    count: count
		  });
		}
		
		function compile(pattern) {
		  var length = pattern.length;
		  var inQuote = false;
		  var compiledPattern = [];
		  var tmpBuffer = null;
		  var count = 0;
		  var lastField = -1;
		
		  for (var i = 0; i < length; i++) {
		    var c = pattern.charAt(i);
		
		    if (c === '\'') {
		      // '' is treated as a single quote regardless of being
		      // in a quoted section.
		      if (i + 1 < length) {
		        c = pattern.charAt(i + 1);
		        if (c === '\'') {
		          i++;
		          if (count !== 0) {
		            encode(lastField, count, compiledPattern);
		            lastField = -1;
		            count = 0;
		          }
		          if (inQuote) {
		            tmpBuffer += c;
		          }
		          continue;
		        }
		      }
		      if (!inQuote) {
		        if (count !== 0) {
		          encode(lastField, count, compiledPattern);
		          lastField = -1;
		          count = 0;
		        }
		        tmpBuffer = '';
		        inQuote = true;
		      } else {
		        compiledPattern.push({
		          text: tmpBuffer
		        });
		        inQuote = false;
		      }
		      continue;
		    }
		    if (inQuote) {
		      tmpBuffer += c;
		      continue;
		    }
		    if (!(c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z')) {
		      if (count !== 0) {
		        encode(lastField, count, compiledPattern);
		        lastField = -1;
		        count = 0;
		      }
		      compiledPattern.push({
		        text: c
		      });
		      continue;
		    }
		
		    if (patternChars.indexOf(c) === -1) {
		      throw new Error('Illegal pattern character "' + c + '"');
		    }
		
		    if (lastField === -1 || lastField === c) {
		      lastField = c;
		      count++;
		      continue;
		    }
		    encode(lastField, count, compiledPattern);
		    lastField = c;
		    count = 1;
		  }
		
		  if (inQuote) {
		    throw new Error('Unterminated quote');
		  }
		
		  if (count !== 0) {
		    encode(lastField, count, compiledPattern);
		  }
		
		  return compiledPattern;
		}
		
		var zeroDigit = '0';
		
		// TODO zeroDigit localization??
		function zeroPaddingNumber(_x, _x2, _x3, _x4) {
		  var _again = true;
		
		  _function: while (_again) {
		    var value = _x,
		        minDigits = _x2,
		        maxDigits_ = _x3,
		        b = _x4;
		    _again = false;
		
		    // Optimization for 1, 2 and 4 digit numbers. This should
		    // cover most cases of formatting date/time related items.
		    // Note: This optimization code assumes that maxDigits is
		    // either 2 or Integer.MAX_VALUE (maxIntCount in format()).
		    var buffer = b || [];
		    var maxDigits = maxDigits_ || MAX_VALUE;
		    if (value >= 0) {
		      if (value < 100 && minDigits >= 1 && minDigits <= 2) {
		        if (value < 10 && minDigits === 2) {
		          buffer.push(zeroDigit);
		        }
		        buffer.push(value);
		        return buffer.join('');
		      } else if (value >= 1000 && value < 10000) {
		        if (minDigits === 4) {
		          buffer.push(value);
		          return buffer.join('');
		        }
		        if (minDigits === 2 && maxDigits === 2) {
		          _x = value % 100;
		          _x2 = 2;
		          _x3 = 2;
		          _x4 = buffer;
		          _again = true;
		          buffer = maxDigits = undefined;
		          continue _function;
		        }
		      }
		    }
		    buffer.push(value + '');
		    return buffer.join('');
		  }
		}
		
		/**
		 *
		 * date time formatter for GregorianCalendar
		 *
		 *      @example
		 *
		 *          const calendar = new GregorianCalendar(2013,9,24);
		 *          // ' to escape
		 *          const formatter = new GregorianCalendarFormat("'today is' ''yyyy/MM/dd a''");
		 *          document.write(formatter.format(calendar));
		 *
		 * @class GregorianCalendarFormat
		 * @param {String} pattern patter string of date formatter
		 *
		 * <table border="1">
		 * <thead valign="bottom">
		 * <tr><th class="head">Letter</th>
		 * <th class="head">Date or Time Component</th>
		 * <th class="head">Presentation</th>
		 * <th class="head">Examples</th>
		 * </tr>
		 * </thead>
		 * <tbody valign="top">
		 * <tr><td>G</td>
		 * <td>Era designator</td>
		 * <td>Text</td>
		 * <td>AD</td>
		 * </tr>
		 * <tr><td>y</td>
		 * <td>Year</td>
		 * <td>Year</td>
		 * <td>1996; 96</td>
		 * </tr>
		 * <tr><td>M</td>
		 * <td>Month in year</td>
		 * <td>Month</td>
		 * <td>July; Jul; 07</td>
		 * </tr>
		 * <tr><td>w</td>
		 * <td>Week in year</td>
		 * <td>Number</td>
		 * <td>27</td>
		 * </tr>
		 * <tr><td>W</td>
		 * <td>Week in month</td>
		 * <td>Number</td>
		 * <td>2</td>
		 * </tr>
		 * <tr><td>D</td>
		 * <td>Day in year</td>
		 * <td>Number</td>
		 * <td>189</td>
		 * </tr>
		 * <tr><td>d</td>
		 * <td>Day in month</td>
		 * <td>Number</td>
		 * <td>10</td>
		 * </tr>
		 * <tr><td>F</td>
		 * <td>Day of week in month</td>
		 * <td>Number</td>
		 * <td>2</td>
		 * </tr>
		 * <tr><td>E</td>
		 * <td>Day in week</td>
		 * <td>Text</td>
		 * <td>Tuesday; Tue</td>
		 * </tr>
		 * <tr><td>a</td>
		 * <td>Am/pm marker</td>
		 * <td>Text</td>
		 * <td>PM</td>
		 * </tr>
		 * <tr><td>H</td>
		 *       <td>Hour in day (0-23)</td>
		 * <td>Number</td>
		 * <td>0</td>
		 * </tr>
		 * <tr><td>k</td>
		 *       <td>Hour in day (1-24)</td>
		 * <td>Number</td>
		 * <td>24</td>
		 * </tr>
		 * <tr><td>K</td>
		 * <td>Hour in am/pm (0-11)</td>
		 * <td>Number</td>
		 * <td>0</td>
		 * </tr>
		 * <tr><td>h</td>
		 * <td>Hour in am/pm (1-12)</td>
		 * <td>Number</td>
		 * <td>12</td>
		 * </tr>
		 * <tr><td>m</td>
		 * <td>Minute in hour</td>
		 * <td>Number</td>
		 * <td>30</td>
		 * </tr>
		 * <tr><td>s</td>
		 * <td>Second in minute</td>
		 * <td>Number</td>
		 * <td>55</td>
		 * </tr>
		 * <tr><td>S</td>
		 * <td>Millisecond</td>
		 * <td>Number</td>
		 * <td>978</td>
		 * </tr>
		 * <tr><td>x/z</td>
		 * <td>Time zone</td>
		 * <td>General time zone</td>
		 * <td>Pacific Standard Time; PST; GMT-08:00</td>
		 * </tr>
		 * <tr><td>Z</td>
		 * <td>Time zone</td>
		 * <td>RFC 822 time zone</td>
		 * <td>-0800</td>
		 * </tr>
		 * </tbody>
		 * </table>
		
		 * @param {Object} locale format locale
		 */
		function DateTimeFormat(pattern, locale) {
		  this.locale = locale || enUsLocale;
		  this.originalPattern = pattern;
		  this.pattern = compile(pattern);
		}
		
		function formatField(field, count, locale, calendar) {
		  var current = undefined;
		  var value = undefined;
		  switch (field) {
		    case 'G':
		      value = calendar.getYear() > 0 ? 1 : 0;
		      current = locale.eras[value];
		      break;
		    case 'Y':
		      value = calendar.getWeekYear();
		      if (value <= 0) {
		        value = 1 - value;
		      }
		      current = zeroPaddingNumber(value, 2, count !== 2 ? MAX_VALUE : 2);
		      break;
		    case 'y':
		      value = calendar.getYear();
		      if (value <= 0) {
		        value = 1 - value;
		      }
		      current = zeroPaddingNumber(value, 2, count !== 2 ? MAX_VALUE : 2);
		      break;
		    case 'M':
		      value = calendar.getMonth();
		      if (count >= 4) {
		        current = locale.months[value];
		      } else if (count === 3) {
		        current = locale.shortMonths[value];
		      } else {
		        current = zeroPaddingNumber(value + 1, count);
		      }
		      break;
		    case 'k':
		      current = zeroPaddingNumber(calendar.getHourOfDay() || 24, count);
		      break;
		    case 'E':
		      value = calendar.getDayOfWeek();
		      current = count >= 4 ? locale.weekdays[value] : locale.shortWeekdays[value];
		      break;
		    case 'a':
		      current = locale.ampms[calendar.getHourOfDay() >= 12 ? 1 : 0];
		      break;
		    case 'h':
		      current = zeroPaddingNumber(calendar.getHourOfDay() % 12 || 12, count);
		      break;
		    case 'K':
		      current = zeroPaddingNumber(calendar.getHourOfDay() % 12, count);
		      break;
		    case 'Z':
		      var offset = calendar.getTimezoneOffset();
		      var parts = [offset < 0 ? '-' : '+'];
		      offset = Math.abs(offset);
		      parts.push(zeroPaddingNumber(Math.floor(offset / 60) % 100, 2), zeroPaddingNumber(offset % 60, 2));
		      current = parts.join('');
		      break;
		    default:
		      // case 'd':
		      // case 'H':
		      // case 'm':
		      // case 's':
		      // case 'S':
		      // case 'D':
		      // case 'F':
		      // case 'w':
		      // case 'W':
		      var index = calendarIndexMap[field];
		      value = calendar.get(index);
		      current = zeroPaddingNumber(value, count);
		  }
		  return current;
		}
		
		function matchPartString(dateStr, startIndex, match, mLen) {
		  for (var i = 0; i < mLen; i++) {
		    if (dateStr.charAt(startIndex + i) !== match.charAt(i)) {
		      return false;
		    }
		  }
		  return true;
		}
		
		function matchField(dateStr, startIndex, matches) {
		  var matchedLen = -1;
		  var index = -1;
		  var i = undefined;
		  var len = matches.length;
		  for (i = 0; i < len; i++) {
		    var m = matches[i];
		    var mLen = m.length;
		    if (mLen > matchedLen && matchPartString(dateStr, startIndex, m, mLen)) {
		      matchedLen = mLen;
		      index = i;
		    }
		  }
		  return index >= 0 ? {
		    value: index,
		    startIndex: startIndex + matchedLen
		  } : null;
		}
		
		function getLeadingNumberLen(str) {
		  var i = undefined;
		  var c = undefined;
		  var len = str.length;
		  for (i = 0; i < len; i++) {
		    c = str.charAt(i);
		    if (c < '0' || c > '9') {
		      break;
		    }
		  }
		  return i;
		}
		
		function matchNumber(dateStr, startIndex, count, obeyCount) {
		  var str = dateStr;
		  var n = undefined;
		  if (obeyCount) {
		    if (dateStr.length < startIndex + count) {
		      return null;
		    }
		    str = dateStr.slice(startIndex, startIndex + count);
		    if (!str.match(/^\d+$/)) {
		      throw new Error('GregorianCalendarFormat parse error, dateStr: ' + dateStr + ', patter: ' + this.originalPattern);
		    }
		  } else {
		    str = str.slice(startIndex);
		  }
		  n = parseInt(str, 10);
		  if (isNaN(n)) {
		    throw new Error('GregorianCalendarFormat parse error, dateStr: ' + dateStr + ', patter: ' + this.originalPattern);
		  }
		  return {
		    value: n,
		    startIndex: startIndex + getLeadingNumberLen(str)
		  };
		}
		
		function parseField(calendar, dateStr, startIndex_, field, count, obeyCount, tmp) {
		  var match = undefined;
		  var year = undefined;
		  var hour = undefined;
		  var startIndex = startIndex_;
		  if (dateStr.length <= startIndex) {
		    return startIndex;
		  }
		  var locale = this.locale;
		  switch (field) {
		    case 'G':
		      match = matchField(dateStr, startIndex, locale.eras);
		      if (match) {
		        if (calendar.isSetYear()) {
		          if (match.value === 0) {
		            year = calendar.getYear();
		            calendar.setYear(1 - year);
		          }
		        } else {
		          tmp.era = match.value;
		        }
		      }
		      break;
		    case 'y':
		      match = matchNumber.call(this, dateStr, startIndex, count, obeyCount);
		      if (match) {
		        year = match.value;
		        if ('era' in tmp) {
		          if (tmp.era === 0) {
		            year = 1 - year;
		          }
		        }
		        calendar.setYear(year);
		      }
		      break;
		    case 'M':
		      var month = undefined;
		      if (count >= 3) {
		        match = matchField(dateStr, startIndex, locale[count === 3 ? 'shortMonths' : 'months']);
		        if (match) {
		          month = match.value;
		        }
		      } else {
		        match = matchNumber.call(this, dateStr, startIndex, count, obeyCount);
		        if (match) {
		          month = match.value - 1;
		        }
		      }
		      if (match) {
		        calendar.setMonth(month);
		      }
		      break;
		    case 'k':
		      match = matchNumber.call(this, dateStr, startIndex, count, obeyCount);
		      if (match) {
		        calendar.setHourOfDay(match.value % 24);
		      }
		      break;
		    case 'E':
		      match = matchField(dateStr, startIndex, locale[count > 3 ? 'weekdays' : 'shortWeekdays']);
		      if (match) {
		        calendar.setDayOfWeek(match.value);
		      }
		      break;
		    case 'a':
		      match = matchField(dateStr, startIndex, locale.ampms);
		      if (match) {
		        if (calendar.isSetHourOfDay()) {
		          if (match.value) {
		            hour = calendar.getHourOfDay();
		            if (hour < 12) {
		              calendar.setHourOfDay((hour + 12) % 24);
		            }
		          }
		        } else {
		          tmp.ampm = match.value;
		        }
		      }
		      break;
		    case 'h':
		      match = matchNumber.call(this, dateStr, startIndex, count, obeyCount);
		      if (match) {
		        hour = match.value %= 12;
		        if (tmp.ampm) {
		          hour += 12;
		        }
		        calendar.setHourOfDay(hour);
		      }
		      break;
		    case 'K':
		      match = matchNumber.call(this, dateStr, startIndex, count, obeyCount);
		      if (match) {
		        hour = match.value;
		        if (tmp.ampm) {
		          hour += 12;
		        }
		        calendar.setHourOfDay(hour);
		      }
		      break;
		    case 'Z':
		      // let sign = 1;
		      var zoneChar = dateStr.charAt(startIndex);
		      if (zoneChar === '-') {
		        // sign = -1;
		        startIndex++;
		      } else if (zoneChar === '+') {
		        startIndex++;
		      } else {
		        break;
		      }
		      match = matchNumber.call(this, dateStr, startIndex, 2, true);
		      if (match) {
		        var zoneOffset = match.value * 60;
		        startIndex = match.startIndex;
		        match = matchNumber.call(this, dateStr, startIndex, 2, true);
		        if (match) {
		          zoneOffset += match.value;
		        }
		        calendar.setTimezoneOffset(zoneOffset);
		      }
		      break;
		    default:
		      // case 'd':
		      // case 'H':
		      // case 'm':
		      // case 's':
		      // case 'S':
		      // case 'D':
		      // case 'F':
		      // case 'w':
		      // case 'W'
		      match = matchNumber.call(this, dateStr, startIndex, count, obeyCount);
		      if (match) {
		        var index = calendarIndexMap[field];
		        calendar.set(index, match.value);
		      }
		  }
		  if (match) {
		    startIndex = match.startIndex;
		  }
		  return startIndex;
		}
		
		mix(DateTimeFormat.prototype, {
		  /*
		   * format a GregorianDate instance according to specified pattern
		   * @param {GregorianCalendar} calendar GregorianDate instance
		   * @returns {string} formatted string of GregorianDate instance
		   */
		  format: function format(calendar) {
		    if (!calendar.isGregorianCalendar) {
		      throw new Error('calendar must be type of GregorianCalendar');
		    }
		    var i = undefined;
		    var ret = [];
		    var pattern = this.pattern;
		    var len = pattern.length;
		    for (i = 0; i < len; i++) {
		      var comp = pattern[i];
		      if (comp.text) {
		        ret.push(comp.text);
		      } else if ('field' in comp) {
		        ret.push(formatField(comp.field, comp.count, this.locale, calendar));
		      }
		    }
		    return ret.join('');
		  },
		
		  /*
		   * parse a formatted string of GregorianDate instance according to specified pattern
		   * @param {String} dateStr formatted string of GregorianDate
		   * @returns {GregorianCalendar}
		   */
		  parse: function parse(dateStr, option_) {
		    var option = option_ || {};
		    var calendarLocale = option.locale;
		    var calendar = new GregorianCalendar(calendarLocale);
		    var i = undefined;
		    var j = undefined;
		    var tmp = {};
		    var obeyCount = option.obeyCount || false;
		    var dateStrLen = dateStr.length;
		    var errorIndex = -1;
		    var startIndex = 0;
		    var oldStartIndex = 0;
		    var pattern = this.pattern;
		    var len = pattern.length;
		    /* eslint no-labels: 0 no-empty-label:0 */
		    loopPattern: {
		      for (i = 0; errorIndex < 0 && i < len; i++) {
		        var comp = pattern[i];
		        var text = undefined;
		        var textLen = undefined;
		        oldStartIndex = startIndex;
		        text = comp.text;
		        if (text) {
		          textLen = text.length;
		          if (textLen + startIndex > dateStrLen) {
		            errorIndex = startIndex;
		          } else {
		            for (j = 0; j < textLen; j++) {
		              if (text.charAt(j) !== dateStr.charAt(j + startIndex)) {
		                errorIndex = startIndex;
		                break loopPattern;
		              }
		            }
		            startIndex += textLen;
		          }
		        } else if ('field' in comp) {
		          if (!option.obeyCount) {
		            var nextComp = pattern[i + 1];
		            obeyCount = false;
		            if (nextComp) {
		              if ('field' in nextComp) {
		                obeyCount = true;
		              } else {
		                var c = nextComp.text.charAt(0);
		                if (c >= '0' && c <= '9') {
		                  obeyCount = true;
		                }
		              }
		            }
		          }
		          startIndex = parseField.call(this, calendar, dateStr, startIndex, comp.field, comp.count, obeyCount, tmp);
		          if (startIndex === oldStartIndex) {
		            errorIndex = startIndex;
		          }
		        }
		      }
		    }
		
		    if (errorIndex >= 0) {
		      warning(false, 'error when parsing date: ' + dateStr + ', position: ' + dateStr.slice(0, errorIndex) + '^');
		      return undefined;
		    }
		    return calendar;
		  }
		});
		
		mix(DateTimeFormat, {
		  Style: DateTimeStyle,
		
		  /*
		   * get a formatter instance of short style pattern.
		   * en-us: M/d/yy h:mm a
		   * zh-cn: yy-M-d ah:mm
		   * @param {Object} locale locale object
		   * @returns {GregorianCalendar}
		   * @static
		   */
		  getInstance: function getInstance(locale) {
		    return this.getDateTimeInstance(DateTimeStyle.SHORT, DateTimeStyle.SHORT, locale);
		  },
		
		  /*
		   * get a formatter instance of specified date style.
		   * @param {Date.Formatter.Style} dateStyle date format style
		   * @param {Object} locale
		   * @returns {GregorianCalendar}
		   * @static
		   */
		  getDateInstance: function getDateInstance(dateStyle, locale) {
		    return this.getDateTimeInstance(dateStyle, undefined, locale);
		  },
		
		  /*
		   * get a formatter instance of specified date style and time style.
		   * @param {Date.Formatter.Style} dateStyle date format style
		   * @param {Date.Formatter.Style} timeStyle time format style
		   * @param {Object} locale
		   * @returns {GregorianCalendar}
		   * @static
		   */
		  getDateTimeInstance: function getDateTimeInstance(dateStyle, timeStyle, locale_) {
		    var locale = locale_ || enUsLocale;
		    var datePattern = '';
		    if (dateStyle !== undefined) {
		      datePattern = locale.datePatterns[dateStyle];
		    }
		    var timePattern = '';
		    if (timeStyle !== undefined) {
		      timePattern = locale.timePatterns[timeStyle];
		    }
		    var pattern = datePattern;
		    if (timePattern) {
		      if (datePattern) {
		        pattern = substitute(locale.dateTimePattern, {
		          date: datePattern,
		          time: timePattern
		        });
		      } else {
		        pattern = timePattern;
		      }
		    }
		    return new DateTimeFormat(pattern, locale);
		  },
		
		  /*
		   * get a formatter instance of specified time style.
		   * @param {Date.Formatter.Style} timeStyle time format style
		   * @param {Object} locale
		   * @returns {GregorianCalendar}
		   * @static
		   */
		  getTimeInstance: function getTimeInstance(timeStyle, locale) {
		    return this.getDateTimeInstance(undefined, timeStyle, locale);
		  }
		});
		
		module.exports = DateTimeFormat;
		
		DateTimeFormat.version = '@VERSION@';
		
		// gc_format@163.com
	
	/***/ },
	/* 30 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _react = __webpack_require__(1);
		
		var _en_US = __webpack_require__(298);
		
		var _en_US2 = _interopRequireDefault(_en_US);
		
		var _index = __webpack_require__(12);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function noop() {}
		
		exports["default"] = {
		  propTypes: {
		    className: _react.PropTypes.string,
		    locale: _react.PropTypes.object,
		    style: _react.PropTypes.object,
		    visible: _react.PropTypes.bool,
		    onSelect: _react.PropTypes.func,
		    prefixCls: _react.PropTypes.string,
		    onChange: _react.PropTypes.func,
		    onOk: _react.PropTypes.func
		  },
		
		  getDefaultProps: function getDefaultProps() {
		    return {
		      locale: _en_US2["default"],
		      style: {},
		      visible: true,
		      prefixCls: 'rc-calendar',
		      formatter: 'yyyy-MM-dd',
		      className: '',
		      onSelect: noop,
		      onChange: noop,
		      onClear: noop
		    };
		  },
		  shouldComponentUpdate: function shouldComponentUpdate(nextProps) {
		    return this.props.visible || nextProps.visible;
		  },
		  getFormatter: function getFormatter() {
		    var formatter = this.props.formatter;
		    var locale = this.props.locale;
		    if (this.normalFormatter && formatter === this.lastFormatter) {
		      return this.normalFormatter;
		    }
		    this.normalFormatter = (0, _index.getFormatter)(formatter, locale);
		    this.lastFormatter = formatter;
		    return this.normalFormatter;
		  },
		  focus: function focus() {
		    if (this.refs.root) {
		      this.refs.root.focus();
		    }
		  }
		};
		module.exports = exports['default'];
	
	/***/ },
	/* 31 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.UNSELECTABLE_ATTRIBUTE = exports.UNSELECTABLE_STYLE = undefined;
		exports.getValuePropValue = getValuePropValue;
		exports.getPropValue = getPropValue;
		exports.isCombobox = isCombobox;
		exports.isMultipleOrTags = isMultipleOrTags;
		exports.isMultipleOrTagsOrCombobox = isMultipleOrTagsOrCombobox;
		exports.isSingleMode = isSingleMode;
		exports.toArray = toArray;
		exports.preventDefaultEvent = preventDefaultEvent;
		exports.findIndexInValueByKey = findIndexInValueByKey;
		exports.getSelectKeys = getSelectKeys;
		exports.findFirstMenuItem = findFirstMenuItem;
		
		var _rcMenu = __webpack_require__(23);
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function getValuePropValue(child) {
		  var props = child.props;
		  if ('value' in props) {
		    return props.value;
		  }
		  if (child.key) {
		    return child.key;
		  }
		  throw new Error('no key or value for ' + child);
		}
		
		function getPropValue(child, prop) {
		  if (prop === 'value') {
		    return getValuePropValue(child);
		  }
		  return child.props[prop];
		}
		
		function isCombobox(props) {
		  return props.combobox;
		}
		
		function isMultipleOrTags(props) {
		  return props.multiple || props.tags;
		}
		
		function isMultipleOrTagsOrCombobox(props) {
		  return isMultipleOrTags(props) || isCombobox(props);
		}
		
		function isSingleMode(props) {
		  return !isMultipleOrTagsOrCombobox(props);
		}
		
		function toArray(value) {
		  var ret = value;
		  if (value === undefined) {
		    ret = [];
		  } else if (!Array.isArray(value)) {
		    ret = [value];
		  }
		  return ret;
		}
		
		function preventDefaultEvent(e) {
		  e.preventDefault();
		}
		
		function findIndexInValueByKey(value, key) {
		  var index = -1;
		  for (var i = 0; i < value.length; i++) {
		    if (value[i].key === key) {
		      index = i;
		      break;
		    }
		  }
		  return index;
		}
		
		function getSelectKeys(menuItems, value) {
		  if (value === null || value === undefined) {
		    return [];
		  }
		  var selectedKeys = [];
		  _react2["default"].Children.forEach(menuItems, function (item) {
		    if (item.type === _rcMenu.ItemGroup) {
		      selectedKeys = selectedKeys.concat(getSelectKeys(item.props.children, value));
		    } else {
		      var itemValue = getValuePropValue(item);
		      var itemKey = item.key;
		      if (findIndexInValueByKey(value, itemValue) !== -1 && itemKey) {
		        selectedKeys.push(itemKey);
		      }
		    }
		  });
		  return selectedKeys;
		}
		
		var UNSELECTABLE_STYLE = exports.UNSELECTABLE_STYLE = {
		  userSelect: 'none',
		  WebkitUserSelect: 'none'
		};
		
		var UNSELECTABLE_ATTRIBUTE = exports.UNSELECTABLE_ATTRIBUTE = {
		  unselectable: 'unselectable'
		};
		
		function findFirstMenuItem(children) {
		  for (var i = 0; i < children.length; i++) {
		    var child = children[i];
		    if (child.type === _rcMenu.ItemGroup) {
		      var found = findFirstMenuItem(child.props.children);
		      if (found) {
		        return found;
		      }
		    } else if (!child.props.disabled) {
		      return child;
		    }
		  }
		  return null;
		}
	
	/***/ },
	/* 32 */
	/***/ function(module, exports) {
	
		/**
		 * Safe chained function
		 *
		 * Will only create a new function if needed,
		 * otherwise will pass back existing functions or null.
		 *
		 * @returns {function|null}
		 */
		"use strict";
		
		function createChainedFunction() {
		  var args = arguments;
		  return function chainedFunction() {
		    for (var i = 0; i < args.length; i++) {
		      if (args[i] && args[i].apply) {
		        args[i].apply(this, arguments);
		      }
		    }
		  };
		}
		
		module.exports = createChainedFunction;
	
	/***/ },
	/* 33 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		module.exports = {
		  guid: __webpack_require__(124),
		  classSet: __webpack_require__(403),
		  joinClasses: __webpack_require__(404),
		  KeyCode: __webpack_require__(11),
		  PureRenderMixin: __webpack_require__(402),
		  shallowEqual: __webpack_require__(35),
		  createChainedFunction: __webpack_require__(32),
		  Dom: {
		    addEventListener: __webpack_require__(13),
		    contains: __webpack_require__(49)
		  },
		  Children: {
		    toArray: __webpack_require__(401),
		    mapSelf: __webpack_require__(48)
		  }
		};
	
	/***/ },
	/* 34 */
	/***/ function(module, exports) {
	
		'use strict';
		
		function ToObject(val) {
			if (val == null) {
				throw new TypeError('Object.assign cannot be called with null or undefined');
			}
		
			return Object(val);
		}
		
		module.exports = Object.assign || function (target, source) {
			var from;
			var keys;
			var to = ToObject(target);
		
			for (var s = 1; s < arguments.length; s++) {
				from = arguments[s];
				keys = Object.keys(Object(from));
		
				for (var i = 0; i < keys.length; i++) {
					to[keys[i]] = from[keys[i]];
				}
			}
		
			return to;
		};
	
	
	/***/ },
	/* 35 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var fetchKeys = __webpack_require__(281);
		
		module.exports = function shallowEqual(objA, objB, compare, compareContext) {
		
		    var ret = compare ? compare.call(compareContext, objA, objB) : void 0;
		
		    if (ret !== void 0) {
		        return !!ret;
		    }
		
		    if (objA === objB) {
		        return true;
		    }
		
		    if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
		        return false;
		    }
		
		    var keysA = fetchKeys(objA);
		    var keysB = fetchKeys(objB);
		
		    var len = keysA.length;
		    if (len !== keysB.length) {
		        return false;
		    }
		
		    compareContext = compareContext || null;
		
		    // Test for A's keys different from B.
		    var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);
		    for (var i = 0; i < len; i++) {
		        var key = keysA[i];
		        if (!bHasOwnProperty(key)) {
		            return false;
		        }
		        var valueA = objA[key];
		        var valueB = objB[key];
		
		        var _ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;
		        if (_ret === false || _ret === void 0 && valueA !== valueB) {
		            return false;
		        }
		    }
		
		    return true;
		};
	
	/***/ },
	/* 36 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _rule = __webpack_require__(8);
		
		var _rule2 = _interopRequireDefault(_rule);
		
		var _util = __webpack_require__(5);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function type(rule, value, callback, source, options) {
		  var ruleType = rule.type;
		  var errors = [];
		  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
		  if (validate) {
		    if ((0, _util.isEmptyValue)(value, ruleType) && !rule.required) {
		      return callback();
		    }
		    _rule2["default"].required(rule, value, source, errors, options, ruleType);
		    if (!(0, _util.isEmptyValue)(value, ruleType)) {
		      _rule2["default"].type(rule, value, source, errors, options);
		    }
		  }
		  callback(errors);
		}
		
		exports["default"] = type;
		module.exports = exports['default'];
	
	/***/ },
	/* 37 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.Col = exports.Row = undefined;
		
		var _row = __webpack_require__(200);
		
		var _row2 = _interopRequireDefault(_row);
		
		var _col = __webpack_require__(199);
		
		var _col2 = _interopRequireDefault(_col);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		exports.Row = _row2["default"];
		exports.Col = _col2["default"];
	
	/***/ },
	/* 38 */
	/***/ function(module, exports) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = getPlacements;
		var autoAdjustOverflow = {
		  adjustX: 1,
		  adjustY: 1
		};
		
		var targetOffset = [0, 0];
		
		function getPlacements() {
		  var config = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		  var _config$arrowWidth = config.arrowWidth;
		  var arrowWidth = _config$arrowWidth === undefined ? 5 : _config$arrowWidth;
		  var _config$horizontalArr = config.horizontalArrowShift;
		  var horizontalArrowShift = _config$horizontalArr === undefined ? 16 : _config$horizontalArr;
		  var _config$verticalArrow = config.verticalArrowShift;
		  var verticalArrowShift = _config$verticalArrow === undefined ? 12 : _config$verticalArrow;
		
		  return {
		    left: {
		      points: ['cr', 'cl'],
		      overflow: autoAdjustOverflow,
		      offset: [-4, 0],
		      targetOffset: targetOffset
		    },
		    right: {
		      points: ['cl', 'cr'],
		      overflow: autoAdjustOverflow,
		      offset: [4, 0],
		      targetOffset: targetOffset
		    },
		    top: {
		      points: ['bc', 'tc'],
		      overflow: autoAdjustOverflow,
		      offset: [0, -4],
		      targetOffset: targetOffset
		    },
		    bottom: {
		      points: ['tc', 'bc'],
		      overflow: autoAdjustOverflow,
		      offset: [0, 4],
		      targetOffset: targetOffset
		    },
		    topLeft: {
		      points: ['bl', 'tc'],
		      overflow: autoAdjustOverflow,
		      offset: [-(horizontalArrowShift + arrowWidth), -4],
		      targetOffset: targetOffset
		    },
		    leftTop: {
		      points: ['tr', 'cl'],
		      overflow: autoAdjustOverflow,
		      offset: [-4, -(verticalArrowShift + arrowWidth)],
		      targetOffset: targetOffset
		    },
		    topRight: {
		      points: ['br', 'tc'],
		      overflow: autoAdjustOverflow,
		      offset: [horizontalArrowShift + arrowWidth, -4],
		      targetOffset: targetOffset
		    },
		    rightTop: {
		      points: ['tl', 'cr'],
		      overflow: autoAdjustOverflow,
		      offset: [4, -(verticalArrowShift + arrowWidth)],
		      targetOffset: targetOffset
		    },
		    bottomRight: {
		      points: ['tr', 'bc'],
		      overflow: autoAdjustOverflow,
		      offset: [horizontalArrowShift + arrowWidth, 4],
		      targetOffset: targetOffset
		    },
		    rightBottom: {
		      points: ['bl', 'cr'],
		      overflow: autoAdjustOverflow,
		      offset: [4, verticalArrowShift + arrowWidth],
		      targetOffset: targetOffset
		    },
		    bottomLeft: {
		      points: ['tl', 'bc'],
		      overflow: autoAdjustOverflow,
		      offset: [-(horizontalArrowShift + arrowWidth), 4],
		      targetOffset: targetOffset
		    },
		    leftBottom: {
		      points: ['br', 'cl'],
		      overflow: autoAdjustOverflow,
		      offset: [-4, verticalArrowShift + arrowWidth],
		      targetOffset: targetOffset
		    }
		  };
		}
		module.exports = exports['default'];
	
	/***/ },
	/* 39 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp;
		
		var _rcRadio = __webpack_require__(342);
		
		var _rcRadio2 = _interopRequireDefault(_rcRadio);
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var _reactAddonsPureRenderMixin = __webpack_require__(14);
		
		var _reactAddonsPureRenderMixin2 = _interopRequireDefault(_reactAddonsPureRenderMixin);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var Radio = (_temp = _class = function (_React$Component) {
		  _inherits(Radio, _React$Component);
		
		  function Radio() {
		    _classCallCheck(this, Radio);
		
		    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
		  }
		
		  Radio.prototype.shouldComponentUpdate = function shouldComponentUpdate() {
		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }
		
		    return _reactAddonsPureRenderMixin2["default"].shouldComponentUpdate.apply(this, args);
		  };
		
		  Radio.prototype.render = function render() {
		    var _classNames, _classNames2;
		
		    var _props = this.props;
		    var prefixCls = _props.prefixCls;
		    var children = _props.children;
		    var checked = _props.checked;
		    var disabled = _props.disabled;
		    var className = _props.className;
		    var style = _props.style;
		
		    var wrapperClassString = (0, _classnames2["default"])((_classNames = {}, _defineProperty(_classNames, prefixCls + '-wrapper', true), _defineProperty(_classNames, prefixCls + '-wrapper-checked', checked), _defineProperty(_classNames, prefixCls + '-wrapper-disabled', disabled), _defineProperty(_classNames, className, !!className), _classNames));
		    var classString = (0, _classnames2["default"])((_classNames2 = {}, _defineProperty(_classNames2, '' + prefixCls, true), _defineProperty(_classNames2, prefixCls + '-checked', checked), _defineProperty(_classNames2, prefixCls + '-disabled', disabled), _classNames2));
		    return _react2["default"].createElement(
		      'label',
		      { className: wrapperClassString, style: style },
		      _react2["default"].createElement(_rcRadio2["default"], _extends({}, this.props, { className: classString, style: null, children: null })),
		      children ? _react2["default"].createElement(
		        'span',
		        null,
		        children
		      ) : null
		    );
		  };
		
		  return Radio;
		}(_react2["default"].Component), _class.defaultProps = {
		  prefixCls: 'ant-radio'
		}, _temp);
		exports["default"] = Radio;
		module.exports = exports['default'];
	
	/***/ },
	/* 40 */
	[461, 444],
	/* 41 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _rcTooltip = __webpack_require__(117);
		
		var _rcTooltip2 = _interopRequireDefault(_rcTooltip);
		
		var _placements = __webpack_require__(38);
		
		var _placements2 = _interopRequireDefault(_placements);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var placements = (0, _placements2["default"])({
		  verticalArrowShift: 8
		});
		
		var Tooltip = (_temp = _class = function (_React$Component) {
		  _inherits(Tooltip, _React$Component);
		
		  function Tooltip(props) {
		    _classCallCheck(this, Tooltip);
		
		    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));
		
		    _this.onVisibleChange = function (visible) {
		      _this.setState({ visible: visible });
		      _this.props.onVisibleChange(visible);
		    };
		
		    _this.onPopupAlign = function (domNode, align) {
		      // 当前返回的位置
		      var placement = Object.keys(placements).filter(function (key) {
		        return placements[key].points[0] === align.points[0] && placements[key].points[1] === align.points[1];
		      })[0];
		      if (!placement) {
		        return;
		      }
		      // 根据当前坐标设置动画点
		      var rect = domNode.getBoundingClientRect();
		      var transformOrigin = {
		        top: '50%',
		        left: '50%'
		      };
		      if (placement.indexOf('top') >= 0 || placement.indexOf('Bottom') >= 0) {
		        transformOrigin.top = rect.height - align.offset[1] + 'px';
		      } else if (placement.indexOf('Top') >= 0 || placement.indexOf('bottom') >= 0) {
		        transformOrigin.top = -align.offset[1] + 'px';
		      }
		      if (placement.indexOf('left') >= 0 || placement.indexOf('Right') >= 0) {
		        transformOrigin.left = rect.width - align.offset[0] + 'px';
		      } else if (placement.indexOf('right') >= 0 || placement.indexOf('Left') >= 0) {
		        transformOrigin.left = -align.offset[0] + 'px';
		      }
		      domNode.style.transformOrigin = transformOrigin.left + ' ' + transformOrigin.top;
		    };
		
		    _this.state = {
		      visible: false
		    };
		    return _this;
		  }
		
		  Tooltip.prototype.getPopupDomNode = function getPopupDomNode() {
		    return this.refs.tooltip.getPopupDomNode();
		  };
		
		  // 动态设置动画点
		
		
		  Tooltip.prototype.render = function render() {
		    var _props = this.props;
		    var prefixCls = _props.prefixCls;
		    var title = _props.title;
		    var overlay = _props.overlay;
		    var children = _props.children;
		    var transitionName = _props.transitionName;
		    // Hide tooltip when there is no title
		
		    var visible = this.state.visible;
		    if (!title && !overlay) {
		      visible = false;
		    }
		    if ('visible' in this.props) {
		      visible = this.props.visible;
		    }
		    var openClassName = this.props.openClassName || prefixCls + '-open';
		    var childrenCls = children && children.props && children.props.className ? children.props.className + ' ' + openClassName : openClassName;
		    return _react2["default"].createElement(
		      _rcTooltip2["default"],
		      _extends({
		        transitionName: transitionName,
		        builtinPlacements: placements,
		        overlay: title,
		        visible: visible,
		        onPopupAlign: this.onPopupAlign,
		        ref: 'tooltip'
		      }, this.props, {
		        onVisibleChange: this.onVisibleChange
		      }),
		      visible ? (0, _react.cloneElement)(children, { className: childrenCls }) : children
		    );
		  };
		
		  return Tooltip;
		}(_react2["default"].Component), _class.defaultProps = {
		  prefixCls: 'ant-tooltip',
		  placement: 'top',
		  transitionName: 'zoom-big',
		  mouseEnterDelay: 0.1,
		  mouseLeaveDelay: 0.1,
		  onVisibleChange: function onVisibleChange() {}
		}, _temp);
		exports["default"] = Tooltip;
		module.exports = exports['default'];
	
	/***/ },
	/* 42 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _Event = __webpack_require__(261);
		
		var _Event2 = _interopRequireDefault(_Event);
		
		var _componentClasses = __webpack_require__(83);
		
		var _componentClasses2 = _interopRequireDefault(_componentClasses);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		var isCssAnimationSupported = _Event2["default"].endEvents.length !== 0;
		
		
		var capitalPrefixes = ['Webkit', 'Moz', 'O',
		// ms is special .... !
		'ms'];
		var prefixes = ['-webkit-', '-moz-', '-o-', 'ms-', ''];
		
		function getDuration(node, name) {
		  var style = window.getComputedStyle(node);
		
		  var ret = '';
		  for (var i = 0; i < prefixes.length; i++) {
		    ret = style.getPropertyValue(prefixes[i] + name);
		    if (ret) {
		      break;
		    }
		  }
		  return ret;
		}
		
		function fixBrowserByTimeout(node) {
		  if (isCssAnimationSupported) {
		    var transitionDuration = parseFloat(getDuration(node, 'transition-duration')) || 0;
		    var animationDuration = parseFloat(getDuration(node, 'animation-duration')) || 0;
		    var time = Math.max(transitionDuration, animationDuration);
		    // sometimes, browser bug
		    node.rcEndAnimTimeout = setTimeout(function () {
		      node.rcEndAnimTimeout = null;
		      if (node.rcEndListener) {
		        node.rcEndListener();
		      }
		    }, time * 1000 + 200);
		  }
		}
		
		function clearBrowserBugTimeout(node) {
		  if (node.rcEndAnimTimeout) {
		    clearTimeout(node.rcEndAnimTimeout);
		    node.rcEndAnimTimeout = null;
		  }
		}
		
		var cssAnimation = function cssAnimation(node, transitionName, endCallback) {
		  var className = transitionName;
		  var activeClassName = className + '-active';
		  var end = endCallback;
		  var start = void 0;
		  var active = void 0;
		  var nodeClasses = (0, _componentClasses2["default"])(node);
		
		  if (endCallback && Object.prototype.toString.call(endCallback) === '[object Object]') {
		    end = endCallback.end;
		    start = endCallback.start;
		    active = endCallback.active;
		  }
		
		  if (node.rcEndListener) {
		    node.rcEndListener();
		  }
		
		  node.rcEndListener = function (e) {
		    if (e && e.target !== node) {
		      return;
		    }
		
		    if (node.rcAnimTimeout) {
		      clearTimeout(node.rcAnimTimeout);
		      node.rcAnimTimeout = null;
		    }
		
		    clearBrowserBugTimeout(node);
		
		    nodeClasses.remove(className);
		    nodeClasses.remove(activeClassName);
		
		    _Event2["default"].removeEndEventListener(node, node.rcEndListener);
		    node.rcEndListener = null;
		
		    // Usually this optional end is used for informing an owner of
		    // a leave animation and telling it to remove the child.
		    if (end) {
		      end();
		    }
		  };
		
		  _Event2["default"].addEndEventListener(node, node.rcEndListener);
		
		  if (start) {
		    start();
		  }
		  nodeClasses.add(className);
		
		  node.rcAnimTimeout = setTimeout(function () {
		    node.rcAnimTimeout = null;
		    nodeClasses.add(activeClassName);
		    if (active) {
		      setTimeout(active, 0);
		    }
		    fixBrowserByTimeout(node);
		    // 30ms for firefox
		  }, 30);
		
		  return {
		    stop: function stop() {
		      if (node.rcEndListener) {
		        node.rcEndListener();
		      }
		    }
		  };
		};
		
		cssAnimation.style = function (node, style, callback) {
		  if (node.rcEndListener) {
		    node.rcEndListener();
		  }
		
		  node.rcEndListener = function (e) {
		    if (e && e.target !== node) {
		      return;
		    }
		
		    if (node.rcAnimTimeout) {
		      clearTimeout(node.rcAnimTimeout);
		      node.rcAnimTimeout = null;
		    }
		
		    clearBrowserBugTimeout(node);
		
		    _Event2["default"].removeEndEventListener(node, node.rcEndListener);
		    node.rcEndListener = null;
		
		    // Usually this optional callback is used for informing an owner of
		    // a leave animation and telling it to remove the child.
		    if (callback) {
		      callback();
		    }
		  };
		
		  _Event2["default"].addEndEventListener(node, node.rcEndListener);
		
		  node.rcAnimTimeout = setTimeout(function () {
		    for (var s in style) {
		      if (style.hasOwnProperty(s)) {
		        node.style[s] = style[s];
		      }
		    }
		    node.rcAnimTimeout = null;
		    fixBrowserByTimeout(node);
		  }, 0);
		};
		
		cssAnimation.setTransition = function (node, p, value) {
		  var property = p;
		  var v = value;
		  if (value === undefined) {
		    v = property;
		    property = '';
		  }
		  property = property || '';
		  capitalPrefixes.forEach(function (prefix) {
		    node.style[prefix + 'Transition' + property] = v;
		  });
		};
		
		cssAnimation.isCssAnimationSupported = isCssAnimationSupported;
		
		exports["default"] = cssAnimation;
		module.exports = exports['default'];
	
	/***/ },
	/* 43 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		module.exports = __webpack_require__(268);
	
	/***/ },
	/* 44 */
	/***/ function(module, exports) {
	
		'use strict';
		
		module.exports = {
		  eras: ['BC', 'AD'],
		  months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
		  shortMonths: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
		  weekdays: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],
		  shortWeekdays: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
		  veryShortWeekdays: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
		  ampms: ['AM', 'PM'],
		  datePatterns: ['EEEE, MMMM d, yyyy', 'MMMM d, yyyy', 'MMM d, yyyy', 'M/d/yy'],
		  timePatterns: ['h:mm:ss a \'GMT\'Z', 'h:mm:ss a', 'h:mm:ss a', 'h:mm a'],
		  dateTimePattern: '{date} {time}'
		};
	
	/***/ },
	/* 45 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _DateTHead = __webpack_require__(295);
		
		var _DateTHead2 = _interopRequireDefault(_DateTHead);
		
		var _DateTBody = __webpack_require__(294);
		
		var _DateTBody2 = _interopRequireDefault(_DateTBody);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var DateTable = function (_React$Component) {
		  _inherits(DateTable, _React$Component);
		
		  function DateTable() {
		    _classCallCheck(this, DateTable);
		
		    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
		  }
		
		  DateTable.prototype.render = function render() {
		    var props = this.props;
		    var prefixCls = props.prefixCls;
		    return _react2["default"].createElement(
		      'table',
		      { className: prefixCls + '-table', cellSpacing: '0', role: 'grid' },
		      _react2["default"].createElement(_DateTHead2["default"], props),
		      _react2["default"].createElement(_DateTBody2["default"], props)
		    );
		  };
		
		  return DateTable;
		}(_react2["default"].Component);
		
		exports["default"] = DateTable;
		module.exports = exports['default'];
	
	/***/ },
	/* 46 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var _gregorianCalendar = __webpack_require__(9);
		
		var _gregorianCalendar2 = _interopRequireDefault(_gregorianCalendar);
		
		var _index = __webpack_require__(12);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function noop() {}
		
		function getNow() {
		  var value = new _gregorianCalendar2["default"]();
		  value.setTime(Date.now());
		  return value;
		}
		
		function getNowByCurrentStateValue(value) {
		  var ret = void 0;
		  if (value) {
		    ret = value.clone();
		    ret.setTime(Date.now());
		  } else {
		    ret = getNow();
		  }
		  return ret;
		}
		
		var CalendarMixin = {
		  propTypes: {
		    value: _react.PropTypes.object,
		    defaultValue: _react.PropTypes.object,
		    onKeyDown: _react.PropTypes.func
		  },
		
		  getDefaultProps: function getDefaultProps() {
		    return {
		      onKeyDown: noop
		    };
		  },
		  getInitialState: function getInitialState() {
		    var props = this.props;
		    var value = props.value || props.defaultValue || getNow();
		    return {
		      value: value,
		      selectedValue: props.selectedValue || props.defaultSelectedValue
		    };
		  },
		  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
		    var value = nextProps.value;
		    var selectedValue = nextProps.selectedValue;
		
		    if ('value' in nextProps) {
		      value = value || nextProps.defaultValue || getNowByCurrentStateValue(this.state.value);
		      this.setState({
		        value: value
		      });
		    }
		    if ('selectedValue' in nextProps) {
		      this.setState({
		        selectedValue: selectedValue
		      });
		    }
		  },
		  onSelect: function onSelect(value, cause) {
		    if (value) {
		      this.setValue(value);
		    }
		    this.setSelectedValue(value, cause);
		  },
		  renderRoot: function renderRoot(newProps) {
		    var _className;
		
		    var props = this.props;
		    var prefixCls = props.prefixCls;
		
		    var className = (_className = {}, _defineProperty(_className, prefixCls, 1), _defineProperty(_className, prefixCls + '-hidden', !props.visible), _defineProperty(_className, props.className, !!props.className), _defineProperty(_className, newProps.className, !!newProps.className), _className);
		
		    return _react2["default"].createElement(
		      'div',
		      {
		        ref: 'root',
		        className: '' + (0, _classnames2["default"])(className),
		        style: this.props.style,
		        tabIndex: '0',
		        onKeyDown: this.onKeyDown
		      },
		      newProps.children
		    );
		  },
		  setSelectedValue: function setSelectedValue(selectedValue, cause) {
		    if (this.isAllowedDate(selectedValue)) {
		      if (!('selectedValue' in this.props)) {
		        this.setState({
		          selectedValue: selectedValue
		        });
		      }
		      this.props.onSelect(selectedValue, cause);
		    }
		  },
		  setValue: function setValue(value) {
		    var originalValue = this.state.value;
		    if (!('value' in this.props)) {
		      this.setState({
		        value: value
		      });
		    }
		    if (originalValue && value && originalValue.getTime() !== value.getTime() || !originalValue && value || originalValue && !value) {
		      this.props.onChange(value);
		    }
		  },
		  isAllowedDate: function isAllowedDate(value) {
		    var disabledDate = this.props.disabledDate;
		    var disabledTime = this.props.disabledTime;
		    return (0, _index.isAllowedDate)(value, disabledDate, disabledTime);
		  }
		};
		
		exports["default"] = CalendarMixin;
		module.exports = exports['default'];
	
	/***/ },
	/* 47 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var OptGroup = function (_React$Component) {
		  _inherits(OptGroup, _React$Component);
		
		  function OptGroup() {
		    _classCallCheck(this, OptGroup);
		
		    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
		  }
		
		  return OptGroup;
		}(_react2["default"].Component);
		
		exports["default"] = OptGroup;
		module.exports = exports['default'];
	
	/***/ },
	/* 48 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var React = __webpack_require__(1);
		
		function mirror(o) {
		  return o;
		}
		
		module.exports = function mapSelf(children) {
		  // return ReactFragment
		  return React.Children.map(children, mirror);
		};
	
	/***/ },
	/* 49 */
	/***/ function(module, exports) {
	
		"use strict";
		
		module.exports = function contains(root, n) {
		  var node = n;
		  while (node) {
		    if (node === root) {
		      return true;
		    }
		    node = node.parentNode;
		  }
		
		  return false;
		};
	
	/***/ },
	/* 50 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(setImmediate, clearImmediate) {var nextTick = __webpack_require__(283).nextTick;
		var apply = Function.prototype.apply;
		var slice = Array.prototype.slice;
		var immediateIds = {};
		var nextImmediateId = 0;
		
		// DOM APIs, for completeness
		
		exports.setTimeout = function() {
		  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
		};
		exports.setInterval = function() {
		  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
		};
		exports.clearTimeout =
		exports.clearInterval = function(timeout) { timeout.close(); };
		
		function Timeout(id, clearFn) {
		  this._id = id;
		  this._clearFn = clearFn;
		}
		Timeout.prototype.unref = Timeout.prototype.ref = function() {};
		Timeout.prototype.close = function() {
		  this._clearFn.call(window, this._id);
		};
		
		// Does not start the time, just sets up the members needed.
		exports.enroll = function(item, msecs) {
		  clearTimeout(item._idleTimeoutId);
		  item._idleTimeout = msecs;
		};
		
		exports.unenroll = function(item) {
		  clearTimeout(item._idleTimeoutId);
		  item._idleTimeout = -1;
		};
		
		exports._unrefActive = exports.active = function(item) {
		  clearTimeout(item._idleTimeoutId);
		
		  var msecs = item._idleTimeout;
		  if (msecs >= 0) {
		    item._idleTimeoutId = setTimeout(function onTimeout() {
		      if (item._onTimeout)
		        item._onTimeout();
		    }, msecs);
		  }
		};
		
		// That's not how node.js implements it but the exposed api is the same.
		exports.setImmediate = typeof setImmediate === "function" ? setImmediate : function(fn) {
		  var id = nextImmediateId++;
		  var args = arguments.length < 2 ? false : slice.call(arguments, 1);
		
		  immediateIds[id] = true;
		
		  nextTick(function onNextTick() {
		    if (immediateIds[id]) {
		      // fn.call() is faster so we optimize for the common use-case
		      // @see http://jsperf.com/call-apply-segu
		      if (args) {
		        fn.apply(null, args);
		      } else {
		        fn.call(null);
		      }
		      // Prevent ids from leaking
		      exports.clearImmediate(id);
		    }
		  });
		
		  return id;
		};
		
		exports.clearImmediate = typeof clearImmediate === "function" ? clearImmediate : function(id) {
		  delete immediateIds[id];
		};
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(50).setImmediate, __webpack_require__(50).clearImmediate))
	
	/***/ },
	/* 51 */
	3,
	/* 52 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		exports['default'] = addEventListener;
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		var _EventObject = __webpack_require__(132);
		
		var _EventObject2 = _interopRequireDefault(_EventObject);
		
		function addEventListener(target, eventType, callback) {
		  function wrapCallback(e) {
		    var ne = new _EventObject2['default'](e);
		    callback.call(target, ne);
		  }
		
		  if (target.addEventListener) {
		    target.addEventListener(eventType, wrapCallback, false);
		    return {
		      remove: function remove() {
		        target.removeEventListener(eventType, wrapCallback, false);
		      }
		    };
		  } else if (target.attachEvent) {
		    target.attachEvent('on' + eventType, wrapCallback);
		    return {
		      remove: function remove() {
		        target.detachEvent('on' + eventType, wrapCallback);
		      }
		    };
		  }
		}
		
		module.exports = exports['default'];
	
	/***/ },
	/* 53 */
	/***/ function(module, exports) {
	
		function arrayTreeFilter(data, filterFn, options) {
		  options = options || {};
		  options.childrenKeyName = options.childrenKeyName || 'children';
		  var children = data || [];
		  var result = [];
		  var level = 0;
		  var foundItem;
		  do {
		    var foundItem = children.filter(function(item) {
		      return filterFn(item, level);
		    })[0];
		    if (!foundItem) {
		      break;
		    }
		    result.push(foundItem);
		    children = foundItem[options.childrenKeyName] || [];
		    level += 1;
		  } while(children.length > 0);
		  return result;
		}
		
		module.exports = arrayTreeFilter;
	
	
	/***/ },
	/* 54 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _util = __webpack_require__(5);
		
		var util = _interopRequireWildcard(_util);
		
		function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj["default"] = obj; return newObj; } }
		
		/**
		 *  Rule for validating required fields.
		 *
		 *  @param rule The validation rule.
		 *  @param value The value of the field on the source object.
		 *  @param source The source object being validated.
		 *  @param errors An array of errors that this rule may add
		 *  validation errors to.
		 *  @param options The validation options.
		 *  @param options.messages The validation messages.
		 */
		function required(rule, value, source, errors, options, type) {
		  if (rule.required && (!source.hasOwnProperty(rule.field) || util.isEmptyValue(value, type))) {
		    errors.push(util.format(options.messages.required, rule.fullField));
		  }
		}
		
		exports["default"] = required;
		module.exports = exports['default'];
	
	/***/ },
	/* 55 */
	/***/ function(module, exports) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		var animation = void 0;
		
		function isCssAnimationSupported() {
		  if (animation !== undefined) {
		    return animation;
		  }
		  var domPrefixes = 'Webkit Moz O ms Khtml'.split(' ');
		  var elm = document.createElement('div');
		  if (elm.style.animationName !== undefined) {
		    animation = true;
		  }
		  if (animation !== undefined) {
		    for (var i = 0; i < domPrefixes.length; i++) {
		      if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {
		        animation = true;
		        break;
		      }
		    }
		  }
		  animation = animation || false;
		  return animation;
		}
		
		exports["default"] = isCssAnimationSupported;
		module.exports = exports['default'];
	
	/***/ },
	/* 56 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _cssAnimation = __webpack_require__(42);
		
		var _cssAnimation2 = _interopRequireDefault(_cssAnimation);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function animate(node, show, done) {
		  var height = void 0;
		  return (0, _cssAnimation2["default"])(node, 'ant-motion-collapse', {
		    start: function start() {
		      if (!show) {
		        node.style.height = node.offsetHeight + 'px';
		      } else {
		        height = node.offsetHeight;
		        node.style.height = 0;
		      }
		    },
		    active: function active() {
		      node.style.height = (show ? height : 0) + 'px';
		    },
		    end: function end() {
		      node.style.height = '';
		      done();
		    }
		  });
		}
		
		var animation = {
		  enter: function enter(node, done) {
		    return animate(node, true, done);
		  },
		  leave: function leave(node, done) {
		    return animate(node, false, done);
		  },
		  appear: function appear(node, done) {
		    return animate(node, true, done);
		  }
		};
		
		exports["default"] = animation;
		module.exports = exports['default'];
	
	/***/ },
	/* 57 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var BreadcrumbItem = (_temp = _class = function (_React$Component) {
		  _inherits(BreadcrumbItem, _React$Component);
		
		  function BreadcrumbItem() {
		    _classCallCheck(this, BreadcrumbItem);
		
		    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
		  }
		
		  BreadcrumbItem.prototype.render = function render() {
		    var _props = this.props;
		    var prefixCls = _props.prefixCls;
		    var separator = _props.separator;
		    var children = _props.children;
		
		    var restProps = _objectWithoutProperties(_props, ['prefixCls', 'separator', 'children']);
		
		    var link = void 0;
		    if ('href' in this.props) {
		      link = _react2["default"].createElement(
		        'a',
		        _extends({ className: prefixCls + '-link' }, restProps),
		        children
		      );
		    } else {
		      link = _react2["default"].createElement(
		        'span',
		        _extends({ className: prefixCls + '-link' }, restProps),
		        children
		      );
		    }
		    return _react2["default"].createElement(
		      'span',
		      null,
		      link,
		      _react2["default"].createElement(
		        'span',
		        { className: prefixCls + '-separator' },
		        separator
		      )
		    );
		  };
		
		  return BreadcrumbItem;
		}(_react2["default"].Component), _class.defaultProps = {
		  prefixCls: 'ant-breadcrumb',
		  separator: '/'
		}, _class.propTypes = {
		  prefixCls: _react2["default"].PropTypes.string,
		  separator: _react2["default"].PropTypes.oneOfType([_react2["default"].PropTypes.string, _react2["default"].PropTypes.element]),
		  href: _react2["default"].PropTypes.string
		}, _temp);
		exports["default"] = BreadcrumbItem;
		module.exports = exports['default'];
	
	/***/ },
	/* 58 */
	/***/ function(module, exports) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		var PREFIX_CLS = exports.PREFIX_CLS = 'ant-fullcalendar';
	
	/***/ },
	/* 59 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _layout = __webpack_require__(37);
		
		exports["default"] = _layout.Col;
		module.exports = exports['default'];
	
	/***/ },
	/* 60 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _zh_CN = __webpack_require__(90);
		
		var _zh_CN2 = _interopRequireDefault(_zh_CN);
		
		var _zh_CN3 = __webpack_require__(101);
		
		var _zh_CN4 = _interopRequireDefault(_zh_CN3);
		
		var _zh_CN5 = __webpack_require__(78);
		
		var _zh_CN6 = _interopRequireDefault(_zh_CN5);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		// 统一合并为完整的 Locale
		var locale = _extends({}, _zh_CN2["default"]);
		locale.lang = _extends({
		  placeholder: '请选择日期',
		  rangePlaceholder: ['开始日期', '结束日期']
		}, _zh_CN4["default"]);
		
		locale.timePickerLocale = _extends({}, _zh_CN6["default"]);
		
		// should add whitespace between char in Button
		locale.lang.ok = '确 定';
		
		// All settings at:
		// https://github.com/ant-design/ant-design/issues/424
		
		exports["default"] = locale;
		module.exports = exports['default'];
	
	/***/ },
	/* 61 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _rcDropdown = __webpack_require__(315);
		
		var _rcDropdown2 = _interopRequireDefault(_rcDropdown);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var Dropdown = (_temp = _class = function (_React$Component) {
		  _inherits(Dropdown, _React$Component);
		
		  function Dropdown() {
		    _classCallCheck(this, Dropdown);
		
		    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
		  }
		
		  Dropdown.prototype.render = function render() {
		    var _props = this.props;
		    var overlay = _props.overlay;
		
		    var otherProps = _objectWithoutProperties(_props, ['overlay']);
		
		    var menu = _react2["default"].cloneElement(overlay, {
		      openTransitionName: 'zoom-big'
		    });
		    return _react2["default"].createElement(_rcDropdown2["default"], _extends({}, otherProps, { overlay: menu }));
		  };
		
		  return Dropdown;
		}(_react2["default"].Component), _class.defaultProps = {
		  transitionName: 'slide-up',
		  prefixCls: 'ant-dropdown',
		  mouseEnterDelay: 0.15,
		  mouseLeaveDelay: 0.1
		}, _temp);
		exports["default"] = Dropdown;
		module.exports = exports['default'];
	
	/***/ },
	/* 62 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _dropdown = __webpack_require__(61);
		
		var _dropdown2 = _interopRequireDefault(_dropdown);
		
		var _dropdownButton = __webpack_require__(187);
		
		var _dropdownButton2 = _interopRequireDefault(_dropdownButton);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		_dropdown2["default"].Button = _dropdownButton2["default"];
		exports["default"] = _dropdown2["default"];
		module.exports = exports['default'];
	
	/***/ },
	/* 63 */
	[463, 433],
	/* 64 */
	/***/ function(module, exports) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		var FIELD_META_PROP = exports.FIELD_META_PROP = 'data-__meta';
	
	/***/ },
	/* 65 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _Input = __webpack_require__(197);
		
		var _Input2 = _interopRequireDefault(_Input);
		
		var _Group = __webpack_require__(196);
		
		var _Group2 = _interopRequireDefault(_Group);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		_Input2["default"].Group = _Group2["default"];
		exports["default"] = _Input2["default"];
		module.exports = exports['default'];
	
	/***/ },
	/* 66 */
	[461, 51],
	/* 67 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp2;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _rcDialog = __webpack_require__(313);
		
		var _rcDialog2 = _interopRequireDefault(_rcDialog);
		
		var _addEventListener = __webpack_require__(13);
		
		var _addEventListener2 = _interopRequireDefault(_addEventListener);
		
		var _button = __webpack_require__(19);
		
		var _button2 = _interopRequireDefault(_button);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		function noop() {}
		
		var mousePosition = void 0;
		var mousePositionEventBinded = void 0;
		
		var Modal = (_temp2 = _class = function (_React$Component) {
		  _inherits(Modal, _React$Component);
		
		  function Modal() {
		    var _temp, _this, _ret;
		
		    _classCallCheck(this, Modal);
		
		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }
		
		    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleCancel = function (e) {
		      _this.props.onCancel(e);
		    }, _this.handleOk = function () {
		      _this.props.onOk();
		    }, _temp), _possibleConstructorReturn(_this, _ret);
		  }
		
		  Modal.prototype.componentDidMount = function componentDidMount() {
		    if (mousePositionEventBinded) {
		      return;
		    }
		    // 只有点击事件支持从鼠标位置动画展开
		    (0, _addEventListener2["default"])(document.documentElement, 'click', function (e) {
		      mousePosition = {
		        x: e.pageX,
		        y: e.pageY
		      };
		      // 20ms 内发生过点击事件，则从点击位置动画展示
		      // 否则直接 zoom 展示
		      // 这样可以兼容非点击方式展开
		      setTimeout(function () {
		        return mousePosition = null;
		      }, 20);
		    });
		    mousePositionEventBinded = true;
		  };
		
		  Modal.prototype.render = function render() {
		    var props = this.props;
		
		    var okText = props.okText;
		    var cancelText = props.cancelText;
		
		    if (this.context.antLocale && this.context.antLocale.Modal) {
		      okText = okText || this.context.antLocale.Modal.okText;
		      cancelText = cancelText || this.context.antLocale.Modal.cancelText;
		    }
		
		    var defaultFooter = [_react2["default"].createElement(
		      _button2["default"],
		      { key: 'cancel',
		        type: 'ghost',
		        size: 'large',
		        onClick: this.handleCancel
		      },
		      cancelText || '取消'
		    ), _react2["default"].createElement(
		      _button2["default"],
		      { key: 'confirm',
		        type: 'primary',
		        size: 'large',
		        loading: props.confirmLoading,
		        onClick: this.handleOk
		      },
		      okText || '确定'
		    )];
		    var footer = props.footer || defaultFooter;
		    return _react2["default"].createElement(_rcDialog2["default"], _extends({ onClose: this.handleCancel, footer: footer }, props, {
		      visible: props.visible, mousePosition: mousePosition
		    }));
		  };
		
		  return Modal;
		}(_react2["default"].Component), _class.defaultProps = {
		  prefixCls: 'ant-modal',
		  onOk: noop,
		  onCancel: noop,
		  width: 520,
		  transitionName: 'zoom',
		  maskTransitionName: 'fade',
		  confirmLoading: false,
		  visible: false
		}, _class.propTypes = {
		  prefixCls: _react.PropTypes.string,
		  onOk: _react.PropTypes.func,
		  onCancel: _react.PropTypes.func,
		  okText: _react.PropTypes.node,
		  cancelText: _react.PropTypes.node,
		  width: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
		  confirmLoading: _react.PropTypes.bool,
		  visible: _react.PropTypes.bool,
		  align: _react.PropTypes.object,
		  footer: _react.PropTypes.node,
		  title: _react.PropTypes.node,
		  closable: _react.PropTypes.bool
		}, _class.contextTypes = {
		  antLocale: _react2["default"].PropTypes.object
		}, _temp2);
		exports["default"] = Modal;
		module.exports = exports['default'];
	
	/***/ },
	/* 68 */
	/***/ function(module, exports) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		exports.changeConfirmLocale = changeConfirmLocale;
		exports.getConfirmLocale = getConfirmLocale;
		var defaultLocale = {
		  okText: '确定',
		  cancelText: '取消',
		  justOkText: '知道了'
		};
		
		var runtimeLocale = _extends({}, defaultLocale);
		
		function changeConfirmLocale(newLocale) {
		  if (newLocale) {
		    runtimeLocale = _extends({}, runtimeLocale, newLocale);
		  } else {
		    runtimeLocale = _extends({}, defaultLocale);
		  }
		}
		
		function getConfirmLocale() {
		  return runtimeLocale;
		}
	
	/***/ },
	/* 69 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _Pagination = __webpack_require__(213);
		
		var _Pagination2 = _interopRequireDefault(_Pagination);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		exports["default"] = _Pagination2["default"];
		module.exports = exports['default'];
	
	/***/ },
	/* 70 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		__webpack_require__(3);
		
		__webpack_require__(441);
		
		__webpack_require__(28);
		
		__webpack_require__(15);
	
	/***/ },
	/* 71 */
	[461, 442],
	/* 72 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _progress = __webpack_require__(218);
		
		var _progress2 = _interopRequireDefault(_progress);
		
		var _warning = __webpack_require__(18);
		
		var _warning2 = _interopRequireDefault(_warning);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		var AntProgress = _progress2["default"];
		
		// For downward compatibility
		AntProgress.Line = function (props) {
		  (0, _warning2["default"])(false, '<Progress.Line /> is deprecated, use <Progress type="line" /> instead.');
		  return _react2["default"].createElement(_progress2["default"], _extends({}, props, { type: 'line' }));
		};
		AntProgress.Circle = function (props) {
		  (0, _warning2["default"])(false, '<Progress.Circle /> is deprecated, use <Progress type="circle" /> instead.');
		  return _react2["default"].createElement(_progress2["default"], _extends({}, props, { type: 'circle' }));
		};
		
		exports["default"] = AntProgress;
		module.exports = exports['default'];
	
	/***/ },
	/* 73 */
	[461, 443],
	/* 74 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _class, _temp;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _radio = __webpack_require__(39);
		
		var _radio2 = _interopRequireDefault(_radio);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var RadioButton = (_temp = _class = function (_React$Component) {
		  _inherits(RadioButton, _React$Component);
		
		  function RadioButton() {
		    _classCallCheck(this, RadioButton);
		
		    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
		  }
		
		  RadioButton.prototype.render = function render() {
		    return _react2["default"].createElement(_radio2["default"], this.props);
		  };
		
		  return RadioButton;
		}(_react2["default"].Component), _class.defaultProps = {
		  prefixCls: 'ant-radio-button'
		}, _temp);
		exports["default"] = RadioButton;
		module.exports = exports['default'];
	
	/***/ },
	/* 75 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _layout = __webpack_require__(37);
		
		exports["default"] = _layout.Row;
		module.exports = exports['default'];
	
	/***/ },
	/* 76 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _reactDom = __webpack_require__(4);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var _isCssAnimationSupported = __webpack_require__(55);
		
		var _isCssAnimationSupported2 = _interopRequireDefault(_isCssAnimationSupported);
		
		var _warning = __webpack_require__(18);
		
		var _warning2 = _interopRequireDefault(_warning);
		
		var _object = __webpack_require__(16);
		
		var _object2 = _interopRequireDefault(_object);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var Spin = (_temp = _class = function (_React$Component) {
		  _inherits(Spin, _React$Component);
		
		  function Spin(props) {
		    _classCallCheck(this, Spin);
		
		    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));
		
		    var spinning = _this.getSpinning(props);
		    _this.state = {
		      spinning: spinning
		    };
		    return _this;
		  }
		
		  Spin.prototype.isNestedPattern = function isNestedPattern() {
		    return !!(this.props && this.props.children);
		  };
		
		  Spin.prototype.componentDidMount = function componentDidMount() {
		    (0, _warning2["default"])(!('spining' in this.props), '`spining` property of Popover is a spell mistake, use `spinning` instead.');
		    if (!(0, _isCssAnimationSupported2["default"])()) {
		      // Show text in IE8/9
		      (0, _reactDom.findDOMNode)(this).className += ' ' + this.props.prefixCls + '-show-text';
		    }
		  };
		
		  Spin.prototype.componentWillUnmount = function componentWillUnmount() {
		    if (this.debounceTimeout) {
		      clearTimeout(this.debounceTimeout);
		    }
		  };
		
		  Spin.prototype.getSpinning = function getSpinning(props) {
		    // Backwards support
		    if ('spining' in props) {
		      (0, _warning2["default"])(false, '`spining` property of Spin is a spell mistake, use `spinning` instead.');
		      return props.spining;
		    }
		    return props.spinning;
		  };
		
		  Spin.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
		    var _this2 = this;
		
		    var spinning = this.getSpinning(nextProps);
		    if (this.debounceTimeout) {
		      clearTimeout(this.debounceTimeout);
		    }
		    if (spinning) {
		      this.debounceTimeout = setTimeout(function () {
		        return _this2.setState({ spinning: spinning });
		      }, 250);
		    } else {
		      this.setState({ spinning: spinning });
		    }
		  };
		
		  Spin.prototype.render = function render() {
		    var _classNames;
		
		    var _props = this.props;
		    var className = _props.className;
		    var size = _props.size;
		    var prefixCls = _props.prefixCls;
		    var tip = _props.tip;
		
		    var restProps = _objectWithoutProperties(_props, ['className', 'size', 'prefixCls', 'tip']);
		
		    var spinning = this.state.spinning;
		
		
		    var spinClassName = (0, _classnames2["default"])((_classNames = {}, _defineProperty(_classNames, prefixCls, true), _defineProperty(_classNames, prefixCls + '-sm', size === 'small'), _defineProperty(_classNames, prefixCls + '-lg', size === 'large'), _defineProperty(_classNames, prefixCls + '-spinning', spinning), _defineProperty(_classNames, prefixCls + '-show-text', !!this.props.tip), _defineProperty(_classNames, className, !!className), _classNames));
		
		    // fix https://fb.me/react-unknown-prop
		    var divProps = (0, _object2["default"])(restProps, ['spinning']);
		
		    var spinElement = _react2["default"].createElement(
		      'div',
		      _extends({}, divProps, { className: spinClassName }),
		      _react2["default"].createElement('span', { className: prefixCls + '-dot' }),
		      _react2["default"].createElement(
		        'div',
		        { className: prefixCls + '-text' },
		        tip || '加载中...'
		      )
		    );
		
		    if (this.isNestedPattern()) {
		      return _react2["default"].createElement(
		        'div',
		        _extends({}, divProps, { className: spinning ? prefixCls + '-nested-loading' : '' }),
		        spinElement,
		        _react2["default"].createElement(
		          'div',
		          { className: prefixCls + '-container' },
		          this.props.children
		        )
		      );
		    }
		    return spinElement;
		  };
		
		  return Spin;
		}(_react2["default"].Component), _class.defaultProps = {
		  prefixCls: 'ant-spin',
		  spinning: true
		}, _class.propTypes = {
		  className: _react2["default"].PropTypes.string,
		  size: _react2["default"].PropTypes.oneOf(['small', 'default', 'large'])
		}, _temp);
		exports["default"] = Spin;
		module.exports = exports['default'];
	
	/***/ },
	/* 77 */
	[461, 448],
	/* 78 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _zh_CN = __webpack_require__(376);
		
		var _zh_CN2 = _interopRequireDefault(_zh_CN);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		var locale = _extends({
		  placeholder: '请选择时间'
		}, _zh_CN2["default"]);
		
		exports["default"] = locale;
		module.exports = exports['default'];
	
	/***/ },
	/* 79 */
	[462, 454],
	/* 80 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var TimelineItem = (_temp = _class = function (_React$Component) {
		  _inherits(TimelineItem, _React$Component);
		
		  function TimelineItem() {
		    _classCallCheck(this, TimelineItem);
		
		    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
		  }
		
		  TimelineItem.prototype.render = function render() {
		    var _classNames, _classNames2;
		
		    var _props = this.props;
		    var prefixCls = _props.prefixCls;
		    var color = _props.color;
		    var last = _props.last;
		    var children = _props.children;
		    var pending = _props.pending;
		    var className = _props.className;
		    var dot = _props.dot;
		
		    var restProps = _objectWithoutProperties(_props, ['prefixCls', 'color', 'last', 'children', 'pending', 'className', 'dot']);
		
		    var itemClassName = (0, _classnames2["default"])((_classNames = {}, _defineProperty(_classNames, prefixCls + '-item', true), _defineProperty(_classNames, prefixCls + '-item-last', last), _defineProperty(_classNames, prefixCls + '-item-pending', pending), _defineProperty(_classNames, className, className), _classNames));
		
		    var dotClassName = (0, _classnames2["default"])((_classNames2 = {}, _defineProperty(_classNames2, prefixCls + '-item-head', true), _defineProperty(_classNames2, prefixCls + '-item-head-custom', dot), _defineProperty(_classNames2, prefixCls + '-item-head-' + color, true), _classNames2));
		
		    return _react2["default"].createElement(
		      'li',
		      _extends({}, restProps, { className: itemClassName }),
		      _react2["default"].createElement('div', { className: prefixCls + '-item-tail' }),
		      _react2["default"].createElement(
		        'div',
		        { className: dotClassName, style: { color: /blue|red|green/.test(color) ? null : color } },
		        dot
		      ),
		      _react2["default"].createElement(
		        'div',
		        { className: prefixCls + '-item-content' },
		        children
		      )
		    );
		  };
		
		  return TimelineItem;
		}(_react2["default"].Component), _class.defaultProps = {
		  prefixCls: 'ant-timeline',
		  color: 'blue',
		  last: false,
		  pending: false
		}, _temp);
		exports["default"] = TimelineItem;
		module.exports = exports['default'];
	
	/***/ },
	/* 81 */
	[461, 456],
	/* 82 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _class, _temp2;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _icon = __webpack_require__(6);
		
		var _icon2 = _interopRequireDefault(_icon);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		function noop() {}
		
		var Search = (_temp2 = _class = function (_React$Component) {
		  _inherits(Search, _React$Component);
		
		  function Search() {
		    var _temp, _this, _ret;
		
		    _classCallCheck(this, Search);
		
		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }
		
		    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleChange = function (e) {
		      _this.props.onChange(e);
		    }, _this.handleClear = function (e) {
		      e.preventDefault();
		      _this.props.handleClear(e);
		    }, _temp), _possibleConstructorReturn(_this, _ret);
		  }
		
		  Search.prototype.render = function render() {
		    var _props = this.props;
		    var placeholder = _props.placeholder;
		    var value = _props.value;
		    var prefixCls = _props.prefixCls;
		
		    return _react2["default"].createElement(
		      'div',
		      null,
		      _react2["default"].createElement('input', { placeholder: placeholder, className: prefixCls + ' ant-input', value: value, ref: 'input',
		        onChange: this.handleChange
		      }),
		      value && value.length > 0 ? _react2["default"].createElement(
		        'a',
		        { href: '#', className: prefixCls + '-action', onClick: this.handleClear },
		        _react2["default"].createElement(_icon2["default"], { type: 'cross-circle' })
		      ) : _react2["default"].createElement(
		        'span',
		        { className: prefixCls + '-action' },
		        _react2["default"].createElement(_icon2["default"], { type: 'search' })
		      )
		    );
		  };
		
		  return Search;
		}(_react2["default"].Component), _class.defaultProps = {
		  placeholder: '',
		  onChange: noop,
		  handleClear: noop
		}, _class.propTypes = {
		  prefixCls: _react.PropTypes.string,
		  placeholder: _react.PropTypes.string,
		  onChange: _react.PropTypes.func,
		  handleClear: _react.PropTypes.func
		}, _temp2);
		exports["default"] = Search;
		module.exports = exports['default'];
	
	/***/ },
	/* 83 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Module dependencies.
		 */
		
		try {
		  var index = __webpack_require__(84);
		} catch (err) {
		  var index = __webpack_require__(84);
		}
		
		/**
		 * Whitespace regexp.
		 */
		
		var re = /\s+/;
		
		/**
		 * toString reference.
		 */
		
		var toString = Object.prototype.toString;
		
		/**
		 * Wrap `el` in a `ClassList`.
		 *
		 * @param {Element} el
		 * @return {ClassList}
		 * @api public
		 */
		
		module.exports = function(el){
		  return new ClassList(el);
		};
		
		/**
		 * Initialize a new ClassList for `el`.
		 *
		 * @param {Element} el
		 * @api private
		 */
		
		function ClassList(el) {
		  if (!el || !el.nodeType) {
		    throw new Error('A DOM element reference is required');
		  }
		  this.el = el;
		  this.list = el.classList;
		}
		
		/**
		 * Add class `name` if not already present.
		 *
		 * @param {String} name
		 * @return {ClassList}
		 * @api public
		 */
		
		ClassList.prototype.add = function(name){
		  // classList
		  if (this.list) {
		    this.list.add(name);
		    return this;
		  }
		
		  // fallback
		  var arr = this.array();
		  var i = index(arr, name);
		  if (!~i) arr.push(name);
		  this.el.className = arr.join(' ');
		  return this;
		};
		
		/**
		 * Remove class `name` when present, or
		 * pass a regular expression to remove
		 * any which match.
		 *
		 * @param {String|RegExp} name
		 * @return {ClassList}
		 * @api public
		 */
		
		ClassList.prototype.remove = function(name){
		  if ('[object RegExp]' == toString.call(name)) {
		    return this.removeMatching(name);
		  }
		
		  // classList
		  if (this.list) {
		    this.list.remove(name);
		    return this;
		  }
		
		  // fallback
		  var arr = this.array();
		  var i = index(arr, name);
		  if (~i) arr.splice(i, 1);
		  this.el.className = arr.join(' ');
		  return this;
		};
		
		/**
		 * Remove all classes matching `re`.
		 *
		 * @param {RegExp} re
		 * @return {ClassList}
		 * @api private
		 */
		
		ClassList.prototype.removeMatching = function(re){
		  var arr = this.array();
		  for (var i = 0; i < arr.length; i++) {
		    if (re.test(arr[i])) {
		      this.remove(arr[i]);
		    }
		  }
		  return this;
		};
		
		/**
		 * Toggle class `name`, can force state via `force`.
		 *
		 * For browsers that support classList, but do not support `force` yet,
		 * the mistake will be detected and corrected.
		 *
		 * @param {String} name
		 * @param {Boolean} force
		 * @return {ClassList}
		 * @api public
		 */
		
		ClassList.prototype.toggle = function(name, force){
		  // classList
		  if (this.list) {
		    if ("undefined" !== typeof force) {
		      if (force !== this.list.toggle(name, force)) {
		        this.list.toggle(name); // toggle again to correct
		      }
		    } else {
		      this.list.toggle(name);
		    }
		    return this;
		  }
		
		  // fallback
		  if ("undefined" !== typeof force) {
		    if (!force) {
		      this.remove(name);
		    } else {
		      this.add(name);
		    }
		  } else {
		    if (this.has(name)) {
		      this.remove(name);
		    } else {
		      this.add(name);
		    }
		  }
		
		  return this;
		};
		
		/**
		 * Return an array of classes.
		 *
		 * @return {Array}
		 * @api public
		 */
		
		ClassList.prototype.array = function(){
		  var className = this.el.getAttribute('class') || '';
		  var str = className.replace(/^\s+|\s+$/g, '');
		  var arr = str.split(re);
		  if ('' === arr[0]) arr.shift();
		  return arr;
		};
		
		/**
		 * Check if class `name` is present.
		 *
		 * @param {String} name
		 * @return {ClassList}
		 * @api public
		 */
		
		ClassList.prototype.has =
		ClassList.prototype.contains = function(name){
		  return this.list
		    ? this.list.contains(name)
		    : !! ~index(this.array(), name);
		};
	
	
	/***/ },
	/* 84 */
	/***/ function(module, exports) {
	
		module.exports = function(arr, obj){
		  if (arr.indexOf) return arr.indexOf(obj);
		  for (var i = 0; i < arr.length; ++i) {
		    if (arr[i] === obj) return i;
		  }
		  return -1;
		};
	
	/***/ },
	/* 85 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		var _utils = __webpack_require__(22);
		
		var _utils2 = _interopRequireDefault(_utils);
		
		/**
		 * 得到会导致元素显示不全的祖先元素
		 */
		
		function getOffsetParent(element) {
		  // ie 这个也不是完全可行
		  /*
		   <div style="width: 50px;height: 100px;overflow: hidden">
		   <div style="width: 50px;height: 100px;position: relative;" id="d6">
		   元素 6 高 100px 宽 50px<br/>
		   </div>
		   </div>
		   */
		  // element.offsetParent does the right thing in ie7 and below. Return parent with layout!
		  //  In other browsers it only includes elements with position absolute, relative or
		  // fixed, not elements with overflow set to auto or scroll.
		  //        if (UA.ie && ieMode < 8) {
		  //            return element.offsetParent;
		  //        }
		  // 统一的 offsetParent 方法
		  var doc = element.ownerDocument;
		  var body = doc.body;
		  var parent = undefined;
		  var positionStyle = _utils2['default'].css(element, 'position');
		  var skipStatic = positionStyle === 'fixed' || positionStyle === 'absolute';
		
		  if (!skipStatic) {
		    return element.nodeName.toLowerCase() === 'html' ? null : element.parentNode;
		  }
		
		  for (parent = element.parentNode; parent && parent !== body; parent = parent.parentNode) {
		    positionStyle = _utils2['default'].css(parent, 'position');
		    if (positionStyle !== 'static') {
		      return parent;
		    }
		  }
		  return null;
		}
		
		exports['default'] = getOffsetParent;
		module.exports = exports['default'];
	
	/***/ },
	/* 86 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 */
		
		'use strict';
		
		var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
		
		/**
		 * Simple, lightweight module assisting with the detection and context of
		 * Worker. Helps avoid circular dependencies and allows code to reason about
		 * whether or not they are in a Worker, even if they never include the main
		 * `ReactWorker` dependency.
		 */
		var ExecutionEnvironment = {
		
		  canUseDOM: canUseDOM,
		
		  canUseWorkers: typeof Worker !== 'undefined',
		
		  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),
		
		  canUseViewport: canUseDOM && !!window.screen,
		
		  isInWorker: !canUseDOM // For now, this is true - might change in the future.
		
		};
		
		module.exports = ExecutionEnvironment;
	
	/***/ },
	/* 87 */
	/***/ function(module, exports) {
	
		'use strict';
		
		module.exports = {
		  eras: ['公元前', '公元'],
		  months: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],
		  shortMonths: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],
		  weekdays: ['星期天', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'],
		  shortWeekdays: ['周日', '周一', '周二', '周三', '周四', '周五', '周六'],
		  veryShortWeekdays: ['日', '一', '二', '三', '四', '五', '六'],
		  ampms: ['上午', '下午'],
		  datePatterns: ['yyyy\'年\'M\'月\'d\'日\' EEEE', 'yyyy\'年\'M\'月\'d\'日\'', 'yyyy-M-d', 'yy-M-d'],
		  timePatterns: ['ahh\'时\'mm\'分\'ss\'秒\' \'GMT\'Z', 'ahh\'时\'mm\'分\'ss\'秒\'', 'H:mm:ss', 'ah:mm'],
		  dateTimePattern: '{date} {time}'
		};
	
	/***/ },
	/* 88 */
	/***/ function(module, exports) {
	
		/*
		 * @ignore
		 * const for gregorian date
		 * @author yiminghe@gmail.com
		 */
		
		"use strict";
		
		module.exports = {
		  /*
		   * Enum indicating sunday
		   * @type Number
		   * @member Date.Gregorian
		   */
		  SUNDAY: 0,
		  /*
		   * Enum indicating monday
		   * @type Number
		   * @member Date.Gregorian
		   */
		  MONDAY: 1,
		  /*
		   * Enum indicating tuesday
		   * @type Number
		   * @member Date.Gregorian
		   */
		  TUESDAY: 2,
		  /*
		   * Enum indicating wednesday
		   * @type Number
		   * @member Date.Gregorian
		   */
		  WEDNESDAY: 3,
		  /*
		   * Enum indicating thursday
		   * @type Number
		   * @member Date.Gregorian
		   */
		  THURSDAY: 4,
		  /*
		   * Enum indicating friday
		   * @type Number
		   * @member Date.Gregorian
		   */
		  FRIDAY: 5,
		  /*
		   * Enum indicating saturday
		   * @type Number
		   * @member Date.Gregorian
		   */
		  SATURDAY: 6,
		  /*
		   * Enum indicating january
		   * @type Number
		   * @member Date.Gregorian
		   */
		  JANUARY: 0,
		  /*
		   * Enum indicating february
		   * @type Number
		   * @member Date.Gregorian
		   */
		  FEBRUARY: 1,
		  /*
		   * Enum indicating march
		   * @type Number
		   * @member Date.Gregorian
		   */
		  MARCH: 2,
		  /*
		   * Enum indicating april
		   * @type Number
		   * @member Date.Gregorian
		   */
		  APRIL: 3,
		  /*
		   * Enum indicating may
		   * @type Number
		   * @member Date.Gregorian
		   */
		  MAY: 4,
		  /*
		   * Enum indicating june
		   * @type Number
		   * @member Date.Gregorian
		   */
		  JUNE: 5,
		  /*
		   * Enum indicating july
		   * @type Number
		   * @member Date.Gregorian
		   */
		  JULY: 6,
		  /*
		   * Enum indicating august
		   * @type Number
		   * @member Date.Gregorian
		   */
		  AUGUST: 7,
		  /*
		   * Enum indicating september
		   * @type Number
		   * @member Date.Gregorian
		   */
		  SEPTEMBER: 8,
		  /*
		   * Enum indicating october
		   * @type Number
		   * @member Date.Gregorian
		   */
		  OCTOBER: 9,
		  /*
		   * Enum indicating november
		   * @type Number
		   * @member Date.Gregorian
		   */
		  NOVEMBER: 10,
		  /*
		   * Enum indicating december
		   * @type Number
		   * @member Date.Gregorian
		   */
		  DECEMBER: 11
		};
	
	/***/ },
	/* 89 */
	/***/ function(module, exports) {
	
		/*
		 * en-us locale
		 * @ignore
		 * @author yiminghe@gmail.com
		 */
		"use strict";
		
		module.exports = {
		  // in minutes
		  timezoneOffset: -8 * 60,
		  firstDayOfWeek: 0,
		  minimalDaysInFirstWeek: 1
		};
	
	/***/ },
	/* 90 */
	/***/ function(module, exports) {
	
		/*
		 * zh-cn locale
		 * @ignore
		 * @author yiminghe@gmail.com
		 */
		"use strict";
		
		module.exports = {
		  // in minutes
		  timezoneOffset: 8 * 60,
		  firstDayOfWeek: 1,
		  minimalDaysInFirstWeek: 1
		};
	
	/***/ },
	/* 91 */
	/***/ function(module, exports, __webpack_require__) {
	
		var camel2hyphen = __webpack_require__(418);
		
		var isDimension = function (feature) {
		  var re = /[height|width]$/;
		  return re.test(feature);
		};
		
		var obj2mq = function (obj) {
		  var mq = '';
		  var features = Object.keys(obj);
		  features.forEach(function (feature, index) {
		    var value = obj[feature];
		    feature = camel2hyphen(feature);
		    // Add px to dimension features
		    if (isDimension(feature) && typeof value === 'number') {
		      value = value + 'px';
		    }
		    if (value === true) {
		      mq += feature;
		    } else if (value === false) {
		      mq += 'not ' + feature;
		    } else {
		      mq += '(' + feature + ': ' + value + ')';
		    }
		    if (index < features.length-1) {
		      mq += ' and '
		    }
		  });
		  return mq;
		};
		
		var json2mq = function (query) {
		  var mq = '';
		  if (typeof query === 'string') {
		    return query;
		  }
		  // Handling array of media queries
		  if (query instanceof Array) {
		    query.forEach(function (q, index) {
		      mq += obj2mq(q);
		      if (index < query.length-1) {
		        mq += ', '
		      }
		    });
		    return mq;
		  }
		  // Handling single media query
		  return obj2mq(query);
		};
		
		module.exports = json2mq;
	
	/***/ },
	/* 92 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		var util = {
		  isAppearSupported: function isAppearSupported(props) {
		    return props.transitionName && props.transitionAppear || props.animation.appear;
		  },
		  isEnterSupported: function isEnterSupported(props) {
		    return props.transitionName && props.transitionEnter || props.animation.enter;
		  },
		  isLeaveSupported: function isLeaveSupported(props) {
		    return props.transitionName && props.transitionLeave || props.animation.leave;
		  },
		  allowAppearCallback: function allowAppearCallback(props) {
		    return props.transitionAppear || props.animation.appear;
		  },
		  allowEnterCallback: function allowEnterCallback(props) {
		    return props.transitionEnter || props.animation.enter;
		  },
		  allowLeaveCallback: function allowLeaveCallback(props) {
		    return props.transitionLeave || props.animation.leave;
		  }
		};
		exports["default"] = util;
		module.exports = exports['default'];
	
	/***/ },
	/* 93 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _MonthPanel = __webpack_require__(102);
		
		var _MonthPanel2 = _interopRequireDefault(_MonthPanel);
		
		var _CalendarMixin = __webpack_require__(46);
		
		var _CalendarMixin2 = _interopRequireDefault(_CalendarMixin);
		
		var _CommonMixin = __webpack_require__(30);
		
		var _CommonMixin2 = _interopRequireDefault(_CommonMixin);
		
		var _KeyCode = __webpack_require__(11);
		
		var _KeyCode2 = _interopRequireDefault(_KeyCode);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		var MonthCalendar = _react2["default"].createClass({
		  displayName: 'MonthCalendar',
		
		  mixins: [_CommonMixin2["default"], _CalendarMixin2["default"]],
		
		  onKeyDown: function onKeyDown(event) {
		    var keyCode = event.keyCode;
		    var ctrlKey = event.ctrlKey || event.metaKey;
		    var stateValue = this.state.value;
		    var value = stateValue;
		    switch (keyCode) {
		      case _KeyCode2["default"].DOWN:
		        value = stateValue.clone();
		        value.addMonth(3);
		        break;
		      case _KeyCode2["default"].UP:
		        value = stateValue.clone();
		        value.addMonth(-3);
		        break;
		      case _KeyCode2["default"].LEFT:
		        value = stateValue.clone();
		        if (ctrlKey) {
		          value.addYear(-1);
		        } else {
		          value.addMonth(-1);
		        }
		        break;
		      case _KeyCode2["default"].RIGHT:
		        value = stateValue.clone();
		        if (ctrlKey) {
		          value.addYear(1);
		        } else {
		          value.addMonth(1);
		        }
		        break;
		      case _KeyCode2["default"].ENTER:
		        this.onSelect(stateValue);
		        event.preventDefault();
		        return 1;
		      default:
		        return undefined;
		    }
		    if (value !== stateValue) {
		      this.setValue(value);
		      event.preventDefault();
		      return 1;
		    }
		  },
		  render: function render() {
		    var props = this.props;
		    var children = _react2["default"].createElement(_MonthPanel2["default"], {
		      locale: props.locale,
		      disabledDate: props.disabledDate,
		      style: { position: 'relative' },
		      value: this.state.value,
		      rootPrefixCls: props.prefixCls,
		      onChange: this.setValue,
		      onSelect: this.onSelect
		    });
		    return this.renderRoot({
		      children: children
		    });
		  }
		});
		
		exports["default"] = MonthCalendar;
		module.exports = exports['default'];
	
	/***/ },
	/* 94 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _reactDom = __webpack_require__(4);
		
		var _reactDom2 = _interopRequireDefault(_reactDom);
		
		var _createChainedFunction = __webpack_require__(32);
		
		var _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);
		
		var _KeyCode = __webpack_require__(11);
		
		var _KeyCode2 = _interopRequireDefault(_KeyCode);
		
		var _placements = __webpack_require__(299);
		
		var _placements2 = _interopRequireDefault(_placements);
		
		var _rcTrigger = __webpack_require__(17);
		
		var _rcTrigger2 = _interopRequireDefault(_rcTrigger);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function noop() {}
		
		function refFn(field, component) {
		  this[field] = component;
		}
		
		var Picker = _react2["default"].createClass({
		  displayName: 'Picker',
		
		  propTypes: {
		    animation: _react.PropTypes.oneOfType([_react.PropTypes.func, _react.PropTypes.string]),
		    disabled: _react.PropTypes.bool,
		    transitionName: _react.PropTypes.string,
		    onChange: _react.PropTypes.func,
		    onOpen: _react.PropTypes.func,
		    onClose: _react.PropTypes.func,
		    children: _react.PropTypes.func,
		    getCalendarContainer: _react.PropTypes.func,
		    calendar: _react.PropTypes.element,
		    style: _react.PropTypes.object,
		    open: _react.PropTypes.bool,
		    defaultOpen: _react.PropTypes.bool,
		    prefixCls: _react.PropTypes.string,
		    placement: _react.PropTypes.any,
		    value: _react.PropTypes.oneOfType([_react.PropTypes.object, _react.PropTypes.array]),
		    defaultValue: _react.PropTypes.oneOfType([_react.PropTypes.object, _react.PropTypes.array]),
		    align: _react.PropTypes.object
		  },
		
		  getDefaultProps: function getDefaultProps() {
		    return {
		      prefixCls: 'rc-calendar-picker',
		      style: {},
		      align: {},
		      placement: 'bottomLeft',
		      defaultOpen: false,
		      onChange: noop,
		      onOpen: noop,
		      onClose: noop
		    };
		  },
		  getInitialState: function getInitialState() {
		    var props = this.props;
		    var open = void 0;
		    if ('open' in props) {
		      open = props.open;
		    } else {
		      open = props.defaultOpen;
		    }
		    var value = props.value || props.defaultValue;
		    this.saveCalendarRef = refFn.bind(this, 'calendarInstance');
		    return {
		      open: open,
		      value: value
		    };
		  },
		  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
		    var value = nextProps.value;
		    var open = nextProps.open;
		
		    if ('value' in nextProps) {
		      this.setState({
		        value: value
		      });
		    }
		    if (open !== undefined) {
		      this.setState({
		        open: open
		      });
		    }
		  },
		  onCalendarKeyDown: function onCalendarKeyDown(event) {
		    if (event.keyCode === _KeyCode2["default"].ESC) {
		      event.stopPropagation();
		      this.close(this.focus);
		    }
		  },
		  onCalendarSelect: function onCalendarSelect(value) {
		    var cause = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
		
		    var props = this.props;
		    if (!('value' in props)) {
		      this.setState({
		        value: value
		      });
		    }
		    if (cause.source === 'keyboard' || !props.calendar.props.timePicker && cause.source !== 'dateInput' || cause.source === 'todayButton') {
		      this.close(this.focus);
		    }
		    props.onChange(value);
		  },
		  onKeyDown: function onKeyDown(event) {
		    if (event.keyCode === _KeyCode2["default"].DOWN && !this.state.open) {
		      this.open(this.focusCalendar);
		      event.preventDefault();
		    }
		  },
		  onCalendarOk: function onCalendarOk() {
		    this.close(this.focus);
		  },
		  onCalendarClear: function onCalendarClear() {
		    this.close(this.focus);
		  },
		  onVisibleChange: function onVisibleChange(open) {
		    this.setOpen(open, this.focusCalendar);
		  },
		  getCalendarElement: function getCalendarElement() {
		    var props = this.props;
		    var state = this.state;
		    var calendarProp = props.calendar;
		    var value = state.value;
		
		    var defaultValue = void 0;
		    // RangeCalendar
		    if (Array.isArray(value)) {
		      defaultValue = value[0];
		    } else {
		      defaultValue = value;
		    }
		    var extraProps = {
		      ref: this.saveCalendarRef,
		      defaultValue: defaultValue || calendarProp.props.defaultValue,
		      defaultSelectedValue: value,
		      onKeyDown: this.onCalendarKeyDown,
		      onOk: (0, _createChainedFunction2["default"])(calendarProp.props.onOk, this.onCalendarOk),
		      onSelect: (0, _createChainedFunction2["default"])(calendarProp.props.onSelect, this.onCalendarSelect),
		      onClear: (0, _createChainedFunction2["default"])(calendarProp.props.onClear, this.onCalendarClear)
		    };
		
		    return _react2["default"].cloneElement(calendarProp, extraProps);
		  },
		  setOpen: function setOpen(open, callback) {
		    var _props = this.props;
		    var onOpen = _props.onOpen;
		    var onClose = _props.onClose;
		
		    if (this.state.open !== open) {
		      this.setState({
		        open: open
		      }, callback);
		      var event = {
		        open: open
		      };
		      if (open) {
		        onOpen(event);
		      } else {
		        onClose(event);
		      }
		    }
		  },
		  open: function open(callback) {
		    this.setOpen(true, callback);
		  },
		  close: function close(callback) {
		    this.setOpen(false, callback);
		  },
		  focus: function focus() {
		    if (!this.state.open) {
		      _reactDom2["default"].findDOMNode(this).focus();
		    }
		  },
		  focusCalendar: function focusCalendar() {
		    if (this.state.open) {
		      this.calendarInstance.focus();
		    }
		  },
		  render: function render() {
		    var props = this.props;
		    var prefixCls = props.prefixCls;
		    var placement = props.placement;
		    var style = props.style;
		    var getCalendarContainer = props.getCalendarContainer;
		    var align = props.align;
		    var animation = props.animation;
		    var disabled = props.disabled;
		    var transitionName = props.transitionName;
		    var children = props.children;
		
		    var state = this.state;
		    return _react2["default"].createElement(
		      _rcTrigger2["default"],
		      {
		        popup: this.getCalendarElement(),
		        popupAlign: align,
		        builtinPlacements: _placements2["default"],
		        popupPlacement: placement,
		        action: disabled && !state.open ? [] : ['click'],
		        destroyPopupOnHide: true,
		        getPopupContainer: getCalendarContainer,
		        popupStyle: style,
		        popupAnimation: animation,
		        popupTransitionName: transitionName,
		        popupVisible: state.open,
		        onPopupVisibleChange: this.onVisibleChange,
		        prefixCls: prefixCls
		      },
		      _react2["default"].cloneElement(children(state, props), { onKeyDown: this.onKeyDown })
		    );
		  }
		});
		
		exports["default"] = Picker;
		module.exports = exports['default'];
	
	/***/ },
	/* 95 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _MonthPanel = __webpack_require__(102);
		
		var _MonthPanel2 = _interopRequireDefault(_MonthPanel);
		
		var _index = __webpack_require__(12);
		
		var _YearPanel = __webpack_require__(104);
		
		var _YearPanel2 = _interopRequireDefault(_YearPanel);
		
		var _mapSelf = __webpack_require__(48);
		
		var _mapSelf2 = _interopRequireDefault(_mapSelf);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function goMonth(direction) {
		  var next = this.props.value.clone();
		  next.addMonth(direction);
		  this.props.onValueChange(next);
		}
		
		function goYear(direction) {
		  var next = this.props.value.clone();
		  next.addYear(direction);
		  this.props.onValueChange(next);
		}
		
		var CalendarHeader = _react2["default"].createClass({
		  displayName: 'CalendarHeader',
		
		  propTypes: {
		    enablePrev: _react.PropTypes.any,
		    enableNext: _react.PropTypes.any,
		    prefixCls: _react.PropTypes.string,
		    locale: _react.PropTypes.object,
		    value: _react.PropTypes.object,
		    onValueChange: _react.PropTypes.func
		  },
		
		  getDefaultProps: function getDefaultProps() {
		    return {
		      enableNext: 1,
		      enablePrev: 1
		    };
		  },
		  getInitialState: function getInitialState() {
		    var props = this.props;
		    this.yearFormatter = (0, _index.getFormatter)(props.locale.yearFormat, props.locale);
		    this.monthFormatter = (0, _index.getFormatter)(props.locale.monthFormat, props.locale);
		    this.nextMonth = goMonth.bind(this, 1);
		    this.previousMonth = goMonth.bind(this, -1);
		    this.nextYear = goYear.bind(this, 1);
		    this.previousYear = goYear.bind(this, -1);
		    return {};
		  },
		  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
		    var locale = this.props.locale;
		    var nextLocale = nextProps.locale;
		
		    if (nextLocale !== locale) {
		      this.yearFormatter = (0, _index.getFormatter)(nextLocale.yearFormat, nextLocale);
		      this.monthFormatter = (0, _index.getFormatter)(nextLocale.monthFormat, nextLocale);
		    }
		  },
		  onSelect: function onSelect(value) {
		    this.setState({
		      showMonthPanel: 0,
		      showYearPanel: 0
		    });
		    this.props.onValueChange(value);
		  },
		  getMonthYearElement: function getMonthYearElement() {
		    var props = this.props;
		    var prefixCls = props.prefixCls;
		    var locale = props.locale;
		    var value = this.props.value;
		    var monthBeforeYear = locale.monthBeforeYear;
		    var selectClassName = prefixCls + '-' + (monthBeforeYear ? 'my-select' : 'ym-select');
		    var year = _react2["default"].createElement(
		      'a',
		      {
		        className: prefixCls + '-year-select',
		        role: 'button',
		        onClick: this.showYearPanel,
		        title: locale.monthSelect
		      },
		      this.yearFormatter.format(value)
		    );
		    var month = _react2["default"].createElement(
		      'a',
		      {
		        className: prefixCls + '-month-select',
		        role: 'button',
		        onClick: this.showMonthPanel,
		        title: locale.monthSelect
		      },
		      this.monthFormatter.format(value)
		    );
		    var my = [];
		    if (monthBeforeYear) {
		      my = [month, year];
		    } else {
		      my = [year, month];
		    }
		    return _react2["default"].createElement(
		      'span',
		      { className: selectClassName },
		      (0, _mapSelf2["default"])(my)
		    );
		  },
		  showIf: function showIf(condition, el) {
		    return condition ? el : null;
		  },
		  showMonthPanel: function showMonthPanel() {
		    this.setState({
		      showMonthPanel: 1,
		      showYearPanel: 0
		    });
		  },
		  showYearPanel: function showYearPanel() {
		    this.setState({
		      showMonthPanel: 0,
		      showYearPanel: 1
		    });
		  },
		  render: function render() {
		    var props = this.props;
		    var enableNext = props.enableNext;
		    var enablePrev = props.enablePrev;
		    var prefixCls = props.prefixCls;
		    var locale = props.locale;
		    var value = props.value;
		
		    var state = this.state;
		    var PanelClass = null;
		    if (state.showMonthPanel) {
		      PanelClass = _MonthPanel2["default"];
		    } else if (state.showYearPanel) {
		      PanelClass = _YearPanel2["default"];
		    }
		    var panel = void 0;
		    if (PanelClass) {
		      panel = _react2["default"].createElement(PanelClass, {
		        locale: locale,
		        defaultValue: value,
		        rootPrefixCls: prefixCls,
		        onSelect: this.onSelect
		      });
		    }
		    return _react2["default"].createElement(
		      'div',
		      { className: prefixCls + '-header' },
		      _react2["default"].createElement(
		        'div',
		        { style: { position: 'relative' } },
		        this.showIf(enablePrev, _react2["default"].createElement(
		          'a',
		          {
		            className: prefixCls + '-prev-year-btn',
		            role: 'button',
		            onClick: this.previousYear,
		            title: locale.previousYear
		          },
		          '«'
		        )),
		        this.showIf(enablePrev, _react2["default"].createElement(
		          'a',
		          {
		            className: prefixCls + '-prev-month-btn',
		            role: 'button',
		            onClick: this.previousMonth,
		            title: locale.previousMonth
		          },
		          '‹'
		        )),
		        this.getMonthYearElement(),
		        this.showIf(enableNext, _react2["default"].createElement(
		          'a',
		          {
		            className: prefixCls + '-next-month-btn',
		            onClick: this.nextMonth,
		            title: locale.nextMonth
		          },
		          '›'
		        )),
		        this.showIf(enableNext, _react2["default"].createElement(
		          'a',
		          {
		            className: prefixCls + '-next-year-btn',
		            onClick: this.nextYear,
		            title: locale.nextYear
		          },
		          '»'
		        ))
		      ),
		      panel
		    );
		  }
		});
		
		exports["default"] = CalendarHeader;
		module.exports = exports['default'];
	
	/***/ },
	/* 96 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = OkButton;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function OkButton(_ref) {
		  var prefixCls = _ref.prefixCls;
		  var locale = _ref.locale;
		  var okDisabled = _ref.okDisabled;
		  var onOk = _ref.onOk;
		
		  var className = prefixCls + "-ok-btn";
		  if (okDisabled) {
		    className += " " + prefixCls + "-ok-btn-disabled";
		  }
		  return _react2["default"].createElement(
		    "a",
		    {
		      className: className,
		      role: "button",
		      onClick: okDisabled ? null : onOk
		    },
		    locale.ok
		  );
		}
		module.exports = exports['default'];
	
	/***/ },
	/* 97 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = TodayButton;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _util = __webpack_require__(12);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function TodayButton(_ref) {
		  var prefixCls = _ref.prefixCls;
		  var locale = _ref.locale;
		  var value = _ref.value;
		  var timePicker = _ref.timePicker;
		  var disabledDate = _ref.disabledDate;
		  var disabledTime = _ref.disabledTime;
		  var onToday = _ref.onToday;
		  var text = _ref.text;
		
		  var disabledToday = false;
		  var localeNow = text;
		  if (!localeNow && timePicker) {
		    localeNow = locale.now;
		  }
		  localeNow = localeNow || locale.today;
		  var disabledTodayClass = '';
		  if (disabledDate) {
		    disabledToday = !(0, _util.isAllowedDate)((0, _util.getTodayTime)(value), disabledDate, disabledTime);
		    if (disabledToday) {
		      disabledTodayClass = prefixCls + '-today-btn-disabled';
		    }
		  }
		  return _react2["default"].createElement(
		    'a',
		    {
		      className: prefixCls + '-today-btn ' + disabledTodayClass,
		      role: 'button',
		      onClick: disabledToday ? null : onToday,
		      title: (0, _util.getTodayTimeStr)(value)
		    },
		    localeNow
		  );
		}
		module.exports = exports['default'];
	
	/***/ },
	/* 98 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = {
		  DATE_ROW_COUNT: 6,
		  DATE_COL_COUNT: 7
		};
		module.exports = exports['default'];
	
	/***/ },
	/* 99 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _reactDom = __webpack_require__(4);
		
		var _reactDom2 = _interopRequireDefault(_reactDom);
		
		var _index = __webpack_require__(12);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function copyTime(target, source) {
		  if (source) {
		    target.setHourOfDay(source.getHourOfDay());
		    target.setMinutes(source.getMinutes());
		    target.setSeconds(source.getSeconds());
		  }
		  return target;
		}
		
		var DateInput = _react2["default"].createClass({
		  displayName: 'DateInput',
		
		  propTypes: {
		    prefixCls: _react.PropTypes.string,
		    timePicker: _react.PropTypes.object,
		    disabledTime: _react.PropTypes.any,
		    formatter: _react.PropTypes.object,
		    locale: _react.PropTypes.object,
		    gregorianCalendarLocale: _react.PropTypes.object,
		    disabledDate: _react.PropTypes.func,
		    onChange: _react.PropTypes.func,
		    onClear: _react.PropTypes.func,
		    placeholder: _react.PropTypes.string,
		    onSelect: _react.PropTypes.func,
		    selectedValue: _react.PropTypes.object
		  },
		
		  getInitialState: function getInitialState() {
		    var selectedValue = this.props.selectedValue;
		    return {
		      str: selectedValue && this.props.formatter.format(selectedValue) || '',
		      invalid: false
		    };
		  },
		  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
		    // when popup show, click body will call this, bug!
		    var selectedValue = nextProps.selectedValue;
		    this.setState({
		      str: selectedValue && nextProps.formatter.format(selectedValue) || '',
		      invalid: false
		    });
		  },
		  onInputChange: function onInputChange(event) {
		    var str = event.target.value;
		    this.setState({
		      str: str
		    });
		    var value = void 0;
		    var _props = this.props;
		    var disabledDate = _props.disabledDate;
		    var formatter = _props.formatter;
		    var gregorianCalendarLocale = _props.gregorianCalendarLocale;
		    var onChange = _props.onChange;
		
		    if (str) {
		      try {
		        value = copyTime(formatter.parse(str, {
		          locale: gregorianCalendarLocale,
		          obeyCount: true
		        }), this.props.selectedValue);
		      } catch (ex) {
		        this.setState({
		          invalid: true
		        });
		        return;
		      }
		      if (value && (!disabledDate || !disabledDate(value))) {
		        var originalValue = this.props.selectedValue;
		        if (originalValue && value) {
		          if (originalValue.getTime() !== value.getTime()) {
		            onChange(value);
		          }
		        } else if (originalValue !== value) {
		          onChange(value);
		        }
		      } else {
		        this.setState({
		          invalid: true
		        });
		        return;
		      }
		    } else {
		      onChange(null);
		    }
		    this.setState({
		      invalid: false
		    });
		  },
		  onClear: function onClear() {
		    this.setState({
		      str: ''
		    });
		    this.props.onClear(null);
		  },
		  getRootDOMNode: function getRootDOMNode() {
		    return _reactDom2["default"].findDOMNode(this);
		  },
		  focus: function focus() {
		    this.refs.dateInput.focus();
		  },
		  render: function render() {
		    var props = this.props;
		    var _state = this.state;
		    var invalid = _state.invalid;
		    var str = _state.str;
		    var selectedValue = props.selectedValue;
		    var locale = props.locale;
		    var prefixCls = props.prefixCls;
		    var placeholder = props.placeholder;
		    var onChange = props.onChange;
		    var timePicker = props.timePicker;
		    var disabledTime = props.disabledTime;
		    var gregorianCalendarLocale = props.gregorianCalendarLocale;
		
		    var invalidClass = invalid ? prefixCls + '-input-invalid' : '';
		    var disabledTimeConfig = disabledTime && timePicker ? (0, _index.getTimeConfig)(selectedValue, disabledTime) : null;
		    return _react2["default"].createElement(
		      'div',
		      { className: prefixCls + '-input-wrap' },
		      _react2["default"].createElement(
		        'div',
		        { className: prefixCls + '-time-picker-wrap' },
		        timePicker ? _react2["default"].cloneElement(timePicker, _extends({
		          showClear: false,
		          allowEmpty: false,
		          getPopupContainer: this.getRootDOMNode,
		          gregorianCalendarLocale: gregorianCalendarLocale,
		          value: selectedValue,
		          onChange: onChange
		        }, disabledTimeConfig)) : null
		      ),
		      _react2["default"].createElement(
		        'div',
		        { className: prefixCls + '-date-input-wrap' },
		        _react2["default"].createElement('input', {
		          ref: 'dateInput',
		          className: prefixCls + '-input  ' + invalidClass,
		          value: str,
		          placeholder: placeholder,
		          onChange: this.onInputChange
		        })
		      ),
		      props.showClear ? _react2["default"].createElement('a', {
		        className: prefixCls + '-clear-btn',
		        role: 'button',
		        title: locale.clear,
		        onClick: this.onClear
		      }) : null
		    );
		  }
		});
		
		exports["default"] = DateInput;
		module.exports = exports['default'];
	
	/***/ },
	/* 100 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _Calendar = __webpack_require__(290);
		
		var _Calendar2 = _interopRequireDefault(_Calendar);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		exports["default"] = _Calendar2["default"];
		module.exports = exports['default'];
	
	/***/ },
	/* 101 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _zh_CN = __webpack_require__(87);
		
		var _zh_CN2 = _interopRequireDefault(_zh_CN);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		exports["default"] = {
		  today: '今天',
		  now: '此刻',
		  backToToday: '返回今天',
		  ok: '确定',
		  clear: '清除',
		  month: '月',
		  year: '年',
		  previousMonth: '上个月 (翻页上键)',
		  nextMonth: '下个月 (翻页下键)',
		  monthSelect: '选择月份',
		  yearSelect: '选择年份',
		  decadeSelect: '选择年代',
		  yearFormat: 'yyyy\'年\'',
		  monthFormat: 'M\'月\'',
		  dateFormat: 'yyyy\'年\'M\'月\'d\'日\'',
		  previousYear: '上一年 (Control键加左方向键)',
		  nextYear: '下一年 (Control键加右方向键)',
		  previousDecade: '上一年代',
		  nextDecade: '下一年代',
		  previousCentury: '上一世纪',
		  nextCentury: '下一世纪',
		  format: _zh_CN2["default"]
		};
		module.exports = exports['default'];
	
	/***/ },
	/* 102 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _YearPanel = __webpack_require__(104);
		
		var _YearPanel2 = _interopRequireDefault(_YearPanel);
		
		var _MonthTable = __webpack_require__(103);
		
		var _MonthTable2 = _interopRequireDefault(_MonthTable);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function goYear(direction) {
		  var next = this.state.value.clone();
		  next.addYear(direction);
		  this.setAndChangeValue(next);
		}
		
		function noop() {}
		
		var MonthPanel = _react2["default"].createClass({
		  displayName: 'MonthPanel',
		
		  propTypes: {
		    onChange: _react.PropTypes.func,
		    disabledDate: _react.PropTypes.func,
		    onSelect: _react.PropTypes.func
		  },
		
		  getDefaultProps: function getDefaultProps() {
		    return {
		      onChange: noop,
		      onSelect: noop
		    };
		  },
		  getInitialState: function getInitialState() {
		    var props = this.props;
		    // bind methods
		    this.nextYear = goYear.bind(this, 1);
		    this.previousYear = goYear.bind(this, -1);
		    this.prefixCls = props.rootPrefixCls + '-month-panel';
		    return {
		      value: props.value || props.defaultValue
		    };
		  },
		  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
		    if ('value' in nextProps) {
		      this.setState({
		        value: nextProps.value
		      });
		    }
		  },
		  onYearPanelSelect: function onYearPanelSelect(current) {
		    this.setState({
		      showYearPanel: 0
		    });
		    this.setAndChangeValue(current);
		  },
		  setAndChangeValue: function setAndChangeValue(value) {
		    this.setValue(value);
		    this.props.onChange(value);
		  },
		  setAndSelectValue: function setAndSelectValue(value) {
		    this.setValue(value);
		    this.props.onSelect(value);
		  },
		  setValue: function setValue(value) {
		    if (!('value' in this.props)) {
		      this.setState({
		        value: value
		      });
		    }
		  },
		  showYearPanel: function showYearPanel() {
		    this.setState({
		      showYearPanel: 1
		    });
		  },
		  render: function render() {
		    var props = this.props;
		    var value = this.state.value;
		    var locale = props.locale;
		    var year = value.getYear();
		    var prefixCls = this.prefixCls;
		    var yearPanel = void 0;
		    if (this.state.showYearPanel) {
		      yearPanel = _react2["default"].createElement(_YearPanel2["default"], {
		        locale: locale,
		        value: value,
		        rootPrefixCls: props.rootPrefixCls,
		        onSelect: this.onYearPanelSelect
		      });
		    }
		    return _react2["default"].createElement(
		      'div',
		      { className: prefixCls, style: props.style },
		      _react2["default"].createElement(
		        'div',
		        null,
		        _react2["default"].createElement(
		          'div',
		          { className: prefixCls + '-header' },
		          _react2["default"].createElement(
		            'a',
		            {
		              className: prefixCls + '-prev-year-btn',
		              role: 'button',
		              onClick: this.previousYear,
		              title: locale.previousYear
		            },
		            '«'
		          ),
		          _react2["default"].createElement(
		            'a',
		            {
		              className: prefixCls + '-year-select',
		              role: 'button',
		              onClick: this.showYearPanel,
		              title: locale.yearSelect
		            },
		            _react2["default"].createElement(
		              'span',
		              { className: prefixCls + '-year-select-content' },
		              year
		            ),
		            _react2["default"].createElement(
		              'span',
		              { className: prefixCls + '-year-select-arrow' },
		              'x'
		            )
		          ),
		          _react2["default"].createElement(
		            'a',
		            {
		              className: prefixCls + '-next-year-btn',
		              role: 'button',
		              onClick: this.nextYear,
		              title: locale.nextYear
		            },
		            '»'
		          )
		        ),
		        _react2["default"].createElement(
		          'div',
		          { className: prefixCls + '-body' },
		          _react2["default"].createElement(_MonthTable2["default"], {
		            disabledDate: props.disabledDate,
		            onSelect: this.setAndSelectValue,
		            locale: locale,
		            value: value,
		            prefixCls: prefixCls
		          })
		        )
		      ),
		      yearPanel
		    );
		  }
		});
		
		exports["default"] = MonthPanel;
		module.exports = exports['default'];
	
	/***/ },
	/* 103 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var ROW = 4;
		var COL = 3;
		
		function chooseMonth(month) {
		  var next = this.state.value.clone();
		  next.rollSetMonth(month);
		  this.setAndSelectValue(next);
		}
		
		function noop() {}
		
		var MonthTable = function (_Component) {
		  _inherits(MonthTable, _Component);
		
		  function MonthTable(props) {
		    _classCallCheck(this, MonthTable);
		
		    var _this = _possibleConstructorReturn(this, _Component.call(this, props));
		
		    _this.state = {
		      value: props.value
		    };
		    return _this;
		  }
		
		  MonthTable.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
		    if ('value' in nextProps) {
		      this.setState({
		        value: nextProps.value
		      });
		    }
		  };
		
		  MonthTable.prototype.getMonths = function getMonths() {
		    var props = this.props;
		    var value = this.state.value;
		    var current = value.clone();
		    var locale = props.locale;
		    var months = [];
		    var shortMonths = locale.format.shortMonths;
		    var index = 0;
		    for (var rowIndex = 0; rowIndex < ROW; rowIndex++) {
		      months[rowIndex] = [];
		      for (var colIndex = 0; colIndex < COL; colIndex++) {
		        current.rollSetMonth(index);
		        months[rowIndex][colIndex] = {
		          value: index,
		          content: shortMonths[index],
		          title: shortMonths[index]
		        };
		        index++;
		      }
		    }
		    return months;
		  };
		
		  MonthTable.prototype.setAndSelectValue = function setAndSelectValue(value) {
		    this.setState({
		      value: value
		    });
		    this.props.onSelect(value);
		  };
		
		  MonthTable.prototype.render = function render() {
		    var _this2 = this;
		
		    var props = this.props;
		    var value = this.state.value;
		    var today = value.clone();
		    today.setTime(Date.now());
		    var months = this.getMonths();
		    var currentMonth = value.getMonth();
		    var prefixCls = props.prefixCls;
		    var locale = props.locale;
		    var contentRender = props.contentRender;
		    var cellRender = props.cellRender;
		
		    var monthsEls = months.map(function (month, index) {
		      var tds = month.map(function (monthData) {
		        var _classNameMap;
		
		        var disabled = false;
		        if (props.disabledDate) {
		          var testValue = value.clone();
		          testValue.rollSetMonth(monthData.value);
		          disabled = props.disabledDate(testValue);
		        }
		        var classNameMap = (_classNameMap = {}, _defineProperty(_classNameMap, prefixCls + '-cell', 1), _defineProperty(_classNameMap, prefixCls + '-cell-disabled', disabled), _defineProperty(_classNameMap, prefixCls + '-selected-cell', monthData.value === currentMonth), _defineProperty(_classNameMap, prefixCls + '-current-cell', today.getYear() === value.getYear() && monthData.value === today.getMonth()), _classNameMap);
		        var cellEl = void 0;
		        if (cellRender) {
		          var currentValue = value.clone();
		          currentValue.rollSetMonth(monthData.value);
		          cellEl = cellRender(currentValue, locale);
		        } else {
		          var content = void 0;
		          if (contentRender) {
		            var _currentValue = value.clone();
		            _currentValue.rollSetMonth(monthData.value);
		            content = contentRender(_currentValue, locale);
		          } else {
		            content = monthData.content;
		          }
		          cellEl = _react2["default"].createElement(
		            'div',
		            { className: prefixCls + '-month' },
		            content
		          );
		        }
		        return _react2["default"].createElement(
		          'td',
		          {
		            role: 'gridcell',
		            key: monthData.value,
		            onClick: disabled ? null : chooseMonth.bind(_this2, monthData.value),
		            title: monthData.title,
		            className: (0, _classnames2["default"])(classNameMap)
		          },
		          cellEl
		        );
		      });
		      return _react2["default"].createElement(
		        'tr',
		        { key: index, role: 'row' },
		        tds
		      );
		    });
		
		    return _react2["default"].createElement(
		      'table',
		      { className: prefixCls + '-table', cellSpacing: '0', role: 'grid' },
		      _react2["default"].createElement(
		        'tbody',
		        { className: prefixCls + '-tbody' },
		        monthsEls
		      )
		    );
		  };
		
		  return MonthTable;
		}(_react.Component);
		
		MonthTable.defaultProps = {
		  onSelect: noop
		};
		MonthTable.propTypes = {
		  onSelect: _react.PropTypes.func,
		  cellRender: _react.PropTypes.func,
		  prefixCls: _react.PropTypes.string,
		  value: _react.PropTypes.object
		};
		exports["default"] = MonthTable;
		module.exports = exports['default'];
	
	/***/ },
	/* 104 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var _DecadePanel = __webpack_require__(296);
		
		var _DecadePanel2 = _interopRequireDefault(_DecadePanel);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var ROW = 4;
		var COL = 3;
		
		function goYear(direction) {
		  var value = this.state.value.clone();
		  value.addYear(direction);
		  this.setState({
		    value: value
		  });
		}
		
		function chooseYear(year) {
		  var value = this.state.value.clone();
		  value.setYear(year);
		  value.rollSetMonth(this.state.value.getMonth());
		  this.props.onSelect(value);
		}
		
		var YearPanel = function (_React$Component) {
		  _inherits(YearPanel, _React$Component);
		
		  function YearPanel(props) {
		    _classCallCheck(this, YearPanel);
		
		    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));
		
		    _this.prefixCls = props.rootPrefixCls + '-year-panel';
		    _this.state = {
		      value: props.value || props.defaultValue
		    };
		    _this.nextDecade = goYear.bind(_this, 10);
		    _this.previousDecade = goYear.bind(_this, -10);
		    ['showDecadePanel', 'onDecadePanelSelect'].forEach(function (method) {
		      _this[method] = _this[method].bind(_this);
		    });
		    return _this;
		  }
		
		  YearPanel.prototype.onDecadePanelSelect = function onDecadePanelSelect(current) {
		    this.setState({
		      value: current,
		      showDecadePanel: 0
		    });
		  };
		
		  YearPanel.prototype.getYears = function getYears() {
		    var value = this.state.value;
		    var currentYear = value.getYear();
		    var startYear = parseInt(currentYear / 10, 10) * 10;
		    var previousYear = startYear - 1;
		    var endYear = startYear + 9;
		    var years = [];
		    var index = 0;
		    for (var rowIndex = 0; rowIndex < ROW; rowIndex++) {
		      years[rowIndex] = [];
		      for (var colIndex = 0; colIndex < COL; colIndex++) {
		        var year = previousYear + index;
		        var content = void 0;
		        if (year < startYear) {
		          content = '';
		        } else if (year > endYear) {
		          content = '';
		        } else {
		          content = String(year);
		        }
		        years[rowIndex][colIndex] = {
		          content: content,
		          year: year,
		          title: content
		        };
		        index++;
		      }
		    }
		    return years;
		  };
		
		  YearPanel.prototype.showDecadePanel = function showDecadePanel() {
		    this.setState({
		      showDecadePanel: 1
		    });
		  };
		
		  YearPanel.prototype.render = function render() {
		    var _this2 = this;
		
		    var props = this.props;
		    var value = this.state.value;
		    var locale = props.locale;
		    var years = this.getYears();
		    var currentYear = value.getYear();
		    var startYear = parseInt(currentYear / 10, 10) * 10;
		    var endYear = startYear + 9;
		    var prefixCls = this.prefixCls;
		
		    var yeasEls = years.map(function (row, index) {
		      var tds = row.map(function (yearData) {
		        var _classNameMap;
		
		        var classNameMap = (_classNameMap = {}, _defineProperty(_classNameMap, prefixCls + '-cell', 1), _defineProperty(_classNameMap, prefixCls + '-selected-cell', yearData.year === currentYear), _defineProperty(_classNameMap, prefixCls + '-last-decade-cell', yearData.year < startYear), _defineProperty(_classNameMap, prefixCls + '-next-decade-cell', yearData.year > endYear), _classNameMap);
		        var clickHandler = void 0;
		        if (yearData.year < startYear) {
		          clickHandler = _this2.previousDecade;
		        } else if (yearData.year > endYear) {
		          clickHandler = _this2.nextDecade;
		        } else {
		          clickHandler = chooseYear.bind(_this2, yearData.year);
		        }
		        return _react2["default"].createElement(
		          'td',
		          {
		            role: 'gridcell',
		            title: yearData.title,
		            key: yearData.content,
		            onClick: clickHandler,
		            className: (0, _classnames2["default"])(classNameMap)
		          },
		          _react2["default"].createElement(
		            'a',
		            {
		              className: prefixCls + '-year'
		            },
		            yearData.content
		          )
		        );
		      });
		      return _react2["default"].createElement(
		        'tr',
		        { key: index, role: 'row' },
		        tds
		      );
		    });
		
		    var decadePanel = void 0;
		    if (this.state.showDecadePanel) {
		      decadePanel = _react2["default"].createElement(_DecadePanel2["default"], {
		        locale: locale,
		        value: value,
		        rootPrefixCls: props.rootPrefixCls,
		        onSelect: this.onDecadePanelSelect
		      });
		    }
		
		    return _react2["default"].createElement(
		      'div',
		      { className: this.prefixCls },
		      _react2["default"].createElement(
		        'div',
		        null,
		        _react2["default"].createElement(
		          'div',
		          { className: prefixCls + '-header' },
		          _react2["default"].createElement(
		            'a',
		            {
		              className: prefixCls + '-prev-decade-btn',
		              role: 'button',
		              onClick: this.previousDecade,
		              title: locale.previousDecade
		            },
		            '«'
		          ),
		          _react2["default"].createElement(
		            'a',
		            {
		              className: prefixCls + '-decade-select',
		              role: 'button',
		              onClick: this.showDecadePanel,
		              title: locale.decadeSelect
		            },
		            _react2["default"].createElement(
		              'span',
		              { className: prefixCls + '-decade-select-content' },
		              startYear,
		              '-',
		              endYear
		            ),
		            _react2["default"].createElement(
		              'span',
		              { className: prefixCls + '-decade-select-arrow' },
		              'x'
		            )
		          ),
		          _react2["default"].createElement(
		            'a',
		            {
		              className: prefixCls + '-next-decade-btn',
		              role: 'button',
		              onClick: this.nextDecade,
		              title: locale.nextDecade
		            },
		            '»'
		          )
		        ),
		        _react2["default"].createElement(
		          'div',
		          { className: prefixCls + '-body' },
		          _react2["default"].createElement(
		            'table',
		            { className: prefixCls + '-table', cellSpacing: '0', role: 'grid' },
		            _react2["default"].createElement(
		              'tbody',
		              { className: prefixCls + '-tbody' },
		              yeasEls
		            )
		          )
		        )
		      ),
		      decadePanel
		    );
		  };
		
		  return YearPanel;
		}(_react2["default"].Component);
		
		exports["default"] = YearPanel;
		
		
		YearPanel.propTypes = {
		  rootPrefixCls: _react.PropTypes.string,
		  value: _react.PropTypes.object,
		  defaultValue: _react.PropTypes.object
		};
		
		YearPanel.defaultProps = {
		  onSelect: function onSelect() {}
		};
		module.exports = exports['default'];
	
	/***/ },
	/* 105 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		module.exports = __webpack_require__(304);
	
	/***/ },
	/* 106 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _utils = __webpack_require__(107);
		
		var _asyncValidator = __webpack_require__(133);
		
		var _asyncValidator2 = _interopRequireDefault(_asyncValidator);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		var defaultValidateTrigger = 'onChange';
		var defaultTrigger = defaultValidateTrigger;
		var atom = {};
		
		function createBaseForm() {
		  var option = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		  var mixins = arguments.length <= 1 || arguments[1] === undefined ? [] : arguments[1];
		  var mapPropsToFields = option.mapPropsToFields;
		  var onFieldsChange = option.onFieldsChange;
		  var fieldNameProp = option.fieldNameProp;
		  var fieldMetaProp = option.fieldMetaProp;
		  var validateMessages = option.validateMessages;
		  var _option$mapProps = option.mapProps;
		  var mapProps = _option$mapProps === undefined ? _utils.mirror : _option$mapProps;
		  var _option$formPropName = option.formPropName;
		  var formPropName = _option$formPropName === undefined ? 'form' : _option$formPropName;
		  var withRef = option.withRef;
		
		
		  function decorate(WrappedComponent) {
		    var Form = _react2["default"].createClass({
		      displayName: 'Form',
		
		      mixins: mixins,
		
		      getInitialState: function getInitialState() {
		        var fields = void 0;
		        if (mapPropsToFields) {
		          fields = mapPropsToFields(this.props);
		        }
		        this.fields = fields || {};
		        this.instances = {};
		        this.fieldsMeta = {};
		        this.cachedBind = {};
		        return {
		          submitting: false
		        };
		      },
		      componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
		        if (mapPropsToFields) {
		          this.fields = mapPropsToFields(nextProps);
		        }
		      },
		      onChange: function onChange(name_, action) {
		        var name = name_;
		        var fieldMeta = this.getFieldMeta(name);
		        var validate = fieldMeta.validate;
		
		        for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
		          args[_key - 2] = arguments[_key];
		        }
		
		        if (fieldMeta[action]) {
		          fieldMeta[action].apply(fieldMeta, args);
		        }
		        var value = fieldMeta.getValueFromEvent ? fieldMeta.getValueFromEvent.apply(fieldMeta, args) : _utils.getValueFromEvent.apply(undefined, args);
		        var fieldContent = void 0;
		        var nameKeyObj = (0, _utils.getNameKeyObj)(name);
		        if (this.getFieldMeta(nameKeyObj.name).exclusive) {
		          name = nameKeyObj.name;
		        }
		        var field = this.getField(name);
		        fieldContent = _extends({}, field, {
		          value: value,
		          dirty: (0, _utils.hasRules)(validate)
		        });
		        this.setFields(_defineProperty({}, name, fieldContent));
		      },
		      onChangeValidate: function onChangeValidate(name_, action) {
		        var name = name_;
		        var fieldMeta = this.getFieldMeta(name);
		
		        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
		          args[_key2 - 2] = arguments[_key2];
		        }
		
		        if (fieldMeta[action]) {
		          fieldMeta[action].apply(fieldMeta, args);
		        }
		        var value = fieldMeta.getValueFromEvent ? fieldMeta.getValueFromEvent.apply(fieldMeta, args) : _utils.getValueFromEvent.apply(undefined, args);
		        var nameKeyObj = (0, _utils.getNameKeyObj)(name);
		        if (this.getFieldMeta(nameKeyObj.name).exclusive) {
		          name = nameKeyObj.name;
		        }
		        var field = this.getField(name);
		        field.value = value;
		        field.dirty = true;
		        this.validateFieldsInternal([field], {
		          action: action,
		          options: {
		            firstFields: !!fieldMeta.validateFirst
		          }
		        });
		      },
		      getCacheBind: function getCacheBind(name, action, fn) {
		        var cache = this.cachedBind[name] = this.cachedBind[name] || {};
		        if (!cache[action]) {
		          cache[action] = fn.bind(this, name, action);
		        }
		        return cache[action];
		      },
		      getFieldMeta: function getFieldMeta(name) {
		        return this.fieldsMeta[name];
		      },
		      getField: function getField(name) {
		        var fields = this.fields;
		
		        return _extends({}, fields[name], {
		          name: name
		        });
		      },
		      getFieldProps: function getFieldProps(name) {
		        var _this = this;
		
		        var fieldOption = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
		
		        if (!name) {
		          throw new Error('must call getFieldProps with valid name string!');
		        }
		
		        var rules = fieldOption.rules;
		        var _fieldOption$trigger = fieldOption.trigger;
		        var trigger = _fieldOption$trigger === undefined ? defaultTrigger : _fieldOption$trigger;
		        var _fieldOption$valuePro = fieldOption.valuePropName;
		        var valuePropName = _fieldOption$valuePro === undefined ? 'value' : _fieldOption$valuePro;
		        var getValueProps = fieldOption.getValueProps;
		        var exclusive = fieldOption.exclusive;
		        var _fieldOption$validate = fieldOption.validateTrigger;
		        var validateTrigger = _fieldOption$validate === undefined ? defaultValidateTrigger : _fieldOption$validate;
		        var _fieldOption$validate2 = fieldOption.validate;
		        var validate = _fieldOption$validate2 === undefined ? [] : _fieldOption$validate2;
		
		        var nameKeyObj = (0, _utils.getNameKeyObj)(name);
		        var leadingName = nameKeyObj.name;
		        var key = nameKeyObj.key;
		        var fieldsMeta = this.fieldsMeta;
		
		        var fieldMeta = void 0;
		        var leadingFieldMeta = fieldsMeta[leadingName];
		
		        if (key) {
		          leadingFieldMeta = fieldsMeta[leadingName] = fieldsMeta[leadingName] || {};
		          leadingFieldMeta.virtual = !exclusive;
		          // exclusive allow getFieldProps('x', {initialValue})
		          // non-exclusive does not allow getFieldProps('x', {initialValue})
		          leadingFieldMeta.hidden = !exclusive;
		          leadingFieldMeta.exclusive = exclusive;
		          fieldMeta = fieldsMeta[name] = fieldsMeta[name] || {};
		        } else {
		          fieldMeta = fieldsMeta[name] = fieldsMeta[name] || {};
		        }
		
		        if ('initialValue' in fieldOption) {
		          fieldMeta.initialValue = fieldOption.initialValue;
		        }
		
		        var inputProps = {};
		
		        if (key) {
		          inputProps.key = key;
		        }
		
		        if (fieldNameProp) {
		          inputProps[fieldNameProp] = name;
		        }
		
		        var validateRules = validate.map(function (item) {
		          var newItem = _extends({}, item, {
		            trigger: item.trigger || []
		          });
		          if (typeof newItem.trigger === 'string') {
		            newItem.trigger = [newItem.trigger];
		          }
		          return newItem;
		        });
		
		        if (rules) {
		          validateRules.push({
		            trigger: validateTrigger ? [].concat(validateTrigger) : [],
		            rules: rules
		          });
		        }
		
		        validateRules.filter(function (item) {
		          return !!item.rules && item.rules.length;
		        }).map(function (item) {
		          return item.trigger;
		        }).reduce(function (pre, curr) {
		          return pre.concat(curr);
		        }, []).forEach(function (action) {
		          inputProps[action] = _this.getCacheBind(name, action, _this.onChangeValidate);
		        });
		
		        function checkRule(item) {
		          return item.trigger.indexOf(trigger) === -1 || !item.rules || !item.rules.length;
		        }
		
		        if (trigger && validateRules.every(checkRule)) {
		          inputProps[trigger] = this.getCacheBind(name, trigger, this.onChange);
		        }
		        var field = exclusive ? this.getField(leadingName) : this.getField(name);
		        var fieldValue = atom;
		        if (field && 'value' in field) {
		          fieldValue = field.value;
		        }
		        if (fieldValue === atom) {
		          fieldValue = exclusive ? fieldsMeta[leadingName].initialValue : fieldMeta.initialValue;
		        }
		        if (getValueProps) {
		          inputProps = _extends({}, inputProps, getValueProps(fieldValue));
		        } else {
		          inputProps[valuePropName] = fieldValue;
		        }
		
		        inputProps.ref = this.getCacheBind(name, name + '__ref', this.saveRef);
		
		        var meta = _extends({}, fieldMeta, fieldOption, {
		          validate: validateRules
		        });
		
		        fieldsMeta[name] = meta;
		
		        if (fieldMetaProp) {
		          inputProps[fieldMetaProp] = meta;
		        }
		
		        return inputProps;
		      },
		      getFieldMember: function getFieldMember(name, member) {
		        var field = this.getField(name);
		        return field && field[member];
		      },
		      getFieldError: function getFieldError(name) {
		        return (0, _utils.getErrorStrs)(this.getFieldMember(name, 'errors'));
		      },
		      getValidFieldsName: function getValidFieldsName() {
		        var fieldsMeta = this.fieldsMeta;
		        return fieldsMeta ? Object.keys(fieldsMeta).filter(function (name) {
		          return !fieldsMeta[name].hidden;
		        }) : [];
		      },
		      getFieldsValue: function getFieldsValue(names) {
		        var _this2 = this;
		
		        var fields = names || (0, _utils.flatFieldNames)(this.getValidFieldsName());
		        var allValues = {};
		        fields.forEach(function (f) {
		          allValues[f] = _this2.getFieldValue(f);
		        });
		        return allValues;
		      },
		      getFieldValue: function getFieldValue(name) {
		        var fields = this.fields;
		
		        return this.getValueFromFields(name, fields);
		      },
		      getFieldInstance: function getFieldInstance(name) {
		        return this.instances[name];
		      },
		      getValueFromFieldsInternal: function getValueFromFieldsInternal(name, fields) {
		        var field = fields[name];
		        if (field && 'value' in field) {
		          return field.value;
		        }
		        var fieldMeta = this.fieldsMeta[name];
		        return fieldMeta && fieldMeta.initialValue;
		      },
		      getValueFromFields: function getValueFromFields(name, fields) {
		        var fieldsMeta = this.fieldsMeta;
		
		        if (fieldsMeta[name] && fieldsMeta[name].virtual) {
		          var ret = {};
		          for (var fieldKey in fieldsMeta) {
		            if (fieldsMeta.hasOwnProperty(fieldKey)) {
		              var nameKeyObj = (0, _utils.getNameKeyObj)(fieldKey);
		              if (nameKeyObj.name === name && nameKeyObj.key) {
		                ret[nameKeyObj.key] = this.getValueFromFieldsInternal(fieldKey, fields);
		              }
		            }
		          }
		          return ret;
		        }
		        return this.getValueFromFieldsInternal(name, fields);
		      },
		      getRules: function getRules(fieldMeta, action) {
		        var actionRules = fieldMeta.validate.filter(function (item) {
		          return !action || item.trigger.indexOf(action) >= 0;
		        }).map(function (item) {
		          return item.rules;
		        });
		        return (0, _utils.flattenArray)(actionRules);
		      },
		      setFields: function setFields(fields_) {
		        var _this3 = this;
		
		        var fieldsMeta = this.fieldsMeta;
		        var fields = fields_;
		        var nowFields = _extends({}, this.fields, fields);
		        var nowValues = {};
		        Object.keys(fieldsMeta).forEach(function (f) {
		          var _getNameKeyObj = (0, _utils.getNameKeyObj)(f);
		
		          var name = _getNameKeyObj.name;
		          var key = _getNameKeyObj.key;
		
		          if (key && fieldsMeta[name].exclusive) {
		            return;
		          }
		          nowValues[f] = _this3.getValueFromFields(f, nowFields);
		        });
		        var changedFieldsName = Object.keys(fields);
		        Object.keys(nowValues).forEach(function (f) {
		          var value = nowValues[f];
		          var fieldMeta = fieldsMeta[f];
		          if (fieldMeta && fieldMeta.normalize) {
		            var nowValue = fieldMeta.normalize(value, _this3.getValueFromFields(f, _this3.fields), nowValues);
		            if (nowValue !== value) {
		              nowFields[f] = _extends({}, nowFields[f], {
		                value: nowValue
		              });
		            }
		          }
		        });
		        this.fields = nowFields;
		        if (onFieldsChange) {
		          (function () {
		            var changedFields = {};
		            changedFieldsName.forEach(function (f) {
		              changedFields[f] = _this3.getField(f);
		            });
		            onFieldsChange(_this3.props, changedFields);
		          })();
		        }
		        this.forceUpdate();
		      },
		      setFieldsValue: function setFieldsValue(fieldsValue) {
		        var newFields = {};
		        var fieldsMeta = this.fieldsMeta;
		        var fields = this.fields;
		
		        for (var name in fieldsValue) {
		          if (fieldsValue.hasOwnProperty(name)) {
		            var value = fieldsValue[name];
		            if (fieldsMeta[name] && fieldsMeta[name].virtual) {
		              (0, _utils.clearVirtualField)(name, fields, fieldsMeta);
		              for (var key in value) {
		                if (value.hasOwnProperty(key)) {
		                  newFields[(0, _utils.getNameKeyStr)(name, key)] = value[key];
		                }
		              }
		            } else {
		              newFields[name] = {
		                name: name,
		                value: value
		              };
		            }
		          }
		        }
		        this.setFields(newFields);
		      },
		      setFieldsInitialValue: function setFieldsInitialValue(initialValues) {
		        var fieldsMeta = this.fieldsMeta;
		        for (var name in initialValues) {
		          if (initialValues.hasOwnProperty(name)) {
		            var fieldMeta = fieldsMeta[name];
		            fieldsMeta[name] = _extends({}, fieldMeta, {
		              initialValue: initialValues[name]
		            });
		          }
		        }
		      },
		      saveRef: function saveRef(name, _, component) {
		        if (!component) {
		          // after destroy, delete data
		          delete this.fieldsMeta[name];
		          delete this.fields[name];
		          delete this.instances[name];
		          delete this.cachedBind[name];
		          return;
		        }
		        var fieldMeta = this.getFieldMeta(name);
		        if (fieldMeta && fieldMeta.ref) {
		          if (typeof fieldMeta.ref === 'string') {
		            throw new Error('can not set ref string for ' + name);
		          }
		          fieldMeta.ref(component);
		        }
		        this.instances[name] = component;
		      },
		      validateFieldsInternal: function validateFieldsInternal(fields, _ref, callback) {
		        var _this4 = this;
		
		        var fieldNames = _ref.fieldNames;
		        var action = _ref.action;
		        var _ref$options = _ref.options;
		        var options = _ref$options === undefined ? {} : _ref$options;
		
		        var allRules = {};
		        var allValues = {};
		        var allFields = {};
		        var alreadyErrors = {};
		        fields.forEach(function (field) {
		          var name = field.name;
		          if (options.force !== true && field.dirty === false) {
		            if (field.errors) {
		              alreadyErrors[name] = {
		                errors: field.errors
		              };
		            }
		            return;
		          }
		          var fieldMeta = _this4.getFieldMeta(name);
		          var newField = _extends({}, field);
		          newField.errors = undefined;
		          newField.validating = true;
		          newField.dirty = true;
		          allRules[name] = _this4.getRules(fieldMeta, action);
		          allValues[name] = newField.value;
		          allFields[name] = newField;
		        });
		        this.setFields(allFields);
		        // in case normalize
		        Object.keys(allValues).forEach(function (f) {
		          allValues[f] = _this4.getFieldValue(f);
		        });
		        if (callback && (0, _utils.isEmptyObject)(allFields)) {
		          callback((0, _utils.isEmptyObject)(alreadyErrors) ? null : alreadyErrors, this.getFieldsValue((0, _utils.flatFieldNames)(fieldNames)));
		          return;
		        }
		        var validator = new _asyncValidator2["default"](allRules);
		        if (validateMessages) {
		          validator.messages(validateMessages);
		        }
		        validator.validate(allValues, options, function (errors) {
		          var errorsGroup = _extends({}, alreadyErrors);
		          if (errors && errors.length) {
		            errors.forEach(function (e) {
		              var fieldName = e.field;
		              if (!errorsGroup[fieldName]) {
		                errorsGroup[fieldName] = {
		                  errors: []
		                };
		              }
		              var fieldErrors = errorsGroup[fieldName].errors;
		              fieldErrors.push(e);
		            });
		          }
		          var expired = [];
		          var nowAllFields = {};
		          Object.keys(allRules).forEach(function (name) {
		            var fieldErrors = errorsGroup[name];
		            var nowField = _this4.getField(name);
		            // avoid concurrency problems
		            if (nowField.value !== allValues[name]) {
		              expired.push({
		                name: name
		              });
		            } else {
		              nowField.errors = fieldErrors && fieldErrors.errors;
		              nowField.value = allValues[name];
		              nowField.validating = false;
		              nowField.dirty = false;
		              nowAllFields[name] = nowField;
		            }
		          });
		          _this4.setFields(nowAllFields);
		          if (callback) {
		            if (expired.length) {
		              expired.forEach(function (_ref2) {
		                var name = _ref2.name;
		
		                var fieldErrors = [{
		                  message: name + ' need to revalidate',
		                  field: name
		                }];
		                errorsGroup[name] = {
		                  expired: true,
		                  errors: fieldErrors
		                };
		              });
		            }
		            callback((0, _utils.isEmptyObject)(errorsGroup) ? null : errorsGroup, _this4.getFieldsValue((0, _utils.flatFieldNames)(fieldNames)));
		          }
		        });
		      },
		      validateFields: function validateFields(ns, opt, cb) {
		        var _this5 = this;
		
		        var _getParams = (0, _utils.getParams)(ns, opt, cb);
		
		        var names = _getParams.names;
		        var callback = _getParams.callback;
		        var options = _getParams.options;
		
		        var fieldNames = names || this.getValidFieldsName();
		        var fields = fieldNames.map(function (name) {
		          var fieldMeta = _this5.getFieldMeta(name);
		          if (!(0, _utils.hasRules)(fieldMeta.validate)) {
		            return null;
		          }
		          var field = _this5.getField(name);
		          field.value = _this5.getFieldValue(name);
		          return field;
		        }).filter(function (f) {
		          return !!f;
		        });
		        if (!fields.length) {
		          if (callback) {
		            callback(null, this.getFieldsValue((0, _utils.flatFieldNames)(fieldNames)));
		          }
		          return;
		        }
		        if (!('firstFields' in options)) {
		          options.firstFields = fieldNames.filter(function (name) {
		            var fieldMeta = _this5.getFieldMeta(name);
		            return !!fieldMeta.validateFirst;
		          });
		        }
		        this.validateFieldsInternal(fields, {
		          fieldNames: fieldNames,
		          options: options
		        }, callback);
		      },
		      isFieldValidating: function isFieldValidating(name) {
		        return this.getFieldMember(name, 'validating');
		      },
		      isFieldsValidating: function isFieldsValidating(ns) {
		        var _this6 = this;
		
		        var names = ns || this.getValidFieldsName();
		        return names.some(function (n) {
		          return _this6.isFieldValidating(n);
		        });
		      },
		      isSubmitting: function isSubmitting() {
		        return this.state.submitting;
		      },
		      submit: function submit(callback) {
		        var _this7 = this;
		
		        var fn = function fn() {
		          _this7.setState({
		            submitting: false
		          });
		        };
		        this.setState({
		          submitting: true
		        });
		        callback(fn);
		      },
		      resetFields: function resetFields(ns) {
		        var newFields = {};
		        var fields = this.fields;
		
		        var changed = false;
		        var names = ns || Object.keys(fields);
		        names.forEach(function (name) {
		          var field = fields[name];
		          if (field && 'value' in field) {
		            changed = true;
		            newFields[name] = {};
		          }
		        });
		        if (changed) {
		          this.setFields(newFields);
		        }
		      },
		      render: function render() {
		        var formProps = _defineProperty({}, formPropName, this.getForm());
		        if (withRef) {
		          formProps.ref = 'wrappedComponent';
		        }
		        var props = mapProps.call(this, _extends({}, formProps, this.props));
		        return _react2["default"].createElement(WrappedComponent, props);
		      }
		    });
		
		    return (0, _utils.argumentContainer)(Form, WrappedComponent);
		  }
		
		  return decorate;
		}
		
		exports["default"] = createBaseForm;
		module.exports = exports['default'];
	
	/***/ },
	/* 107 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		exports.argumentContainer = argumentContainer;
		exports.getValueFromEvent = getValueFromEvent;
		exports.getErrorStrs = getErrorStrs;
		exports.isEmptyObject = isEmptyObject;
		exports.flattenArray = flattenArray;
		exports.mirror = mirror;
		exports.hasRules = hasRules;
		exports.startsWith = startsWith;
		exports.getParams = getParams;
		exports.getNameKeyStr = getNameKeyStr;
		exports.getNameKeyObj = getNameKeyObj;
		exports.flatFields = flatFields;
		exports.flatFieldNames = flatFieldNames;
		exports.clearVirtualField = clearVirtualField;
		
		var _hoistNonReactStatics = __webpack_require__(276);
		
		var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function getDisplayName(WrappedComponent) {
		  return WrappedComponent.displayName || WrappedComponent.name || 'WrappedComponent';
		}
		
		function argumentContainer(Container, WrappedComponent) {
		  /* eslint no-param-reassign:0 */
		  Container.displayName = 'Form(' + getDisplayName(WrappedComponent) + ')';
		  Container.WrappedComponent = WrappedComponent;
		  return (0, _hoistNonReactStatics2["default"])(Container, WrappedComponent);
		}
		
		function getValueFromEvent(e) {
		  // support custom element
		  if (!e || !e.target) {
		    return e;
		  }
		  var target = e.target;
		
		  return target.type === 'checkbox' ? target.checked : target.value;
		}
		
		function getErrorStrs(errors) {
		  if (errors) {
		    return errors.map(function (e) {
		      if (e && e.message) {
		        return e.message;
		      }
		      return e;
		    });
		  }
		  return errors;
		}
		
		function isEmptyObject(obj) {
		  return Object.keys(obj).length === 0;
		}
		
		function flattenArray(arr) {
		  return Array.prototype.concat.apply([], arr);
		}
		
		function mirror(obj) {
		  return obj;
		}
		
		function hasRules(validate) {
		  if (validate) {
		    return validate.some(function (item) {
		      return !!item.rules && item.rules.length;
		    });
		  }
		  return false;
		}
		
		function startsWith(str, prefix) {
		  return str.lastIndexOf(prefix, 0) === 0;
		}
		
		function getParams(ns, opt, cb) {
		  var names = ns;
		  var callback = cb;
		  var options = opt;
		  if (cb === undefined) {
		    if (typeof names === 'function') {
		      callback = names;
		      options = {};
		      names = undefined;
		    } else if (Array.isArray(ns)) {
		      if (typeof options === 'function') {
		        callback = options;
		        options = {};
		      } else {
		        options = options || {};
		      }
		    } else {
		      callback = options;
		      options = names || {};
		      names = undefined;
		    }
		  }
		  return {
		    names: names,
		    callback: callback,
		    options: options
		  };
		}
		
		var NAME_KEY_SEP = '.';
		
		function getNameKeyStr(name, key) {
		  if (key) {
		    return '' + name + NAME_KEY_SEP + key;
		  }
		  return name;
		}
		
		function getNameKeyObj(str) {
		  var index = str.indexOf(NAME_KEY_SEP);
		  if (str.indexOf(NAME_KEY_SEP) !== -1) {
		    var name = str.slice(0, index);
		    var key = str.slice(index + NAME_KEY_SEP.length);
		    return {
		      name: name,
		      key: key
		    };
		  }
		  return {
		    name: str
		  };
		}
		
		function flatFields(fields_, fieldsMeta) {
		  var fields = _extends({}, fields_);
		  Object.keys(fields).forEach(function (k) {
		    if (fieldsMeta[k] && fieldsMeta[k].virtual) {
		      var value = fields[k];
		      // flatten
		      for (var k2 in value) {
		        if (value.hasOwnProperty(k2)) {
		          fields[getNameKeyStr(k, k2)] = value[k2];
		        }
		      }
		      delete fields[k];
		    }
		  });
		  return fields;
		}
		
		function flatFieldNames(names) {
		  var ret = {};
		  names.forEach(function (n) {
		    ret[getNameKeyObj(n).name] = 1;
		  });
		  return Object.keys(ret);
		}
		
		function clearVirtualField(name, fields, fieldsMeta) {
		  if (fieldsMeta[name] && fieldsMeta[name].virtual) {
		    /* eslint no-loop-func:0 */
		    Object.keys(fields).forEach(function (ok) {
		      if (getNameKeyObj(ok).name === name) {
		        delete fields[ok];
		      }
		    });
		  }
		}
	
	/***/ },
	/* 108 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _reactDom = __webpack_require__(4);
		
		var _reactDom2 = _interopRequireDefault(_reactDom);
		
		var _KeyCode = __webpack_require__(11);
		
		var _KeyCode2 = _interopRequireDefault(_KeyCode);
		
		var _createChainedFunction = __webpack_require__(32);
		
		var _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var _domScrollIntoView = __webpack_require__(43);
		
		var _domScrollIntoView2 = _interopRequireDefault(_domScrollIntoView);
		
		var _objectAssign = __webpack_require__(10);
		
		var _objectAssign2 = _interopRequireDefault(_objectAssign);
		
		var _util = __webpack_require__(24);
		
		var _DOMWrap = __webpack_require__(321);
		
		var _DOMWrap2 = _interopRequireDefault(_DOMWrap);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function allDisabled(arr) {
		  if (!arr.length) {
		    return true;
		  }
		  return arr.every(function (c) {
		    return !!c.props.disabled;
		  });
		}
		
		function getActiveKey(props, originalActiveKey) {
		  var activeKey = originalActiveKey;
		  var children = props.children;
		  var eventKey = props.eventKey;
		  if (activeKey) {
		    var found = void 0;
		    (0, _util.loopMenuItem)(children, function (c, i) {
		      if (!c.props.disabled && activeKey === (0, _util.getKeyFromChildrenIndex)(c, eventKey, i)) {
		        found = true;
		      }
		    });
		    if (found) {
		      return activeKey;
		    }
		  }
		  activeKey = null;
		  if (props.defaultActiveFirst) {
		    (0, _util.loopMenuItem)(children, function (c, i) {
		      if (!activeKey && !c.props.disabled) {
		        activeKey = (0, _util.getKeyFromChildrenIndex)(c, eventKey, i);
		      }
		    });
		    return activeKey;
		  }
		  return activeKey;
		}
		
		function saveRef(index, subIndex, c) {
		  if (c) {
		    if (subIndex !== undefined) {
		      this.instanceArray[index] = this.instanceArray[index] || [];
		      this.instanceArray[index][subIndex] = c;
		    } else {
		      this.instanceArray[index] = c;
		    }
		  }
		}
		
		var MenuMixin = {
		  propTypes: {
		    focusable: _react.PropTypes.bool,
		    multiple: _react.PropTypes.bool,
		    style: _react.PropTypes.object,
		    defaultActiveFirst: _react.PropTypes.bool,
		    visible: _react.PropTypes.bool,
		    activeKey: _react.PropTypes.string,
		    selectedKeys: _react.PropTypes.arrayOf(_react.PropTypes.string),
		    defaultSelectedKeys: _react.PropTypes.arrayOf(_react.PropTypes.string),
		    defaultOpenKeys: _react.PropTypes.arrayOf(_react.PropTypes.string),
		    openKeys: _react.PropTypes.arrayOf(_react.PropTypes.string),
		    children: _react.PropTypes.any
		  },
		
		  getDefaultProps: function getDefaultProps() {
		    return {
		      prefixCls: 'rc-menu',
		      className: '',
		      mode: 'vertical',
		      level: 1,
		      inlineIndent: 24,
		      visible: true,
		      focusable: true,
		      style: {}
		    };
		  },
		  getInitialState: function getInitialState() {
		    var props = this.props;
		    return {
		      activeKey: getActiveKey(props, props.activeKey)
		    };
		  },
		  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
		    var props = void 0;
		    if ('activeKey' in nextProps) {
		      props = {
		        activeKey: getActiveKey(nextProps, nextProps.activeKey)
		      };
		    } else {
		      var originalActiveKey = this.state.activeKey;
		      var activeKey = getActiveKey(nextProps, originalActiveKey);
		      // fix: this.setState(), parent.render(),
		      if (activeKey !== originalActiveKey) {
		        props = {
		          activeKey: activeKey
		        };
		      }
		    }
		    if (props) {
		      this.setState(props);
		    }
		  },
		  shouldComponentUpdate: function shouldComponentUpdate(nextProps) {
		    return this.props.visible || nextProps.visible;
		  },
		  componentWillMount: function componentWillMount() {
		    this.instanceArray = [];
		  },
		
		
		  // all keyboard events callbacks run from here at first
		  onKeyDown: function onKeyDown(e) {
		    var _this = this;
		
		    var keyCode = e.keyCode;
		    var handled = void 0;
		    this.getFlatInstanceArray().forEach(function (obj) {
		      if (obj && obj.props.active) {
		        handled = obj.onKeyDown(e);
		      }
		    });
		    if (handled) {
		      return 1;
		    }
		    var activeItem = null;
		    if (keyCode === _KeyCode2["default"].UP || keyCode === _KeyCode2["default"].DOWN) {
		      activeItem = this.step(keyCode === _KeyCode2["default"].UP ? -1 : 1);
		    }
		    if (activeItem) {
		      e.preventDefault();
		      this.setState({
		        activeKey: activeItem.props.eventKey
		      }, function () {
		        (0, _domScrollIntoView2["default"])(_reactDom2["default"].findDOMNode(activeItem), _reactDom2["default"].findDOMNode(_this), {
		          onlyScrollIfNeeded: true
		        });
		      });
		      return 1;
		    } else if (activeItem === undefined) {
		      e.preventDefault();
		      this.setState({
		        activeKey: null
		      });
		      return 1;
		    }
		  },
		  onCommonItemHover: function onCommonItemHover(e) {
		    var mode = this.props.mode;
		    var key = e.key;
		    var hover = e.hover;
		    var trigger = e.trigger;
		
		    var activeKey = this.state.activeKey;
		    if (!trigger || hover || this.props.closeSubMenuOnMouseLeave || !e.item.isSubMenu || mode === 'inline') {
		      this.setState({
		        activeKey: hover ? key : null
		      });
		    } else {}
		    // keep active for sub menu for click active
		    // empty
		
		    // clear last open status
		    if (hover && mode !== 'inline') {
		      var activeItem = this.getFlatInstanceArray().filter(function (c) {
		        return c && c.props.eventKey === activeKey;
		      })[0];
		      if (activeItem && activeItem.isSubMenu && activeItem.props.eventKey !== key) {
		        this.onOpenChange({
		          item: activeItem,
		          key: activeItem.props.eventKey,
		          open: false
		        });
		      }
		    }
		  },
		  getFlatInstanceArray: function getFlatInstanceArray() {
		    var instanceArray = this.instanceArray;
		    var hasInnerArray = instanceArray.some(function (a) {
		      return Array.isArray(a);
		    });
		    if (hasInnerArray) {
		      instanceArray = [];
		      this.instanceArray.forEach(function (a) {
		        if (Array.isArray(a)) {
		          instanceArray.push.apply(instanceArray, a);
		        } else {
		          instanceArray.push(a);
		        }
		      });
		      this.instanceArray = instanceArray;
		    }
		    return instanceArray;
		  },
		  renderCommonMenuItem: function renderCommonMenuItem(child, i, subIndex, extraProps) {
		    var state = this.state;
		    var props = this.props;
		    var key = (0, _util.getKeyFromChildrenIndex)(child, props.eventKey, i);
		    var childProps = child.props;
		    var isActive = key === state.activeKey;
		    var newChildProps = (0, _objectAssign2["default"])({
		      mode: props.mode,
		      level: props.level,
		      inlineIndent: props.inlineIndent,
		      renderMenuItem: this.renderMenuItem,
		      rootPrefixCls: props.prefixCls,
		      index: i,
		      parentMenu: this,
		      ref: childProps.disabled ? undefined : (0, _createChainedFunction2["default"])(child.ref, saveRef.bind(this, i, subIndex)),
		      eventKey: key,
		      closeSubMenuOnMouseLeave: props.closeSubMenuOnMouseLeave,
		      onItemHover: this.onItemHover,
		      active: !childProps.disabled && isActive,
		      multiple: props.multiple,
		      onClick: this.onClick,
		      openTransitionName: this.getOpenTransitionName(),
		      openAnimation: props.openAnimation,
		      onOpenChange: this.onOpenChange,
		      onDeselect: this.onDeselect,
		      onDestroy: this.onDestroy,
		      onSelect: this.onSelect
		    }, extraProps);
		    if (props.mode === 'inline') {
		      newChildProps.closeSubMenuOnMouseLeave = newChildProps.openSubMenuOnMouseEnter = false;
		    }
		    return _react2["default"].cloneElement(child, newChildProps);
		  },
		  renderRoot: function renderRoot(props) {
		    var _classes;
		
		    this.instanceArray = [];
		    var classes = (_classes = {}, _defineProperty(_classes, props.prefixCls, 1), _defineProperty(_classes, props.prefixCls + '-' + props.mode, 1), _defineProperty(_classes, props.className, !!props.className), _classes);
		    var domProps = {
		      className: (0, _classnames2["default"])(classes),
		      role: 'menu',
		      'aria-activedescendant': ''
		    };
		    if (props.id) {
		      domProps.id = props.id;
		    }
		    if (props.focusable) {
		      domProps.tabIndex = '0';
		      domProps.onKeyDown = this.onKeyDown;
		    }
		    return(
		      // ESLint is not smart enough to know that the type of `children` was checked.
		      /* eslint-disable */
		      _react2["default"].createElement(
		        _DOMWrap2["default"],
		        _extends({
		          style: props.style,
		          tag: 'ul',
		          hiddenClassName: props.prefixCls + '-hidden',
		          visible: props.visible
		        }, domProps),
		        _react2["default"].Children.map(props.children, this.renderMenuItem)
		      )
		      /*eslint-enable */
		
		    );
		  },
		  step: function step(direction) {
		    var children = this.getFlatInstanceArray();
		    var activeKey = this.state.activeKey;
		    var len = children.length;
		    if (!len) {
		      return null;
		    }
		    if (direction < 0) {
		      children = children.concat().reverse();
		    }
		    // find current activeIndex
		    var activeIndex = -1;
		    children.every(function (c, ci) {
		      if (c && c.props.eventKey === activeKey) {
		        activeIndex = ci;
		        return false;
		      }
		      return true;
		    });
		    if (!this.props.defaultActiveFirst && activeIndex !== -1) {
		      if (allDisabled(children.slice(activeIndex, len - 1))) {
		        return undefined;
		      }
		    }
		    var start = (activeIndex + 1) % len;
		    var i = start;
		    for (;;) {
		      var child = children[i];
		      if (!child || child.props.disabled) {
		        i = (i + 1 + len) % len;
		        // complete a loop
		        if (i === start) {
		          return null;
		        }
		      } else {
		        return child;
		      }
		    }
		  }
		};
		
		exports["default"] = MenuMixin;
		module.exports = exports['default'];
	
	/***/ },
	/* 109 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _Notification = __webpack_require__(330);
		
		var _Notification2 = _interopRequireDefault(_Notification);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		exports["default"] = _Notification2["default"];
		module.exports = exports['default'];
	
	/***/ },
	/* 110 */
	/***/ function(module, exports) {
	
		"use strict";
		
		module.exports = {
		  ZERO: 48,
		  NINE: 57,
		
		  NUMPAD_ZERO: 96,
		  NUMPAD_NINE: 105,
		
		  BACKSPACE: 8,
		  DELETE: 46,
		  ENTER: 13,
		
		  ARROW_UP: 38,
		  ARROW_DOWN: 40
		};
	
	/***/ },
	/* 111 */
	/***/ function(module, exports) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		exports['default'] = {
		  // Options.jsx
		  items_per_page: '条/页',
		  jump_to: '跳至',
		  page: '页',
		
		  // Pager.jsx
		  first_page: '第一页',
		  last_page: '最后一页',
		
		  // Pagination.jsx
		  prev_page: '上一页',
		  next_page: '下一页',
		  prev_5: '向前 5 页',
		  next_5: '向后 5 页'
		};
		module.exports = exports['default'];
	
	/***/ },
	/* 112 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var Option = function (_React$Component) {
		  _inherits(Option, _React$Component);
		
		  function Option() {
		    _classCallCheck(this, Option);
		
		    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
		  }
		
		  return Option;
		}(_react2["default"].Component);
		
		exports["default"] = Option;
		module.exports = exports['default'];
	
	/***/ },
	/* 113 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _classnames2 = __webpack_require__(2);
		
		var _classnames3 = _interopRequireDefault(_classnames2);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		var TabPane = _react2["default"].createClass({
		  displayName: 'TabPane',
		
		  propTypes: {
		    active: _react.PropTypes.bool
		  },
		  render: function render() {
		    var _classnames;
		
		    var props = this.props;
		    this._isActived = this._isActived || props.active;
		    if (!this._isActived) {
		      return null;
		    }
		    var prefixCls = props.rootPrefixCls + '-tabpane';
		    var cls = (0, _classnames3["default"])((_classnames = {}, _defineProperty(_classnames, prefixCls + '-hidden', !props.active), _defineProperty(_classnames, prefixCls, 1), _classnames));
		    return _react2["default"].createElement(
		      'div',
		      {
		        role: 'tabpanel',
		        'aria-hidden': props.active ? 'false' : 'true',
		        className: cls
		      },
		      props.children
		    );
		  }
		});
		
		exports["default"] = TabPane;
		module.exports = exports['default'];
	
	/***/ },
	/* 114 */
	/***/ function(module, exports) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.getScroll = getScroll;
		exports.offset = offset;
		exports.getTransformPropertyName = getTransformPropertyName;
		function getScroll(w, top) {
		  var ret = w['page' + (top ? 'Y' : 'X') + 'Offset'];
		  var method = 'scroll' + (top ? 'Top' : 'Left');
		  if (typeof ret !== 'number') {
		    var d = w.document;
		    // ie6,7,8 standard mode
		    ret = d.documentElement[method];
		    if (typeof ret !== 'number') {
		      // quirks mode
		      ret = d.body[method];
		    }
		  }
		  return ret;
		}
		
		function offset(elem) {
		  var box = void 0;
		  var x = void 0;
		  var y = void 0;
		  var doc = elem.ownerDocument;
		  var body = doc.body;
		  var docElem = doc && doc.documentElement;
		  box = elem.getBoundingClientRect();
		  x = box.left;
		  y = box.top;
		  x -= docElem.clientLeft || body.clientLeft || 0;
		  y -= docElem.clientTop || body.clientTop || 0;
		  var w = doc.defaultView || doc.parentWindow;
		  x += getScroll(w);
		  y += getScroll(w, true);
		  return {
		    left: x, top: y
		  };
		}
		
		var transformPropertyName = void 0;
		
		function getTransformPropertyName() {
		  if (!window.getComputedStyle) {
		    return false;
		  }
		  if (transformPropertyName !== undefined) {
		    return transformPropertyName;
		  }
		  var el = document.createElement('p');
		  var has3d = void 0;
		  var transforms = {
		    webkitTransform: '-webkit-transform',
		    OTransform: '-o-transform',
		    msTransform: '-ms-transform',
		    MozTransform: '-moz-transform',
		    transform: 'transform'
		  };
		  // Add it to the body to get the computed style.
		  document.body.insertBefore(el, null);
		  for (var t in transforms) {
		    if (el.style[t] !== undefined) {
		      el.style[t] = 'translate3d(1px,1px,1px)';
		      has3d = window.getComputedStyle(el).getPropertyValue(transforms[t]);
		      if (has3d !== undefined && has3d.length > 0 && has3d !== 'none') {
		        transformPropertyName = t;
		      }
		    }
		  }
		  document.body.removeChild(el);
		  return transformPropertyName;
		}
	
	/***/ },
	/* 115 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _rcTrigger = __webpack_require__(17);
		
		var _rcTrigger2 = _interopRequireDefault(_rcTrigger);
		
		var _modulePanel = __webpack_require__(379);
		
		var _modulePanel2 = _interopRequireDefault(_modulePanel);
		
		var _utilPlacements = __webpack_require__(382);
		
		var _utilPlacements2 = _interopRequireDefault(_utilPlacements);
		
		var _mixinCommonMixin = __webpack_require__(116);
		
		var _mixinCommonMixin2 = _interopRequireDefault(_mixinCommonMixin);
		
		var _utilIndex = __webpack_require__(381);
		
		function noop() {}
		
		function refFn(field, component) {
		  this[field] = component;
		}
		
		var Picker = _react2['default'].createClass({
		  displayName: 'Picker',
		
		  propTypes: {
		    prefixCls: _react.PropTypes.string,
		    locale: _react.PropTypes.object,
		    value: _react.PropTypes.object,
		    disabled: _react.PropTypes.bool,
		    allowEmpty: _react.PropTypes.bool,
		    defaultValue: _react.PropTypes.object,
		    open: _react.PropTypes.bool,
		    defaultOpen: _react.PropTypes.bool,
		    align: _react.PropTypes.object,
		    placement: _react.PropTypes.any,
		    transitionName: _react.PropTypes.string,
		    getPopupContainer: _react.PropTypes.func,
		    placeholder: _react.PropTypes.string,
		    formatter: _react.PropTypes.any,
		    showHour: _react.PropTypes.bool,
		    style: _react.PropTypes.object,
		    className: _react.PropTypes.string,
		    showSecond: _react.PropTypes.bool,
		    disabledHours: _react.PropTypes.func,
		    disabledMinutes: _react.PropTypes.func,
		    disabledSeconds: _react.PropTypes.func,
		    hideDisabledOptions: _react.PropTypes.bool,
		    onChange: _react.PropTypes.func,
		    onOpen: _react.PropTypes.func,
		    onClose: _react.PropTypes.func
		  },
		
		  mixins: [_mixinCommonMixin2['default']],
		
		  getDefaultProps: function getDefaultProps() {
		    return {
		      prefixCls: 'rc-time-picker',
		      defaultOpen: false,
		      style: {},
		      className: '',
		      align: {},
		      allowEmpty: true,
		      showHour: true,
		      showSecond: true,
		      disabledHours: noop,
		      disabledMinutes: noop,
		      disabledSeconds: noop,
		      hideDisabledOptions: false,
		      placement: 'bottomLeft',
		      onChange: noop,
		      onOpen: noop,
		      onClose: noop
		    };
		  },
		
		  getInitialState: function getInitialState() {
		    this.savePanelRef = refFn.bind(this, 'panelInstance');
		    var _props = this.props;
		    var defaultOpen = _props.defaultOpen;
		    var defaultValue = _props.defaultValue;
		    var _props$open = _props.open;
		    var open = _props$open === undefined ? defaultOpen : _props$open;
		    var _props$value = _props.value;
		    var value = _props$value === undefined ? defaultValue : _props$value;
		
		    return {
		      open: open,
		      value: value
		    };
		  },
		
		  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
		    var value = nextProps.value;
		    var open = nextProps.open;
		
		    if ('value' in nextProps) {
		      this.setState({
		        value: value
		      });
		    }
		    if (open !== undefined) {
		      this.setState({ open: open });
		    }
		  },
		
		  onPanelChange: function onPanelChange(value) {
		    this.setValue(value);
		  },
		
		  onPanelClear: function onPanelClear() {
		    this.setValue(null);
		    this.setOpen(false);
		  },
		
		  onVisibleChange: function onVisibleChange(open) {
		    this.setOpen(open);
		  },
		
		  onEsc: function onEsc() {
		    this.setOpen(false);
		    this.refs.picker.focus();
		  },
		
		  onKeyDown: function onKeyDown(e) {
		    if (e.keyCode === 40) {
		      this.setOpen(true);
		    }
		  },
		
		  setValue: function setValue(value) {
		    if (!('value' in this.props)) {
		      this.setState({
		        value: value
		      });
		    }
		    this.props.onChange(value);
		  },
		
		  getFormatter: function getFormatter() {
		    var formatter = this.props.formatter;
		    var locale = this.props.locale;
		    if (formatter) {
		      if (formatter === this.lastFormatter) {
		        return this.normalFormatter;
		      }
		      this.normalFormatter = (0, _utilIndex.getFormatter)(formatter, locale);
		      this.lastFormatter = formatter;
		      return this.normalFormatter;
		    }
		    if (!this.props.showSecond) {
		      if (!this.notShowSecondFormatter) {
		        this.notShowSecondFormatter = (0, _utilIndex.getFormatter)('HH:mm', locale);
		      }
		      return this.notShowSecondFormatter;
		    }
		    if (!this.props.showHour) {
		      if (!this.notShowHourFormatter) {
		        this.notShowHourFormatter = (0, _utilIndex.getFormatter)('mm:ss', locale);
		      }
		      return this.notShowHourFormatter;
		    }
		    if (!this.normalFormatter) {
		      this.normalFormatter = (0, _utilIndex.getFormatter)('HH:mm:ss', locale);
		    }
		    return this.normalFormatter;
		  },
		
		  getPanelElement: function getPanelElement() {
		    var _props2 = this.props;
		    var prefixCls = _props2.prefixCls;
		    var defaultValue = _props2.defaultValue;
		    var locale = _props2.locale;
		    var placeholder = _props2.placeholder;
		    var disabledHours = _props2.disabledHours;
		    var disabledMinutes = _props2.disabledMinutes;
		    var disabledSeconds = _props2.disabledSeconds;
		    var hideDisabledOptions = _props2.hideDisabledOptions;
		    var allowEmpty = _props2.allowEmpty;
		    var showHour = _props2.showHour;
		    var showSecond = _props2.showSecond;
		
		    return _react2['default'].createElement(_modulePanel2['default'], {
		      prefixCls: prefixCls + '-panel',
		      ref: this.savePanelRef,
		      value: this.state.value,
		      onChange: this.onPanelChange,
		      gregorianCalendarLocale: locale.calendar,
		      onClear: this.onPanelClear,
		      defaultValue: defaultValue,
		      showHour: showHour,
		      onEsc: this.onEsc,
		      showSecond: showSecond,
		      locale: locale,
		      allowEmpty: allowEmpty,
		      formatter: this.getFormatter(),
		      placeholder: placeholder,
		      disabledHours: disabledHours,
		      disabledMinutes: disabledMinutes,
		      disabledSeconds: disabledSeconds,
		      hideDisabledOptions: hideDisabledOptions
		    });
		  },
		
		  setOpen: function setOpen(open, callback) {
		    var _props3 = this.props;
		    var onOpen = _props3.onOpen;
		    var onClose = _props3.onClose;
		
		    if (this.state.open !== open) {
		      this.setState({
		        open: open
		      }, callback);
		      var _event = {
		        open: open
		      };
		      if (open) {
		        onOpen(_event);
		      } else {
		        onClose(_event);
		      }
		    }
		  },
		
		  render: function render() {
		    var _props4 = this.props;
		    var prefixCls = _props4.prefixCls;
		    var placeholder = _props4.placeholder;
		    var placement = _props4.placement;
		    var align = _props4.align;
		    var disabled = _props4.disabled;
		    var transitionName = _props4.transitionName;
		    var style = _props4.style;
		    var className = _props4.className;
		    var showHour = _props4.showHour;
		    var showSecond = _props4.showSecond;
		    var getPopupContainer = _props4.getPopupContainer;
		    var _state = this.state;
		    var open = _state.open;
		    var value = _state.value;
		
		    var popupClassName = undefined;
		    if (!showHour || !showSecond) {
		      popupClassName = prefixCls + '-panel-narrow';
		    }
		    return _react2['default'].createElement(
		      _rcTrigger2['default'],
		      {
		        prefixCls: prefixCls + '-panel',
		        popupClassName: popupClassName,
		        popup: this.getPanelElement(),
		        popupAlign: align,
		        builtinPlacements: _utilPlacements2['default'],
		        popupPlacement: placement,
		        action: disabled ? [] : ['click'],
		        destroyPopupOnHide: true,
		        getPopupContainer: getPopupContainer,
		        popupTransitionName: transitionName,
		        popupVisible: open,
		        onPopupVisibleChange: this.onVisibleChange
		      },
		      _react2['default'].createElement(
		        'span',
		        { className: prefixCls + ' ' + className, style: style },
		        _react2['default'].createElement('input', {
		          className: prefixCls + '-input',
		          ref: 'picker', type: 'text', placeholder: placeholder,
		          readOnly: true,
		          onKeyDown: this.onKeyDown,
		          disabled: disabled, value: value && this.getFormatter().format(value) || ''
		        }),
		        _react2['default'].createElement('span', { className: prefixCls + '-icon' })
		      )
		    );
		  }
		});
		
		exports['default'] = Picker;
		module.exports = exports['default'];
	
	/***/ },
	/* 116 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		var _react = __webpack_require__(1);
		
		var _localeEn_US = __webpack_require__(375);
		
		var _localeEn_US2 = _interopRequireDefault(_localeEn_US);
		
		exports['default'] = {
		  propTypes: {
		    prefixCls: _react.PropTypes.string,
		    locale: _react.PropTypes.object
		  },
		
		  getDefaultProps: function getDefaultProps() {
		    return {
		      locale: _localeEn_US2['default']
		    };
		  }
		};
		module.exports = exports['default'];
	
	/***/ },
	/* 117 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		module.exports = __webpack_require__(384);
	
	/***/ },
	/* 118 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var TreeNode = (function (_React$Component) {
		  _inherits(TreeNode, _React$Component);
		
		  function TreeNode() {
		    _classCallCheck(this, TreeNode);
		
		    _get(Object.getPrototypeOf(TreeNode.prototype), 'constructor', this).apply(this, arguments);
		  }
		
		  return TreeNode;
		})(_react2['default'].Component);
		
		exports['default'] = TreeNode;
		
		TreeNode.propTypes = {
		  value: _react2['default'].PropTypes.string
		};
		module.exports = exports['default'];
	
	/***/ },
	/* 119 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* eslint no-loop-func: 0*/
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		exports.getValuePropValue = getValuePropValue;
		exports.getPropValue = getPropValue;
		exports.isCombobox = isCombobox;
		exports.isMultipleOrTags = isMultipleOrTags;
		exports.isMultipleOrTagsOrCombobox = isMultipleOrTagsOrCombobox;
		exports.isSingleMode = isSingleMode;
		exports.toArray = toArray;
		exports.preventDefaultEvent = preventDefaultEvent;
		exports.labelCompatible = labelCompatible;
		exports.isInclude = isInclude;
		exports.loopAllChildren = loopAllChildren;
		exports.flatToHierarchy = flatToHierarchy;
		exports.filterParentPosition = filterParentPosition;
		exports.handleCheckState = handleCheckState;
		exports.getTreeNodesStates = getTreeNodesStates;
		exports.recursiveCloneChildren = recursiveCloneChildren;
		exports.filterAllCheckedData = filterAllCheckedData;
		exports.processSimpleTreeData = processSimpleTreeData;
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		function getValuePropValue(child) {
		  var props = child.props;
		  if ('value' in props) {
		    return props.value;
		  }
		  if (child.key) {
		    return child.key;
		  }
		  throw new Error('no key or value for ' + child);
		}
		
		function getPropValue(child, prop) {
		  if (prop === 'value') {
		    return getValuePropValue(child);
		  }
		  return child.props[prop];
		}
		
		function isCombobox(props) {
		  return props.combobox;
		}
		
		function isMultipleOrTags(props) {
		  return props.multiple || props.tags || props.treeCheckable;
		}
		
		function isMultipleOrTagsOrCombobox(props) {
		  return isMultipleOrTags(props) || isCombobox(props);
		}
		
		function isSingleMode(props) {
		  return !isMultipleOrTagsOrCombobox(props);
		}
		
		function toArray(value) {
		  var ret = value;
		  if (value === undefined) {
		    ret = [];
		  } else if (!Array.isArray(value)) {
		    ret = [value];
		  }
		  return ret;
		}
		
		function preventDefaultEvent(e) {
		  e.preventDefault();
		}
		
		var UNSELECTABLE_STYLE = {
		  userSelect: 'none',
		  WebkitUserSelect: 'none'
		};
		
		exports.UNSELECTABLE_STYLE = UNSELECTABLE_STYLE;
		var UNSELECTABLE_ATTRIBUTE = {
		  unselectable: 'unselectable'
		};
		
		exports.UNSELECTABLE_ATTRIBUTE = UNSELECTABLE_ATTRIBUTE;
		
		function labelCompatible(prop) {
		  var newProp = prop;
		  if (newProp === 'label') {
		    newProp = 'title';
		  }
		  return newProp;
		}
		
		function isInclude(smallArray, bigArray) {
		  // attention: [0,0,1] [0,0,10]
		  return smallArray.every(function (ii, i) {
		    return ii === bigArray[i];
		  });
		}
		
		/*
		export function getCheckedKeys(node, checkedKeys, allCheckedNodesKeys) {
		  const nodeKey = node.props.eventKey;
		  let newCks = [...checkedKeys];
		  let nodePos;
		  const unCheck = allCheckedNodesKeys.some(item => {
		    if (item.key === nodeKey) {
		      nodePos = item.pos;
		      return true;
		    }
		  });
		  if (unCheck) {
		    const nArr = nodePos.split('-');
		    newCks = [];
		    allCheckedNodesKeys.forEach(item => {
		      const iArr = item.pos.split('-');
		      if (item.pos === nodePos ||
		        nArr.length > iArr.length && isInclude(iArr, nArr) ||
		        nArr.length < iArr.length && isInclude(nArr, iArr)) {
		        // 过滤掉 父级节点 和 所有子节点。
		        // 因为 node节点 不选时，其 父级节点 和 所有子节点 都不选。
		        return;
		      }
		      newCks.push(item.key);
		    });
		  } else {
		    newCks.push(nodeKey);
		  }
		  return newCks;
		}
		*/
		
		function getChildrenlength(children) {
		  var len = 1;
		  if (Array.isArray(children)) {
		    len = children.length;
		  }
		  return len;
		}
		
		function getSiblingPosition(index, len, siblingPosition) {
		  if (len === 1) {
		    siblingPosition.first = true;
		    siblingPosition.last = true;
		  } else {
		    siblingPosition.first = index === 0;
		    siblingPosition.last = index === len - 1;
		  }
		  return siblingPosition;
		}
		
		function loopAllChildren(childs, callback, parent) {
		  var loop = function loop(children, level, _parent) {
		    var len = getChildrenlength(children);
		    _react2['default'].Children.forEach(children, function (item, index) {
		      var pos = level + '-' + index;
		      if (item && item.props.children && item.type) {
		        loop(item.props.children, pos, { node: item, pos: pos });
		      }
		      if (item) {
		        callback(item, index, pos, item.key || pos, getSiblingPosition(index, len, {}), _parent);
		      }
		    });
		  };
		  loop(childs, 0, parent);
		}
		
		// export function loopAllChildren(childs, callback) {
		//   const loop = (children, level) => {
		//     React.Children.forEach(children, (item, index) => {
		//       const pos = `${level}-${index}`;
		//       if (item && item.props.children) {
		//         loop(item.props.children, pos);
		//       }
		//       if (item) {
		//         callback(item, index, pos, getValuePropValue(item));
		//       }
		//     });
		//   };
		//   loop(childs, 0);
		// }
		
		function flatToHierarchy(arr) {
		  if (!arr.length) {
		    return arr;
		  }
		  var hierarchyNodes = [];
		  var levelObj = {};
		  arr.forEach(function (item) {
		    if (!item.pos) {
		      return;
		    }
		    var posLen = item.pos.split('-').length;
		    if (!levelObj[posLen]) {
		      levelObj[posLen] = [];
		    }
		    levelObj[posLen].push(item);
		  });
		  var levelArr = Object.keys(levelObj).sort(function (a, b) {
		    return b - a;
		  });
		  // const s = Date.now();
		  // todo: 数据量大时，下边函数性能差，能否是o1时间复杂度？
		  levelArr.reduce(function (pre, cur) {
		    if (cur && cur !== pre) {
		      levelObj[pre].forEach(function (item) {
		        var haveParent = false;
		        levelObj[cur].forEach(function (ii) {
		          if (isInclude(ii.pos.split('-'), item.pos.split('-'))) {
		            haveParent = true;
		            if (!ii.children) {
		              ii.children = [];
		            }
		            ii.children.push(item);
		          }
		        });
		        if (!haveParent) {
		          hierarchyNodes.push(item);
		        }
		      });
		    }
		    return cur;
		  });
		  // console.log(Date.now() - s);
		  return levelObj[levelArr[levelArr.length - 1]].concat(hierarchyNodes);
		}
		
		// arr.length === 628, use time: ~20ms
		
		function filterParentPosition(arr) {
		  var levelObj = {};
		  arr.forEach(function (item) {
		    var posLen = item.split('-').length;
		    if (!levelObj[posLen]) {
		      levelObj[posLen] = [];
		    }
		    levelObj[posLen].push(item);
		  });
		  var levelArr = Object.keys(levelObj).sort();
		
		  var _loop = function (i) {
		    if (levelArr[i + 1]) {
		      levelObj[levelArr[i]].forEach(function (ii) {
		        var _loop2 = function (j) {
		          levelObj[levelArr[j]].forEach(function (_i, index) {
		            if (isInclude(ii.split('-'), _i.split('-'))) {
		              levelObj[levelArr[j]][index] = null;
		            }
		          });
		          levelObj[levelArr[j]] = levelObj[levelArr[j]].filter(function (p) {
		            return p;
		          });
		        };
		
		        for (var j = i + 1; j < levelArr.length; j++) {
		          _loop2(j);
		        }
		      });
		    }
		  };
		
		  for (var i = 0; i < levelArr.length; i++) {
		    _loop(i);
		  }
		  var nArr = [];
		  levelArr.forEach(function (i) {
		    nArr = nArr.concat(levelObj[i]);
		  });
		  return nArr;
		}
		
		// console.log(filterParentPosition(['0-2', '0-3-3', '0-10', '0-10-0', '0-0-1', '0-0', '0-1-1', '0-1']));
		
		function stripTail(str) {
		  var arr = str.match(/(.+)(-[^-]+)$/);
		  var st = '';
		  if (arr && arr.length === 3) {
		    st = arr[1];
		  }
		  return st;
		}
		function splitPosition(pos) {
		  return pos.split('-');
		}
		
		// TODO 再优化
		
		function handleCheckState(obj, checkedPositionArr, checkIt) {
		  // console.log(stripTail('0-101-000'));
		  // let s = Date.now();
		  var objKeys = Object.keys(obj);
		
		  objKeys.forEach(function (i, index) {
		    var iArr = splitPosition(i);
		    var saved = false;
		    checkedPositionArr.forEach(function (_pos) {
		      // 设置子节点，全选或全不选
		      var _posArr = splitPosition(_pos);
		      if (iArr.length > _posArr.length && isInclude(_posArr, iArr)) {
		        obj[i].halfChecked = false;
		        obj[i].checked = checkIt;
		        objKeys[index] = null;
		      }
		      if (iArr[0] === _posArr[0] && iArr[1] === _posArr[1]) {
		        // 如果
		        saved = true;
		      }
		    });
		    if (!saved) {
		      objKeys[index] = null;
		    }
		  });
		  objKeys = objKeys.filter(function (i) {
		    return i;
		  }); // filter non null;
		
		  var _loop3 = function (_pIndex) {
		    // 循环设置父节点的 选中 或 半选状态
		    var loop = function loop(__pos) {
		      var _posLen = splitPosition(__pos).length;
		      if (_posLen <= 2) {
		        // e.g. '0-0', '0-1'
		        return;
		      }
		      var sibling = 0;
		      var siblingChecked = 0;
		      var parentPosition = stripTail(__pos);
		      objKeys.forEach(function (i /* , index*/) {
		        var iArr = splitPosition(i);
		        if (iArr.length === _posLen && isInclude(splitPosition(parentPosition), iArr)) {
		          sibling++;
		          if (obj[i].checked) {
		            siblingChecked++;
		            var _i = checkedPositionArr.indexOf(i);
		            if (_i > -1) {
		              checkedPositionArr.splice(_i, 1);
		              if (_i <= _pIndex) {
		                _pIndex--;
		              }
		            }
		          } else if (obj[i].halfChecked) {
		            siblingChecked += 0.5;
		          }
		          // objKeys[index] = null;
		        }
		      });
		      // objKeys = objKeys.filter(i => i); // filter non null;
		      var parent = obj[parentPosition];
		      // sibling 不会等于0
		      // 全不选 - 全选 - 半选
		      if (siblingChecked === 0) {
		        parent.checked = false;
		        parent.halfChecked = false;
		      } else if (siblingChecked === sibling) {
		        parent.checked = true;
		        parent.halfChecked = false;
		      } else {
		        parent.halfChecked = true;
		        parent.checked = false;
		      }
		      loop(parentPosition);
		    };
		    loop(checkedPositionArr[_pIndex], _pIndex);
		    pIndex = _pIndex;
		  };
		
		  for (var pIndex = 0; pIndex < checkedPositionArr.length; pIndex++) {
		    _loop3(pIndex);
		  }
		  // console.log(Date.now()-s, objKeys.length, checkIt);
		}
		
		function getCheck(treeNodesStates, checkedPositions) {
		  var halfCheckedKeys = [];
		  var checkedKeys = [];
		  var checkedNodes = [];
		  Object.keys(treeNodesStates).forEach(function (item) {
		    var itemObj = treeNodesStates[item];
		    if (itemObj.checked) {
		      checkedKeys.push(itemObj.key);
		      // checkedNodes.push(getValuePropValue(itemObj.node));
		      checkedNodes.push(_extends({}, itemObj, { pos: item }));
		    } else if (itemObj.halfChecked) {
		      halfCheckedKeys.push(itemObj.key);
		    }
		  });
		  return {
		    halfCheckedKeys: halfCheckedKeys, checkedKeys: checkedKeys, checkedNodes: checkedNodes, treeNodesStates: treeNodesStates, checkedPositions: checkedPositions
		  };
		}
		
		function getTreeNodesStates(children, values) {
		  var checkedPositions = [];
		  var treeNodesStates = {};
		  loopAllChildren(children, function (item, index, pos, keyOrPos, siblingPosition) {
		    treeNodesStates[pos] = {
		      node: item,
		      key: keyOrPos,
		      checked: false,
		      halfChecked: false,
		      siblingPosition: siblingPosition
		    };
		    if (values.indexOf(getValuePropValue(item)) !== -1) {
		      treeNodesStates[pos].checked = true;
		      checkedPositions.push(pos);
		    }
		  });
		
		  handleCheckState(treeNodesStates, filterParentPosition(checkedPositions.sort()), true);
		
		  return getCheck(treeNodesStates, checkedPositions);
		}
		
		// 给每一个 children 节点，增加 prop
		
		function recursiveCloneChildren(children) {
		  var cb = arguments.length <= 1 || arguments[1] === undefined ? function (ch) {
		    return ch;
		  } : arguments[1];
		
		  // return React.Children.map(children, child => {
		  return Array.from(children).map(function (child) {
		    var newChild = cb(child);
		    if (newChild && newChild.props && newChild.props.children) {
		      return _react2['default'].cloneElement(newChild, {}, recursiveCloneChildren(newChild.props.children, cb));
		    }
		    return newChild;
		  });
		}
		
		// const newChildren = recursiveCloneChildren(children, child => {
		//   const extraProps = {};
		//   if (child && child.type && child.type.xxx) {
		//     extraProps._prop = true;
		//     return React.cloneElement(child, extraProps);
		//   }
		//   return child;
		// });
		
		function recursiveGen(children) {
		  var level = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];
		
		  return _react2['default'].Children.map(children, function (child, index) {
		    var pos = level + '-' + index;
		    var o = {
		      title: child.props.title,
		      label: child.props.label || child.props.title,
		      value: child.props.value,
		      key: child.key,
		      _pos: pos
		    };
		    if (child.props.children) {
		      o.children = recursiveGen(child.props.children, pos);
		    }
		    return o;
		  });
		}
		
		function recursive(children, cb) {
		  children.forEach(function (item) {
		    cb(item);
		    if (item.children) {
		      recursive(item.children, cb);
		    }
		  });
		}
		
		// 用于根据选择框里的 value 筛选初始的 tree 数据里全部选中项。
		// 规则是：某一项选中，则子项全选中；相邻节点全选中，则父节点选中。
		// 与 handleCheckState 部分功能重合，TODO：优化合并起来。
		
		function filterAllCheckedData(vs, treeNodes) {
		  var vals = [].concat(_toConsumableArray(vs));
		  if (!vals.length) {
		    return vals;
		  }
		
		  var data = recursiveGen(treeNodes);
		  var checkedNodesPositions = [];
		
		  function checkChildren(children) {
		    children.forEach(function (item) {
		      if (item.__checked) {
		        return;
		      }
		      var ci = vals.indexOf(item.value);
		      var childs = item.children;
		      if (ci > -1) {
		        item.__checked = true;
		        checkedNodesPositions.push({ node: item, pos: item._pos });
		        vals.splice(ci, 1);
		        if (childs) {
		          recursive(childs, function (child) {
		            child.__checked = true;
		            checkedNodesPositions.push({ node: child, pos: child._pos });
		          });
		        }
		      } else {
		        if (childs) {
		          checkChildren(childs);
		        }
		      }
		    });
		  }
		
		  function checkParent(children) {
		    var parent = arguments.length <= 1 || arguments[1] === undefined ? { root: true } : arguments[1];
		
		    var siblingChecked = 0;
		    children.forEach(function (item) {
		      var childs = item.children;
		      if (childs && !item.__checked && !item.__halfChecked) {
		        var p = checkParent(childs, item);
		        if (p.__checked) {
		          siblingChecked++;
		        } else if (p.__halfChecked) {
		          siblingChecked += 0.5;
		        }
		      } else if (item.__checked) {
		        siblingChecked++;
		      } else if (item.__halfChecked) {
		        siblingChecked += 0.5;
		      }
		    });
		    var len = children.length;
		    if (siblingChecked === len) {
		      parent.__checked = true;
		      checkedNodesPositions.push({ node: parent, pos: parent._pos });
		    } else if (siblingChecked < len && siblingChecked > 0) {
		      parent.__halfChecked = true;
		    }
		    if (parent.root) {
		      return children;
		    }
		    return parent;
		  }
		  checkChildren(data);
		  checkParent(data);
		
		  checkedNodesPositions.forEach(function (i, index) {
		    // 清理掉私有数据
		    delete checkedNodesPositions[index].node.__checked;
		    delete checkedNodesPositions[index].node._pos;
		    // 封装出 props 和 onCheck 返回值一致
		    checkedNodesPositions[index].node.props = {
		      title: checkedNodesPositions[index].node.title,
		      label: checkedNodesPositions[index].node.label || checkedNodesPositions[index].node.title,
		      value: checkedNodesPositions[index].node.value
		    };
		    if (checkedNodesPositions[index].node.children) {
		      checkedNodesPositions[index].node.props.children = checkedNodesPositions[index].node.children;
		    }
		    delete checkedNodesPositions[index].node.title;
		    delete checkedNodesPositions[index].node.label;
		    delete checkedNodesPositions[index].node.value;
		    delete checkedNodesPositions[index].node.children;
		  });
		  return checkedNodesPositions;
		}
		
		function processSimpleTreeData(treeData, format) {
		  function unflatten2(array) {
		    var parent = arguments.length <= 1 || arguments[1] === undefined ? _defineProperty({}, format.id, format.rootPId) : arguments[1];
		
		    var children = [];
		    for (var i = 0; i < array.length; i++) {
		      if (array[i][format.pId] === parent[format.id]) {
		        array[i].key = array[i][format.id];
		        children.push(array[i]);
		        array.splice(i--, 1);
		      }
		    }
		    if (children.length) {
		      parent.children = children;
		      children.forEach(function (child) {
		        return unflatten2(array, child);
		      });
		    }
		    if (parent[format.id] === format.rootPId) {
		      return children;
		    }
		  }
		  return unflatten2(treeData);
		}
	
	/***/ },
	/* 120 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		var _Tree = __webpack_require__(389);
		
		var _Tree2 = _interopRequireDefault(_Tree);
		
		var _TreeNode = __webpack_require__(390);
		
		var _TreeNode2 = _interopRequireDefault(_TreeNode);
		
		_Tree2['default'].TreeNode = _TreeNode2['default'];
		
		exports['default'] = _Tree2['default'];
		module.exports = exports['default'];
	
	/***/ },
	/* 121 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* eslint no-loop-func: 0*/
		
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		exports.browser = browser;
		exports.getOffset = getOffset;
		exports.loopAllChildren = loopAllChildren;
		exports.isInclude = isInclude;
		exports.filterParentPosition = filterParentPosition;
		exports.handleCheckState = handleCheckState;
		exports.getCheck = getCheck;
		exports.getStrictlyValue = getStrictlyValue;
		exports.arraysEqual = arraysEqual;
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		function browser(navigator) {
		  var tem = undefined;
		  var ua = navigator.userAgent;
		  var M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || [];
		  if (/trident/i.test(M[1])) {
		    tem = /\brv[ :]+(\d+)/g.exec(ua) || [];
		    return 'IE ' + (tem[1] || '');
		  }
		  if (M[1] === 'Chrome') {
		    tem = ua.match(/\b(OPR|Edge)\/(\d+)/);
		    if (tem) return tem.slice(1).join(' ').replace('OPR', 'Opera');
		  }
		  M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, '-?'];
		  tem = ua.match(/version\/(\d+)/i);
		  if (tem) {
		    M.splice(1, 1, tem[1]);
		  }
		  return M.join(' ');
		}
		
		// export function getOffset(el) {
		//   const obj = el.getBoundingClientRect();
		//   return {
		//     left: obj.left + document.body.scrollLeft,
		//     top: obj.top + document.body.scrollTop,
		//     width: obj.width,
		//     height: obj.height
		//   };
		// }
		
		// // iscroll offset
		// offset = function (el) {
		//   var left = -el.offsetLeft,
		//     top = -el.offsetTop;
		
		//   // jshint -W084
		//   while (el = el.offsetParent) {
		//     left -= el.offsetLeft;
		//     top -= el.offsetTop;
		//   }
		//   // jshint +W084
		
		//   return {
		//     left: left,
		//     top: top
		//   };
		// }
		
		/* eslint-disable */
		
		function getOffset(ele) {
		  var doc = undefined,
		      win = undefined,
		      docElem = undefined,
		      rect = undefined;
		
		  if (!ele.getClientRects().length) {
		    return { top: 0, left: 0 };
		  }
		
		  rect = ele.getBoundingClientRect();
		
		  if (rect.width || rect.height) {
		    doc = ele.ownerDocument;
		    win = doc.defaultView;
		    docElem = doc.documentElement;
		
		    return {
		      top: rect.top + win.pageYOffset - docElem.clientTop,
		      left: rect.left + win.pageXOffset - docElem.clientLeft
		    };
		  }
		
		  return rect;
		}
		
		/* eslint-enable */
		
		function getChildrenlength(children) {
		  var len = 1;
		  if (Array.isArray(children)) {
		    len = children.length;
		  }
		  return len;
		}
		
		function getSiblingPosition(index, len, siblingPosition) {
		  if (len === 1) {
		    siblingPosition.first = true;
		    siblingPosition.last = true;
		  } else {
		    siblingPosition.first = index === 0;
		    siblingPosition.last = index === len - 1;
		  }
		  return siblingPosition;
		}
		
		function loopAllChildren(childs, callback, parent) {
		  var loop = function loop(children, level, _parent) {
		    var len = getChildrenlength(children);
		    _react2['default'].Children.forEach(children, function (item, index) {
		      var pos = level + '-' + index;
		      if (item.props.children && item.type && item.type.isTreeNode) {
		        loop(item.props.children, pos, { node: item, pos: pos });
		      }
		      callback(item, index, pos, item.key || pos, getSiblingPosition(index, len, {}), _parent);
		    });
		  };
		  loop(childs, 0, parent);
		}
		
		function isInclude(smallArray, bigArray) {
		  return smallArray.every(function (ii, i) {
		    return ii === bigArray[i];
		  });
		}
		
		// console.log(isInclude(['0', '1'], ['0', '10', '1']));
		
		// arr.length === 628, use time: ~20ms
		
		function filterParentPosition(arr) {
		  var levelObj = {};
		  arr.forEach(function (item) {
		    var posLen = item.split('-').length;
		    if (!levelObj[posLen]) {
		      levelObj[posLen] = [];
		    }
		    levelObj[posLen].push(item);
		  });
		  var levelArr = Object.keys(levelObj).sort();
		
		  var _loop = function (i) {
		    if (levelArr[i + 1]) {
		      levelObj[levelArr[i]].forEach(function (ii) {
		        var _loop2 = function (j) {
		          levelObj[levelArr[j]].forEach(function (_i, index) {
		            if (isInclude(ii.split('-'), _i.split('-'))) {
		              levelObj[levelArr[j]][index] = null;
		            }
		          });
		          levelObj[levelArr[j]] = levelObj[levelArr[j]].filter(function (p) {
		            return p;
		          });
		        };
		
		        for (var j = i + 1; j < levelArr.length; j++) {
		          _loop2(j);
		        }
		      });
		    }
		  };
		
		  for (var i = 0; i < levelArr.length; i++) {
		    _loop(i);
		  }
		  var nArr = [];
		  levelArr.forEach(function (i) {
		    nArr = nArr.concat(levelObj[i]);
		  });
		  return nArr;
		}
		
		// console.log(filterParentPosition(['0-2', '0-3-3', '0-10', '0-10-0', '0-0-1', '0-0', '0-1-1', '0-1']));
		
		function stripTail(str) {
		  var arr = str.match(/(.+)(-[^-]+)$/);
		  var st = '';
		  if (arr && arr.length === 3) {
		    st = arr[1];
		  }
		  return st;
		}
		function splitPosition(pos) {
		  return pos.split('-');
		}
		
		function handleCheckState(obj, checkedPositionArr, checkIt) {
		  // console.log(stripTail('0-101-000'));
		  var objKeys = Object.keys(obj);
		  // let s = Date.now();
		  objKeys.forEach(function (i, index) {
		    var iArr = splitPosition(i);
		    var saved = false;
		    checkedPositionArr.forEach(function (_pos) {
		      // 设置子节点，全选或全不选
		      var _posArr = splitPosition(_pos);
		      if (iArr.length > _posArr.length && isInclude(_posArr, iArr)) {
		        obj[i].halfChecked = false;
		        obj[i].checked = checkIt;
		        objKeys[index] = null;
		      }
		      if (iArr[0] === _posArr[0] && iArr[1] === _posArr[1]) {
		        // 如果
		        saved = true;
		      }
		    });
		    if (!saved) {
		      objKeys[index] = null;
		    }
		  });
		  // TODO: 循环 2470000 次耗时约 1400 ms。 性能瓶颈！
		  // console.log(Date.now()-s, checkedPositionArr.length * objKeys.length);
		  objKeys = objKeys.filter(function (i) {
		    return i;
		  }); // filter non null;
		
		  var _loop3 = function (_pIndex) {
		    // 循环设置父节点的 选中 或 半选状态
		    var loop = function loop(__pos) {
		      var _posLen = splitPosition(__pos).length;
		      if (_posLen <= 2) {
		        // e.g. '0-0', '0-1'
		        return;
		      }
		      var sibling = 0;
		      var siblingChecked = 0;
		      var parentPosition = stripTail(__pos);
		      objKeys.forEach(function (i /* , index*/) {
		        var iArr = splitPosition(i);
		        if (iArr.length === _posLen && isInclude(splitPosition(parentPosition), iArr)) {
		          sibling++;
		          if (obj[i].checked) {
		            siblingChecked++;
		            var _i = checkedPositionArr.indexOf(i);
		            if (_i > -1) {
		              checkedPositionArr.splice(_i, 1);
		              if (_i <= _pIndex) {
		                _pIndex--;
		              }
		            }
		          } else if (obj[i].halfChecked) {
		            siblingChecked += 0.5;
		          }
		          // objKeys[index] = null;
		        }
		      });
		      // objKeys = objKeys.filter(i => i); // filter non null;
		      var parent = obj[parentPosition];
		      // sibling 不会等于0
		      // 全不选 - 全选 - 半选
		      if (siblingChecked === 0) {
		        parent.checked = false;
		        parent.halfChecked = false;
		      } else if (siblingChecked === sibling) {
		        parent.checked = true;
		        parent.halfChecked = false;
		      } else {
		        parent.halfChecked = true;
		        parent.checked = false;
		      }
		      loop(parentPosition);
		    };
		    loop(checkedPositionArr[_pIndex], _pIndex);
		    pIndex = _pIndex;
		  };
		
		  for (var pIndex = 0; pIndex < checkedPositionArr.length; pIndex++) {
		    _loop3(pIndex);
		  }
		  // console.log(Date.now()-s, objKeys.length, checkIt);
		}
		
		function getCheck(treeNodesStates) {
		  var halfCheckedKeys = [];
		  var checkedKeys = [];
		  var checkedNodes = [];
		  var checkedNodesPositions = [];
		  Object.keys(treeNodesStates).forEach(function (item) {
		    var itemObj = treeNodesStates[item];
		    if (itemObj.checked) {
		      checkedKeys.push(itemObj.key);
		      checkedNodes.push(itemObj.node);
		      checkedNodesPositions.push({ node: itemObj.node, pos: item });
		    } else if (itemObj.halfChecked) {
		      halfCheckedKeys.push(itemObj.key);
		    }
		  });
		  return {
		    halfCheckedKeys: halfCheckedKeys, checkedKeys: checkedKeys, checkedNodes: checkedNodes, checkedNodesPositions: checkedNodesPositions, treeNodesStates: treeNodesStates
		  };
		}
		
		function getStrictlyValue(checkedKeys, halfChecked) {
		  if (halfChecked) {
		    return { checked: checkedKeys, halfChecked: halfChecked };
		  }
		  return checkedKeys;
		}
		
		function arraysEqual(a, b) {
		  if (a === b) return true;
		  if (a === null || typeof a === 'undefined' || b === null || typeof b === 'undefined') return false;
		  if (a.length !== b.length) return false;
		
		  // If you don't care about the order of the elements inside
		  // the array, you should sort both arrays here.
		
		  for (var i = 0; i < a.length; ++i) {
		    if (a[i] !== b[i]) return false;
		  }
		  return true;
		}
	
	/***/ },
	/* 122 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
		
		var LazyRenderBox = _react2["default"].createClass({
		  displayName: 'LazyRenderBox',
		
		  propTypes: {
		    children: _react.PropTypes.any,
		    className: _react.PropTypes.string,
		    visible: _react.PropTypes.bool,
		    hiddenClassName: _react.PropTypes.string
		  },
		  shouldComponentUpdate: function shouldComponentUpdate(nextProps) {
		    return nextProps.hiddenClassName || nextProps.visible;
		  },
		  render: function render() {
		    var _props = this.props;
		    var hiddenClassName = _props.hiddenClassName;
		    var visible = _props.visible;
		
		    var props = _objectWithoutProperties(_props, ['hiddenClassName', 'visible']);
		
		    if (hiddenClassName || _react2["default"].Children.count(props.children) > 1) {
		      if (!visible && hiddenClassName) {
		        props.className += ' ' + hiddenClassName;
		      }
		      return _react2["default"].createElement('div', props);
		    }
		
		    return _react2["default"].Children.only(props.children);
		  }
		});
		
		exports["default"] = LazyRenderBox;
		module.exports = exports['default'];
	
	/***/ },
	/* 123 */
	/***/ function(module, exports) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		exports['default'] = uid;
		var now = +new Date();
		var index = 0;
		
		function uid() {
		  return 'rc-upload-' + now + '-' + ++index;
		}
		
		module.exports = exports['default'];
	
	/***/ },
	/* 124 */
	/***/ function(module, exports) {
	
		'use strict';
		
		var seed = 0;
		module.exports = function guid() {
		  return Date.now() + '_' + seed++;
		};
	
	/***/ },
	/* 125 */
	/***/ function(module, exports) {
	
		'use strict';
		
		var defaultProps = {
		    className: '',
		    // accessibility: true,
		    adaptiveHeight: false,
		    arrows: true,
		    autoplay: false,
		    autoplaySpeed: 3000,
		    centerMode: false,
		    centerPadding: '50px',
		    cssEase: 'ease',
		    dots: false,
		    dotsClass: 'slick-dots',
		    draggable: true,
		    easing: 'linear',
		    edgeFriction: 0.35,
		    fade: false,
		    focusOnSelect: false,
		    infinite: true,
		    initialSlide: 0,
		    lazyLoad: false,
		    pauseOnHover: false,
		    responsive: null,
		    rtl: false,
		    slide: 'div',
		    slidesToShow: 1,
		    slidesToScroll: 1,
		    speed: 500,
		    swipe: true,
		    swipeToSlide: false,
		    touchMove: true,
		    touchThreshold: 5,
		    useCSS: true,
		    variableWidth: false,
		    vertical: false,
		    waitForAnimate: true,
		    afterChange: null,
		    beforeChange: null,
		    edgeEvent: null,
		    init: null,
		    swipeEvent: null,
		    // nextArrow, prevArrow are react componets
		    nextArrow: null,
		    prevArrow: null
		};
		
		module.exports = defaultProps;
	
	/***/ },
	/* 126 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _reactDom = __webpack_require__(4);
		
		var _reactDom2 = _interopRequireDefault(_reactDom);
		
		var ReactDOM = _react2['default'].version >= '0.14.0' ? _reactDom2['default'] : _react2['default'];
		
		exports['default'] = ReactDOM;
		module.exports = exports['default'];
	
	/***/ },
	/* 127 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _ReactDOM = __webpack_require__(126);
		
		var _ReactDOM2 = _interopRequireDefault(_ReactDOM);
		
		var _reactLibReactTransitionEvents = __webpack_require__(415);
		
		var _reactLibReactTransitionEvents2 = _interopRequireDefault(_reactLibReactTransitionEvents);
		
		var _trackHelper = __webpack_require__(128);
		
		var _objectAssign = __webpack_require__(34);
		
		var _objectAssign2 = _interopRequireDefault(_objectAssign);
		
		var helpers = {
		  initialize: function initialize(props) {
		    var slideCount = _react2['default'].Children.count(props.children);
		    var listWidth = this.getWidth(_ReactDOM2['default'].findDOMNode(this.refs.list));
		    var trackWidth = this.getWidth(_ReactDOM2['default'].findDOMNode(this.refs.track));
		    var slideWidth = this.getWidth(_ReactDOM2['default'].findDOMNode(this)) / props.slidesToShow;
		
		    var currentSlide = props.rtl ? slideCount - 1 - props.initialSlide : props.initialSlide;
		
		    this.setState({
		      slideCount: slideCount,
		      slideWidth: slideWidth,
		      listWidth: listWidth,
		      trackWidth: trackWidth,
		      currentSlide: currentSlide
		    }, function () {
		
		      var targetLeft = (0, _trackHelper.getTrackLeft)((0, _objectAssign2['default'])({
		        slideIndex: this.state.currentSlide,
		        trackRef: this.refs.track
		      }, props, this.state));
		      // getCSS function needs previously set state
		      var trackStyle = (0, _trackHelper.getTrackCSS)((0, _objectAssign2['default'])({ left: targetLeft }, props, this.state));
		
		      this.setState({ trackStyle: trackStyle });
		
		      this.autoPlay(); // once we're set up, trigger the initial autoplay.
		    });
		  },
		  update: function update(props) {
		    // This method has mostly same code as initialize method.
		    // Refactor it
		    var slideCount = _react2['default'].Children.count(props.children);
		    var listWidth = this.getWidth(_ReactDOM2['default'].findDOMNode(this.refs.list));
		    var trackWidth = this.getWidth(_ReactDOM2['default'].findDOMNode(this.refs.track));
		    var slideWidth = this.getWidth(_ReactDOM2['default'].findDOMNode(this)) / props.slidesToShow;
		
		    this.setState({
		      slideCount: slideCount,
		      slideWidth: slideWidth,
		      listWidth: listWidth,
		      trackWidth: trackWidth
		    }, function () {
		
		      var targetLeft = (0, _trackHelper.getTrackLeft)((0, _objectAssign2['default'])({
		        slideIndex: this.state.currentSlide,
		        trackRef: this.refs.track
		      }, props, this.state));
		      // getCSS function needs previously set state
		      var trackStyle = (0, _trackHelper.getTrackCSS)((0, _objectAssign2['default'])({ left: targetLeft }, props, this.state));
		
		      this.setState({ trackStyle: trackStyle });
		    });
		  },
		  getWidth: function getWidth(elem) {
		    return elem.getBoundingClientRect().width || elem.offsetWidth;
		  },
		  adaptHeight: function adaptHeight() {
		    if (this.props.adaptiveHeight) {
		      var selector = '[data-index="' + this.state.currentSlide + '"]';
		      if (this.refs.list) {
		        var slickList = _ReactDOM2['default'].findDOMNode(this.refs.list);
		        slickList.style.height = slickList.querySelector(selector).offsetHeight + 'px';
		      }
		    }
		  },
		  slideHandler: function slideHandler(index) {
		    var _this = this;
		
		    // Functionality of animateSlide and postSlide is merged into this function
		    // console.log('slideHandler', index);
		    var targetSlide, currentSlide;
		    var targetLeft, currentLeft;
		    var callback;
		
		    if (this.props.waitForAnimate && this.state.animating) {
		      return;
		    }
		
		    if (this.props.fade) {
		      currentSlide = this.state.currentSlide;
		
		      //  Shifting targetSlide back into the range
		      if (index < 0) {
		        targetSlide = index + this.state.slideCount;
		      } else if (index >= this.state.slideCount) {
		        targetSlide = index - this.state.slideCount;
		      } else {
		        targetSlide = index;
		      }
		
		      if (this.props.lazyLoad && this.state.lazyLoadedList.indexOf(targetSlide) < 0) {
		        this.setState({
		          lazyLoadedList: this.state.lazyLoadedList.concat(targetSlide)
		        });
		      }
		
		      callback = function () {
		        _this.setState({
		          animating: false
		        });
		        if (_this.props.afterChange) {
		          _this.props.afterChange(currentSlide);
		        }
		        _reactLibReactTransitionEvents2['default'].removeEndEventListener(_ReactDOM2['default'].findDOMNode(_this.refs.track).children[currentSlide], callback);
		      };
		
		      this.setState({
		        animating: true,
		        currentSlide: targetSlide
		      }, function () {
		        _reactLibReactTransitionEvents2['default'].addEndEventListener(_ReactDOM2['default'].findDOMNode(this.refs.track).children[currentSlide], callback);
		      });
		
		      if (this.props.beforeChange) {
		        this.props.beforeChange(this.state.currentSlide, currentSlide);
		      }
		
		      this.autoPlay();
		      return;
		    }
		
		    targetSlide = index;
		    if (targetSlide < 0) {
		      if (this.props.infinite === false) {
		        currentSlide = 0;
		      } else if (this.state.slideCount % this.props.slidesToScroll !== 0) {
		        currentSlide = this.state.slideCount - this.state.slideCount % this.props.slidesToScroll;
		      } else {
		        currentSlide = this.state.slideCount + targetSlide;
		      }
		    } else if (targetSlide >= this.state.slideCount) {
		      if (this.props.infinite === false) {
		        currentSlide = this.state.slideCount - this.props.slidesToShow;
		      } else if (this.state.slideCount % this.props.slidesToScroll !== 0) {
		        currentSlide = 0;
		      } else {
		        currentSlide = targetSlide - this.state.slideCount;
		      }
		    } else {
		      currentSlide = targetSlide;
		    }
		
		    targetLeft = (0, _trackHelper.getTrackLeft)((0, _objectAssign2['default'])({
		      slideIndex: targetSlide,
		      trackRef: this.refs.track
		    }, this.props, this.state));
		
		    currentLeft = (0, _trackHelper.getTrackLeft)((0, _objectAssign2['default'])({
		      slideIndex: currentSlide,
		      trackRef: this.refs.track
		    }, this.props, this.state));
		
		    if (this.props.infinite === false) {
		      targetLeft = currentLeft;
		    }
		
		    if (this.props.beforeChange) {
		      this.props.beforeChange(this.state.currentSlide, currentSlide);
		    }
		
		    if (this.props.lazyLoad) {
		      var loaded = true;
		      var slidesToLoad = [];
		      for (var i = targetSlide; i < targetSlide + this.props.slidesToShow; i++) {
		        loaded = loaded && this.state.lazyLoadedList.indexOf(i) >= 0;
		        if (!loaded) {
		          slidesToLoad.push(i);
		        }
		      }
		      if (!loaded) {
		        this.setState({
		          lazyLoadedList: this.state.lazyLoadedList.concat(slidesToLoad)
		        });
		      }
		    }
		
		    // Slide Transition happens here.
		    // animated transition happens to target Slide and
		    // non - animated transition happens to current Slide
		    // If CSS transitions are false, directly go the current slide.
		
		    if (this.props.useCSS === false) {
		
		      this.setState({
		        currentSlide: currentSlide,
		        trackStyle: (0, _trackHelper.getTrackCSS)((0, _objectAssign2['default'])({ left: currentLeft }, this.props, this.state))
		      }, function () {
		        if (this.props.afterChange) {
		          this.props.afterChange(currentSlide);
		        }
		      });
		    } else {
		
		      var nextStateChanges = {
		        animating: false,
		        currentSlide: currentSlide,
		        trackStyle: (0, _trackHelper.getTrackCSS)((0, _objectAssign2['default'])({ left: currentLeft }, this.props, this.state)),
		        swipeLeft: null
		      };
		
		      callback = function () {
		        _this.setState(nextStateChanges);
		        if (_this.props.afterChange) {
		          _this.props.afterChange(currentSlide);
		        }
		        _reactLibReactTransitionEvents2['default'].removeEndEventListener(_ReactDOM2['default'].findDOMNode(_this.refs.track), callback);
		      };
		
		      this.setState({
		        animating: true,
		        currentSlide: currentSlide,
		        trackStyle: (0, _trackHelper.getTrackAnimateCSS)((0, _objectAssign2['default'])({ left: targetLeft }, this.props, this.state))
		      }, function () {
		        _reactLibReactTransitionEvents2['default'].addEndEventListener(_ReactDOM2['default'].findDOMNode(this.refs.track), callback);
		      });
		    }
		
		    this.autoPlay();
		  },
		  swipeDirection: function swipeDirection(touchObject) {
		    var xDist, yDist, r, swipeAngle;
		
		    xDist = touchObject.startX - touchObject.curX;
		    yDist = touchObject.startY - touchObject.curY;
		    r = Math.atan2(yDist, xDist);
		
		    swipeAngle = Math.round(r * 180 / Math.PI);
		    if (swipeAngle < 0) {
		      swipeAngle = 360 - Math.abs(swipeAngle);
		    }
		    if (swipeAngle <= 45 && swipeAngle >= 0 || swipeAngle <= 360 && swipeAngle >= 315) {
		      return this.props.rtl === false ? 'left' : 'right';
		    }
		    if (swipeAngle >= 135 && swipeAngle <= 225) {
		      return this.props.rtl === false ? 'right' : 'left';
		    }
		
		    return 'vertical';
		  },
		  autoPlay: function autoPlay() {
		    var _this2 = this;
		
		    if (this.state.autoPlayTimer) {
		      return;
		    }
		    var play = function play() {
		      if (_this2.state.mounted) {
		        var nextIndex = _this2.props.rtl ? _this2.state.currentSlide - _this2.props.slidesToScroll : _this2.state.currentSlide + _this2.props.slidesToScroll;
		        _this2.slideHandler(nextIndex);
		      }
		    };
		    if (this.props.autoplay) {
		      this.setState({
		        autoPlayTimer: window.setInterval(play, this.props.autoplaySpeed)
		      });
		    }
		  },
		  pause: function pause() {
		    if (this.state.autoPlayTimer) {
		      window.clearInterval(this.state.autoPlayTimer);
		      this.setState({
		        autoPlayTimer: null
		      });
		    }
		  }
		};
		
		exports['default'] = helpers;
		module.exports = exports['default'];
	
	/***/ },
	/* 128 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		var _ReactDOM = __webpack_require__(126);
		
		var _ReactDOM2 = _interopRequireDefault(_ReactDOM);
		
		var checkSpecKeys = function checkSpecKeys(spec, keysArray) {
		  return keysArray.reduce(function (value, key) {
		    return value && spec.hasOwnProperty(key);
		  }, true) ? null : console.error('Keys Missing', spec);
		};
		
		var getTrackCSS = function getTrackCSS(spec) {
		  checkSpecKeys(spec, ['left', 'variableWidth', 'slideCount', 'slidesToShow', 'slideWidth']);
		
		  var trackWidth;
		
		  if (spec.variableWidth) {
		    trackWidth = (spec.slideCount + 2 * spec.slidesToShow) * spec.slideWidth;
		  } else if (spec.centerMode) {
		    trackWidth = (spec.slideCount + 2 * (spec.slidesToShow + 1)) * spec.slideWidth;
		  } else {
		    trackWidth = (spec.slideCount + 2 * spec.slidesToShow) * spec.slideWidth;
		  }
		
		  var style = {
		    opacity: 1,
		    width: trackWidth,
		    WebkitTransform: 'translate3d(' + spec.left + 'px, 0px, 0px)',
		    transform: 'translate3d(' + spec.left + 'px, 0px, 0px)',
		    transition: '',
		    WebkitTransition: '',
		    msTransform: 'translateX(' + spec.left + 'px)'
		  };
		
		  // Fallback for IE8
		  if (!window.addEventListener && window.attachEvent) {
		    style.marginLeft = spec.left + 'px';
		  }
		
		  return style;
		};
		
		exports.getTrackCSS = getTrackCSS;
		var getTrackAnimateCSS = function getTrackAnimateCSS(spec) {
		  checkSpecKeys(spec, ['left', 'variableWidth', 'slideCount', 'slidesToShow', 'slideWidth', 'speed', 'cssEase']);
		
		  var style = getTrackCSS(spec);
		  // useCSS is true by default so it can be undefined
		  style.WebkitTransition = '-webkit-transform ' + spec.speed + 'ms ' + spec.cssEase;
		  style.transition = 'transform ' + spec.speed + 'ms ' + spec.cssEase;
		  return style;
		};
		
		exports.getTrackAnimateCSS = getTrackAnimateCSS;
		var getTrackLeft = function getTrackLeft(spec) {
		
		  checkSpecKeys(spec, ['slideIndex', 'trackRef', 'infinite', 'centerMode', 'slideCount', 'slidesToShow', 'slidesToScroll', 'slideWidth', 'listWidth', 'variableWidth']);
		
		  var slideOffset = 0;
		  var targetLeft;
		  var targetSlide;
		
		  if (spec.fade) {
		    return 0;
		  }
		
		  if (spec.infinite) {
		    if (spec.slideCount > spec.slidesToShow) {
		      slideOffset = spec.slideWidth * spec.slidesToShow * -1;
		    }
		    if (spec.slideCount % spec.slidesToScroll !== 0) {
		      if (spec.slideIndex + spec.slidesToScroll > spec.slideCount && spec.slideCount > spec.slidesToShow) {
		        if (spec.slideIndex > spec.slideCount) {
		          slideOffset = (spec.slidesToShow - (spec.slideIndex - spec.slideCount)) * spec.slideWidth * -1;
		        } else {
		          slideOffset = spec.slideCount % spec.slidesToScroll * spec.slideWidth * -1;
		        }
		      }
		    }
		  }
		
		  if (spec.centerMode) {
		    if (spec.infinite) {
		      slideOffset += spec.slideWidth * Math.floor(spec.slidesToShow / 2);
		    } else {
		      slideOffset = spec.slideWidth * Math.floor(spec.slidesToShow / 2);
		    }
		  }
		
		  targetLeft = spec.slideIndex * spec.slideWidth * -1 + slideOffset;
		
		  if (spec.variableWidth === true) {
		    var targetSlideIndex;
		    if (spec.slideCount <= spec.slidesToShow || spec.infinite === false) {
		      targetSlide = _ReactDOM2['default'].findDOMNode(spec.trackRef).childNodes[spec.slideIndex];
		    } else {
		      targetSlideIndex = spec.slideIndex + spec.slidesToShow;
		      targetSlide = _ReactDOM2['default'].findDOMNode(spec.trackRef).childNodes[targetSlideIndex];
		    }
		    targetLeft = targetSlide ? targetSlide.offsetLeft * -1 : 0;
		    if (spec.centerMode === true) {
		      if (spec.infinite === false) {
		        targetSlide = _ReactDOM2['default'].findDOMNode(spec.trackRef).children[spec.slideIndex];
		      } else {
		        targetSlide = _ReactDOM2['default'].findDOMNode(spec.trackRef).children[spec.slideIndex + spec.slidesToShow + 1];
		      }
		
		      targetLeft = targetSlide ? targetSlide.offsetLeft * -1 : 0;
		      targetLeft += (spec.listWidth - targetSlide.offsetWidth) / 2;
		    }
		  }
		
		  return targetLeft;
		};
		exports.getTrackLeft = getTrackLeft;
	
	/***/ },
	/* 129 */
	/***/ function(module, exports) {
	
		/* WEBPACK VAR INJECTION */(function(global) {
		/**
		 * Module exports.
		 */
		
		module.exports = deprecate;
		
		/**
		 * Mark that a method should not be used.
		 * Returns a modified function which warns once by default.
		 *
		 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
		 *
		 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
		 * will throw an Error when invoked.
		 *
		 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
		 * will invoke `console.trace()` instead of `console.error()`.
		 *
		 * @param {Function} fn - the function to deprecate
		 * @param {String} msg - the string to print to the console when `fn` is invoked
		 * @returns {Function} a new "deprecated" version of `fn`
		 * @api public
		 */
		
		function deprecate (fn, msg) {
		  if (config('noDeprecation')) {
		    return fn;
		  }
		
		  var warned = false;
		  function deprecated() {
		    if (!warned) {
		      if (config('throwDeprecation')) {
		        throw new Error(msg);
		      } else if (config('traceDeprecation')) {
		        console.trace(msg);
		      } else {
		        console.warn(msg);
		      }
		      warned = true;
		    }
		    return fn.apply(this, arguments);
		  }
		
		  return deprecated;
		}
		
		/**
		 * Checks `localStorage` for boolean values for the given `name`.
		 *
		 * @param {String} name
		 * @returns {Boolean}
		 * @api private
		 */
		
		function config (name) {
		  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
		  try {
		    if (!global.localStorage) return false;
		  } catch (_) {
		    return false;
		  }
		  var val = global.localStorage[name];
		  if (null == val) return false;
		  return String(val).toLowerCase() === 'true';
		}
		
		/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))
	
	/***/ },
	/* 130 */
	/***/ function(module, exports, __webpack_require__) {
	
		var map = {
			"./affix/index.jsx": 153,
			"./affix/style/index.js": 154,
			"./alert/index.jsx": 155,
			"./alert/style/index.js": 156,
			"./back-top/index.jsx": 157,
			"./back-top/style/index.js": 158,
			"./badge/index.jsx": 160,
			"./badge/style/index.js": 161,
			"./breadcrumb/index.jsx": 163,
			"./breadcrumb/style/index.js": 164,
			"./button/index.jsx": 19,
			"./button/style/index.js": 25,
			"./calendar/index.jsx": 168,
			"./calendar/style/index.js": 170,
			"./card/index.jsx": 171,
			"./card/style/index.js": 172,
			"./carousel/index.jsx": 173,
			"./carousel/style/index.js": 174,
			"./cascader/index.jsx": 175,
			"./cascader/style/index.js": 176,
			"./checkbox/index.jsx": 20,
			"./checkbox/style/index.js": 21,
			"./col/index.js": 59,
			"./col/style/index.js": 178,
			"./collapse/index.jsx": 179,
			"./collapse/style/index.js": 180,
			"./date-picker/index.jsx": 184,
			"./date-picker/style/index.js": 185,
			"./dropdown/index.jsx": 62,
			"./dropdown/style/index.js": 63,
			"./form/index.jsx": 191,
			"./form/style/index.js": 192,
			"./icon/index.jsx": 6,
			"./icon/style/index.js": 193,
			"./input-number/index.jsx": 194,
			"./input-number/style/index.js": 195,
			"./input/index.jsx": 65,
			"./input/style/index.js": 15,
			"./layout/index.jsx": 37,
			"./layout/style/index.js": 66,
			"./locale-provider/index.jsx": 201,
			"./locale-provider/style/index.js": 202,
			"./menu/index.jsx": 203,
			"./menu/style/index.js": 204,
			"./message/index.jsx": 205,
			"./message/style/index.js": 206,
			"./modal/index.jsx": 208,
			"./modal/style/index.js": 209,
			"./notification/index.jsx": 210,
			"./notification/style/index.js": 211,
			"./pagination/index.jsx": 69,
			"./pagination/style/index.js": 70,
			"./popconfirm/index.jsx": 215,
			"./popconfirm/style/index.js": 216,
			"./popover/index.jsx": 217,
			"./popover/style/index.js": 71,
			"./progress/index.jsx": 72,
			"./progress/style/index.js": 73,
			"./queue-anim/index.jsx": 219,
			"./queue-anim/style/index.js": 220,
			"./radio/index.jsx": 26,
			"./radio/style/index.js": 40,
			"./rate/index.jsx": 222,
			"./rate/style/index.js": 223,
			"./row/index.js": 75,
			"./row/style/index.js": 224,
			"./select/index.jsx": 27,
			"./select/style/index.js": 28,
			"./slider/index.jsx": 225,
			"./slider/style/index.js": 226,
			"./spin/index.jsx": 76,
			"./spin/style/index.js": 77,
			"./steps/index.jsx": 227,
			"./steps/style/index.js": 228,
			"./style/index.js": 229,
			"./switch/index.jsx": 230,
			"./switch/style/index.js": 231,
			"./table/index.jsx": 234,
			"./table/style/index.js": 235,
			"./tabs/index.jsx": 237,
			"./tabs/style/index.js": 238,
			"./tag/index.jsx": 239,
			"./tag/style/index.js": 240,
			"./time-picker/index.jsx": 241,
			"./time-picker/style/index.js": 79,
			"./timeline/index.jsx": 243,
			"./timeline/style/index.js": 244,
			"./tooltip/index.jsx": 41,
			"./tooltip/style/index.js": 81,
			"./transfer/index.jsx": 245,
			"./transfer/style/index.js": 248,
			"./tree-select/index.jsx": 249,
			"./tree-select/style/index.js": 250,
			"./tree/index.jsx": 251,
			"./tree/style/index.js": 252,
			"./upload/index.jsx": 254,
			"./upload/style/index.js": 255,
			"./validation/index.jsx": 257,
			"./validation/style/index.js": 258
		};
		function webpackContext(req) {
			return __webpack_require__(webpackContextResolve(req));
		};
		function webpackContextResolve(req) {
			return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
		};
		webpackContext.keys = function webpackContextKeys() {
			return Object.keys(map);
		};
		webpackContext.resolve = webpackContextResolve;
		module.exports = webpackContext;
		webpackContext.id = 130;
	
	
	/***/ },
	/* 131 */
	/***/ function(module, exports) {
	
		/**
		 * @ignore
		 * base event object for custom and dom event.
		 * @author yiminghe@gmail.com
		 */
		
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		function returnFalse() {
		  return false;
		}
		
		function returnTrue() {
		  return true;
		}
		
		function EventBaseObject() {
		  this.timeStamp = Date.now();
		  this.target = undefined;
		  this.currentTarget = undefined;
		}
		
		EventBaseObject.prototype = {
		  isEventObject: 1,
		
		  constructor: EventBaseObject,
		
		  isDefaultPrevented: returnFalse,
		
		  isPropagationStopped: returnFalse,
		
		  isImmediatePropagationStopped: returnFalse,
		
		  preventDefault: function preventDefault() {
		    this.isDefaultPrevented = returnTrue;
		  },
		
		  stopPropagation: function stopPropagation() {
		    this.isPropagationStopped = returnTrue;
		  },
		
		  stopImmediatePropagation: function stopImmediatePropagation() {
		    this.isImmediatePropagationStopped = returnTrue;
		    // fixed 1.2
		    // call stopPropagation implicitly
		    this.stopPropagation();
		  },
		
		  halt: function halt(immediate) {
		    if (immediate) {
		      this.stopImmediatePropagation();
		    } else {
		      this.stopPropagation();
		    }
		    this.preventDefault();
		  }
		};
		
		exports["default"] = EventBaseObject;
		module.exports = exports["default"];
	
	/***/ },
	/* 132 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * @ignore
		 * event object for dom
		 * @author yiminghe@gmail.com
		 */
		
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		var _EventBaseObject = __webpack_require__(131);
		
		var _EventBaseObject2 = _interopRequireDefault(_EventBaseObject);
		
		var _objectAssign = __webpack_require__(10);
		
		var _objectAssign2 = _interopRequireDefault(_objectAssign);
		
		var TRUE = true;
		var FALSE = false;
		var commonProps = ['altKey', 'bubbles', 'cancelable', 'ctrlKey', 'currentTarget', 'eventPhase', 'metaKey', 'shiftKey', 'target', 'timeStamp', 'view', 'type'];
		
		function isNullOrUndefined(w) {
		  return w === null || w === undefined;
		}
		
		var eventNormalizers = [{
		  reg: /^key/,
		  props: ['char', 'charCode', 'key', 'keyCode', 'which'],
		  fix: function fix(event, nativeEvent) {
		    if (isNullOrUndefined(event.which)) {
		      event.which = !isNullOrUndefined(nativeEvent.charCode) ? nativeEvent.charCode : nativeEvent.keyCode;
		    }
		
		    // add metaKey to non-Mac browsers (use ctrl for PC 's and Meta for Macs)
		    if (event.metaKey === undefined) {
		      event.metaKey = event.ctrlKey;
		    }
		  }
		}, {
		  reg: /^touch/,
		  props: ['touches', 'changedTouches', 'targetTouches']
		}, {
		  reg: /^hashchange$/,
		  props: ['newURL', 'oldURL']
		}, {
		  reg: /^gesturechange$/i,
		  props: ['rotation', 'scale']
		}, {
		  reg: /^(mousewheel|DOMMouseScroll)$/,
		  props: [],
		  fix: function fix(event, nativeEvent) {
		    var deltaX = undefined;
		    var deltaY = undefined;
		    var delta = undefined;
		    var wheelDelta = nativeEvent.wheelDelta;
		    var axis = nativeEvent.axis;
		    var wheelDeltaY = nativeEvent.wheelDeltaY;
		    var wheelDeltaX = nativeEvent.wheelDeltaX;
		    var detail = nativeEvent.detail;
		
		    // ie/webkit
		    if (wheelDelta) {
		      delta = wheelDelta / 120;
		    }
		
		    // gecko
		    if (detail) {
		      // press control e.detail == 1 else e.detail == 3
		      delta = 0 - (detail % 3 === 0 ? detail / 3 : detail);
		    }
		
		    // Gecko
		    if (axis !== undefined) {
		      if (axis === event.HORIZONTAL_AXIS) {
		        deltaY = 0;
		        deltaX = 0 - delta;
		      } else if (axis === event.VERTICAL_AXIS) {
		        deltaX = 0;
		        deltaY = delta;
		      }
		    }
		
		    // Webkit
		    if (wheelDeltaY !== undefined) {
		      deltaY = wheelDeltaY / 120;
		    }
		    if (wheelDeltaX !== undefined) {
		      deltaX = -1 * wheelDeltaX / 120;
		    }
		
		    // 默认 deltaY (ie)
		    if (!deltaX && !deltaY) {
		      deltaY = delta;
		    }
		
		    if (deltaX !== undefined) {
		      /**
		       * deltaX of mousewheel event
		       * @property deltaX
		       * @member Event.DomEvent.Object
		       */
		      event.deltaX = deltaX;
		    }
		
		    if (deltaY !== undefined) {
		      /**
		       * deltaY of mousewheel event
		       * @property deltaY
		       * @member Event.DomEvent.Object
		       */
		      event.deltaY = deltaY;
		    }
		
		    if (delta !== undefined) {
		      /**
		       * delta of mousewheel event
		       * @property delta
		       * @member Event.DomEvent.Object
		       */
		      event.delta = delta;
		    }
		  }
		}, {
		  reg: /^mouse|contextmenu|click|mspointer|(^DOMMouseScroll$)/i,
		  props: ['buttons', 'clientX', 'clientY', 'button', 'offsetX', 'relatedTarget', 'which', 'fromElement', 'toElement', 'offsetY', 'pageX', 'pageY', 'screenX', 'screenY'],
		  fix: function fix(event, nativeEvent) {
		    var eventDoc = undefined;
		    var doc = undefined;
		    var body = undefined;
		    var target = event.target;
		    var button = nativeEvent.button;
		
		    // Calculate pageX/Y if missing and clientX/Y available
		    if (target && isNullOrUndefined(event.pageX) && !isNullOrUndefined(nativeEvent.clientX)) {
		      eventDoc = target.ownerDocument || document;
		      doc = eventDoc.documentElement;
		      body = eventDoc.body;
		      event.pageX = nativeEvent.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);
		      event.pageY = nativeEvent.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);
		    }
		
		    // which for click: 1 === left; 2 === middle; 3 === right
		    // do not use button
		    if (!event.which && button !== undefined) {
		      if (button & 1) {
		        event.which = 1;
		      } else if (button & 2) {
		        event.which = 3;
		      } else if (button & 4) {
		        event.which = 2;
		      } else {
		        event.which = 0;
		      }
		    }
		
		    // add relatedTarget, if necessary
		    if (!event.relatedTarget && event.fromElement) {
		      event.relatedTarget = event.fromElement === target ? event.toElement : event.fromElement;
		    }
		
		    return event;
		  }
		}];
		
		function retTrue() {
		  return TRUE;
		}
		
		function retFalse() {
		  return FALSE;
		}
		
		function DomEventObject(nativeEvent) {
		  var type = nativeEvent.type;
		
		  var isNative = typeof nativeEvent.stopPropagation === 'function' || typeof nativeEvent.cancelBubble === 'boolean';
		
		  _EventBaseObject2['default'].call(this);
		
		  this.nativeEvent = nativeEvent;
		
		  // in case dom event has been mark as default prevented by lower dom node
		  var isDefaultPrevented = retFalse;
		  if ('defaultPrevented' in nativeEvent) {
		    isDefaultPrevented = nativeEvent.defaultPrevented ? retTrue : retFalse;
		  } else if ('getPreventDefault' in nativeEvent) {
		    // https://bugzilla.mozilla.org/show_bug.cgi?id=691151
		    isDefaultPrevented = nativeEvent.getPreventDefault() ? retTrue : retFalse;
		  } else if ('returnValue' in nativeEvent) {
		    isDefaultPrevented = nativeEvent.returnValue === FALSE ? retTrue : retFalse;
		  }
		
		  this.isDefaultPrevented = isDefaultPrevented;
		
		  var fixFns = [];
		  var fixFn = undefined;
		  var l = undefined;
		  var prop = undefined;
		  var props = commonProps.concat();
		
		  eventNormalizers.forEach(function (normalizer) {
		    if (type.match(normalizer.reg)) {
		      props = props.concat(normalizer.props);
		      if (normalizer.fix) {
		        fixFns.push(normalizer.fix);
		      }
		    }
		  });
		
		  l = props.length;
		
		  // clone properties of the original event object
		  while (l) {
		    prop = props[--l];
		    this[prop] = nativeEvent[prop];
		  }
		
		  // fix target property, if necessary
		  if (!this.target && isNative) {
		    this.target = nativeEvent.srcElement || document; // srcElement might not be defined either
		  }
		
		  // check if target is a text node (safari)
		  if (this.target && this.target.nodeType === 3) {
		    this.target = this.target.parentNode;
		  }
		
		  l = fixFns.length;
		
		  while (l) {
		    fixFn = fixFns[--l];
		    fixFn(this, nativeEvent);
		  }
		
		  this.timeStamp = nativeEvent.timeStamp || Date.now();
		}
		
		var EventBaseObjectProto = _EventBaseObject2['default'].prototype;
		
		(0, _objectAssign2['default'])(DomEventObject.prototype, EventBaseObjectProto, {
		  constructor: DomEventObject,
		
		  preventDefault: function preventDefault() {
		    var e = this.nativeEvent;
		
		    // if preventDefault exists run it on the original event
		    if (e.preventDefault) {
		      e.preventDefault();
		    } else {
		      // otherwise set the returnValue property of the original event to FALSE (IE)
		      e.returnValue = FALSE;
		    }
		
		    EventBaseObjectProto.preventDefault.call(this);
		  },
		
		  stopPropagation: function stopPropagation() {
		    var e = this.nativeEvent;
		
		    // if stopPropagation exists run it on the original event
		    if (e.stopPropagation) {
		      e.stopPropagation();
		    } else {
		      // otherwise set the cancelBubble property of the original event to TRUE (IE)
		      e.cancelBubble = TRUE;
		    }
		
		    EventBaseObjectProto.stopPropagation.call(this);
		  }
		});
		
		exports['default'] = DomEventObject;
		module.exports = exports['default'];
	
	/***/ },
	/* 133 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
		
		var _util = __webpack_require__(5);
		
		var _validator = __webpack_require__(145);
		
		var _validator2 = _interopRequireDefault(_validator);
		
		var _messages2 = __webpack_require__(134);
		
		var _rule = __webpack_require__(8);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		/**
		 *  Encapsulates a validation schema.
		 *
		 *  @param descriptor An object declaring validation rules
		 *  for this schema.
		 */
		function Schema(descriptor) {
		  this.rules = null;
		  this._messages = _messages2.messages;
		  this.define(descriptor);
		}
		
		Schema.prototype = {
		  messages: function messages(_messages) {
		    if (_messages) {
		      this._messages = (0, _util.deepMerge)((0, _messages2.newMessages)(), _messages);
		    }
		    return this._messages;
		  },
		  define: function define(rules) {
		    if (!rules) {
		      throw new Error('Cannot configure a schema with no rules');
		    }
		    if ((typeof rules === 'undefined' ? 'undefined' : _typeof(rules)) !== 'object' || Array.isArray(rules)) {
		      throw new Error('Rules must be an object');
		    }
		    this.rules = {};
		    var z = void 0;
		    var item = void 0;
		    for (z in rules) {
		      if (rules.hasOwnProperty(z)) {
		        item = rules[z];
		        this.rules[z] = Array.isArray(item) ? item : [item];
		      }
		    }
		  },
		  validate: function validate(source_) {
		    var _this = this;
		
		    var o = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
		    var oc = arguments[2];
		
		    var source = source_;
		    var options = o;
		    var callback = oc;
		    if (typeof options === 'function') {
		      callback = options;
		      options = {};
		    }
		    if (!this.rules || Object.keys(this.rules).length === 0) {
		      if (callback) {
		        callback();
		      }
		      return;
		    }
		    function complete(results) {
		      var i = void 0;
		      var field = void 0;
		      var errors = [];
		      var fields = {};
		
		      function add(e) {
		        if (Array.isArray(e)) {
		          errors = errors.concat.apply(errors, e);
		        } else {
		          errors.push(e);
		        }
		      }
		
		      for (i = 0; i < results.length; i++) {
		        add(results[i]);
		      }
		      if (!errors.length) {
		        errors = null;
		        fields = null;
		      } else {
		        for (i = 0; i < errors.length; i++) {
		          field = errors[i].field;
		          fields[field] = fields[field] || [];
		          fields[field].push(errors[i]);
		        }
		      }
		      callback(errors, fields);
		    }
		
		    if (options.messages) {
		      var messages = this.messages();
		      if (messages === _messages2.messages) {
		        messages = (0, _messages2.newMessages)();
		      }
		      (0, _util.deepMerge)(messages, options.messages);
		      options.messages = messages;
		    } else {
		      options.messages = this.messages();
		    }
		
		    options.error = _rule.error;
		    var arr = void 0;
		    var value = void 0;
		    var series = {};
		    var keys = options.keys || Object.keys(this.rules);
		    keys.forEach(function (z) {
		      arr = _this.rules[z];
		      value = source[z];
		      arr.forEach(function (r) {
		        var rule = r;
		        if (typeof rule.transform === 'function') {
		          if (source === source_) {
		            source = _extends({}, source);
		          }
		          value = source[z] = rule.transform(value);
		        }
		        if (typeof rule === 'function') {
		          rule = {
		            validator: rule
		          };
		        } else {
		          rule = _extends({}, rule);
		        }
		        rule.field = z;
		        rule.fullField = rule.fullField || z;
		        rule.type = _this.getType(rule);
		        rule.validator = _this.getValidationMethod(rule);
		        if (!rule.validator) {
		          return;
		        }
		        series[z] = series[z] || [];
		        series[z].push({
		          rule: rule,
		          value: value,
		          source: source,
		          field: z
		        });
		      });
		    });
		    var errorFields = {};
		    (0, _util.asyncMap)(series, options, function (data, doIt) {
		      var rule = data.rule;
		      var deep = (rule.type === 'object' || rule.type === 'array') && (_typeof(rule.fields) === 'object' || _typeof(rule.defaultField) === 'object');
		      deep = deep && (rule.required || !rule.required && data.value);
		      rule.field = data.field;
		      function addFullfield(key, schema) {
		        return _extends({}, schema, {
		          fullField: rule.fullField + '.' + key
		        });
		      }
		
		      function cb() {
		        var e = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];
		
		        var errors = e;
		        if (!Array.isArray(errors)) {
		          errors = [errors];
		        }
		        if (errors.length) {
		          (0, _util.warning)('async-validator:', errors);
		        }
		        if (errors.length && rule.message) {
		          errors = [].concat(rule.message);
		        }
		
		        errors = errors.map((0, _util.complementError)(rule));
		
		        if ((options.first || options.fieldFirst) && errors.length) {
		          errorFields[rule.field] = 1;
		          return doIt(errors);
		        }
		        if (!deep) {
		          doIt(errors);
		        } else {
		          // if rule is required but the target object
		          // does not exist fail at the rule level and don't
		          // go deeper
		          if (rule.required && !data.value) {
		            if (rule.message) {
		              errors = [].concat(rule.message).map((0, _util.complementError)(rule));
		            } else {
		              errors = [options.error(rule, (0, _util.format)(options.messages.required, rule.field))];
		            }
		            return doIt(errors);
		          }
		
		          var fieldsSchema = {};
		          if (rule.defaultField) {
		            for (var k in data.value) {
		              if (data.value.hasOwnProperty(k)) {
		                fieldsSchema[k] = rule.defaultField;
		              }
		            }
		          }
		          fieldsSchema = _extends({}, fieldsSchema, data.rule.fields);
		          for (var f in fieldsSchema) {
		            if (fieldsSchema.hasOwnProperty(f)) {
		              var fieldSchema = Array.isArray(fieldsSchema[f]) ? fieldsSchema[f] : [fieldsSchema[f]];
		              fieldsSchema[f] = fieldSchema.map(addFullfield.bind(null, f));
		            }
		          }
		          var schema = new Schema(fieldsSchema);
		          schema.messages(options.messages);
		          if (data.rule.options) {
		            data.rule.options.messages = options.messages;
		            data.rule.options.error = options.error;
		          }
		          schema.validate(data.value, data.rule.options || options, function (errs) {
		            doIt(errs && errs.length ? errors.concat(errs) : errs);
		          });
		        }
		      }
		
		      rule.validator(rule, data.value, cb, data.source, options);
		    }, function (results) {
		      complete(results);
		    });
		  },
		  getType: function getType(rule) {
		    if (rule.type === undefined && rule.pattern instanceof RegExp) {
		      rule.type = 'pattern';
		    }
		    if (typeof rule.validator !== 'function' && rule.type && !_validator2["default"].hasOwnProperty(rule.type)) {
		      throw new Error((0, _util.format)('Unknown rule type %s', rule.type));
		    }
		    return rule.type || 'string';
		  },
		  getValidationMethod: function getValidationMethod(rule) {
		    if (typeof rule.validator === 'function') {
		      return rule.validator;
		    }
		    return _validator2["default"][rule.type] || false;
		  }
		};
		
		Schema.register = function register(type, validator) {
		  if (typeof validator !== 'function') {
		    throw new Error('Cannot register a validator by type, validator is not a function');
		  }
		  _validator2["default"][type] = validator;
		};
		
		Schema.messages = _messages2.messages;
		
		exports["default"] = Schema;
		module.exports = exports['default'];
	
	/***/ },
	/* 134 */
	/***/ function(module, exports) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.newMessages = newMessages;
		function newMessages() {
		  return {
		    "default": 'Validation error on field %s',
		    required: '%s is required',
		    "enum": '%s must be one of %s',
		    whitespace: '%s cannot be empty',
		    date: {
		      format: '%s date %s is invalid for format %s',
		      parse: '%s date could not be parsed, %s is invalid ',
		      invalid: '%s date %s is invalid'
		    },
		    types: {
		      string: '%s is not a %s',
		      method: '%s is not a %s (function)',
		      array: '%s is not an %s',
		      object: '%s is not an %s',
		      number: '%s is not a %s',
		      date: '%s is not a %s',
		      "boolean": '%s is not a %s',
		      integer: '%s is not an %s',
		      "float": '%s is not a %s',
		      regexp: '%s is not a valid %s',
		      email: '%s is not a valid %s',
		      url: '%s is not a valid %s',
		      hex: '%s is not a valid %s'
		    },
		    string: {
		      len: '%s must be exactly %s characters',
		      min: '%s must be at least %s characters',
		      max: '%s cannot be longer than %s characters',
		      range: '%s must be between %s and %s characters'
		    },
		    number: {
		      len: '%s must equal %s',
		      min: '%s cannot be less than %s',
		      max: '%s cannot be greater than %s',
		      range: '%s must be between %s and %s'
		    },
		    array: {
		      len: '%s must be exactly %s in length',
		      min: '%s cannot be less than %s in length',
		      max: '%s cannot be greater than %s in length',
		      range: '%s must be between %s and %s in length'
		    },
		    pattern: {
		      mismatch: '%s value %s does not match pattern %s'
		    },
		    clone: function clone() {
		      var cloned = JSON.parse(JSON.stringify(this));
		      cloned.clone = this.clone;
		      return cloned;
		    }
		  };
		}
		
		var messages = exports.messages = newMessages();
	
	/***/ },
	/* 135 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _util = __webpack_require__(5);
		
		var util = _interopRequireWildcard(_util);
		
		function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj["default"] = obj; return newObj; } }
		
		var ENUM = 'enum';
		
		/**
		 *  Rule for validating a value exists in an enumerable list.
		 *
		 *  @param rule The validation rule.
		 *  @param value The value of the field on the source object.
		 *  @param source The source object being validated.
		 *  @param errors An array of errors that this rule may add
		 *  validation errors to.
		 *  @param options The validation options.
		 *  @param options.messages The validation messages.
		 */
		function enumerable(rule, value, source, errors, options) {
		  rule[ENUM] = Array.isArray(rule[ENUM]) ? rule[ENUM] : [];
		  if (rule[ENUM].indexOf(value) === -1) {
		    errors.push(util.format(options.messages[ENUM], rule.fullField, rule[ENUM].join(', ')));
		  }
		}
		
		exports["default"] = enumerable;
		module.exports = exports['default'];
	
	/***/ },
	/* 136 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _util = __webpack_require__(5);
		
		var util = _interopRequireWildcard(_util);
		
		function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj["default"] = obj; return newObj; } }
		
		/**
		 *  Rule for validating a regular expression pattern.
		 *
		 *  @param rule The validation rule.
		 *  @param value The value of the field on the source object.
		 *  @param source The source object being validated.
		 *  @param errors An array of errors that this rule may add
		 *  validation errors to.
		 *  @param options The validation options.
		 *  @param options.messages The validation messages.
		 */
		function pattern(rule, value, source, errors, options) {
		  if (rule.pattern instanceof RegExp) {
		    if (!rule.pattern.test(value)) {
		      errors.push(util.format(options.messages.pattern.mismatch, rule.fullField, value, rule.pattern));
		    }
		  }
		}
		
		exports["default"] = pattern;
		module.exports = exports['default'];
	
	/***/ },
	/* 137 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _util = __webpack_require__(5);
		
		var util = _interopRequireWildcard(_util);
		
		function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj["default"] = obj; return newObj; } }
		
		/**
		 *  Rule for validating minimum and maximum allowed values.
		 *
		 *  @param rule The validation rule.
		 *  @param value The value of the field on the source object.
		 *  @param source The source object being validated.
		 *  @param errors An array of errors that this rule may add
		 *  validation errors to.
		 *  @param options The validation options.
		 *  @param options.messages The validation messages.
		 */
		function range(rule, value, source, errors, options) {
		  var len = typeof rule.len === 'number';
		  var min = typeof rule.min === 'number';
		  var max = typeof rule.max === 'number';
		  var val = value;
		  var key = null;
		  var num = typeof value === 'number';
		  var str = typeof value === 'string';
		  var arr = Array.isArray(value);
		  if (num) {
		    key = 'number';
		  } else if (str) {
		    key = 'string';
		  } else if (arr) {
		    key = 'array';
		  }
		  // if the value is not of a supported type for range validation
		  // the validation rule rule should use the
		  // type property to also test for a particular type
		  if (!key) {
		    return false;
		  }
		  if (str || arr) {
		    val = value.length;
		  }
		  if (len) {
		    if (val !== rule.len) {
		      errors.push(util.format(options.messages[key].len, rule.fullField, rule.len));
		    }
		  } else if (min && !max && val < rule.min) {
		    errors.push(util.format(options.messages[key].min, rule.fullField, rule.min));
		  } else if (max && !min && val > rule.max) {
		    errors.push(util.format(options.messages[key].max, rule.fullField, rule.max));
		  } else if (min && max && (val < rule.min || val > rule.max)) {
		    errors.push(util.format(options.messages[key].range, rule.fullField, rule.min, rule.max));
		  }
		}
		
		exports["default"] = range;
		module.exports = exports['default'];
	
	/***/ },
	/* 138 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
		
		var _util = __webpack_require__(5);
		
		var util = _interopRequireWildcard(_util);
		
		var _required = __webpack_require__(54);
		
		var _required2 = _interopRequireDefault(_required);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj["default"] = obj; return newObj; } }
		
		/* eslint max-len:0 */
		
		var pattern = {
		  email: /^([a-z0-9_\.-]+)@([\da-z\.-]+)\.([a-z\.]{2,6})$/,
		  url: new RegExp('^(?!mailto:)(?:(?:http|https|ftp)://)(?:\\S+(?::\\S*)?@)?(?:(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[0-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))|localhost)(?::\\d{2,5})?(?:(/|\\?|#)[^\\s]*)?$', 'i'),
		  hex: /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i
		};
		
		var types = {
		  integer: function integer(value) {
		    return types.number(value) && parseInt(value, 10) === value;
		  },
		  "float": function float(value) {
		    return types.number(value) && !types.integer(value);
		  },
		  array: function array(value) {
		    return Array.isArray(value);
		  },
		  regexp: function regexp(value) {
		    if (value instanceof RegExp) {
		      return true;
		    }
		    try {
		      return !!new RegExp(value);
		    } catch (e) {
		      return false;
		    }
		  },
		  date: function date(value) {
		    return typeof value.getTime === 'function' && typeof value.getMonth === 'function' && typeof value.getYear === 'function';
		  },
		  number: function number(value) {
		    if (isNaN(value)) {
		      return false;
		    }
		    return typeof value === 'number';
		  },
		  object: function object(value) {
		    return (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && !types.array(value);
		  },
		  method: function method(value) {
		    return typeof value === 'function';
		  },
		  email: function email(value) {
		    return typeof value === 'string' && !!value.match(pattern.email);
		  },
		  url: function url(value) {
		    return typeof value === 'string' && !!value.match(pattern.url);
		  },
		  hex: function hex(value) {
		    return typeof value === 'string' && !!value.match(pattern.hex);
		  }
		};
		
		/**
		 *  Rule for validating the type of a value.
		 *
		 *  @param rule The validation rule.
		 *  @param value The value of the field on the source object.
		 *  @param source The source object being validated.
		 *  @param errors An array of errors that this rule may add
		 *  validation errors to.
		 *  @param options The validation options.
		 *  @param options.messages The validation messages.
		 */
		function type(rule, value, source, errors, options) {
		  if (rule.required && value === undefined) {
		    (0, _required2["default"])(rule, value, source, errors, options);
		    return;
		  }
		  var custom = ['integer', 'float', 'array', 'regexp', 'object', 'method', 'email', 'number', 'date', 'url', 'hex'];
		  var ruleType = rule.type;
		  if (custom.indexOf(ruleType) > -1) {
		    if (!types[ruleType](value)) {
		      errors.push(util.format(options.messages.types[ruleType], rule.fullField, rule.type));
		    }
		    // straight typeof check
		  } else if (ruleType && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== rule.type) {
		      errors.push(util.format(options.messages.types[ruleType], rule.fullField, rule.type));
		    }
		}
		
		exports["default"] = type;
		module.exports = exports['default'];
	
	/***/ },
	/* 139 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _util = __webpack_require__(5);
		
		var util = _interopRequireWildcard(_util);
		
		function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj["default"] = obj; return newObj; } }
		
		/**
		 *  Rule for validating whitespace.
		 *
		 *  @param rule The validation rule.
		 *  @param value The value of the field on the source object.
		 *  @param source The source object being validated.
		 *  @param errors An array of errors that this rule may add
		 *  validation errors to.
		 *  @param options The validation options.
		 *  @param options.messages The validation messages.
		 */
		function whitespace(rule, value, source, errors, options) {
		  if (/^\s+$/.test(value) || value === '') {
		    errors.push(util.format(options.messages.whitespace, rule.fullField));
		  }
		}
		
		exports["default"] = whitespace;
		module.exports = exports['default'];
	
	/***/ },
	/* 140 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _rule = __webpack_require__(8);
		
		var _rule2 = _interopRequireDefault(_rule);
		
		var _util = __webpack_require__(5);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		/**
		 *  Validates an array.
		 *
		 *  @param rule The validation rule.
		 *  @param value The value of the field on the source object.
		 *  @param callback The callback function.
		 *  @param source The source object being validated.
		 *  @param options The validation options.
		 *  @param options.messages The validation messages.
		 */
		function array(rule, value, callback, source, options) {
		  var errors = [];
		  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
		  if (validate) {
		    if ((0, _util.isEmptyValue)(value, 'array') && !rule.required) {
		      return callback();
		    }
		    _rule2["default"].required(rule, value, source, errors, options, 'array');
		    if (!(0, _util.isEmptyValue)(value, 'array')) {
		      _rule2["default"].type(rule, value, source, errors, options);
		      _rule2["default"].range(rule, value, source, errors, options);
		    }
		  }
		  callback(errors);
		}
		
		exports["default"] = array;
		module.exports = exports['default'];
	
	/***/ },
	/* 141 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _util = __webpack_require__(5);
		
		var _rule = __webpack_require__(8);
		
		var _rule2 = _interopRequireDefault(_rule);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		/**
		 *  Validates a boolean.
		 *
		 *  @param rule The validation rule.
		 *  @param value The value of the field on the source object.
		 *  @param callback The callback function.
		 *  @param source The source object being validated.
		 *  @param options The validation options.
		 *  @param options.messages The validation messages.
		 */
		function boolean(rule, value, callback, source, options) {
		  var errors = [];
		  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
		  if (validate) {
		    if ((0, _util.isEmptyValue)(value) && !rule.required) {
		      return callback();
		    }
		    _rule2["default"].required(rule, value, source, errors, options);
		    if (value !== undefined) {
		      _rule2["default"].type(rule, value, source, errors, options);
		    }
		  }
		  callback(errors);
		}
		
		exports["default"] = boolean;
		module.exports = exports['default'];
	
	/***/ },
	/* 142 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _rule = __webpack_require__(8);
		
		var _rule2 = _interopRequireDefault(_rule);
		
		var _util = __webpack_require__(5);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function date(rule, value, callback, source, options) {
		  // console.log('integer rule called %j', rule);
		  var errors = [];
		  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
		  // console.log('validate on %s value', value);
		  if (validate) {
		    if ((0, _util.isEmptyValue)(value) && !rule.required) {
		      return callback();
		    }
		    _rule2["default"].required(rule, value, source, errors, options);
		    if (!(0, _util.isEmptyValue)(value)) {
		      _rule2["default"].type(rule, value, source, errors, options);
		      if (value) {
		        _rule2["default"].range(rule, value.getTime(), source, errors, options);
		      }
		    }
		  }
		  callback(errors);
		}
		
		exports["default"] = date;
		module.exports = exports['default'];
	
	/***/ },
	/* 143 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _rule = __webpack_require__(8);
		
		var _rule2 = _interopRequireDefault(_rule);
		
		var _util = __webpack_require__(5);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		var ENUM = 'enum';
		
		/**
		 *  Validates an enumerable list.
		 *
		 *  @param rule The validation rule.
		 *  @param value The value of the field on the source object.
		 *  @param callback The callback function.
		 *  @param source The source object being validated.
		 *  @param options The validation options.
		 *  @param options.messages The validation messages.
		 */
		function enumerable(rule, value, callback, source, options) {
		  var errors = [];
		  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
		  if (validate) {
		    if ((0, _util.isEmptyValue)(value) && !rule.required) {
		      return callback();
		    }
		    _rule2["default"].required(rule, value, source, errors, options);
		    if (value) {
		      _rule2["default"][ENUM](rule, value, source, errors, options);
		    }
		  }
		  callback(errors);
		}
		
		exports["default"] = enumerable;
		module.exports = exports['default'];
	
	/***/ },
	/* 144 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _rule = __webpack_require__(8);
		
		var _rule2 = _interopRequireDefault(_rule);
		
		var _util = __webpack_require__(5);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		/**
		 *  Validates a number is a floating point number.
		 *
		 *  @param rule The validation rule.
		 *  @param value The value of the field on the source object.
		 *  @param callback The callback function.
		 *  @param source The source object being validated.
		 *  @param options The validation options.
		 *  @param options.messages The validation messages.
		 */
		function floatFn(rule, value, callback, source, options) {
		  var errors = [];
		  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
		  if (validate) {
		    if ((0, _util.isEmptyValue)(value) && !rule.required) {
		      return callback();
		    }
		    _rule2["default"].required(rule, value, source, errors, options);
		    if (value !== undefined) {
		      _rule2["default"].type(rule, value, source, errors, options);
		      _rule2["default"].range(rule, value, source, errors, options);
		    }
		  }
		  callback(errors);
		}
		
		exports["default"] = floatFn;
		module.exports = exports['default'];
	
	/***/ },
	/* 145 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = {
		  string: __webpack_require__(152),
		  method: __webpack_require__(147),
		  number: __webpack_require__(148),
		  "boolean": __webpack_require__(141),
		  regexp: __webpack_require__(151),
		  integer: __webpack_require__(146),
		  "float": __webpack_require__(144),
		  array: __webpack_require__(140),
		  object: __webpack_require__(149),
		  "enum": __webpack_require__(143),
		  pattern: __webpack_require__(150),
		  email: __webpack_require__(36),
		  url: __webpack_require__(36),
		  date: __webpack_require__(142),
		  hex: __webpack_require__(36)
		};
		module.exports = exports['default'];
	
	/***/ },
	/* 146 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _rule = __webpack_require__(8);
		
		var _rule2 = _interopRequireDefault(_rule);
		
		var _util = __webpack_require__(5);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		/**
		 *  Validates a number is an integer.
		 *
		 *  @param rule The validation rule.
		 *  @param value The value of the field on the source object.
		 *  @param callback The callback function.
		 *  @param source The source object being validated.
		 *  @param options The validation options.
		 *  @param options.messages The validation messages.
		 */
		function integer(rule, value, callback, source, options) {
		  var errors = [];
		  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
		  if (validate) {
		    if ((0, _util.isEmptyValue)(value) && !rule.required) {
		      return callback();
		    }
		    _rule2["default"].required(rule, value, source, errors, options);
		    if (value !== undefined) {
		      _rule2["default"].type(rule, value, source, errors, options);
		      _rule2["default"].range(rule, value, source, errors, options);
		    }
		  }
		  callback(errors);
		}
		
		exports["default"] = integer;
		module.exports = exports['default'];
	
	/***/ },
	/* 147 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _rule = __webpack_require__(8);
		
		var _rule2 = _interopRequireDefault(_rule);
		
		var _util = __webpack_require__(5);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		/**
		 *  Validates a function.
		 *
		 *  @param rule The validation rule.
		 *  @param value The value of the field on the source object.
		 *  @param callback The callback function.
		 *  @param source The source object being validated.
		 *  @param options The validation options.
		 *  @param options.messages The validation messages.
		 */
		function method(rule, value, callback, source, options) {
		  var errors = [];
		  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
		  if (validate) {
		    if ((0, _util.isEmptyValue)(value) && !rule.required) {
		      return callback();
		    }
		    _rule2["default"].required(rule, value, source, errors, options);
		    if (value !== undefined) {
		      _rule2["default"].type(rule, value, source, errors, options);
		    }
		  }
		  callback(errors);
		}
		
		exports["default"] = method;
		module.exports = exports['default'];
	
	/***/ },
	/* 148 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _rule = __webpack_require__(8);
		
		var _rule2 = _interopRequireDefault(_rule);
		
		var _util = __webpack_require__(5);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		/**
		 *  Validates a number.
		 *
		 *  @param rule The validation rule.
		 *  @param value The value of the field on the source object.
		 *  @param callback The callback function.
		 *  @param source The source object being validated.
		 *  @param options The validation options.
		 *  @param options.messages The validation messages.
		 */
		function number(rule, value, callback, source, options) {
		  var errors = [];
		  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
		  if (validate) {
		    if ((0, _util.isEmptyValue)(value) && !rule.required) {
		      return callback();
		    }
		    _rule2["default"].required(rule, value, source, errors, options);
		    if (value !== undefined) {
		      _rule2["default"].type(rule, value, source, errors, options);
		      _rule2["default"].range(rule, value, source, errors, options);
		    }
		  }
		  callback(errors);
		}
		
		exports["default"] = number;
		module.exports = exports['default'];
	
	/***/ },
	/* 149 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _rule = __webpack_require__(8);
		
		var _rule2 = _interopRequireDefault(_rule);
		
		var _util = __webpack_require__(5);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		/**
		 *  Validates an object.
		 *
		 *  @param rule The validation rule.
		 *  @param value The value of the field on the source object.
		 *  @param callback The callback function.
		 *  @param source The source object being validated.
		 *  @param options The validation options.
		 *  @param options.messages The validation messages.
		 */
		function object(rule, value, callback, source, options) {
		  var errors = [];
		  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
		  if (validate) {
		    if ((0, _util.isEmptyValue)(value) && !rule.required) {
		      return callback();
		    }
		    _rule2["default"].required(rule, value, source, errors, options);
		    if (value !== undefined) {
		      _rule2["default"].type(rule, value, source, errors, options);
		    }
		  }
		  callback(errors);
		}
		
		exports["default"] = object;
		module.exports = exports['default'];
	
	/***/ },
	/* 150 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _rule = __webpack_require__(8);
		
		var _rule2 = _interopRequireDefault(_rule);
		
		var _util = __webpack_require__(5);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		/**
		 *  Validates a regular expression pattern.
		 *
		 *  Performs validation when a rule only contains
		 *  a pattern property but is not declared as a string type.
		 *
		 *  @param rule The validation rule.
		 *  @param value The value of the field on the source object.
		 *  @param callback The callback function.
		 *  @param source The source object being validated.
		 *  @param options The validation options.
		 *  @param options.messages The validation messages.
		 */
		function pattern(rule, value, callback, source, options) {
		  var errors = [];
		  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
		  if (validate) {
		    if ((0, _util.isEmptyValue)(value, 'string') && !rule.required) {
		      return callback();
		    }
		    _rule2["default"].required(rule, value, source, errors, options);
		    if (!(0, _util.isEmptyValue)(value, 'string')) {
		      _rule2["default"].pattern(rule, value, source, errors, options);
		    }
		  }
		  callback(errors);
		}
		
		exports["default"] = pattern;
		module.exports = exports['default'];
	
	/***/ },
	/* 151 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _rule = __webpack_require__(8);
		
		var _rule2 = _interopRequireDefault(_rule);
		
		var _util = __webpack_require__(5);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		/**
		 *  Validates the regular expression type.
		 *
		 *  @param rule The validation rule.
		 *  @param value The value of the field on the source object.
		 *  @param callback The callback function.
		 *  @param source The source object being validated.
		 *  @param options The validation options.
		 *  @param options.messages The validation messages.
		 */
		function regexp(rule, value, callback, source, options) {
		  var errors = [];
		  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
		  if (validate) {
		    if ((0, _util.isEmptyValue)(value) && !rule.required) {
		      return callback();
		    }
		    _rule2["default"].required(rule, value, source, errors, options);
		    if (!(0, _util.isEmptyValue)(value)) {
		      _rule2["default"].type(rule, value, source, errors, options);
		    }
		  }
		  callback(errors);
		}
		
		exports["default"] = regexp;
		module.exports = exports['default'];
	
	/***/ },
	/* 152 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _rule = __webpack_require__(8);
		
		var _rule2 = _interopRequireDefault(_rule);
		
		var _util = __webpack_require__(5);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		/**
		 *  Performs validation for string types.
		 *
		 *  @param rule The validation rule.
		 *  @param value The value of the field on the source object.
		 *  @param callback The callback function.
		 *  @param source The source object being validated.
		 *  @param options The validation options.
		 *  @param options.messages The validation messages.
		 */
		function string(rule, value, callback, source, options) {
		  var errors = [];
		  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);
		  if (validate) {
		    if ((0, _util.isEmptyValue)(value, 'string') && !rule.required) {
		      return callback();
		    }
		    _rule2["default"].required(rule, value, source, errors, options, 'string');
		    if (!(0, _util.isEmptyValue)(value, 'string')) {
		      _rule2["default"].type(rule, value, source, errors, options);
		      _rule2["default"].range(rule, value, source, errors, options);
		      _rule2["default"].pattern(rule, value, source, errors, options);
		      if (rule.whitespace === true) {
		        _rule2["default"].whitespace(rule, value, source, errors, options);
		      }
		    }
		  }
		  callback(errors);
		}
		
		exports["default"] = string;
		module.exports = exports['default'];
	
	/***/ },
	/* 153 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _reactDom = __webpack_require__(4);
		
		var _reactDom2 = _interopRequireDefault(_reactDom);
		
		var _addEventListener = __webpack_require__(13);
		
		var _addEventListener2 = _interopRequireDefault(_addEventListener);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var _warning = __webpack_require__(18);
		
		var _warning2 = _interopRequireDefault(_warning);
		
		var _shallowequal = __webpack_require__(35);
		
		var _shallowequal2 = _interopRequireDefault(_shallowequal);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		function getScroll(w, top) {
		  var ret = w['page' + (top ? 'Y' : 'X') + 'Offset'];
		  var method = 'scroll' + (top ? 'Top' : 'Left');
		  if (typeof ret !== 'number') {
		    var d = w.document;
		    // ie6,7,8 standard mode
		    ret = d.documentElement[method];
		    if (typeof ret !== 'number') {
		      // quirks mode
		      ret = d.body[method];
		    }
		  }
		  return ret;
		}
		
		function getOffset(element) {
		  var rect = element.getBoundingClientRect();
		  var body = document.body;
		  var clientTop = element.clientTop || body.clientTop || 0;
		  var clientLeft = element.clientLeft || body.clientLeft || 0;
		  var scrollTop = getScroll(window, true);
		  var scrollLeft = getScroll(window);
		
		  return {
		    top: rect.top + scrollTop - clientTop,
		    left: rect.left + scrollLeft - clientLeft
		  };
		}
		
		var Affix = (_temp = _class = function (_React$Component) {
		  _inherits(Affix, _React$Component);
		
		  function Affix(props) {
		    _classCallCheck(this, Affix);
		
		    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));
		
		    _this.handleScroll = function (e) {
		      var _this$props = _this.props;
		      var offsetTop = _this$props.offsetTop;
		      var offsetBottom = _this$props.offsetBottom;
		      var offset = _this$props.offset;
		
		      // Backwards support
		
		      offsetTop = offsetTop || offset;
		      var scrollTop = getScroll(window, true);
		      var elemOffset = getOffset(_reactDom2["default"].findDOMNode(_this));
		      var elemSize = {
		        width: _reactDom2["default"].findDOMNode(_this.refs.fixedNode).offsetWidth,
		        height: _reactDom2["default"].findDOMNode(_this.refs.fixedNode).offsetHeight
		      };
		
		      var offsetMode = {};
		      if (typeof offsetTop !== 'number' && typeof offsetBottom !== 'number') {
		        offsetMode.top = true;
		        offsetTop = 0;
		      } else {
		        offsetMode.top = typeof offsetTop === 'number';
		        offsetMode.bottom = typeof offsetBottom === 'number';
		      }
		
		      if (scrollTop > elemOffset.top - offsetTop && offsetMode.top) {
		        // Fixed Top
		        _this.setAffixStyle(e, {
		          position: 'fixed',
		          top: offsetTop,
		          left: elemOffset.left,
		          width: _reactDom2["default"].findDOMNode(_this).offsetWidth
		        });
		        _this.setPlaceholderStyle(e, {
		          width: _reactDom2["default"].findDOMNode(_this).offsetWidth,
		          height: _reactDom2["default"].findDOMNode(_this).offsetHeight
		        });
		      } else if (scrollTop < elemOffset.top + elemSize.height + offsetBottom - window.innerHeight && offsetMode.bottom) {
		        // Fixed Bottom
		        _this.setAffixStyle(e, {
		          position: 'fixed',
		          bottom: offsetBottom,
		          left: elemOffset.left,
		          width: _reactDom2["default"].findDOMNode(_this).offsetWidth
		        });
		        _this.setPlaceholderStyle(e, {
		          width: _reactDom2["default"].findDOMNode(_this).offsetWidth,
		          height: _reactDom2["default"].findDOMNode(_this).offsetHeight
		        });
		      } else {
		        _this.setAffixStyle(e, null);
		        _this.setPlaceholderStyle(e, null);
		      }
		    };
		
		    _this.state = {
		      affixStyle: null,
		      placeholderStyle: null
		    };
		    return _this;
		  }
		
		  Affix.prototype.setAffixStyle = function setAffixStyle(e, affixStyle) {
		    var _this2 = this;
		
		    var originalAffixStyle = this.state.affixStyle;
		    if (e.type === 'scroll' && originalAffixStyle && affixStyle) {
		      return;
		    }
		    if ((0, _shallowequal2["default"])(affixStyle, originalAffixStyle)) {
		      return;
		    }
		    this.setState({ affixStyle: affixStyle }, function () {
		      var affixed = !!_this2.state.affixStyle;
		      if (affixStyle && !originalAffixStyle || !affixStyle && originalAffixStyle) {
		        _this2.props.onChange(affixed);
		      }
		    });
		  };
		
		  Affix.prototype.setPlaceholderStyle = function setPlaceholderStyle(e, placeholderStyle) {
		    var originalPlaceholderStyle = this.state.placeholderStyle;
		    if (e.type === 'resize') {
		      return;
		    }
		    if ((0, _shallowequal2["default"])(placeholderStyle, originalPlaceholderStyle)) {
		      return;
		    }
		    this.setState({ placeholderStyle: placeholderStyle });
		  };
		
		  Affix.prototype.componentDidMount = function componentDidMount() {
		    (0, _warning2["default"])(!('offset' in this.props), '`offset` prop of Affix is deprecated, use `offsetTop` instead.');
		    this.scrollEvent = (0, _addEventListener2["default"])(window, 'scroll', this.handleScroll);
		    this.resizeEvent = (0, _addEventListener2["default"])(window, 'resize', this.handleScroll);
		  };
		
		  Affix.prototype.componentWillUnmount = function componentWillUnmount() {
		    if (this.scrollEvent) {
		      this.scrollEvent.remove();
		    }
		    if (this.resizeEvent) {
		      this.resizeEvent.remove();
		    }
		  };
		
		  Affix.prototype.render = function render() {
		    var className = (0, _classnames2["default"])({
		      'ant-affix': this.state.affixStyle
		    });
		
		    var props = _extends({}, this.props);
		    delete props.offsetTop;
		    delete props.offsetBottom;
		
		    return _react2["default"].createElement(
		      'div',
		      _extends({}, props, { style: this.state.placeholderStyle }),
		      _react2["default"].createElement(
		        'div',
		        { className: className, ref: 'fixedNode', style: this.state.affixStyle },
		        this.props.children
		      )
		    );
		  };
		
		  return Affix;
		}(_react2["default"].Component), _class.propTypes = {
		  offsetTop: _react2["default"].PropTypes.number,
		  offsetBottom: _react2["default"].PropTypes.number
		}, _class.defaultProps = {
		  onChange: function onChange() {}
		}, _temp);
		exports["default"] = Affix;
		module.exports = exports['default'];
	
	/***/ },
	/* 154 */
	[461, 420],
	/* 155 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _class, _temp;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _reactDom = __webpack_require__(4);
		
		var _reactDom2 = _interopRequireDefault(_reactDom);
		
		var _rcAnimate = __webpack_require__(7);
		
		var _rcAnimate2 = _interopRequireDefault(_rcAnimate);
		
		var _icon = __webpack_require__(6);
		
		var _icon2 = _interopRequireDefault(_icon);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var Alert = (_temp = _class = function (_React$Component) {
		  _inherits(Alert, _React$Component);
		
		  function Alert(props) {
		    _classCallCheck(this, Alert);
		
		    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));
		
		    _this.handleClose = function (e) {
		      e.preventDefault();
		      var dom = _reactDom2["default"].findDOMNode(_this);
		      dom.style.height = dom.offsetHeight + 'px';
		      // Magic code
		      // 重复一次后才能正确设置 height
		      dom.style.height = dom.offsetHeight + 'px';
		
		      _this.setState({
		        closing: false
		      });
		      _this.props.onClose(e);
		    };
		
		    _this.animationEnd = function () {
		      _this.setState({
		        closed: true,
		        closing: true
		      });
		    };
		
		    _this.state = {
		      closing: true,
		      closed: false
		    };
		    return _this;
		  }
		
		  Alert.prototype.render = function render() {
		    var _classNames;
		
		    var _props = this.props;
		    var closable = _props.closable;
		    var description = _props.description;
		    var type = _props.type;
		    var prefixCls = _props.prefixCls;
		    var message = _props.message;
		    var closeText = _props.closeText;
		    var showIcon = _props.showIcon;
		
		
		    var iconType = '';
		    switch (type) {
		      case 'success':
		        iconType = 'check-circle';
		        break;
		      case 'info':
		        iconType = 'info-circle';
		        break;
		      case 'error':
		        iconType = 'cross-circle';
		        break;
		      case 'warning':
		        iconType = 'exclamation-circle';
		        break;
		      default:
		        iconType = 'default';
		    }
		
		    // use outline icon in alert with description
		    if (!!description) {
		      iconType += '-o';
		    }
		
		    var alertCls = (0, _classnames2["default"])((_classNames = {}, _defineProperty(_classNames, prefixCls, true), _defineProperty(_classNames, prefixCls + '-' + type, true), _defineProperty(_classNames, prefixCls + '-close', !this.state.closing), _defineProperty(_classNames, prefixCls + '-with-description', !!description), _defineProperty(_classNames, prefixCls + '-no-icon', !showIcon), _classNames));
		
		    // closeable when closeText is assigned
		    if (closeText) {
		      closable = true;
		    }
		
		    return this.state.closed ? null : _react2["default"].createElement(
		      _rcAnimate2["default"],
		      { component: '',
		        showProp: 'data-show',
		        transitionName: prefixCls + '-slide-up',
		        onEnd: this.animationEnd
		      },
		      _react2["default"].createElement(
		        'div',
		        { 'data-show': this.state.closing, className: alertCls },
		        showIcon ? _react2["default"].createElement(_icon2["default"], { className: 'ant-alert-icon', type: iconType }) : null,
		        _react2["default"].createElement(
		          'span',
		          { className: prefixCls + '-message' },
		          message
		        ),
		        _react2["default"].createElement(
		          'span',
		          { className: prefixCls + '-description' },
		          description
		        ),
		        closable ? _react2["default"].createElement(
		          'a',
		          { onClick: this.handleClose, className: prefixCls + '-close-icon' },
		          closeText || _react2["default"].createElement(_icon2["default"], { type: 'cross' })
		        ) : null
		      )
		    );
		  };
		
		  return Alert;
		}(_react2["default"].Component), _class.defaultProps = {
		  prefixCls: 'ant-alert',
		  showIcon: false,
		  onClose: function onClose() {},
		
		  type: 'info'
		}, _temp);
		exports["default"] = Alert;
		module.exports = exports['default'];
	
	/***/ },
	/* 156 */
	[461, 421],
	/* 157 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp, _initialiseProps;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _rcAnimate = __webpack_require__(7);
		
		var _rcAnimate2 = _interopRequireDefault(_rcAnimate);
		
		var _icon = __webpack_require__(6);
		
		var _icon2 = _interopRequireDefault(_icon);
		
		var _addEventListener = __webpack_require__(13);
		
		var _addEventListener2 = _interopRequireDefault(_addEventListener);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var _object = __webpack_require__(16);
		
		var _object2 = _interopRequireDefault(_object);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		function getScroll(w, top) {
		  var ret = w['page' + (top ? 'Y' : 'X') + 'Offset'];
		  var method = 'scroll' + (top ? 'Top' : 'Left');
		  if (typeof ret !== 'number') {
		    var d = w.document;
		    // ie6,7,8 standard mode
		    ret = d.documentElement[method];
		    if (typeof ret !== 'number') {
		      // quirks mode
		      ret = d.body[method];
		    }
		  }
		  return ret;
		}
		
		var BackTop = (_temp = _class = function (_React$Component) {
		  _inherits(BackTop, _React$Component);
		
		  function BackTop(props) {
		    _classCallCheck(this, BackTop);
		
		    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));
		
		    _initialiseProps.call(_this);
		
		    var scrollTop = getScroll(window, true);
		    _this.state = {
		      visible: scrollTop > _this.props.visibilityHeight
		    };
		    return _this;
		  }
		
		  BackTop.prototype.setScrollTop = function setScrollTop(value) {
		    document.body.scrollTop = value;
		    document.documentElement.scrollTop = value;
		  };
		
		  BackTop.prototype.componentDidMount = function componentDidMount() {
		    this.scrollEvent = (0, _addEventListener2["default"])(window, 'scroll', this.handleScroll);
		  };
		
		  BackTop.prototype.componentWillUnmount = function componentWillUnmount() {
		    if (this.scrollEvent) {
		      this.scrollEvent.remove();
		    }
		  };
		
		  BackTop.prototype.render = function render() {
		    var _classNames;
		
		    var _props = this.props;
		    var prefixCls = _props.prefixCls;
		    var className = _props.className;
		    var children = _props.children;
		
		    var otherProps = _objectWithoutProperties(_props, ['prefixCls', 'className', 'children']);
		
		    var classString = (0, _classnames2["default"])((_classNames = {}, _defineProperty(_classNames, prefixCls, true), _defineProperty(_classNames, className, !!className), _classNames));
		
		    var defaultElement = _react2["default"].createElement(
		      'div',
		      { className: prefixCls + '-content' },
		      _react2["default"].createElement(_icon2["default"], { className: prefixCls + '-icon', type: 'to-top' })
		    );
		
		    var style = {
		      display: this.state.visible ? 'block' : 'none'
		    };
		
		    // fix https://fb.me/react-unknown-prop
		    var divProps = (0, _object2["default"])(otherProps, ['visibilityHeight']);
		
		    return _react2["default"].createElement(
		      _rcAnimate2["default"],
		      { component: '', transitionName: 'fade' },
		      this.state.visible ? _react2["default"].createElement(
		        'div',
		        { 'data-show': this.state.visible, style: style },
		        _react2["default"].createElement(
		          'div',
		          _extends({}, divProps, { className: classString, onClick: this.scrollToTop }),
		          children || defaultElement
		        )
		      ) : null
		    );
		  };
		
		  return BackTop;
		}(_react2["default"].Component), _class.propTypes = {
		  visibilityHeight: _react2["default"].PropTypes.number
		}, _class.defaultProps = {
		  onClick: function onClick() {},
		
		  visibilityHeight: 400,
		  prefixCls: 'ant-back-top'
		}, _initialiseProps = function _initialiseProps() {
		  var _this2 = this;
		
		  this.scrollToTop = function (e) {
		    if (e) e.preventDefault();
		    _this2.setScrollTop(0);
		    _this2.props.onClick(e);
		  };
		
		  this.handleScroll = function () {
		    var scrollTop = getScroll(window, true);
		    _this2.setState({
		      visible: scrollTop > _this2.props.visibilityHeight
		    });
		  };
		}, _temp);
		exports["default"] = BackTop;
		module.exports = exports['default'];
	
	/***/ },
	/* 158 */
	[461, 422],
	/* 159 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _reactDom = __webpack_require__(4);
		
		var _isCssAnimationSupported = __webpack_require__(55);
		
		var _isCssAnimationSupported2 = _interopRequireDefault(_isCssAnimationSupported);
		
		var _object = __webpack_require__(16);
		
		var _object2 = _interopRequireDefault(_object);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		function getNumberArray(num) {
		  return num ? num.toString().split('').reverse().map(function (i) {
		    return Number(i);
		  }) : [];
		}
		
		var ScrollNumber = (_temp = _class = function (_React$Component) {
		  _inherits(ScrollNumber, _React$Component);
		
		  function ScrollNumber(props) {
		    _classCallCheck(this, ScrollNumber);
		
		    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));
		
		    _this.state = {
		      animateStarted: true,
		      count: props.count
		    };
		    return _this;
		  }
		
		  ScrollNumber.prototype.componentDidMount = function componentDidMount() {
		    if (!(0, _isCssAnimationSupported2["default"])()) {
		      (0, _reactDom.findDOMNode)(this).className += ' not-support-css-animation';
		    }
		  };
		
		  ScrollNumber.prototype.getPositionByNum = function getPositionByNum(num, i) {
		    if (this.state.animateStarted) {
		      return 10 + num;
		    }
		    var currentDigit = getNumberArray(this.state.count)[i];
		    var lastDigit = getNumberArray(this.lastCount)[i];
		    // 同方向则在同一侧切换数字
		    if (this.state.count > this.lastCount) {
		      if (currentDigit >= lastDigit) {
		        return 10 + num;
		      }
		      return 20 + num;
		    }
		    if (currentDigit <= lastDigit) {
		      return 10 + num;
		    }
		    return num;
		  };
		
		  ScrollNumber.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
		    var _this2 = this;
		
		    if ('count' in nextProps) {
		      if (this.state.count === nextProps.count) {
		        return;
		      }
		      this.lastCount = this.state.count;
		      // 复原数字初始位置
		      this.setState({
		        animateStarted: true
		      }, function () {
		        // 等待数字位置复原完毕
		        // 开始设置完整的数字
		        setTimeout(function () {
		          _this2.setState({
		            animateStarted: false,
		            count: nextProps.count
		          }, function () {
		            _this2.props.onAnimated();
		          });
		        }, 5);
		      });
		    }
		  };
		
		  ScrollNumber.prototype.renderNumberList = function renderNumberList(position) {
		    var childrenToReturn = [];
		    for (var i = 0; i < 30; i++) {
		      var currentClassName = position === i ? 'current' : null;
		      childrenToReturn.push(_react2["default"].createElement(
		        'p',
		        { key: i, className: currentClassName },
		        i % 10
		      ));
		    }
		    return childrenToReturn;
		  };
		
		  ScrollNumber.prototype.renderCurrentNumber = function renderCurrentNumber(num, i) {
		    var position = this.getPositionByNum(num, i);
		    var height = this.props.height;
		    var removeTransition = this.state.animateStarted || getNumberArray(this.lastCount)[i] === undefined;
		    return (0, _react.createElement)('span', {
		      className: this.props.prefixCls + '-only',
		      style: {
		        transition: removeTransition && 'none',
		        WebkitTransform: 'translateY(' + -position * height + 'px)',
		        transform: 'translateY(' + -position * height + 'px)',
		        height: height
		      },
		      key: i
		    }, this.renderNumberList(position));
		  };
		
		  ScrollNumber.prototype.renderNumberElement = function renderNumberElement() {
		    var _this3 = this;
		
		    var state = this.state;
		    if (!state.count || isNaN(state.count)) {
		      return state.count;
		    }
		    return getNumberArray(state.count).map(function (num, i) {
		      return _this3.renderCurrentNumber(num, i);
		    }).reverse();
		  };
		
		  ScrollNumber.prototype.render = function render() {
		    var _props = this.props;
		    var component = _props.component;
		    var prefixCls = _props.prefixCls;
		    var className = _props.className;
		
		    var otherProps = _objectWithoutProperties(_props, ['component', 'prefixCls', 'className']);
		    // fix https://fb.me/react-unknown-prop
		
		
		    var restProps = (0, _object2["default"])(otherProps, ['count', 'onAnimated']);
		    var props = _extends({}, restProps, {
		      className: prefixCls + ' ' + className
		    });
		    return (0, _react.createElement)(component, props, this.renderNumberElement());
		  };
		
		  return ScrollNumber;
		}(_react2["default"].Component), _class.defaultProps = {
		  prefixCls: 'ant-scroll-number',
		  count: null,
		  component: 'sup',
		  onAnimated: function onAnimated() {},
		
		  height: 18
		}, _class.propTypes = {
		  count: _react2["default"].PropTypes.oneOfType([_react2["default"].PropTypes.string, _react2["default"].PropTypes.number]),
		  component: _react2["default"].PropTypes.string,
		  onAnimated: _react2["default"].PropTypes.func,
		  height: _react2["default"].PropTypes.number
		}, _temp);
		exports["default"] = ScrollNumber;
		module.exports = exports['default'];
	
	/***/ },
	/* 160 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _class, _temp;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _rcAnimate = __webpack_require__(7);
		
		var _rcAnimate2 = _interopRequireDefault(_rcAnimate);
		
		var _ScrollNumber = __webpack_require__(159);
		
		var _ScrollNumber2 = _interopRequireDefault(_ScrollNumber);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var Badge = (_temp = _class = function (_React$Component) {
		  _inherits(Badge, _React$Component);
		
		  function Badge() {
		    _classCallCheck(this, Badge);
		
		    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
		  }
		
		  Badge.prototype.render = function render() {
		    var _classNames;
		
		    var _props = this.props;
		    var count = _props.count;
		    var prefixCls = _props.prefixCls;
		    var overflowCount = _props.overflowCount;
		    var className = _props.className;
		    var style = _props.style;
		    var children = _props.children;
		    var dot = _props.dot;
		
		
		    count = count > overflowCount ? overflowCount + '+' : count;
		
		    // dot mode don't need count
		    if (dot) {
		      count = '';
		    }
		
		    // null undefined "" "0" 0
		    var hidden = (!count || count === '0') && !dot;
		    var scrollNumberCls = prefixCls + (dot ? '-dot' : '-count');
		    var badgeCls = (0, _classnames2["default"])((_classNames = {}, _defineProperty(_classNames, className, !!className), _defineProperty(_classNames, prefixCls, true), _defineProperty(_classNames, prefixCls + '-not-a-wrapper', !children), _classNames));
		
		    return _react2["default"].createElement(
		      'span',
		      { className: badgeCls, title: count, style: null },
		      children,
		      _react2["default"].createElement(
		        _rcAnimate2["default"],
		        {
		          component: '',
		          showProp: 'data-show',
		          transitionName: prefixCls + '-zoom',
		          transitionAppear: true
		        },
		        hidden ? null : _react2["default"].createElement(_ScrollNumber2["default"], {
		          'data-show': !hidden,
		          className: scrollNumberCls,
		          count: count,
		          style: style
		        })
		      )
		    );
		  };
		
		  return Badge;
		}(_react2["default"].Component), _class.defaultProps = {
		  prefixCls: 'ant-badge',
		  count: null,
		  dot: false,
		  overflowCount: 99
		}, _class.propTypes = {
		  count: _react2["default"].PropTypes.oneOfType([_react2["default"].PropTypes.string, _react2["default"].PropTypes.number]),
		  dot: _react2["default"].PropTypes.bool,
		  overflowCount: _react2["default"].PropTypes.number
		}, _temp);
		exports["default"] = Badge;
		module.exports = exports['default'];
	
	/***/ },
	/* 161 */
	[461, 423],
	/* 162 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _class, _temp;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _BreadcrumbItem = __webpack_require__(57);
		
		var _BreadcrumbItem2 = _interopRequireDefault(_BreadcrumbItem);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var defaultNameRender = function defaultNameRender(breadcrumbName, route, params) {
		  if (!breadcrumbName) {
		    return null;
		  }
		  var paramsKeys = Object.keys(params).join('|');
		  var name = breadcrumbName.replace(new RegExp(':(' + paramsKeys + ')', 'g'), function (replacement, key) {
		    return params[key] || replacement;
		  });
		  return _react2["default"].createElement(
		    'span',
		    null,
		    name
		  );
		};
		
		var Breadcrumb = (_temp = _class = function (_React$Component) {
		  _inherits(Breadcrumb, _React$Component);
		
		  function Breadcrumb() {
		    _classCallCheck(this, Breadcrumb);
		
		    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
		  }
		
		  Breadcrumb.prototype.render = function render() {
		    var crumbs = void 0;
		    var _props = this.props;
		    var separator = _props.separator;
		    var prefixCls = _props.prefixCls;
		    var routes = _props.routes;
		    var params = _props.params;
		    var children = _props.children;
		    var linkRender = _props.linkRender;
		    var nameRender = _props.nameRender;
		
		    if (routes && routes.length > 0) {
		      (function () {
		        var paths = [];
		        var lastPath = routes.length - 1;
		        crumbs = routes.map(function (route, i) {
		          route.path = route.path || '';
		          var path = route.path.replace(/^\//, '');
		          Object.keys(params).forEach(function (key) {
		            path = path.replace(':' + key, params[key]);
		          });
		          if (path) {
		            paths.push(path);
		          }
		          var name = nameRender(route.breadcrumbName, route, params);
		          if (name) {
		            var link = i === lastPath ? name : linkRender('/' + paths.join('/'), name, paths);
		            return _react2["default"].createElement(
		              _BreadcrumbItem2["default"],
		              { separator: separator, key: route.breadcrumbName || i },
		              link
		            );
		          }
		          return null;
		        });
		      })();
		    } else {
		      crumbs = _react2["default"].Children.map(children, function (element, index) {
		        return (0, _react.cloneElement)(element, {
		          separator: separator,
		          key: index
		        });
		      });
		    }
		    return _react2["default"].createElement(
		      'div',
		      { className: prefixCls },
		      crumbs
		    );
		  };
		
		  return Breadcrumb;
		}(_react2["default"].Component), _class.defaultProps = {
		  prefixCls: 'ant-breadcrumb',
		  separator: '/',
		  linkRender: function linkRender(href, name) {
		    return _react2["default"].createElement(
		      'a',
		      { href: '#' + href },
		      name
		    );
		  },
		  nameRender: defaultNameRender
		}, _class.propTypes = {
		  prefixCls: _react2["default"].PropTypes.string,
		  separator: _react2["default"].PropTypes.oneOfType([_react2["default"].PropTypes.string, _react2["default"].PropTypes.element]),
		  routes: _react2["default"].PropTypes.array,
		  params: _react2["default"].PropTypes.object,
		  linkRender: _react2["default"].PropTypes.func,
		  nameRender: _react2["default"].PropTypes.func
		}, _temp);
		exports["default"] = Breadcrumb;
		module.exports = exports['default'];
	
	/***/ },
	/* 163 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _Breadcrumb = __webpack_require__(162);
		
		var _Breadcrumb2 = _interopRequireDefault(_Breadcrumb);
		
		var _BreadcrumbItem = __webpack_require__(57);
		
		var _BreadcrumbItem2 = _interopRequireDefault(_BreadcrumbItem);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		_Breadcrumb2["default"].Item = _BreadcrumbItem2["default"];
		exports["default"] = _Breadcrumb2["default"];
		module.exports = exports['default'];
	
	/***/ },
	/* 164 */
	[461, 424],
	/* 165 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		exports["default"] = ButtonGroup;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
		
		var prefix = 'ant-btn-group-';
		
		function ButtonGroup(props) {
		  var _classNames;
		
		  var size = props.size;
		  var className = props.className;
		
		  var others = _objectWithoutProperties(props, ['size', 'className']);
		
		  // large => lg
		  // small => sm
		
		
		  var sizeCls = {
		    large: 'lg',
		    small: 'sm'
		  }[size] || '';
		
		  var classes = (0, _classnames2["default"])((_classNames = {
		    'ant-btn-group': true
		  }, _defineProperty(_classNames, prefix + sizeCls, sizeCls), _defineProperty(_classNames, className, className), _classNames));
		
		  return _react2["default"].createElement('div', _extends({}, others, { className: classes }));
		}
		
		ButtonGroup.propTypes = {
		  size: _react2["default"].PropTypes.oneOf(['large', 'small'])
		};
		module.exports = exports['default'];
	
	/***/ },
	/* 166 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp2, _initialiseProps;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var _reactDom = __webpack_require__(4);
		
		var _icon = __webpack_require__(6);
		
		var _icon2 = _interopRequireDefault(_icon);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var rxTwoCNChar = /^[\u4e00-\u9fa5]{2}$/;
		var isTwoCNChar = rxTwoCNChar.test.bind(rxTwoCNChar);
		function isString(str) {
		  return typeof str === 'string';
		}
		
		// Insert one space between two chinese characters automatically.
		function insertSpace(child) {
		  if (isString(child.type) && isTwoCNChar(child.props.children)) {
		    return _react2["default"].cloneElement(child, {}, child.props.children.split('').join(' '));
		  }
		  if (isString(child)) {
		    if (isTwoCNChar(child)) {
		      child = child.split('').join(' ');
		    }
		    return _react2["default"].createElement(
		      'span',
		      null,
		      child
		    );
		  }
		  return child;
		}
		
		var Button = (_temp2 = _class = function (_React$Component) {
		  _inherits(Button, _React$Component);
		
		  function Button() {
		    var _temp, _this, _ret;
		
		    _classCallCheck(this, Button);
		
		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }
		
		    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _initialiseProps.call(_this), _temp), _possibleConstructorReturn(_this, _ret);
		  }
		
		  Button.prototype.componentWillUnmount = function componentWillUnmount() {
		    if (this.clickedTimeout) {
		      clearTimeout(this.clickedTimeout);
		    }
		    if (this.timeout) {
		      clearTimeout(this.timeout);
		    }
		  };
		
		  // Handle auto focus when click button in Chrome
		
		
		  Button.prototype.render = function render() {
		    var _classNames;
		
		    var props = this.props;
		    var type = props.type;
		    var shape = props.shape;
		    var size = props.size;
		    var className = props.className;
		    var htmlType = props.htmlType;
		    var children = props.children;
		    var icon = props.icon;
		    var loading = props.loading;
		    var prefixCls = props.prefixCls;
		
		    var others = _objectWithoutProperties(props, ['type', 'shape', 'size', 'className', 'htmlType', 'children', 'icon', 'loading', 'prefixCls']);
		
		    // large => lg
		    // small => sm
		
		
		    var sizeCls = {
		      large: 'lg',
		      small: 'sm'
		    }[size] || '';
		
		    var classes = (0, _classnames2["default"])((_classNames = {}, _defineProperty(_classNames, prefixCls, true), _defineProperty(_classNames, prefixCls + '-' + type, type), _defineProperty(_classNames, prefixCls + '-' + shape, shape), _defineProperty(_classNames, prefixCls + '-' + sizeCls, sizeCls), _defineProperty(_classNames, prefixCls + '-icon-only', !children && icon), _defineProperty(_classNames, prefixCls + '-loading', loading), _defineProperty(_classNames, className, className), _classNames));
		
		    var iconType = loading ? 'loading' : icon;
		
		    var kids = _react2["default"].Children.map(children, insertSpace);
		
		    return _react2["default"].createElement(
		      'button',
		      _extends({}, others, {
		        type: htmlType || 'button',
		        className: classes,
		        onMouseUp: this.handleMouseUp,
		        onClick: this.handleClick
		      }),
		      iconType ? _react2["default"].createElement(_icon2["default"], { type: iconType }) : null,
		      kids
		    );
		  };
		
		  return Button;
		}(_react2["default"].Component), _class.defaultProps = {
		  prefixCls: 'ant-btn',
		  onClick: function onClick() {},
		
		  loading: false
		}, _class.propTypes = {
		  type: _react2["default"].PropTypes.string,
		  shape: _react2["default"].PropTypes.oneOf(['circle', 'circle-outline']),
		  size: _react2["default"].PropTypes.oneOf(['large', 'default', 'small']),
		  htmlType: _react2["default"].PropTypes.oneOf(['submit', 'button', 'reset']),
		  onClick: _react2["default"].PropTypes.func,
		  loading: _react2["default"].PropTypes.bool,
		  className: _react2["default"].PropTypes.string,
		  icon: _react2["default"].PropTypes.string
		}, _initialiseProps = function _initialiseProps() {
		  var _this2 = this;
		
		  this.clearButton = function (button) {
		    button.className = button.className.replace(' ' + _this2.props.prefixCls + '-clicked', '');
		  };
		
		  this.handleClick = function () {
		    var _props;
		
		    // Add click effect
		    var buttonNode = (0, _reactDom.findDOMNode)(_this2);
		    _this2.clearButton(buttonNode);
		    _this2.clickedTimeout = setTimeout(function () {
		      return buttonNode.className += ' ' + _this2.props.prefixCls + '-clicked';
		    }, 10);
		    clearTimeout(_this2.timeout);
		    _this2.timeout = setTimeout(function () {
		      return _this2.clearButton(buttonNode);
		    }, 500);
		
		    (_props = _this2.props).onClick.apply(_props, arguments);
		  };
		
		  this.handleMouseUp = function (e) {
		    (0, _reactDom.findDOMNode)(_this2).blur();
		    if (_this2.props.onMouseUp) {
		      _this2.props.onMouseUp(e);
		    }
		  };
		}, _temp2);
		exports["default"] = Button;
		module.exports = exports['default'];
	
	/***/ },
	/* 167 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _class, _temp2;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _Constants = __webpack_require__(58);
		
		var _select = __webpack_require__(27);
		
		var _select2 = _interopRequireDefault(_select);
		
		var _radio = __webpack_require__(26);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var Option = _select2["default"].Option;
		
		function noop() {}
		
		var Header = (_temp2 = _class = function (_React$Component) {
		  _inherits(Header, _React$Component);
		
		  function Header() {
		    var _temp, _this, _ret;
		
		    _classCallCheck(this, Header);
		
		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }
		
		    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.onYearChange = function (year) {
		      var newValue = _this.props.value.clone();
		      newValue.setYear(parseInt(year, 10));
		      _this.props.onValueChange(newValue);
		    }, _this.onMonthChange = function (month) {
		      var newValue = _this.props.value.clone();
		      newValue.setMonth(parseInt(month, 10));
		      _this.props.onValueChange(newValue);
		    }, _this.onTypeChange = function (e) {
		      _this.props.onTypeChange(e.target.value);
		    }, _temp), _possibleConstructorReturn(_this, _ret);
		  }
		
		  Header.prototype.getYearSelectElement = function getYearSelectElement(year) {
		    var _props = this.props;
		    var yearSelectOffset = _props.yearSelectOffset;
		    var yearSelectTotal = _props.yearSelectTotal;
		    var locale = _props.locale;
		    var prefixCls = _props.prefixCls;
		    var fullscreen = _props.fullscreen;
		
		    var start = year - yearSelectOffset;
		    var end = start + yearSelectTotal;
		    var suffix = locale.year === '年' ? '年' : '';
		
		    var options = [];
		    for (var index = start; index < end; index++) {
		      options.push(_react2["default"].createElement(
		        Option,
		        { key: '' + index },
		        index + suffix
		      ));
		    }
		    return _react2["default"].createElement(
		      _select2["default"],
		      {
		        style: { width: 75 },
		        size: fullscreen ? null : 'small',
		        dropdownMatchSelectWidth: false,
		        dropdownMenuStyle: { minWidth: 103 },
		        className: prefixCls + '-year-select',
		        onChange: this.onYearChange,
		        value: String(year)
		      },
		      options
		    );
		  };
		
		  Header.prototype.getMonthSelectElement = function getMonthSelectElement(month) {
		    var props = this.props;
		    var months = props.locale.format.months;
		    var prefixCls = props.prefixCls;
		    var fullscreen = props.fullscreen;
		
		    var options = [];
		
		    for (var index = 0; index < 12; index++) {
		      options.push(_react2["default"].createElement(
		        Option,
		        { key: '' + index },
		        months[index]
		      ));
		    }
		
		    return _react2["default"].createElement(
		      _select2["default"],
		      {
		        style: { minWidth: 70 },
		        dropdownMenuStyle: { minWidth: 125 },
		        size: fullscreen ? null : 'small',
		        dropdownMatchSelectWidth: false,
		        className: prefixCls + '-month-select',
		        value: String(month),
		        onChange: this.onMonthChange
		      },
		      options
		    );
		  };
		
		  Header.prototype.render = function render() {
		    var _props2 = this.props;
		    var type = _props2.type;
		    var value = _props2.value;
		    var prefixCls = _props2.prefixCls;
		    var locale = _props2.locale;
		
		    var yearSelect = this.getYearSelectElement(value.getYear());
		    var monthSelect = type === 'date' ? this.getMonthSelectElement(value.getMonth()) : null;
		    var typeSwitch = _react2["default"].createElement(
		      _radio.Group,
		      { onChange: this.onTypeChange, value: type },
		      _react2["default"].createElement(
		        _radio.Button,
		        { value: 'date' },
		        locale.month
		      ),
		      _react2["default"].createElement(
		        _radio.Button,
		        { value: 'month' },
		        locale.year
		      )
		    );
		
		    return _react2["default"].createElement(
		      'div',
		      { className: prefixCls + '-header' },
		      yearSelect,
		      monthSelect,
		      typeSwitch
		    );
		  };
		
		  return Header;
		}(_react2["default"].Component), _class.defaultProps = {
		  prefixCls: _Constants.PREFIX_CLS + '-header',
		  yearSelectOffset: 10,
		  yearSelectTotal: 20,
		  onValueChange: noop,
		  onTypeChange: noop
		}, _class.propTypes = {
		  value: _react.PropTypes.object,
		  locale: _react.PropTypes.object,
		  yearSelectOffset: _react.PropTypes.number,
		  yearSelectTotal: _react.PropTypes.number,
		  onValueChange: _react.PropTypes.func,
		  onTypeChange: _react.PropTypes.func,
		  prefixCls: _react.PropTypes.string,
		  selectPrefixCls: _react.PropTypes.string,
		  type: _react.PropTypes.string
		}, _temp2);
		exports["default"] = Header;
		module.exports = exports['default'];
	
	/***/ },
	/* 168 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp, _initialiseProps;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _gregorianCalendar = __webpack_require__(9);
		
		var _gregorianCalendar2 = _interopRequireDefault(_gregorianCalendar);
		
		var _zh_CN = __webpack_require__(169);
		
		var _zh_CN2 = _interopRequireDefault(_zh_CN);
		
		var _FullCalendar = __webpack_require__(291);
		
		var _FullCalendar2 = _interopRequireDefault(_FullCalendar);
		
		var _Constants = __webpack_require__(58);
		
		var _Header = __webpack_require__(167);
		
		var _Header2 = _interopRequireDefault(_Header);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		function noop() {
		  return null;
		}
		
		function zerofixed(v) {
		  if (v < 10) return '0' + v;
		  return '' + v;
		}
		
		var Calendar = (_temp = _class = function (_React$Component) {
		  _inherits(Calendar, _React$Component);
		
		  function Calendar(props) {
		    _classCallCheck(this, Calendar);
		
		    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));
		
		    _initialiseProps.call(_this);
		
		    _this.state = {
		      value: _this.parseDateFromValue(props.value || new Date()),
		      mode: props.mode
		    };
		    return _this;
		  }
		
		  Calendar.prototype.parseDateFromValue = function parseDateFromValue(value) {
		    var date = new _gregorianCalendar2["default"](this.getLocale());
		    date.setTime(+value);
		    return date;
		  };
		
		  Calendar.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
		    if ('value' in nextProps) {
		      this.setState({
		        value: this.parseDateFromValue(nextProps.value)
		      });
		    }
		  };
		
		  Calendar.prototype.render = function render() {
		    var props = this.props;
		    var _state = this.state;
		    var value = _state.value;
		    var mode = _state.mode;
		    var prefixCls = props.prefixCls;
		    var style = props.style;
		    var className = props.className;
		    var fullscreen = props.fullscreen;
		
		    var type = mode === 'year' ? 'month' : 'date';
		    var locale = this.getLocale();
		
		    var cls = className || '';
		    if (fullscreen) {
		      cls += ' ' + prefixCls + '-fullscreen';
		    }
		
		    return _react2["default"].createElement(
		      'div',
		      { className: cls, style: style },
		      _react2["default"].createElement(_Header2["default"], {
		        fullscreen: fullscreen,
		        type: type,
		        value: value,
		        locale: locale.lang,
		        prefixCls: prefixCls,
		        onTypeChange: this.setType,
		        onValueChange: this.setValue
		      }),
		      _react2["default"].createElement(_FullCalendar2["default"], _extends({}, props, {
		        Select: noop,
		        locale: locale.lang,
		        type: type,
		        prefixCls: prefixCls,
		        showHeader: false,
		        value: value,
		        monthCellRender: this.monthCellRender,
		        dateCellRender: this.dateCellRender
		      }))
		    );
		  };
		
		  return Calendar;
		}(_react2["default"].Component), _class.defaultProps = {
		  monthCellRender: noop,
		  dateCellRender: noop,
		  locale: {},
		  fullscreen: true,
		  prefixCls: _Constants.PREFIX_CLS,
		  onPanelChange: noop,
		  mode: 'month'
		}, _class.propTypes = {
		  monthCellRender: _react.PropTypes.func,
		  dateCellRender: _react.PropTypes.func,
		  fullscreen: _react.PropTypes.bool,
		  locale: _react.PropTypes.object,
		  prefixCls: _react.PropTypes.string,
		  className: _react.PropTypes.string,
		  style: _react.PropTypes.object,
		  onPanelChange: _react.PropTypes.func,
		  value: _react.PropTypes.instanceOf(Date)
		}, _class.contextTypes = {
		  antLocale: _react.PropTypes.object
		}, _initialiseProps = function _initialiseProps() {
		  var _this2 = this;
		
		  this.getLocale = function () {
		    var props = _this2.props;
		    var locale = _zh_CN2["default"];
		    var context = _this2.context;
		    if (context && context.antLocale && context.antLocale.Calendar) {
		      locale = context.antLocale.Calendar;
		    }
		    // 统一合并为完整的 Locale
		    var result = _extends({}, locale, props.locale);
		    result.lang = _extends({}, locale.lang, props.locale.lang);
		    return result;
		  };
		
		  this.monthCellRender = function (value, locale) {
		    var prefixCls = _this2.props.prefixCls;
		    var month = value.getMonth();
		    return _react2["default"].createElement(
		      'div',
		      { className: prefixCls + '-month' },
		      _react2["default"].createElement(
		        'div',
		        { className: prefixCls + '-value' },
		        locale.format.shortMonths[month]
		      ),
		      _react2["default"].createElement(
		        'div',
		        { className: prefixCls + '-content' },
		        _this2.props.monthCellRender(value)
		      )
		    );
		  };
		
		  this.dateCellRender = function (value) {
		    var prefixCls = _this2.props.prefixCls;
		    return _react2["default"].createElement(
		      'div',
		      { className: prefixCls + '-date' },
		      _react2["default"].createElement(
		        'div',
		        { className: prefixCls + '-value' },
		        zerofixed(value.getDayOfMonth())
		      ),
		      _react2["default"].createElement(
		        'div',
		        { className: prefixCls + '-content' },
		        _this2.props.dateCellRender(value)
		      )
		    );
		  };
		
		  this.setValue = function (value) {
		    if (!('value' in _this2.props) && _this2.state.value !== value) {
		      _this2.setState({ value: value });
		    }
		    _this2.props.onPanelChange(value, _this2.state.mode);
		  };
		
		  this.setType = function (type) {
		    var mode = type === 'date' ? 'month' : 'year';
		    if (_this2.state.mode !== mode) {
		      _this2.setState({ mode: mode });
		      _this2.props.onPanelChange(_this2.state.value, mode);
		    }
		  };
		}, _temp);
		exports["default"] = Calendar;
		module.exports = exports['default'];
	
	/***/ },
	/* 169 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		module.exports = __webpack_require__(60);
	
	/***/ },
	/* 170 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		__webpack_require__(3);
		
		__webpack_require__(426);
		
		__webpack_require__(28);
		
		__webpack_require__(40);
	
	/***/ },
	/* 171 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
		
		exports["default"] = function (props) {
		  var _classNames;
		
		  var _props$prefixCls = props.prefixCls;
		  var prefixCls = _props$prefixCls === undefined ? 'ant-card' : _props$prefixCls;
		  var className = props.className;
		  var children = props.children;
		  var extra = props.extra;
		  var bodyStyle = props.bodyStyle;
		  var title = props.title;
		  var loading = props.loading;
		  var _props$bordered = props.bordered;
		  var bordered = _props$bordered === undefined ? true : _props$bordered;
		
		  var other = _objectWithoutProperties(props, ['prefixCls', 'className', 'children', 'extra', 'bodyStyle', 'title', 'loading', 'bordered']);
		
		  var classString = (0, _classnames2["default"])((_classNames = {}, _defineProperty(_classNames, prefixCls, true), _defineProperty(_classNames, className, !!className), _defineProperty(_classNames, prefixCls + '-loading', loading), _defineProperty(_classNames, prefixCls + '-bordered', bordered), _classNames));
		
		  if (loading) {
		    children = _react2["default"].createElement(
		      'div',
		      null,
		      _react2["default"].createElement(
		        'p',
		        null,
		        '████████████████████████'
		      ),
		      _react2["default"].createElement(
		        'p',
		        null,
		        '██████　███████████████████'
		      ),
		      _react2["default"].createElement(
		        'p',
		        null,
		        '██████████████　██████████'
		      ),
		      _react2["default"].createElement(
		        'p',
		        null,
		        '█████　██████　█████████████'
		      ),
		      _react2["default"].createElement(
		        'p',
		        null,
		        '███████████　██████████　███'
		      )
		    );
		  }
		
		  var head = title ? _react2["default"].createElement(
		    'div',
		    { className: prefixCls + '-head' },
		    _react2["default"].createElement(
		      'h3',
		      { className: prefixCls + '-head-title' },
		      title
		    )
		  ) : null;
		
		  return _react2["default"].createElement(
		    'div',
		    _extends({}, other, { className: classString }),
		    head,
		    extra ? _react2["default"].createElement(
		      'div',
		      { className: prefixCls + '-extra' },
		      extra
		    ) : null,
		    _react2["default"].createElement(
		      'div',
		      { className: prefixCls + '-body', style: bodyStyle },
		      children
		    )
		  );
		};
		
		module.exports = exports['default'];
	
	/***/ },
	/* 172 */
	[461, 427],
	/* 173 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp;
		
		var _reactSlick = __webpack_require__(408);
		
		var _reactSlick2 = _interopRequireDefault(_reactSlick);
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		// matchMedia polyfill for
		// https://github.com/WickyNilliams/enquire.js/issues/82
		if (typeof window !== 'undefined') {
		  var matchMediaPolyfill = function matchMediaPolyfill() {
		    return {
		      matches: false,
		      addListener: function addListener() {},
		      removeListener: function removeListener() {}
		    };
		  };
		  window.matchMedia = window.matchMedia || matchMediaPolyfill;
		}
		
		var Carousel = (_temp = _class = function (_React$Component) {
		  _inherits(Carousel, _React$Component);
		
		  function Carousel() {
		    _classCallCheck(this, Carousel);
		
		    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
		  }
		
		  Carousel.prototype.render = function render() {
		    var props = _extends({}, this.props);
		
		    if (props.effect === 'fade') {
		      props.fade = true;
		      props.draggable = false;
		    }
		
		    var className = 'ant-carousel';
		    if (props.vertical) {
		      className = className + ' ant-carousel-vertical';
		    }
		
		    return _react2["default"].createElement(
		      'div',
		      { className: className },
		      _react2["default"].createElement(_reactSlick2["default"], props)
		    );
		  };
		
		  return Carousel;
		}(_react2["default"].Component), _class.defaultProps = {
		  dots: true,
		  arrows: false
		}, _temp);
		exports["default"] = Carousel;
		module.exports = exports['default'];
	
	/***/ },
	/* 174 */
	[461, 428],
	/* 175 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp, _initialiseProps;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _rcCascader = __webpack_require__(303);
		
		var _rcCascader2 = _interopRequireDefault(_rcCascader);
		
		var _input = __webpack_require__(65);
		
		var _input2 = _interopRequireDefault(_input);
		
		var _icon = __webpack_require__(6);
		
		var _icon2 = _interopRequireDefault(_icon);
		
		var _arrayTreeFilter = __webpack_require__(53);
		
		var _arrayTreeFilter2 = _interopRequireDefault(_arrayTreeFilter);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var _object = __webpack_require__(16);
		
		var _object2 = _interopRequireDefault(_object);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var Cascader = (_temp = _class = function (_React$Component) {
		  _inherits(Cascader, _React$Component);
		
		  function Cascader(props) {
		    _classCallCheck(this, Cascader);
		
		    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));
		
		    _initialiseProps.call(_this);
		
		    var value = void 0;
		    if ('value' in props) {
		      value = props.value;
		    } else if ('defaultValue' in props) {
		      value = props.defaultValue;
		    }
		    _this.state = {
		      value: value || [],
		      popupVisible: false
		    };
		    return _this;
		  }
		
		  Cascader.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
		    if ('value' in nextProps) {
		      this.setState({ value: nextProps.value || [] });
		    }
		  };
		
		  Cascader.prototype.getLabel = function getLabel() {
		    var _this2 = this;
		
		    var _props = this.props;
		    var options = _props.options;
		    var displayRender = _props.displayRender;
		
		    var selectedOptions = (0, _arrayTreeFilter2["default"])(options, function (o, level) {
		      return o.value === _this2.state.value[level];
		    });
		    var label = selectedOptions.map(function (o) {
		      return o.label;
		    });
		    return displayRender(label, selectedOptions);
		  };
		
		  Cascader.prototype.render = function render() {
		    var _classNames, _classNames2;
		
		    var props = this.props;
		    var prefixCls = props.prefixCls;
		    var children = props.children;
		    var placeholder = props.placeholder;
		    var size = props.size;
		    var disabled = props.disabled;
		    var className = props.className;
		    var style = props.style;
		    var allowClear = props.allowClear;
		
		    var otherProps = _objectWithoutProperties(props, ['prefixCls', 'children', 'placeholder', 'size', 'disabled', 'className', 'style', 'allowClear']);
		
		    var sizeCls = (0, _classnames2["default"])({
		      'ant-input-lg': size === 'large',
		      'ant-input-sm': size === 'small'
		    });
		    var clearIcon = allowClear && !disabled && this.state.value.length > 0 ? _react2["default"].createElement(_icon2["default"], { type: 'cross-circle',
		      className: prefixCls + '-picker-clear',
		      onClick: this.clearSelection
		    }) : null;
		    var arrowCls = (0, _classnames2["default"])((_classNames = {}, _defineProperty(_classNames, prefixCls + '-picker-arrow', true), _defineProperty(_classNames, prefixCls + '-picker-arrow-expand', this.state.popupVisible), _classNames));
		    var pickerCls = (0, _classnames2["default"])((_classNames2 = {}, _defineProperty(_classNames2, className, !!className), _defineProperty(_classNames2, prefixCls + '-picker', true), _defineProperty(_classNames2, prefixCls + '-picker-disabled', disabled), _classNames2));
		
		    // Fix bug of https://github.com/facebook/react/pull/5004
		    // and https://fb.me/react-unknown-prop
		    var inputProps = (0, _object2["default"])(otherProps, ['onChange', 'options', 'popupPlacement', 'transitionName', 'displayRender', 'onPopupVisibleChange', 'changeOnSelect', 'expandTrigger', 'popupVisible', 'getPopupContainer', 'loadData', 'popupClassName']);
		
		    return _react2["default"].createElement(
		      _rcCascader2["default"],
		      _extends({}, props, {
		        value: this.state.value,
		        popupVisible: this.state.popupVisible,
		        onPopupVisibleChange: this.handlePopupVisibleChange,
		        onChange: this.handleChange
		      }),
		      children || _react2["default"].createElement(
		        'span',
		        {
		          style: style,
		          className: pickerCls
		        },
		        _react2["default"].createElement(_input2["default"], _extends({}, inputProps, {
		          placeholder: this.state.value && this.state.value.length > 0 ? null : placeholder,
		          className: prefixCls + '-input ' + sizeCls,
		          value: null,
		          disabled: disabled,
		          readOnly: true
		        })),
		        _react2["default"].createElement(
		          'span',
		          { className: prefixCls + '-picker-label' },
		          this.getLabel()
		        ),
		        clearIcon,
		        _react2["default"].createElement(_icon2["default"], { type: 'down', className: arrowCls })
		      )
		    );
		  };
		
		  return Cascader;
		}(_react2["default"].Component), _class.defaultProps = {
		  prefixCls: 'ant-cascader',
		  placeholder: 'Please select',
		  transitionName: 'slide-up',
		  popupPlacement: 'bottomLeft',
		  onChange: function onChange() {},
		
		  options: [],
		  displayRender: function displayRender(label) {
		    return label.join(' / ');
		  },
		  disabled: false,
		  allowClear: true,
		  onPopupVisibleChange: function onPopupVisibleChange() {}
		}, _initialiseProps = function _initialiseProps() {
		  var _this3 = this;
		
		  this.handleChange = function (value, selectedOptions) {
		    _this3.setValue(value, selectedOptions);
		  };
		
		  this.handlePopupVisibleChange = function (popupVisible) {
		    _this3.setState({ popupVisible: popupVisible });
		    _this3.props.onPopupVisibleChange(popupVisible);
		  };
		
		  this.setValue = function (value) {
		    var selectedOptions = arguments.length <= 1 || arguments[1] === undefined ? [] : arguments[1];
		
		    if (!('value' in _this3.props)) {
		      _this3.setState({ value: value });
		    }
		    _this3.props.onChange(value, selectedOptions);
		  };
		
		  this.clearSelection = function (e) {
		    e.preventDefault();
		    e.stopPropagation();
		    _this3.setValue([]);
		    _this3.setState({ popupVisible: false });
		  };
		}, _temp);
		exports["default"] = Cascader;
		module.exports = exports['default'];
	
	/***/ },
	/* 176 */
	[462, 429],
	/* 177 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _class, _temp, _initialiseProps;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _index = __webpack_require__(20);
		
		var _index2 = _interopRequireDefault(_index);
		
		var _reactAddonsPureRenderMixin = __webpack_require__(14);
		
		var _reactAddonsPureRenderMixin2 = _interopRequireDefault(_reactAddonsPureRenderMixin);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var CheckboxGroup = (_temp = _class = function (_React$Component) {
		  _inherits(CheckboxGroup, _React$Component);
		
		  function CheckboxGroup(props) {
		    _classCallCheck(this, CheckboxGroup);
		
		    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));
		
		    _initialiseProps.call(_this);
		
		    var value = void 0;
		    if ('value' in props) {
		      value = props.value || [];
		    } else if ('defaultValue' in props) {
		      value = props.defaultValue || [];
		    }
		    _this.state = { value: value };
		    return _this;
		  }
		
		  CheckboxGroup.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
		    if ('value' in nextProps) {
		      this.setState({
		        value: nextProps.value || []
		      });
		    }
		  };
		
		  CheckboxGroup.prototype.shouldComponentUpdate = function shouldComponentUpdate() {
		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }
		
		    return _reactAddonsPureRenderMixin2["default"].shouldComponentUpdate.apply(this, args);
		  };
		
		  CheckboxGroup.prototype.getOptions = function getOptions() {
		    var options = this.props.options;
		
		    return options.map(function (option) {
		      if (typeof option === 'string') {
		        return {
		          label: option,
		          value: option
		        };
		      }
		      return option;
		    });
		  };
		
		  CheckboxGroup.prototype.render = function render() {
		    var _this2 = this;
		
		    var options = this.getOptions();
		    return _react2["default"].createElement(
		      'div',
		      { className: 'ant-checkbox-group' },
		      options.map(function (option) {
		        return _react2["default"].createElement(
		          _index2["default"],
		          { disabled: 'disabled' in option ? option.disabled : _this2.props.disabled,
		            checked: _this2.state.value.indexOf(option.value) !== -1,
		            onChange: function onChange() {
		              return _this2.toggleOption(option);
		            },
		            className: 'ant-checkbox-group-item', key: option.value
		          },
		          option.label
		        );
		      })
		    );
		  };
		
		  return CheckboxGroup;
		}(_react2["default"].Component), _class.defaultProps = {
		  options: [],
		  defaultValue: [],
		  onChange: function onChange() {}
		}, _class.propTypes = {
		  defaultValue: _react2["default"].PropTypes.array,
		  value: _react2["default"].PropTypes.array,
		  options: _react2["default"].PropTypes.array.isRequired,
		  onChange: _react2["default"].PropTypes.func
		}, _initialiseProps = function _initialiseProps() {
		  var _this3 = this;
		
		  this.toggleOption = function (option) {
		    var optionIndex = _this3.state.value.indexOf(option.value);
		    var value = [].concat(_toConsumableArray(_this3.state.value));
		    if (optionIndex === -1) {
		      value.push(option.value);
		    } else {
		      value.splice(optionIndex, 1);
		    }
		    if (!('value' in _this3.props)) {
		      _this3.setState({ value: value });
		    }
		    _this3.props.onChange(value);
		  };
		}, _temp);
		exports["default"] = CheckboxGroup;
		module.exports = exports['default'];
	
	/***/ },
	/* 178 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		__webpack_require__(3);
		
		__webpack_require__(51);
	
	/***/ },
	/* 179 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _class, _temp;
		
		var _rcCollapse = __webpack_require__(308);
		
		var _rcCollapse2 = _interopRequireDefault(_rcCollapse);
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var Collapse = (_temp = _class = function (_React$Component) {
		  _inherits(Collapse, _React$Component);
		
		  function Collapse() {
		    _classCallCheck(this, Collapse);
		
		    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
		  }
		
		  Collapse.prototype.render = function render() {
		    return _react2["default"].createElement(_rcCollapse2["default"], this.props);
		  };
		
		  return Collapse;
		}(_react2["default"].Component), _class.Panel = _rcCollapse2["default"].Panel, _class.defaultProps = {
		  prefixCls: 'ant-collapse'
		}, _temp);
		exports["default"] = Collapse;
		module.exports = exports['default'];
	
	/***/ },
	/* 180 */
	[461, 431],
	/* 181 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _class, _temp;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _zh_CN = __webpack_require__(101);
		
		var _zh_CN2 = _interopRequireDefault(_zh_CN);
		
		var _rcCalendar = __webpack_require__(100);
		
		var _rcCalendar2 = _interopRequireDefault(_rcCalendar);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var Calendar = (_temp = _class = function (_React$Component) {
		  _inherits(Calendar, _React$Component);
		
		  function Calendar() {
		    _classCallCheck(this, Calendar);
		
		    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
		  }
		
		  Calendar.prototype.render = function render() {
		    return _react2["default"].createElement(_rcCalendar2["default"], this.props);
		  };
		
		  return Calendar;
		}(_react2["default"].Component), _class.defaultProps = {
		  locale: _zh_CN2["default"],
		  prefixCls: 'ant-calendar'
		}, _temp);
		exports["default"] = Calendar;
		module.exports = exports['default'];
	
	/***/ },
	/* 182 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp, _initialiseProps;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _gregorianCalendar = __webpack_require__(9);
		
		var _gregorianCalendar2 = _interopRequireDefault(_gregorianCalendar);
		
		var _RangeCalendar = __webpack_require__(292);
		
		var _RangeCalendar2 = _interopRequireDefault(_RangeCalendar);
		
		var _Picker = __webpack_require__(94);
		
		var _Picker2 = _interopRequireDefault(_Picker);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var _icon = __webpack_require__(6);
		
		var _icon2 = _interopRequireDefault(_icon);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var RangePicker = (_temp = _class = function (_React$Component) {
		  _inherits(RangePicker, _React$Component);
		
		  function RangePicker(props) {
		    _classCallCheck(this, RangePicker);
		
		    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));
		
		    _initialiseProps.call(_this);
		
		    var _this$props = _this.props;
		    var value = _this$props.value;
		    var defaultValue = _this$props.defaultValue;
		    var parseDateFromValue = _this$props.parseDateFromValue;
		
		    var start = value && value[0] || defaultValue[0];
		    var end = value && value[1] || defaultValue[1];
		    _this.state = {
		      value: [parseDateFromValue(start), parseDateFromValue(end)]
		    };
		    return _this;
		  }
		
		  RangePicker.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
		    if ('value' in nextProps) {
		      var value = nextProps.value || [];
		      var start = nextProps.parseDateFromValue(value[0]);
		      var end = nextProps.parseDateFromValue(value[1]);
		      this.setState({
		        value: [start, end]
		      });
		    }
		  };
		
		  RangePicker.prototype.render = function render() {
		    var props = this.props;
		    var locale = props.locale;
		    // 以下两行代码
		    // 给没有初始值的日期选择框提供本地化信息
		    // 否则会以周日开始排
		    var defaultCalendarValue = new _gregorianCalendar2["default"](locale);
		    defaultCalendarValue.setTime(Date.now());
		
		    var _props = this.props;
		    var disabledDate = _props.disabledDate;
		    var showTime = _props.showTime;
		    var getCalendarContainer = _props.getCalendarContainer;
		    var transitionName = _props.transitionName;
		    var disabled = _props.disabled;
		    var popupStyle = _props.popupStyle;
		    var align = _props.align;
		    var style = _props.style;
		    var onOk = _props.onOk;
		
		    var state = this.state;
		
		    var calendarClassName = (0, _classnames2["default"])({
		      'ant-calendar-time': showTime
		    });
		
		    // 需要选择时间时，点击 ok 时才触发 onChange
		    var pickerChangeHandler = {
		      onChange: this.handleChange
		    };
		    var calendarHandler = {
		      onOk: this.handleChange
		    };
		    if (props.timePicker) {
		      pickerChangeHandler = {};
		    } else {
		      calendarHandler = {};
		    }
		
		    var startPlaceholder = 'startPlaceholder' in this.props ? props.startPlaceholder : locale.lang.rangePlaceholder[0];
		    var endPlaceholder = 'endPlaceholder' in props ? props.endPlaceholder : locale.lang.rangePlaceholder[1];
		
		    var calendar = _react2["default"].createElement(_RangeCalendar2["default"], _extends({
		      prefixCls: 'ant-calendar',
		      className: calendarClassName,
		      timePicker: props.timePicker,
		      disabledDate: disabledDate,
		      dateInputPlaceholder: [startPlaceholder, endPlaceholder],
		      locale: locale.lang,
		      onOk: onOk,
		      defaultValue: [defaultCalendarValue, defaultCalendarValue]
		    }, calendarHandler));
		
		    var clearIcon = !props.disabled && state.value && (state.value[0] || state.value[1]) ? _react2["default"].createElement(_icon2["default"], {
		      type: 'cross-circle',
		      className: 'ant-calendar-picker-clear',
		      onClick: this.clearSelection
		    }) : null;
		
		    return _react2["default"].createElement(
		      'span',
		      { className: props.pickerClass, style: style },
		      _react2["default"].createElement(
		        _Picker2["default"],
		        _extends({
		          formatter: props.getFormatter(),
		          transitionName: transitionName,
		          disabled: disabled,
		          calendar: calendar,
		          value: state.value,
		          prefixCls: 'ant-calendar-picker-container',
		          style: popupStyle,
		          align: align,
		          getCalendarContainer: getCalendarContainer,
		          onOpen: props.toggleOpen,
		          onClose: props.toggleOpen
		        }, pickerChangeHandler),
		        function (_ref) {
		          var value = _ref.value;
		
		          var start = value[0];
		          var end = value[1];
		          return _react2["default"].createElement(
		            'span',
		            { className: props.pickerInputClass, disabled: disabled },
		            _react2["default"].createElement('input', {
		              disabled: disabled,
		              readOnly: true,
		              value: start ? props.getFormatter().format(start) : '',
		              placeholder: startPlaceholder,
		              className: 'ant-calendar-range-picker-input'
		            }),
		            _react2["default"].createElement(
		              'span',
		              { className: 'ant-calendar-range-picker-separator' },
		              ' ~ '
		            ),
		            _react2["default"].createElement('input', {
		              disabled: disabled,
		              readOnly: true,
		              value: end ? props.getFormatter().format(end) : '',
		              placeholder: endPlaceholder,
		              className: 'ant-calendar-range-picker-input'
		            }),
		            clearIcon,
		            _react2["default"].createElement('span', { className: 'ant-calendar-picker-icon' })
		          );
		        }
		      )
		    );
		  };
		
		  return RangePicker;
		}(_react2["default"].Component), _class.defaultProps = {
		  defaultValue: []
		}, _initialiseProps = function _initialiseProps() {
		  var _this2 = this;
		
		  this.clearSelection = function (e) {
		    e.preventDefault();
		    e.stopPropagation();
		    _this2.setState({ value: [] });
		    _this2.handleChange([]);
		  };
		
		  this.handleChange = function (value) {
		    var props = _this2.props;
		    if (!('value' in props)) {
		      _this2.setState({ value: value });
		    }
		    var startDate = value[0] ? new Date(value[0].getTime()) : null;
		    var endDate = value[1] ? new Date(value[1].getTime()) : null;
		    var startDateString = value[0] ? props.getFormatter().format(value[0]) : '';
		    var endDateString = value[1] ? props.getFormatter().format(value[1]) : '';
		    props.onChange([startDate, endDate], [startDateString, endDateString]);
		  };
		}, _temp);
		exports["default"] = RangePicker;
		module.exports = exports['default'];
	
	/***/ },
	/* 183 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		exports["default"] = createPicker;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _MonthCalendar = __webpack_require__(93);
		
		var _MonthCalendar2 = _interopRequireDefault(_MonthCalendar);
		
		var _Picker = __webpack_require__(94);
		
		var _Picker2 = _interopRequireDefault(_Picker);
		
		var _gregorianCalendar = __webpack_require__(9);
		
		var _gregorianCalendar2 = _interopRequireDefault(_gregorianCalendar);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var _icon = __webpack_require__(6);
		
		var _icon2 = _interopRequireDefault(_icon);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		function createPicker(TheCalendar) {
		  var _class, _temp, _initialiseProps;
		
		  return _temp = _class = function (_React$Component) {
		    _inherits(CalenderWrapper, _React$Component);
		
		    function CalenderWrapper(props) {
		      _classCallCheck(this, CalenderWrapper);
		
		      var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));
		
		      _initialiseProps.call(_this);
		
		      _this.state = {
		        value: _this.props.parseDateFromValue(_this.props.value || _this.props.defaultValue)
		      };
		      return _this;
		    }
		
		    CalenderWrapper.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
		      if ('value' in nextProps) {
		        this.setState({
		          value: nextProps.parseDateFromValue(nextProps.value)
		        });
		      }
		    };
		
		    CalenderWrapper.prototype.render = function render() {
		      var props = this.props;
		      var locale = props.locale;
		      // 以下两行代码
		      // 给没有初始值的日期选择框提供本地化信息
		      // 否则会以周日开始排
		      var defaultCalendarValue = new _gregorianCalendar2["default"](locale);
		      defaultCalendarValue.setTime(Date.now());
		
		      var placeholder = 'placeholder' in props ? props.placeholder : locale.lang.placeholder;
		
		      var disabledTime = props.showTime ? props.disabledTime : null;
		
		      var calendarClassName = (0, _classnames2["default"])({
		        'ant-calendar-time': props.showTime,
		        'ant-calendar-month': _MonthCalendar2["default"] === TheCalendar
		      });
		
		      // 需要选择时间时，点击 ok 时才触发 onChange
		      var pickerChangeHandler = {
		        onChange: this.handleChange
		      };
		      var calendarHandler = {
		        onOk: this.handleChange
		      };
		      if (props.showTime) {
		        pickerChangeHandler = {};
		      } else {
		        calendarHandler = {};
		      }
		
		      var calendar = _react2["default"].createElement(TheCalendar, _extends({
		        formatter: props.getFormatter(),
		        disabledDate: props.disabledDate,
		        disabledTime: disabledTime,
		        locale: locale.lang,
		        timePicker: props.timePicker,
		        defaultValue: defaultCalendarValue,
		        dateInputPlaceholder: placeholder,
		        prefixCls: 'ant-calendar',
		        className: calendarClassName,
		        onOk: props.onOk
		      }, calendarHandler));
		
		      // default width for showTime
		      var pickerStyle = {};
		      if (props.showTime) {
		        pickerStyle.width = 180;
		      }
		
		      var clearIcon = !props.disabled && this.state.value ? _react2["default"].createElement(_icon2["default"], { type: 'cross-circle',
		        className: 'ant-calendar-picker-clear',
		        onClick: this.clearSelection
		      }) : null;
		      return _react2["default"].createElement(
		        'span',
		        { className: props.pickerClass, style: _extends({}, pickerStyle, props.style) },
		        _react2["default"].createElement(
		          _Picker2["default"],
		          _extends({
		            transitionName: props.transitionName,
		            disabled: props.disabled,
		            calendar: calendar,
		            value: this.state.value,
		            prefixCls: 'ant-calendar-picker-container',
		            style: props.popupStyle,
		            align: props.align,
		            getCalendarContainer: props.getCalendarContainer,
		            open: props.open,
		            onOpen: props.toggleOpen,
		            onClose: props.toggleOpen
		          }, pickerChangeHandler),
		          function (_ref) {
		            var value = _ref.value;
		
		            return _react2["default"].createElement(
		              'span',
		              null,
		              _react2["default"].createElement('input', {
		                disabled: props.disabled,
		                readOnly: true,
		                value: value ? props.getFormatter().format(value) : '',
		                placeholder: placeholder,
		                className: props.pickerInputClass
		              }),
		              clearIcon,
		              _react2["default"].createElement('span', { className: 'ant-calendar-picker-icon' })
		            );
		          }
		        )
		      );
		    };
		
		    return CalenderWrapper;
		  }(_react2["default"].Component), _initialiseProps = function _initialiseProps() {
		    var _this2 = this;
		
		    this.clearSelection = function (e) {
		      e.preventDefault();
		      e.stopPropagation();
		      _this2.setState({ value: null });
		      _this2.handleChange(null);
		    };
		
		    this.handleChange = function (value) {
		      var props = _this2.props;
		      if (!('value' in props)) {
		        _this2.setState({ value: value });
		      }
		      var timeValue = value ? new Date(value.getTime()) : null;
		      props.onChange(timeValue, value ? props.getFormatter().format(value) : '');
		    };
		  }, _temp;
		}
		module.exports = exports['default'];
	
	/***/ },
	/* 184 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _rcCalendar = __webpack_require__(100);
		
		var _rcCalendar2 = _interopRequireDefault(_rcCalendar);
		
		var _MonthCalendar = __webpack_require__(93);
		
		var _MonthCalendar2 = _interopRequireDefault(_MonthCalendar);
		
		var _createPicker = __webpack_require__(183);
		
		var _createPicker2 = _interopRequireDefault(_createPicker);
		
		var _wrapPicker = __webpack_require__(186);
		
		var _wrapPicker2 = _interopRequireDefault(_wrapPicker);
		
		var _RangePicker = __webpack_require__(182);
		
		var _RangePicker2 = _interopRequireDefault(_RangePicker);
		
		var _Calendar = __webpack_require__(181);
		
		var _Calendar2 = _interopRequireDefault(_Calendar);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		var DatePicker = (0, _wrapPicker2["default"])((0, _createPicker2["default"])(_rcCalendar2["default"]));
		var MonthPicker = (0, _wrapPicker2["default"])((0, _createPicker2["default"])(_MonthCalendar2["default"]), 'yyyy-MM');
		
		DatePicker.Calendar = _Calendar2["default"];
		DatePicker.RangePicker = (0, _wrapPicker2["default"])(_RangePicker2["default"], 'yyyy-MM-dd');
		DatePicker.MonthPicker = MonthPicker;
		
		exports["default"] = DatePicker;
		module.exports = exports['default'];
	
	/***/ },
	/* 185 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		__webpack_require__(3);
		
		__webpack_require__(432);
		
		__webpack_require__(15);
		
		__webpack_require__(79);
	
	/***/ },
	/* 186 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		exports["default"] = wrapPicker;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _rcTimePicker = __webpack_require__(374);
		
		var _rcTimePicker2 = _interopRequireDefault(_rcTimePicker);
		
		var _gregorianCalendarFormat = __webpack_require__(29);
		
		var _gregorianCalendarFormat2 = _interopRequireDefault(_gregorianCalendarFormat);
		
		var _gregorianCalendar = __webpack_require__(9);
		
		var _gregorianCalendar2 = _interopRequireDefault(_gregorianCalendar);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var _zh_CN = __webpack_require__(60);
		
		var _zh_CN2 = _interopRequireDefault(_zh_CN);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		function wrapPicker(Picker, defaultFormat) {
		  var _class, _temp2;
		
		  return _temp2 = _class = function (_React$Component) {
		    _inherits(PickerWrapper, _React$Component);
		
		    function PickerWrapper() {
		      var _temp, _this, _ret;
		
		      _classCallCheck(this, PickerWrapper);
		
		      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		        args[_key] = arguments[_key];
		      }
		
		      return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.getFormatter = function () {
		        var format = _this.props.format;
		        var formatter = new _gregorianCalendarFormat2["default"](format, _this.getLocale().lang.format);
		        return formatter;
		      }, _this.parseDateFromValue = function (value) {
		        if (value) {
		          if (typeof value === 'string') {
		            return _this.getFormatter().parse(value, { locale: _this.getLocale() });
		          } else if (value instanceof Date) {
		            var date = new _gregorianCalendar2["default"](_this.getLocale());
		            date.setTime(+value);
		            return date;
		          }
		        }
		        return value;
		      }, _this.toggleOpen = function (_ref) {
		        var open = _ref.open;
		
		        _this.props.toggleOpen({ open: open });
		      }, _temp), _possibleConstructorReturn(_this, _ret);
		    }
		
		    PickerWrapper.prototype.getLocale = function getLocale() {
		      var props = this.props;
		      var locale = _zh_CN2["default"];
		      var context = this.context;
		      if (context.antLocale && context.antLocale.DatePicker) {
		        locale = context.antLocale.DatePicker;
		      }
		      // 统一合并为完整的 Locale
		      var result = _extends({}, locale, props.locale);
		      result.lang = _extends({}, locale.lang, props.locale.lang);
		      return result;
		    };
		
		    PickerWrapper.prototype.render = function render() {
		      var props = this.props;
		      var pickerClass = (0, _classnames2["default"])({
		        'ant-calendar-picker': true
		      });
		      var pickerInputClass = (0, _classnames2["default"])({
		        'ant-calendar-range-picker': true,
		        'ant-input': true,
		        'ant-input-lg': props.size === 'large',
		        'ant-input-sm': props.size === 'small'
		      });
		
		      var locale = this.getLocale();
		
		      var timeFormat = props.showTime && props.showTime.format;
		      var rcTimePickerProps = {
		        formatter: new _gregorianCalendarFormat2["default"](timeFormat || 'HH:mm:ss', locale.timePickerLocale.format),
		        showSecond: timeFormat && timeFormat.indexOf('ss') >= 0,
		        showHour: timeFormat && timeFormat.indexOf('HH') >= 0
		      };
		      var timePicker = props.showTime ? _react2["default"].createElement(_rcTimePicker2["default"], _extends({}, rcTimePickerProps, props.showTime, {
		        prefixCls: 'ant-time-picker',
		        placeholder: locale.timePickerLocale.placeholder,
		        locale: locale.timePickerLocale,
		        transitionName: 'slide-up'
		      })) : null;
		
		      return _react2["default"].createElement(Picker, _extends({}, props, {
		        pickerClass: pickerClass,
		        pickerInputClass: pickerInputClass,
		        locale: locale,
		        timePicker: timePicker,
		        toggleOpen: this.toggleOpen,
		        getFormatter: this.getFormatter,
		        parseDateFromValue: this.parseDateFromValue
		      }));
		    };
		
		    return PickerWrapper;
		  }(_react2["default"].Component), _class.defaultProps = {
		    format: defaultFormat || 'yyyy-MM-dd',
		    transitionName: 'slide-up',
		    popupStyle: {},
		    onChange: function onChange() {},
		    onOk: function onOk() {},
		    toggleOpen: function toggleOpen() {},
		
		    locale: {},
		    align: {
		      offset: [0, -9]
		    }
		  }, _class.contextTypes = {
		    antLocale: _react.PropTypes.object
		  }, _temp2;
		}
		module.exports = exports['default'];
	
	/***/ },
	/* 187 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _button = __webpack_require__(19);
		
		var _button2 = _interopRequireDefault(_button);
		
		var _icon = __webpack_require__(6);
		
		var _icon2 = _interopRequireDefault(_icon);
		
		var _dropdown = __webpack_require__(61);
		
		var _dropdown2 = _interopRequireDefault(_dropdown);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var ButtonGroup = _button2["default"].Group;
		var DropdownButton = (_temp = _class = function (_React$Component) {
		  _inherits(DropdownButton, _React$Component);
		
		  function DropdownButton() {
		    _classCallCheck(this, DropdownButton);
		
		    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
		  }
		
		  DropdownButton.prototype.render = function render() {
		    var _props = this.props;
		    var type = _props.type;
		    var overlay = _props.overlay;
		    var trigger = _props.trigger;
		    var align = _props.align;
		    var children = _props.children;
		    var className = _props.className;
		    var onClick = _props.onClick;
		
		    var restProps = _objectWithoutProperties(_props, ['type', 'overlay', 'trigger', 'align', 'children', 'className', 'onClick']);
		
		    var cls = (0, _classnames2["default"])(_defineProperty({
		      'ant-dropdown-button': true
		    }, className, !!className));
		    return _react2["default"].createElement(
		      ButtonGroup,
		      _extends({}, restProps, { className: cls }),
		      _react2["default"].createElement(
		        _button2["default"],
		        { type: type, onClick: onClick },
		        children
		      ),
		      _react2["default"].createElement(
		        _dropdown2["default"],
		        { align: align, overlay: overlay, trigger: trigger },
		        _react2["default"].createElement(
		          _button2["default"],
		          { type: type },
		          _react2["default"].createElement(_icon2["default"], { type: 'down' })
		        )
		      )
		    );
		  };
		
		  return DropdownButton;
		}(_react2["default"].Component), _class.defaultProps = {
		  align: {
		    points: ['tr', 'br'],
		    overlay: {
		      adjustX: 1,
		      adjustY: 1
		    },
		    offset: [0, 4],
		    targetOffset: [0, 0]
		  },
		  type: 'default'
		}, _temp);
		exports["default"] = DropdownButton;
		module.exports = exports['default'];
	
	/***/ },
	/* 188 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var _reactAddonsPureRenderMixin = __webpack_require__(14);
		
		var _reactAddonsPureRenderMixin2 = _interopRequireDefault(_reactAddonsPureRenderMixin);
		
		var _object = __webpack_require__(16);
		
		var _object2 = _interopRequireDefault(_object);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var Form = (_temp = _class = function (_React$Component) {
		  _inherits(Form, _React$Component);
		
		  function Form() {
		    _classCallCheck(this, Form);
		
		    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
		  }
		
		  Form.prototype.shouldComponentUpdate = function shouldComponentUpdate() {
		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }
		
		    return _reactAddonsPureRenderMixin2["default"].shouldComponentUpdate.apply(this, args);
		  };
		
		  Form.prototype.getChildContext = function getChildContext() {
		    return {
		      form: this.props.form
		    };
		  };
		
		  Form.prototype.render = function render() {
		    var _classNames;
		
		    var _props = this.props;
		    var prefixCls = _props.prefixCls;
		    var className = _props.className;
		    var inline = _props.inline;
		    var horizontal = _props.horizontal;
		
		    var formClassName = (0, _classnames2["default"])((_classNames = {}, _defineProperty(_classNames, prefixCls + '-horizontal', horizontal), _defineProperty(_classNames, prefixCls + '-inline', inline), _defineProperty(_classNames, className, !!className), _classNames));
		
		    var formProps = (0, _object2["default"])(this.props, ['prefixCls', 'className', 'inline', 'horizontal', 'form']);
		
		    return _react2["default"].createElement('form', _extends({}, formProps, { className: formClassName }));
		  };
		
		  return Form;
		}(_react2["default"].Component), _class.defaultProps = {
		  prefixCls: 'ant-form',
		  onSubmit: function onSubmit(e) {
		    e.preventDefault();
		  }
		}, _class.propTypes = {
		  prefixCls: _react2["default"].PropTypes.string,
		  horizontal: _react2["default"].PropTypes.bool,
		  inline: _react2["default"].PropTypes.bool,
		  form: _react2["default"].PropTypes.object,
		  children: _react2["default"].PropTypes.any,
		  onSubmit: _react2["default"].PropTypes.func
		}, _class.childContextTypes = {
		  form: _react2["default"].PropTypes.object
		}, _temp);
		exports["default"] = Form;
		module.exports = exports['default'];
	
	/***/ },
	/* 189 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var _reactAddonsPureRenderMixin = __webpack_require__(14);
		
		var _reactAddonsPureRenderMixin2 = _interopRequireDefault(_reactAddonsPureRenderMixin);
		
		var _row = __webpack_require__(75);
		
		var _row2 = _interopRequireDefault(_row);
		
		var _col = __webpack_require__(59);
		
		var _col2 = _interopRequireDefault(_col);
		
		var _constants = __webpack_require__(64);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var FormItem = (_temp = _class = function (_React$Component) {
		  _inherits(FormItem, _React$Component);
		
		  function FormItem() {
		    _classCallCheck(this, FormItem);
		
		    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
		  }
		
		  FormItem.prototype.shouldComponentUpdate = function shouldComponentUpdate() {
		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }
		
		    return _reactAddonsPureRenderMixin2["default"].shouldComponentUpdate.apply(this, args);
		  };
		
		  FormItem.prototype.getHelpMsg = function getHelpMsg() {
		    var context = this.context;
		    var props = this.props;
		    if (props.help === undefined && context.form) {
		      return this.getId() ? (context.form.getFieldError(this.getId()) || []).join(', ') : '';
		    }
		
		    return props.help;
		  };
		
		  FormItem.prototype.getOnlyControl = function getOnlyControl() {
		    var children = _react2["default"].Children.toArray(this.props.children);
		    var child = children.filter(function (c) {
		      return c.props && _constants.FIELD_META_PROP in c.props;
		    })[0];
		    return child !== undefined ? child : null;
		  };
		
		  FormItem.prototype.getChildProp = function getChildProp(prop) {
		    var child = this.getOnlyControl();
		    return child && child.props && child.props[prop];
		  };
		
		  FormItem.prototype.getId = function getId() {
		    return this.getChildProp('id');
		  };
		
		  FormItem.prototype.getMeta = function getMeta() {
		    return this.getChildProp(_constants.FIELD_META_PROP);
		  };
		
		  FormItem.prototype.renderHelp = function renderHelp() {
		    var prefixCls = this.props.prefixCls;
		    var help = this.getHelpMsg();
		    return help ? _react2["default"].createElement(
		      'div',
		      { className: prefixCls + '-explain', key: 'help' },
		      help
		    ) : null;
		  };
		
		  FormItem.prototype.renderExtra = function renderExtra() {
		    var _props = this.props;
		    var prefixCls = _props.prefixCls;
		    var extra = _props.extra;
		
		    return extra ? _react2["default"].createElement(
		      'span',
		      { className: prefixCls + '-extra' },
		      extra
		    ) : null;
		  };
		
		  FormItem.prototype.getValidateStatus = function getValidateStatus() {
		    var _context$form = this.context.form;
		    var isFieldValidating = _context$form.isFieldValidating;
		    var getFieldError = _context$form.getFieldError;
		    var getFieldValue = _context$form.getFieldValue;
		
		    var field = this.getId();
		    if (!field) {
		      return '';
		    }
		    if (isFieldValidating(field)) {
		      return 'validating';
		    } else if (!!getFieldError(field)) {
		      return 'error';
		    } else if (getFieldValue(field) !== undefined) {
		      return 'success';
		    }
		    return '';
		  };
		
		  FormItem.prototype.renderValidateWrapper = function renderValidateWrapper(c1, c2, c3) {
		    var classes = '';
		    var form = this.context.form;
		    var props = this.props;
		    var validateStatus = props.validateStatus === undefined && form ? this.getValidateStatus() : props.validateStatus;
		
		    if (validateStatus) {
		      classes = (0, _classnames2["default"])({
		        'has-feedback': props.hasFeedback,
		        'has-success': validateStatus === 'success',
		        'has-warning': validateStatus === 'warning',
		        'has-error': validateStatus === 'error',
		        'is-validating': validateStatus === 'validating'
		      });
		    }
		    return _react2["default"].createElement(
		      'div',
		      { className: this.props.prefixCls + '-item-control ' + classes },
		      c1,
		      c2,
		      c3
		    );
		  };
		
		  FormItem.prototype.renderWrapper = function renderWrapper(children) {
		    var wrapperCol = this.props.wrapperCol;
		    return _react2["default"].createElement(
		      _col2["default"],
		      _extends({}, wrapperCol, { key: 'wrapper' }),
		      children
		    );
		  };
		
		  FormItem.prototype.isRequired = function isRequired() {
		    if (this.context.form) {
		      var meta = this.getMeta() || {};
		      var validate = meta.validate || [];
		
		      return validate.filter(function (item) {
		        return !!item.rules;
		      }).some(function (item) {
		        return item.rules.some(function (rule) {
		          return rule.required;
		        });
		      });
		    }
		    return false;
		  };
		
		  FormItem.prototype.renderLabel = function renderLabel() {
		    var props = this.props;
		    var labelCol = props.labelCol;
		    var required = props.required === undefined ? this.isRequired() : props.required;
		
		    var className = (0, _classnames2["default"])(_defineProperty({}, props.prefixCls + '-item-required', required));
		
		    // remove user input colon
		    var label = props.label;
		    if (typeof label === 'string' && label.trim() !== '') {
		      label = props.label.replace(/[：|:]\s*$/, '');
		    }
		
		    return props.label ? _react2["default"].createElement(
		      _col2["default"],
		      _extends({}, labelCol, { key: 'label', className: props.prefixCls + '-item-label' }),
		      _react2["default"].createElement(
		        'label',
		        { htmlFor: props.id || this.getId(), className: className },
		        label
		      )
		    ) : null;
		  };
		
		  FormItem.prototype.renderChildren = function renderChildren() {
		    var props = this.props;
		    var children = _react2["default"].Children.map(props.children, function (child) {
		      if (child && typeof child.type === 'function' && !child.props.size) {
		        return _react2["default"].cloneElement(child, { size: 'large' });
		      }
		      return child;
		    });
		    return [this.renderLabel(), this.renderWrapper(this.renderValidateWrapper(children, this.renderHelp(), this.renderExtra()))];
		  };
		
		  FormItem.prototype.renderFormItem = function renderFormItem(children) {
		    var _itemClassName;
		
		    var props = this.props;
		    var prefixCls = props.prefixCls;
		    var style = props.style;
		    var itemClassName = (_itemClassName = {}, _defineProperty(_itemClassName, prefixCls + '-item', true), _defineProperty(_itemClassName, prefixCls + '-item-with-help', !!this.getHelpMsg()), _defineProperty(_itemClassName, '' + props.className, !!props.className), _itemClassName);
		
		    return _react2["default"].createElement(
		      _row2["default"],
		      { className: (0, _classnames2["default"])(itemClassName), style: style },
		      children
		    );
		  };
		
		  FormItem.prototype.render = function render() {
		    var children = this.renderChildren();
		    return this.renderFormItem(children);
		  };
		
		  return FormItem;
		}(_react2["default"].Component), _class.defaultProps = {
		  hasFeedback: false,
		  prefixCls: 'ant-form'
		}, _class.propTypes = {
		  prefixCls: _react2["default"].PropTypes.string,
		  label: _react2["default"].PropTypes.node,
		  labelCol: _react2["default"].PropTypes.object,
		  help: _react2["default"].PropTypes.oneOfType([_react2["default"].PropTypes.node, _react2["default"].PropTypes.bool]),
		  validateStatus: _react2["default"].PropTypes.oneOf(['', 'success', 'warning', 'error', 'validating']),
		  hasFeedback: _react2["default"].PropTypes.bool,
		  wrapperCol: _react2["default"].PropTypes.object,
		  className: _react2["default"].PropTypes.string,
		  id: _react2["default"].PropTypes.string,
		  children: _react2["default"].PropTypes.node
		}, _class.contextTypes = {
		  form: _react2["default"].PropTypes.object
		}, _temp);
		exports["default"] = FormItem;
		module.exports = exports['default'];
	
	/***/ },
	/* 190 */
	/***/ function(module, exports) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var ValueMixin = {
		  setValue: function setValue(field, e) {
		    var v = e;
		    var target = e && e.target;
		    if (target) {
		      if (('' + target.nodeName).toLowerCase() === 'input' && target.type === 'checkbox') {
		        v = target.checked;
		      } else {
		        v = e.target.value;
		      }
		    }
		    var newFormData = {};
		    newFormData[field] = v;
		    this.setState({
		      formData: _extends({}, this.state.formData, newFormData)
		    });
		  }
		};
		
		exports["default"] = ValueMixin;
		module.exports = exports['default'];
	
	/***/ },
	/* 191 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _Form = __webpack_require__(188);
		
		var _Form2 = _interopRequireDefault(_Form);
		
		var _FormItem = __webpack_require__(189);
		
		var _FormItem2 = _interopRequireDefault(_FormItem);
		
		var _ValueMixin = __webpack_require__(190);
		
		var _ValueMixin2 = _interopRequireDefault(_ValueMixin);
		
		var _createDOMForm = __webpack_require__(317);
		
		var _createDOMForm2 = _interopRequireDefault(_createDOMForm);
		
		var _constants = __webpack_require__(64);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		_Form2["default"].create = function () {
		  var o = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		
		  var options = _extends({}, o, {
		    fieldNameProp: 'id',
		    fieldMetaProp: _constants.FIELD_META_PROP
		  });
		
		  return (0, _createDOMForm2["default"])(options);
		};
		_Form2["default"].Item = _FormItem2["default"];
		
		// @Deprecated
		_Form2["default"].ValueMixin = _ValueMixin2["default"];
		
		exports["default"] = _Form2["default"];
		module.exports = exports['default'];
	
	/***/ },
	/* 192 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		__webpack_require__(3);
		
		__webpack_require__(434);
		
		__webpack_require__(66);
	
	/***/ },
	/* 193 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		__webpack_require__(3);
	
	/***/ },
	/* 194 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var _rcInputNumber = __webpack_require__(320);
		
		var _rcInputNumber2 = _interopRequireDefault(_rcInputNumber);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var InputNumber = (_temp = _class = function (_React$Component) {
		  _inherits(InputNumber, _React$Component);
		
		  function InputNumber() {
		    _classCallCheck(this, InputNumber);
		
		    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
		  }
		
		  InputNumber.prototype.render = function render() {
		    var _classNames;
		
		    var _props = this.props;
		    var className = _props.className;
		    var size = _props.size;
		
		    var other = _objectWithoutProperties(_props, ['className', 'size']);
		
		    var inputNumberClass = (0, _classnames2["default"])((_classNames = {}, _defineProperty(_classNames, this.props.prefixCls + '-lg', size === 'large'), _defineProperty(_classNames, this.props.prefixCls + '-sm', size === 'small'), _defineProperty(_classNames, className, !!className), _classNames));
		
		    return _react2["default"].createElement(_rcInputNumber2["default"], _extends({ className: inputNumberClass }, other));
		  };
		
		  return InputNumber;
		}(_react2["default"].Component), _class.defaultProps = {
		  prefixCls: 'ant-input-number',
		  step: 1
		}, _temp);
		exports["default"] = InputNumber;
		module.exports = exports['default'];
	
	/***/ },
	/* 195 */
	[461, 435],
	/* 196 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = Group;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function Group(props) {
		  var className = (0, _classnames2["default"])(_defineProperty({
		    'ant-input-group': true,
		    'ant-input-group-lg': props.size === 'large',
		    'ant-input-group-sm': props.size === 'small'
		  }, props.className, !!props.className));
		  return _react2["default"].createElement(
		    'span',
		    { className: className, style: props.style },
		    props.children
		  );
		}
		
		Group.propTypes = {
		  children: _react2["default"].PropTypes.any
		};
		module.exports = exports['default'];
	
	/***/ },
	/* 197 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var _calculateNodeHeight = __webpack_require__(198);
		
		var _calculateNodeHeight2 = _interopRequireDefault(_calculateNodeHeight);
		
		var _object = __webpack_require__(16);
		
		var _object2 = _interopRequireDefault(_object);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		function fixControlledValue(value) {
		  if (typeof value === 'undefined' || value === null) {
		    return '';
		  }
		  return value;
		}
		
		function onNextFrame(cb) {
		  if (window.requestAnimationFrame) {
		    return window.requestAnimationFrame(cb);
		  }
		  return window.setTimeout(cb, 1);
		}
		
		function clearNextFrameAction(nextFrameId) {
		  if (window.cancelAnimationFrame) {
		    window.cancelAnimationFrame(nextFrameId);
		  } else {
		    window.clearTimeout(nextFrameId);
		  }
		}
		
		var Input = (_temp = _class = function (_Component) {
		  _inherits(Input, _Component);
		
		  function Input(props) {
		    _classCallCheck(this, Input);
		
		    var _this = _possibleConstructorReturn(this, _Component.call(this, props));
		
		    _this.handleKeyDown = function (e) {
		      if (e.keyCode === 13) {
		        _this.props.onPressEnter(e);
		      }
		      _this.props.onKeyDown(e);
		    };
		
		    _this.handleTextareaChange = function (e) {
		      _this.resizeTextarea();
		      if (_this.props.onChange) {
		        _this.props.onChange(e);
		      }
		    };
		
		    _this.resizeTextarea = function () {
		      var _this$props = _this.props;
		      var type = _this$props.type;
		      var autosize = _this$props.autosize;
		
		      if (type !== 'textarea' || !autosize || !_this.refs.input) {
		        return;
		      }
		      var minRows = autosize ? autosize.minRows : null;
		      var maxRows = autosize ? autosize.maxRows : null;
		      var textareaStyles = (0, _calculateNodeHeight2["default"])(_this.refs.input, false, minRows, maxRows);
		      _this.setState({ textareaStyles: textareaStyles });
		    };
		
		    _this.state = {
		      textareaStyles: null
		    };
		    return _this;
		  }
		
		  Input.prototype.componentDidMount = function componentDidMount() {
		    this.resizeTextarea();
		  };
		
		  Input.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
		    // Re-render with the new content then recalculate the height as required.
		    if (this.props.value !== nextProps.value) {
		      if (this.nextFrameActionId) {
		        clearNextFrameAction(this.nextFrameActionId);
		      }
		      this.nextFrameActionId = onNextFrame(this.resizeTextarea);
		    }
		  };
		
		  Input.prototype.renderLabledInput = function renderLabledInput(children) {
		    var _classNames;
		
		    var props = this.props;
		    var wrapperClassName = props.prefixCls + '-group';
		    var addonClassName = wrapperClassName + '-addon';
		    var addonBefore = props.addonBefore ? _react2["default"].createElement(
		      'span',
		      { className: addonClassName },
		      props.addonBefore
		    ) : null;
		
		    var addonAfter = props.addonAfter ? _react2["default"].createElement(
		      'span',
		      { className: addonClassName },
		      props.addonAfter
		    ) : null;
		
		    var className = (0, _classnames2["default"])((_classNames = {}, _defineProperty(_classNames, props.prefixCls + '-wrapper', true), _defineProperty(_classNames, wrapperClassName, addonBefore || addonAfter), _classNames));
		
		    return _react2["default"].createElement(
		      'span',
		      { className: className },
		      addonBefore,
		      children,
		      addonAfter
		    );
		  };
		
		  Input.prototype.renderInput = function renderInput() {
		    var _classNames2;
		
		    var props = _extends({}, this.props);
		
		    // Fix https://fb.me/react-unknown-prop
		    var otherProps = (0, _object2["default"])(this.props, ['prefixCls', 'onPressEnter', 'autosize', 'addonBefore', 'addonAfter']);
		
		    var prefixCls = props.prefixCls;
		    if (!props.type) {
		      return props.children;
		    }
		
		    var inputClassName = (0, _classnames2["default"])((_classNames2 = {}, _defineProperty(_classNames2, prefixCls, true), _defineProperty(_classNames2, prefixCls + '-sm', props.size === 'small'), _defineProperty(_classNames2, prefixCls + '-lg', props.size === 'large'), _defineProperty(_classNames2, props.className, !!props.className), _classNames2));
		
		    if ('value' in props) {
		      otherProps.value = fixControlledValue(props.value);
		      // Input elements must be either controlled or uncontrolled,
		      // specify either the value prop, or the defaultValue prop, but not both.
		      delete otherProps.defaultValue;
		    }
		
		    switch (props.type) {
		      case 'textarea':
		        return _react2["default"].createElement('textarea', _extends({}, otherProps, {
		          style: _extends({}, props.style, this.state.textareaStyles),
		          className: inputClassName,
		          onKeyDown: this.handleKeyDown,
		          onChange: this.handleTextareaChange,
		          ref: 'input'
		        }));
		      default:
		        return _react2["default"].createElement('input', _extends({}, otherProps, {
		          className: inputClassName,
		          onKeyDown: this.handleKeyDown,
		          ref: 'input'
		        }));
		    }
		  };
		
		  Input.prototype.render = function render() {
		    return this.renderLabledInput(this.renderInput());
		  };
		
		  return Input;
		}(_react.Component), _class.defaultProps = {
		  defaultValue: '',
		  disabled: false,
		  prefixCls: 'ant-input',
		  type: 'text',
		  onPressEnter: function onPressEnter() {},
		  onKeyDown: function onKeyDown() {},
		
		  autosize: false
		}, _class.propTypes = {
		  type: _react.PropTypes.string,
		  id: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
		  size: _react.PropTypes.oneOf(['small', 'default', 'large']),
		  disabled: _react.PropTypes.bool,
		  value: _react.PropTypes.any,
		  defaultValue: _react.PropTypes.any,
		  className: _react.PropTypes.string,
		  addonBefore: _react.PropTypes.node,
		  addonAfter: _react.PropTypes.node,
		  prefixCls: _react.PropTypes.string,
		  autosize: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.object]),
		  onPressEnter: _react.PropTypes.func,
		  onKeyDown: _react.PropTypes.func
		}, _temp);
		exports["default"] = Input;
		module.exports = exports['default'];
	
	/***/ },
	/* 198 */
	/***/ function(module, exports) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = calculateNodeHeight;
		// Thanks to https://github.com/andreypopp/react-textarea-autosize/
		
		/**
		 * calculateNodeHeight(uiTextNode, useCache = false)
		 */
		
		var HIDDEN_TEXTAREA_STYLE = '\n  min-height:0 !important;\n  max-height:none !important;\n  height:0 !important;\n  visibility:hidden !important;\n  overflow:hidden !important;\n  position:absolute !important;\n  z-index:-1000 !important;\n  top:0 !important;\n  right:0 !important\n';
		
		var SIZING_STYLE = ['letter-spacing', 'line-height', 'padding-top', 'padding-bottom', 'font-family', 'font-weight', 'font-size', 'text-rendering', 'text-transform', 'width', 'text-indent', 'padding-left', 'padding-right', 'border-width', 'box-sizing'];
		
		var computedStyleCache = {};
		var hiddenTextarea = void 0;
		
		function calculateNodeStyling(node) {
		  var useCache = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];
		
		  var nodeRef = node.getAttribute('id') || node.getAttribute('data-reactid') || node.getAttribute('name');
		
		  if (useCache && computedStyleCache[nodeRef]) {
		    return computedStyleCache[nodeRef];
		  }
		
		  var style = window.getComputedStyle(node);
		
		  var boxSizing = style.getPropertyValue('box-sizing') || style.getPropertyValue('-moz-box-sizing') || style.getPropertyValue('-webkit-box-sizing');
		
		  var paddingSize = parseFloat(style.getPropertyValue('padding-bottom')) + parseFloat(style.getPropertyValue('padding-top'));
		
		  var borderSize = parseFloat(style.getPropertyValue('border-bottom-width')) + parseFloat(style.getPropertyValue('border-top-width'));
		
		  var sizingStyle = SIZING_STYLE.map(function (name) {
		    return name + ':' + style.getPropertyValue(name);
		  }).join(';');
		
		  var nodeInfo = {
		    sizingStyle: sizingStyle,
		    paddingSize: paddingSize,
		    borderSize: borderSize,
		    boxSizing: boxSizing
		  };
		
		  if (useCache && nodeRef) {
		    computedStyleCache[nodeRef] = nodeInfo;
		  }
		
		  return nodeInfo;
		}
		
		function calculateNodeHeight(uiTextNode) {
		  var useCache = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];
		  var minRows = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];
		  var maxRows = arguments.length <= 3 || arguments[3] === undefined ? null : arguments[3];
		
		  if (!hiddenTextarea) {
		    hiddenTextarea = document.createElement('textarea');
		    document.body.appendChild(hiddenTextarea);
		  }
		
		  // Copy all CSS properties that have an impact on the height of the content in
		  // the textbox
		
		  var _calculateNodeStyling = calculateNodeStyling(uiTextNode, useCache);
		
		  var paddingSize = _calculateNodeStyling.paddingSize;
		  var borderSize = _calculateNodeStyling.borderSize;
		  var boxSizing = _calculateNodeStyling.boxSizing;
		  var sizingStyle = _calculateNodeStyling.sizingStyle;
		
		  // Need to have the overflow attribute to hide the scrollbar otherwise
		  // text-lines will not calculated properly as the shadow will technically be
		  // narrower for content
		
		  hiddenTextarea.setAttribute('style', sizingStyle + ';' + HIDDEN_TEXTAREA_STYLE);
		  hiddenTextarea.value = uiTextNode.value || uiTextNode.placeholder || '';
		
		  var minHeight = -Infinity;
		  var maxHeight = Infinity;
		  var height = hiddenTextarea.scrollHeight;
		
		  if (boxSizing === 'border-box') {
		    // border-box: add border, since height = content + padding + border
		    height = height + borderSize;
		  } else if (boxSizing === 'content-box') {
		    // remove padding, since height = content
		    height = height - paddingSize;
		  }
		
		  if (minRows !== null || maxRows !== null) {
		    // measure height of a textarea with a single row
		    hiddenTextarea.value = '';
		    var singleRowHeight = hiddenTextarea.scrollHeight - paddingSize;
		    if (minRows !== null) {
		      minHeight = singleRowHeight * minRows;
		      if (boxSizing === 'border-box') {
		        minHeight = minHeight + paddingSize + borderSize;
		      }
		      height = Math.max(minHeight, height);
		    }
		    if (maxRows !== null) {
		      maxHeight = singleRowHeight * maxRows;
		      if (boxSizing === 'border-box') {
		        maxHeight = maxHeight + paddingSize + borderSize;
		      }
		      height = Math.min(maxHeight, height);
		    }
		  }
		  return { height: height, minHeight: minHeight, maxHeight: maxHeight };
		}
		module.exports = exports['default'];
	
	/***/ },
	/* 199 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
		
		exports["default"] = Col;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
		
		var stringOrNumber = _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]);
		var objectOrNumber = _react.PropTypes.oneOfType([_react.PropTypes.object, _react.PropTypes.number]);
		
		function Col(props) {
		  var _extends3;
		
		  var span = props.span;
		  var order = props.order;
		  var offset = props.offset;
		  var push = props.push;
		  var pull = props.pull;
		  var className = props.className;
		  var children = props.children;
		
		  var others = _objectWithoutProperties(props, ['span', 'order', 'offset', 'push', 'pull', 'className', 'children']);
		
		  var sizeClassObj = {};
		  ['xs', 'sm', 'md', 'lg'].forEach(function (size) {
		    var _extends2;
		
		    var sizeProps = {};
		    if (typeof props[size] === 'number') {
		      sizeProps.span = props[size];
		    } else if (_typeof(props[size]) === 'object') {
		      sizeProps = props[size] || {};
		    }
		    delete others[size];
		    sizeClassObj = _extends({}, sizeClassObj, (_extends2 = {}, _defineProperty(_extends2, 'ant-col-' + size + '-' + sizeProps.span, sizeProps.span !== undefined), _defineProperty(_extends2, 'ant-col-' + size + '-order-' + sizeProps.order, sizeProps.order), _defineProperty(_extends2, 'ant-col-' + size + '-offset-' + sizeProps.offset, sizeProps.offset), _defineProperty(_extends2, 'ant-col-' + size + '-push-' + sizeProps.push, sizeProps.push), _defineProperty(_extends2, 'ant-col-' + size + '-pull-' + sizeProps.pull, sizeProps.pull), _extends2));
		  });
		  var classes = (0, _classnames2["default"])(_extends((_extends3 = {}, _defineProperty(_extends3, 'ant-col-' + span, span !== undefined), _defineProperty(_extends3, 'ant-col-order-' + order, order), _defineProperty(_extends3, 'ant-col-offset-' + offset, offset), _defineProperty(_extends3, 'ant-col-push-' + push, push), _defineProperty(_extends3, 'ant-col-pull-' + pull, pull), _defineProperty(_extends3, className, !!className), _extends3), sizeClassObj));
		
		  return _react2["default"].createElement(
		    'div',
		    _extends({}, others, { className: classes }),
		    children
		  );
		}
		
		Col.propTypes = {
		  span: stringOrNumber,
		  order: stringOrNumber,
		  offset: stringOrNumber,
		  push: stringOrNumber,
		  pull: stringOrNumber,
		  className: _react.PropTypes.string,
		  children: _react.PropTypes.node,
		  xs: objectOrNumber,
		  sm: objectOrNumber,
		  md: objectOrNumber,
		  lg: objectOrNumber
		};
		module.exports = exports['default'];
	
	/***/ },
	/* 200 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var Row = (_temp = _class = function (_React$Component) {
		  _inherits(Row, _React$Component);
		
		  function Row() {
		    _classCallCheck(this, Row);
		
		    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
		  }
		
		  Row.prototype.render = function render() {
		    var _classNames;
		
		    var _props = this.props;
		    var type = _props.type;
		    var justify = _props.justify;
		    var align = _props.align;
		    var className = _props.className;
		    var gutter = _props.gutter;
		    var style = _props.style;
		    var children = _props.children;
		
		    var others = _objectWithoutProperties(_props, ['type', 'justify', 'align', 'className', 'gutter', 'style', 'children']);
		
		    var classes = (0, _classnames2["default"])((_classNames = {
		      'ant-row': !type
		    }, _defineProperty(_classNames, 'ant-row-' + type, type), _defineProperty(_classNames, 'ant-row-' + type + '-' + justify, justify), _defineProperty(_classNames, 'ant-row-' + type + '-' + align, align), _defineProperty(_classNames, className, className), _classNames));
		    var rowStyle = gutter > 0 ? _extends({
		      marginLeft: gutter / -2,
		      marginRight: gutter / -2
		    }, style) : style;
		    var cols = _react.Children.map(children, function (col) {
		      if (!col) return null;
		
		      return (0, _react.cloneElement)(col, {
		        style: gutter > 0 ? _extends({
		          paddingLeft: gutter / 2,
		          paddingRight: gutter / 2
		        }, col.props.style) : col.props.style
		      });
		    });
		    return _react2["default"].createElement(
		      'div',
		      _extends({}, others, { className: classes, style: rowStyle }),
		      cols
		    );
		  };
		
		  return Row;
		}(_react2["default"].Component), _class.defaultProps = {
		  gutter: 0
		}, _class.propTypes = {
		  type: _react2["default"].PropTypes.string,
		  align: _react2["default"].PropTypes.string,
		  justify: _react2["default"].PropTypes.string,
		  className: _react2["default"].PropTypes.string,
		  children: _react2["default"].PropTypes.node,
		  gutter: _react2["default"].PropTypes.number
		}, _temp);
		exports["default"] = Row;
		module.exports = exports['default'];
	
	/***/ },
	/* 201 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _class, _temp;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _locale = __webpack_require__(68);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var LocaleProvider = (_temp = _class = function (_React$Component) {
		  _inherits(LocaleProvider, _React$Component);
		
		  function LocaleProvider() {
		    _classCallCheck(this, LocaleProvider);
		
		    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
		  }
		
		  LocaleProvider.prototype.getChildContext = function getChildContext() {
		    return {
		      antLocale: this.props.locale
		    };
		  };
		
		  LocaleProvider.prototype.componentDidMount = function componentDidMount() {
		    this.componentDidUpdate();
		  };
		
		  LocaleProvider.prototype.componentDidUpdate = function componentDidUpdate() {
		    var locale = this.props.locale;
		
		    (0, _locale.changeConfirmLocale)(locale && locale.Modal);
		  };
		
		  LocaleProvider.prototype.componentWillUnMount = function componentWillUnMount() {
		    (0, _locale.changeConfirmLocale)();
		  };
		
		  LocaleProvider.prototype.render = function render() {
		    return _react2["default"].Children.only(this.props.children);
		  };
		
		  return LocaleProvider;
		}(_react2["default"].Component), _class.propTypes = {
		  locale: _react2["default"].PropTypes.object
		}, _class.childContextTypes = {
		  antLocale: _react2["default"].PropTypes.object
		}, _temp);
		exports["default"] = LocaleProvider;
		module.exports = exports['default'];
	
	/***/ },
	/* 202 */
	/***/ function(module, exports) {
	
		"use strict";
	
	/***/ },
	/* 203 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _rcMenu = __webpack_require__(23);
		
		var _rcMenu2 = _interopRequireDefault(_rcMenu);
		
		var _openAnimation = __webpack_require__(56);
		
		var _openAnimation2 = _interopRequireDefault(_openAnimation);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		function noop() {}
		
		var Menu = (_temp = _class = function (_React$Component) {
		  _inherits(Menu, _React$Component);
		
		  function Menu(props) {
		    _classCallCheck(this, Menu);
		
		    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));
		
		    _this.handleClick = function (e) {
		      _this.setOpenKeys([]);
		      _this.props.onClick(e);
		    };
		
		    _this.handleOpenKeys = function (e) {
		      var openKeys = e.openKeys;
		
		      _this.setOpenKeys(openKeys);
		      _this.props.onOpen(e);
		    };
		
		    _this.handleCloseKeys = function (e) {
		      var openKeys = e.openKeys;
		
		      _this.setOpenKeys(openKeys);
		      _this.props.onClose(e);
		    };
		
		    _this.state = {
		      openKeys: []
		    };
		    return _this;
		  }
		
		  Menu.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
		    if (this.props.mode === 'inline' && nextProps.mode !== 'inline') {
		      this.switchModeFromInline = true;
		    }
		    if ('openKeys' in nextProps) {
		      this.setOpenKeys(nextProps.openKeys);
		    }
		  };
		
		  Menu.prototype.setOpenKeys = function setOpenKeys(openKeys) {
		    if (!('openKeys' in this.props)) {
		      this.setState({ openKeys: openKeys });
		    }
		  };
		
		  Menu.prototype.render = function render() {
		    var openAnimation = this.props.openAnimation || this.props.openTransitionName;
		    if (!openAnimation) {
		      switch (this.props.mode) {
		        case 'horizontal':
		          openAnimation = 'slide-up';
		          break;
		        case 'vertical':
		          // When mode switch from inline
		          // submenu should hide without animation
		          if (this.switchModeFromInline) {
		            openAnimation = '';
		            this.switchModeFromInline = false;
		          } else {
		            openAnimation = 'zoom-big';
		          }
		          break;
		        case 'inline':
		          openAnimation = _openAnimation2["default"];
		          break;
		        default:
		      }
		    }
		
		    var props = {};
		    var className = this.props.className + ' ' + this.props.prefixCls + '-' + this.props.theme;
		    if (this.props.mode !== 'inline') {
		      // 这组属性的目的是
		      // 弹出型的菜单需要点击后立即关闭
		      // 另外，弹出型的菜单的受控模式没有使用场景
		      props = {
		        openKeys: this.state.openKeys,
		        onClick: this.handleClick,
		        onOpen: this.handleOpenKeys,
		        onClose: this.handleCloseKeys,
		        openTransitionName: openAnimation,
		        className: className
		      };
		    } else {
		      props = {
		        openAnimation: openAnimation,
		        className: className
		      };
		    }
		    return _react2["default"].createElement(_rcMenu2["default"], _extends({}, this.props, props));
		  };
		
		  return Menu;
		}(_react2["default"].Component), _class.Divider = _rcMenu.Divider, _class.Item = _rcMenu.Item, _class.SubMenu = _rcMenu.SubMenu, _class.ItemGroup = _rcMenu.ItemGroup, _class.defaultProps = {
		  prefixCls: 'ant-menu',
		  onClick: noop,
		  onOpen: noop,
		  onClose: noop,
		  className: '',
		  theme: 'light' }, _temp);
		exports["default"] = Menu;
		module.exports = exports['default'];
	
	/***/ },
	/* 204 */
	[461, 437],
	/* 205 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _rcNotification = __webpack_require__(109);
		
		var _rcNotification2 = _interopRequireDefault(_rcNotification);
		
		var _icon = __webpack_require__(6);
		
		var _icon2 = _interopRequireDefault(_icon);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		var defaultDuration = 1.5;
		var defaultTop = void 0;
		var messageInstance = void 0;
		var key = 1;
		var prefixCls = 'ant-message';
		
		function getMessageInstance() {
		  messageInstance = messageInstance || _rcNotification2["default"].newInstance({
		    prefixCls: prefixCls,
		    transitionName: 'move-up',
		    style: { top: defaultTop } });
		  return messageInstance;
		}
		
		function notice(content) {
		  var duration = arguments.length <= 1 || arguments[1] === undefined ? defaultDuration : arguments[1];
		  var type = arguments[2];
		  var onClose = arguments[3];
		
		  var iconType = {
		    info: 'info-circle',
		    success: 'check-circle',
		    error: 'cross-circle',
		    warning: 'exclamation-circle',
		    loading: 'loading'
		  }[type];
		
		  var instance = getMessageInstance();
		  instance.notice({
		    key: key,
		    duration: duration,
		    style: {},
		    content: _react2["default"].createElement(
		      'div',
		      { className: prefixCls + '-custom-content ' + prefixCls + '-' + type },
		      _react2["default"].createElement(_icon2["default"], { type: iconType }),
		      _react2["default"].createElement(
		        'span',
		        null,
		        content
		      )
		    ),
		    onClose: onClose
		  });
		  return function () {
		    var target = key++;
		    return function () {
		      instance.removeNotice(target);
		    };
		  }();
		}
		
		exports["default"] = {
		  info: function info(content, duration, onClose) {
		    return notice(content, duration, 'info', onClose);
		  },
		  success: function success(content, duration, onClose) {
		    return notice(content, duration, 'success', onClose);
		  },
		  error: function error(content, duration, onClose) {
		    return notice(content, duration, 'error', onClose);
		  },
		
		  // Departed usage, please use warning()
		  warn: function warn(content, duration, onClose) {
		    return notice(content, duration, 'warning', onClose);
		  },
		  warning: function warning(content, duration, onClose) {
		    return notice(content, duration, 'warning', onClose);
		  },
		  loading: function loading(content, duration, onClose) {
		    return notice(content, duration, 'loading', onClose);
		  },
		  config: function config(options) {
		    if ('top' in options) {
		      defaultTop = options.top;
		    }
		    if ('duration' in options) {
		      defaultDuration = options.duration;
		    }
		    if ('prefixCls' in options) {
		      prefixCls = options.prefixCls;
		    }
		  },
		  destroy: function destroy() {
		    if (messageInstance) {
		      messageInstance.destroy();
		      messageInstance = null;
		    }
		  }
		};
		module.exports = exports['default'];
	
	/***/ },
	/* 206 */
	[461, 438],
	/* 207 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		exports["default"] = confirm;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _reactDom = __webpack_require__(4);
		
		var _reactDom2 = _interopRequireDefault(_reactDom);
		
		var _Modal = __webpack_require__(67);
		
		var _Modal2 = _interopRequireDefault(_Modal);
		
		var _icon = __webpack_require__(6);
		
		var _icon2 = _interopRequireDefault(_icon);
		
		var _button = __webpack_require__(19);
		
		var _button2 = _interopRequireDefault(_button);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var _locale = __webpack_require__(68);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function confirm(config) {
		  var _classNames;
		
		  var props = _extends({}, config);
		  var div = document.createElement('div');
		  document.body.appendChild(div);
		
		  var d = void 0;
		  props.iconType = props.iconType || 'question-circle';
		
		  var width = props.width || 416;
		  var style = props.style || {};
		
		  // 默认为 true，保持向下兼容
		  if (!('okCancel' in props)) {
		    props.okCancel = true;
		  }
		
		  var runtimeLocale = (0, _locale.getConfirmLocale)();
		
		  props.okText = props.okText || (props.okCancel ? runtimeLocale.okText : runtimeLocale.justOkText);
		  props.cancelText = props.cancelText || runtimeLocale.cancelText;
		
		  function close() {
		    d.setState({
		      visible: false
		    });
		    _reactDom2["default"].unmountComponentAtNode(div);
		    div.parentNode.removeChild(div);
		  }
		
		  function onCancel() {
		    var cancelFn = props.onCancel;
		    if (cancelFn) {
		      var ret = void 0;
		      if (cancelFn.length) {
		        ret = cancelFn(close);
		      } else {
		        ret = cancelFn();
		        if (!ret) {
		          close();
		        }
		      }
		      if (ret && ret.then) {
		        ret.then(close);
		      }
		    } else {
		      close();
		    }
		  }
		
		  function onOk() {
		    var okFn = props.onOk;
		    if (okFn) {
		      var ret = void 0;
		      if (okFn.length) {
		        ret = okFn(close);
		      } else {
		        ret = okFn();
		        if (!ret) {
		          close();
		        }
		      }
		      if (ret && ret.then) {
		        ret.then(close);
		      }
		    } else {
		      close();
		    }
		  }
		
		  var body = _react2["default"].createElement(
		    'div',
		    { className: 'ant-confirm-body' },
		    _react2["default"].createElement(_icon2["default"], { type: props.iconType }),
		    _react2["default"].createElement(
		      'span',
		      { className: 'ant-confirm-title' },
		      props.title
		    ),
		    _react2["default"].createElement(
		      'div',
		      { className: 'ant-confirm-content' },
		      props.content
		    )
		  );
		
		  var footer = null;
		  if (props.okCancel) {
		    footer = _react2["default"].createElement(
		      'div',
		      { className: 'ant-confirm-btns' },
		      _react2["default"].createElement(
		        _button2["default"],
		        { type: 'ghost', size: 'large', onClick: onCancel },
		        props.cancelText
		      ),
		      _react2["default"].createElement(
		        _button2["default"],
		        { type: 'primary', size: 'large', onClick: onOk },
		        props.okText
		      )
		    );
		  } else {
		    footer = _react2["default"].createElement(
		      'div',
		      { className: 'ant-confirm-btns' },
		      _react2["default"].createElement(
		        _button2["default"],
		        { type: 'primary', size: 'large', onClick: onOk },
		        props.okText
		      )
		    );
		  }
		
		  var classString = (0, _classnames2["default"])((_classNames = {
		    'ant-confirm': true
		  }, _defineProperty(_classNames, 'ant-confirm-' + props.type, true), _defineProperty(_classNames, props.className, !!props.className), _classNames));
		
		  _reactDom2["default"].render(_react2["default"].createElement(
		    _Modal2["default"],
		    {
		      className: classString,
		      visible: true,
		      closable: false,
		      title: '',
		      transitionName: 'zoom',
		      footer: '',
		      maskTransitionName: 'fade',
		      style: style,
		      width: width
		    },
		    _react2["default"].createElement(
		      'div',
		      { style: { zoom: 1, overflow: 'hidden' } },
		      body,
		      ' ',
		      footer
		    )
		  ), div, function () {
		    d = this;
		  });
		
		  return {
		    destroy: close
		  };
		}
		module.exports = exports['default'];
	
	/***/ },
	/* 208 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _Modal = __webpack_require__(67);
		
		var _Modal2 = _interopRequireDefault(_Modal);
		
		var _confirm = __webpack_require__(207);
		
		var _confirm2 = _interopRequireDefault(_confirm);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		_Modal2["default"].info = function (props) {
		  var config = _extends({
		    type: 'info',
		    iconType: 'info-circle',
		    okCancel: false
		  }, props);
		  return (0, _confirm2["default"])(config);
		};
		
		_Modal2["default"].success = function (props) {
		  var config = _extends({
		    type: 'success',
		    iconType: 'check-circle',
		    okCancel: false
		  }, props);
		  return (0, _confirm2["default"])(config);
		};
		
		_Modal2["default"].error = function (props) {
		  var config = _extends({
		    type: 'error',
		    iconType: 'cross-circle',
		    okCancel: false
		  }, props);
		  return (0, _confirm2["default"])(config);
		};
		
		_Modal2["default"].warning = _Modal2["default"].warn = function (props) {
		  var config = _extends({
		    type: 'warning',
		    iconType: 'exclamation-circle',
		    okCancel: false
		  }, props);
		  return (0, _confirm2["default"])(config);
		};
		
		_Modal2["default"].confirm = function (props) {
		  var config = _extends({
		    type: 'confirm',
		    okCancel: true
		  }, props);
		  return (0, _confirm2["default"])(config);
		};
		
		exports["default"] = _Modal2["default"];
		module.exports = exports['default'];
	
	/***/ },
	/* 209 */
	[463, 439],
	/* 210 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _rcNotification = __webpack_require__(109);
		
		var _rcNotification2 = _interopRequireDefault(_rcNotification);
		
		var _icon = __webpack_require__(6);
		
		var _icon2 = _interopRequireDefault(_icon);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		var defaultTop = 24;
		var notificationInstance = void 0;
		var defaultDuration = 4.5;
		
		function getNotificationInstance() {
		  if (notificationInstance) {
		    return notificationInstance;
		  }
		  notificationInstance = _rcNotification2["default"].newInstance({
		    prefixCls: 'ant-notification',
		    style: {
		      top: defaultTop,
		      right: 0
		    }
		  });
		  return notificationInstance;
		}
		
		function notice(args) {
		  var prefixCls = args.prefixCls || 'ant-notification-notice';
		
		  var duration = void 0;
		  if (args.duration === undefined) {
		    duration = defaultDuration;
		  } else {
		    duration = args.duration;
		  }
		
		  var iconType = '';
		  switch (args.icon) {
		    case 'success':
		      iconType = 'check-circle-o';
		      break;
		    case 'info':
		      iconType = 'info-circle-o';
		      break;
		    case 'error':
		      iconType = 'cross-circle-o';
		      break;
		    case 'warning':
		      iconType = 'exclamation-circle-o';
		      break;
		    default:
		      iconType = 'info-circle';
		  }
		
		  getNotificationInstance().notice({
		    content: _react2["default"].createElement(
		      'div',
		      { className: prefixCls + '-content ' + (args.icon ? prefixCls + '-with-icon' : '') },
		      args.icon ? _react2["default"].createElement(_icon2["default"], { className: prefixCls + '-icon ' + prefixCls + '-icon-' + args.icon, type: iconType }) : null,
		      _react2["default"].createElement(
		        'div',
		        { className: prefixCls + '-message' },
		        args.message
		      ),
		      _react2["default"].createElement(
		        'div',
		        { className: prefixCls + '-description' },
		        args.description
		      ),
		      args.btn ? _react2["default"].createElement(
		        'span',
		        { className: prefixCls + '-btn' },
		        args.btn
		      ) : null
		    ),
		    duration: duration,
		    closable: true,
		    onClose: args.onClose,
		    key: args.key,
		    style: {}
		  });
		}
		
		var api = {
		  open: function open(args) {
		    notice(args);
		  },
		  close: function close(key) {
		    if (notificationInstance) {
		      notificationInstance.removeNotice(key);
		    }
		  },
		  config: function config(options) {
		    if ('top' in options) {
		      defaultTop = options.top;
		    }
		    if ('duration' in options) {
		      defaultDuration = options.duration;
		    }
		  },
		  destroy: function destroy() {
		    if (notificationInstance) {
		      notificationInstance.destroy();
		      notificationInstance = null;
		    }
		  }
		};
		
		['success', 'info', 'warning', 'error'].forEach(function (type) {
		  api[type] = function (args) {
		    return api.open(_extends({}, args, { icon: type }));
		  };
		});
		
		api.warn = api.warning;
		
		exports["default"] = api;
		module.exports = exports['default'];
	
	/***/ },
	/* 211 */
	[461, 440],
	/* 212 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _select = __webpack_require__(27);
		
		var _select2 = _interopRequireDefault(_select);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var MiniSelect = (_temp = _class = function (_React$Component) {
		  _inherits(MiniSelect, _React$Component);
		
		  function MiniSelect() {
		    _classCallCheck(this, MiniSelect);
		
		    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
		  }
		
		  MiniSelect.prototype.render = function render() {
		    return _react2["default"].createElement(_select2["default"], _extends({ size: 'small' }, this.props));
		  };
		
		  return MiniSelect;
		}(_react2["default"].Component), _class.Option = _select2["default"].Option, _temp);
		exports["default"] = MiniSelect;
		module.exports = exports['default'];
	
	/***/ },
	/* 213 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _rcPagination = __webpack_require__(334);
		
		var _rcPagination2 = _interopRequireDefault(_rcPagination);
		
		var _select = __webpack_require__(27);
		
		var _select2 = _interopRequireDefault(_select);
		
		var _MiniSelect = __webpack_require__(212);
		
		var _MiniSelect2 = _interopRequireDefault(_MiniSelect);
		
		var _zh_CN = __webpack_require__(214);
		
		var _zh_CN2 = _interopRequireDefault(_zh_CN);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var Pagination = (_temp = _class = function (_React$Component) {
		  _inherits(Pagination, _React$Component);
		
		  function Pagination() {
		    _classCallCheck(this, Pagination);
		
		    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
		  }
		
		  Pagination.prototype.render = function render() {
		    var className = this.props.className;
		    var selectComponentClass = _select2["default"];
		
		    var locale = void 0;
		    if (this.context.antLocale && this.context.antLocale.Pagination) {
		      locale = this.context.antLocale.Pagination;
		    } else {
		      locale = this.props.locale;
		    }
		
		    if (this.props.size === 'small') {
		      className += ' mini';
		      selectComponentClass = _MiniSelect2["default"];
		    }
		
		    return _react2["default"].createElement(_rcPagination2["default"], _extends({ selectComponentClass: selectComponentClass,
		      selectPrefixCls: 'ant-select'
		    }, this.props, {
		      locale: locale,
		      className: className
		    }));
		  };
		
		  return Pagination;
		}(_react2["default"].Component), _class.defaultProps = {
		  locale: _zh_CN2["default"],
		  className: '',
		  prefixCls: 'ant-pagination'
		}, _class.contextTypes = {
		  antLocale: _react2["default"].PropTypes.object
		}, _temp);
		exports["default"] = Pagination;
		module.exports = exports['default'];
	
	/***/ },
	/* 214 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		module.exports = __webpack_require__(111);
	
	/***/ },
	/* 215 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _tooltip = __webpack_require__(41);
		
		var _tooltip2 = _interopRequireDefault(_tooltip);
		
		var _icon = __webpack_require__(6);
		
		var _icon2 = _interopRequireDefault(_icon);
		
		var _button = __webpack_require__(19);
		
		var _button2 = _interopRequireDefault(_button);
		
		var _placements = __webpack_require__(38);
		
		var _placements2 = _interopRequireDefault(_placements);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var placements = (0, _placements2["default"])();
		var prefixCls = 'ant-popover';
		var noop = function noop() {};
		
		var Popconfirm = (_temp = _class = function (_React$Component) {
		  _inherits(Popconfirm, _React$Component);
		
		  function Popconfirm(props) {
		    _classCallCheck(this, Popconfirm);
		
		    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));
		
		    _this.confirm = function () {
		      _this.setVisible(false);
		      _this.props.onConfirm.call(_this);
		    };
		
		    _this.cancel = function () {
		      _this.setVisible(false);
		      _this.props.onCancel.call(_this);
		    };
		
		    _this.onVisibleChange = function (visible) {
		      _this.setVisible(visible);
		    };
		
		    _this.state = {
		      visible: false
		    };
		    return _this;
		  }
		
		  Popconfirm.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
		    if ('visible' in nextProps) {
		      this.setState({ visible: nextProps.visible });
		    }
		  };
		
		  Popconfirm.prototype.setVisible = function setVisible(visible) {
		    if (!('visible' in this.props)) {
		      this.setState({ visible: visible });
		    }
		    this.props.onVisibleChange(visible);
		  };
		
		  Popconfirm.prototype.render = function render() {
		    var _props = this.props;
		    var title = _props.title;
		    var placement = _props.placement;
		    var overlayStyle = _props.overlayStyle;
		    var trigger = _props.trigger;
		
		    var restProps = _objectWithoutProperties(_props, ['title', 'placement', 'overlayStyle', 'trigger']);
		
		    var _props2 = this.props;
		    var okText = _props2.okText;
		    var cancelText = _props2.cancelText;
		
		    if (this.context.antLocale && this.context.antLocale.Popconfirm) {
		      okText = okText || this.context.antLocale.Popconfirm.okText;
		      cancelText = cancelText || this.context.antLocale.Popconfirm.cancelText;
		    }
		    var overlay = _react2["default"].createElement(
		      'div',
		      null,
		      _react2["default"].createElement(
		        'div',
		        { className: prefixCls + '-inner-content' },
		        _react2["default"].createElement(
		          'div',
		          { className: prefixCls + '-message' },
		          _react2["default"].createElement(_icon2["default"], { type: 'exclamation-circle' }),
		          _react2["default"].createElement(
		            'div',
		            { className: prefixCls + '-message-title' },
		            title
		          )
		        ),
		        _react2["default"].createElement(
		          'div',
		          { className: prefixCls + '-buttons' },
		          _react2["default"].createElement(
		            _button2["default"],
		            { onClick: this.cancel, type: 'ghost', size: 'small' },
		            cancelText || '取消'
		          ),
		          _react2["default"].createElement(
		            _button2["default"],
		            { onClick: this.confirm, type: 'primary', size: 'small' },
		            okText || '确定'
		          )
		        )
		      )
		    );
		
		    return _react2["default"].createElement(
		      _tooltip2["default"],
		      _extends({}, restProps, {
		        placement: placement,
		        builtinPlacements: placements,
		        overlayStyle: overlayStyle,
		        prefixCls: prefixCls,
		        onVisibleChange: this.onVisibleChange,
		        transitionName: this.props.transitionName,
		        visible: this.state.visible,
		        trigger: trigger,
		        overlay: overlay
		      }),
		      this.props.children
		    );
		  };
		
		  return Popconfirm;
		}(_react2["default"].Component), _class.defaultProps = {
		  transitionName: 'zoom-big',
		  placement: 'top',
		  trigger: 'click',
		  overlayStyle: {},
		  onConfirm: noop,
		  onCancel: noop,
		  onVisibleChange: noop
		}, _class.contextTypes = {
		  antLocale: _react2["default"].PropTypes.object
		}, _temp);
		exports["default"] = Popconfirm;
		module.exports = exports['default'];
	
	/***/ },
	/* 216 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		__webpack_require__(3);
		
		__webpack_require__(71);
	
	/***/ },
	/* 217 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _tooltip = __webpack_require__(41);
		
		var _tooltip2 = _interopRequireDefault(_tooltip);
		
		var _placements = __webpack_require__(38);
		
		var _placements2 = _interopRequireDefault(_placements);
		
		var _warning = __webpack_require__(18);
		
		var _warning2 = _interopRequireDefault(_warning);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var placements = (0, _placements2["default"])();
		
		var Popover = (_temp = _class = function (_React$Component) {
		  _inherits(Popover, _React$Component);
		
		  function Popover() {
		    _classCallCheck(this, Popover);
		
		    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
		  }
		
		  Popover.prototype.render = function render() {
		    return _react2["default"].createElement(
		      _tooltip2["default"],
		      _extends({ transitionName: this.props.transitionName,
		        builtinPlacements: placements,
		        ref: 'tooltip'
		      }, this.props, {
		        overlay: this.getOverlay()
		      }),
		      this.props.children
		    );
		  };
		
		  Popover.prototype.getPopupDomNode = function getPopupDomNode() {
		    return this.refs.tooltip.getPopupDomNode();
		  };
		
		  Popover.prototype.componentDidMount = function componentDidMount() {
		    if ('overlay' in this.props) {
		      (0, _warning2["default"])(false, '`overlay` prop of Popover is deprecated, use `content` instead.');
		    }
		  };
		
		  Popover.prototype.getOverlay = function getOverlay() {
		    // use content replace overlay
		    // keep overlay for compatibility
		    var _props = this.props;
		    var title = _props.title;
		    var prefixCls = _props.prefixCls;
		    var overlay = _props.overlay;
		    var content = _props.content;
		
		
		    return _react2["default"].createElement(
		      'div',
		      null,
		      title && _react2["default"].createElement(
		        'div',
		        { className: prefixCls + '-title' },
		        title
		      ),
		      _react2["default"].createElement(
		        'div',
		        { className: prefixCls + '-inner-content' },
		        content || overlay
		      )
		    );
		  };
		
		  return Popover;
		}(_react2["default"].Component), _class.defaultProps = {
		  prefixCls: 'ant-popover',
		  placement: 'top',
		  transitionName: 'zoom-big',
		  trigger: 'hover',
		  mouseEnterDelay: 0.1,
		  mouseLeaveDelay: 0.1,
		  overlayStyle: {}
		}, _temp);
		exports["default"] = Popover;
		module.exports = exports['default'];
	
	/***/ },
	/* 218 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _icon = __webpack_require__(6);
		
		var _icon2 = _interopRequireDefault(_icon);
		
		var _rcProgress = __webpack_require__(336);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var statusColorMap = {
		  normal: '#2db7f5',
		  exception: '#ff5500',
		  success: '#87d068'
		};
		
		var Line = (_temp = _class = function (_React$Component) {
		  _inherits(Line, _React$Component);
		
		  function Line() {
		    _classCallCheck(this, Line);
		
		    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
		  }
		
		  Line.prototype.render = function render() {
		    var _classNames;
		
		    var _props = this.props;
		    var prefixCls = _props.prefixCls;
		    var status = _props.status;
		    var format = _props.format;
		    var percent = _props.percent;
		    var trailColor = _props.trailColor;
		    var type = _props.type;
		    var strokeWidth = _props.strokeWidth;
		    var width = _props.width;
		    var className = _props.className;
		    var showInfo = _props.showInfo;
		
		    var restProps = _objectWithoutProperties(_props, ['prefixCls', 'status', 'format', 'percent', 'trailColor', 'type', 'strokeWidth', 'width', 'className', 'showInfo']);
		
		    var progressStatus = parseInt(percent, 10) >= 100 && !('status' in this.props) ? 'success' : status || 'normal';
		    var progressInfo = void 0;
		    var progress = void 0;
		    var textFormatter = format || function (percentNumber) {
		      return percentNumber + '%';
		    };
		
		    if (showInfo) {
		      var text = void 0;
		      var iconType = type === 'circle' ? '' : '-circle';
		      if (progressStatus === 'exception') {
		        text = format ? textFormatter(percent) : _react2["default"].createElement(_icon2["default"], { type: 'cross' + iconType });
		      } else if (progressStatus === 'success') {
		        text = format ? textFormatter(percent) : _react2["default"].createElement(_icon2["default"], { type: 'check' + iconType });
		      } else {
		        text = textFormatter(percent);
		      }
		      progressInfo = _react2["default"].createElement(
		        'span',
		        { className: prefixCls + '-text' },
		        text
		      );
		    }
		
		    if (type === 'line') {
		      var percentStyle = {
		        width: percent + '%',
		        height: strokeWidth || 10
		      };
		      progress = _react2["default"].createElement(
		        'div',
		        null,
		        _react2["default"].createElement(
		          'div',
		          { className: prefixCls + '-outer' },
		          _react2["default"].createElement(
		            'div',
		            { className: prefixCls + '-inner' },
		            _react2["default"].createElement('div', { className: prefixCls + '-bg', style: percentStyle })
		          )
		        ),
		        progressInfo
		      );
		    } else if (type === 'circle') {
		      var circleSize = width || 132;
		      var circleStyle = {
		        width: circleSize,
		        height: circleSize,
		        fontSize: circleSize * 0.16 + 6
		      };
		      progress = _react2["default"].createElement(
		        'div',
		        { className: prefixCls + '-inner', style: circleStyle },
		        _react2["default"].createElement(_rcProgress.Circle, { percent: percent, strokeWidth: strokeWidth || 6,
		          strokeColor: statusColorMap[progressStatus], trailColor: trailColor
		        }),
		        progressInfo
		      );
		    }
		
		    var classString = (0, _classnames2["default"])((_classNames = {}, _defineProperty(_classNames, '' + prefixCls, true), _defineProperty(_classNames, prefixCls + '-' + type, true), _defineProperty(_classNames, prefixCls + '-status-' + progressStatus, true), _defineProperty(_classNames, prefixCls + '-show-info', showInfo), _defineProperty(_classNames, className, !!className), _classNames));
		
		    return _react2["default"].createElement(
		      'div',
		      _extends({}, restProps, { className: classString }),
		      progress
		    );
		  };
		
		  return Line;
		}(_react2["default"].Component), _class.defaultProps = {
		  type: 'line',
		  percent: 0,
		  showInfo: true,
		  trailColor: '#f3f3f3',
		  prefixCls: 'ant-progress'
		}, _class.propTypes = {
		  status: _react.PropTypes.oneOf(['normal', 'exception', 'active', 'success']),
		  type: _react.PropTypes.oneOf(['line', 'circle']),
		  showInfo: _react.PropTypes.bool,
		  percent: _react.PropTypes.number,
		  width: _react.PropTypes.number,
		  strokeWidth: _react.PropTypes.number,
		  trailColor: _react.PropTypes.string,
		  format: _react.PropTypes.func
		}, _temp);
		exports["default"] = Line;
		module.exports = exports['default'];
	
	/***/ },
	/* 219 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _rcQueueAnim = __webpack_require__(339);
		
		var _rcQueueAnim2 = _interopRequireDefault(_rcQueueAnim);
		
		var _warning = __webpack_require__(18);
		
		var _warning2 = _interopRequireDefault(_warning);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var QueueAnim = function (_React$Component) {
		  _inherits(QueueAnim, _React$Component);
		
		  function QueueAnim() {
		    _classCallCheck(this, QueueAnim);
		
		    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
		  }
		
		  QueueAnim.prototype.componentDidMount = function componentDidMount() {
		    (0, _warning2["default"])(false, '`QueueAnim` is deprecated, ' + 'you can import QueueAnim from \'rc-queue-anim\' directly.' + 'The Demo will be moved to http://motion.ant.design/#/component/queue-anim');
		  };
		
		  QueueAnim.prototype.render = function render() {
		    return _react2["default"].createElement(_rcQueueAnim2["default"], this.props);
		  };
		
		  return QueueAnim;
		}(_react2["default"].Component);
		
		exports["default"] = QueueAnim;
		module.exports = exports['default'];
	
	/***/ },
	/* 220 */
	202,
	/* 221 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var _radio = __webpack_require__(39);
		
		var _radio2 = _interopRequireDefault(_radio);
		
		var _radioButton = __webpack_require__(74);
		
		var _radioButton2 = _interopRequireDefault(_radioButton);
		
		var _reactAddonsPureRenderMixin = __webpack_require__(14);
		
		var _reactAddonsPureRenderMixin2 = _interopRequireDefault(_reactAddonsPureRenderMixin);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		function getCheckedValue(children) {
		  var value = null;
		  var matched = false;
		  _react2["default"].Children.forEach(children, function (radio) {
		    if (radio && radio.props && radio.props.checked) {
		      value = radio.props.value;
		      matched = true;
		    }
		  });
		  return matched ? { value: value } : undefined;
		}
		
		var RadioGroup = (_temp = _class = function (_React$Component) {
		  _inherits(RadioGroup, _React$Component);
		
		  function RadioGroup(props) {
		    _classCallCheck(this, RadioGroup);
		
		    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));
		
		    _this.onRadioChange = function (ev) {
		      if (!('value' in _this.props)) {
		        _this.setState({
		          value: ev.target.value
		        });
		      }
		      _this.props.onChange(ev);
		    };
		
		    var value = void 0;
		    if ('value' in props) {
		      value = props.value;
		    } else if ('defaultValue' in props) {
		      value = props.defaultValue;
		    } else {
		      var checkedValue = getCheckedValue(props.children);
		      value = checkedValue && checkedValue.value;
		    }
		    _this.state = {
		      value: value
		    };
		    return _this;
		  }
		
		  RadioGroup.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
		    if ('value' in nextProps) {
		      this.setState({
		        value: nextProps.value
		      });
		    } else {
		      var checkedValue = getCheckedValue(nextProps.children);
		      if (checkedValue) {
		        this.setState({
		          value: checkedValue.value
		        });
		      }
		    }
		  };
		
		  RadioGroup.prototype.shouldComponentUpdate = function shouldComponentUpdate() {
		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }
		
		    return _reactAddonsPureRenderMixin2["default"].shouldComponentUpdate.apply(this, args);
		  };
		
		  RadioGroup.prototype.render = function render() {
		    var _this2 = this,
		        _classNames;
		
		    var props = this.props;
		    var children = _react2["default"].Children.map(props.children, function (radio) {
		      if (radio && (radio.type === _radio2["default"] || radio.type === _radioButton2["default"]) && radio.props) {
		        var keyProps = {};
		        if (!('key' in radio) && typeof radio.props.value === 'string') {
		          keyProps.key = radio.props.value;
		        }
		        return _react2["default"].cloneElement(radio, _extends({}, keyProps, radio.props, {
		          onChange: _this2.onRadioChange,
		          checked: _this2.state.value === radio.props.value,
		          disabled: radio.props.disabled || _this2.props.disabled
		        }));
		      }
		      return radio;
		    });
		    var classString = (0, _classnames2["default"])((_classNames = {}, _defineProperty(_classNames, props.prefixCls, true), _defineProperty(_classNames, props.prefixCls + '-' + props.size, props.size), _classNames));
		    return _react2["default"].createElement(
		      'div',
		      { className: classString, style: props.style },
		      children
		    );
		  };
		
		  return RadioGroup;
		}(_react2["default"].Component), _class.defaultProps = {
		  prefixCls: 'ant-radio-group',
		  disabled: false,
		  onChange: function onChange() {}
		}, _temp);
		exports["default"] = RadioGroup;
		module.exports = exports['default'];
	
	/***/ },
	/* 222 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _class, _temp;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _rcRate = __webpack_require__(345);
		
		var _rcRate2 = _interopRequireDefault(_rcRate);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var Rate = (_temp = _class = function (_React$Component) {
		  _inherits(Rate, _React$Component);
		
		  function Rate() {
		    _classCallCheck(this, Rate);
		
		    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
		  }
		
		  Rate.prototype.render = function render() {
		    return _react2["default"].createElement(_rcRate2["default"], this.props);
		  };
		
		  return Rate;
		}(_react2["default"].Component), _class.propTypes = {
		  prefixCls: _react.PropTypes.string
		}, _class.defaultProps = {
		  prefixCls: 'ant-rate'
		}, _temp);
		exports["default"] = Rate;
		module.exports = exports['default'];
	
	/***/ },
	/* 223 */
	[461, 445],
	/* 224 */
	178,
	/* 225 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _class, _temp;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _rcSlider = __webpack_require__(358);
		
		var _rcSlider2 = _interopRequireDefault(_rcSlider);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var Slider = (_temp = _class = function (_React$Component) {
		  _inherits(Slider, _React$Component);
		
		  function Slider() {
		    _classCallCheck(this, Slider);
		
		    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
		  }
		
		  Slider.prototype.render = function render() {
		    var _props = this.props;
		    var isIncluded = _props.isIncluded;
		    var marks = _props.marks;
		    var index = _props.index;
		    var defaultIndex = _props.defaultIndex;
		
		    var rest = _objectWithoutProperties(_props, ['isIncluded', 'marks', 'index', 'defaultIndex']);
		
		    if (isIncluded !== undefined) {
		      // 兼容 `isIncluded`
		      rest.included = isIncluded;
		    }
		
		    if (Array.isArray(marks)) {
		      // 兼容当 marks 为数组的情况
		      rest.min = 0;
		      rest.max = marks.length - 1;
		      rest.step = 1;
		
		      if (index !== undefined) {
		        rest.value = index;
		      }
		      if (defaultIndex !== undefined) {
		        rest.defaultValue = defaultIndex;
		      }
		
		      rest.marks = {};
		      marks.forEach(function (val, idx) {
		        rest.marks[idx] = val;
		      });
		    } else {
		      rest.marks = marks;
		    }
		
		    return _react2["default"].createElement(_rcSlider2["default"], rest);
		  };
		
		  return Slider;
		}(_react2["default"].Component), _class.defaultProps = {
		  prefixCls: 'ant-slider',
		  tipTransitionName: 'zoom-down'
		}, _temp);
		exports["default"] = Slider;
		module.exports = exports['default'];
	
	/***/ },
	/* 226 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		__webpack_require__(3);
		
		__webpack_require__(447);
		
		__webpack_require__(81);
	
	/***/ },
	/* 227 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _class, _temp;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _rcSteps = __webpack_require__(362);
		
		var _rcSteps2 = _interopRequireDefault(_rcSteps);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var Steps = (_temp = _class = function (_React$Component) {
		  _inherits(Steps, _React$Component);
		
		  function Steps() {
		    _classCallCheck(this, Steps);
		
		    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
		  }
		
		  Steps.prototype.render = function render() {
		    return _react2["default"].createElement(_rcSteps2["default"], this.props);
		  };
		
		  return Steps;
		}(_react2["default"].Component), _class.Step = _rcSteps2["default"].Step, _class.defaultProps = {
		  prefixCls: 'ant-steps',
		  iconPrefix: 'ant',
		  current: 0
		}, _temp);
		exports["default"] = Steps;
		module.exports = exports['default'];
	
	/***/ },
	/* 228 */
	[461, 449],
	/* 229 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		__webpack_require__(3);
	
	/***/ },
	/* 230 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp;
		
		var _rcSwitch = __webpack_require__(364);
		
		var _rcSwitch2 = _interopRequireDefault(_rcSwitch);
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var Switch = (_temp = _class = function (_React$Component) {
		  _inherits(Switch, _React$Component);
		
		  function Switch() {
		    _classCallCheck(this, Switch);
		
		    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
		  }
		
		  Switch.prototype.render = function render() {
		    var _classNames;
		
		    var _props = this.props;
		    var prefixCls = _props.prefixCls;
		    var size = _props.size;
		    var className = _props.className;
		
		    var cls = (0, _classnames2["default"])((_classNames = {}, _defineProperty(_classNames, className, !!className), _defineProperty(_classNames, prefixCls + '-small', size === 'small'), _classNames));
		    return _react2["default"].createElement(_rcSwitch2["default"], _extends({ className: cls }, this.props));
		  };
		
		  return Switch;
		}(_react2["default"].Component), _class.defaultProps = {
		  prefixCls: 'ant-switch'
		}, _temp);
		exports["default"] = Switch;
		module.exports = exports['default'];
	
	/***/ },
	/* 231 */
	[461, 450],
	/* 232 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp, _initialiseProps;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _rcTable = __webpack_require__(367);
		
		var _rcTable2 = _interopRequireDefault(_rcTable);
		
		var _checkbox = __webpack_require__(20);
		
		var _checkbox2 = _interopRequireDefault(_checkbox);
		
		var _radio = __webpack_require__(26);
		
		var _radio2 = _interopRequireDefault(_radio);
		
		var _filterDropdown = __webpack_require__(233);
		
		var _filterDropdown2 = _interopRequireDefault(_filterDropdown);
		
		var _pagination = __webpack_require__(69);
		
		var _pagination2 = _interopRequireDefault(_pagination);
		
		var _icon = __webpack_require__(6);
		
		var _icon2 = _interopRequireDefault(_icon);
		
		var _spin = __webpack_require__(76);
		
		var _spin2 = _interopRequireDefault(_spin);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var _util = __webpack_require__(236);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
		
		function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		function noop() {}
		
		function stopPropagation(e) {
		  e.stopPropagation();
		  if (e.nativeEvent.stopImmediatePropagation) {
		    e.nativeEvent.stopImmediatePropagation();
		  }
		}
		
		var defaultLocale = {
		  filterTitle: '筛选',
		  filterConfirm: '确定',
		  filterReset: '重置',
		  emptyText: _react2["default"].createElement(
		    'span',
		    null,
		    _react2["default"].createElement(_icon2["default"], { type: 'frown' }),
		    '暂无数据'
		  )
		};
		
		var defaultPagination = {
		  pageSize: 10,
		  onChange: noop,
		  onShowSizeChange: noop
		};
		
		var Table = (_temp = _class = function (_React$Component) {
		  _inherits(Table, _React$Component);
		
		  function Table(props) {
		    _classCallCheck(this, Table);
		
		    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));
		
		    _initialiseProps.call(_this);
		
		    var pagination = props.pagination || {};
		
		    _this.state = _extends({
		      // 减少状态
		      selectedRowKeys: (props.rowSelection || {}).selectedRowKeys || [],
		      filters: _this.getFiltersFromColumns(),
		      selectionDirty: false
		    }, _this.getSortStateFromColumns(), {
		      pagination: _this.hasPagination() ? _extends({}, defaultPagination, pagination, {
		        current: pagination.defaultCurrent || pagination.current || 1
		      }) : {}
		    });
		
		    _this.CheckboxPropsCache = {};
		    return _this;
		  }
		
		  Table.prototype.getCheckboxPropsByItem = function getCheckboxPropsByItem(item) {
		    var _props$rowSelection = this.props.rowSelection;
		    var rowSelection = _props$rowSelection === undefined ? {} : _props$rowSelection;
		
		    if (!rowSelection.getCheckboxProps) {
		      return {};
		    }
		    var key = this.getRecordKey(item);
		    // Cache checkboxProps
		    if (!this.CheckboxPropsCache[key]) {
		      this.CheckboxPropsCache[key] = rowSelection.getCheckboxProps(item);
		    }
		    return this.CheckboxPropsCache[key];
		  };
		
		  Table.prototype.getDefaultSelection = function getDefaultSelection() {
		    var _this2 = this;
		
		    var _props$rowSelection2 = this.props.rowSelection;
		    var rowSelection = _props$rowSelection2 === undefined ? {} : _props$rowSelection2;
		
		    if (!rowSelection.getCheckboxProps) {
		      return [];
		    }
		    return this.getFlatCurrentPageData().filter(function (item) {
		      return _this2.getCheckboxPropsByItem(item).defaultChecked;
		    }).map(function (record, rowIndex) {
		      return _this2.getRecordKey(record, rowIndex);
		    });
		  };
		
		  Table.prototype.getLocale = function getLocale() {
		    var locale = {};
		    if (this.context.antLocale && this.context.antLocale.Table) {
		      locale = this.context.antLocale.Table;
		    }
		    return _extends({}, defaultLocale, locale, this.props.locale);
		  };
		
		  Table.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
		    var _this3 = this;
		
		    if ('pagination' in nextProps && nextProps.pagination !== false) {
		      this.setState(function (previousState) {
		        var newPagination = _extends({}, defaultPagination, previousState.pagination, nextProps.pagination);
		        newPagination.current = newPagination.current || 1;
		        return { pagination: newPagination };
		      });
		    }
		    // dataSource 的变化会清空选中项
		    if ('dataSource' in nextProps && nextProps.dataSource !== this.props.dataSource) {
		      this.setState({
		        selectionDirty: false
		      });
		      this.CheckboxPropsCache = {};
		    }
		    if (nextProps.rowSelection && 'selectedRowKeys' in nextProps.rowSelection) {
		      this.setState({
		        selectedRowKeys: nextProps.rowSelection.selectedRowKeys || []
		      });
		      var rowSelection = this.props.rowSelection;
		
		      if (rowSelection && nextProps.rowSelection.getCheckboxProps !== rowSelection.getCheckboxProps) {
		        this.CheckboxPropsCache = {};
		      }
		    }
		
		    if (this.getSortOrderColumns(nextProps.columns).length > 0) {
		      var sortState = this.getSortStateFromColumns(nextProps.columns);
		      if (sortState.sortColumn !== this.state.sortColumn || sortState.sortOrder !== this.state.sortOrder) {
		        this.setState(sortState);
		      }
		    }
		
		    var filteredValueColumns = this.getFilteredValueColumns(nextProps.columns);
		    if (filteredValueColumns.length > 0) {
		      (function () {
		        var filtersFromColumns = _this3.getFiltersFromColumns(nextProps.columns);
		        var newFilters = _extends({}, _this3.state.filters);
		        Object.keys(filtersFromColumns).forEach(function (key) {
		          newFilters[key] = filtersFromColumns[key];
		        });
		        if (_this3.isFiltersChanged(newFilters)) {
		          _this3.setState({ filters: newFilters });
		        }
		      })();
		    }
		  };
		
		  Table.prototype.setSelectedRowKeys = function setSelectedRowKeys(selectedRowKeys) {
		    var _this4 = this;
		
		    if (this.props.rowSelection && !('selectedRowKeys' in this.props.rowSelection)) {
		      this.setState({ selectedRowKeys: selectedRowKeys });
		    }
		    if (this.props.rowSelection && this.props.rowSelection.onChange) {
		      var data = this.getFlatCurrentPageData();
		      var selectedRows = data.filter(function (row, i) {
		        return selectedRowKeys.indexOf(_this4.getRecordKey(row, i)) >= 0;
		      });
		      this.props.rowSelection.onChange(selectedRowKeys, selectedRows);
		    }
		  };
		
		  Table.prototype.hasPagination = function hasPagination() {
		    return this.props.pagination !== false;
		  };
		
		  Table.prototype.isFiltersChanged = function isFiltersChanged(filters) {
		    var _this5 = this;
		
		    var filtersChanged = false;
		    if (Object.keys(filters).length !== Object.keys(this.state.filters).length) {
		      filtersChanged = true;
		    } else {
		      Object.keys(filters).forEach(function (columnKey) {
		        if (filters[columnKey] !== _this5.state.filters[columnKey]) {
		          filtersChanged = true;
		        }
		      });
		    }
		    return filtersChanged;
		  };
		
		  Table.prototype.getSortOrderColumns = function getSortOrderColumns(columns) {
		    return (columns || this.props.columns || []).filter(function (column) {
		      return 'sortOrder' in column;
		    });
		  };
		
		  Table.prototype.getFilteredValueColumns = function getFilteredValueColumns(columns) {
		    return (columns || this.props.columns || []).filter(function (column) {
		      return 'filteredValue' in column;
		    });
		  };
		
		  Table.prototype.getFiltersFromColumns = function getFiltersFromColumns(columns) {
		    var _this6 = this;
		
		    var filters = {};
		    this.getFilteredValueColumns(columns).forEach(function (col) {
		      filters[_this6.getColumnKey(col)] = col.filteredValue;
		    });
		    return filters;
		  };
		
		  Table.prototype.getSortStateFromColumns = function getSortStateFromColumns(columns) {
		    // return fisrt column which sortOrder is not falsy
		    var sortedColumn = this.getSortOrderColumns(columns).filter(function (col) {
		      return col.sortOrder;
		    })[0];
		    if (sortedColumn) {
		      return {
		        sortColumn: sortedColumn,
		        sortOrder: sortedColumn.sortOrder
		      };
		    }
		    return {
		      sortColumn: null,
		      sortOrder: null
		    };
		  };
		
		  Table.prototype.getSorterFn = function getSorterFn() {
		    var _state = this.state;
		    var sortOrder = _state.sortOrder;
		    var sortColumn = _state.sortColumn;
		
		    if (!sortOrder || !sortColumn || typeof sortColumn.sorter !== 'function') {
		      return;
		    }
		    return function (a, b) {
		      var result = sortColumn.sorter(a, b);
		      if (result !== 0) {
		        return sortOrder === 'descend' ? -result : result;
		      }
		      return a.indexForSort - b.indexForSort;
		    };
		  };
		
		  Table.prototype.toggleSortOrder = function toggleSortOrder(order, column) {
		    var _props;
		
		    var _state2 = this.state;
		    var sortColumn = _state2.sortColumn;
		    var sortOrder = _state2.sortOrder;
		    // 只同时允许一列进行排序，否则会导致排序顺序的逻辑问题
		
		    var isSortColumn = this.isSortColumn(column);
		    if (!isSortColumn) {
		      // 当前列未排序
		      sortOrder = order;
		      sortColumn = column;
		    } else {
		      // 当前列已排序
		      if (sortOrder === order) {
		        // 切换为未排序状态
		        sortOrder = '';
		        sortColumn = null;
		      } else {
		        // 切换为排序状态
		        sortOrder = order;
		      }
		    }
		    var newState = {
		      sortOrder: sortOrder,
		      sortColumn: sortColumn
		    };
		
		    // Controlled
		    if (this.getSortOrderColumns().length === 0) {
		      this.setState(newState);
		    }
		
		    (_props = this.props).onChange.apply(_props, _toConsumableArray(this.prepareParamsArguments(_extends({}, this.state, newState))));
		  };
		
		  Table.prototype.getRecordKey = function getRecordKey(record, index) {
		    if (this.props.rowKey) {
		      return this.props.rowKey(record, index);
		    }
		    return record.key || index;
		  };
		
		  Table.prototype.renderRowSelection = function renderRowSelection() {
		    var _this7 = this;
		
		    var columns = this.props.columns.concat();
		    if (this.props.rowSelection) {
		      var data = this.getFlatCurrentPageData().filter(function (item) {
		        if (_this7.props.rowSelection.getCheckboxProps) {
		          return !_this7.getCheckboxPropsByItem(item).disabled;
		        }
		        return true;
		      });
		      var checked = void 0;
		      if (!data.length) {
		        checked = false;
		      } else {
		        checked = this.state.selectionDirty ? data.every(function (item, i) {
		          return _this7.state.selectedRowKeys.indexOf(_this7.getRecordKey(item, i)) >= 0;
		        }) : data.every(function (item, i) {
		          return _this7.state.selectedRowKeys.indexOf(_this7.getRecordKey(item, i)) >= 0;
		        }) || data.every(function (item) {
		          return _this7.getCheckboxPropsByItem(item).defaultChecked;
		        });
		      }
		      var selectionColumn = void 0;
		      if (this.props.rowSelection.type === 'radio') {
		        selectionColumn = {
		          key: 'selection-column',
		          render: this.renderSelectionRadio,
		          className: 'ant-table-selection-column'
		        };
		      } else {
		        var checkboxAllDisabled = data.every(function (item) {
		          return _this7.getCheckboxPropsByItem(item).disabled;
		        });
		        var checkboxAll = _react2["default"].createElement(_checkbox2["default"], { checked: checked,
		          disabled: checkboxAllDisabled,
		          onChange: this.handleSelectAllRow
		        });
		        selectionColumn = {
		          key: 'selection-column',
		          title: checkboxAll,
		          render: this.renderSelectionCheckBox,
		          className: 'ant-table-selection-column'
		        };
		      }
		      if (columns.some(function (column) {
		        return column.fixed === 'left' || column.fixed === true;
		      })) {
		        selectionColumn.fixed = 'left';
		      }
		      if (columns[0] && columns[0].key === 'selection-column') {
		        columns[0] = selectionColumn;
		      } else {
		        columns.unshift(selectionColumn);
		      }
		    }
		    return columns;
		  };
		
		  Table.prototype.getColumnKey = function getColumnKey(column, index) {
		    return column.key || column.dataIndex || index;
		  };
		
		  Table.prototype.getMaxCurrent = function getMaxCurrent(total) {
		    var _state$pagination = this.state.pagination;
		    var current = _state$pagination.current;
		    var pageSize = _state$pagination.pageSize;
		
		    if ((current - 1) * pageSize >= total) {
		      return current - 1;
		    }
		    return current;
		  };
		
		  Table.prototype.isSortColumn = function isSortColumn(column) {
		    var sortColumn = this.state.sortColumn;
		
		    if (!column || !sortColumn) {
		      return false;
		    }
		    return this.getColumnKey(sortColumn) === this.getColumnKey(column);
		  };
		
		  Table.prototype.renderColumnsDropdown = function renderColumnsDropdown(columns) {
		    var _this8 = this;
		
		    var sortOrder = this.state.sortOrder;
		
		    var locale = this.getLocale();
		    return columns.map(function (originColumn, i) {
		      var column = _extends({}, originColumn);
		      var key = _this8.getColumnKey(column, i);
		      var filterDropdown = void 0;
		      var sortButton = void 0;
		      if (column.filters && column.filters.length > 0 || column.filterDropdown) {
		        var colFilters = _this8.state.filters[key] || [];
		        filterDropdown = _react2["default"].createElement(_filterDropdown2["default"], {
		          locale: locale,
		          column: column,
		          selectedKeys: colFilters,
		          confirmFilter: _this8.handleFilter
		        });
		      }
		      if (column.sorter) {
		        var isSortColumn = _this8.isSortColumn(column);
		        if (isSortColumn) {
		          column.className = column.className || '';
		          if (sortOrder) {
		            column.className += ' ant-table-column-sort';
		          }
		        }
		        var isAscend = isSortColumn && sortOrder === 'ascend';
		        var isDescend = isSortColumn && sortOrder === 'descend';
		        sortButton = _react2["default"].createElement(
		          'div',
		          { className: 'ant-table-column-sorter' },
		          _react2["default"].createElement(
		            'span',
		            { className: 'ant-table-column-sorter-up ' + (isAscend ? 'on' : 'off'),
		              title: '↑',
		              onClick: function onClick() {
		                return _this8.toggleSortOrder('ascend', column);
		              }
		            },
		            _react2["default"].createElement(_icon2["default"], { type: 'caret-up' })
		          ),
		          _react2["default"].createElement(
		            'span',
		            { className: 'ant-table-column-sorter-down ' + (isDescend ? 'on' : 'off'),
		              title: '↓',
		              onClick: function onClick() {
		                return _this8.toggleSortOrder('descend', column);
		              }
		            },
		            _react2["default"].createElement(_icon2["default"], { type: 'caret-down' })
		          )
		        );
		      }
		      column.title = _react2["default"].createElement(
		        'span',
		        null,
		        column.title,
		        sortButton,
		        filterDropdown
		      );
		      return column;
		    });
		  };
		
		  Table.prototype.renderPagination = function renderPagination() {
		    // 强制不需要分页
		    if (!this.hasPagination()) {
		      return null;
		    }
		    var size = 'default';
		    var pagination = this.state.pagination;
		
		    if (pagination.size) {
		      size = pagination.size;
		    } else if (this.props.size === 'middle' || this.props.size === 'small') {
		      size = 'small';
		    }
		    var total = pagination.total || this.getLocalData().length;
		    return total > 0 ? _react2["default"].createElement(_pagination2["default"], _extends({}, pagination, {
		      className: this.props.prefixCls + '-pagination',
		      onChange: this.handlePageChange,
		      total: total,
		      size: size,
		      current: this.getMaxCurrent(total),
		      onShowSizeChange: this.handleShowSizeChange
		    })) : null;
		  };
		
		  Table.prototype.prepareParamsArguments = function prepareParamsArguments(state) {
		    // 准备筛选、排序、分页的参数
		    var pagination = state.pagination;
		    var filters = state.filters;
		    var sorter = {};
		    if (state.sortColumn && state.sortOrder) {
		      sorter.column = state.sortColumn;
		      sorter.order = state.sortOrder;
		      sorter.field = state.sortColumn.dataIndex;
		      sorter.columnKey = this.getColumnKey(state.sortColumn);
		    }
		    return [pagination, filters, sorter];
		  };
		
		  Table.prototype.findColumn = function findColumn(myKey) {
		    var _this9 = this;
		
		    return this.props.columns.filter(function (c) {
		      return _this9.getColumnKey(c) === myKey;
		    })[0];
		  };
		
		  Table.prototype.getCurrentPageData = function getCurrentPageData() {
		    var data = this.getLocalData();
		    var current = void 0;
		    var pageSize = void 0;
		    var state = this.state;
		    // 如果没有分页的话，默认全部展示
		    if (!this.hasPagination()) {
		      pageSize = Number.MAX_VALUE;
		      current = 1;
		    } else {
		      pageSize = state.pagination.pageSize;
		      current = this.getMaxCurrent(state.pagination.total || data.length);
		    }
		
		    // 分页
		    // ---
		    // 当数据量少于等于每页数量时，直接设置数据
		    // 否则进行读取分页数据
		    if (data.length > pageSize || pageSize === Number.MAX_VALUE) {
		      data = data.filter(function (item, i) {
		        return i >= (current - 1) * pageSize && i < current * pageSize;
		      });
		    }
		    return data;
		  };
		
		  Table.prototype.getFlatCurrentPageData = function getFlatCurrentPageData() {
		    return (0, _util.flatArray)(this.getCurrentPageData());
		  };
		
		  Table.prototype.getLocalData = function getLocalData() {
		    var _this10 = this;
		
		    var state = this.state;
		    var data = this.props.dataSource || [];
		    // 优化本地排序
		    data = data.slice(0);
		    for (var i = 0; i < data.length; i++) {
		      data[i].indexForSort = i;
		    }
		    var sorterFn = this.getSorterFn();
		    if (sorterFn) {
		      data = data.sort(sorterFn);
		    }
		    // 筛选
		    if (state.filters) {
		      Object.keys(state.filters).forEach(function (columnKey) {
		        var col = _this10.findColumn(columnKey);
		        if (!col) {
		          return;
		        }
		        var values = state.filters[columnKey] || [];
		        if (values.length === 0) {
		          return;
		        }
		        data = col.onFilter ? data.filter(function (record) {
		          return values.some(function (v) {
		            return col.onFilter(v, record);
		          });
		        }) : data;
		      });
		    }
		    return data;
		  };
		
		  Table.prototype.render = function render() {
		    var _classNames,
		        _this11 = this;
		
		    var _props2 = this.props;
		    var style = _props2.style;
		    var className = _props2.className;
		
		    var restProps = _objectWithoutProperties(_props2, ['style', 'className']);
		
		    var data = this.getCurrentPageData();
		    var columns = this.renderRowSelection();
		    var expandIconAsCell = this.props.expandedRowRender && this.props.expandIconAsCell !== false;
		    var locale = this.getLocale();
		
		    var classString = (0, _classnames2["default"])((_classNames = {}, _defineProperty(_classNames, 'ant-table-' + this.props.size, true), _defineProperty(_classNames, 'ant-table-bordered', this.props.bordered), _classNames));
		
		    columns = this.renderColumnsDropdown(columns);
		    columns = columns.map(function (column, i) {
		      var newColumn = _extends({}, column);
		      newColumn.key = _this11.getColumnKey(newColumn, i);
		      return newColumn;
		    });
		    var emptyText = void 0;
		    var emptyClass = '';
		    if (!data || data.length === 0) {
		      emptyText = _react2["default"].createElement(
		        'div',
		        { className: 'ant-table-placeholder' },
		        locale.emptyText
		      );
		      emptyClass = 'ant-table-empty';
		    }
		
		    var table = _react2["default"].createElement(
		      'div',
		      null,
		      _react2["default"].createElement(_rcTable2["default"], _extends({}, restProps, {
		        data: data,
		        columns: columns,
		        className: classString,
		        expandIconColumnIndex: columns[0] && columns[0].key === 'selection-column' ? 1 : 0,
		        expandIconAsCell: expandIconAsCell
		      })),
		      emptyText
		    );
		    // if there is no pagination or no data,
		    // the height of spin should decrease by half of pagination
		    var paginationPatchClass = this.hasPagination() && data && data.length !== 0 ? 'ant-table-with-pagination' : 'ant-table-without-pagination';
		    var spinClassName = this.props.loading ? paginationPatchClass + ' ant-table-spin-holder' : '';
		    table = _react2["default"].createElement(
		      _spin2["default"],
		      { className: spinClassName, spinning: this.props.loading },
		      table
		    );
		    return _react2["default"].createElement(
		      'div',
		      { className: emptyClass + ' ' + className + ' clearfix', style: style },
		      table,
		      this.renderPagination()
		    );
		  };
		
		  return Table;
		}(_react2["default"].Component), _class.propTypes = {
		  dataSource: _react2["default"].PropTypes.array,
		  prefixCls: _react2["default"].PropTypes.string,
		  useFixedHeader: _react2["default"].PropTypes.bool,
		  rowSelection: _react2["default"].PropTypes.object,
		  className: _react2["default"].PropTypes.string,
		  size: _react2["default"].PropTypes.string,
		  loading: _react2["default"].PropTypes.bool,
		  bordered: _react2["default"].PropTypes.bool,
		  onChange: _react2["default"].PropTypes.func,
		  locale: _react2["default"].PropTypes.object
		}, _class.defaultProps = {
		  dataSource: [],
		  prefixCls: 'ant-table',
		  useFixedHeader: false,
		  rowSelection: null,
		  className: '',
		  size: 'large',
		  loading: false,
		  bordered: false,
		  indentSize: 20,
		  onChange: noop,
		  locale: {}
		}, _class.contextTypes = {
		  antLocale: _react2["default"].PropTypes.object
		}, _initialiseProps = function _initialiseProps() {
		  var _this12 = this;
		
		  this.handleFilter = function (column, nextFilters) {
		    var props = _this12.props;
		    var pagination = _extends({}, _this12.state.pagination);
		    var filters = _extends({}, _this12.state.filters, _defineProperty({}, _this12.getColumnKey(column), nextFilters));
		    // Remove filters not in current columns
		    var currentColumnKeys = props.columns.map(function (c) {
		      return _this12.getColumnKey(c);
		    });
		    Object.keys(filters).forEach(function (columnKey) {
		      if (currentColumnKeys.indexOf(columnKey) < 0) {
		        delete filters[columnKey];
		      }
		    });
		
		    if (props.pagination) {
		      // Reset current prop
		      pagination.current = 1;
		      pagination.onChange(pagination.current);
		    }
		
		    var newState = {
		      selectionDirty: false,
		      pagination: pagination
		    };
		    var filtersToSetState = _extends({}, filters);
		    // Remove filters which is controlled
		    _this12.getFilteredValueColumns().forEach(function (col) {
		      var columnKey = _this12.getColumnKey(col);
		      if (columnKey) {
		        delete filtersToSetState[columnKey];
		      }
		    });
		    if (Object.keys(filtersToSetState).length > 0) {
		      newState.filters = filtersToSetState;
		    }
		
		    // Controlled current prop will not respond user interaction
		    if (props.pagination && 'current' in props.pagination) {
		      newState.pagination = _extends({}, pagination, {
		        current: _this12.state.pagination.current
		      });
		    }
		
		    _this12.setState(newState, function () {
		      props.onChange.apply(props, _toConsumableArray(_this12.prepareParamsArguments(_extends({}, _this12.state, {
		        selectionDirty: false,
		        filters: filters,
		        pagination: pagination
		      }))));
		    });
		  };
		
		  this.handleSelect = function (record, rowIndex, e) {
		    var checked = e.target.checked;
		    var defaultSelection = _this12.state.selectionDirty ? [] : _this12.getDefaultSelection();
		    var selectedRowKeys = _this12.state.selectedRowKeys.concat(defaultSelection);
		    var key = _this12.getRecordKey(record, rowIndex);
		    if (checked) {
		      selectedRowKeys.push(_this12.getRecordKey(record, rowIndex));
		    } else {
		      selectedRowKeys = selectedRowKeys.filter(function (i) {
		        return key !== i;
		      });
		    }
		    _this12.setState({
		      selectionDirty: true
		    });
		    _this12.setSelectedRowKeys(selectedRowKeys);
		    if (_this12.props.rowSelection.onSelect) {
		      var data = _this12.getFlatCurrentPageData();
		      var selectedRows = data.filter(function (row, i) {
		        return selectedRowKeys.indexOf(_this12.getRecordKey(row, i)) >= 0;
		      });
		      _this12.props.rowSelection.onSelect(record, checked, selectedRows);
		    }
		  };
		
		  this.handleRadioSelect = function (record, rowIndex, e) {
		    var checked = e.target.checked;
		    var defaultSelection = _this12.state.selectionDirty ? [] : _this12.getDefaultSelection();
		    var selectedRowKeys = _this12.state.selectedRowKeys.concat(defaultSelection);
		    var key = _this12.getRecordKey(record, rowIndex);
		    selectedRowKeys = [key];
		    _this12.setState({
		      selectionDirty: true
		    });
		    _this12.setSelectedRowKeys(selectedRowKeys);
		    if (_this12.props.rowSelection.onSelect) {
		      var data = _this12.getFlatCurrentPageData();
		      var selectedRows = data.filter(function (row, i) {
		        return selectedRowKeys.indexOf(_this12.getRecordKey(row, i)) >= 0;
		      });
		      _this12.props.rowSelection.onSelect(record, checked, selectedRows);
		    }
		  };
		
		  this.handleSelectAllRow = function (e) {
		    var checked = e.target.checked;
		    var data = _this12.getFlatCurrentPageData();
		    var defaultSelection = _this12.state.selectionDirty ? [] : _this12.getDefaultSelection();
		    var selectedRowKeys = _this12.state.selectedRowKeys.concat(defaultSelection);
		    var changableRowKeys = data.filter(function (item) {
		      return !_this12.getCheckboxPropsByItem(item).disabled;
		    }).map(function (item, i) {
		      return _this12.getRecordKey(item, i);
		    });
		
		    // 记录变化的列
		    var changeRowKeys = [];
		    if (checked) {
		      changableRowKeys.forEach(function (key) {
		        if (selectedRowKeys.indexOf(key) < 0) {
		          selectedRowKeys.push(key);
		          changeRowKeys.push(key);
		        }
		      });
		    } else {
		      changableRowKeys.forEach(function (key) {
		        if (selectedRowKeys.indexOf(key) >= 0) {
		          selectedRowKeys.splice(selectedRowKeys.indexOf(key), 1);
		          changeRowKeys.push(key);
		        }
		      });
		    }
		    _this12.setState({
		      selectionDirty: true
		    });
		    _this12.setSelectedRowKeys(selectedRowKeys);
		    if (_this12.props.rowSelection.onSelectAll) {
		      var selectedRows = data.filter(function (row, i) {
		        return selectedRowKeys.indexOf(_this12.getRecordKey(row, i)) >= 0;
		      });
		      var changeRows = data.filter(function (row, i) {
		        return changeRowKeys.indexOf(_this12.getRecordKey(row, i)) >= 0;
		      });
		      _this12.props.rowSelection.onSelectAll(checked, selectedRows, changeRows);
		    }
		  };
		
		  this.handlePageChange = function (current) {
		    var _props3;
		
		    var props = _this12.props;
		    var pagination = _extends({}, _this12.state.pagination);
		    if (current) {
		      pagination.current = current;
		    } else {
		      pagination.current = pagination.current || 1;
		    }
		    pagination.onChange(pagination.current);
		
		    var newState = {
		      selectionDirty: false,
		      pagination: pagination
		    };
		    // Controlled current prop will not respond user interaction
		    if (props.pagination && 'current' in props.pagination) {
		      newState.pagination = _extends({}, pagination, {
		        current: _this12.state.pagination.current
		      });
		    }
		    _this12.setState(newState);
		
		    (_props3 = _this12.props).onChange.apply(_props3, _toConsumableArray(_this12.prepareParamsArguments(_extends({}, _this12.state, {
		      selectionDirty: false,
		      pagination: pagination
		    }))));
		  };
		
		  this.renderSelectionRadio = function (value, record, index) {
		    var rowIndex = _this12.getRecordKey(record, index); // 从 1 开始
		    var props = _this12.getCheckboxPropsByItem(record);
		    var checked = void 0;
		    if (_this12.state.selectionDirty) {
		      checked = _this12.state.selectedRowKeys.indexOf(rowIndex) >= 0;
		    } else {
		      checked = _this12.state.selectedRowKeys.indexOf(rowIndex) >= 0 || _this12.getDefaultSelection().indexOf(rowIndex) >= 0;
		    }
		    return _react2["default"].createElement(
		      'span',
		      { onClick: stopPropagation },
		      _react2["default"].createElement(_radio2["default"], { disabled: props.disabled,
		        onChange: function onChange(e) {
		          return _this12.handleRadioSelect(record, rowIndex, e);
		        },
		        value: rowIndex, checked: checked
		      })
		    );
		  };
		
		  this.renderSelectionCheckBox = function (value, record, index) {
		    var rowIndex = _this12.getRecordKey(record, index); // 从 1 开始
		    var checked = void 0;
		    if (_this12.state.selectionDirty) {
		      checked = _this12.state.selectedRowKeys.indexOf(rowIndex) >= 0;
		    } else {
		      checked = _this12.state.selectedRowKeys.indexOf(rowIndex) >= 0 || _this12.getDefaultSelection().indexOf(rowIndex) >= 0;
		    }
		    var props = _this12.getCheckboxPropsByItem(record);
		    return _react2["default"].createElement(
		      'span',
		      { onClick: stopPropagation },
		      _react2["default"].createElement(_checkbox2["default"], {
		        checked: checked,
		        disabled: props.disabled,
		        onChange: function onChange(e) {
		          return _this12.handleSelect(record, rowIndex, e);
		        }
		      })
		    );
		  };
		
		  this.handleShowSizeChange = function (current, pageSize) {
		    var _props4;
		
		    var pagination = _this12.state.pagination;
		    pagination.onShowSizeChange(current, pageSize);
		    var nextPagination = _extends({}, pagination, { pageSize: pageSize, current: current });
		    _this12.setState({ pagination: nextPagination });
		    (_props4 = _this12.props).onChange.apply(_props4, _toConsumableArray(_this12.prepareParamsArguments(_extends({}, _this12.state, {
		      pagination: nextPagination
		    }))));
		  };
		}, _temp);
		exports["default"] = Table;
		module.exports = exports['default'];
	
	/***/ },
	/* 233 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
		
		var _class, _temp;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _rcMenu = __webpack_require__(23);
		
		var _rcMenu2 = _interopRequireDefault(_rcMenu);
		
		var _dropdown = __webpack_require__(62);
		
		var _dropdown2 = _interopRequireDefault(_dropdown);
		
		var _icon = __webpack_require__(6);
		
		var _icon2 = _interopRequireDefault(_icon);
		
		var _checkbox = __webpack_require__(20);
		
		var _checkbox2 = _interopRequireDefault(_checkbox);
		
		var _radio = __webpack_require__(26);
		
		var _radio2 = _interopRequireDefault(_radio);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var FilterMenu = (_temp = _class = function (_React$Component) {
		  _inherits(FilterMenu, _React$Component);
		
		  function FilterMenu(props) {
		    _classCallCheck(this, FilterMenu);
		
		    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));
		
		    _this.setSelectedKeys = function (_ref) {
		      var selectedKeys = _ref.selectedKeys;
		
		      _this.setState({ selectedKeys: selectedKeys });
		    };
		
		    _this.handleClearFilters = function () {
		      _this.setState({
		        selectedKeys: []
		      }, _this.handleConfirm);
		    };
		
		    _this.handleConfirm = function () {
		      _this.setState({
		        visible: false
		      });
		      _this.confirmFilter();
		    };
		
		    _this.onVisibleChange = function (visible) {
		      _this.setState({
		        visible: visible
		      });
		      if (!visible) {
		        _this.confirmFilter();
		      }
		    };
		
		    _this.handleMenuItemClick = function (info) {
		      if (info.keyPath.length <= 1) {
		        return;
		      }
		      var keyPathOfSelectedItem = _this.state.keyPathOfSelectedItem;
		      if (_this.state.selectedKeys.indexOf(info.key) >= 0) {
		        // deselect SubMenu child
		        delete keyPathOfSelectedItem[info.key];
		      } else {
		        // select SubMenu child
		        keyPathOfSelectedItem[info.key] = info.keyPath;
		      }
		      _this.setState({ keyPathOfSelectedItem: keyPathOfSelectedItem });
		    };
		
		    _this.state = {
		      selectedKeys: props.selectedKeys,
		      keyPathOfSelectedItem: {}, // 记录所有有选中子菜单的祖先菜单
		      visible: false
		    };
		    return _this;
		  }
		
		  FilterMenu.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
		    this.setState({
		      selectedKeys: nextProps.selectedKeys
		    });
		  };
		
		  FilterMenu.prototype.confirmFilter = function confirmFilter() {
		    if (this.state.selectedKeys !== this.props.selectedKeys) {
		      this.props.confirmFilter(this.props.column, this.state.selectedKeys);
		    }
		  };
		
		  FilterMenu.prototype.renderMenuItem = function renderMenuItem(item) {
		    var column = this.props.column;
		
		    var multiple = 'filterMultiple' in column ? column.filterMultiple : true;
		    return _react2["default"].createElement(
		      _rcMenu.Item,
		      { key: item.value },
		      multiple ? _react2["default"].createElement(_checkbox2["default"], { checked: this.state.selectedKeys.indexOf(item.value.toString()) >= 0 }) : _react2["default"].createElement(_radio2["default"], { checked: this.state.selectedKeys.indexOf(item.value.toString()) >= 0 }),
		      _react2["default"].createElement(
		        'span',
		        null,
		        item.text
		      )
		    );
		  };
		
		  FilterMenu.prototype.renderMenus = function renderMenus(items) {
		    var _this2 = this;
		
		    return items.map(function (item) {
		      if (item.children && item.children.length > 0) {
		        var _ret = function () {
		          var keyPathOfSelectedItem = _this2.state.keyPathOfSelectedItem;
		
		          var containSelected = Object.keys(keyPathOfSelectedItem).some(function (key) {
		            return keyPathOfSelectedItem[key].indexOf(item.value) >= 0;
		          });
		          var subMenuCls = containSelected ? 'ant-dropdown-submenu-contain-selected' : '';
		          return {
		            v: _react2["default"].createElement(
		              _rcMenu.SubMenu,
		              { title: item.text, className: subMenuCls, key: item.value.toString() },
		              item.children.map(function (child) {
		                return _this2.renderMenuItem(child);
		              })
		            )
		          };
		        }();
		
		        if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
		      }
		      return _this2.renderMenuItem(item);
		    });
		  };
		
		  FilterMenu.prototype.render = function render() {
		    var _props = this.props;
		    var column = _props.column;
		    var locale = _props.locale;
		    // default multiple selection in filter dropdown
		
		    var multiple = 'filterMultiple' in column ? column.filterMultiple : true;
		
		    var menus = column.filterDropdown ? column.filterDropdown : _react2["default"].createElement(
		      'div',
		      { className: 'ant-table-filter-dropdown' },
		      _react2["default"].createElement(
		        _rcMenu2["default"],
		        {
		          multiple: multiple,
		          onClick: this.handleMenuItemClick,
		          prefixCls: 'ant-dropdown-menu',
		          onSelect: this.setSelectedKeys,
		          onDeselect: this.setSelectedKeys,
		          selectedKeys: this.state.selectedKeys
		        },
		        this.renderMenus(column.filters)
		      ),
		      _react2["default"].createElement(
		        'div',
		        { className: 'ant-table-filter-dropdown-btns' },
		        _react2["default"].createElement(
		          'a',
		          {
		            className: 'ant-table-filter-dropdown-link confirm',
		            onClick: this.handleConfirm
		          },
		          locale.filterConfirm
		        ),
		        _react2["default"].createElement(
		          'a',
		          {
		            className: 'ant-table-filter-dropdown-link clear',
		            onClick: this.handleClearFilters
		          },
		          locale.filterReset
		        )
		      )
		    );
		
		    var dropdownSelectedClass = this.props.selectedKeys.length > 0 ? 'ant-table-filter-selected' : '';
		
		    return _react2["default"].createElement(
		      _dropdown2["default"],
		      {
		        trigger: ['click'],
		        overlay: menus,
		        visible: this.state.visible,
		        onVisibleChange: this.onVisibleChange,
		        closeOnSelect: false
		      },
		      _react2["default"].createElement(_icon2["default"], { title: locale.filterTitle, type: 'filter', className: dropdownSelectedClass })
		    );
		  };
		
		  return FilterMenu;
		}(_react2["default"].Component), _class.defaultProps = {
		  handleFilter: function handleFilter() {},
		
		  column: null
		}, _temp);
		exports["default"] = FilterMenu;
		module.exports = exports['default'];
	
	/***/ },
	/* 234 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _Table = __webpack_require__(232);
		
		var _Table2 = _interopRequireDefault(_Table);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		exports["default"] = _Table2["default"];
		module.exports = exports['default'];
	
	/***/ },
	/* 235 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		__webpack_require__(3);
		
		__webpack_require__(451);
		
		__webpack_require__(40);
		
		__webpack_require__(21);
		
		__webpack_require__(63);
		
		__webpack_require__(77);
		
		__webpack_require__(70);
	
	/***/ },
	/* 236 */
	/***/ function(module, exports) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		exports.flatArray = flatArray;
		function flatArray() {
		  var data = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];
		  var childrenName = arguments.length <= 1 || arguments[1] === undefined ? 'children' : arguments[1];
		
		  var result = [];
		  var loop = function loop(array) {
		    array.forEach(function (item) {
		      var newItem = _extends({}, item);
		      delete newItem[childrenName];
		      result.push(newItem);
		      if (item[childrenName] && item[childrenName].length > 0) {
		        loop(item[childrenName]);
		      }
		    });
		  };
		  loop(data);
		  return result;
		}
	
	/***/ },
	/* 237 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp2;
		
		var _rcTabs = __webpack_require__(373);
		
		var _rcTabs2 = _interopRequireDefault(_rcTabs);
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var _icon = __webpack_require__(6);
		
		var _icon2 = _interopRequireDefault(_icon);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var Tabs = (_temp2 = _class = function (_React$Component) {
		  _inherits(Tabs, _React$Component);
		
		  function Tabs() {
		    var _temp, _this, _ret;
		
		    _classCallCheck(this, Tabs);
		
		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }
		
		    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.createNewTab = function (targetKey) {
		      _this.props.onEdit(targetKey, 'add');
		    }, _this.removeTab = function (targetKey, e) {
		      e.stopPropagation();
		      if (!targetKey) {
		        return;
		      }
		      _this.props.onEdit(targetKey, 'remove');
		    }, _this.handleChange = function (activeKey) {
		      _this.props.onChange(activeKey);
		    }, _temp), _possibleConstructorReturn(_this, _ret);
		  }
		
		  Tabs.prototype.render = function render() {
		    var _classNames,
		        _this2 = this;
		
		    var _props = this.props;
		    var prefixCls = _props.prefixCls;
		    var size = _props.size;
		    var tabPosition = _props.tabPosition;
		    var animation = _props.animation;
		    var type = _props.type;
		    var children = _props.children;
		    var tabBarExtraContent = _props.tabBarExtraContent;
		    var hideAdd = _props.hideAdd;
		
		    var className = (0, _classnames2["default"])((_classNames = {}, _defineProperty(_classNames, this.props.className, !!this.props.className), _defineProperty(_classNames, prefixCls + '-mini', size === 'small' || size === 'mini'), _defineProperty(_classNames, prefixCls + '-vertical', tabPosition === 'left' || tabPosition === 'right'), _defineProperty(_classNames, prefixCls + '-card', type.indexOf('card') >= 0), _defineProperty(_classNames, prefixCls + '-' + type, true), _classNames));
		    if (tabPosition === 'left' || tabPosition === 'right' || type.indexOf('card') >= 0) {
		      animation = null;
		    }
		    // only card type tabs can be added and closed
		    if (type === 'editable-card') {
		      children = children.map(function (child, index) {
		        return (0, _react.cloneElement)(child, {
		          tab: _react2["default"].createElement(
		            'div',
		            null,
		            child.props.tab,
		            _react2["default"].createElement(_icon2["default"], { type: 'cross', onClick: function onClick(e) {
		                return _this2.removeTab(child.key, e);
		              } })
		          ),
		          key: child.key || index
		        });
		      });
		      // Add new tab handler
		      if (!hideAdd) {
		        tabBarExtraContent = _react2["default"].createElement(
		          'span',
		          null,
		          _react2["default"].createElement(_icon2["default"], { type: 'plus', className: prefixCls + '-new-tab', onClick: this.createNewTab }),
		          tabBarExtraContent
		        );
		      }
		    }
		
		    tabBarExtraContent = tabBarExtraContent ? _react2["default"].createElement(
		      'div',
		      { className: prefixCls + '-extra-content' },
		      tabBarExtraContent
		    ) : null;
		
		    return _react2["default"].createElement(
		      _rcTabs2["default"],
		      _extends({}, this.props, {
		        className: className,
		        tabBarExtraContent: tabBarExtraContent,
		        onChange: this.handleChange,
		        animation: animation
		      }),
		      children
		    );
		  };
		
		  return Tabs;
		}(_react2["default"].Component), _class.TabPane = _rcTabs2["default"].TabPane, _class.defaultProps = {
		  prefixCls: 'ant-tabs',
		  animation: 'slide-horizontal',
		  type: 'line', // or 'card' 'editable-card'
		  onChange: function onChange() {},
		  onEdit: function onEdit() {},
		
		  hideAdd: false
		}, _temp2);
		exports["default"] = Tabs;
		module.exports = exports['default'];
	
	/***/ },
	/* 238 */
	[461, 452],
	/* 239 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _reactDom = __webpack_require__(4);
		
		var _reactDom2 = _interopRequireDefault(_reactDom);
		
		var _rcAnimate = __webpack_require__(7);
		
		var _rcAnimate2 = _interopRequireDefault(_rcAnimate);
		
		var _icon = __webpack_require__(6);
		
		var _icon2 = _interopRequireDefault(_icon);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var _object = __webpack_require__(16);
		
		var _object2 = _interopRequireDefault(_object);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var Tag = (_temp = _class = function (_React$Component) {
		  _inherits(Tag, _React$Component);
		
		  function Tag(props) {
		    _classCallCheck(this, Tag);
		
		    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));
		
		    _this.close = function (e) {
		      _this.props.onClose(e);
		      if (e.defaultPrevented) return;
		      var dom = _reactDom2["default"].findDOMNode(_this);
		      dom.style.width = dom.getBoundingClientRect().width + 'px';
		      // It's Magic Code, don't know why
		      dom.style.width = dom.getBoundingClientRect().width + 'px';
		      _this.setState({
		        closing: true
		      });
		    };
		
		    _this.animationEnd = function (key, existed) {
		      if (!existed && !_this.state.closed) {
		        _this.setState({
		          closed: true,
		          closing: false
		        });
		        _this.props.afterClose();
		      }
		    };
		
		    _this.state = {
		      closing: false,
		      closed: false
		    };
		    return _this;
		  }
		
		  Tag.prototype.render = function render() {
		    var _classNames;
		
		    var _props = this.props;
		    var prefixCls = _props.prefixCls;
		    var closable = _props.closable;
		    var color = _props.color;
		    var className = _props.className;
		    var children = _props.children;
		
		    var otherProps = _objectWithoutProperties(_props, ['prefixCls', 'closable', 'color', 'className', 'children']);
		
		    var closeIcon = closable ? _react2["default"].createElement(_icon2["default"], { type: 'cross', onClick: this.close }) : '';
		    var classString = (0, _classnames2["default"])((_classNames = {}, _defineProperty(_classNames, prefixCls, true), _defineProperty(_classNames, prefixCls + '-' + color, !!color), _defineProperty(_classNames, prefixCls + '-close', this.state.closing), _defineProperty(_classNames, className, !!className), _classNames));
		    // fix https://fb.me/react-unknown-prop
		    var divProps = (0, _object2["default"])(otherProps, ['onClose', 'afterClose']);
		    return _react2["default"].createElement(
		      _rcAnimate2["default"],
		      { component: '',
		        showProp: 'data-show',
		        transitionName: prefixCls + '-zoom',
		        transitionAppear: true,
		        onEnd: this.animationEnd
		      },
		      this.state.closed ? null : _react2["default"].createElement(
		        'div',
		        _extends({ 'data-show': !this.state.closing }, divProps, { className: classString }),
		        _react2["default"].createElement(
		          'span',
		          { className: prefixCls + '-text' },
		          children
		        ),
		        closeIcon
		      )
		    );
		  };
		
		  return Tag;
		}(_react2["default"].Component), _class.defaultProps = {
		  prefixCls: 'ant-tag',
		  closable: false,
		  onClose: function onClose() {},
		  afterClose: function afterClose() {}
		}, _temp);
		exports["default"] = Tag;
		module.exports = exports['default'];
	
	/***/ },
	/* 240 */
	[461, 453],
	/* 241 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp2;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _gregorianCalendarFormat = __webpack_require__(29);
		
		var _gregorianCalendarFormat2 = _interopRequireDefault(_gregorianCalendarFormat);
		
		var _TimePicker = __webpack_require__(115);
		
		var _TimePicker2 = _interopRequireDefault(_TimePicker);
		
		var _zh_CN = __webpack_require__(78);
		
		var _zh_CN2 = _interopRequireDefault(_zh_CN);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var _gregorianCalendar = __webpack_require__(9);
		
		var _gregorianCalendar2 = _interopRequireDefault(_gregorianCalendar);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var TimePicker = (_temp2 = _class = function (_React$Component) {
		  _inherits(TimePicker, _React$Component);
		
		  function TimePicker() {
		    var _temp, _this, _ret;
		
		    _classCallCheck(this, TimePicker);
		
		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }
		
		    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleChange = function (value) {
		      _this.props.onChange(value ? new Date(value.getTime()) : null, value ? _this.getFormatter().format(value) : '');
		    }, _temp), _possibleConstructorReturn(_this, _ret);
		  }
		
		  TimePicker.prototype.getFormatter = function getFormatter() {
		    return new _gregorianCalendarFormat2["default"](this.props.format, this.getLocale().format);
		  };
		
		  /**
		   * 获得输入框的 className
		   */
		
		
		  TimePicker.prototype.getSizeClass = function getSizeClass() {
		    var sizeClass = '';
		    if (this.props.size === 'large') {
		      sizeClass = ' ant-input-lg';
		    } else if (this.props.size === 'small') {
		      sizeClass = ' ant-input-sm';
		    }
		    return sizeClass;
		  };
		
		  /**
		   * 获得输入框的默认值
		   */
		
		
		  TimePicker.prototype.parseTimeFromValue = function parseTimeFromValue(value) {
		    if (value) {
		      if (typeof value === 'string') {
		        return this.getFormatter().parse(value, {
		          locale: this.getLocale().calendar,
		          obeyCount: true
		        });
		      } else if (value instanceof Date) {
		        var date = new _gregorianCalendar2["default"](this.getLocale().calendar);
		        date.setTime(+value);
		        return date;
		      }
		    }
		    return value;
		  };
		
		  TimePicker.prototype.getLocale = function getLocale() {
		    var locale = _zh_CN2["default"];
		    if (this.context.antLocale && this.context.antLocale.TimePicker) {
		      locale = this.context.antLocale.TimePicker;
		    }
		    // 统一合并为完整的 Locale
		    return _extends({}, locale, this.props.locale);
		  };
		
		  TimePicker.prototype.render = function render() {
		    var _classNames;
		
		    var locale = this.getLocale();
		    var props = _extends({}, this.props);
		    props.placeholder = 'placeholder' in this.props ? props.placeholder : locale.placeholder;
		    if (props.defaultValue) {
		      props.defaultValue = this.parseTimeFromValue(props.defaultValue);
		    } else {
		      delete props.defaultValue;
		    }
		    if (props.value) {
		      props.value = this.parseTimeFromValue(props.value);
		    }
		    var className = (0, _classnames2["default"])((_classNames = {}, _defineProperty(_classNames, props.className, !!props.className), _defineProperty(_classNames, props.prefixCls + '-' + props.size, !!props.size), _classNames));
		    if (props.format.indexOf('ss') < 0) {
		      props.showSecond = false;
		    }
		    if (props.format.indexOf('HH') < 0) {
		      props.showHour = false;
		    }
		
		    return _react2["default"].createElement(_TimePicker2["default"], _extends({}, props, {
		      className: className,
		      locale: locale,
		      formatter: this.getFormatter(),
		      onChange: this.handleChange
		    }));
		  };
		
		  return TimePicker;
		}(_react2["default"].Component), _class.defaultProps = {
		  format: 'HH:mm:ss',
		  prefixCls: 'ant-time-picker',
		  onChange: function onChange() {},
		
		  locale: {},
		  align: {
		    offset: [0, -2]
		  },
		  disabled: false,
		  disabledHours: undefined,
		  disabledMinutes: undefined,
		  disabledSeconds: undefined,
		  hideDisabledOptions: false,
		  placement: 'bottomLeft',
		  transitionName: 'slide-up'
		}, _class.contextTypes = {
		  antLocale: _react2["default"].PropTypes.object
		}, _temp2);
		exports["default"] = TimePicker;
		module.exports = exports['default'];
	
	/***/ },
	/* 242 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var _TimelineItem = __webpack_require__(80);
		
		var _TimelineItem2 = _interopRequireDefault(_TimelineItem);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var Timeline = (_temp = _class = function (_React$Component) {
		  _inherits(Timeline, _React$Component);
		
		  function Timeline() {
		    _classCallCheck(this, Timeline);
		
		    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
		  }
		
		  Timeline.prototype.render = function render() {
		    var _classNames;
		
		    var _props = this.props;
		    var prefixCls = _props.prefixCls;
		    var children = _props.children;
		    var pending = _props.pending;
		    var className = _props.className;
		
		    var restProps = _objectWithoutProperties(_props, ['prefixCls', 'children', 'pending', 'className']);
		
		    var pendingNode = typeof pending === 'boolean' ? null : pending;
		    var classString = (0, _classnames2["default"])((_classNames = {}, _defineProperty(_classNames, prefixCls, true), _defineProperty(_classNames, prefixCls + '-pending', !!pending), _defineProperty(_classNames, className, className), _classNames));
		    return _react2["default"].createElement(
		      'ul',
		      _extends({}, restProps, { className: classString }),
		      _react2["default"].Children.map(children, function (ele, idx) {
		        return _react2["default"].cloneElement(ele, {
		          last: idx === children.length - 1
		        });
		      }),
		      !!pending ? _react2["default"].createElement(
		        _TimelineItem2["default"],
		        { pending: !!pending },
		        pendingNode
		      ) : null
		    );
		  };
		
		  return Timeline;
		}(_react2["default"].Component), _class.defaultProps = {
		  prefixCls: 'ant-timeline'
		}, _temp);
		exports["default"] = Timeline;
		module.exports = exports['default'];
	
	/***/ },
	/* 243 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _Timeline = __webpack_require__(242);
		
		var _Timeline2 = _interopRequireDefault(_Timeline);
		
		var _TimelineItem = __webpack_require__(80);
		
		var _TimelineItem2 = _interopRequireDefault(_TimelineItem);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		_Timeline2["default"].Item = _TimelineItem2["default"];
		exports["default"] = _Timeline2["default"];
		module.exports = exports['default'];
	
	/***/ },
	/* 244 */
	[461, 455],
	/* 245 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _class, _temp;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _list = __webpack_require__(246);
		
		var _list2 = _interopRequireDefault(_list);
		
		var _operation = __webpack_require__(247);
		
		var _operation2 = _interopRequireDefault(_operation);
		
		var _search = __webpack_require__(82);
		
		var _search2 = _interopRequireDefault(_search);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		function noop() {}
		
		var Transfer = (_temp = _class = function (_React$Component) {
		  _inherits(Transfer, _React$Component);
		
		  function Transfer(props) {
		    _classCallCheck(this, Transfer);
		
		    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));
		
		    _this.moveTo = function (direction) {
		      var targetKeys = _this.props.targetKeys;
		      var _this$state = _this.state;
		      var leftCheckedKeys = _this$state.leftCheckedKeys;
		      var rightCheckedKeys = _this$state.rightCheckedKeys;
		
		      var moveKeys = direction === 'right' ? leftCheckedKeys : rightCheckedKeys;
		      // move items to target box
		      var newTargetKeys = direction === 'right' ? moveKeys.concat(targetKeys) : targetKeys.filter(function (targetKey) {
		        return !moveKeys.some(function (checkedKey) {
		          return targetKey === checkedKey;
		        });
		      });
		
		      // empty checked keys
		      _this.setState(_defineProperty({}, direction === 'right' ? 'leftCheckedKeys' : 'rightCheckedKeys', []));
		
		      _this.props.onChange(newTargetKeys, direction, moveKeys);
		    };
		
		    _this.moveToLeft = function () {
		      return _this.moveTo('left');
		    };
		
		    _this.moveToRight = function () {
		      return _this.moveTo('right');
		    };
		
		    _this.handleSelectAll = function (direction, filteredDataSource, checkAll) {
		      var holder = checkAll ? [] : filteredDataSource.map(function (item) {
		        return item.key;
		      });
		
		      _this.setState(_defineProperty({}, direction + 'CheckedKeys', holder));
		    };
		
		    _this.handleLeftSelectAll = function () {
		      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		        args[_key] = arguments[_key];
		      }
		
		      return _this.handleSelectAll.apply(_this, ['left'].concat(args));
		    };
		
		    _this.handleRightSelectAll = function () {
		      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
		        args[_key2] = arguments[_key2];
		      }
		
		      return _this.handleSelectAll.apply(_this, ['right'].concat(args));
		    };
		
		    _this.handleFilter = function (direction, e) {
		      _this.setState(_defineProperty({}, direction + 'Filter', e.target.value));
		    };
		
		    _this.handleLeftFilter = function (e) {
		      return _this.handleFilter('left', e);
		    };
		
		    _this.handleRightFilter = function (e) {
		      return _this.handleFilter('right', e);
		    };
		
		    _this.handleClear = function (direction) {
		      _this.setState(_defineProperty({}, direction + 'Filter', ''));
		    };
		
		    _this.handleLeftClear = function () {
		      return _this.handleClear('left');
		    };
		
		    _this.handleRightClear = function () {
		      return _this.handleClear('right');
		    };
		
		    _this.handleSelect = function (direction, selectedItem, checked) {
		      var _this$state2 = _this.state;
		      var leftCheckedKeys = _this$state2.leftCheckedKeys;
		      var rightCheckedKeys = _this$state2.rightCheckedKeys;
		
		      var holder = direction === 'left' ? [].concat(_toConsumableArray(leftCheckedKeys)) : [].concat(_toConsumableArray(rightCheckedKeys));
		      var index = void 0;
		      holder.forEach(function (key, i) {
		        if (key === selectedItem.key) {
		          index = i;
		        }
		      });
		      if (index > -1) {
		        holder.splice(index, 1);
		      }
		      if (checked) {
		        holder.push(selectedItem.key);
		      }
		      _this.setState(_defineProperty({}, direction + 'CheckedKeys', holder));
		    };
		
		    _this.handleLeftSelect = function (selectedItem, checked) {
		      return _this.handleSelect('left', selectedItem, checked);
		    };
		
		    _this.handleRightSelect = function (selectedItem, checked) {
		      return _this.handleSelect('right', selectedItem, checked);
		    };
		
		    _this.state = {
		      leftFilter: '',
		      rightFilter: '',
		      leftCheckedKeys: [],
		      rightCheckedKeys: []
		    };
		    return _this;
		  }
		
		  Transfer.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
		    var _this2 = this;
		
		    var _state = this.state;
		    var leftCheckedKeys = _state.leftCheckedKeys;
		    var rightCheckedKeys = _state.rightCheckedKeys;
		
		    if (nextProps.targetKeys !== this.props.targetKeys || nextProps.dataSource !== this.props.dataSource) {
		      (function () {
		        // clear cached splited dataSource
		        _this2.splitedDataSource = null;
		
		        var dataSource = nextProps.dataSource;
		        var targetKeys = nextProps.targetKeys;
		        // clear key nolonger existed
		        // clear checkedKeys according to targetKeys
		
		        _this2.setState({
		          leftCheckedKeys: leftCheckedKeys.filter(function (data) {
		            return dataSource.filter(function (item) {
		              return item.key === data;
		            }).length;
		          }).filter(function (data) {
		            return targetKeys.filter(function (key) {
		              return key === data;
		            }).length === 0;
		          }),
		          rightCheckedKeys: rightCheckedKeys.filter(function (data) {
		            return dataSource.filter(function (item) {
		              return item.key === data;
		            }).length;
		          }).filter(function (data) {
		            return targetKeys.filter(function (key) {
		              return key === data;
		            }).length > 0;
		          })
		        });
		      })();
		    }
		  };
		
		  Transfer.prototype.splitDataSource = function splitDataSource(props) {
		    if (this.splitedDataSource) {
		      return this.splitedDataSource;
		    }
		    var targetKeys = props.targetKeys;
		    var dataSource = props.dataSource;
		
		
		    if (props.rowKey) {
		      dataSource = dataSource.map(function (record) {
		        record.key = props.rowKey(record);
		        return record;
		      });
		    }
		    var leftDataSource = [].concat(_toConsumableArray(dataSource));
		    var rightDataSource = [];
		
		    if (targetKeys.length > 0) {
		      targetKeys.forEach(function (targetKey) {
		        rightDataSource.push(leftDataSource.filter(function (data, index) {
		          if (data.key === targetKey) {
		            leftDataSource.splice(index, 1);
		            return true;
		          }
		          return false;
		        })[0]);
		      });
		    }
		
		    this.splitedDataSource = {
		      leftDataSource: leftDataSource,
		      rightDataSource: rightDataSource
		    };
		
		    return this.splitedDataSource;
		  };
		
		  Transfer.prototype.render = function render() {
		    var _classNames;
		
		    var _props = this.props;
		    var prefixCls = _props.prefixCls;
		    var titles = _props.titles;
		    var operations = _props.operations;
		    var showSearch = _props.showSearch;
		    var notFoundContent = _props.notFoundContent;
		    var searchPlaceholder = _props.searchPlaceholder;
		    var body = _props.body;
		    var footer = _props.footer;
		    var listStyle = _props.listStyle;
		    var className = _props.className;
		    var render = _props.render;
		    var _state2 = this.state;
		    var leftFilter = _state2.leftFilter;
		    var rightFilter = _state2.rightFilter;
		    var leftCheckedKeys = _state2.leftCheckedKeys;
		    var rightCheckedKeys = _state2.rightCheckedKeys;
		
		    var _splitDataSource = this.splitDataSource(this.props);
		
		    var leftDataSource = _splitDataSource.leftDataSource;
		    var rightDataSource = _splitDataSource.rightDataSource;
		
		    var leftActive = rightCheckedKeys.length > 0;
		    var rightActive = leftCheckedKeys.length > 0;
		
		    var cls = (0, _classnames2["default"])((_classNames = {}, _defineProperty(_classNames, className, !!className), _defineProperty(_classNames, prefixCls, true), _classNames));
		
		    return _react2["default"].createElement(
		      'div',
		      { className: cls },
		      _react2["default"].createElement(_list2["default"], { titleText: titles[0],
		        dataSource: leftDataSource,
		        filter: leftFilter,
		        style: listStyle,
		        checkedKeys: leftCheckedKeys,
		        handleFilter: this.handleLeftFilter,
		        handleClear: this.handleLeftClear,
		        handleSelect: this.handleLeftSelect,
		        handleSelectAll: this.handleLeftSelectAll,
		        render: render,
		        showSearch: showSearch,
		        searchPlaceholder: searchPlaceholder,
		        notFoundContent: notFoundContent,
		        body: body,
		        footer: footer,
		        prefixCls: prefixCls + '-list'
		      }),
		      _react2["default"].createElement(_operation2["default"], { rightActive: rightActive,
		        rightArrowText: operations[0],
		        moveToRight: this.moveToRight,
		        leftActive: leftActive,
		        leftArrowText: operations[1],
		        moveToLeft: this.moveToLeft,
		        className: prefixCls + '-operation'
		      }),
		      _react2["default"].createElement(_list2["default"], { titleText: titles[1],
		        dataSource: rightDataSource,
		        filter: rightFilter,
		        style: listStyle,
		        checkedKeys: rightCheckedKeys,
		        handleFilter: this.handleRightFilter,
		        handleClear: this.handleRightClear,
		        handleSelect: this.handleRightSelect,
		        handleSelectAll: this.handleRightSelectAll,
		        render: render,
		        showSearch: showSearch,
		        searchPlaceholder: searchPlaceholder,
		        notFoundContent: notFoundContent,
		        body: body,
		        footer: footer,
		        prefixCls: prefixCls + '-list'
		      })
		    );
		  };
		
		  return Transfer;
		}(_react2["default"].Component), _class.List = _list2["default"], _class.Operation = _operation2["default"], _class.Search = _search2["default"], _class.defaultProps = {
		  prefixCls: 'ant-transfer',
		  dataSource: [],
		  render: noop,
		  targetKeys: [],
		  onChange: noop,
		  titles: ['源列表', '目的列表'],
		  operations: [],
		  showSearch: false,
		  body: noop,
		  footer: noop
		}, _class.propTypes = {
		  prefixCls: _react.PropTypes.string,
		  dataSource: _react.PropTypes.array,
		  render: _react.PropTypes.func,
		  targetKeys: _react.PropTypes.array,
		  onChange: _react.PropTypes.func,
		  height: _react.PropTypes.number,
		  listStyle: _react.PropTypes.object,
		  className: _react.PropTypes.string,
		  titles: _react.PropTypes.array,
		  operations: _react.PropTypes.array,
		  showSearch: _react.PropTypes.bool,
		  searchPlaceholder: _react.PropTypes.string,
		  notFoundContent: _react.PropTypes.node,
		  body: _react.PropTypes.func,
		  footer: _react.PropTypes.func,
		  rowKey: _react.PropTypes.func
		}, _temp);
		exports["default"] = Transfer;
		module.exports = exports['default'];
	
	/***/ },
	/* 246 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp;
		
		exports.isRenderResultPlainObject = isRenderResultPlainObject;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _checkbox = __webpack_require__(20);
		
		var _checkbox2 = _interopRequireDefault(_checkbox);
		
		var _search = __webpack_require__(82);
		
		var _search2 = _interopRequireDefault(_search);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var _rcAnimate = __webpack_require__(7);
		
		var _rcAnimate2 = _interopRequireDefault(_rcAnimate);
		
		var _reactAddonsPureRenderMixin = __webpack_require__(14);
		
		var _reactAddonsPureRenderMixin2 = _interopRequireDefault(_reactAddonsPureRenderMixin);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		function noop() {}
		
		function isRenderResultPlainObject(result) {
		  return result && !_react2["default"].isValidElement(result) && Object.prototype.toString.call(result) === '[object Object]';
		}
		
		var TransferList = (_temp = _class = function (_React$Component) {
		  _inherits(TransferList, _React$Component);
		
		  function TransferList(props) {
		    _classCallCheck(this, TransferList);
		
		    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));
		
		    _this.handleSelect = function (selectedItem) {
		      var checkedKeys = _this.props.checkedKeys;
		
		      var result = checkedKeys.some(function (key) {
		        return key === selectedItem.key;
		      });
		      _this.props.handleSelect(selectedItem, !result);
		    };
		
		    _this.handleFilter = function (e) {
		      _this.props.handleFilter(e);
		    };
		
		    _this.handleClear = function () {
		      _this.props.handleClear();
		    };
		
		    _this.state = {
		      mounted: false
		    };
		    return _this;
		  }
		
		  TransferList.prototype.componentDidMount = function componentDidMount() {
		    var _this2 = this;
		
		    this.timer = setTimeout(function () {
		      _this2.setState({
		        mounted: true
		      });
		    }, 0);
		  };
		
		  TransferList.prototype.componentWillUnmount = function componentWillUnmount() {
		    clearTimeout(this.timer);
		  };
		
		  TransferList.prototype.shouldComponentUpdate = function shouldComponentUpdate() {
		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }
		
		    return _reactAddonsPureRenderMixin2["default"].shouldComponentUpdate.apply(this, args);
		  };
		
		  TransferList.prototype.getCheckStatus = function getCheckStatus(filteredDataSource) {
		    var checkedKeys = this.props.checkedKeys;
		
		    if (checkedKeys.length === 0) {
		      return 'none';
		    } else if (filteredDataSource.every(function (item) {
		      return checkedKeys.indexOf(item.key) >= 0;
		    })) {
		      return 'all';
		    }
		    return 'part';
		  };
		
		  TransferList.prototype.renderCheckbox = function renderCheckbox(_ref) {
		    var _classNames,
		        _this3 = this;
		
		    var prefixCls = _ref.prefixCls;
		    var filteredDataSource = _ref.filteredDataSource;
		    var checked = _ref.checked;
		    var checkPart = _ref.checkPart;
		    var disabled = _ref.disabled;
		    var checkable = _ref.checkable;
		
		    var checkAll = !checkPart && checked;
		
		    var checkboxCls = (0, _classnames2["default"])((_classNames = {}, _defineProperty(_classNames, prefixCls + '-checkbox', true), _defineProperty(_classNames, prefixCls + '-checkbox-indeterminate', checkPart), _defineProperty(_classNames, prefixCls + '-checkbox-checked', checkAll), _defineProperty(_classNames, prefixCls + '-checkbox-disabled', disabled), _classNames));
		
		    return _react2["default"].createElement(
		      'span',
		      {
		        ref: 'checkbox',
		        className: checkboxCls,
		        onClick: function onClick() {
		          return _this3.props.handleSelectAll(filteredDataSource, checkAll);
		        }
		      },
		      typeof checkable !== 'boolean' ? checkable : null
		    );
		  };
		
		  TransferList.prototype.matchFilter = function matchFilter(text, filterText) {
		    return text.indexOf(filterText) >= 0;
		  };
		
		  TransferList.prototype.render = function render() {
		    var _classNames2,
		        _this4 = this;
		
		    var _props = this.props;
		    var prefixCls = _props.prefixCls;
		    var dataSource = _props.dataSource;
		    var titleText = _props.titleText;
		    var filter = _props.filter;
		    var checkedKeys = _props.checkedKeys;
		    var body = _props.body;
		    var footer = _props.footer;
		    var showSearch = _props.showSearch;
		    var render = _props.render;
		    var style = _props.style;
		    var _props2 = this.props;
		    var searchPlaceholder = _props2.searchPlaceholder;
		    var notFoundContent = _props2.notFoundContent;
		
		    // Custom Layout
		
		    var footerDom = footer(_extends({}, this.props));
		    var bodyDom = body(_extends({}, this.props));
		
		    var listCls = (0, _classnames2["default"])((_classNames2 = {}, _defineProperty(_classNames2, prefixCls, true), _defineProperty(_classNames2, prefixCls + '-with-footer', !!footerDom), _classNames2));
		
		    var filteredDataSource = [];
		
		    var showItems = dataSource.map(function (item) {
		      var renderResult = render(item);
		      var renderedText = void 0;
		      var renderedEl = void 0;
		
		      if (isRenderResultPlainObject(renderResult)) {
		        renderedText = renderResult.value;
		        renderedEl = renderResult.label;
		      } else {
		        renderedText = renderResult;
		        renderedEl = renderResult;
		      }
		
		      if (filter && filter.trim() && !_this4.matchFilter(renderedText, filter)) {
		        return null;
		      }
		
		      filteredDataSource.push(item);
		
		      return _react2["default"].createElement(
		        'li',
		        { onClick: function onClick() {
		            return _this4.handleSelect(item);
		          }, key: item.key, title: renderedText },
		        _react2["default"].createElement(_checkbox2["default"], { checked: checkedKeys.some(function (key) {
		            return key === item.key;
		          }) }),
		        _react2["default"].createElement(
		          'span',
		          null,
		          renderedEl
		        )
		      );
		    }).filter(function (item) {
		      return !!item;
		    });
		
		    var unit = '条';
		    if (this.context.antLocale && this.context.antLocale.Transfer) {
		      unit = dataSource.length > 1 ? this.context.antLocale.Transfer.itemsUnit : this.context.antLocale.Transfer.itemUnit;
		      searchPlaceholder = searchPlaceholder || this.context.antLocale.Transfer.searchPlaceholder;
		      notFoundContent = notFoundContent || this.context.antLocale.Transfer.notFoundContent;
		    }
		
		    var checkStatus = this.getCheckStatus(filteredDataSource);
		
		    return _react2["default"].createElement(
		      'div',
		      { className: listCls, style: style },
		      _react2["default"].createElement(
		        'div',
		        { className: prefixCls + '-header' },
		        this.renderCheckbox({
		          prefixCls: 'ant-transfer',
		          checked: checkStatus === 'all',
		          checkPart: checkStatus === 'part',
		          checkable: _react2["default"].createElement('span', { className: 'ant-transfer-checkbox-inner' }),
		          filteredDataSource: filteredDataSource
		        }),
		        _react2["default"].createElement(
		          'span',
		          { className: prefixCls + '-header-selected' },
		          _react2["default"].createElement(
		            'span',
		            null,
		            (checkedKeys.length > 0 ? checkedKeys.length + '/' : '') + dataSource.length,
		            ' ',
		            unit
		          ),
		          _react2["default"].createElement(
		            'span',
		            { className: prefixCls + '-header-title' },
		            titleText
		          )
		        )
		      ),
		      bodyDom || _react2["default"].createElement(
		        'div',
		        { className: showSearch ? prefixCls + '-body ' + prefixCls + '-body-with-search' : prefixCls + '-body' },
		        showSearch ? _react2["default"].createElement(
		          'div',
		          { className: prefixCls + '-body-search-wrapper' },
		          _react2["default"].createElement(_search2["default"], { prefixCls: prefixCls + '-search',
		            onChange: this.handleFilter,
		            handleClear: this.handleClear,
		            placeholder: searchPlaceholder || '请输入搜索内容',
		            value: filter
		          })
		        ) : null,
		        _react2["default"].createElement(
		          _rcAnimate2["default"],
		          { component: 'ul',
		            transitionName: this.state.mounted ? prefixCls + '-highlight' : '',
		            transitionLeave: false
		          },
		          showItems.length > 0 ? showItems : _react2["default"].createElement(
		            'div',
		            { className: prefixCls + '-body-not-found' },
		            notFoundContent || '列表为空'
		          )
		        )
		      ),
		      footerDom ? _react2["default"].createElement(
		        'div',
		        { className: prefixCls + '-footer' },
		        footerDom
		      ) : null
		    );
		  };
		
		  return TransferList;
		}(_react2["default"].Component), _class.defaultProps = {
		  dataSource: [],
		  titleText: '',
		  showSearch: false,
		  handleClear: noop,
		  handleFilter: noop,
		  handleSelect: noop,
		  handleSelectAll: noop,
		  render: noop,
		  // advanced
		  body: noop,
		  footer: noop
		}, _class.propTypes = {
		  prefixCls: _react.PropTypes.string,
		  dataSource: _react.PropTypes.array,
		  showSearch: _react.PropTypes.bool,
		  searchPlaceholder: _react.PropTypes.string,
		  titleText: _react.PropTypes.string,
		  style: _react.PropTypes.object,
		  handleClear: _react.PropTypes.func,
		  handleFilter: _react.PropTypes.func,
		  handleSelect: _react.PropTypes.func,
		  handleSelectAll: _react.PropTypes.func,
		  render: _react.PropTypes.func,
		  body: _react.PropTypes.func,
		  footer: _react.PropTypes.func
		}, _class.contextTypes = {
		  antLocale: _react2["default"].PropTypes.object
		}, _temp);
		exports["default"] = TransferList;
	
	/***/ },
	/* 247 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _class, _temp;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _button = __webpack_require__(19);
		
		var _button2 = _interopRequireDefault(_button);
		
		var _icon = __webpack_require__(6);
		
		var _icon2 = _interopRequireDefault(_icon);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		function noop() {}
		
		var TransferOperation = (_temp = _class = function (_React$Component) {
		  _inherits(TransferOperation, _React$Component);
		
		  function TransferOperation() {
		    _classCallCheck(this, TransferOperation);
		
		    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
		  }
		
		  TransferOperation.prototype.render = function render() {
		    var _props = this.props;
		    var moveToLeft = _props.moveToLeft;
		    var moveToRight = _props.moveToRight;
		    var leftArrowText = _props.leftArrowText;
		    var rightArrowText = _props.rightArrowText;
		    var leftActive = _props.leftActive;
		    var rightActive = _props.rightActive;
		    var className = _props.className;
		
		
		    var moveToLeftButton = _react2["default"].createElement(
		      _button2["default"],
		      { type: 'primary', size: 'small', disabled: !leftActive, onClick: moveToLeft },
		      _react2["default"].createElement(
		        'span',
		        null,
		        _react2["default"].createElement(_icon2["default"], { type: 'left' }),
		        leftArrowText
		      )
		    );
		    var moveToRightButton = _react2["default"].createElement(
		      _button2["default"],
		      { type: 'primary', size: 'small', disabled: !rightActive, onClick: moveToRight },
		      _react2["default"].createElement(
		        'span',
		        null,
		        rightArrowText,
		        _react2["default"].createElement(_icon2["default"], { type: 'right' })
		      )
		    );
		    return _react2["default"].createElement(
		      'div',
		      { className: className },
		      moveToLeftButton,
		      moveToRightButton
		    );
		  };
		
		  return TransferOperation;
		}(_react2["default"].Component), _class.defaultProps = {
		  leftArrowText: '',
		  rightArrowText: '',
		  moveToLeft: noop,
		  moveToRight: noop
		}, _class.propTypes = {
		  className: _react.PropTypes.string,
		  leftArrowText: _react.PropTypes.string,
		  rightArrowText: _react.PropTypes.string,
		  moveToLeft: _react.PropTypes.func,
		  moveToRight: _react.PropTypes.func
		}, _temp);
		exports["default"] = TransferOperation;
		module.exports = exports['default'];
	
	/***/ },
	/* 248 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		__webpack_require__(3);
		
		__webpack_require__(457);
		
		__webpack_require__(21);
		
		__webpack_require__(25);
		
		__webpack_require__(15);
	
	/***/ },
	/* 249 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _rcTreeSelect = __webpack_require__(388);
		
		var _rcTreeSelect2 = _interopRequireDefault(_rcTreeSelect);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var TreeSelect = (_temp = _class = function (_React$Component) {
		  _inherits(TreeSelect, _React$Component);
		
		  function TreeSelect() {
		    _classCallCheck(this, TreeSelect);
		
		    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
		  }
		
		  TreeSelect.prototype.render = function render() {
		    var _classNames;
		
		    var props = this.props;
		    var _props = this.props;
		    var size = _props.size;
		    var className = _props.className;
		    var combobox = _props.combobox;
		    var notFoundContent = _props.notFoundContent;
		    var prefixCls = _props.prefixCls;
		
		
		    var cls = (0, _classnames2["default"])((_classNames = {}, _defineProperty(_classNames, prefixCls + '-lg', size === 'large'), _defineProperty(_classNames, prefixCls + '-sm', size === 'small'), _defineProperty(_classNames, className, !!className), _classNames));
		
		    var antLocale = this.context.antLocale;
		
		    if (antLocale && antLocale.Select) {
		      notFoundContent = notFoundContent || antLocale.Select.notFoundContent;
		    }
		
		    if (combobox) {
		      notFoundContent = null;
		    }
		
		    var checkable = props.treeCheckable;
		    if (checkable) {
		      checkable = _react2["default"].createElement('span', { className: prefixCls + '-tree-checkbox-inner' });
		    }
		
		    return _react2["default"].createElement(_rcTreeSelect2["default"], _extends({}, this.props, {
		      treeCheckable: checkable,
		      className: cls,
		      notFoundContent: notFoundContent
		    }));
		  };
		
		  return TreeSelect;
		}(_react2["default"].Component), _class.TreeNode = _rcTreeSelect.TreeNode, _class.SHOW_ALL = _rcTreeSelect.SHOW_ALL, _class.SHOW_PARENT = _rcTreeSelect.SHOW_PARENT, _class.SHOW_CHILD = _rcTreeSelect.SHOW_CHILD, _class.defaultProps = {
		  prefixCls: 'ant-select',
		  transitionName: 'slide-up',
		  choiceTransitionName: 'zoom',
		  showSearch: false,
		  dropdownClassName: 'ant-select-tree-dropdown'
		}, _class.contextTypes = {
		  antLocale: _react2["default"].PropTypes.object
		}, _temp);
		exports["default"] = TreeSelect;
		module.exports = exports['default'];
	
	/***/ },
	/* 250 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		__webpack_require__(3);
		
		__webpack_require__(458);
		
		__webpack_require__(28);
		
		__webpack_require__(21);
	
	/***/ },
	/* 251 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _rcTree = __webpack_require__(120);
		
		var _rcTree2 = _interopRequireDefault(_rcTree);
		
		var _openAnimation = __webpack_require__(56);
		
		var _openAnimation2 = _interopRequireDefault(_openAnimation);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var Tree = (_temp = _class = function (_React$Component) {
		  _inherits(Tree, _React$Component);
		
		  function Tree() {
		    _classCallCheck(this, Tree);
		
		    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
		  }
		
		  Tree.prototype.render = function render() {
		    var props = this.props;
		    var checkable = props.checkable;
		    if (checkable) {
		      checkable = _react2["default"].createElement('span', { className: props.prefixCls + '-checkbox-inner' });
		    }
		    return _react2["default"].createElement(
		      _rcTree2["default"],
		      _extends({}, props, { checkable: checkable }),
		      this.props.children
		    );
		  };
		
		  return Tree;
		}(_react2["default"].Component), _class.TreeNode = _rcTree2["default"].TreeNode, _class.defaultProps = {
		  prefixCls: 'ant-tree',
		  checkable: false,
		  showIcon: false,
		  openAnimation: _openAnimation2["default"]
		}, _temp);
		exports["default"] = Tree;
		module.exports = exports['default'];
	
	/***/ },
	/* 252 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		__webpack_require__(3);
		
		__webpack_require__(459);
		
		__webpack_require__(21);
	
	/***/ },
	/* 253 */
	/***/ function(module, exports) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = getFileItem;
		function getFileItem(file, fileList) {
		  var matchWay = !file.uid ? 'byName' : 'byUid';
		  var target = fileList.filter(function (item) {
		    if (matchWay === 'byName') {
		      return item.name === file.name;
		    }
		    return item.uid === file.uid;
		  })[0];
		  return target;
		}
		module.exports = exports['default'];
	
	/***/ },
	/* 254 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _class, _temp;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _rcUpload = __webpack_require__(398);
		
		var _rcUpload2 = _interopRequireDefault(_rcUpload);
		
		var _uploadList = __webpack_require__(256);
		
		var _uploadList2 = _interopRequireDefault(_uploadList);
		
		var _getFileItem = __webpack_require__(253);
		
		var _getFileItem2 = _interopRequireDefault(_getFileItem);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var prefixCls = 'ant-upload';
		
		function noop() {}
		
		function T() {
		  return true;
		}
		
		// Fix IE file.status problem
		// via coping a new Object
		function fileToObject(file) {
		  return {
		    lastModified: file.lastModified,
		    lastModifiedDate: file.lastModifiedDate,
		    name: file.filename || file.name,
		    size: file.size,
		    type: file.type,
		    uid: file.uid,
		    response: file.response,
		    error: file.error,
		    percent: 0,
		    originFileObj: file
		  };
		}
		
		/**
		 * 生成Progress percent: 0.1 -> 0.98
		 *   - for ie
		 */
		function genPercentAdd() {
		  var k = 0.1;
		  var i = 0.01;
		  var end = 0.98;
		  return function (s) {
		    var start = s;
		    if (start >= end) {
		      return start;
		    }
		
		    start += k;
		    k = k - i;
		    if (k < 0.001) {
		      k = 0.001;
		    }
		    return start * 100;
		  };
		}
		
		function UploadDragger(props) {
		  return _react2["default"].createElement(Upload, _extends({}, props, { type: 'drag', style: { height: props.height } }));
		}
		
		var Upload = (_temp = _class = function (_React$Component) {
		  _inherits(Upload, _React$Component);
		
		  function Upload(props) {
		    _classCallCheck(this, Upload);
		
		    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));
		
		    _this.onStart = function (file) {
		      if (_this.recentUploadStatus === false) return;
		
		      var targetItem = void 0;
		      var nextFileList = _this.state.fileList.concat();
		      if (file.length > 0) {
		        targetItem = file.map(function (f) {
		          var fileObject = fileToObject(f);
		          fileObject.status = 'uploading';
		          return fileObject;
		        });
		        nextFileList = nextFileList.concat(targetItem);
		      } else {
		        targetItem = fileToObject(file);
		        targetItem.status = 'uploading';
		        nextFileList.push(targetItem);
		      }
		      _this.onChange({
		        file: targetItem,
		        fileList: nextFileList
		      });
		      // fix ie progress
		      if (!window.FormData) {
		        _this.autoUpdateProgress(0, targetItem);
		      }
		    };
		
		    _this.onSuccess = function (response, file) {
		      _this.clearProgressTimer();
		      try {
		        if (typeof response === 'string') {
		          response = JSON.parse(response);
		        }
		      } catch (e) {/* do nothing */}
		      var fileList = _this.state.fileList;
		      var targetItem = (0, _getFileItem2["default"])(file, fileList);
		      // removed
		      if (!targetItem) {
		        return;
		      }
		      targetItem.status = 'done';
		      targetItem.response = response;
		      _this.onChange({
		        file: targetItem,
		        fileList: fileList
		      });
		    };
		
		    _this.onProgress = function (e, file) {
		      var fileList = _this.state.fileList;
		      var targetItem = (0, _getFileItem2["default"])(file, fileList);
		      // removed
		      if (!targetItem) {
		        return;
		      }
		      targetItem.percent = e.percent;
		      _this.onChange({
		        event: e,
		        file: targetItem,
		        fileList: _this.state.fileList
		      });
		    };
		
		    _this.onError = function (error, response, file) {
		      _this.clearProgressTimer();
		      var fileList = _this.state.fileList;
		      var targetItem = (0, _getFileItem2["default"])(file, fileList);
		      // removed
		      if (!targetItem) {
		        return;
		      }
		      targetItem.error = error;
		      targetItem.response = response;
		      targetItem.status = 'error';
		      _this.handleRemove(targetItem);
		    };
		
		    _this.beforeUpload = function (file) {
		      _this.recentUploadStatus = _this.props.beforeUpload(file);
		      return _this.recentUploadStatus;
		    };
		
		    _this.handleManualRemove = function (file) {
		      /*eslint-disable */
		      file.status = 'removed';
		      /*eslint-enable */
		      if ('onRemove' in _this.props) {
		        _this.props.onRemove(file);
		      } else {
		        _this.handleRemove(file);
		      }
		    };
		
		    _this.onChange = function (info) {
		      if (!('fileList' in _this.props)) {
		        _this.setState({ fileList: info.fileList });
		      }
		      _this.props.onChange(info);
		    };
		
		    _this.onFileDrop = function (e) {
		      _this.setState({
		        dragState: e.type
		      });
		    };
		
		    _this.state = {
		      fileList: _this.props.fileList || _this.props.defaultFileList || [],
		      dragState: 'drop'
		    };
		    return _this;
		  }
		
		  Upload.prototype.autoUpdateProgress = function autoUpdateProgress(percent, file) {
		    var _this2 = this;
		
		    var getPercent = genPercentAdd();
		    var curPercent = 0;
		    this.progressTimer = setInterval(function () {
		      curPercent = getPercent(curPercent);
		      _this2.onProgress({
		        percent: curPercent
		      }, file);
		    }, 200);
		  };
		
		  Upload.prototype.removeFile = function removeFile(file) {
		    var fileList = this.state.fileList;
		    var targetItem = (0, _getFileItem2["default"])(file, fileList);
		    var index = fileList.indexOf(targetItem);
		    if (index !== -1) {
		      fileList.splice(index, 1);
		      return fileList;
		    }
		    return null;
		  };
		
		  Upload.prototype.handleRemove = function handleRemove(file) {
		    var fileList = this.removeFile(file);
		    if (fileList) {
		      this.onChange({
		        file: file,
		        fileList: fileList
		      });
		    }
		  };
		
		  Upload.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
		    if ('fileList' in nextProps) {
		      this.setState({
		        fileList: nextProps.fileList || []
		      });
		    }
		  };
		
		  Upload.prototype.clearProgressTimer = function clearProgressTimer() {
		    clearInterval(this.progressTimer);
		  };
		
		  Upload.prototype.render = function render() {
		    var _classNames;
		
		    var type = this.props.type || 'select';
		    var props = _extends({}, this.props, {
		      onStart: this.onStart,
		      onError: this.onError,
		      onProgress: this.onProgress,
		      onSuccess: this.onSuccess,
		      beforeUpload: this.beforeUpload
		    });
		    var uploadList = void 0;
		    if (this.props.showUploadList) {
		      uploadList = _react2["default"].createElement(_uploadList2["default"], { listType: this.props.listType,
		        items: this.state.fileList,
		        onPreview: props.onPreview,
		        onRemove: this.handleManualRemove
		      });
		    }
		    if (type === 'drag') {
		      var dragUploadingClass = this.state.fileList.some(function (file) {
		        return file.status === 'uploading';
		      }) ? prefixCls + '-drag-uploading' : '';
		      var draggingClass = this.state.dragState === 'dragover' ? prefixCls + '-drag-hover' : '';
		      return _react2["default"].createElement(
		        'span',
		        { className: this.props.className },
		        _react2["default"].createElement(
		          'div',
		          { className: prefixCls + ' ' + prefixCls + '-drag ' + dragUploadingClass + ' ' + draggingClass,
		            onDrop: this.onFileDrop,
		            onDragOver: this.onFileDrop,
		            onDragLeave: this.onFileDrop
		          },
		          _react2["default"].createElement(
		            _rcUpload2["default"],
		            props,
		            _react2["default"].createElement(
		              'div',
		              { className: prefixCls + '-drag-container' },
		              this.props.children
		            )
		          )
		        ),
		        uploadList
		      );
		    }
		
		    var uploadButtonCls = (0, _classnames2["default"])((_classNames = {}, _defineProperty(_classNames, prefixCls, true), _defineProperty(_classNames, prefixCls + '-select', true), _defineProperty(_classNames, prefixCls + '-select-' + this.props.listType, true), _classNames));
		
		    var uploadButton = this.props.children ? _react2["default"].createElement(
		      'div',
		      { className: uploadButtonCls },
		      _react2["default"].createElement(_rcUpload2["default"], props)
		    ) : null;
		
		    if (this.props.listType === 'picture-card') {
		      return _react2["default"].createElement(
		        'span',
		        { className: this.props.className },
		        uploadList,
		        uploadButton
		      );
		    }
		
		    return _react2["default"].createElement(
		      'span',
		      { className: this.props.className },
		      uploadButton,
		      uploadList
		    );
		  };
		
		  return Upload;
		}(_react2["default"].Component), _class.Dragger = UploadDragger, _class.defaultProps = {
		  type: 'select',
		  // do not set
		  // name: '',
		  multiple: false,
		  action: '',
		  data: {},
		  accept: '',
		  onChange: noop,
		  beforeUpload: T,
		  showUploadList: true,
		  listType: 'text', // or pictrue
		  className: ''
		}, _temp);
		exports["default"] = Upload;
		module.exports = exports['default'];
	
	/***/ },
	/* 255 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		__webpack_require__(3);
		
		__webpack_require__(460);
		
		__webpack_require__(73);
	
	/***/ },
	/* 256 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _class, _temp2;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _rcAnimate = __webpack_require__(7);
		
		var _rcAnimate2 = _interopRequireDefault(_rcAnimate);
		
		var _icon = __webpack_require__(6);
		
		var _icon2 = _interopRequireDefault(_icon);
		
		var _progress = __webpack_require__(72);
		
		var _progress2 = _interopRequireDefault(_progress);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var prefixCls = 'ant-upload';
		
		
		// https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL
		var previewFile = function previewFile(file, callback) {
		  var reader = new FileReader();
		  reader.onloadend = function () {
		    return callback(reader.result);
		  };
		  reader.readAsDataURL(file);
		};
		
		var UploadList = (_temp2 = _class = function (_React$Component) {
		  _inherits(UploadList, _React$Component);
		
		  function UploadList() {
		    var _temp, _this, _ret;
		
		    _classCallCheck(this, UploadList);
		
		    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		      args[_key] = arguments[_key];
		    }
		
		    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleClose = function (file) {
		      _this.props.onRemove(file);
		    }, _this.handlePreview = function (file, e) {
		      if (_this.props.onPreview) {
		        e.preventDefault();
		        return _this.props.onPreview(file);
		      }
		    }, _temp), _possibleConstructorReturn(_this, _ret);
		  }
		
		  UploadList.prototype.componentDidUpdate = function componentDidUpdate() {
		    var _this2 = this;
		
		    if (this.props.listType !== 'picture' && this.props.listType !== 'picture-card') {
		      return;
		    }
		    this.props.items.forEach(function (file) {
		      if (typeof document === 'undefined' || typeof window === 'undefined' || !window.FileReader || !window.File || !(file.originFileObj instanceof File) || file.thumbUrl !== undefined) {
		        return;
		      }
		      /*eslint-disable */
		      file.thumbUrl = '';
		      /*eslint-enable */
		      previewFile(file.originFileObj, function (previewDataUrl) {
		        /*eslint-disable */
		        file.thumbUrl = previewDataUrl;
		        /*eslint-enable */
		        _this2.forceUpdate();
		      });
		    });
		  };
		
		  UploadList.prototype.render = function render() {
		    var _this3 = this,
		        _classNames2;
		
		    var list = this.props.items.map(function (file) {
		      var _classNames;
		
		      var progress = void 0;
		      var icon = _react2["default"].createElement(_icon2["default"], { type: 'paper-clip' });
		
		      if (_this3.props.listType === 'picture' || _this3.props.listType === 'picture-card') {
		        if (file.status === 'uploading' || !file.thumbUrl && !file.url) {
		          if (_this3.props.listType === 'picture-card') {
		            icon = _react2["default"].createElement(
		              'div',
		              { className: prefixCls + '-list-item-uploading-text' },
		              '文件上传中'
		            );
		          } else {
		            icon = _react2["default"].createElement(_icon2["default"], { className: prefixCls + '-list-item-thumbnail', type: 'picture' });
		          }
		        } else {
		          icon = _react2["default"].createElement(
		            'a',
		            {
		              className: prefixCls + '-list-item-thumbnail',
		              onClick: function onClick(e) {
		                return _this3.handlePreview(file, e);
		              },
		              href: file.url,
		              target: '_blank'
		            },
		            _react2["default"].createElement('img', { src: file.thumbUrl || file.url, alt: file.name })
		          );
		        }
		      }
		
		      if (file.status === 'uploading') {
		        progress = _react2["default"].createElement(
		          'div',
		          { className: prefixCls + '-list-item-progress' },
		          _react2["default"].createElement(_progress2["default"], _extends({ type: 'line' }, _this3.props.progressAttr, { percent: file.percent }))
		        );
		      }
		      var infoUploadingClass = (0, _classnames2["default"])((_classNames = {}, _defineProperty(_classNames, prefixCls + '-list-item', true), _defineProperty(_classNames, prefixCls + '-list-item-' + file.status, true), _classNames));
		      return _react2["default"].createElement(
		        'div',
		        { className: infoUploadingClass, key: file.uid },
		        _react2["default"].createElement(
		          'div',
		          { className: prefixCls + '-list-item-info' },
		          icon,
		          file.url ? _react2["default"].createElement(
		            'a',
		            {
		              href: file.url,
		              target: '_blank',
		              className: prefixCls + '-list-item-name',
		              onClick: function onClick(e) {
		                return _this3.handlePreview(file, e);
		              }
		            },
		            file.name
		          ) : _react2["default"].createElement(
		            'span',
		            {
		              className: prefixCls + '-list-item-name',
		              onClick: function onClick(e) {
		                return _this3.handlePreview(file, e);
		              }
		            },
		            file.name
		          ),
		          _this3.props.listType === 'picture-card' && file.status !== 'uploading' ? _react2["default"].createElement(
		            'span',
		            null,
		            _react2["default"].createElement(
		              'a',
		              {
		                href: file.url,
		                target: '_blank',
		                style: { pointerEvents: file.url ? '' : 'none' },
		                onClick: function onClick(e) {
		                  return _this3.handlePreview(file, e);
		                }
		              },
		              _react2["default"].createElement(_icon2["default"], { type: 'eye-o' })
		            ),
		            _react2["default"].createElement(_icon2["default"], { type: 'delete', onClick: function onClick() {
		                return _this3.handleClose(file);
		              } })
		          ) : _react2["default"].createElement(_icon2["default"], { type: 'cross', onClick: function onClick() {
		              return _this3.handleClose(file);
		            } })
		        ),
		        progress
		      );
		    });
		    var listClassNames = (0, _classnames2["default"])((_classNames2 = {}, _defineProperty(_classNames2, prefixCls + '-list', true), _defineProperty(_classNames2, prefixCls + '-list-' + this.props.listType, true), _classNames2));
		    return _react2["default"].createElement(
		      'div',
		      { className: listClassNames },
		      _react2["default"].createElement(
		        _rcAnimate2["default"],
		        { transitionName: prefixCls + '-margin-top' },
		        list
		      )
		    );
		  };
		
		  return UploadList;
		}(_react2["default"].Component), _class.defaultProps = {
		  listType: 'text', // or picture
		  items: [],
		  progressAttr: {
		    strokeWidth: 3,
		    showInfo: false
		  }
		}, _temp2);
		exports["default"] = UploadList;
		module.exports = exports['default'];
	
	/***/ },
	/* 257 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = undefined;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _warning = __webpack_require__(18);
		
		var _warning2 = _interopRequireDefault(_warning);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var Validation = function (_React$Component) {
		  _inherits(Validation, _React$Component);
		
		  function Validation() {
		    _classCallCheck(this, Validation);
		
		    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
		  }
		
		  Validation.prototype.componentDidMount = function componentDidMount() {
		    (0, _warning2["default"])(false, '`Validation` is removed, please use `Form` which has supported validation after antd@0.12.0,' + ' or you can just import Validation from \'rc-form-validation\' for compatibility');
		  };
		
		  Validation.prototype.render = function render() {
		    return null;
		  };
		
		  return Validation;
		}(_react2["default"].Component);
		
		exports["default"] = Validation;
		
		
		Validation.Validator = function () {};
		Validation.FieldMixin = {
		  setField: function setField() {}
		};
		module.exports = exports['default'];
	
	/***/ },
	/* 258 */
	202,
	/* 259 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		/* eslint no-console:0 */
		// this file is not used if use https://github.com/ant-design/babel-plugin-antd
		
		function camelCase(name) {
		  return name.charAt(0).toUpperCase() + name.slice(1).replace(/-(\w)/g, function (m, n) {
		    return n.toUpperCase();
		  });
		}
		
		var req = __webpack_require__(130);
		
		req.keys().forEach(function (mod) {
		  var v = req(mod);
		  var match = mod.match(/^\.\/([^_][\w-]+)\/index\.jsx?$/);
		  if (match && match[1]) {
		    if (match[1] === 'message' || match[1] === 'notification') {
		      // message & notification should not be capitalized
		      exports[match[1]] = v;
		    } else {
		      exports[camelCase(match[1])] = v;
		    }
		  }
		});
		
		if (true) {
		  if (typeof console !== 'undefined' && console.warn) {
		    console.warn('You are using prebuilt antd,\nplease use https://github.com/ant-design/babel-plugin-antd to reduce app bundle size.');
		  }
		}
	
	/***/ },
	/* 260 */
	/***/ function(module, exports) {
	
		var canUseDOM = !!(
		  typeof window !== 'undefined' &&
		  window.document &&
		  window.document.createElement
		);
		
		module.exports = canUseDOM;
	
	/***/ },
	/* 261 */
	/***/ function(module, exports) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		var EVENT_NAME_MAP = {
		  transitionend: {
		    transition: 'transitionend',
		    WebkitTransition: 'webkitTransitionEnd',
		    MozTransition: 'mozTransitionEnd',
		    OTransition: 'oTransitionEnd',
		    msTransition: 'MSTransitionEnd'
		  },
		
		  animationend: {
		    animation: 'animationend',
		    WebkitAnimation: 'webkitAnimationEnd',
		    MozAnimation: 'mozAnimationEnd',
		    OAnimation: 'oAnimationEnd',
		    msAnimation: 'MSAnimationEnd'
		  }
		};
		
		var endEvents = [];
		
		function detectEvents() {
		  var testEl = document.createElement('div');
		  var style = testEl.style;
		
		  if (!('AnimationEvent' in window)) {
		    delete EVENT_NAME_MAP.animationend.animation;
		  }
		
		  if (!('TransitionEvent' in window)) {
		    delete EVENT_NAME_MAP.transitionend.transition;
		  }
		
		  for (var baseEventName in EVENT_NAME_MAP) {
		    if (EVENT_NAME_MAP.hasOwnProperty(baseEventName)) {
		      var baseEvents = EVENT_NAME_MAP[baseEventName];
		      for (var styleName in baseEvents) {
		        if (styleName in style) {
		          endEvents.push(baseEvents[styleName]);
		          break;
		        }
		      }
		    }
		  }
		}
		
		if (typeof window !== 'undefined' && typeof document !== 'undefined') {
		  detectEvents();
		}
		
		function addEventListener(node, eventName, eventListener) {
		  node.addEventListener(eventName, eventListener, false);
		}
		
		function removeEventListener(node, eventName, eventListener) {
		  node.removeEventListener(eventName, eventListener, false);
		}
		
		var TransitionEvents = {
		  addEndEventListener: function addEndEventListener(node, eventListener) {
		    if (endEvents.length === 0) {
		      window.setTimeout(eventListener, 0);
		      return;
		    }
		    endEvents.forEach(function (endEvent) {
		      addEventListener(node, endEvent, eventListener);
		    });
		  },
		
		
		  endEvents: endEvents,
		
		  removeEndEventListener: function removeEndEventListener(node, eventListener) {
		    if (endEvents.length === 0) {
		      return;
		    }
		    endEvents.forEach(function (endEvent) {
		      removeEventListener(node, endEvent, eventListener);
		    });
		  }
		};
		
		exports["default"] = TransitionEvents;
		module.exports = exports['default'];
	
	/***/ },
	/* 262 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		var _utils = __webpack_require__(22);
		
		var _utils2 = _interopRequireDefault(_utils);
		
		function adjustForViewport(elFuturePos, elRegion, visibleRect, overflow) {
		  var pos = _utils2['default'].clone(elFuturePos);
		  var size = {
		    width: elRegion.width,
		    height: elRegion.height
		  };
		
		  if (overflow.adjustX && pos.left < visibleRect.left) {
		    pos.left = visibleRect.left;
		  }
		
		  // Left edge inside and right edge outside viewport, try to resize it.
		  if (overflow.resizeWidth && pos.left >= visibleRect.left && pos.left + size.width > visibleRect.right) {
		    size.width -= pos.left + size.width - visibleRect.right;
		  }
		
		  // Right edge outside viewport, try to move it.
		  if (overflow.adjustX && pos.left + size.width > visibleRect.right) {
		    // 保证左边界和可视区域左边界对齐
		    pos.left = Math.max(visibleRect.right - size.width, visibleRect.left);
		  }
		
		  // Top edge outside viewport, try to move it.
		  if (overflow.adjustY && pos.top < visibleRect.top) {
		    pos.top = visibleRect.top;
		  }
		
		  // Top edge inside and bottom edge outside viewport, try to resize it.
		  if (overflow.resizeHeight && pos.top >= visibleRect.top && pos.top + size.height > visibleRect.bottom) {
		    size.height -= pos.top + size.height - visibleRect.bottom;
		  }
		
		  // Bottom edge outside viewport, try to move it.
		  if (overflow.adjustY && pos.top + size.height > visibleRect.bottom) {
		    // 保证上边界和可视区域上边界对齐
		    pos.top = Math.max(visibleRect.bottom - size.height, visibleRect.top);
		  }
		
		  return _utils2['default'].mix(pos, size);
		}
		
		exports['default'] = adjustForViewport;
		module.exports = exports['default'];
	
	/***/ },
	/* 263 */
	/***/ function(module, exports) {
	
		/**
		 * 获取 node 上的 align 对齐点 相对于页面的坐标
		 */
		
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		function getAlignOffset(region, align) {
		  var V = align.charAt(0);
		  var H = align.charAt(1);
		  var w = region.width;
		  var h = region.height;
		  var x = undefined;
		  var y = undefined;
		
		  x = region.left;
		  y = region.top;
		
		  if (V === 'c') {
		    y += h / 2;
		  } else if (V === 'b') {
		    y += h;
		  }
		
		  if (H === 'c') {
		    x += w / 2;
		  } else if (H === 'r') {
		    x += w;
		  }
		
		  return {
		    left: x,
		    top: y
		  };
		}
		
		exports['default'] = getAlignOffset;
		module.exports = exports['default'];
	
	/***/ },
	/* 264 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		var _getAlignOffset = __webpack_require__(263);
		
		var _getAlignOffset2 = _interopRequireDefault(_getAlignOffset);
		
		function getElFuturePos(elRegion, refNodeRegion, points, offset, targetOffset) {
		  var xy = undefined;
		  var diff = undefined;
		  var p1 = undefined;
		  var p2 = undefined;
		
		  xy = {
		    left: elRegion.left,
		    top: elRegion.top
		  };
		
		  p1 = (0, _getAlignOffset2['default'])(refNodeRegion, points[1]);
		  p2 = (0, _getAlignOffset2['default'])(elRegion, points[0]);
		
		  diff = [p2.left - p1.left, p2.top - p1.top];
		
		  return {
		    left: xy.left - diff[0] + offset[0] - targetOffset[0],
		    top: xy.top - diff[1] + offset[1] - targetOffset[1]
		  };
		}
		
		exports['default'] = getElFuturePos;
		module.exports = exports['default'];
	
	/***/ },
	/* 265 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		var _utils = __webpack_require__(22);
		
		var _utils2 = _interopRequireDefault(_utils);
		
		function getRegion(node) {
		  var offset = undefined;
		  var w = undefined;
		  var h = undefined;
		  if (!_utils2['default'].isWindow(node) && node.nodeType !== 9) {
		    offset = _utils2['default'].offset(node);
		    w = _utils2['default'].outerWidth(node);
		    h = _utils2['default'].outerHeight(node);
		  } else {
		    var win = _utils2['default'].getWindow(node);
		    offset = {
		      left: _utils2['default'].getWindowScrollLeft(win),
		      top: _utils2['default'].getWindowScrollTop(win)
		    };
		    w = _utils2['default'].viewportWidth(win);
		    h = _utils2['default'].viewportHeight(win);
		  }
		  offset.width = w;
		  offset.height = h;
		  return offset;
		}
		
		exports['default'] = getRegion;
		module.exports = exports['default'];
	
	/***/ },
	/* 266 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		var _utils = __webpack_require__(22);
		
		var _utils2 = _interopRequireDefault(_utils);
		
		var _getOffsetParent = __webpack_require__(85);
		
		var _getOffsetParent2 = _interopRequireDefault(_getOffsetParent);
		
		/**
		 * 获得元素的显示部分的区域
		 */
		function getVisibleRectForElement(element) {
		  var visibleRect = {
		    left: 0,
		    right: Infinity,
		    top: 0,
		    bottom: Infinity
		  };
		  var el = (0, _getOffsetParent2['default'])(element);
		  var scrollX = undefined;
		  var scrollY = undefined;
		  var winSize = undefined;
		  var doc = element.ownerDocument;
		  var win = doc.defaultView || doc.parentWindow;
		  var body = doc.body;
		  var documentElement = doc.documentElement;
		
		  // Determine the size of the visible rect by climbing the dom accounting for
		  // all scrollable containers.
		  while (el) {
		    // clientWidth is zero for inline block elements in ie.
		    if ((navigator.userAgent.indexOf('MSIE') === -1 || el.clientWidth !== 0) &&
		    // body may have overflow set on it, yet we still get the entire
		    // viewport. In some browsers, el.offsetParent may be
		    // document.documentElement, so check for that too.
		    el !== body && el !== documentElement && _utils2['default'].css(el, 'overflow') !== 'visible') {
		      var pos = _utils2['default'].offset(el);
		      // add border
		      pos.left += el.clientLeft;
		      pos.top += el.clientTop;
		      visibleRect.top = Math.max(visibleRect.top, pos.top);
		      visibleRect.right = Math.min(visibleRect.right,
		      // consider area without scrollBar
		      pos.left + el.clientWidth);
		      visibleRect.bottom = Math.min(visibleRect.bottom, pos.top + el.clientHeight);
		      visibleRect.left = Math.max(visibleRect.left, pos.left);
		    } else if (el === body || el === documentElement) {
		      break;
		    }
		    el = (0, _getOffsetParent2['default'])(el);
		  }
		
		  // Clip by window's viewport.
		  scrollX = _utils2['default'].getWindowScrollLeft(win);
		  scrollY = _utils2['default'].getWindowScrollTop(win);
		  visibleRect.left = Math.max(visibleRect.left, scrollX);
		  visibleRect.top = Math.max(visibleRect.top, scrollY);
		  winSize = {
		    width: _utils2['default'].viewportWidth(win),
		    height: _utils2['default'].viewportHeight(win)
		  };
		  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
		  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
		  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null;
		}
		
		exports['default'] = getVisibleRectForElement;
		module.exports = exports['default'];
	
	/***/ },
	/* 267 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * align dom node flexibly
		 * @author yiminghe@gmail.com
		 */
		
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		var _utils = __webpack_require__(22);
		
		var _utils2 = _interopRequireDefault(_utils);
		
		var _getOffsetParent = __webpack_require__(85);
		
		var _getOffsetParent2 = _interopRequireDefault(_getOffsetParent);
		
		var _getVisibleRectForElement = __webpack_require__(266);
		
		var _getVisibleRectForElement2 = _interopRequireDefault(_getVisibleRectForElement);
		
		var _adjustForViewport = __webpack_require__(262);
		
		var _adjustForViewport2 = _interopRequireDefault(_adjustForViewport);
		
		var _getRegion = __webpack_require__(265);
		
		var _getRegion2 = _interopRequireDefault(_getRegion);
		
		var _getElFuturePos = __webpack_require__(264);
		
		var _getElFuturePos2 = _interopRequireDefault(_getElFuturePos);
		
		// http://yiminghe.iteye.com/blog/1124720
		
		function isFailX(elFuturePos, elRegion, visibleRect) {
		  return elFuturePos.left < visibleRect.left || elFuturePos.left + elRegion.width > visibleRect.right;
		}
		
		function isFailY(elFuturePos, elRegion, visibleRect) {
		  return elFuturePos.top < visibleRect.top || elFuturePos.top + elRegion.height > visibleRect.bottom;
		}
		
		function isCompleteFailX(elFuturePos, elRegion, visibleRect) {
		  return elFuturePos.left > visibleRect.right || elFuturePos.left + elRegion.width < visibleRect.left;
		}
		
		function isCompleteFailY(elFuturePos, elRegion, visibleRect) {
		  return elFuturePos.top > visibleRect.bottom || elFuturePos.top + elRegion.height < visibleRect.top;
		}
		
		function flip(points, reg, map) {
		  var ret = [];
		  _utils2['default'].each(points, function (p) {
		    ret.push(p.replace(reg, function (m) {
		      return map[m];
		    }));
		  });
		  return ret;
		}
		
		function flipOffset(offset, index) {
		  offset[index] = -offset[index];
		  return offset;
		}
		
		function convertOffset(str, offsetLen) {
		  var n = undefined;
		  if (/%$/.test(str)) {
		    n = parseInt(str.substring(0, str.length - 1), 10) / 100 * offsetLen;
		  } else {
		    n = parseInt(str, 10);
		  }
		  return n || 0;
		}
		
		function normalizeOffset(offset, el) {
		  offset[0] = convertOffset(offset[0], el.width);
		  offset[1] = convertOffset(offset[1], el.height);
		}
		
		function domAlign(el, refNode, align) {
		  var points = align.points;
		  var offset = align.offset || [0, 0];
		  var targetOffset = align.targetOffset || [0, 0];
		  var overflow = align.overflow;
		  var target = align.target || refNode;
		  var source = align.source || el;
		  offset = [].concat(offset);
		  targetOffset = [].concat(targetOffset);
		  overflow = overflow || {};
		  var newOverflowCfg = {};
		
		  var fail = 0;
		  // 当前节点可以被放置的显示区域
		  var visibleRect = (0, _getVisibleRectForElement2['default'])(source);
		  // 当前节点所占的区域, left/top/width/height
		  var elRegion = (0, _getRegion2['default'])(source);
		  // 参照节点所占的区域, left/top/width/height
		  var refNodeRegion = (0, _getRegion2['default'])(target);
		  // 将 offset 转换成数值，支持百分比
		  normalizeOffset(offset, elRegion);
		  normalizeOffset(targetOffset, refNodeRegion);
		  // 当前节点将要被放置的位置
		  var elFuturePos = (0, _getElFuturePos2['default'])(elRegion, refNodeRegion, points, offset, targetOffset);
		  // 当前节点将要所处的区域
		  var newElRegion = _utils2['default'].merge(elRegion, elFuturePos);
		
		  // 如果可视区域不能完全放置当前节点时允许调整
		  if (visibleRect && (overflow.adjustX || overflow.adjustY)) {
		    if (overflow.adjustX) {
		      // 如果横向不能放下
		      if (isFailX(elFuturePos, elRegion, visibleRect)) {
		        // 对齐位置反下
		        var newPoints = flip(points, /[lr]/ig, {
		          l: 'r',
		          r: 'l'
		        });
		        // 偏移量也反下
		        var newOffset = flipOffset(offset, 0);
		        var newTargetOffset = flipOffset(targetOffset, 0);
		        var newElFuturePos = (0, _getElFuturePos2['default'])(elRegion, refNodeRegion, newPoints, newOffset, newTargetOffset);
		        if (!isCompleteFailX(newElFuturePos, elRegion, visibleRect)) {
		          fail = 1;
		          points = newPoints;
		          offset = newOffset;
		          targetOffset = newTargetOffset;
		        }
		      }
		    }
		
		    if (overflow.adjustY) {
		      // 如果纵向不能放下
		      if (isFailY(elFuturePos, elRegion, visibleRect)) {
		        // 对齐位置反下
		        var newPoints = flip(points, /[tb]/ig, {
		          t: 'b',
		          b: 't'
		        });
		        // 偏移量也反下
		        var newOffset = flipOffset(offset, 1);
		        var newTargetOffset = flipOffset(targetOffset, 1);
		        var newElFuturePos = (0, _getElFuturePos2['default'])(elRegion, refNodeRegion, newPoints, newOffset, newTargetOffset);
		        if (!isCompleteFailY(newElFuturePos, elRegion, visibleRect)) {
		          fail = 1;
		          points = newPoints;
		          offset = newOffset;
		          targetOffset = newTargetOffset;
		        }
		      }
		    }
		
		    // 如果失败，重新计算当前节点将要被放置的位置
		    if (fail) {
		      elFuturePos = (0, _getElFuturePos2['default'])(elRegion, refNodeRegion, points, offset, targetOffset);
		      _utils2['default'].mix(newElRegion, elFuturePos);
		    }
		
		    // 检查反下后的位置是否可以放下了
		    // 如果仍然放不下只有指定了可以调整当前方向才调整
		    newOverflowCfg.adjustX = overflow.adjustX && isFailX(elFuturePos, elRegion, visibleRect);
		
		    newOverflowCfg.adjustY = overflow.adjustY && isFailY(elFuturePos, elRegion, visibleRect);
		
		    // 确实要调整，甚至可能会调整高度宽度
		    if (newOverflowCfg.adjustX || newOverflowCfg.adjustY) {
		      newElRegion = (0, _adjustForViewport2['default'])(elFuturePos, elRegion, visibleRect, newOverflowCfg);
		    }
		  }
		
		  // need judge to in case set fixed with in css on height auto element
		  if (newElRegion.width !== elRegion.width) {
		    _utils2['default'].css(source, 'width', source.width() + newElRegion.width - elRegion.width);
		  }
		
		  if (newElRegion.height !== elRegion.height) {
		    _utils2['default'].css(source, 'height', source.height() + newElRegion.height - elRegion.height);
		  }
		
		  // https://github.com/kissyteam/kissy/issues/190
		  // http://localhost:8888/kissy/src/overlay/demo/other/relative_align/align.html
		  // 相对于屏幕位置没变，而 left/top 变了
		  // 例如 <div 'relative'><el absolute></div>
		  _utils2['default'].offset(source, {
		    left: newElRegion.left,
		    top: newElRegion.top
		  }, {
		    useCssRight: align.useCssRight,
		    useCssBottom: align.useCssBottom
		  });
		
		  return {
		    points: points,
		    offset: offset,
		    targetOffset: targetOffset,
		    overflow: newOverflowCfg
		  };
		}
		
		domAlign.__getOffsetParent = _getOffsetParent2['default'];
		
		domAlign.__getVisibleRectForElement = _getVisibleRectForElement2['default'];
		
		exports['default'] = domAlign;
		
		/**
		 *  2012-04-26 yiminghe@gmail.com
		 *   - 优化智能对齐算法
		 *   - 慎用 resizeXX
		 *
		 *  2011-07-13 yiminghe@gmail.com note:
		 *   - 增加智能对齐，以及大小调整选项
		 **/
		module.exports = exports['default'];
	
	/***/ },
	/* 268 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var util = __webpack_require__(269);
		
		function scrollIntoView(elem, container, config) {
		  config = config || {};
		  // document 归一化到 window
		  if (container.nodeType === 9) {
		    container = util.getWindow(container);
		  }
		
		  var allowHorizontalScroll = config.allowHorizontalScroll;
		  var onlyScrollIfNeeded = config.onlyScrollIfNeeded;
		  var alignWithTop = config.alignWithTop;
		  var alignWithLeft = config.alignWithLeft;
		  var offsetTop = config.offsetTop || 0;
		  var offsetLeft = config.offsetLeft || 0;
		  var offsetBottom = config.offsetBottom || 0;
		  var offsetRight = config.offsetRight || 0;
		
		  allowHorizontalScroll = allowHorizontalScroll === undefined ? true : allowHorizontalScroll;
		
		  var isWin = util.isWindow(container);
		  var elemOffset = util.offset(elem);
		  var eh = util.outerHeight(elem);
		  var ew = util.outerWidth(elem);
		  var containerOffset = undefined;
		  var ch = undefined;
		  var cw = undefined;
		  var containerScroll = undefined;
		  var diffTop = undefined;
		  var diffBottom = undefined;
		  var win = undefined;
		  var winScroll = undefined;
		  var ww = undefined;
		  var wh = undefined;
		
		  if (isWin) {
		    win = container;
		    wh = util.height(win);
		    ww = util.width(win);
		    winScroll = {
		      left: util.scrollLeft(win),
		      top: util.scrollTop(win)
		    };
		    // elem 相对 container 可视视窗的距离
		    diffTop = {
		      left: elemOffset.left - winScroll.left - offsetLeft,
		      top: elemOffset.top - winScroll.top - offsetTop
		    };
		    diffBottom = {
		      left: elemOffset.left + ew - (winScroll.left + ww) + offsetRight,
		      top: elemOffset.top + eh - (winScroll.top + wh) + offsetBottom
		    };
		    containerScroll = winScroll;
		  } else {
		    containerOffset = util.offset(container);
		    ch = container.clientHeight;
		    cw = container.clientWidth;
		    containerScroll = {
		      left: container.scrollLeft,
		      top: container.scrollTop
		    };
		    // elem 相对 container 可视视窗的距离
		    // 注意边框, offset 是边框到根节点
		    diffTop = {
		      left: elemOffset.left - (containerOffset.left + (parseFloat(util.css(container, 'borderLeftWidth')) || 0)) - offsetLeft,
		      top: elemOffset.top - (containerOffset.top + (parseFloat(util.css(container, 'borderTopWidth')) || 0)) - offsetTop
		    };
		    diffBottom = {
		      left: elemOffset.left + ew - (containerOffset.left + cw + (parseFloat(util.css(container, 'borderRightWidth')) || 0)) + offsetRight,
		      top: elemOffset.top + eh - (containerOffset.top + ch + (parseFloat(util.css(container, 'borderBottomWidth')) || 0)) + offsetBottom
		    };
		  }
		
		  if (diffTop.top < 0 || diffBottom.top > 0) {
		    // 强制向上
		    if (alignWithTop === true) {
		      util.scrollTop(container, containerScroll.top + diffTop.top);
		    } else if (alignWithTop === false) {
		      util.scrollTop(container, containerScroll.top + diffBottom.top);
		    } else {
		      // 自动调整
		      if (diffTop.top < 0) {
		        util.scrollTop(container, containerScroll.top + diffTop.top);
		      } else {
		        util.scrollTop(container, containerScroll.top + diffBottom.top);
		      }
		    }
		  } else {
		    if (!onlyScrollIfNeeded) {
		      alignWithTop = alignWithTop === undefined ? true : !!alignWithTop;
		      if (alignWithTop) {
		        util.scrollTop(container, containerScroll.top + diffTop.top);
		      } else {
		        util.scrollTop(container, containerScroll.top + diffBottom.top);
		      }
		    }
		  }
		
		  if (allowHorizontalScroll) {
		    if (diffTop.left < 0 || diffBottom.left > 0) {
		      // 强制向上
		      if (alignWithLeft === true) {
		        util.scrollLeft(container, containerScroll.left + diffTop.left);
		      } else if (alignWithLeft === false) {
		        util.scrollLeft(container, containerScroll.left + diffBottom.left);
		      } else {
		        // 自动调整
		        if (diffTop.left < 0) {
		          util.scrollLeft(container, containerScroll.left + diffTop.left);
		        } else {
		          util.scrollLeft(container, containerScroll.left + diffBottom.left);
		        }
		      }
		    } else {
		      if (!onlyScrollIfNeeded) {
		        alignWithLeft = alignWithLeft === undefined ? true : !!alignWithLeft;
		        if (alignWithLeft) {
		          util.scrollLeft(container, containerScroll.left + diffTop.left);
		        } else {
		          util.scrollLeft(container, containerScroll.left + diffBottom.left);
		        }
		      }
		    }
		  }
		}
		
		module.exports = scrollIntoView;
	
	/***/ },
	/* 269 */
	/***/ function(module, exports) {
	
		'use strict';
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
		
		var RE_NUM = /[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source;
		
		function getClientPosition(elem) {
		  var box = undefined;
		  var x = undefined;
		  var y = undefined;
		  var doc = elem.ownerDocument;
		  var body = doc.body;
		  var docElem = doc && doc.documentElement;
		  // 根据 GBS 最新数据，A-Grade Browsers 都已支持 getBoundingClientRect 方法，不用再考虑传统的实现方式
		  box = elem.getBoundingClientRect();
		
		  // 注：jQuery 还考虑减去 docElem.clientLeft/clientTop
		  // 但测试发现，这样反而会导致当 html 和 body 有边距/边框样式时，获取的值不正确
		  // 此外，ie6 会忽略 html 的 margin 值，幸运地是没有谁会去设置 html 的 margin
		
		  x = box.left;
		  y = box.top;
		
		  // In IE, most of the time, 2 extra pixels are added to the top and left
		  // due to the implicit 2-pixel inset border.  In IE6/7 quirks mode and
		  // IE6 standards mode, this border can be overridden by setting the
		  // document element's border to zero -- thus, we cannot rely on the
		  // offset always being 2 pixels.
		
		  // In quirks mode, the offset can be determined by querying the body's
		  // clientLeft/clientTop, but in standards mode, it is found by querying
		  // the document element's clientLeft/clientTop.  Since we already called
		  // getClientBoundingRect we have already forced a reflow, so it is not
		  // too expensive just to query them all.
		
		  // ie 下应该减去窗口的边框吧，毕竟默认 absolute 都是相对窗口定位的
		  // 窗口边框标准是设 documentElement ,quirks 时设置 body
		  // 最好禁止在 body 和 html 上边框 ，但 ie < 9 html 默认有 2px ，减去
		  // 但是非 ie 不可能设置窗口边框，body html 也不是窗口 ,ie 可以通过 html,body 设置
		  // 标准 ie 下 docElem.clientTop 就是 border-top
		  // ie7 html 即窗口边框改变不了。永远为 2
		  // 但标准 firefox/chrome/ie9 下 docElem.clientTop 是窗口边框，即使设了 border-top 也为 0
		
		  x -= docElem.clientLeft || body.clientLeft || 0;
		  y -= docElem.clientTop || body.clientTop || 0;
		
		  return {
		    left: x,
		    top: y
		  };
		}
		
		function getScroll(w, top) {
		  var ret = w['page' + (top ? 'Y' : 'X') + 'Offset'];
		  var method = 'scroll' + (top ? 'Top' : 'Left');
		  if (typeof ret !== 'number') {
		    var d = w.document;
		    // ie6,7,8 standard mode
		    ret = d.documentElement[method];
		    if (typeof ret !== 'number') {
		      // quirks mode
		      ret = d.body[method];
		    }
		  }
		  return ret;
		}
		
		function getScrollLeft(w) {
		  return getScroll(w);
		}
		
		function getScrollTop(w) {
		  return getScroll(w, true);
		}
		
		function getOffset(el) {
		  var pos = getClientPosition(el);
		  var doc = el.ownerDocument;
		  var w = doc.defaultView || doc.parentWindow;
		  pos.left += getScrollLeft(w);
		  pos.top += getScrollTop(w);
		  return pos;
		}
		function _getComputedStyle(elem, name, computedStyle_) {
		  var val = '';
		  var d = elem.ownerDocument;
		  var computedStyle = computedStyle_ || d.defaultView.getComputedStyle(elem, null);
		
		  // https://github.com/kissyteam/kissy/issues/61
		  if (computedStyle) {
		    val = computedStyle.getPropertyValue(name) || computedStyle[name];
		  }
		
		  return val;
		}
		
		var _RE_NUM_NO_PX = new RegExp('^(' + RE_NUM + ')(?!px)[a-z%]+$', 'i');
		var RE_POS = /^(top|right|bottom|left)$/;
		var CURRENT_STYLE = 'currentStyle';
		var RUNTIME_STYLE = 'runtimeStyle';
		var LEFT = 'left';
		var PX = 'px';
		
		function _getComputedStyleIE(elem, name) {
		  // currentStyle maybe null
		  // http://msdn.microsoft.com/en-us/library/ms535231.aspx
		  var ret = elem[CURRENT_STYLE] && elem[CURRENT_STYLE][name];
		
		  // 当 width/height 设置为百分比时，通过 pixelLeft 方式转换的 width/height 值
		  // 一开始就处理了! CUSTOM_STYLE.height,CUSTOM_STYLE.width ,cssHook 解决@2011-08-19
		  // 在 ie 下不对，需要直接用 offset 方式
		  // borderWidth 等值也有问题，但考虑到 borderWidth 设为百分比的概率很小，这里就不考虑了
		
		  // From the awesome hack by Dean Edwards
		  // http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291
		  // If we're not dealing with a regular pixel number
		  // but a number that has a weird ending, we need to convert it to pixels
		  // exclude left right for relativity
		  if (_RE_NUM_NO_PX.test(ret) && !RE_POS.test(name)) {
		    // Remember the original values
		    var style = elem.style;
		    var left = style[LEFT];
		    var rsLeft = elem[RUNTIME_STYLE][LEFT];
		
		    // prevent flashing of content
		    elem[RUNTIME_STYLE][LEFT] = elem[CURRENT_STYLE][LEFT];
		
		    // Put in the new values to get a computed value out
		    style[LEFT] = name === 'fontSize' ? '1em' : ret || 0;
		    ret = style.pixelLeft + PX;
		
		    // Revert the changed values
		    style[LEFT] = left;
		
		    elem[RUNTIME_STYLE][LEFT] = rsLeft;
		  }
		  return ret === '' ? 'auto' : ret;
		}
		
		var getComputedStyleX = undefined;
		if (typeof window !== 'undefined') {
		  getComputedStyleX = window.getComputedStyle ? _getComputedStyle : _getComputedStyleIE;
		}
		
		function each(arr, fn) {
		  for (var i = 0; i < arr.length; i++) {
		    fn(arr[i]);
		  }
		}
		
		function isBorderBoxFn(elem) {
		  return getComputedStyleX(elem, 'boxSizing') === 'border-box';
		}
		
		var BOX_MODELS = ['margin', 'border', 'padding'];
		var CONTENT_INDEX = -1;
		var PADDING_INDEX = 2;
		var BORDER_INDEX = 1;
		var MARGIN_INDEX = 0;
		
		function swap(elem, options, callback) {
		  var old = {};
		  var style = elem.style;
		  var name = undefined;
		
		  // Remember the old values, and insert the new ones
		  for (name in options) {
		    if (options.hasOwnProperty(name)) {
		      old[name] = style[name];
		      style[name] = options[name];
		    }
		  }
		
		  callback.call(elem);
		
		  // Revert the old values
		  for (name in options) {
		    if (options.hasOwnProperty(name)) {
		      style[name] = old[name];
		    }
		  }
		}
		
		function getPBMWidth(elem, props, which) {
		  var value = 0;
		  var prop = undefined;
		  var j = undefined;
		  var i = undefined;
		  for (j = 0; j < props.length; j++) {
		    prop = props[j];
		    if (prop) {
		      for (i = 0; i < which.length; i++) {
		        var cssProp = undefined;
		        if (prop === 'border') {
		          cssProp = prop + which[i] + 'Width';
		        } else {
		          cssProp = prop + which[i];
		        }
		        value += parseFloat(getComputedStyleX(elem, cssProp)) || 0;
		      }
		    }
		  }
		  return value;
		}
		
		/**
		 * A crude way of determining if an object is a window
		 * @member util
		 */
		function isWindow(obj) {
		  // must use == for ie8
		  /* eslint eqeqeq:0 */
		  return obj != null && obj == obj.window;
		}
		
		var domUtils = {};
		
		each(['Width', 'Height'], function (name) {
		  domUtils['doc' + name] = function (refWin) {
		    var d = refWin.document;
		    return Math.max(
		    // firefox chrome documentElement.scrollHeight< body.scrollHeight
		    // ie standard mode : documentElement.scrollHeight> body.scrollHeight
		    d.documentElement['scroll' + name],
		    // quirks : documentElement.scrollHeight 最大等于可视窗口多一点？
		    d.body['scroll' + name], domUtils['viewport' + name](d));
		  };
		
		  domUtils['viewport' + name] = function (win) {
		    // pc browser includes scrollbar in window.innerWidth
		    var prop = 'client' + name;
		    var doc = win.document;
		    var body = doc.body;
		    var documentElement = doc.documentElement;
		    var documentElementProp = documentElement[prop];
		    // 标准模式取 documentElement
		    // backcompat 取 body
		    return doc.compatMode === 'CSS1Compat' && documentElementProp || body && body[prop] || documentElementProp;
		  };
		});
		
		/*
		 得到元素的大小信息
		 @param elem
		 @param name
		 @param {String} [extra]  'padding' : (css width) + padding
		 'border' : (css width) + padding + border
		 'margin' : (css width) + padding + border + margin
		 */
		function getWH(elem, name, extra) {
		  if (isWindow(elem)) {
		    return name === 'width' ? domUtils.viewportWidth(elem) : domUtils.viewportHeight(elem);
		  } else if (elem.nodeType === 9) {
		    return name === 'width' ? domUtils.docWidth(elem) : domUtils.docHeight(elem);
		  }
		  var which = name === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom'];
		  var borderBoxValue = name === 'width' ? elem.offsetWidth : elem.offsetHeight;
		  var computedStyle = getComputedStyleX(elem);
		  var isBorderBox = isBorderBoxFn(elem, computedStyle);
		  var cssBoxValue = 0;
		  if (borderBoxValue == null || borderBoxValue <= 0) {
		    borderBoxValue = undefined;
		    // Fall back to computed then un computed css if necessary
		    cssBoxValue = getComputedStyleX(elem, name);
		    if (cssBoxValue == null || Number(cssBoxValue) < 0) {
		      cssBoxValue = elem.style[name] || 0;
		    }
		    // Normalize '', auto, and prepare for extra
		    cssBoxValue = parseFloat(cssBoxValue) || 0;
		  }
		  if (extra === undefined) {
		    extra = isBorderBox ? BORDER_INDEX : CONTENT_INDEX;
		  }
		  var borderBoxValueOrIsBorderBox = borderBoxValue !== undefined || isBorderBox;
		  var val = borderBoxValue || cssBoxValue;
		  if (extra === CONTENT_INDEX) {
		    if (borderBoxValueOrIsBorderBox) {
		      return val - getPBMWidth(elem, ['border', 'padding'], which, computedStyle);
		    }
		    return cssBoxValue;
		  }
		  if (borderBoxValueOrIsBorderBox) {
		    var padding = extra === PADDING_INDEX ? -getPBMWidth(elem, ['border'], which, computedStyle) : getPBMWidth(elem, ['margin'], which, computedStyle);
		    return val + (extra === BORDER_INDEX ? 0 : padding);
		  }
		  return cssBoxValue + getPBMWidth(elem, BOX_MODELS.slice(extra), which, computedStyle);
		}
		
		var cssShow = {
		  position: 'absolute',
		  visibility: 'hidden',
		  display: 'block'
		};
		
		// fix #119 : https://github.com/kissyteam/kissy/issues/119
		function getWHIgnoreDisplay(elem) {
		  var val = undefined;
		  var args = arguments;
		  // in case elem is window
		  // elem.offsetWidth === undefined
		  if (elem.offsetWidth !== 0) {
		    val = getWH.apply(undefined, args);
		  } else {
		    swap(elem, cssShow, function () {
		      val = getWH.apply(undefined, args);
		    });
		  }
		  return val;
		}
		
		function css(el, name, v) {
		  var value = v;
		  if ((typeof name === 'undefined' ? 'undefined' : _typeof(name)) === 'object') {
		    for (var i in name) {
		      if (name.hasOwnProperty(i)) {
		        css(el, i, name[i]);
		      }
		    }
		    return undefined;
		  }
		  if (typeof value !== 'undefined') {
		    if (typeof value === 'number') {
		      value += 'px';
		    }
		    el.style[name] = value;
		    return undefined;
		  }
		  return getComputedStyleX(el, name);
		}
		
		each(['width', 'height'], function (name) {
		  var first = name.charAt(0).toUpperCase() + name.slice(1);
		  domUtils['outer' + first] = function (el, includeMargin) {
		    return el && getWHIgnoreDisplay(el, name, includeMargin ? MARGIN_INDEX : BORDER_INDEX);
		  };
		  var which = name === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom'];
		
		  domUtils[name] = function (elem, val) {
		    if (val !== undefined) {
		      if (elem) {
		        var computedStyle = getComputedStyleX(elem);
		        var isBorderBox = isBorderBoxFn(elem);
		        if (isBorderBox) {
		          val += getPBMWidth(elem, ['padding', 'border'], which, computedStyle);
		        }
		        return css(elem, name, val);
		      }
		      return undefined;
		    }
		    return elem && getWHIgnoreDisplay(elem, name, CONTENT_INDEX);
		  };
		});
		
		// 设置 elem 相对 elem.ownerDocument 的坐标
		function setOffset(elem, offset) {
		  // set position first, in-case top/left are set even on static elem
		  if (css(elem, 'position') === 'static') {
		    elem.style.position = 'relative';
		  }
		
		  var old = getOffset(elem);
		  var ret = {};
		  var current = undefined;
		  var key = undefined;
		
		  for (key in offset) {
		    if (offset.hasOwnProperty(key)) {
		      current = parseFloat(css(elem, key)) || 0;
		      ret[key] = current + offset[key] - old[key];
		    }
		  }
		  css(elem, ret);
		}
		
		module.exports = _extends({
		  getWindow: function getWindow(node) {
		    var doc = node.ownerDocument || node;
		    return doc.defaultView || doc.parentWindow;
		  },
		  offset: function offset(el, value) {
		    if (typeof value !== 'undefined') {
		      setOffset(el, value);
		    } else {
		      return getOffset(el);
		    }
		  },
		
		  isWindow: isWindow,
		  each: each,
		  css: css,
		  clone: function clone(obj) {
		    var ret = {};
		    for (var i in obj) {
		      if (obj.hasOwnProperty(i)) {
		        ret[i] = obj[i];
		      }
		    }
		    var overflow = obj.overflow;
		    if (overflow) {
		      for (var i in obj) {
		        if (obj.hasOwnProperty(i)) {
		          ret.overflow[i] = obj.overflow[i];
		        }
		      }
		    }
		    return ret;
		  },
		  scrollLeft: function scrollLeft(w, v) {
		    if (isWindow(w)) {
		      if (v === undefined) {
		        return getScrollLeft(w);
		      }
		      window.scrollTo(v, getScrollTop(w));
		    } else {
		      if (v === undefined) {
		        return w.scrollLeft;
		      }
		      w.scrollLeft = v;
		    }
		  },
		  scrollTop: function scrollTop(w, v) {
		    if (isWindow(w)) {
		      if (v === undefined) {
		        return getScrollTop(w);
		      }
		      window.scrollTo(getScrollLeft(w), v);
		    } else {
		      if (v === undefined) {
		        return w.scrollTop;
		      }
		      w.scrollTop = v;
		    }
		  },
		
		  viewportWidth: 0,
		  viewportHeight: 0
		}, domUtils);
	
	/***/ },
	/* 270 */
	/***/ function(module, exports, __webpack_require__) {
	
		var __WEBPACK_AMD_DEFINE_RESULT__;/*!
		 * enquire.js v2.1.1 - Awesome Media Queries in JavaScript
		 * Copyright (c) 2014 Nick Williams - http://wicky.nillia.ms/enquire.js
		 * License: MIT (http://www.opensource.org/licenses/mit-license.php)
		 */
		
		;(function (name, context, factory) {
			var matchMedia = window.matchMedia;
		
			if (typeof module !== 'undefined' && module.exports) {
				module.exports = factory(matchMedia);
			}
			else if (true) {
				!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
					return (context[name] = factory(matchMedia));
				}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
			}
			else {
				context[name] = factory(matchMedia);
			}
		}('enquire', this, function (matchMedia) {
		
			'use strict';
		
		    /*jshint unused:false */
		    /**
		     * Helper function for iterating over a collection
		     *
		     * @param collection
		     * @param fn
		     */
		    function each(collection, fn) {
		        var i      = 0,
		            length = collection.length,
		            cont;
		
		        for(i; i < length; i++) {
		            cont = fn(collection[i], i);
		            if(cont === false) {
		                break; //allow early exit
		            }
		        }
		    }
		
		    /**
		     * Helper function for determining whether target object is an array
		     *
		     * @param target the object under test
		     * @return {Boolean} true if array, false otherwise
		     */
		    function isArray(target) {
		        return Object.prototype.toString.apply(target) === '[object Array]';
		    }
		
		    /**
		     * Helper function for determining whether target object is a function
		     *
		     * @param target the object under test
		     * @return {Boolean} true if function, false otherwise
		     */
		    function isFunction(target) {
		        return typeof target === 'function';
		    }
		
		    /**
		     * Delegate to handle a media query being matched and unmatched.
		     *
		     * @param {object} options
		     * @param {function} options.match callback for when the media query is matched
		     * @param {function} [options.unmatch] callback for when the media query is unmatched
		     * @param {function} [options.setup] one-time callback triggered the first time a query is matched
		     * @param {boolean} [options.deferSetup=false] should the setup callback be run immediately, rather than first time query is matched?
		     * @constructor
		     */
		    function QueryHandler(options) {
		        this.options = options;
		        !options.deferSetup && this.setup();
		    }
		    QueryHandler.prototype = {
		
		        /**
		         * coordinates setup of the handler
		         *
		         * @function
		         */
		        setup : function() {
		            if(this.options.setup) {
		                this.options.setup();
		            }
		            this.initialised = true;
		        },
		
		        /**
		         * coordinates setup and triggering of the handler
		         *
		         * @function
		         */
		        on : function() {
		            !this.initialised && this.setup();
		            this.options.match && this.options.match();
		        },
		
		        /**
		         * coordinates the unmatch event for the handler
		         *
		         * @function
		         */
		        off : function() {
		            this.options.unmatch && this.options.unmatch();
		        },
		
		        /**
		         * called when a handler is to be destroyed.
		         * delegates to the destroy or unmatch callbacks, depending on availability.
		         *
		         * @function
		         */
		        destroy : function() {
		            this.options.destroy ? this.options.destroy() : this.off();
		        },
		
		        /**
		         * determines equality by reference.
		         * if object is supplied compare options, if function, compare match callback
		         *
		         * @function
		         * @param {object || function} [target] the target for comparison
		         */
		        equals : function(target) {
		            return this.options === target || this.options.match === target;
		        }
		
		    };
		    /**
		     * Represents a single media query, manages it's state and registered handlers for this query
		     *
		     * @constructor
		     * @param {string} query the media query string
		     * @param {boolean} [isUnconditional=false] whether the media query should run regardless of whether the conditions are met. Primarily for helping older browsers deal with mobile-first design
		     */
		    function MediaQuery(query, isUnconditional) {
		        this.query = query;
		        this.isUnconditional = isUnconditional;
		        this.handlers = [];
		        this.mql = matchMedia(query);
		
		        var self = this;
		        this.listener = function(mql) {
		            self.mql = mql;
		            self.assess();
		        };
		        this.mql.addListener(this.listener);
		    }
		    MediaQuery.prototype = {
		
		        /**
		         * add a handler for this query, triggering if already active
		         *
		         * @param {object} handler
		         * @param {function} handler.match callback for when query is activated
		         * @param {function} [handler.unmatch] callback for when query is deactivated
		         * @param {function} [handler.setup] callback for immediate execution when a query handler is registered
		         * @param {boolean} [handler.deferSetup=false] should the setup callback be deferred until the first time the handler is matched?
		         */
		        addHandler : function(handler) {
		            var qh = new QueryHandler(handler);
		            this.handlers.push(qh);
		
		            this.matches() && qh.on();
		        },
		
		        /**
		         * removes the given handler from the collection, and calls it's destroy methods
		         * 
		         * @param {object || function} handler the handler to remove
		         */
		        removeHandler : function(handler) {
		            var handlers = this.handlers;
		            each(handlers, function(h, i) {
		                if(h.equals(handler)) {
		                    h.destroy();
		                    return !handlers.splice(i,1); //remove from array and exit each early
		                }
		            });
		        },
		
		        /**
		         * Determine whether the media query should be considered a match
		         * 
		         * @return {Boolean} true if media query can be considered a match, false otherwise
		         */
		        matches : function() {
		            return this.mql.matches || this.isUnconditional;
		        },
		
		        /**
		         * Clears all handlers and unbinds events
		         */
		        clear : function() {
		            each(this.handlers, function(handler) {
		                handler.destroy();
		            });
		            this.mql.removeListener(this.listener);
		            this.handlers.length = 0; //clear array
		        },
		
		        /*
		         * Assesses the query, turning on all handlers if it matches, turning them off if it doesn't match
		         */
		        assess : function() {
		            var action = this.matches() ? 'on' : 'off';
		
		            each(this.handlers, function(handler) {
		                handler[action]();
		            });
		        }
		    };
		    /**
		     * Allows for registration of query handlers.
		     * Manages the query handler's state and is responsible for wiring up browser events
		     *
		     * @constructor
		     */
		    function MediaQueryDispatch () {
		        if(!matchMedia) {
		            throw new Error('matchMedia not present, legacy browsers require a polyfill');
		        }
		
		        this.queries = {};
		        this.browserIsIncapable = !matchMedia('only all').matches;
		    }
		
		    MediaQueryDispatch.prototype = {
		
		        /**
		         * Registers a handler for the given media query
		         *
		         * @param {string} q the media query
		         * @param {object || Array || Function} options either a single query handler object, a function, or an array of query handlers
		         * @param {function} options.match fired when query matched
		         * @param {function} [options.unmatch] fired when a query is no longer matched
		         * @param {function} [options.setup] fired when handler first triggered
		         * @param {boolean} [options.deferSetup=false] whether setup should be run immediately or deferred until query is first matched
		         * @param {boolean} [shouldDegrade=false] whether this particular media query should always run on incapable browsers
		         */
		        register : function(q, options, shouldDegrade) {
		            var queries         = this.queries,
		                isUnconditional = shouldDegrade && this.browserIsIncapable;
		
		            if(!queries[q]) {
		                queries[q] = new MediaQuery(q, isUnconditional);
		            }
		
		            //normalise to object in an array
		            if(isFunction(options)) {
		                options = { match : options };
		            }
		            if(!isArray(options)) {
		                options = [options];
		            }
		            each(options, function(handler) {
		                queries[q].addHandler(handler);
		            });
		
		            return this;
		        },
		
		        /**
		         * unregisters a query and all it's handlers, or a specific handler for a query
		         *
		         * @param {string} q the media query to target
		         * @param {object || function} [handler] specific handler to unregister
		         */
		        unregister : function(q, handler) {
		            var query = this.queries[q];
		
		            if(query) {
		                if(handler) {
		                    query.removeHandler(handler);
		                }
		                else {
		                    query.clear();
		                    delete this.queries[q];
		                }
		            }
		
		            return this;
		        }
		    };
		
			return new MediaQueryDispatch();
		
		}));
	
	/***/ },
	/* 271 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright (c) 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * @typechecks
		 * 
		 */
		
		/*eslint-disable no-self-compare */
		
		'use strict';
		
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		
		/**
		 * inlined Object.is polyfill to avoid requiring consumers ship their own
		 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
		 */
		function is(x, y) {
		  // SameValue algorithm
		  if (x === y) {
		    // Steps 1-5, 7-10
		    // Steps 6.b-6.e: +0 != -0
		    return x !== 0 || 1 / x === 1 / y;
		  } else {
		    // Step 6.a: NaN == NaN
		    return x !== x && y !== y;
		  }
		}
		
		/**
		 * Performs equality by iterating through keys on an object and returning false
		 * when any key has values which are not strictly equal between the arguments.
		 * Returns true when the values of all keys are strictly equal.
		 */
		function shallowEqual(objA, objB) {
		  if (is(objA, objB)) {
		    return true;
		  }
		
		  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
		    return false;
		  }
		
		  var keysA = Object.keys(objA);
		  var keysB = Object.keys(objB);
		
		  if (keysA.length !== keysB.length) {
		    return false;
		  }
		
		  // Test for A's keys different from B.
		  for (var i = 0; i < keysA.length; i++) {
		    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
		      return false;
		    }
		  }
		
		  return true;
		}
		
		module.exports = shallowEqual;
	
	/***/ },
	/* 272 */
	/***/ function(module, exports) {
	
		/*!
		 * for-in <https://github.com/jonschlinkert/for-in>
		 *
		 * Copyright (c) 2014-2016, Jon Schlinkert.
		 * Licensed under the MIT License.
		 */
		
		'use strict';
		
		module.exports = function forIn(o, fn, thisArg) {
		  for (var key in o) {
		    if (fn.call(thisArg, o[key], key, o) === false) {
		      break;
		    }
		  }
		};
	
	
	/***/ },
	/* 273 */
	/***/ function(module, exports, __webpack_require__) {
	
		/*!
		 * for-own <https://github.com/jonschlinkert/for-own>
		 *
		 * Copyright (c) 2014-2016, Jon Schlinkert.
		 * Licensed under the MIT License.
		 */
		
		'use strict';
		
		var forIn = __webpack_require__(272);
		var hasOwn = Object.prototype.hasOwnProperty;
		
		module.exports = function forOwn(o, fn, thisArg) {
		  forIn(o, function(val, key) {
		    if (hasOwn.call(o, key)) {
		      return fn.call(thisArg, o[key], key, o);
		    }
		  });
		};
	
	
	/***/ },
	/* 274 */
	18,
	/* 275 */
	/***/ function(module, exports, __webpack_require__) {
	
		/*
		 * utils for gregorian date
		 * @ignore
		 * @author yiminghe@gmail.com
		 */
		
		'use strict';
		
		var Const = __webpack_require__(88);
		var floor = Math.floor;
		var ACCUMULATED_DAYS_IN_MONTH
		//   1/1 2/1 3/1 4/1 5/1 6/1 7/1 8/1 9/1 10/1 11/1 12/1
		= [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];
		
		var ACCUMULATED_DAYS_IN_MONTH_LEAP
		//   1/1 2/1   3/1   4/1   5/1   6/1   7/1   8/1   9/1
		// 10/1   11/1   12/1
		= [0, 31, 59 + 1, 90 + 1, 120 + 1, 151 + 1, 181 + 1, 212 + 1, 243 + 1, 273 + 1, 304 + 1, 334 + 1];
		
		var DAYS_OF_YEAR = 365;
		var DAYS_OF_4YEAR = 365 * 4 + 1;
		var DAYS_OF_100YEAR = DAYS_OF_4YEAR * 25 - 1;
		var DAYS_OF_400YEAR = DAYS_OF_100YEAR * 4 + 1;
		var _exports = {};
		
		function getDayOfYear(year, month, dayOfMonth) {
		  return dayOfMonth + (_exports.isLeapYear(year) ? ACCUMULATED_DAYS_IN_MONTH_LEAP[month] : ACCUMULATED_DAYS_IN_MONTH[month]);
		}
		
		function getDayOfWeekFromFixedDate(fixedDate) {
		  // The fixed day 1 (January 1, 1 Gregorian) is Monday.
		  if (fixedDate >= 0) {
		    return fixedDate % 7;
		  }
		  return _exports.mod(fixedDate, 7);
		}
		
		function getGregorianYearFromFixedDate(fixedDate) {
		  var d0 = undefined;
		  var d1 = undefined;
		  var d2 = undefined;
		  var d3 = undefined;
		  var n400 = undefined;
		  var n100 = undefined;
		  var n4 = undefined;
		  var n1 = undefined;
		  var year = undefined;
		  d0 = fixedDate - 1;
		
		  n400 = floor(d0 / DAYS_OF_400YEAR);
		  d1 = _exports.mod(d0, DAYS_OF_400YEAR);
		  n100 = floor(d1 / DAYS_OF_100YEAR);
		  d2 = _exports.mod(d1, DAYS_OF_100YEAR);
		  n4 = floor(d2 / DAYS_OF_4YEAR);
		  d3 = _exports.mod(d2, DAYS_OF_4YEAR);
		  n1 = floor(d3 / DAYS_OF_YEAR);
		
		  year = 400 * n400 + 100 * n100 + 4 * n4 + n1;
		
		  // ?
		  if (!(n100 === 4 || n1 === 4)) {
		    ++year;
		  }
		
		  return year;
		}
		
		_exports = module.exports = {
		  each: function each(arr, fn) {
		    for (var i = 0, len = arr.length; i < len; i++) {
		      if (fn(arr[i], i, arr) === false) {
		        break;
		      }
		    }
		  },
		
		  mix: function mix(t, s) {
		    for (var p in s) {
		      if (s.hasOwnProperty(p)) {
		        t[p] = s[p];
		      }
		    }
		  },
		
		  isLeapYear: function isLeapYear(year) {
		    if ((year & 3) !== 0) {
		      return false;
		    }
		    return year % 100 !== 0 || year % 400 === 0;
		  },
		
		  mod: function mod(x, y) {
		    // 负数时不是镜像关系
		    return x - y * floor(x / y);
		  },
		
		  // month: 0 based
		  getFixedDate: function getFixedDate(year, month, dayOfMonth) {
		    var prevYear = year - 1;
		    // 考虑公元前
		    return DAYS_OF_YEAR * prevYear + floor(prevYear / 4) - floor(prevYear / 100) + floor(prevYear / 400) + getDayOfYear(year, month, dayOfMonth);
		  },
		
		  getGregorianDateFromFixedDate: function getGregorianDateFromFixedDate(fixedDate) {
		    var year = getGregorianYearFromFixedDate(fixedDate);
		    var jan1 = _exports.getFixedDate(year, Const.JANUARY, 1);
		    var isLeap = _exports.isLeapYear(year);
		    var ACCUMULATED_DAYS = isLeap ? ACCUMULATED_DAYS_IN_MONTH_LEAP : ACCUMULATED_DAYS_IN_MONTH;
		    var daysDiff = fixedDate - jan1;
		    var month = undefined;
		
		    for (var i = 0; i < ACCUMULATED_DAYS.length; i++) {
		      if (ACCUMULATED_DAYS[i] <= daysDiff) {
		        month = i;
		      } else {
		        break;
		      }
		    }
		
		    var dayOfMonth = fixedDate - jan1 - ACCUMULATED_DAYS[month] + 1;
		    var dayOfWeek = getDayOfWeekFromFixedDate(fixedDate);
		
		    return {
		      year: year,
		      month: month,
		      dayOfMonth: dayOfMonth,
		      dayOfWeek: dayOfWeek,
		      isLeap: isLeap
		    };
		  }
		};
	
	/***/ },
	/* 276 */
	/***/ function(module, exports) {
	
		/**
		 * Copyright 2015, Yahoo! Inc.
		 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
		 */
		'use strict';
		
		var REACT_STATICS = {
		    childContextTypes: true,
		    contextTypes: true,
		    defaultProps: true,
		    displayName: true,
		    getDefaultProps: true,
		    mixins: true,
		    propTypes: true,
		    type: true
		};
		
		var KNOWN_STATICS = {
		    name: true,
		    length: true,
		    prototype: true,
		    caller: true,
		    arguments: true,
		    arity: true
		};
		
		var isGetOwnPropertySymbolsAvailable = typeof Object.getOwnPropertySymbols === 'function';
		
		module.exports = function hoistNonReactStatics(targetComponent, sourceComponent, customStatics) {
		    if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components
		        var keys = Object.getOwnPropertyNames(sourceComponent);
		
		        /* istanbul ignore else */
		        if (isGetOwnPropertySymbolsAvailable) {
		            keys = keys.concat(Object.getOwnPropertySymbols(sourceComponent));
		        }
		
		        for (var i = 0; i < keys.length; ++i) {
		            if (!REACT_STATICS[keys[i]] && !KNOWN_STATICS[keys[i]] && (!customStatics || !customStatics[keys[i]])) {
		                try {
		                    targetComponent[keys[i]] = sourceComponent[keys[i]];
		                } catch (error) {
		
		                }
		            }
		        }
		    }
		
		    return targetComponent;
		};
	
	
	/***/ },
	/* 277 */
	/***/ function(module, exports) {
	
		/*!
		 * is-extendable <https://github.com/jonschlinkert/is-extendable>
		 *
		 * Copyright (c) 2015, Jon Schlinkert.
		 * Licensed under the MIT License.
		 */
		
		'use strict';
		
		module.exports = function isExtendable(val) {
		  return typeof val !== 'undefined' && val !== null
		    && (typeof val === 'object' || typeof val === 'function');
		};
	
	
	/***/ },
	/* 278 */
	/***/ function(module, exports) {
	
		/**
		 * lodash 3.9.1 (Custom Build) <https://lodash.com/>
		 * Build: `lodash modern modularize exports="npm" -o ./`
		 * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>
		 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
		 * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
		 * Available under MIT license <https://lodash.com/license>
		 */
		
		/** `Object#toString` result references. */
		var funcTag = '[object Function]';
		
		/** Used to detect host constructors (Safari > 5). */
		var reIsHostCtor = /^\[object .+?Constructor\]$/;
		
		/**
		 * Checks if `value` is object-like.
		 *
		 * @private
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
		 */
		function isObjectLike(value) {
		  return !!value && typeof value == 'object';
		}
		
		/** Used for native method references. */
		var objectProto = Object.prototype;
		
		/** Used to resolve the decompiled source of functions. */
		var fnToString = Function.prototype.toString;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/**
		 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
		 * of values.
		 */
		var objToString = objectProto.toString;
		
		/** Used to detect if a method is native. */
		var reIsNative = RegExp('^' +
		  fnToString.call(hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
		  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
		);
		
		/**
		 * Gets the native function at `key` of `object`.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @param {string} key The key of the method to get.
		 * @returns {*} Returns the function if it's native, else `undefined`.
		 */
		function getNative(object, key) {
		  var value = object == null ? undefined : object[key];
		  return isNative(value) ? value : undefined;
		}
		
		/**
		 * Checks if `value` is classified as a `Function` object.
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
		 * @example
		 *
		 * _.isFunction(_);
		 * // => true
		 *
		 * _.isFunction(/abc/);
		 * // => false
		 */
		function isFunction(value) {
		  // The use of `Object#toString` avoids issues with the `typeof` operator
		  // in older versions of Chrome and Safari which return 'function' for regexes
		  // and Safari 8 equivalents which return 'object' for typed array constructors.
		  return isObject(value) && objToString.call(value) == funcTag;
		}
		
		/**
		 * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.
		 * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
		 * @example
		 *
		 * _.isObject({});
		 * // => true
		 *
		 * _.isObject([1, 2, 3]);
		 * // => true
		 *
		 * _.isObject(1);
		 * // => false
		 */
		function isObject(value) {
		  // Avoid a V8 JIT bug in Chrome 19-20.
		  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.
		  var type = typeof value;
		  return !!value && (type == 'object' || type == 'function');
		}
		
		/**
		 * Checks if `value` is a native function.
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is a native function, else `false`.
		 * @example
		 *
		 * _.isNative(Array.prototype.push);
		 * // => true
		 *
		 * _.isNative(_);
		 * // => false
		 */
		function isNative(value) {
		  if (value == null) {
		    return false;
		  }
		  if (isFunction(value)) {
		    return reIsNative.test(fnToString.call(value));
		  }
		  return isObjectLike(value) && reIsHostCtor.test(value);
		}
		
		module.exports = getNative;
	
	
	/***/ },
	/* 279 */
	/***/ function(module, exports) {
	
		/**
		 * lodash 3.0.8 (Custom Build) <https://lodash.com/>
		 * Build: `lodash modularize exports="npm" -o ./`
		 * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>
		 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
		 * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
		 * Available under MIT license <https://lodash.com/license>
		 */
		
		/** Used as references for various `Number` constants. */
		var MAX_SAFE_INTEGER = 9007199254740991;
		
		/** `Object#toString` result references. */
		var argsTag = '[object Arguments]',
		    funcTag = '[object Function]',
		    genTag = '[object GeneratorFunction]';
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/**
		 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
		 * of values.
		 */
		var objectToString = objectProto.toString;
		
		/** Built-in value references. */
		var propertyIsEnumerable = objectProto.propertyIsEnumerable;
		
		/**
		 * The base implementation of `_.property` without support for deep paths.
		 *
		 * @private
		 * @param {string} key The key of the property to get.
		 * @returns {Function} Returns the new function.
		 */
		function baseProperty(key) {
		  return function(object) {
		    return object == null ? undefined : object[key];
		  };
		}
		
		/**
		 * Gets the "length" property value of `object`.
		 *
		 * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)
		 * that affects Safari on at least iOS 8.1-8.3 ARM64.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @returns {*} Returns the "length" value.
		 */
		var getLength = baseProperty('length');
		
		/**
		 * Checks if `value` is likely an `arguments` object.
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
		 * @example
		 *
		 * _.isArguments(function() { return arguments; }());
		 * // => true
		 *
		 * _.isArguments([1, 2, 3]);
		 * // => false
		 */
		function isArguments(value) {
		  // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.
		  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
		    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
		}
		
		/**
		 * Checks if `value` is array-like. A value is considered array-like if it's
		 * not a function and has a `value.length` that's an integer greater than or
		 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
		 * @example
		 *
		 * _.isArrayLike([1, 2, 3]);
		 * // => true
		 *
		 * _.isArrayLike(document.body.children);
		 * // => true
		 *
		 * _.isArrayLike('abc');
		 * // => true
		 *
		 * _.isArrayLike(_.noop);
		 * // => false
		 */
		function isArrayLike(value) {
		  return value != null && isLength(getLength(value)) && !isFunction(value);
		}
		
		/**
		 * This method is like `_.isArrayLike` except that it also checks if `value`
		 * is an object.
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is an array-like object, else `false`.
		 * @example
		 *
		 * _.isArrayLikeObject([1, 2, 3]);
		 * // => true
		 *
		 * _.isArrayLikeObject(document.body.children);
		 * // => true
		 *
		 * _.isArrayLikeObject('abc');
		 * // => false
		 *
		 * _.isArrayLikeObject(_.noop);
		 * // => false
		 */
		function isArrayLikeObject(value) {
		  return isObjectLike(value) && isArrayLike(value);
		}
		
		/**
		 * Checks if `value` is classified as a `Function` object.
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
		 * @example
		 *
		 * _.isFunction(_);
		 * // => true
		 *
		 * _.isFunction(/abc/);
		 * // => false
		 */
		function isFunction(value) {
		  // The use of `Object#toString` avoids issues with the `typeof` operator
		  // in Safari 8 which returns 'object' for typed array and weak map constructors,
		  // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.
		  var tag = isObject(value) ? objectToString.call(value) : '';
		  return tag == funcTag || tag == genTag;
		}
		
		/**
		 * Checks if `value` is a valid array-like length.
		 *
		 * **Note:** This function is loosely based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
		 * @example
		 *
		 * _.isLength(3);
		 * // => true
		 *
		 * _.isLength(Number.MIN_VALUE);
		 * // => false
		 *
		 * _.isLength(Infinity);
		 * // => false
		 *
		 * _.isLength('3');
		 * // => false
		 */
		function isLength(value) {
		  return typeof value == 'number' &&
		    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
		}
		
		/**
		 * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.
		 * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
		 * @example
		 *
		 * _.isObject({});
		 * // => true
		 *
		 * _.isObject([1, 2, 3]);
		 * // => true
		 *
		 * _.isObject(_.noop);
		 * // => true
		 *
		 * _.isObject(null);
		 * // => false
		 */
		function isObject(value) {
		  var type = typeof value;
		  return !!value && (type == 'object' || type == 'function');
		}
		
		/**
		 * Checks if `value` is object-like. A value is object-like if it's not `null`
		 * and has a `typeof` result of "object".
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
		 * @example
		 *
		 * _.isObjectLike({});
		 * // => true
		 *
		 * _.isObjectLike([1, 2, 3]);
		 * // => true
		 *
		 * _.isObjectLike(_.noop);
		 * // => false
		 *
		 * _.isObjectLike(null);
		 * // => false
		 */
		function isObjectLike(value) {
		  return !!value && typeof value == 'object';
		}
		
		module.exports = isArguments;
	
	
	/***/ },
	/* 280 */
	/***/ function(module, exports) {
	
		/**
		 * lodash 3.0.4 (Custom Build) <https://lodash.com/>
		 * Build: `lodash modern modularize exports="npm" -o ./`
		 * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>
		 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
		 * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
		 * Available under MIT license <https://lodash.com/license>
		 */
		
		/** `Object#toString` result references. */
		var arrayTag = '[object Array]',
		    funcTag = '[object Function]';
		
		/** Used to detect host constructors (Safari > 5). */
		var reIsHostCtor = /^\[object .+?Constructor\]$/;
		
		/**
		 * Checks if `value` is object-like.
		 *
		 * @private
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
		 */
		function isObjectLike(value) {
		  return !!value && typeof value == 'object';
		}
		
		/** Used for native method references. */
		var objectProto = Object.prototype;
		
		/** Used to resolve the decompiled source of functions. */
		var fnToString = Function.prototype.toString;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/**
		 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
		 * of values.
		 */
		var objToString = objectProto.toString;
		
		/** Used to detect if a method is native. */
		var reIsNative = RegExp('^' +
		  fnToString.call(hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
		  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
		);
		
		/* Native method references for those with the same name as other `lodash` methods. */
		var nativeIsArray = getNative(Array, 'isArray');
		
		/**
		 * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)
		 * of an array-like value.
		 */
		var MAX_SAFE_INTEGER = 9007199254740991;
		
		/**
		 * Gets the native function at `key` of `object`.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @param {string} key The key of the method to get.
		 * @returns {*} Returns the function if it's native, else `undefined`.
		 */
		function getNative(object, key) {
		  var value = object == null ? undefined : object[key];
		  return isNative(value) ? value : undefined;
		}
		
		/**
		 * Checks if `value` is a valid array-like length.
		 *
		 * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
		 *
		 * @private
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
		 */
		function isLength(value) {
		  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
		}
		
		/**
		 * Checks if `value` is classified as an `Array` object.
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
		 * @example
		 *
		 * _.isArray([1, 2, 3]);
		 * // => true
		 *
		 * _.isArray(function() { return arguments; }());
		 * // => false
		 */
		var isArray = nativeIsArray || function(value) {
		  return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;
		};
		
		/**
		 * Checks if `value` is classified as a `Function` object.
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
		 * @example
		 *
		 * _.isFunction(_);
		 * // => true
		 *
		 * _.isFunction(/abc/);
		 * // => false
		 */
		function isFunction(value) {
		  // The use of `Object#toString` avoids issues with the `typeof` operator
		  // in older versions of Chrome and Safari which return 'function' for regexes
		  // and Safari 8 equivalents which return 'object' for typed array constructors.
		  return isObject(value) && objToString.call(value) == funcTag;
		}
		
		/**
		 * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.
		 * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
		 * @example
		 *
		 * _.isObject({});
		 * // => true
		 *
		 * _.isObject([1, 2, 3]);
		 * // => true
		 *
		 * _.isObject(1);
		 * // => false
		 */
		function isObject(value) {
		  // Avoid a V8 JIT bug in Chrome 19-20.
		  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.
		  var type = typeof value;
		  return !!value && (type == 'object' || type == 'function');
		}
		
		/**
		 * Checks if `value` is a native function.
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is a native function, else `false`.
		 * @example
		 *
		 * _.isNative(Array.prototype.push);
		 * // => true
		 *
		 * _.isNative(_);
		 * // => false
		 */
		function isNative(value) {
		  if (value == null) {
		    return false;
		  }
		  if (isFunction(value)) {
		    return reIsNative.test(fnToString.call(value));
		  }
		  return isObjectLike(value) && reIsHostCtor.test(value);
		}
		
		module.exports = isArray;
	
	
	/***/ },
	/* 281 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * lodash 3.1.2 (Custom Build) <https://lodash.com/>
		 * Build: `lodash modern modularize exports="npm" -o ./`
		 * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>
		 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
		 * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
		 * Available under MIT license <https://lodash.com/license>
		 */
		var getNative = __webpack_require__(278),
		    isArguments = __webpack_require__(279),
		    isArray = __webpack_require__(280);
		
		/** Used to detect unsigned integer values. */
		var reIsUint = /^\d+$/;
		
		/** Used for native method references. */
		var objectProto = Object.prototype;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/* Native method references for those with the same name as other `lodash` methods. */
		var nativeKeys = getNative(Object, 'keys');
		
		/**
		 * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)
		 * of an array-like value.
		 */
		var MAX_SAFE_INTEGER = 9007199254740991;
		
		/**
		 * The base implementation of `_.property` without support for deep paths.
		 *
		 * @private
		 * @param {string} key The key of the property to get.
		 * @returns {Function} Returns the new function.
		 */
		function baseProperty(key) {
		  return function(object) {
		    return object == null ? undefined : object[key];
		  };
		}
		
		/**
		 * Gets the "length" property value of `object`.
		 *
		 * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)
		 * that affects Safari on at least iOS 8.1-8.3 ARM64.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @returns {*} Returns the "length" value.
		 */
		var getLength = baseProperty('length');
		
		/**
		 * Checks if `value` is array-like.
		 *
		 * @private
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
		 */
		function isArrayLike(value) {
		  return value != null && isLength(getLength(value));
		}
		
		/**
		 * Checks if `value` is a valid array-like index.
		 *
		 * @private
		 * @param {*} value The value to check.
		 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
		 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
		 */
		function isIndex(value, length) {
		  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;
		  length = length == null ? MAX_SAFE_INTEGER : length;
		  return value > -1 && value % 1 == 0 && value < length;
		}
		
		/**
		 * Checks if `value` is a valid array-like length.
		 *
		 * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
		 *
		 * @private
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
		 */
		function isLength(value) {
		  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
		}
		
		/**
		 * A fallback implementation of `Object.keys` which creates an array of the
		 * own enumerable property names of `object`.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @returns {Array} Returns the array of property names.
		 */
		function shimKeys(object) {
		  var props = keysIn(object),
		      propsLength = props.length,
		      length = propsLength && object.length;
		
		  var allowIndexes = !!length && isLength(length) &&
		    (isArray(object) || isArguments(object));
		
		  var index = -1,
		      result = [];
		
		  while (++index < propsLength) {
		    var key = props[index];
		    if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {
		      result.push(key);
		    }
		  }
		  return result;
		}
		
		/**
		 * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.
		 * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
		 * @example
		 *
		 * _.isObject({});
		 * // => true
		 *
		 * _.isObject([1, 2, 3]);
		 * // => true
		 *
		 * _.isObject(1);
		 * // => false
		 */
		function isObject(value) {
		  // Avoid a V8 JIT bug in Chrome 19-20.
		  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.
		  var type = typeof value;
		  return !!value && (type == 'object' || type == 'function');
		}
		
		/**
		 * Creates an array of the own enumerable property names of `object`.
		 *
		 * **Note:** Non-object values are coerced to objects. See the
		 * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)
		 * for more details.
		 *
		 * @static
		 * @memberOf _
		 * @category Object
		 * @param {Object} object The object to query.
		 * @returns {Array} Returns the array of property names.
		 * @example
		 *
		 * function Foo() {
		 *   this.a = 1;
		 *   this.b = 2;
		 * }
		 *
		 * Foo.prototype.c = 3;
		 *
		 * _.keys(new Foo);
		 * // => ['a', 'b'] (iteration order is not guaranteed)
		 *
		 * _.keys('hi');
		 * // => ['0', '1']
		 */
		var keys = !nativeKeys ? shimKeys : function(object) {
		  var Ctor = object == null ? undefined : object.constructor;
		  if ((typeof Ctor == 'function' && Ctor.prototype === object) ||
		      (typeof object != 'function' && isArrayLike(object))) {
		    return shimKeys(object);
		  }
		  return isObject(object) ? nativeKeys(object) : [];
		};
		
		/**
		 * Creates an array of the own and inherited enumerable property names of `object`.
		 *
		 * **Note:** Non-object values are coerced to objects.
		 *
		 * @static
		 * @memberOf _
		 * @category Object
		 * @param {Object} object The object to query.
		 * @returns {Array} Returns the array of property names.
		 * @example
		 *
		 * function Foo() {
		 *   this.a = 1;
		 *   this.b = 2;
		 * }
		 *
		 * Foo.prototype.c = 3;
		 *
		 * _.keysIn(new Foo);
		 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
		 */
		function keysIn(object) {
		  if (object == null) {
		    return [];
		  }
		  if (!isObject(object)) {
		    object = Object(object);
		  }
		  var length = object.length;
		  length = (length && isLength(length) &&
		    (isArray(object) || isArguments(object)) && length) || 0;
		
		  var Ctor = object.constructor,
		      index = -1,
		      isProto = typeof Ctor == 'function' && Ctor.prototype === object,
		      result = Array(length),
		      skipIndexes = length > 0;
		
		  while (++index < length) {
		    result[index] = (index + '');
		  }
		  for (var key in object) {
		    if (!(skipIndexes && isIndex(key, length)) &&
		        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
		      result.push(key);
		    }
		  }
		  return result;
		}
		
		module.exports = keys;
	
	
	/***/ },
	/* 282 */
	/***/ function(module, exports, __webpack_require__) {
	
		var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory){
		  'use strict';
		
		  /*istanbul ignore next:cant test*/
		  if (typeof module === 'object' && typeof module.exports === 'object') {
		    module.exports = factory();
		  } else if (true) {
		    // AMD. Register as an anonymous module.
		    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		  } else {
		    // Browser globals
		    root.objectPath = factory();
		  }
		})(this, function(){
		  'use strict';
		
		  var
		    toStr = Object.prototype.toString,
		    _hasOwnProperty = Object.prototype.hasOwnProperty;
		
		  function isEmpty(value){
		    if (!value) {
		      return true;
		    }
		    if (isArray(value) && value.length === 0) {
		        return true;
		    } else if (!isString(value)) {
		        for (var i in value) {
		            if (_hasOwnProperty.call(value, i)) {
		                return false;
		            }
		        }
		        return true;
		    }
		    return false;
		  }
		
		  function toString(type){
		    return toStr.call(type);
		  }
		
		  function isNumber(value){
		    return typeof value === 'number' || toString(value) === "[object Number]";
		  }
		
		  function isString(obj){
		    return typeof obj === 'string' || toString(obj) === "[object String]";
		  }
		
		  function isObject(obj){
		    return typeof obj === 'object' && toString(obj) === "[object Object]";
		  }
		
		  function isArray(obj){
		    return typeof obj === 'object' && typeof obj.length === 'number' && toString(obj) === '[object Array]';
		  }
		
		  function isBoolean(obj){
		    return typeof obj === 'boolean' || toString(obj) === '[object Boolean]';
		  }
		
		  function getKey(key){
		    var intKey = parseInt(key);
		    if (intKey.toString() === key) {
		      return intKey;
		    }
		    return key;
		  }
		
		  function set(obj, path, value, doNotReplace){
		    if (isNumber(path)) {
		      path = [path];
		    }
		    if (isEmpty(path)) {
		      return obj;
		    }
		    if (isString(path)) {
		      return set(obj, path.split('.').map(getKey), value, doNotReplace);
		    }
		    var currentPath = path[0];
		
		    if (path.length === 1) {
		      var oldVal = obj[currentPath];
		      if (oldVal === void 0 || !doNotReplace) {
		        obj[currentPath] = value;
		      }
		      return oldVal;
		    }
		
		    if (obj[currentPath] === void 0) {
		      //check if we assume an array
		      if(isNumber(path[1])) {
		        obj[currentPath] = [];
		      } else {
		        obj[currentPath] = {};
		      }
		    }
		
		    return set(obj[currentPath], path.slice(1), value, doNotReplace);
		  }
		
		  function del(obj, path) {
		    if (isNumber(path)) {
		      path = [path];
		    }
		
		    if (isEmpty(obj)) {
		      return void 0;
		    }
		
		    if (isEmpty(path)) {
		      return obj;
		    }
		    if(isString(path)) {
		      return del(obj, path.split('.'));
		    }
		
		    var currentPath = getKey(path[0]);
		    var oldVal = obj[currentPath];
		
		    if(path.length === 1) {
		      if (oldVal !== void 0) {
		        if (isArray(obj)) {
		          obj.splice(currentPath, 1);
		        } else {
		          delete obj[currentPath];
		        }
		      }
		    } else {
		      if (obj[currentPath] !== void 0) {
		        return del(obj[currentPath], path.slice(1));
		      }
		    }
		
		    return obj;
		  }
		
		  var objectPath = function(obj) {
		    return Object.keys(objectPath).reduce(function(proxy, prop) {
		      if (typeof objectPath[prop] === 'function') {
		        proxy[prop] = objectPath[prop].bind(objectPath, obj);
		      }
		
		      return proxy;
		    }, {});
		  };
		
		  objectPath.has = function (obj, path) {
		    if (isEmpty(obj)) {
		      return false;
		    }
		
		    if (isNumber(path)) {
		      path = [path];
		    } else if (isString(path)) {
		      path = path.split('.');
		    }
		
		    if (isEmpty(path) || path.length === 0) {
		      return false;
		    }
		
		    for (var i = 0; i < path.length; i++) {
		      var j = path[i];
		      if ((isObject(obj) || isArray(obj)) && _hasOwnProperty.call(obj, j)) {
		        obj = obj[j];
		      } else {
		        return false;
		      }
		    }
		
		    return true;
		  };
		
		  objectPath.ensureExists = function (obj, path, value){
		    return set(obj, path, value, true);
		  };
		
		  objectPath.set = function (obj, path, value, doNotReplace){
		    return set(obj, path, value, doNotReplace);
		  };
		
		  objectPath.insert = function (obj, path, value, at){
		    var arr = objectPath.get(obj, path);
		    at = ~~at;
		    if (!isArray(arr)) {
		      arr = [];
		      objectPath.set(obj, path, arr);
		    }
		    arr.splice(at, 0, value);
		  };
		
		  objectPath.empty = function(obj, path) {
		    if (isEmpty(path)) {
		      return obj;
		    }
		    if (isEmpty(obj)) {
		      return void 0;
		    }
		
		    var value, i;
		    if (!(value = objectPath.get(obj, path))) {
		      return obj;
		    }
		
		    if (isString(value)) {
		      return objectPath.set(obj, path, '');
		    } else if (isBoolean(value)) {
		      return objectPath.set(obj, path, false);
		    } else if (isNumber(value)) {
		      return objectPath.set(obj, path, 0);
		    } else if (isArray(value)) {
		      value.length = 0;
		    } else if (isObject(value)) {
		      for (i in value) {
		        if (_hasOwnProperty.call(value, i)) {
		          delete value[i];
		        }
		      }
		    } else {
		      return objectPath.set(obj, path, null);
		    }
		  };
		
		  objectPath.push = function (obj, path /*, values */){
		    var arr = objectPath.get(obj, path);
		    if (!isArray(arr)) {
		      arr = [];
		      objectPath.set(obj, path, arr);
		    }
		
		    arr.push.apply(arr, Array.prototype.slice.call(arguments, 2));
		  };
		
		  objectPath.coalesce = function (obj, paths, defaultValue) {
		    var value;
		
		    for (var i = 0, len = paths.length; i < len; i++) {
		      if ((value = objectPath.get(obj, paths[i])) !== void 0) {
		        return value;
		      }
		    }
		
		    return defaultValue;
		  };
		
		  objectPath.get = function (obj, path, defaultValue){
		    if (isNumber(path)) {
		      path = [path];
		    }
		    if (isEmpty(path)) {
		      return obj;
		    }
		    if (isEmpty(obj)) {
		      return defaultValue;
		    }
		    if (isString(path)) {
		      return objectPath.get(obj, path.split('.'), defaultValue);
		    }
		
		    var currentPath = getKey(path[0]);
		
		    if (path.length === 1) {
		      if (obj[currentPath] === void 0) {
		        return defaultValue;
		      }
		      return obj[currentPath];
		    }
		
		    return objectPath.get(obj[currentPath], path.slice(1), defaultValue);
		  };
		
		  objectPath.del = function(obj, path) {
		    return del(obj, path);
		  };
		
		  return objectPath;
		});
	
	
	/***/ },
	/* 283 */
	/***/ function(module, exports) {
	
		// shim for using process in browser
		
		var process = module.exports = {};
		
		// cached from whatever global is present so that test runners that stub it
		// don't break things.  But we need to wrap it in a try catch in case it is
		// wrapped in strict mode code which doesn't define any globals.  It's inside a
		// function because try/catches deoptimize in certain engines.
		
		var cachedSetTimeout;
		var cachedClearTimeout;
		
		(function () {
		  try {
		    cachedSetTimeout = setTimeout;
		  } catch (e) {
		    cachedSetTimeout = function () {
		      throw new Error('setTimeout is not defined');
		    }
		  }
		  try {
		    cachedClearTimeout = clearTimeout;
		  } catch (e) {
		    cachedClearTimeout = function () {
		      throw new Error('clearTimeout is not defined');
		    }
		  }
		} ())
		var queue = [];
		var draining = false;
		var currentQueue;
		var queueIndex = -1;
		
		function cleanUpNextTick() {
		    if (!draining || !currentQueue) {
		        return;
		    }
		    draining = false;
		    if (currentQueue.length) {
		        queue = currentQueue.concat(queue);
		    } else {
		        queueIndex = -1;
		    }
		    if (queue.length) {
		        drainQueue();
		    }
		}
		
		function drainQueue() {
		    if (draining) {
		        return;
		    }
		    var timeout = cachedSetTimeout(cleanUpNextTick);
		    draining = true;
		
		    var len = queue.length;
		    while(len) {
		        currentQueue = queue;
		        queue = [];
		        while (++queueIndex < len) {
		            if (currentQueue) {
		                currentQueue[queueIndex].run();
		            }
		        }
		        queueIndex = -1;
		        len = queue.length;
		    }
		    currentQueue = null;
		    draining = false;
		    cachedClearTimeout(timeout);
		}
		
		process.nextTick = function (fun) {
		    var args = new Array(arguments.length - 1);
		    if (arguments.length > 1) {
		        for (var i = 1; i < arguments.length; i++) {
		            args[i - 1] = arguments[i];
		        }
		    }
		    queue.push(new Item(fun, args));
		    if (queue.length === 1 && !draining) {
		        cachedSetTimeout(drainQueue, 0);
		    }
		};
		
		// v8 likes predictible objects
		function Item(fun, array) {
		    this.fun = fun;
		    this.array = array;
		}
		Item.prototype.run = function () {
		    this.fun.apply(null, this.array);
		};
		process.title = 'browser';
		process.browser = true;
		process.env = {};
		process.argv = [];
		process.version = ''; // empty string to avoid regexp issues
		process.versions = {};
		
		function noop() {}
		
		process.on = noop;
		process.addListener = noop;
		process.once = noop;
		process.off = noop;
		process.removeListener = noop;
		process.removeAllListeners = noop;
		process.emit = noop;
		
		process.binding = function (name) {
		    throw new Error('process.binding is not supported');
		};
		
		process.cwd = function () { return '/' };
		process.chdir = function (dir) {
		    throw new Error('process.chdir is not supported');
		};
		process.umask = function() { return 0; };
	
	
	/***/ },
	/* 284 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _reactDom = __webpack_require__(4);
		
		var _reactDom2 = _interopRequireDefault(_reactDom);
		
		var _domAlign = __webpack_require__(267);
		
		var _domAlign2 = _interopRequireDefault(_domAlign);
		
		var _addEventListener = __webpack_require__(13);
		
		var _addEventListener2 = _interopRequireDefault(_addEventListener);
		
		var _isWindow = __webpack_require__(286);
		
		var _isWindow2 = _interopRequireDefault(_isWindow);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function buffer(fn, ms) {
		  var timer = void 0;
		  return function bufferFn() {
		    if (timer) {
		      clearTimeout(timer);
		    }
		    timer = setTimeout(fn, ms);
		  };
		}
		
		var Align = _react2["default"].createClass({
		  displayName: 'Align',
		
		  propTypes: {
		    childrenProps: _react.PropTypes.object,
		    align: _react.PropTypes.object.isRequired,
		    target: _react.PropTypes.func,
		    onAlign: _react.PropTypes.func,
		    monitorBufferTime: _react.PropTypes.number,
		    monitorWindowResize: _react.PropTypes.bool,
		    disabled: _react.PropTypes.bool,
		    children: _react.PropTypes.any
		  },
		
		  getDefaultProps: function getDefaultProps() {
		    return {
		      target: function target() {
		        return window;
		      },
		      onAlign: function onAlign() {},
		
		      monitorBufferTime: 50,
		      monitorWindowResize: false,
		      disabled: false
		    };
		  },
		  componentDidMount: function componentDidMount() {
		    var props = this.props;
		    // if parent ref not attached .... use document.getElementById
		    this.forceAlign();
		    if (!props.disabled && props.monitorWindowResize) {
		      this.startMonitorWindowResize();
		    }
		  },
		  componentDidUpdate: function componentDidUpdate(prevProps) {
		    var reAlign = false;
		    var props = this.props;
		
		    if (!props.disabled) {
		      if (prevProps.disabled || prevProps.align !== props.align) {
		        reAlign = true;
		      } else {
		        var lastTarget = prevProps.target();
		        var currentTarget = props.target();
		        if ((0, _isWindow2["default"])(lastTarget) && (0, _isWindow2["default"])(currentTarget)) {
		          reAlign = false;
		        } else if (lastTarget !== currentTarget) {
		          reAlign = true;
		        }
		      }
		    }
		
		    if (reAlign) {
		      this.forceAlign();
		    }
		
		    if (props.monitorWindowResize && !props.disabled) {
		      this.startMonitorWindowResize();
		    } else {
		      this.stopMonitorWindowResize();
		    }
		  },
		  componentWillUnmount: function componentWillUnmount() {
		    this.stopMonitorWindowResize();
		  },
		  startMonitorWindowResize: function startMonitorWindowResize() {
		    if (!this.resizeHandler) {
		      this.resizeHandler = (0, _addEventListener2["default"])(window, 'resize', buffer(this.forceAlign, this.props.monitorBufferTime));
		    }
		  },
		  stopMonitorWindowResize: function stopMonitorWindowResize() {
		    if (this.resizeHandler) {
		      this.resizeHandler.remove();
		      this.resizeHandler = null;
		    }
		  },
		  forceAlign: function forceAlign() {
		    var props = this.props;
		    if (!props.disabled) {
		      var source = _reactDom2["default"].findDOMNode(this);
		      props.onAlign(source, (0, _domAlign2["default"])(source, props.target(), props.align));
		    }
		  },
		  render: function render() {
		    var _props = this.props;
		    var childrenProps = _props.childrenProps;
		    var children = _props.children;
		
		    var child = _react2["default"].Children.only(children);
		    if (childrenProps) {
		      var newProps = {};
		      for (var prop in childrenProps) {
		        if (childrenProps.hasOwnProperty(prop)) {
		          newProps[prop] = this.props[childrenProps[prop]];
		        }
		      }
		      return _react2["default"].cloneElement(child, newProps);
		    }
		    return child;
		  }
		});
		
		exports["default"] = Align;
		module.exports = exports['default'];
	
	/***/ },
	/* 285 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _Align = __webpack_require__(284);
		
		var _Align2 = _interopRequireDefault(_Align);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		exports["default"] = _Align2["default"]; // export this package's api
		
		module.exports = exports['default'];
	
	/***/ },
	/* 286 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = isWindow;
		function isWindow(obj) {
		  /* eslint no-eq-null: 0 */
		  /* eslint eqeqeq: 0 */
		  return obj != null && obj == obj.window;
		}
		module.exports = exports['default'];
	
	/***/ },
	/* 287 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _ChildrenUtils = __webpack_require__(289);
		
		var _AnimateChild = __webpack_require__(288);
		
		var _AnimateChild2 = _interopRequireDefault(_AnimateChild);
		
		var _util = __webpack_require__(92);
		
		var _util2 = _interopRequireDefault(_util);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		var defaultKey = 'rc_animate_' + Date.now();
		
		
		function getChildrenFromProps(props) {
		  var children = props.children;
		  if (_react2["default"].isValidElement(children)) {
		    if (!children.key) {
		      return _react2["default"].cloneElement(children, {
		        key: defaultKey
		      });
		    }
		  }
		  return children;
		}
		
		function noop() {}
		
		var Animate = _react2["default"].createClass({
		  displayName: 'Animate',
		
		  propTypes: {
		    component: _react2["default"].PropTypes.any,
		    animation: _react2["default"].PropTypes.object,
		    transitionName: _react2["default"].PropTypes.oneOfType([_react2["default"].PropTypes.string, _react2["default"].PropTypes.object]),
		    transitionEnter: _react2["default"].PropTypes.bool,
		    transitionAppear: _react2["default"].PropTypes.bool,
		    exclusive: _react2["default"].PropTypes.bool,
		    transitionLeave: _react2["default"].PropTypes.bool,
		    onEnd: _react2["default"].PropTypes.func,
		    onEnter: _react2["default"].PropTypes.func,
		    onLeave: _react2["default"].PropTypes.func,
		    onAppear: _react2["default"].PropTypes.func,
		    showProp: _react2["default"].PropTypes.string
		  },
		
		  getDefaultProps: function getDefaultProps() {
		    return {
		      animation: {},
		      component: 'span',
		      transitionEnter: true,
		      transitionLeave: true,
		      transitionAppear: false,
		      onEnd: noop,
		      onEnter: noop,
		      onLeave: noop,
		      onAppear: noop
		    };
		  },
		  getInitialState: function getInitialState() {
		    this.currentlyAnimatingKeys = {};
		    this.keysToEnter = [];
		    this.keysToLeave = [];
		    return {
		      children: (0, _ChildrenUtils.toArrayChildren)(getChildrenFromProps(this.props))
		    };
		  },
		  componentDidMount: function componentDidMount() {
		    var _this = this;
		
		    var showProp = this.props.showProp;
		    var children = this.state.children;
		    if (showProp) {
		      children = children.filter(function (child) {
		        return !!child.props[showProp];
		      });
		    }
		    children.forEach(function (child) {
		      if (child) {
		        _this.performAppear(child.key);
		      }
		    });
		  },
		  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
		    var _this2 = this;
		
		    this.nextProps = nextProps;
		    var nextChildren = (0, _ChildrenUtils.toArrayChildren)(getChildrenFromProps(nextProps));
		    var props = this.props;
		    // exclusive needs immediate response
		    if (props.exclusive) {
		      Object.keys(this.currentlyAnimatingKeys).forEach(function (key) {
		        _this2.stop(key);
		      });
		    }
		    var showProp = props.showProp;
		    var currentlyAnimatingKeys = this.currentlyAnimatingKeys;
		    // last props children if exclusive
		    var currentChildren = props.exclusive ? (0, _ChildrenUtils.toArrayChildren)(getChildrenFromProps(props)) : this.state.children;
		    // in case destroy in showProp mode
		    var newChildren = [];
		    if (showProp) {
		      currentChildren.forEach(function (currentChild) {
		        var nextChild = currentChild && (0, _ChildrenUtils.findChildInChildrenByKey)(nextChildren, currentChild.key);
		        var newChild = void 0;
		        if ((!nextChild || !nextChild.props[showProp]) && currentChild.props[showProp]) {
		          newChild = _react2["default"].cloneElement(nextChild || currentChild, _defineProperty({}, showProp, true));
		        } else {
		          newChild = nextChild;
		        }
		        if (newChild) {
		          newChildren.push(newChild);
		        }
		      });
		      nextChildren.forEach(function (nextChild) {
		        if (!nextChild || !(0, _ChildrenUtils.findChildInChildrenByKey)(currentChildren, nextChild.key)) {
		          newChildren.push(nextChild);
		        }
		      });
		    } else {
		      newChildren = (0, _ChildrenUtils.mergeChildren)(currentChildren, nextChildren);
		    }
		
		    // need render to avoid update
		    this.setState({
		      children: newChildren
		    });
		
		    nextChildren.forEach(function (child) {
		      var key = child && child.key;
		      if (child && currentlyAnimatingKeys[key]) {
		        return;
		      }
		      var hasPrev = child && (0, _ChildrenUtils.findChildInChildrenByKey)(currentChildren, key);
		      if (showProp) {
		        var showInNext = child.props[showProp];
		        if (hasPrev) {
		          var showInNow = (0, _ChildrenUtils.findShownChildInChildrenByKey)(currentChildren, key, showProp);
		          if (!showInNow && showInNext) {
		            _this2.keysToEnter.push(key);
		          }
		        } else if (showInNext) {
		          _this2.keysToEnter.push(key);
		        }
		      } else if (!hasPrev) {
		        _this2.keysToEnter.push(key);
		      }
		    });
		
		    currentChildren.forEach(function (child) {
		      var key = child && child.key;
		      if (child && currentlyAnimatingKeys[key]) {
		        return;
		      }
		      var hasNext = child && (0, _ChildrenUtils.findChildInChildrenByKey)(nextChildren, key);
		      if (showProp) {
		        var showInNow = child.props[showProp];
		        if (hasNext) {
		          var showInNext = (0, _ChildrenUtils.findShownChildInChildrenByKey)(nextChildren, key, showProp);
		          if (!showInNext && showInNow) {
		            _this2.keysToLeave.push(key);
		          }
		        } else if (showInNow) {
		          _this2.keysToLeave.push(key);
		        }
		      } else if (!hasNext) {
		        _this2.keysToLeave.push(key);
		      }
		    });
		  },
		  componentDidUpdate: function componentDidUpdate() {
		    var keysToEnter = this.keysToEnter;
		    this.keysToEnter = [];
		    keysToEnter.forEach(this.performEnter);
		    var keysToLeave = this.keysToLeave;
		    this.keysToLeave = [];
		    keysToLeave.forEach(this.performLeave);
		  },
		  performEnter: function performEnter(key) {
		    // may already remove by exclusive
		    if (this.refs[key]) {
		      this.currentlyAnimatingKeys[key] = true;
		      this.refs[key].componentWillEnter(this.handleDoneAdding.bind(this, key, 'enter'));
		    }
		  },
		  performAppear: function performAppear(key) {
		    if (this.refs[key]) {
		      this.currentlyAnimatingKeys[key] = true;
		      this.refs[key].componentWillAppear(this.handleDoneAdding.bind(this, key, 'appear'));
		    }
		  },
		  handleDoneAdding: function handleDoneAdding(key, type) {
		    var props = this.props;
		    delete this.currentlyAnimatingKeys[key];
		    // if update on exclusive mode, skip check
		    if (props.exclusive && props !== this.nextProps) {
		      return;
		    }
		    var currentChildren = (0, _ChildrenUtils.toArrayChildren)(getChildrenFromProps(props));
		    if (!this.isValidChildByKey(currentChildren, key)) {
		      // exclusive will not need this
		      this.performLeave(key);
		    } else {
		      if (type === 'appear') {
		        if (_util2["default"].allowAppearCallback(props)) {
		          props.onAppear(key);
		          props.onEnd(key, true);
		        }
		      } else {
		        if (_util2["default"].allowEnterCallback(props)) {
		          props.onEnter(key);
		          props.onEnd(key, true);
		        }
		      }
		    }
		  },
		  performLeave: function performLeave(key) {
		    // may already remove by exclusive
		    if (this.refs[key]) {
		      this.currentlyAnimatingKeys[key] = true;
		      this.refs[key].componentWillLeave(this.handleDoneLeaving.bind(this, key));
		    }
		  },
		  handleDoneLeaving: function handleDoneLeaving(key) {
		    var props = this.props;
		    delete this.currentlyAnimatingKeys[key];
		    // if update on exclusive mode, skip check
		    if (props.exclusive && props !== this.nextProps) {
		      return;
		    }
		    var currentChildren = (0, _ChildrenUtils.toArrayChildren)(getChildrenFromProps(props));
		    // in case state change is too fast
		    if (this.isValidChildByKey(currentChildren, key)) {
		      this.performEnter(key);
		    } else {
		      var end = function end() {
		        if (_util2["default"].allowLeaveCallback(props)) {
		          props.onLeave(key);
		          props.onEnd(key, false);
		        }
		      };
		      /* eslint react/no-is-mounted:0 */
		      if (this.isMounted() && !(0, _ChildrenUtils.isSameChildren)(this.state.children, currentChildren, props.showProp)) {
		        this.setState({
		          children: currentChildren
		        }, end);
		      } else {
		        end();
		      }
		    }
		  },
		  isValidChildByKey: function isValidChildByKey(currentChildren, key) {
		    var showProp = this.props.showProp;
		    if (showProp) {
		      return (0, _ChildrenUtils.findShownChildInChildrenByKey)(currentChildren, key, showProp);
		    }
		    return (0, _ChildrenUtils.findChildInChildrenByKey)(currentChildren, key);
		  },
		  stop: function stop(key) {
		    delete this.currentlyAnimatingKeys[key];
		    var component = this.refs[key];
		    if (component) {
		      component.stop();
		    }
		  },
		  render: function render() {
		    var props = this.props;
		    this.nextProps = props;
		    var stateChildren = this.state.children;
		    var children = null;
		    if (stateChildren) {
		      children = stateChildren.map(function (child) {
		        if (child === null || child === undefined) {
		          return child;
		        }
		        if (!child.key) {
		          throw new Error('must set key for <rc-animate> children');
		        }
		        return _react2["default"].createElement(
		          _AnimateChild2["default"],
		          {
		            key: child.key,
		            ref: child.key,
		            animation: props.animation,
		            transitionName: props.transitionName,
		            transitionEnter: props.transitionEnter,
		            transitionAppear: props.transitionAppear,
		            transitionLeave: props.transitionLeave
		          },
		          child
		        );
		      });
		    }
		    var Component = props.component;
		    if (Component) {
		      var passedProps = props;
		      if (typeof Component === 'string') {
		        passedProps = {
		          className: props.className,
		          style: props.style
		        };
		      }
		      return _react2["default"].createElement(
		        Component,
		        passedProps,
		        children
		      );
		    }
		    return children[0] || null;
		  }
		});
		
		exports["default"] = Animate;
		module.exports = exports['default'];
	
	/***/ },
	/* 288 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _reactDom = __webpack_require__(4);
		
		var _reactDom2 = _interopRequireDefault(_reactDom);
		
		var _cssAnimation = __webpack_require__(42);
		
		var _cssAnimation2 = _interopRequireDefault(_cssAnimation);
		
		var _util = __webpack_require__(92);
		
		var _util2 = _interopRequireDefault(_util);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		var transitionMap = {
		  enter: 'transitionEnter',
		  appear: 'transitionAppear',
		  leave: 'transitionLeave'
		};
		
		var AnimateChild = _react2["default"].createClass({
		  displayName: 'AnimateChild',
		
		  propTypes: {
		    children: _react2["default"].PropTypes.any
		  },
		
		  componentWillUnmount: function componentWillUnmount() {
		    this.stop();
		  },
		  componentWillEnter: function componentWillEnter(done) {
		    if (_util2["default"].isEnterSupported(this.props)) {
		      this.transition('enter', done);
		    } else {
		      done();
		    }
		  },
		  componentWillAppear: function componentWillAppear(done) {
		    if (_util2["default"].isAppearSupported(this.props)) {
		      this.transition('appear', done);
		    } else {
		      done();
		    }
		  },
		  componentWillLeave: function componentWillLeave(done) {
		    if (_util2["default"].isLeaveSupported(this.props)) {
		      this.transition('leave', done);
		    } else {
		      // always sync, do not interupt with react component life cycle
		      // update hidden -> animate hidden ->
		      // didUpdate -> animate leave -> unmount (if animate is none)
		      done();
		    }
		  },
		  transition: function transition(animationType, finishCallback) {
		    var _this = this;
		
		    var node = _reactDom2["default"].findDOMNode(this);
		    var props = this.props;
		    var transitionName = props.transitionName;
		    var nameIsObj = (typeof transitionName === 'undefined' ? 'undefined' : _typeof(transitionName)) === 'object';
		    this.stop();
		    var end = function end() {
		      _this.stopper = null;
		      finishCallback();
		    };
		    if ((_cssAnimation.isCssAnimationSupported || !props.animation[animationType]) && transitionName && props[transitionMap[animationType]]) {
		      var name = nameIsObj ? transitionName[animationType] : transitionName + '-' + animationType;
		      this.stopper = (0, _cssAnimation2["default"])(node, name, end);
		    } else {
		      this.stopper = props.animation[animationType](node, end);
		    }
		  },
		  stop: function stop() {
		    var stopper = this.stopper;
		    if (stopper) {
		      this.stopper = null;
		      stopper.stop();
		    }
		  },
		  render: function render() {
		    return this.props.children;
		  }
		});
		
		exports["default"] = AnimateChild;
		module.exports = exports['default'];
	
	/***/ },
	/* 289 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.toArrayChildren = toArrayChildren;
		exports.findChildInChildrenByKey = findChildInChildrenByKey;
		exports.findShownChildInChildrenByKey = findShownChildInChildrenByKey;
		exports.findHiddenChildInChildrenByKey = findHiddenChildInChildrenByKey;
		exports.isSameChildren = isSameChildren;
		exports.mergeChildren = mergeChildren;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function toArrayChildren(children) {
		  var ret = [];
		  _react2["default"].Children.forEach(children, function (child) {
		    ret.push(child);
		  });
		  return ret;
		}
		
		function findChildInChildrenByKey(children, key) {
		  var ret = null;
		  if (children) {
		    children.forEach(function (child) {
		      if (ret) {
		        return;
		      }
		      if (child && child.key === key) {
		        ret = child;
		      }
		    });
		  }
		  return ret;
		}
		
		function findShownChildInChildrenByKey(children, key, showProp) {
		  var ret = null;
		  if (children) {
		    children.forEach(function (child) {
		      if (child && child.key === key && child.props[showProp]) {
		        if (ret) {
		          throw new Error('two child with same key for <rc-animate> children');
		        }
		        ret = child;
		      }
		    });
		  }
		  return ret;
		}
		
		function findHiddenChildInChildrenByKey(children, key, showProp) {
		  var found = 0;
		  if (children) {
		    children.forEach(function (child) {
		      if (found) {
		        return;
		      }
		      found = child && child.key === key && !child.props[showProp];
		    });
		  }
		  return found;
		}
		
		function isSameChildren(c1, c2, showProp) {
		  var same = c1.length === c2.length;
		  if (same) {
		    c1.forEach(function (child, index) {
		      var child2 = c2[index];
		      if (child && child2) {
		        if (child && !child2 || !child && child2) {
		          same = false;
		        } else if (child.key !== child2.key) {
		          same = false;
		        } else if (showProp && child.props[showProp] !== child2.props[showProp]) {
		          same = false;
		        }
		      }
		    });
		  }
		  return same;
		}
		
		function mergeChildren(prev, next) {
		  var ret = [];
		
		  // For each key of `next`, the list of keys to insert before that key in
		  // the combined list
		  var nextChildrenPending = {};
		  var pendingChildren = [];
		  prev.forEach(function (child) {
		    if (child && findChildInChildrenByKey(next, child.key)) {
		      if (pendingChildren.length) {
		        nextChildrenPending[child.key] = pendingChildren;
		        pendingChildren = [];
		      }
		    } else {
		      pendingChildren.push(child);
		    }
		  });
		
		  next.forEach(function (child) {
		    if (child && nextChildrenPending.hasOwnProperty(child.key)) {
		      ret = ret.concat(nextChildrenPending[child.key]);
		    }
		    ret.push(child);
		  });
		
		  ret = ret.concat(pendingChildren);
		
		  return ret;
		}
	
	/***/ },
	/* 290 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _gregorianCalendar = __webpack_require__(9);
		
		var _gregorianCalendar2 = _interopRequireDefault(_gregorianCalendar);
		
		var _KeyCode = __webpack_require__(11);
		
		var _KeyCode2 = _interopRequireDefault(_KeyCode);
		
		var _DateTable = __webpack_require__(45);
		
		var _DateTable2 = _interopRequireDefault(_DateTable);
		
		var _CalendarHeader = __webpack_require__(95);
		
		var _CalendarHeader2 = _interopRequireDefault(_CalendarHeader);
		
		var _CalendarFooter = __webpack_require__(293);
		
		var _CalendarFooter2 = _interopRequireDefault(_CalendarFooter);
		
		var _CalendarMixin = __webpack_require__(46);
		
		var _CalendarMixin2 = _interopRequireDefault(_CalendarMixin);
		
		var _CommonMixin = __webpack_require__(30);
		
		var _CommonMixin2 = _interopRequireDefault(_CommonMixin);
		
		var _DateInput = __webpack_require__(99);
		
		var _DateInput2 = _interopRequireDefault(_DateInput);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function noop() {}
		
		function goStartMonth() {
		  var next = this.state.value.clone();
		  next.setDayOfMonth(1);
		  this.setValue(next);
		}
		
		function goEndMonth() {
		  var next = this.state.value.clone();
		  next.setDayOfMonth(next.getActualMaximum(_gregorianCalendar2["default"].MONTH));
		  this.setValue(next);
		}
		
		function goMonth(direction) {
		  var next = this.state.value.clone();
		  next.addMonth(direction);
		  this.setValue(next);
		}
		
		function goYear(direction) {
		  var next = this.state.value.clone();
		  next.addYear(direction);
		  this.setValue(next);
		}
		
		function goWeek(direction) {
		  var next = this.state.value.clone();
		  next.addWeekOfYear(direction);
		  this.setValue(next);
		}
		
		function goDay(direction) {
		  var next = this.state.value.clone();
		  next.addDayOfMonth(direction);
		  this.setValue(next);
		}
		
		var Calendar = _react2["default"].createClass({
		  displayName: 'Calendar',
		
		  propTypes: {
		    disabledDate: _react.PropTypes.func,
		    disabledTime: _react.PropTypes.any,
		    value: _react.PropTypes.object,
		    selectedValue: _react.PropTypes.object,
		    defaultValue: _react.PropTypes.object,
		    className: _react.PropTypes.string,
		    locale: _react.PropTypes.object,
		    showWeekNumber: _react.PropTypes.bool,
		    style: _react.PropTypes.object,
		    showToday: _react.PropTypes.bool,
		    showDateInput: _react.PropTypes.bool,
		    visible: _react.PropTypes.bool,
		    onSelect: _react.PropTypes.func,
		    onOk: _react.PropTypes.func,
		    showOk: _react.PropTypes.bool,
		    prefixCls: _react.PropTypes.string,
		    onKeyDown: _react.PropTypes.func,
		    timePicker: _react.PropTypes.element,
		    dateInputPlaceholder: _react.PropTypes.any,
		    onClear: _react.PropTypes.func,
		    onChange: _react.PropTypes.func
		  },
		
		  mixins: [_CommonMixin2["default"], _CalendarMixin2["default"]],
		
		  getDefaultProps: function getDefaultProps() {
		    return {
		      showToday: true,
		      showDateInput: true,
		      timePicker: null,
		      onOk: noop
		    };
		  },
		  onKeyDown: function onKeyDown(event) {
		    if (event.target.nodeName.toLowerCase() === 'input') {
		      return undefined;
		    }
		    var keyCode = event.keyCode;
		    // mac
		    var ctrlKey = event.ctrlKey || event.metaKey;
		    switch (keyCode) {
		      case _KeyCode2["default"].DOWN:
		        goWeek.call(this, 1);
		        event.preventDefault();
		        return 1;
		      case _KeyCode2["default"].UP:
		        goWeek.call(this, -1);
		        event.preventDefault();
		        return 1;
		      case _KeyCode2["default"].LEFT:
		        if (ctrlKey) {
		          goYear.call(this, -1);
		        } else {
		          goDay.call(this, -1);
		        }
		        event.preventDefault();
		        return 1;
		      case _KeyCode2["default"].RIGHT:
		        if (ctrlKey) {
		          goYear.call(this, 1);
		        } else {
		          goDay.call(this, 1);
		        }
		        event.preventDefault();
		        return 1;
		      case _KeyCode2["default"].HOME:
		        goStartMonth.call(this);
		        event.preventDefault();
		        return 1;
		      case _KeyCode2["default"].END:
		        goEndMonth.call(this);
		        event.preventDefault();
		        return 1;
		      case _KeyCode2["default"].PAGE_DOWN:
		        goMonth.call(this, 1);
		        event.preventDefault();
		        return 1;
		      case _KeyCode2["default"].PAGE_UP:
		        goMonth.call(this, -1);
		        event.preventDefault();
		        return 1;
		      case _KeyCode2["default"].ENTER:
		        this.onSelect(this.state.value, {
		          source: 'keyboard'
		        });
		        event.preventDefault();
		        return 1;
		      default:
		        this.props.onKeyDown(event);
		        return 1;
		    }
		  },
		  onClear: function onClear() {
		    this.onSelect(null);
		    this.props.onClear();
		  },
		  onOk: function onOk() {
		    var selectedValue = this.state.selectedValue;
		
		    if (this.isAllowedDate(selectedValue)) {
		      this.props.onOk(selectedValue);
		    }
		  },
		  onDateInputChange: function onDateInputChange(value) {
		    this.onSelect(value, {
		      source: 'dateInput'
		    });
		  },
		  onDateTableSelect: function onDateTableSelect(value) {
		    this.onSelect(value);
		  },
		  chooseToday: function chooseToday() {
		    var today = this.state.value.clone();
		    today.setTime(Date.now());
		    this.onSelect(today, {
		      source: 'todayButton'
		    });
		  },
		  render: function render() {
		    var props = this.props;
		    var locale = props.locale;
		    var prefixCls = props.prefixCls;
		    var disabledDate = props.disabledDate;
		    var dateInputPlaceholder = props.dateInputPlaceholder;
		    var timePicker = props.timePicker;
		    var disabledTime = props.disabledTime;
		
		    var state = this.state;
		    var value = state.value;
		    var selectedValue = state.selectedValue;
		
		    var dateInputElement = props.showDateInput ? _react2["default"].createElement(_DateInput2["default"], {
		      ref: 'dateInput',
		      formatter: this.getFormatter(),
		      key: 'date-input',
		      timePicker: timePicker,
		      gregorianCalendarLocale: value.locale,
		      locale: locale,
		      placeholder: dateInputPlaceholder,
		      showClear: true,
		      disabledTime: disabledTime,
		      disabledDate: disabledDate,
		      onClear: this.onClear,
		      prefixCls: prefixCls,
		      selectedValue: selectedValue,
		      onChange: this.onDateInputChange
		    }) : null;
		    var children = [dateInputElement, _react2["default"].createElement(
		      'div',
		      {
		        key: 'date-panel',
		        className: prefixCls + '-date-panel'
		      },
		      _react2["default"].createElement(_CalendarHeader2["default"], {
		        locale: locale,
		        onValueChange: this.setValue,
		        value: value,
		        prefixCls: prefixCls
		      }),
		      _react2["default"].createElement(
		        'div',
		        { className: prefixCls + '-calendar-body' },
		        _react2["default"].createElement(_DateTable2["default"], {
		          locale: locale,
		          value: value,
		          selectedValue: selectedValue,
		          prefixCls: prefixCls,
		          dateRender: props.dateRender,
		          onSelect: this.onDateTableSelect,
		          disabledDate: disabledDate,
		          showWeekNumber: props.showWeekNumber
		        })
		      ),
		      _react2["default"].createElement(_CalendarFooter2["default"], {
		        showOk: props.showOk,
		        locale: locale,
		        prefixCls: prefixCls,
		        showToday: props.showToday,
		        disabledTime: disabledTime,
		        gregorianCalendarLocale: value.locale,
		        showDateInput: props.showDateInput,
		        timePicker: timePicker,
		        selectedValue: selectedValue,
		        value: value,
		        disabledDate: disabledDate,
		        onOk: this.onOk,
		        onSelect: this.onSelect,
		        onToday: this.chooseToday
		      })
		    )];
		
		    return this.renderRoot({
		      children: children,
		      className: props.showWeekNumber ? prefixCls + '-week-number' : ''
		    });
		  }
		});
		
		exports["default"] = Calendar;
		module.exports = exports['default'];
	
	/***/ },
	/* 291 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _DateTable = __webpack_require__(45);
		
		var _DateTable2 = _interopRequireDefault(_DateTable);
		
		var _MonthTable = __webpack_require__(103);
		
		var _MonthTable2 = _interopRequireDefault(_MonthTable);
		
		var _CalendarMixin = __webpack_require__(46);
		
		var _CalendarMixin2 = _interopRequireDefault(_CalendarMixin);
		
		var _CommonMixin = __webpack_require__(30);
		
		var _CommonMixin2 = _interopRequireDefault(_CommonMixin);
		
		var _CalendarHeader = __webpack_require__(297);
		
		var _CalendarHeader2 = _interopRequireDefault(_CalendarHeader);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		var FullCalendar = _react2["default"].createClass({
		  displayName: 'FullCalendar',
		
		  propTypes: {
		    defaultType: _react.PropTypes.string,
		    type: _react.PropTypes.string,
		    prefixCls: _react.PropTypes.string,
		    locale: _react.PropTypes.object,
		    onTypeChange: _react.PropTypes.func,
		    fullscreen: _react.PropTypes.bool,
		    monthCellRender: _react.PropTypes.func,
		    dateCellRender: _react.PropTypes.func,
		    showTypeSwitch: _react.PropTypes.bool,
		    Select: _react.PropTypes.func.isRequired,
		    headerComponents: _react.PropTypes.array,
		    headerComponent: _react.PropTypes.object, // The whole header component
		    headerRender: _react.PropTypes.func,
		    showHeader: _react.PropTypes.bool
		  },
		  mixins: [_CommonMixin2["default"], _CalendarMixin2["default"]],
		  getDefaultProps: function getDefaultProps() {
		    return {
		      defaultType: 'date',
		      fullscreen: false,
		      showTypeSwitch: true,
		      showHeader: true,
		      onTypeChange: function onTypeChange() {}
		    };
		  },
		  getInitialState: function getInitialState() {
		    var type = void 0;
		    if ('type' in this.props) {
		      type = this.props.type;
		    } else {
		      type = this.props.defaultType;
		    }
		    return {
		      type: type
		    };
		  },
		  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
		    if ('type' in nextProps) {
		      this.setState({
		        type: nextProps.type
		      });
		    }
		  },
		  onMonthSelect: function onMonthSelect(value) {
		    this.onSelect(value, {
		      target: 'month'
		    });
		  },
		  setType: function setType(type) {
		    if (!('type' in this.props)) {
		      this.setState({
		        type: type
		      });
		    }
		    this.props.onTypeChange(type);
		  },
		  render: function render() {
		    var props = this.props;
		    var locale = props.locale;
		    var prefixCls = props.prefixCls;
		    var fullscreen = props.fullscreen;
		    var showHeader = props.showHeader;
		    var headerComponent = props.headerComponent;
		    var headerRender = props.headerRender;
		    var _state = this.state;
		    var value = _state.value;
		    var type = _state.type;
		
		
		    var header = null;
		    if (showHeader) {
		      if (headerRender) {
		        header = headerRender(value, type, locale);
		      } else {
		        var TheHeader = headerComponent || _CalendarHeader2["default"];
		        header = _react2["default"].createElement(TheHeader, _extends({
		          key: 'calendar-header'
		        }, props, {
		          prefixCls: prefixCls + '-full',
		          type: type,
		          value: value,
		          onTypeChange: this.setType,
		          onValueChange: this.setValue
		        }));
		      }
		    }
		
		    var table = type === 'date' ? _react2["default"].createElement(_DateTable2["default"], {
		      dateRender: props.dateCellRender,
		      contentRender: props.dateCellContentRender,
		      locale: locale,
		      prefixCls: prefixCls,
		      onSelect: this.onSelect,
		      value: value
		    }) : _react2["default"].createElement(_MonthTable2["default"], {
		      cellRender: props.monthCellRender,
		      contentRender: props.monthCellContentRender,
		      locale: locale,
		      onSelect: this.onMonthSelect,
		      prefixCls: prefixCls + '-month-panel',
		      value: value
		    });
		
		    var children = [header, _react2["default"].createElement(
		      'div',
		      { key: 'calendar-body', className: prefixCls + '-calendar-body' },
		      table
		    )];
		
		    var className = [prefixCls + '-full'];
		
		    if (fullscreen) {
		      className.push(prefixCls + '-fullscreen');
		    }
		
		    return this.renderRoot({
		      children: children,
		      className: className.join(' ')
		    });
		  }
		});
		
		exports["default"] = FullCalendar;
		module.exports = exports['default'];
	
	/***/ },
	/* 292 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _gregorianCalendar = __webpack_require__(9);
		
		var _gregorianCalendar2 = _interopRequireDefault(_gregorianCalendar);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var _CalendarPart = __webpack_require__(300);
		
		var _CalendarPart2 = _interopRequireDefault(_CalendarPart);
		
		var _util = __webpack_require__(12);
		
		var _TodayButton = __webpack_require__(97);
		
		var _TodayButton2 = _interopRequireDefault(_TodayButton);
		
		var _OkButton = __webpack_require__(96);
		
		var _OkButton2 = _interopRequireDefault(_OkButton);
		
		var _CommonMixin = __webpack_require__(30);
		
		var _CommonMixin2 = _interopRequireDefault(_CommonMixin);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function noop() {}
		
		function getNow() {
		  var selectedValue = new _gregorianCalendar2["default"]();
		  selectedValue.setTime(Date.now());
		  return selectedValue;
		}
		
		function onValueChange(direction, current) {
		  var value = void 0;
		  value = current;
		  if (direction === 'right') {
		    value.addMonth(-1);
		  }
		  this.fireValueChange(value);
		}
		
		function normalizeAnchor(props, init) {
		  var selectedValue = props.selectedValue || init && props.defaultSelectedValue || [];
		  var value = props.value;
		  if (Array.isArray(value)) {
		    value = value[0];
		  }
		  var defaultValue = props.defaultValue;
		  if (Array.isArray(defaultValue)) {
		    defaultValue = defaultValue[0];
		  }
		  return value || init && defaultValue || selectedValue[0] || init && getNow();
		}
		
		function onInputSelect(direction, value) {
		  if (!value) {
		    return;
		  }
		  var originalValue = this.state.selectedValue;
		  var selectedValue = originalValue.concat();
		  var index = direction === 'left' ? 0 : 1;
		  selectedValue[index] = value;
		  if (selectedValue[0] && selectedValue[1]) {
		    if (this.compare(selectedValue[0], selectedValue[1]) > 0) {
		      selectedValue[1 - index] = undefined;
		    }
		  }
		  this.fireSelectValueChange(selectedValue);
		}
		
		var RangeCalendar = _react2["default"].createClass({
		  displayName: 'RangeCalendar',
		
		  propTypes: {
		    prefixCls: _react.PropTypes.string,
		    dateInputPlaceholder: _react.PropTypes.any,
		    defaultValue: _react.PropTypes.any,
		    timePicker: _react.PropTypes.any,
		    value: _react.PropTypes.any,
		    showOk: _react.PropTypes.bool,
		    selectedValue: _react.PropTypes.array,
		    defaultSelectedValue: _react.PropTypes.array,
		    onOk: _react.PropTypes.func,
		    locale: _react.PropTypes.object,
		    onChange: _react.PropTypes.func,
		    onSelect: _react.PropTypes.func,
		    onValueChange: _react.PropTypes.func,
		    formatter: _react.PropTypes.oneOfType([_react.PropTypes.object, _react.PropTypes.string]),
		    onClear: _react.PropTypes.func
		  },
		
		  mixins: [_CommonMixin2["default"]],
		
		  getDefaultProps: function getDefaultProps() {
		    return {
		      defaultSelectedValue: [],
		      onValueChange: noop
		    };
		  },
		  getInitialState: function getInitialState() {
		    var props = this.props;
		    var selectedValue = props.selectedValue || props.defaultSelectedValue;
		    var value = normalizeAnchor(props, 1);
		    return {
		      selectedValue: selectedValue,
		      value: value
		    };
		  },
		  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
		    var newState = {};
		    if ('value' in nextProps) {
		      if (nextProps.value) {
		        newState.value = nextProps.value;
		      } else {
		        newState.value = normalizeAnchor(nextProps, 0);
		      }
		      this.setState(newState);
		    }
		    if ('selectedValue' in nextProps) {
		      newState.selectedValue = nextProps.selectedValue;
		      this.setState(newState);
		    }
		  },
		  onSelect: function onSelect(value) {
		    var originalValue = this.state.selectedValue;
		    var selectedValue = originalValue.concat();
		    var changed = false;
		    if (!selectedValue.length || selectedValue.length === 2 && !originalValue.hovering) {
		      selectedValue.length = 1;
		      selectedValue[0] = value;
		      changed = true;
		    } else if (this.compare(selectedValue[0], value) <= 0) {
		      selectedValue[1] = value;
		      changed = true;
		    } else if (this.compare(selectedValue[0], value) > 0) {
		      selectedValue.length = 1;
		      selectedValue[0] = value;
		      changed = true;
		    }
		    if (changed) {
		      this.fireSelectValueChange(selectedValue);
		    }
		  },
		  onDayHover: function onDayHover(hoverValue) {
		    var selectedValue = this.state.selectedValue;
		    if (!selectedValue.length || selectedValue.length === 2 && !selectedValue.hovering) {
		      return;
		    }
		    if (this.compare(hoverValue, selectedValue[0]) < 0) {
		      return;
		    }
		    selectedValue = selectedValue.concat();
		    selectedValue[1] = hoverValue;
		    selectedValue.hovering = 1;
		    this.fireSelectValueChange(selectedValue);
		  },
		  onToday: function onToday() {
		    this.setState({
		      value: (0, _util.getTodayTime)(this.state.value)
		    });
		  },
		  onOk: function onOk() {
		    this.props.onOk(this.state.selectedValue);
		  },
		  getStartValue: function getStartValue() {
		    var value = this.state.value;
		    var selectedValue = this.state.selectedValue;
		    // keep selectedTime when select date
		    if (selectedValue[0] && this.props.timePicker) {
		      value = value.clone();
		      (0, _util.syncTime)(selectedValue[0], value);
		    }
		    return value;
		  },
		  getEndValue: function getEndValue() {
		    var endValue = this.state.value.clone();
		    endValue.addMonth(1);
		    var selectedValue = this.state.selectedValue;
		    // keep selectedTime when select date
		    if (selectedValue[1] && this.props.timePicker) {
		      (0, _util.syncTime)(selectedValue[1], endValue);
		    }
		    return endValue;
		  },
		  compare: function compare(v1, v2) {
		    if (this.props.timePicker) {
		      return v1.getTime() - v2.getTime();
		    }
		    return v1.compareToDay(v2);
		  },
		  fireSelectValueChange: function fireSelectValueChange(selectedValue, direct) {
		    if (!('selectedValue' in this.props)) {
		      this.setState({
		        selectedValue: selectedValue
		      });
		    }
		    this.props.onChange(selectedValue);
		    if (direct || selectedValue[0] && selectedValue[1] && !selectedValue.hovering) {
		      this.props.onSelect(selectedValue);
		    }
		  },
		  fireValueChange: function fireValueChange(value) {
		    var props = this.props;
		    if (!('value' in props)) {
		      this.setState({
		        value: value
		      });
		    }
		    props.onValueChange(value);
		  },
		  clear: function clear() {
		    this.fireSelectValueChange([], true);
		    this.props.onClear();
		  },
		  render: function render() {
		    var _className;
		
		    var props = this.props;
		    var state = this.state;
		    var prefixCls = props.prefixCls;
		    var dateInputPlaceholder = props.dateInputPlaceholder;
		    var timePicker = props.timePicker;
		    var showOk = props.showOk;
		    var locale = props.locale;
		
		    var className = (_className = {}, _defineProperty(_className, props.className, !!props.className), _defineProperty(_className, prefixCls, 1), _defineProperty(_className, prefixCls + '-hidden', !props.visible), _defineProperty(_className, prefixCls + '-range', 1), _defineProperty(_className, prefixCls + '-week-number', props.showWeekNumber), _className);
		    var classes = (0, _classnames2["default"])(className);
		    var newProps = {
		      selectedValue: state.selectedValue,
		      onSelect: this.onSelect,
		      onDayHover: this.onDayHover
		    };
		
		    var placeholder1 = void 0;
		    var placeholder2 = void 0;
		
		    if (dateInputPlaceholder) {
		      if (Array.isArray(dateInputPlaceholder)) {
		        var _dateInputPlaceholder = _slicedToArray(dateInputPlaceholder, 2);
		
		        placeholder1 = _dateInputPlaceholder[0];
		        placeholder2 = _dateInputPlaceholder[1];
		      } else {
		        placeholder1 = placeholder2 = dateInputPlaceholder;
		      }
		    }
		    return _react2["default"].createElement(
		      'div',
		      {
		        ref: 'root',
		        className: classes,
		        style: props.style,
		        tabIndex: '0'
		      },
		      _react2["default"].createElement('a', {
		        className: prefixCls + '-clear-btn',
		        role: 'button',
		        title: locale.clear,
		        onClick: this.clear
		      }),
		      _react2["default"].createElement(_CalendarPart2["default"], _extends({}, props, newProps, {
		        direction: 'left',
		        formatter: this.getFormatter(),
		        value: this.getStartValue(),
		        placeholder: placeholder1,
		        onInputSelect: onInputSelect.bind(this, 'left'),
		        onValueChange: onValueChange.bind(this, 'left')
		      })),
		      _react2["default"].createElement(
		        'span',
		        { className: prefixCls + '-range-middle' },
		        '~'
		      ),
		      _react2["default"].createElement(_CalendarPart2["default"], _extends({}, props, newProps, {
		        direction: 'right',
		        formatter: this.getFormatter(),
		        placeholder: placeholder2,
		        value: this.getEndValue(),
		        onInputSelect: onInputSelect.bind(this, 'right'),
		        onValueChange: onValueChange.bind(this, 'right')
		      })),
		      _react2["default"].createElement(
		        'div',
		        { className: prefixCls + '-range-bottom' },
		        _react2["default"].createElement(_TodayButton2["default"], _extends({}, props, {
		          value: state.value,
		          onToday: this.onToday,
		          text: locale.backToToday
		        })),
		        showOk === true || showOk !== false && !!timePicker ? _react2["default"].createElement(_OkButton2["default"], _extends({}, props, {
		          value: state.value,
		          onOk: this.onOk,
		          okDisabled: state.selectedValue.length !== 2 || state.selectedValue.hovering
		        })) : null
		      )
		    );
		  }
		});
		
		exports["default"] = RangeCalendar;
		module.exports = exports['default'];
	
	/***/ },
	/* 293 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _reactDom = __webpack_require__(4);
		
		var _reactDom2 = _interopRequireDefault(_reactDom);
		
		var _mapSelf = __webpack_require__(48);
		
		var _mapSelf2 = _interopRequireDefault(_mapSelf);
		
		var _TodayButton = __webpack_require__(97);
		
		var _TodayButton2 = _interopRequireDefault(_TodayButton);
		
		var _OkButton = __webpack_require__(96);
		
		var _OkButton2 = _interopRequireDefault(_OkButton);
		
		var _index = __webpack_require__(12);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		var CalendarFooter = _react2["default"].createClass({
		  displayName: 'CalendarFooter',
		
		  propTypes: {
		    prefixCls: _react.PropTypes.string,
		    showDateInput: _react.PropTypes.bool,
		    disabledTime: _react.PropTypes.any,
		    gregorianCalendarLocale: _react.PropTypes.object,
		    selectedValue: _react.PropTypes.any,
		    showOk: _react.PropTypes.bool,
		    onSelect: _react.PropTypes.func,
		    value: _react.PropTypes.object,
		    defaultValue: _react.PropTypes.object
		  },
		
		  onSelect: function onSelect(value) {
		    this.props.onSelect(value);
		  },
		  getRootDOMNode: function getRootDOMNode() {
		    return _reactDom2["default"].findDOMNode(this);
		  },
		  render: function render() {
		    var props = this.props;
		    var value = props.value;
		    var prefixCls = props.prefixCls;
		    var showDateInput = props.showDateInput;
		    var disabledTime = props.disabledTime;
		    var gregorianCalendarLocale = props.gregorianCalendarLocale;
		    var selectedValue = props.selectedValue;
		    var showOk = props.showOk;
		
		    var timePicker = !showDateInput && props.timePicker || null;
		    var disabledTimeConfig = disabledTime && timePicker ? (0, _index.getTimeConfig)(selectedValue, disabledTime) : null;
		    var footerEl = null;
		    if (props.showToday || timePicker) {
		      var nowEl = void 0;
		      if (props.showToday) {
		        nowEl = _react2["default"].createElement(_TodayButton2["default"], _extends({}, props, { value: value }));
		      }
		      var okBtn = void 0;
		      if (showOk === true || showOk !== false && !!props.timePicker) {
		        okBtn = _react2["default"].createElement(_OkButton2["default"], props);
		      }
		      var footerBtn = void 0;
		      if (nowEl || okBtn) {
		        footerBtn = _react2["default"].createElement(
		          'span',
		          { className: prefixCls + '-footer-btn' },
		          (0, _mapSelf2["default"])([nowEl, okBtn])
		        );
		      }
		      if (timePicker) {
		        timePicker = _react2["default"].cloneElement(timePicker, _extends({
		          onChange: this.onSelect,
		          allowEmpty: false,
		          gregorianCalendarLocale: gregorianCalendarLocale
		        }, disabledTimeConfig, {
		          getPopupContainer: this.getRootDOMNode,
		          value: selectedValue
		        }));
		      }
		      footerEl = _react2["default"].createElement(
		        'div',
		        { className: prefixCls + '-footer' },
		        timePicker,
		        footerBtn
		      );
		    }
		    return footerEl;
		  }
		});
		
		exports["default"] = CalendarFooter;
		module.exports = exports['default'];
	
	/***/ },
	/* 294 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _DateConstants = __webpack_require__(98);
		
		var _DateConstants2 = _interopRequireDefault(_DateConstants);
		
		var _util = __webpack_require__(12);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function isSameDay(one, two) {
		  return one && two && one.compareToDay(two) === 0;
		}
		
		function beforeCurrentMonthYear(current, today) {
		  if (current.getYear() < today.getYear()) {
		    return 1;
		  }
		  return current.getYear() === today.getYear() && current.getMonth() < today.getMonth();
		}
		
		function afterCurrentMonthYear(current, today) {
		  if (current.getYear() > today.getYear()) {
		    return 1;
		  }
		  return current.getYear() === today.getYear() && current.getMonth() > today.getMonth();
		}
		
		function getIdFromDate(date) {
		  return 'rc-calendar-' + date.getYear() + '-' + date.getMonth() + '-' + date.getDayOfMonth();
		}
		
		function noop() {}
		
		function handleDayClick(current) {
		  this.props.onSelect(current);
		}
		
		function handleCellMouseEnter(current) {
		  this.props.onDayHover(current);
		}
		
		var DateTBody = _react2["default"].createClass({
		  displayName: 'DateTBody',
		
		  propTypes: {
		    contentRender: _react.PropTypes.func,
		    dateRender: _react.PropTypes.func,
		    disabledDate: _react.PropTypes.func,
		    prefixCls: _react.PropTypes.string,
		    selectedValue: _react.PropTypes.oneOfType([_react.PropTypes.object, _react.PropTypes.arrayOf(_react.PropTypes.object)]),
		    value: _react.PropTypes.object,
		    showWeekNumber: _react.PropTypes.bool
		  },
		
		  getDefaultProps: function getDefaultProps() {
		    return {
		      onDayHover: noop
		    };
		  },
		  render: function render() {
		    var props = this.props;
		    var contentRender = props.contentRender;
		    var prefixCls = props.prefixCls;
		    var selectedValue = props.selectedValue;
		    var value = props.value;
		    var showWeekNumber = props.showWeekNumber;
		    var dateRender = props.dateRender;
		    var disabledDate = props.disabledDate;
		
		    var iIndex = void 0;
		    var jIndex = void 0;
		    var current = void 0;
		    var dateTable = [];
		    var today = value.clone();
		    var cellClass = prefixCls + '-cell';
		    var weekNumberCellClass = prefixCls + '-week-number-cell';
		    var dateClass = prefixCls + '-date';
		    var todayClass = prefixCls + '-today';
		    var selectedClass = prefixCls + '-selected-day';
		    var inRangeClass = prefixCls + '-in-range-cell';
		    var lastMonthDayClass = prefixCls + '-last-month-cell';
		    var nextMonthDayClass = prefixCls + '-next-month-btn-day';
		    var disabledClass = prefixCls + '-disabled-cell';
		    var firstDisableClass = prefixCls + '-disabled-cell-first-of-row';
		    var lastDisableClass = prefixCls + '-disabled-cell-last-of-row';
		    today.setTime(Date.now());
		    var month1 = value.clone();
		    month1.set(value.getYear(), value.getMonth(), 1);
		    var day = month1.getDayOfWeek();
		    var lastMonthDiffDay = (day + 7 - value.getFirstDayOfWeek()) % 7;
		    // calculate last month
		    var lastMonth1 = month1.clone();
		    lastMonth1.addDayOfMonth(0 - lastMonthDiffDay);
		    var passed = 0;
		    for (iIndex = 0; iIndex < _DateConstants2["default"].DATE_ROW_COUNT; iIndex++) {
		      for (jIndex = 0; jIndex < _DateConstants2["default"].DATE_COL_COUNT; jIndex++) {
		        current = lastMonth1;
		        if (passed) {
		          current = current.clone();
		          current.addDayOfMonth(passed);
		        }
		        dateTable.push(current);
		        passed++;
		      }
		    }
		    var tableHtml = [];
		    passed = 0;
		    for (iIndex = 0; iIndex < _DateConstants2["default"].DATE_ROW_COUNT; iIndex++) {
		      var weekNumberCell = void 0;
		      var dateCells = [];
		      if (showWeekNumber) {
		        weekNumberCell = _react2["default"].createElement(
		          'td',
		          {
		            key: dateTable[passed].getWeekOfYear(),
		            role: 'gridcell',
		            className: weekNumberCellClass
		          },
		          dateTable[passed].getWeekOfYear()
		        );
		      }
		      for (jIndex = 0; jIndex < _DateConstants2["default"].DATE_COL_COUNT; jIndex++) {
		        var next = null;
		        var last = null;
		        current = dateTable[passed];
		        if (jIndex < _DateConstants2["default"].DATE_COL_COUNT - 1) {
		          next = dateTable[passed + 1];
		        }
		        if (jIndex > 0) {
		          last = dateTable[passed - 1];
		        }
		        var cls = cellClass;
		        var disabled = false;
		        var selected = false;
		
		        if (isSameDay(current, today)) {
		          cls += ' ' + todayClass;
		        }
		
		        var isBeforeCurrentMonthYear = beforeCurrentMonthYear(current, value);
		        var isAfterCurrentMonthYear = afterCurrentMonthYear(current, value);
		
		        if (selectedValue && Array.isArray(selectedValue)) {
		          if (!isBeforeCurrentMonthYear && !isAfterCurrentMonthYear) {
		            var startValue = selectedValue[0];
		            var endValue = selectedValue[1];
		            if (startValue) {
		              if (isSameDay(current, startValue)) {
		                selected = true;
		              }
		            }
		            if (startValue && endValue) {
		              if (isSameDay(current, endValue) && !selectedValue.hovering) {
		                selected = true;
		              } else if (current.compareToDay(startValue) > 0 && current.compareToDay(endValue) < 0) {
		                cls += ' ' + inRangeClass;
		              }
		            }
		          }
		        } else if (isSameDay(current, value)) {
		          // keyboard change value, highlight works
		          selected = true;
		        }
		        if (isBeforeCurrentMonthYear) {
		          cls += ' ' + lastMonthDayClass;
		        }
		        if (isAfterCurrentMonthYear) {
		          cls += ' ' + nextMonthDayClass;
		        }
		
		        if (disabledDate) {
		          if (disabledDate(current, value)) {
		            disabled = true;
		
		            if (!last || !disabledDate(last, value)) {
		              cls += ' ' + firstDisableClass;
		            }
		
		            if (!next || !disabledDate(next, value)) {
		              cls += ' ' + lastDisableClass;
		            }
		          }
		        }
		
		        if (selected) {
		          cls += ' ' + selectedClass;
		        }
		
		        if (disabled) {
		          cls += ' ' + disabledClass;
		        }
		
		        var dateHtml = void 0;
		        if (dateRender) {
		          dateHtml = dateRender(current, value);
		        } else {
		          var content = contentRender ? contentRender(current, value) : current.getDayOfMonth();
		          dateHtml = _react2["default"].createElement(
		            'div',
		            {
		              key: getIdFromDate(current),
		              className: dateClass,
		              'aria-selected': selected,
		              'aria-disabled': disabled
		            },
		            content
		          );
		        }
		
		        dateCells.push(_react2["default"].createElement(
		          'td',
		          {
		            key: passed,
		            onClick: disabled ? noop : handleDayClick.bind(this, current),
		            onMouseEnter: disabled ? noop : handleCellMouseEnter.bind(this, current),
		            role: 'gridcell',
		            title: (0, _util.getTitleString)(current), className: cls
		          },
		          dateHtml
		        ));
		
		        passed++;
		      }
		      tableHtml.push(_react2["default"].createElement(
		        'tr',
		        {
		          key: iIndex,
		          role: 'row'
		        },
		        weekNumberCell,
		        dateCells
		      ));
		    }
		    return _react2["default"].createElement(
		      'tbody',
		      { className: prefixCls + 'tbody' },
		      tableHtml
		    );
		  }
		});
		
		exports["default"] = DateTBody;
		module.exports = exports['default'];
	
	/***/ },
	/* 295 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _DateConstants = __webpack_require__(98);
		
		var _DateConstants2 = _interopRequireDefault(_DateConstants);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var DateTHead = function (_React$Component) {
		  _inherits(DateTHead, _React$Component);
		
		  function DateTHead() {
		    _classCallCheck(this, DateTHead);
		
		    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
		  }
		
		  DateTHead.prototype.render = function render() {
		    var props = this.props;
		    var value = props.value;
		    var locale = props.locale;
		    var prefixCls = props.prefixCls;
		    var veryShortWeekdays = [];
		    var weekDays = [];
		    var firstDayOfWeek = value.getFirstDayOfWeek();
		    var showWeekNumberEl = void 0;
		
		    for (var dateColIndex = 0; dateColIndex < _DateConstants2["default"].DATE_COL_COUNT; dateColIndex++) {
		      var index = (firstDayOfWeek + dateColIndex) % _DateConstants2["default"].DATE_COL_COUNT;
		      veryShortWeekdays[dateColIndex] = locale.format.veryShortWeekdays[index];
		      weekDays[dateColIndex] = locale.format.weekdays[index];
		    }
		
		    if (props.showWeekNumber) {
		      showWeekNumberEl = _react2["default"].createElement(
		        'th',
		        {
		          role: 'columnheader',
		          className: prefixCls + '-column-header ' + prefixCls + '-week-number-header'
		        },
		        _react2["default"].createElement(
		          'span',
		          { className: prefixCls + '-column-header-inner' },
		          'x'
		        )
		      );
		    }
		    var weekDaysEls = weekDays.map(function (day, xindex) {
		      return _react2["default"].createElement(
		        'th',
		        {
		          key: xindex,
		          role: 'columnheader',
		          title: day,
		          className: prefixCls + '-column-header'
		        },
		        _react2["default"].createElement(
		          'span',
		          { className: prefixCls + '-column-header-inner' },
		          veryShortWeekdays[xindex]
		        )
		      );
		    });
		    return _react2["default"].createElement(
		      'thead',
		      null,
		      _react2["default"].createElement(
		        'tr',
		        { role: 'row' },
		        showWeekNumberEl,
		        weekDaysEls
		      )
		    );
		  };
		
		  return DateTHead;
		}(_react2["default"].Component);
		
		exports["default"] = DateTHead;
		module.exports = exports['default'];
	
	/***/ },
	/* 296 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var ROW = 4;
		var COL = 3;
		
		
		function goYear(direction) {
		  var next = this.state.value.clone();
		  next.addYear(direction);
		  this.setState({
		    value: next
		  });
		}
		
		function chooseDecade(year, event) {
		  var next = this.state.value.clone();
		  next.setYear(year);
		  next.rollSetMonth(this.state.value.getMonth());
		  this.props.onSelect(next);
		  event.preventDefault();
		}
		
		var DecadePanel = function (_React$Component) {
		  _inherits(DecadePanel, _React$Component);
		
		  function DecadePanel(props) {
		    _classCallCheck(this, DecadePanel);
		
		    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));
		
		    _this.state = {
		      value: props.value || props.defaultValue
		    };
		
		    // bind methods
		    _this.prefixCls = props.rootPrefixCls + '-decade-panel';
		    _this.nextCentury = goYear.bind(_this, 100);
		    _this.previousCentury = goYear.bind(_this, -100);
		    return _this;
		  }
		
		  DecadePanel.prototype.render = function render() {
		    var _this2 = this;
		
		    var value = this.state.value;
		    var locale = this.props.locale;
		    var currentYear = value.getYear();
		    var startYear = parseInt(currentYear / 100, 10) * 100;
		    var preYear = startYear - 10;
		    var endYear = startYear + 99;
		    var decades = [];
		    var index = 0;
		    var prefixCls = this.prefixCls;
		
		    for (var rowIndex = 0; rowIndex < ROW; rowIndex++) {
		      decades[rowIndex] = [];
		      for (var colIndex = 0; colIndex < COL; colIndex++) {
		        var startDecade = preYear + index * 10;
		        var endDecade = preYear + index * 10 + 9;
		        decades[rowIndex][colIndex] = {
		          startDecade: startDecade,
		          endDecade: endDecade
		        };
		        index++;
		      }
		    }
		
		    var decadesEls = decades.map(function (row, decadeIndex) {
		      var tds = row.map(function (decadeData) {
		        var _classNameMap;
		
		        var dStartDecade = decadeData.startDecade;
		        var dEndDecade = decadeData.endDecade;
		        var isLast = dStartDecade < startYear;
		        var isNext = dEndDecade > endYear;
		        var classNameMap = (_classNameMap = {}, _defineProperty(_classNameMap, prefixCls + '-cell', 1), _defineProperty(_classNameMap, prefixCls + '-selected-cell', dStartDecade <= currentYear && currentYear <= dEndDecade), _defineProperty(_classNameMap, prefixCls + '-last-century-cell', isLast), _defineProperty(_classNameMap, prefixCls + '-next-century-cell', isNext), _classNameMap);
		        var content = void 0;
		        var clickHandler = void 0;
		        if (isLast) {
		          clickHandler = _this2.previousCentury;
		        } else if (isNext) {
		          clickHandler = _this2.nextCentury;
		        } else {
		          content = dStartDecade + '-' + dEndDecade;
		          clickHandler = chooseDecade.bind(_this2, dStartDecade);
		        }
		        return _react2["default"].createElement(
		          'td',
		          {
		            key: dStartDecade,
		            onClick: clickHandler,
		            role: 'gridcell',
		            className: (0, _classnames2["default"])(classNameMap)
		          },
		          _react2["default"].createElement(
		            'a',
		            {
		              className: prefixCls + '-decade'
		            },
		            content
		          )
		        );
		      });
		      return _react2["default"].createElement(
		        'tr',
		        { key: decadeIndex, role: 'row' },
		        tds
		      );
		    });
		
		    return _react2["default"].createElement(
		      'div',
		      { className: this.prefixCls },
		      _react2["default"].createElement(
		        'div',
		        { className: prefixCls + '-header' },
		        _react2["default"].createElement(
		          'a',
		          {
		            className: prefixCls + '-prev-century-btn',
		            role: 'button',
		            onClick: this.previousCentury,
		            title: locale.previousCentury
		          },
		          '«'
		        ),
		        _react2["default"].createElement(
		          'div',
		          { className: prefixCls + '-century' },
		          startYear,
		          '-',
		          endYear
		        ),
		        _react2["default"].createElement(
		          'a',
		          {
		            className: prefixCls + '-next-century-btn',
		            role: 'button',
		            onClick: this.nextCentury,
		            title: locale.nextCentury
		          },
		          '»'
		        )
		      ),
		      _react2["default"].createElement(
		        'div',
		        { className: prefixCls + '-body' },
		        _react2["default"].createElement(
		          'table',
		          { className: prefixCls + '-table', cellSpacing: '0', role: 'grid' },
		          _react2["default"].createElement(
		            'tbody',
		            { className: prefixCls + '-tbody' },
		            decadesEls
		          )
		        )
		      )
		    );
		  };
		
		  return DecadePanel;
		}(_react2["default"].Component);
		
		exports["default"] = DecadePanel;
		
		
		DecadePanel.propTypes = {
		  locale: _react.PropTypes.object,
		  value: _react.PropTypes.object,
		  defaultValue: _react.PropTypes.object,
		  rootPrefixCls: _react.PropTypes.string
		};
		
		DecadePanel.defaultProps = {
		  onSelect: function onSelect() {}
		};
		module.exports = exports['default'];
	
	/***/ },
	/* 297 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		function noop() {}
		
		var CalendarHeader = function (_Component) {
		  _inherits(CalendarHeader, _Component);
		
		  function CalendarHeader() {
		    _classCallCheck(this, CalendarHeader);
		
		    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
		  }
		
		  CalendarHeader.prototype.onYearChange = function onYearChange(year) {
		    var newValue = this.props.value.clone();
		    newValue.setYear(parseInt(year, 10));
		    this.props.onValueChange(newValue);
		  };
		
		  CalendarHeader.prototype.onMonthChange = function onMonthChange(month) {
		    var newValue = this.props.value.clone();
		    newValue.setMonth(parseInt(month, 10));
		    this.props.onValueChange(newValue);
		  };
		
		  CalendarHeader.prototype.getYearSelectElement = function getYearSelectElement(year) {
		    var _props = this.props;
		    var yearSelectOffset = _props.yearSelectOffset;
		    var yearSelectTotal = _props.yearSelectTotal;
		    var locale = _props.locale;
		    var prefixCls = _props.prefixCls;
		    var Select = _props.Select;
		
		    var start = year - yearSelectOffset;
		    var end = start + yearSelectTotal;
		    var suffix = locale.year === '年' ? '年' : '';
		
		    var options = [];
		    for (var index = start; index < end; index++) {
		      options.push(_react2["default"].createElement(
		        Select.Option,
		        { key: '' + index },
		        index + suffix
		      ));
		    }
		    return _react2["default"].createElement(
		      Select,
		      {
		        className: prefixCls + '-header-year-select',
		        onChange: this.onYearChange.bind(this),
		        dropdownStyle: { zIndex: 2000 },
		        dropdownMenuStyle: { maxHeight: 250, overflow: 'auto', fontSize: 12 },
		        optionLabelProp: 'children',
		        value: String(year),
		        showSearch: false
		      },
		      options
		    );
		  };
		
		  CalendarHeader.prototype.getMonthSelectElement = function getMonthSelectElement(month) {
		    var props = this.props;
		    var months = props.locale.format.months;
		    var prefixCls = props.prefixCls;
		
		    var options = [];
		    var Select = props.Select;
		
		    for (var index = 0; index < 12; index++) {
		      options.push(_react2["default"].createElement(
		        Select.Option,
		        { key: '' + index },
		        months[index]
		      ));
		    }
		
		    return _react2["default"].createElement(
		      Select,
		      {
		        className: prefixCls + '-header-month-select',
		        dropdownStyle: { zIndex: 2000 },
		        dropdownMenuStyle: { maxHeight: 250, overflow: 'auto', overflowX: 'hidden', fontSize: 12 },
		        optionLabelProp: 'children',
		        value: String(month),
		        showSearch: false,
		        onChange: this.onMonthChange.bind(this)
		      },
		      options
		    );
		  };
		
		  CalendarHeader.prototype.changeTypeToDate = function changeTypeToDate() {
		    this.props.onTypeChange('date');
		  };
		
		  CalendarHeader.prototype.changeTypeToMonth = function changeTypeToMonth() {
		    this.props.onTypeChange('month');
		  };
		
		  CalendarHeader.prototype.render = function render() {
		    var _props2 = this.props;
		    var value = _props2.value;
		    var locale = _props2.locale;
		    var prefixCls = _props2.prefixCls;
		    var type = _props2.type;
		    var showTypeSwitch = _props2.showTypeSwitch;
		    var headerComponents = _props2.headerComponents;
		
		    var year = value.getYear();
		    var month = value.getMonth();
		    var yearSelect = this.getYearSelectElement(year);
		    var monthSelect = type === 'month' ? null : this.getMonthSelectElement(month);
		    var switchCls = prefixCls + '-header-switcher';
		    var typeSwitcher = showTypeSwitch ? _react2["default"].createElement(
		      'span',
		      { className: switchCls },
		      type === 'date' ? _react2["default"].createElement(
		        'span',
		        { className: switchCls + '-focus' },
		        locale.month
		      ) : _react2["default"].createElement(
		        'span',
		        {
		          onClick: this.changeTypeToDate.bind(this),
		          className: switchCls + '-normal'
		        },
		        locale.month
		      ),
		      type === 'month' ? _react2["default"].createElement(
		        'span',
		        { className: switchCls + '-focus' },
		        locale.year
		      ) : _react2["default"].createElement(
		        'span',
		        {
		          onClick: this.changeTypeToMonth.bind(this),
		          className: switchCls + '-normal'
		        },
		        locale.year
		      )
		    ) : null;
		
		    return _react2["default"].createElement(
		      'div',
		      { className: prefixCls + '-header' },
		      typeSwitcher,
		      monthSelect,
		      yearSelect,
		      headerComponents
		    );
		  };
		
		  return CalendarHeader;
		}(_react.Component);
		
		CalendarHeader.propTypes = {
		  value: _react.PropTypes.object,
		  locale: _react.PropTypes.object,
		  yearSelectOffset: _react.PropTypes.number,
		  yearSelectTotal: _react.PropTypes.number,
		  onValueChange: _react.PropTypes.func,
		  onTypeChange: _react.PropTypes.func,
		  Select: _react.PropTypes.func,
		  prefixCls: _react.PropTypes.string,
		  type: _react.PropTypes.string,
		  showTypeSwitch: _react.PropTypes.bool,
		  headerComponents: _react.PropTypes.array
		};
		CalendarHeader.defaultProps = {
		  yearSelectOffset: 10,
		  yearSelectTotal: 20,
		  onValueChange: noop,
		  onTypeChange: noop
		};
		
		exports["default"] = CalendarHeader;
		module.exports = exports['default'];
	
	/***/ },
	/* 298 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _en_US = __webpack_require__(44);
		
		var _en_US2 = _interopRequireDefault(_en_US);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		exports["default"] = {
		  today: 'Today',
		  now: 'Now',
		  backToToday: 'Back to today',
		  ok: 'Ok',
		  clear: 'Clear',
		  month: 'Month',
		  year: 'Year',
		  monthSelect: 'Choose a month',
		  yearSelect: 'Choose a year',
		  decadeSelect: 'Choose a decade',
		  yearFormat: 'yyyy',
		  dateFormat: 'M/d/yyyy',
		  monthFormat: 'MMMM',
		  monthBeforeYear: true,
		  previousMonth: 'Previous month (PageUp)',
		  nextMonth: 'Next month (PageDown)',
		  previousYear: 'Last year (Control + left)',
		  nextYear: 'Next year (Control + right)',
		  previousDecade: 'Last decade',
		  nextDecade: 'Next decade',
		  previousCentury: 'Last century',
		  nextCentury: 'Next century',
		  format: _en_US2["default"]
		};
		module.exports = exports['default'];
	
	/***/ },
	/* 299 */
	/***/ function(module, exports) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		var autoAdjustOverflow = {
		  adjustX: 1,
		  adjustY: 1
		};
		
		var targetOffset = [0, 0];
		
		var placements = {
		  bottomLeft: {
		    points: ['tl', 'tl'],
		    overflow: autoAdjustOverflow,
		    offset: [0, -3],
		    targetOffset: targetOffset
		  },
		  bottomRight: {
		    points: ['tr', 'tr'],
		    overflow: autoAdjustOverflow,
		    offset: [0, -3],
		    targetOffset: targetOffset
		  },
		  topRight: {
		    points: ['br', 'br'],
		    overflow: autoAdjustOverflow,
		    offset: [0, 3],
		    targetOffset: targetOffset
		  },
		  topLeft: {
		    points: ['bl', 'bl'],
		    overflow: autoAdjustOverflow,
		    offset: [0, 3],
		    targetOffset: targetOffset
		  }
		};
		
		exports["default"] = placements;
		module.exports = exports['default'];
	
	/***/ },
	/* 300 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _CalendarHeader = __webpack_require__(95);
		
		var _CalendarHeader2 = _interopRequireDefault(_CalendarHeader);
		
		var _DateTable = __webpack_require__(45);
		
		var _DateTable2 = _interopRequireDefault(_DateTable);
		
		var _DateInput = __webpack_require__(99);
		
		var _DateInput2 = _interopRequireDefault(_DateInput);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		var CalendarPart = _react2["default"].createClass({
		  displayName: 'CalendarPart',
		
		  propTypes: {
		    value: _react.PropTypes.any,
		    direction: _react.PropTypes.any,
		    prefixCls: _react.PropTypes.any,
		    locale: _react.PropTypes.any,
		    selectedValue: _react.PropTypes.any,
		    formatter: _react.PropTypes.any,
		    placeholder: _react.PropTypes.any,
		    disabledDate: _react.PropTypes.any,
		    timePicker: _react.PropTypes.any,
		    disabledTime: _react.PropTypes.any
		  },
		  render: function render() {
		    var props = this.props;
		    var value = props.value;
		    var direction = props.direction;
		    var prefixCls = props.prefixCls;
		    var locale = props.locale;
		    var selectedValue = props.selectedValue;
		    var formatter = props.formatter;
		    var placeholder = props.placeholder;
		    var disabledDate = props.disabledDate;
		    var timePicker = props.timePicker;
		    var disabledTime = props.disabledTime;
		
		    var rangeClassName = prefixCls + '-range';
		    var newProps = {
		      locale: locale,
		      value: value,
		      prefixCls: prefixCls
		    };
		    var index = direction === 'left' ? 0 : 1;
		    return _react2["default"].createElement(
		      'div',
		      { className: rangeClassName + '-part ' + rangeClassName + '-' + direction },
		      _react2["default"].createElement(_DateInput2["default"], {
		        formatter: formatter,
		        locale: locale,
		        prefixCls: prefixCls,
		        timePicker: timePicker,
		        disabledDate: disabledDate,
		        placeholder: placeholder,
		        disabledTime: disabledTime,
		        gregorianCalendarLocale: value.locale,
		        showClear: false,
		        selectedValue: selectedValue[index],
		        onChange: props.onInputSelect
		      }),
		      _react2["default"].createElement(
		        'div',
		        { style: { outline: 'none' } },
		        _react2["default"].createElement(_CalendarHeader2["default"], _extends({}, newProps, {
		          enableNext: direction === 'right',
		          enablePrev: direction === 'left',
		          onValueChange: props.onValueChange
		        })),
		        _react2["default"].createElement(
		          'div',
		          { className: prefixCls + '-calendar-body' },
		          _react2["default"].createElement(_DateTable2["default"], _extends({}, newProps, {
		            selectedValue: selectedValue,
		            dateRender: props.dateRender,
		            onSelect: props.onSelect,
		            onDayHover: props.onDayHover,
		            disabledDate: disabledDate,
		            showWeekNumber: props.showWeekNumber
		          }))
		        )
		      )
		    );
		  }
		});
		
		exports["default"] = CalendarPart;
		module.exports = exports['default'];
	
	/***/ },
	/* 301 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _rcTrigger = __webpack_require__(17);
		
		var _rcTrigger2 = _interopRequireDefault(_rcTrigger);
		
		var _Menus = __webpack_require__(302);
		
		var _Menus2 = _interopRequireDefault(_Menus);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var BUILT_IN_PLACEMENTS = {
		  bottomLeft: {
		    points: ['tl', 'bl'],
		    offset: [0, 4],
		    overflow: {
		      adjustX: 1,
		      adjustY: 1
		    }
		  },
		  topLeft: {
		    points: ['bl', 'tl'],
		    offset: [0, -4],
		    overflow: {
		      adjustX: 1,
		      adjustY: 1
		    }
		  },
		  bottomRight: {
		    points: ['tr', 'br'],
		    offset: [0, 4],
		    overflow: {
		      adjustX: 1,
		      adjustY: 1
		    }
		  },
		  topRight: {
		    points: ['br', 'tr'],
		    offset: [0, -4],
		    overflow: {
		      adjustX: 1,
		      adjustY: 1
		    }
		  }
		};
		
		var Cascader = function (_React$Component) {
		  _inherits(Cascader, _React$Component);
		
		  function Cascader(props) {
		    _classCallCheck(this, Cascader);
		
		    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));
		
		    _this.setPopupVisible = function (popupVisible) {
		      if (!('popupVisible' in _this.props)) {
		        _this.setState({ popupVisible: popupVisible });
		      }
		      // sync activeValue with value when panel open
		      if (popupVisible && !_this.state.visible) {
		        _this.setState({
		          activeValue: _this.state.value
		        });
		      }
		      _this.props.onPopupVisibleChange(popupVisible);
		    };
		
		    _this.handleChange = function (options, setProps) {
		      _this.props.onChange(options.map(function (o) {
		        return o.value;
		      }), options);
		      _this.setPopupVisible(setProps.visible);
		    };
		
		    _this.handlePopupVisibleChange = function (popupVisible) {
		      _this.setPopupVisible(popupVisible);
		    };
		
		    _this.handleSelect = function (_ref) {
		      var info = _objectWithoutProperties(_ref, []);
		
		      if ('value' in _this.props) {
		        delete info.value;
		      }
		      _this.setState(info);
		    };
		
		    var initialValue = [];
		    if ('value' in props) {
		      initialValue = props.value || [];
		    } else if ('defaultValue' in props) {
		      initialValue = props.defaultValue || [];
		    }
		
		    _this.state = {
		      popupVisible: props.popupVisible,
		      activeValue: initialValue,
		      value: initialValue
		    };
		    return _this;
		  }
		
		  Cascader.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
		    if ('value' in nextProps && this.props.value !== nextProps.value) {
		      this.setState({
		        value: nextProps.value || [],
		        activeValue: nextProps.value || []
		      });
		    }
		    if ('popupVisible' in nextProps) {
		      this.setState({
		        popupVisible: nextProps.popupVisible
		      });
		    }
		  };
		
		  Cascader.prototype.getPopupDOMNode = function getPopupDOMNode() {
		    return this.refs.trigger.getPopupDomNode();
		  };
		
		  Cascader.prototype.render = function render() {
		    var props = this.props;
		    var prefixCls = props.prefixCls;
		    var transitionName = props.transitionName;
		    var popupClassName = props.popupClassName;
		    var popupPlacement = props.popupPlacement;
		
		    var restProps = _objectWithoutProperties(props, ['prefixCls', 'transitionName', 'popupClassName', 'popupPlacement']);
		    // Did not show popup when there is no options
		
		
		    var menus = _react2["default"].createElement('div', null);
		    var emptyMenuClassName = '';
		    if (props.options && props.options.length > 0) {
		      menus = _react2["default"].createElement(_Menus2["default"], _extends({}, props, {
		        value: this.state.value,
		        activeValue: this.state.activeValue,
		        onSelect: this.handleSelect,
		        onChange: this.handleChange,
		        visible: this.state.popupVisible
		      }));
		    } else {
		      emptyMenuClassName = ' ' + prefixCls + '-menus-empty';
		    }
		    return _react2["default"].createElement(
		      _rcTrigger2["default"],
		      _extends({ ref: 'trigger'
		      }, restProps, {
		        popupPlacement: popupPlacement,
		        builtinPlacements: BUILT_IN_PLACEMENTS,
		        popupTransitionName: transitionName,
		        action: props.disabled ? [] : ['click'],
		        popupVisible: props.disabled ? false : this.state.popupVisible,
		        onPopupVisibleChange: this.handlePopupVisibleChange,
		        prefixCls: prefixCls + '-menus',
		        popupClassName: popupClassName + emptyMenuClassName,
		        popup: menus
		      }),
		      props.children
		    );
		  };
		
		  return Cascader;
		}(_react2["default"].Component);
		
		Cascader.defaultProps = {
		  options: [],
		  onChange: function onChange() {},
		  onPopupVisibleChange: function onPopupVisibleChange() {},
		
		  disabled: false,
		  transitionName: '',
		  prefixCls: 'rc-cascader',
		  popupClassName: '',
		  popupPlacement: 'bottomLeft'
		};
		
		Cascader.propTypes = {
		  value: _react2["default"].PropTypes.array,
		  defaultValue: _react2["default"].PropTypes.array,
		  options: _react2["default"].PropTypes.array.isRequired,
		  onChange: _react2["default"].PropTypes.func,
		  onPopupVisibleChange: _react2["default"].PropTypes.func,
		  popupVisible: _react2["default"].PropTypes.bool,
		  disabled: _react2["default"].PropTypes.bool,
		  transitionName: _react2["default"].PropTypes.string,
		  popupClassName: _react2["default"].PropTypes.string,
		  popupPlacement: _react2["default"].PropTypes.string,
		  prefixCls: _react2["default"].PropTypes.string
		};
		
		exports["default"] = Cascader;
		module.exports = exports['default'];
	
	/***/ },
	/* 302 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _arrayTreeFilter = __webpack_require__(53);
		
		var _arrayTreeFilter2 = _interopRequireDefault(_arrayTreeFilter);
		
		var _reactDom = __webpack_require__(4);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var Menus = function (_React$Component) {
		  _inherits(Menus, _React$Component);
		
		  function Menus() {
		    _classCallCheck(this, Menus);
		
		    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
		  }
		
		  Menus.prototype.componentDidMount = function componentDidMount() {
		    this.scrollActiveItemToView();
		  };
		
		  Menus.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
		    if (!prevProps.visible && this.props.visible) {
		      this.scrollActiveItemToView();
		    }
		  };
		
		  Menus.prototype.onSelect = function onSelect(targetOption, menuIndex) {
		    if (!targetOption || targetOption.disabled) {
		      return;
		    }
		    var activeValue = this.props.activeValue;
		    activeValue = activeValue.slice(0, menuIndex + 1);
		    activeValue[menuIndex] = targetOption.value;
		    var activeOptions = this.getActiveOptions(activeValue);
		    if (targetOption.isLeaf === false && !targetOption.children && this.props.loadData) {
		      this.props.onSelect({ activeValue: activeValue });
		      this.props.loadData(activeOptions);
		      return;
		    }
		    var onSelectArgument = {};
		    if (!targetOption.children || !targetOption.children.length) {
		      this.props.onChange(activeOptions, { visible: false });
		      // set value to activeValue when select leaf option
		      onSelectArgument.value = activeValue;
		    } else if (this.props.changeOnSelect) {
		      this.props.onChange(activeOptions, { visible: true });
		      // set value to activeValue on every select
		      onSelectArgument.value = activeValue;
		    }
		    onSelectArgument.activeValue = activeValue;
		    this.props.onSelect(onSelectArgument);
		  };
		
		  Menus.prototype.getOption = function getOption(option, menuIndex) {
		    var _props = this.props;
		    var prefixCls = _props.prefixCls;
		    var expandTrigger = _props.expandTrigger;
		
		    var onSelect = this.onSelect.bind(this, option, menuIndex);
		    var expandProps = {
		      onClick: onSelect
		    };
		    var menuItemCls = prefixCls + '-menu-item';
		    if (expandTrigger === 'hover' && option.children && option.children.length > 0) {
		      expandProps = {
		        onMouseEnter: this.delayOnSelect.bind(this, onSelect),
		        onMouseLeave: this.delayOnSelect.bind(this)
		      };
		      menuItemCls += ' ' + prefixCls + '-menu-item-expand';
		    }
		    if (this.isActiveOption(option)) {
		      menuItemCls += ' ' + prefixCls + '-menu-item-active';
		      expandProps.ref = 'activeItem' + menuIndex;
		    }
		    if (option.disabled) {
		      menuItemCls += ' ' + prefixCls + '-menu-item-disabled';
		    }
		    if (option.loading) {
		      menuItemCls += ' ' + prefixCls + '-menu-item-loading';
		    }
		    var title = '';
		    if (option.title) {
		      title = option.title;
		    } else if (typeof option.label === 'string') {
		      title = option.label;
		    }
		    return _react2["default"].createElement(
		      'li',
		      _extends({
		        key: option.value,
		        className: menuItemCls,
		        title: title
		      }, expandProps),
		      option.label
		    );
		  };
		
		  Menus.prototype.getActiveOptions = function getActiveOptions(values) {
		    var activeValue = values || this.props.activeValue;
		    var options = this.props.options;
		    return (0, _arrayTreeFilter2["default"])(options, function (o, level) {
		      return o.value === activeValue[level];
		    });
		  };
		
		  Menus.prototype.getShowOptions = function getShowOptions() {
		    var options = this.props.options;
		
		    var result = this.getActiveOptions().map(function (activeOption) {
		      return activeOption.children;
		    }).filter(function (activeOption) {
		      return !!activeOption;
		    });
		    result.unshift(options);
		    return result;
		  };
		
		  Menus.prototype.delayOnSelect = function delayOnSelect(onSelect) {
		    var _this2 = this;
		
		    if (this.delayTimer) {
		      clearTimeout(this.delayTimer);
		      this.delayTimer = null;
		    }
		    if (typeof onSelect === 'function') {
		      this.delayTimer = setTimeout(function () {
		        onSelect();
		        _this2.delayTimer = null;
		      }, 150);
		    }
		  };
		
		  Menus.prototype.scrollActiveItemToView = function scrollActiveItemToView() {
		    // scroll into view
		    var optionsLength = this.getShowOptions().length;
		    for (var i = 0; i < optionsLength; i++) {
		      var itemComponent = this.refs['activeItem' + i];
		      if (itemComponent) {
		        var target = (0, _reactDom.findDOMNode)(itemComponent);
		        target.parentNode.scrollTop = target.offsetTop;
		      }
		    }
		  };
		
		  Menus.prototype.isActiveOption = function isActiveOption(option) {
		    return this.props.activeValue.some(function (value) {
		      return value === option.value;
		    });
		  };
		
		  Menus.prototype.render = function render() {
		    var _this3 = this;
		
		    var prefixCls = this.props.prefixCls;
		
		    return _react2["default"].createElement(
		      'div',
		      null,
		      this.getShowOptions().map(function (options, menuIndex) {
		        return _react2["default"].createElement(
		          'ul',
		          { className: prefixCls + '-menu', key: menuIndex },
		          options.map(function (option) {
		            return _this3.getOption(option, menuIndex);
		          })
		        );
		      })
		    );
		  };
		
		  return Menus;
		}(_react2["default"].Component);
		
		Menus.defaultProps = {
		  options: [],
		  value: [],
		  activeValue: [],
		  onChange: function onChange() {},
		  onSelect: function onSelect() {},
		
		  prefixCls: 'rc-cascader-menus',
		  visible: false,
		  expandTrigger: 'click',
		  changeOnSelect: false
		};
		
		Menus.propTypes = {
		  value: _react2["default"].PropTypes.array,
		  activeValue: _react2["default"].PropTypes.array,
		  options: _react2["default"].PropTypes.array.isRequired,
		  prefixCls: _react2["default"].PropTypes.string,
		  expandTrigger: _react2["default"].PropTypes.string,
		  onChange: _react2["default"].PropTypes.func,
		  onSelect: _react2["default"].PropTypes.func,
		  loadData: _react2["default"].PropTypes.func,
		  visible: _react2["default"].PropTypes.bool,
		  changeOnSelect: _react2["default"].PropTypes.bool
		};
		
		exports["default"] = Menus;
		module.exports = exports['default'];
	
	/***/ },
	/* 303 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _Cascader = __webpack_require__(301);
		
		var _Cascader2 = _interopRequireDefault(_Cascader);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		exports["default"] = _Cascader2["default"]; // export this package's api
		
		module.exports = exports['default'];
	
	/***/ },
	/* 304 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _reactAddonsPureRenderMixin = __webpack_require__(14);
		
		var _reactAddonsPureRenderMixin2 = _interopRequireDefault(_reactAddonsPureRenderMixin);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var Checkbox = function (_React$Component) {
		  _inherits(Checkbox, _React$Component);
		
		  function Checkbox(props) {
		    _classCallCheck(this, Checkbox);
		
		    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Checkbox).call(this, props));
		
		    _initialiseProps.call(_this);
		
		    var checked = false;
		    if ('checked' in props) {
		      checked = props.checked;
		    } else {
		      checked = props.defaultChecked;
		    }
		    _this.state = {
		      checked: checked,
		      focus: false
		    };
		    return _this;
		  }
		
		  _createClass(Checkbox, [{
		    key: 'componentWillReceiveProps',
		    value: function componentWillReceiveProps(nextProps) {
		      if ('checked' in nextProps) {
		        this.setState({
		          checked: nextProps.checked
		        });
		      }
		    }
		  }, {
		    key: 'shouldComponentUpdate',
		    value: function shouldComponentUpdate() {
		      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
		        args[_key] = arguments[_key];
		      }
		
		      return _reactAddonsPureRenderMixin2["default"].shouldComponentUpdate.apply(this, args);
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var _classNames;
		
		      var props = _extends({}, this.props);
		      // Remove React warning.
		      // Warning: Input elements must be either controlled or uncontrolled
		      // (specify either the value prop, or the defaultValue prop, but not both).
		      delete props.defaultChecked;
		
		      var state = this.state;
		      var prefixCls = props.prefixCls;
		      var checked = state.checked;
		      if (typeof checked === 'boolean') {
		        checked = checked ? 1 : 0;
		      }
		      var className = (0, _classnames2["default"])((_classNames = {}, _defineProperty(_classNames, props.className, !!props.className), _defineProperty(_classNames, prefixCls, 1), _defineProperty(_classNames, prefixCls + '-checked', checked), _defineProperty(_classNames, prefixCls + '-checked-' + checked, !!checked), _defineProperty(_classNames, prefixCls + '-focused', state.focus), _defineProperty(_classNames, prefixCls + '-disabled', props.disabled), _classNames));
		      return _react2["default"].createElement(
		        'span',
		        {
		          className: className,
		          style: props.style
		        },
		        _react2["default"].createElement('span', { className: prefixCls + '-inner' }),
		        _react2["default"].createElement('input', {
		          name: props.name,
		          type: props.type,
		          readOnly: props.readOnly,
		          disabled: props.disabled,
		          className: prefixCls + '-input',
		          checked: !!checked,
		          onFocus: this.handleFocus,
		          onBlur: this.handleBlur,
		          onChange: this.handleChange
		        })
		      );
		    }
		  }]);
		
		  return Checkbox;
		}(_react2["default"].Component);
		
		var _initialiseProps = function _initialiseProps() {
		  var _this2 = this;
		
		  this.handleFocus = function (e) {
		    _this2.setState({ focus: true });
		    _this2.props.onFocus(e);
		  };
		
		  this.handleBlur = function (e) {
		    _this2.setState({ focus: false });
		    _this2.props.onBlur(e);
		  };
		
		  this.handleChange = function (e) {
		    var checked = _this2.state.checked;
		
		    if (!('checked' in _this2.props)) {
		      _this2.setState({
		        checked: !checked
		      });
		    }
		    _this2.props.onChange({
		      target: _extends({}, _this2.props, {
		        checked: !checked
		      }),
		      stopPropagation: function stopPropagation() {
		        e.stopPropagation();
		      },
		      preventDefault: function preventDefault() {
		        e.preventDefault();
		      }
		    });
		  };
		};
		
		exports["default"] = Checkbox;
		
		
		Checkbox.propTypes = {
		  name: _react2["default"].PropTypes.string,
		  prefixCls: _react2["default"].PropTypes.string,
		  style: _react2["default"].PropTypes.object,
		  type: _react2["default"].PropTypes.string,
		  className: _react2["default"].PropTypes.string,
		  defaultChecked: _react2["default"].PropTypes.oneOfType([_react2["default"].PropTypes.number, _react2["default"].PropTypes.bool]),
		  checked: _react2["default"].PropTypes.oneOfType([_react2["default"].PropTypes.number, _react2["default"].PropTypes.bool]),
		  onFocus: _react2["default"].PropTypes.func,
		  onBlur: _react2["default"].PropTypes.func,
		  onChange: _react2["default"].PropTypes.func
		};
		
		Checkbox.defaultProps = {
		  prefixCls: 'rc-checkbox',
		  style: {},
		  type: 'checkbox',
		  className: '',
		  defaultChecked: false,
		  onFocus: function onFocus() {},
		  onBlur: function onBlur() {},
		  onChange: function onChange() {}
		};
		module.exports = exports['default'];
	
	/***/ },
	/* 305 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _Panel = __webpack_require__(306);
		
		var _Panel2 = _interopRequireDefault(_Panel);
		
		var _openAnimationFactory = __webpack_require__(309);
		
		var _openAnimationFactory2 = _interopRequireDefault(_openAnimationFactory);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
		
		function toArray(activeKey) {
		  var currentActiveKey = activeKey;
		  if (!Array.isArray(currentActiveKey)) {
		    currentActiveKey = currentActiveKey ? [currentActiveKey] : [];
		  }
		  return currentActiveKey;
		}
		
		var Collapse = _react2["default"].createClass({
		  displayName: 'Collapse',
		
		  propTypes: {
		    children: _react.PropTypes.any,
		    prefixCls: _react.PropTypes.string,
		    activeKey: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.arrayOf(_react.PropTypes.string)]),
		    defaultActiveKey: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.arrayOf(_react.PropTypes.string)]),
		    openAnimation: _react.PropTypes.object,
		    onChange: _react.PropTypes.func,
		    accordion: _react.PropTypes.bool
		  },
		
		  statics: {
		    Panel: _Panel2["default"]
		  },
		
		  getDefaultProps: function getDefaultProps() {
		    return {
		      prefixCls: 'rc-collapse',
		      onChange: function onChange() {},
		
		      accordion: false
		    };
		  },
		  getInitialState: function getInitialState() {
		    var _props = this.props;
		    var activeKey = _props.activeKey;
		    var defaultActiveKey = _props.defaultActiveKey;
		
		    var currentActiveKey = defaultActiveKey;
		    if ('activeKey' in this.props) {
		      currentActiveKey = activeKey;
		    }
		    return {
		      openAnimation: this.props.openAnimation || (0, _openAnimationFactory2["default"])(this.props.prefixCls),
		      activeKey: toArray(currentActiveKey)
		    };
		  },
		  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
		    if ('activeKey' in nextProps) {
		      this.setState({
		        activeKey: toArray(nextProps.activeKey)
		      });
		    }
		    if ('openAnimation' in nextProps) {
		      this.setState({
		        openAnimation: nextProps.openAnimation
		      });
		    }
		  },
		  onClickItem: function onClickItem(key) {
		    var _this = this;
		
		    return function () {
		      var activeKey = _this.state.activeKey;
		      if (_this.props.accordion) {
		        activeKey = activeKey[0] === key ? [] : [key];
		      } else {
		        activeKey = [].concat(_toConsumableArray(activeKey));
		        var index = activeKey.indexOf(key);
		        var isActive = index > -1;
		        if (isActive) {
		          // remove active state
		          activeKey.splice(index, 1);
		        } else {
		          activeKey.push(key);
		        }
		      }
		      _this.setActiveKey(activeKey);
		    };
		  },
		  getItems: function getItems() {
		    var _this2 = this;
		
		    var activeKey = this.state.activeKey;
		    var _props2 = this.props;
		    var prefixCls = _props2.prefixCls;
		    var accordion = _props2.accordion;
		
		    return _react.Children.map(this.props.children, function (child, index) {
		      // If there is no key provide, use the panel order as default key
		      var key = child.key || String(index);
		      var header = child.props.header;
		      var isActive = false;
		      if (accordion) {
		        isActive = activeKey[0] === key;
		      } else {
		        isActive = activeKey.indexOf(key) > -1;
		      }
		
		      var props = {
		        key: key,
		        header: header,
		        isActive: isActive,
		        prefixCls: prefixCls,
		        openAnimation: _this2.state.openAnimation,
		        children: child.props.children,
		        onItemClick: _this2.onClickItem(key).bind(_this2)
		      };
		
		      return _react2["default"].cloneElement(child, props);
		    });
		  },
		  setActiveKey: function setActiveKey(activeKey) {
		    if (!('activeKey' in this.props)) {
		      this.setState({
		        activeKey: activeKey
		      });
		    }
		    this.props.onChange(this.props.accordion ? activeKey[0] : activeKey);
		  },
		  render: function render() {
		    var prefixCls = this.props.prefixCls;
		    return _react2["default"].createElement(
		      'div',
		      { className: prefixCls },
		      this.getItems()
		    );
		  }
		});
		
		exports["default"] = Collapse;
		module.exports = exports['default'];
	
	/***/ },
	/* 306 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _PanelContent = __webpack_require__(307);
		
		var _PanelContent2 = _interopRequireDefault(_PanelContent);
		
		var _rcAnimate = __webpack_require__(7);
		
		var _rcAnimate2 = _interopRequireDefault(_rcAnimate);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		var CollapsePanel = _react2["default"].createClass({
		  displayName: 'CollapsePanel',
		
		  propTypes: {
		    children: _react.PropTypes.any,
		    openAnimation: _react.PropTypes.object,
		    prefixCls: _react.PropTypes.string,
		    header: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number, _react.PropTypes.node]),
		    isActive: _react.PropTypes.bool,
		    onItemClick: _react.PropTypes.func
		  },
		
		  getDefaultProps: function getDefaultProps() {
		    return {
		      isActive: false,
		      onItemClick: function onItemClick() {}
		    };
		  },
		  handleItemClick: function handleItemClick() {
		    this.props.onItemClick();
		  },
		  render: function render() {
		    var _props = this.props;
		    var prefixCls = _props.prefixCls;
		    var header = _props.header;
		    var children = _props.children;
		    var isActive = _props.isActive;
		
		    var headerCls = prefixCls + '-header';
		    return _react2["default"].createElement(
		      'div',
		      { className: prefixCls + '-item' },
		      _react2["default"].createElement(
		        'div',
		        {
		          className: headerCls,
		          onClick: this.handleItemClick,
		          role: 'tab',
		          'aria-expanded': isActive
		        },
		        _react2["default"].createElement('i', { className: 'arrow' }),
		        header
		      ),
		      _react2["default"].createElement(
		        _rcAnimate2["default"],
		        {
		          showProp: 'isActive',
		          exclusive: true,
		          component: '',
		          animation: this.props.openAnimation
		        },
		        _react2["default"].createElement(
		          _PanelContent2["default"],
		          { prefixCls: prefixCls, isActive: isActive },
		          children
		        )
		      )
		    );
		  }
		});
		
		exports["default"] = CollapsePanel;
		module.exports = exports['default'];
	
	/***/ },
	/* 307 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _classnames2 = __webpack_require__(2);
		
		var _classnames3 = _interopRequireDefault(_classnames2);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		var PanelContent = _react2["default"].createClass({
		  displayName: 'PanelContent',
		
		  propTypes: {
		    prefixCls: _react.PropTypes.string,
		    isActive: _react.PropTypes.bool,
		    children: _react.PropTypes.any
		  },
		  shouldComponentUpdate: function shouldComponentUpdate(nextProps) {
		    return this.props.isActive || nextProps.isActive;
		  },
		  render: function render() {
		    var _classnames;
		
		    this._isActived = this._isActived || this.props.isActive;
		    if (!this._isActived) {
		      return null;
		    }
		    var _props = this.props;
		    var prefixCls = _props.prefixCls;
		    var isActive = _props.isActive;
		    var children = _props.children;
		
		    var contentCls = (0, _classnames3["default"])((_classnames = {}, _defineProperty(_classnames, prefixCls + '-content', true), _defineProperty(_classnames, prefixCls + '-content-active', isActive), _defineProperty(_classnames, prefixCls + '-content-inactive', !isActive), _classnames));
		    return _react2["default"].createElement(
		      'div',
		      {
		        className: contentCls,
		        role: 'tabpanel'
		      },
		      _react2["default"].createElement(
		        'div',
		        { className: prefixCls + '-content-box' },
		        children
		      )
		    );
		  }
		});
		
		exports["default"] = PanelContent;
		module.exports = exports['default'];
	
	/***/ },
	/* 308 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _Collapse = __webpack_require__(305);
		
		var _Collapse2 = _interopRequireDefault(_Collapse);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		exports["default"] = _Collapse2["default"];
		module.exports = exports['default'];
	
	/***/ },
	/* 309 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _cssAnimation = __webpack_require__(42);
		
		var _cssAnimation2 = _interopRequireDefault(_cssAnimation);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function animate(node, show, transitionName, done) {
		  var height = void 0;
		  return (0, _cssAnimation2["default"])(node, transitionName, {
		    start: function start() {
		      if (!show) {
		        node.style.height = node.offsetHeight + 'px';
		      } else {
		        height = node.offsetHeight;
		        node.style.height = 0;
		      }
		    },
		    active: function active() {
		      node.style.height = (show ? height : 0) + 'px';
		    },
		    end: function end() {
		      node.style.height = '';
		      done();
		    }
		  });
		}
		
		function animation(prefixCls) {
		  return {
		    enter: function enter(node, done) {
		      return animate(node, true, prefixCls + '-anim', done);
		    },
		    leave: function leave(node, done) {
		      return animate(node, false, prefixCls + '-anim', done);
		    }
		  };
		}
		
		exports["default"] = animation;
		module.exports = exports['default'];
	
	/***/ },
	/* 310 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _reactDom = __webpack_require__(4);
		
		var _reactDom2 = _interopRequireDefault(_reactDom);
		
		var _KeyCode = __webpack_require__(11);
		
		var _KeyCode2 = _interopRequireDefault(_KeyCode);
		
		var _rcAnimate = __webpack_require__(7);
		
		var _rcAnimate2 = _interopRequireDefault(_rcAnimate);
		
		var _LazyRenderBox = __webpack_require__(312);
		
		var _LazyRenderBox2 = _interopRequireDefault(_LazyRenderBox);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		var uuid = 0;
		var openCount = 0;
		
		// Measure scrollbar width for padding body during modal show/hide
		var scrollbarMeasure = {
		  position: 'absolute',
		  top: '-9999px',
		  width: '50px',
		  height: '50px',
		  overflow: 'scroll'
		};
		
		/* eslint react/no-is-mounted:0 */
		
		function noop() {}
		
		function getScroll(w, top) {
		  var ret = w['page' + (top ? 'Y' : 'X') + 'Offset'];
		  var method = 'scroll' + (top ? 'Top' : 'Left');
		  if (typeof ret !== 'number') {
		    var d = w.document;
		    ret = d.documentElement[method];
		    if (typeof ret !== 'number') {
		      ret = d.body[method];
		    }
		  }
		  return ret;
		}
		
		function setTransformOrigin(node, value) {
		  var style = node.style;
		  ['Webkit', 'Moz', 'Ms', 'ms'].forEach(function (prefix) {
		    style[prefix + 'TransformOrigin'] = value;
		  });
		  style['transformOrigin'] = value;
		}
		
		function offset(el) {
		  var rect = el.getBoundingClientRect();
		  var pos = {
		    left: rect.left,
		    top: rect.top
		  };
		  var doc = el.ownerDocument;
		  var w = doc.defaultView || doc.parentWindow;
		  pos.left += getScroll(w);
		  pos.top += getScroll(w, 1);
		  return pos;
		}
		
		var Dialog = _react2["default"].createClass({
		  displayName: 'Dialog',
		
		  propTypes: {
		    onAfterClose: _react.PropTypes.func,
		    onClose: _react.PropTypes.func,
		    closable: _react.PropTypes.bool,
		    maskClosable: _react.PropTypes.bool,
		    visible: _react.PropTypes.bool,
		    mousePosition: _react.PropTypes.object,
		    wrapStyle: _react.PropTypes.object,
		    prefixCls: _react.PropTypes.string,
		    wrapClassName: _react.PropTypes.string
		  },
		
		  getDefaultProps: function getDefaultProps() {
		    return {
		      onAfterClose: noop,
		      onClose: noop
		    };
		  },
		  componentWillMount: function componentWillMount() {
		    this.titleId = 'rcDialogTitle' + uuid++;
		  },
		  componentDidMount: function componentDidMount() {
		    this.componentDidUpdate({});
		  },
		  componentDidUpdate: function componentDidUpdate(prevProps) {
		    var props = this.props;
		    var mousePosition = this.props.mousePosition;
		    if (props.visible) {
		      // first show
		      if (!prevProps.visible) {
		        this.lastOutSideFocusNode = document.activeElement;
		        this.addScrollingEffect();
		        this.refs.wrap.focus();
		        var dialogNode = _reactDom2["default"].findDOMNode(this.refs.dialog);
		        if (mousePosition) {
		          var elOffset = offset(dialogNode);
		          setTransformOrigin(dialogNode, mousePosition.x - elOffset.left + 'px ' + (mousePosition.y - elOffset.top) + 'px');
		        } else {
		          setTransformOrigin(dialogNode, '');
		        }
		      }
		    } else if (prevProps.visible) {
		      if (props.mask && this.lastOutSideFocusNode) {
		        try {
		          this.lastOutSideFocusNode.focus();
		        } catch (e) {
		          this.lastOutSideFocusNode = null;
		        }
		        this.lastOutSideFocusNode = null;
		      }
		    }
		  },
		  onAnimateLeave: function onAnimateLeave() {
		    // need demo?
		    // https://github.com/react-component/dialog/pull/28
		    if (this.refs.wrap) {
		      this.refs.wrap.style.display = 'none';
		    }
		    this.removeScrollingEffect();
		    this.props.onAfterClose();
		  },
		  onMaskClick: function onMaskClick(e) {
		    if (e.target === e.currentTarget && this.props.closable && this.props.maskClosable) {
		      this.close(e);
		    }
		  },
		  onKeyDown: function onKeyDown(e) {
		    var props = this.props;
		    if (props.closable && props.keyboard) {
		      if (e.keyCode === _KeyCode2["default"].ESC) {
		        this.close(e);
		      }
		    }
		    // keep focus inside dialog
		    if (props.visible) {
		      if (e.keyCode === _KeyCode2["default"].TAB) {
		        var activeElement = document.activeElement;
		        var dialogRoot = this.refs.wrap;
		        var sentinel = this.refs.sentinel;
		        if (e.shiftKey) {
		          if (activeElement === dialogRoot) {
		            sentinel.focus();
		          }
		        } else if (activeElement === this.refs.sentinel) {
		          dialogRoot.focus();
		        }
		      }
		    }
		  },
		  getDialogElement: function getDialogElement() {
		    var props = this.props;
		    var closable = props.closable;
		    var prefixCls = props.prefixCls;
		    var dest = {};
		    if (props.width !== undefined) {
		      dest.width = props.width;
		    }
		    if (props.height !== undefined) {
		      dest.height = props.height;
		    }
		
		    var footer = void 0;
		    if (props.footer) {
		      footer = _react2["default"].createElement(
		        'div',
		        { className: prefixCls + '-footer', ref: 'footer' },
		        props.footer
		      );
		    }
		
		    var header = void 0;
		    if (props.title) {
		      header = _react2["default"].createElement(
		        'div',
		        { className: prefixCls + '-header', ref: 'header' },
		        _react2["default"].createElement(
		          'div',
		          { className: prefixCls + '-title', id: this.titleId },
		          props.title
		        )
		      );
		    }
		
		    var closer = void 0;
		    if (closable) {
		      closer = _react2["default"].createElement(
		        'button',
		        {
		          onClick: this.close,
		          'aria-label': 'Close',
		          className: prefixCls + '-close'
		        },
		        _react2["default"].createElement('span', { className: prefixCls + '-close-x' })
		      );
		    }
		
		    var style = _extends({}, props.style, dest);
		    var transitionName = this.getTransitionName();
		    var dialogElement = _react2["default"].createElement(
		      _LazyRenderBox2["default"],
		      {
		        role: 'document',
		        ref: 'dialog',
		        style: style,
		        className: prefixCls + ' ' + (props.className || ''),
		        visible: props.visible
		      },
		      _react2["default"].createElement(
		        'div',
		        { className: prefixCls + '-content' },
		        closer,
		        header,
		        _react2["default"].createElement(
		          'div',
		          { className: prefixCls + '-body', style: props.bodyStyle, ref: 'body' },
		          props.children
		        ),
		        footer
		      ),
		      _react2["default"].createElement(
		        'div',
		        { tabIndex: '0', ref: 'sentinel', style: { width: 0, height: 0, overflow: 'hidden' } },
		        'sentinel'
		      )
		    );
		    return _react2["default"].createElement(
		      _rcAnimate2["default"],
		      {
		        key: 'dialog',
		        showProp: 'visible',
		        onLeave: this.onAnimateLeave,
		        transitionName: transitionName,
		        component: '',
		        transitionAppear: true
		      },
		      dialogElement
		    );
		  },
		  getZIndexStyle: function getZIndexStyle() {
		    var style = {};
		    var props = this.props;
		    if (props.zIndex !== undefined) {
		      style.zIndex = props.zIndex;
		    }
		    return style;
		  },
		  getWrapStyle: function getWrapStyle() {
		    return _extends({}, this.getZIndexStyle(), this.props.wrapStyle);
		  },
		  getMaskElement: function getMaskElement() {
		    var props = this.props;
		    var maskElement = void 0;
		    if (props.mask) {
		      var maskTransition = this.getMaskTransitionName();
		      maskElement = _react2["default"].createElement(_LazyRenderBox2["default"], {
		        style: this.getZIndexStyle(),
		        key: 'mask',
		        className: props.prefixCls + '-mask',
		        hiddenClassName: props.prefixCls + '-mask-hidden',
		        visible: props.visible
		      });
		      if (maskTransition) {
		        maskElement = _react2["default"].createElement(
		          _rcAnimate2["default"],
		          {
		            key: 'mask',
		            showProp: 'visible',
		            transitionAppear: true,
		            component: '',
		            transitionName: maskTransition
		          },
		          maskElement
		        );
		      }
		    }
		    return maskElement;
		  },
		  getMaskTransitionName: function getMaskTransitionName() {
		    var props = this.props;
		    var transitionName = props.maskTransitionName;
		    var animation = props.maskAnimation;
		    if (!transitionName && animation) {
		      transitionName = props.prefixCls + '-' + animation;
		    }
		    return transitionName;
		  },
		  getTransitionName: function getTransitionName() {
		    var props = this.props;
		    var transitionName = props.transitionName;
		    var animation = props.animation;
		    if (!transitionName && animation) {
		      transitionName = props.prefixCls + '-' + animation;
		    }
		    return transitionName;
		  },
		  getElement: function getElement(part) {
		    return this.refs[part];
		  },
		  setScrollbar: function setScrollbar() {
		    if (this.bodyIsOverflowing && this.scrollbarWidth) {
		      document.body.style.paddingRight = this.scrollbarWidth + 'px';
		    }
		  },
		  addScrollingEffect: function addScrollingEffect() {
		    openCount++;
		    if (openCount !== 1) {
		      return;
		    }
		    this.checkScrollbar();
		    this.setScrollbar();
		    document.body.style.overflow = 'hidden';
		    // this.adjustDialog();
		  },
		  removeScrollingEffect: function removeScrollingEffect() {
		    openCount--;
		    if (openCount !== 0) {
		      return;
		    }
		    document.body.style.overflow = '';
		    this.resetScrollbar();
		    // this.resetAdjustments();
		  },
		  close: function close(e) {
		    this.props.onClose(e);
		  },
		  checkScrollbar: function checkScrollbar() {
		    var fullWindowWidth = window.innerWidth;
		    if (!fullWindowWidth) {
		      // workaround for missing window.innerWidth in IE8
		      var documentElementRect = document.documentElement.getBoundingClientRect();
		      fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);
		    }
		    this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth;
		    if (this.bodyIsOverflowing) {
		      this.scrollbarWidth = this.measureScrollbar();
		    }
		  },
		  resetScrollbar: function resetScrollbar() {
		    document.body.style.paddingRight = '';
		  },
		  measureScrollbar: function measureScrollbar() {
		    if (this.scrollbarWidth !== undefined) {
		      return this.scrollbarWidth;
		    }
		    var scrollDiv = document.createElement('div');
		    for (var scrollProp in scrollbarMeasure) {
		      if (scrollbarMeasure.hasOwnProperty(scrollProp)) {
		        scrollDiv.style[scrollProp] = scrollbarMeasure[scrollProp];
		      }
		    }
		    document.body.appendChild(scrollDiv);
		    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;
		    document.body.removeChild(scrollDiv);
		    this.scrollbarWidth = scrollbarWidth;
		    return scrollbarWidth;
		  },
		  adjustDialog: function adjustDialog() {
		    if (this.refs.wrap && this.scrollbarWidth) {
		      var modalIsOverflowing = this.refs.wrap.scrollHeight > document.documentElement.clientHeight;
		      this.refs.wrap.style.paddingLeft = (!this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '') + 'px';
		      this.refs.wrap.style.paddingRight = (this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : '') + 'px';
		    }
		  },
		  resetAdjustments: function resetAdjustments() {
		    if (this.refs.wrap) {
		      this.refs.wrap.style.paddingLeft = this.refs.wrap.style.paddingLeft = '';
		    }
		  },
		  render: function render() {
		    var props = this.props;
		    var prefixCls = props.prefixCls;
		    var style = this.getWrapStyle();
		    // clear hide display
		    // and only set display after async anim, not here for hide
		    if (props.visible) {
		      style.display = null;
		    }
		    return _react2["default"].createElement(
		      'div',
		      null,
		      this.getMaskElement(),
		      _react2["default"].createElement(
		        'div',
		        {
		          tabIndex: '-1',
		          onKeyDown: this.onKeyDown,
		          className: prefixCls + '-wrap ' + (props.wrapClassName || ''),
		          ref: 'wrap',
		          onClick: this.onMaskClick,
		          role: 'dialog',
		          'aria-labelledby': props.title ? this.titleId : null,
		          style: style
		        },
		        this.getDialogElement()
		      )
		    );
		  }
		});
		
		exports["default"] = Dialog;
		module.exports = exports['default'];
	
	/***/ },
	/* 311 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _reactDom = __webpack_require__(4);
		
		var _reactDom2 = _interopRequireDefault(_reactDom);
		
		var _Dialog = __webpack_require__(310);
		
		var _Dialog2 = _interopRequireDefault(_Dialog);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		function noop() {}
		
		function copy(obj, fields) {
		  var ret = {};
		  fields.forEach(function (f) {
		    if (obj[f] !== undefined) {
		      ret[f] = obj[f];
		    }
		  });
		  return ret;
		}
		
		var DialogWrap = function (_React$Component) {
		  _inherits(DialogWrap, _React$Component);
		
		  function DialogWrap(props) {
		    _classCallCheck(this, DialogWrap);
		
		    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(DialogWrap).call(this, props));
		
		    _this.state = {
		      visible: props.visible
		    };
		    ['onClose', 'cleanDialogContainer'].forEach(function (m) {
		      _this[m] = _this[m].bind(_this);
		    });
		    return _this;
		  }
		
		  _createClass(DialogWrap, [{
		    key: 'componentDidMount',
		    value: function componentDidMount() {
		      this.componentDidUpdate();
		    }
		  }, {
		    key: 'componentWillReceiveProps',
		    value: function componentWillReceiveProps(props) {
		      if ('visible' in props) {
		        this.setState({
		          visible: props.visible
		        });
		      }
		    }
		  }, {
		    key: 'shouldComponentUpdate',
		    value: function shouldComponentUpdate(nextProps, nextState) {
		      return !!(this.state.visible || nextState.visible);
		    }
		  }, {
		    key: 'componentDidUpdate',
		    value: function componentDidUpdate() {
		      if (this.dialogRendered) {
		        this.dialogInstance = _reactDom2["default"].unstable_renderSubtreeIntoContainer(this, this.getDialogElement(), this.getDialogContainer());
		      }
		    }
		  }, {
		    key: 'componentWillUnmount',
		    value: function componentWillUnmount() {
		      if (this.dialogContainer) {
		        if (this.state.visible) {
		          _reactDom2["default"].unstable_renderSubtreeIntoContainer(this, this.getDialogElement({
		            onAfterClose: this.cleanDialogContainer,
		            onClose: noop,
		            visible: false
		          }), this.dialogContainer);
		        } else {
		          this.cleanDialogContainer();
		        }
		      }
		    }
		  }, {
		    key: 'onClose',
		    value: function onClose(e) {
		      this.props.onClose(e);
		    }
		  }, {
		    key: 'getDialogContainer',
		    value: function getDialogContainer() {
		      if (!this.dialogContainer) {
		        this.dialogContainer = document.createElement('div');
		        document.body.appendChild(this.dialogContainer);
		      }
		      return this.dialogContainer;
		    }
		  }, {
		    key: 'getDialogElement',
		    value: function getDialogElement(extra) {
		      var props = this.props;
		      var dialogProps = copy(props, ['className', 'closable', 'maskClosable', 'title', 'footer', 'mask', 'keyboard', 'animation', 'transitionName', 'maskAnimation', 'maskTransitionName', 'mousePosition', 'prefixCls', 'style', 'width', 'wrapStyle', 'height', 'zIndex', 'bodyStyle', 'wrapClassName']);
		      dialogProps = _extends({}, dialogProps, {
		        onClose: this.onClose,
		        visible: this.state.visible
		      }, extra);
		      return _react2["default"].createElement(
		        _Dialog2["default"],
		        _extends({}, dialogProps, { key: 'dialog' }),
		        props.children
		      );
		    }
		  }, {
		    key: 'getElement',
		    value: function getElement(part) {
		      return this.dialogInstance.getElement(part);
		    }
		  }, {
		    key: 'cleanDialogContainer',
		    value: function cleanDialogContainer() {
		      if (this.dialogContainer) {
		        _reactDom2["default"].unmountComponentAtNode(this.dialogContainer);
		        document.body.removeChild(this.dialogContainer);
		        this.dialogContainer = null;
		      }
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      this.dialogRendered = this.dialogRendered || this.state.visible;
		      return null;
		    }
		  }]);
		
		  return DialogWrap;
		}(_react2["default"].Component);
		
		DialogWrap.defaultProps = {
		  className: '',
		  mask: true,
		  keyboard: true,
		  closable: true,
		  maskClosable: true,
		  prefixCls: 'rc-dialog',
		  onClose: noop
		};
		
		DialogWrap.propTypes = {
		  className: _react.PropTypes.string,
		  keyboard: _react.PropTypes.bool,
		  wrapStyle: _react.PropTypes.object,
		  style: _react.PropTypes.object,
		  mask: _react.PropTypes.bool,
		  closable: _react.PropTypes.bool,
		  maskClosable: _react.PropTypes.bool,
		  prefixCls: _react.PropTypes.string,
		  visible: _react.PropTypes.bool,
		  onClose: _react.PropTypes.func
		};
		
		exports["default"] = DialogWrap;
		module.exports = exports['default'];
	
	/***/ },
	/* 312 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		var LazyRenderBox = _react2["default"].createClass({
		  displayName: 'LazyRenderBox',
		
		  propTypes: {
		    className: _react.PropTypes.string,
		    visible: _react.PropTypes.bool,
		    hiddenClassName: _react.PropTypes.string
		  },
		  shouldComponentUpdate: function shouldComponentUpdate(nextProps) {
		    return nextProps.hiddenClassName || nextProps.visible;
		  },
		  render: function render() {
		    var className = this.props.className;
		    if (this.props.hiddenClassName && !this.props.visible) {
		      className += ' ' + this.props.hiddenClassName;
		    }
		    var props = _extends({}, this.props);
		    delete props.hiddenClassName;
		    delete props.visible;
		    props.className = className;
		    return _react2["default"].createElement('div', props);
		  }
		});
		
		exports["default"] = LazyRenderBox;
		module.exports = exports['default'];
	
	/***/ },
	/* 313 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		module.exports = __webpack_require__(311);
	
	/***/ },
	/* 314 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _reactDom = __webpack_require__(4);
		
		var _reactDom2 = _interopRequireDefault(_reactDom);
		
		var _rcTrigger = __webpack_require__(17);
		
		var _rcTrigger2 = _interopRequireDefault(_rcTrigger);
		
		var _placements = __webpack_require__(316);
		
		var _placements2 = _interopRequireDefault(_placements);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
		
		/*
		
		 var MenuItem = Menu.Item;
		
		 var menu = <Menu><MenuItem>1</MenuItem></Menu>;
		
		 <DropDown trigger="click" animationName="" overlay={<>} onSelect={}>
		 <button>open</button>
		 </DropDown>
		 */
		
		var Dropdown = _react2["default"].createClass({
		  displayName: 'Dropdown',
		
		  propTypes: {
		    minOverlayWidthMatchTrigger: _react.PropTypes.bool,
		    onVisibleChange: _react.PropTypes.func,
		    prefixCls: _react.PropTypes.string,
		    children: _react.PropTypes.any,
		    transitionName: _react.PropTypes.string,
		    overlayClassName: _react.PropTypes.string,
		    animation: _react.PropTypes.any,
		    align: _react.PropTypes.object,
		    overlayStyle: _react.PropTypes.object,
		    placement: _react.PropTypes.string,
		    trigger: _react.PropTypes.array,
		    showAction: _react.PropTypes.array,
		    hideAction: _react.PropTypes.array,
		    getPopupContainer: _react.PropTypes.func
		  },
		
		  getDefaultProps: function getDefaultProps() {
		    return {
		      minOverlayWidthMatchTrigger: true,
		      prefixCls: 'rc-dropdown',
		      trigger: ['hover'],
		      showAction: [],
		      hideAction: [],
		      overlayClassName: '',
		      overlayStyle: {},
		      defaultVisible: false,
		      onVisibleChange: function onVisibleChange() {},
		
		      placement: 'bottomLeft'
		    };
		  },
		  getInitialState: function getInitialState() {
		    var props = this.props;
		    if ('visible' in props) {
		      return {
		        visible: props.visible
		      };
		    }
		    return {
		      visible: props.defaultVisible
		    };
		  },
		  componentWillReceiveProps: function componentWillReceiveProps(props) {
		    if ('visible' in props) {
		      this.setState({
		        visible: props.visible
		      });
		    }
		  },
		  onClick: function onClick(e) {
		    var props = this.props;
		    var overlayProps = props.overlay.props;
		    if (!('visible' in props)) {
		      this.setState({
		        visible: false
		      });
		    }
		    if (overlayProps.onClick) {
		      overlayProps.onClick(e);
		    }
		  },
		  onVisibleChange: function onVisibleChange(v) {
		    var props = this.props;
		    if (!('visible' in props)) {
		      this.setState({
		        visible: v
		      });
		    }
		    props.onVisibleChange(v);
		  },
		  getMenuElement: function getMenuElement() {
		    var props = this.props;
		    return _react2["default"].cloneElement(props.overlay, {
		      prefixCls: props.prefixCls + '-menu',
		      onClick: this.onClick
		    });
		  },
		  getPopupDomNode: function getPopupDomNode() {
		    return this.refs.trigger.getPopupDomNode();
		  },
		  afterVisibleChange: function afterVisibleChange(visible) {
		    if (visible && this.props.minOverlayWidthMatchTrigger) {
		      var overlayNode = this.getPopupDomNode();
		      var rootNode = _reactDom2["default"].findDOMNode(this);
		      if (rootNode.offsetWidth > overlayNode.offsetWidth) {
		        overlayNode.style.width = rootNode.offsetWidth + 'px';
		      }
		    }
		  },
		  render: function render() {
		    var _extends2;
		
		    var _props = this.props;
		    var prefixCls = _props.prefixCls;
		    var children = _props.children;
		    var transitionName = _props.transitionName;
		    var animation = _props.animation;
		    var align = _props.align;
		    var placement = _props.placement;
		    var getPopupContainer = _props.getPopupContainer;
		    var showAction = _props.showAction;
		    var hideAction = _props.hideAction;
		    var overlayClassName = _props.overlayClassName;
		    var overlayStyle = _props.overlayStyle;
		    var trigger = _props.trigger;
		
		    var otherProps = _objectWithoutProperties(_props, ['prefixCls', 'children', 'transitionName', 'animation', 'align', 'placement', 'getPopupContainer', 'showAction', 'hideAction', 'overlayClassName', 'overlayStyle', 'trigger']);
		
		    return _react2["default"].createElement(
		      _rcTrigger2["default"],
		      _extends({}, otherProps, (_extends2 = {
		        prefixCls: prefixCls,
		        ref: 'trigger',
		        popupClassName: overlayClassName,
		        popupStyle: overlayStyle,
		        builtinPlacements: _placements2["default"],
		        action: trigger,
		        showAction: showAction
		      }, _defineProperty(_extends2, 'showAction', showAction), _defineProperty(_extends2, 'hideAction', hideAction), _defineProperty(_extends2, 'popupPlacement', placement), _defineProperty(_extends2, 'popupAlign', align), _defineProperty(_extends2, 'popupTransitionName', transitionName), _defineProperty(_extends2, 'popupAnimation', animation), _defineProperty(_extends2, 'popupVisible', this.state.visible), _defineProperty(_extends2, 'afterPopupVisibleChange', this.afterVisibleChange), _defineProperty(_extends2, 'popup', this.getMenuElement()), _defineProperty(_extends2, 'onPopupVisibleChange', this.onVisibleChange), _defineProperty(_extends2, 'getPopupContainer', getPopupContainer), _extends2)),
		      children
		    );
		  }
		});
		
		exports["default"] = Dropdown;
		module.exports = exports['default'];
	
	/***/ },
	/* 315 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _Dropdown = __webpack_require__(314);
		
		var _Dropdown2 = _interopRequireDefault(_Dropdown);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		exports["default"] = _Dropdown2["default"];
		module.exports = exports['default'];
	
	/***/ },
	/* 316 */
	/***/ function(module, exports) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		var autoAdjustOverflow = {
		  adjustX: 1,
		  adjustY: 1
		};
		
		var targetOffset = [0, 0];
		
		var placements = exports.placements = {
		  topLeft: {
		    points: ['bl', 'tl'],
		    overflow: autoAdjustOverflow,
		    offset: [0, -4],
		    targetOffset: targetOffset
		  },
		  bottomLeft: {
		    points: ['tl', 'bl'],
		    overflow: autoAdjustOverflow,
		    offset: [0, 4],
		    targetOffset: targetOffset
		  }
		};
		
		exports["default"] = placements;
	
	/***/ },
	/* 317 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _createBaseForm = __webpack_require__(106);
		
		var _createBaseForm2 = _interopRequireDefault(_createBaseForm);
		
		var _createForm = __webpack_require__(318);
		
		var _utils = __webpack_require__(107);
		
		var _reactDom = __webpack_require__(4);
		
		var _reactDom2 = _interopRequireDefault(_reactDom);
		
		var _domScrollIntoView = __webpack_require__(43);
		
		var _domScrollIntoView2 = _interopRequireDefault(_domScrollIntoView);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function computedStyle(el, prop) {
		  var getComputedStyle = window.getComputedStyle;
		  var style =
		  // If we have getComputedStyle
		  getComputedStyle ?
		  // Query it
		  // TODO: From CSS-Query notes, we might need (node, null) for FF
		  getComputedStyle(el) :
		
		  // Otherwise, we are in IE and use currentStyle
		  el.currentStyle;
		  if (style) {
		    return style[
		    // Switch to camelCase for CSSOM
		    // DEV: Grabbed from jQuery
		    // https://github.com/jquery/jquery/blob/1.9-stable/src/css.js#L191-L194
		    // https://github.com/jquery/jquery/blob/1.9-stable/src/core.js#L593-L597
		    prop.replace(/-(\w)/gi, function (word, letter) {
		      return letter.toUpperCase();
		    })];
		  }
		  return undefined;
		}
		
		function getScrollableContainer(n) {
		  var node = n;
		  var nodeName = void 0;
		  /* eslint no-cond-assign:0 */
		  while ((nodeName = node.nodeName.toLowerCase()) !== 'body') {
		    var overflowY = computedStyle(node, 'overflowY');
		    if (overflowY === 'auto' || overflowY === 'scroll') {
		      return node;
		    }
		    node = node.parentNode;
		  }
		  return nodeName === 'body' ? node.ownerDocument : node;
		}
		
		var mixin = {
		  getForm: function getForm() {
		    return _extends({}, _createForm.mixin.getForm.call(this), {
		      validateFieldsAndScroll: this.validateFieldsAndScroll
		    });
		  },
		  validateFieldsAndScroll: function validateFieldsAndScroll(ns, opt, cb) {
		    var _this = this;
		
		    var _getParams = (0, _utils.getParams)(ns, opt, cb);
		
		    var names = _getParams.names;
		    var callback = _getParams.callback;
		    var options = _getParams.options;
		
		
		    var newCb = function newCb(error, values) {
		      if (error) {
		        var firstNode = void 0;
		        var firstTop = void 0;
		        for (var name in error) {
		          if (error.hasOwnProperty(name)) {
		            var instance = _this.getFieldInstance(name);
		            if (instance) {
		              var node = _reactDom2["default"].findDOMNode(instance);
		              var top = node.getBoundingClientRect().top;
		              if (firstTop === undefined || firstTop > top) {
		                firstTop = top;
		                firstNode = node;
		              }
		            }
		          }
		        }
		        if (firstNode) {
		          var c = options.container || getScrollableContainer(firstNode);
		          (0, _domScrollIntoView2["default"])(firstNode, c, _extends({
		            onlyScrollIfNeeded: true
		          }, options.scroll));
		        }
		      }
		
		      if (typeof callback === 'function') {
		        callback(error, values);
		      }
		    };
		
		    return this.validateFields(names, options, newCb);
		  }
		};
		
		function createDOMForm(option) {
		  return (0, _createBaseForm2["default"])(_extends({}, option), [mixin]);
		}
		
		exports["default"] = createDOMForm;
		module.exports = exports['default'];
	
	/***/ },
	/* 318 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.mixin = undefined;
		
		var _createBaseForm = __webpack_require__(106);
		
		var _createBaseForm2 = _interopRequireDefault(_createBaseForm);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		var mixin = exports.mixin = {
		  getForm: function getForm() {
		    return {
		      getFieldsValue: this.getFieldsValue,
		      getFieldValue: this.getFieldValue,
		      getFieldInstance: this.getFieldInstance,
		      setFieldsValue: this.setFieldsValue,
		      setFields: this.setFields,
		      setFieldsInitialValue: this.setFieldsInitialValue,
		      getFieldProps: this.getFieldProps,
		      getFieldError: this.getFieldError,
		      isFieldValidating: this.isFieldValidating,
		      isFieldsValidating: this.isFieldsValidating,
		      isSubmitting: this.isSubmitting,
		      submit: this.submit,
		      validateFields: this.validateFields,
		      resetFields: this.resetFields
		    };
		  }
		};
		
		function createForm(options) {
		  return (0, _createBaseForm2["default"])(options, [mixin]);
		}
		
		exports["default"] = createForm;
	
	/***/ },
	/* 319 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		function noop() {}
		
		function preventDefault(e) {
		  e.preventDefault();
		}
		
		var InputNumber = _react2['default'].createClass({
		  displayName: 'InputNumber',
		
		  propTypes: {
		    onChange: _react2['default'].PropTypes.func,
		    onKeyDown: _react2['default'].PropTypes.func,
		    onFocus: _react2['default'].PropTypes.func,
		    onBlur: _react2['default'].PropTypes.func,
		    max: _react2['default'].PropTypes.number,
		    min: _react2['default'].PropTypes.number,
		    step: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.number, _react2['default'].PropTypes.string])
		  },
		
		  getDefaultProps: function getDefaultProps() {
		    return {
		      prefixCls: 'rc-input-number',
		      max: Infinity,
		      min: -Infinity,
		      step: 1,
		      style: {},
		      defaultValue: '',
		      onChange: noop,
		      onKeyDown: noop,
		      onFocus: noop,
		      onBlur: noop
		    };
		  },
		
		  getInitialState: function getInitialState() {
		    var value = undefined;
		    var props = this.props;
		    if ('value' in props) {
		      value = props.value;
		    } else {
		      value = props.defaultValue;
		    }
		    value = this.toPrecisionAsStep(value);
		    return {
		      inputValue: value,
		      value: value,
		      focused: props.autoFocus
		    };
		  },
		
		  componentDidMount: function componentDidMount() {
		    this.componentDidUpdate();
		  },
		
		  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
		    if ('value' in nextProps) {
		      var value = this.toPrecisionAsStep(nextProps.value);
		      this.setState({
		        inputValue: value,
		        value: value
		      });
		    }
		  },
		
		  componentDidUpdate: function componentDidUpdate() {
		    if (this.state.focused && document.activeElement !== this.refs.input) {
		      this.refs.input.focus();
		    }
		  },
		
		  onChange: function onChange(event) {
		    this.setInputValue(event.target.value.trim());
		  },
		
		  onKeyDown: function onKeyDown(e) {
		    var _props;
		
		    if (e.keyCode === 38) {
		      this.up(e);
		    } else if (e.keyCode === 40) {
		      this.down(e);
		    }
		
		    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
		      args[_key - 1] = arguments[_key];
		    }
		
		    (_props = this.props).onKeyDown.apply(_props, [e].concat(args));
		  },
		
		  onFocus: function onFocus() {
		    var _props2;
		
		    this.setState({
		      focused: true
		    });
		    (_props2 = this.props).onFocus.apply(_props2, arguments);
		  },
		
		  onBlur: function onBlur(e) {
		    var _props3;
		
		    this.setState({
		      focused: false
		    });
		    var value = this.getCurrentValidValue(e.target.value.trim());
		    this.setValue(value);
		
		    for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
		      args[_key2 - 1] = arguments[_key2];
		    }
		
		    (_props3 = this.props).onBlur.apply(_props3, [e].concat(args));
		  },
		
		  onStepMouseDown: function onStepMouseDown(e) {
		    e.preventDefault();
		    var value = this.getCurrentValidValue(this.state.inputValue);
		    this.setState({ value: value });
		  },
		
		  getCurrentValidValue: function getCurrentValidValue(value) {
		    var val = value;
		    var props = this.props;
		    if (val === '') {
		      val = '';
		    } else if (!isNaN(val)) {
		      val = Number(val);
		      if (val < props.min) {
		        val = props.min;
		      }
		      if (val > props.max) {
		        val = props.max;
		      }
		    } else {
		      val = this.state.value;
		    }
		    return this.toPrecisionAsStep(val);
		  },
		
		  setValue: function setValue(v) {
		    if (!('value' in this.props)) {
		      this.setState({
		        value: v,
		        inputValue: v
		      });
		    }
		    this.props.onChange(isNaN(v) || v === '' ? undefined : v);
		  },
		
		  setInputValue: function setInputValue(v) {
		    this.setState({
		      inputValue: v
		    });
		  },
		
		  getPrecision: function getPrecision() {
		    var props = this.props;
		    var stepString = props.step.toString();
		    if (stepString.indexOf('e-') >= 0) {
		      return parseInt(stepString.slice(stepString.indexOf('e-') + 1), 10);
		    }
		    var precision = 0;
		    if (stepString.indexOf('.') >= 0) {
		      precision = stepString.length - stepString.indexOf('.') - 1;
		    }
		    return precision;
		  },
		
		  getPrecisionFactor: function getPrecisionFactor() {
		    var precision = this.getPrecision();
		    return Math.pow(10, precision);
		  },
		
		  toPrecisionAsStep: function toPrecisionAsStep(num) {
		    if (isNaN(num) || num === '') {
		      return num;
		    }
		    var precision = this.getPrecision();
		    return Number(Number(num).toFixed(Math.abs(precision)));
		  },
		
		  upStep: function upStep(val) {
		    var _props4 = this.props;
		    var step = _props4.step;
		    var min = _props4.min;
		
		    var precisionFactor = this.getPrecisionFactor();
		    var result = undefined;
		    if (typeof val === 'number') {
		      result = (precisionFactor * val + precisionFactor * step) / precisionFactor;
		    } else {
		      result = min === -Infinity ? step : min;
		    }
		    return this.toPrecisionAsStep(result);
		  },
		
		  downStep: function downStep(val) {
		    var _props5 = this.props;
		    var step = _props5.step;
		    var min = _props5.min;
		
		    var precisionFactor = this.getPrecisionFactor();
		    var result = undefined;
		    if (typeof val === 'number') {
		      result = (precisionFactor * val - precisionFactor * step) / precisionFactor;
		    } else {
		      result = min === -Infinity ? -step : min;
		    }
		    return this.toPrecisionAsStep(result);
		  },
		
		  step: function step(type, e) {
		    if (e) {
		      e.preventDefault();
		    }
		    var props = this.props;
		    if (props.disabled) {
		      return;
		    }
		    var value = this.state.value;
		    if (isNaN(value)) {
		      return;
		    }
		    var val = this[type + 'Step'](value);
		    if (val > props.max || val < props.min) {
		      return;
		    }
		    this.setValue(val);
		    this.setState({
		      focused: true
		    });
		  },
		
		  down: function down(e) {
		    this.step('down', e);
		  },
		
		  up: function up(e) {
		    this.step('up', e);
		  },
		
		  focus: function focus() {
		    this.refs.input.focus();
		  },
		
		  render: function render() {
		    var _classNames;
		
		    var props = _extends({}, this.props);
		    var prefixCls = props.prefixCls;
		    var classes = (0, _classnames2['default'])((_classNames = {}, _defineProperty(_classNames, prefixCls, true), _defineProperty(_classNames, props.className, !!props.className), _defineProperty(_classNames, prefixCls + '-disabled', props.disabled), _defineProperty(_classNames, prefixCls + '-focused', this.state.focused), _classNames));
		    var upDisabledClass = '';
		    var downDisabledClass = '';
		    var value = this.state.value;
		    if (!isNaN(value)) {
		      var val = Number(value);
		      if (val >= props.max) {
		        upDisabledClass = prefixCls + '-handler-up-disabled';
		      }
		      if (val <= props.min) {
		        downDisabledClass = prefixCls + '-handler-down-disabled';
		      }
		    } else {
		      upDisabledClass = prefixCls + '-handler-up-disabled';
		      downDisabledClass = prefixCls + '-handler-down-disabled';
		    }
		
		    // focus state, show input value
		    // unfocus state, show valid value
		    var inputDisplayValue = undefined;
		    if (this.state.focused) {
		      inputDisplayValue = this.state.inputValue;
		    } else {
		      inputDisplayValue = this.state.value;
		    }
		
		    if (inputDisplayValue === undefined) {
		      inputDisplayValue = '';
		    }
		
		    // Remove React warning.
		    // Warning: Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both).
		    delete props.defaultValue;
		    // https://fb.me/react-unknown-prop
		    delete props.prefixCls;
		
		    // ref for test
		    return _react2['default'].createElement(
		      'div',
		      { className: classes, style: props.style },
		      _react2['default'].createElement(
		        'div',
		        { className: prefixCls + '-handler-wrap' },
		        _react2['default'].createElement(
		          'a',
		          { unselectable: 'unselectable',
		            ref: 'up',
		            onClick: upDisabledClass ? noop : this.up,
		            onMouseDown: this.onStepMouseDown,
		            className: prefixCls + '-handler ' + prefixCls + '-handler-up ' + upDisabledClass },
		          _react2['default'].createElement('span', { unselectable: 'unselectable', className: prefixCls + '-handler-up-inner',
		            onClick: preventDefault })
		        ),
		        _react2['default'].createElement(
		          'a',
		          { unselectable: 'unselectable',
		            ref: 'down',
		            onMouseDown: this.onStepMouseDown,
		            onClick: downDisabledClass ? noop : this.down,
		            className: prefixCls + '-handler ' + prefixCls + '-handler-down ' + downDisabledClass },
		          _react2['default'].createElement('span', { unselectable: 'unselectable', className: prefixCls + '-handler-down-inner',
		            onClick: preventDefault })
		        )
		      ),
		      _react2['default'].createElement(
		        'div',
		        { className: prefixCls + '-input-wrap' },
		        _react2['default'].createElement('input', _extends({}, props, {
		          style: null,
		          className: prefixCls + '-input',
		          autoComplete: 'off',
		          onFocus: this.onFocus,
		          onBlur: this.onBlur,
		          onKeyDown: this.onKeyDown,
		          autoFocus: props.autoFocus,
		          readOnly: props.readOnly,
		          disabled: props.disabled,
		          max: props.max,
		          min: props.min,
		          name: props.name,
		          onChange: this.onChange,
		          ref: 'input',
		          value: inputDisplayValue
		        }))
		      )
		    );
		  }
		});
		
		module.exports = InputNumber;
	
	/***/ },
	/* 320 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		module.exports = __webpack_require__(319);
	
	/***/ },
	/* 321 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _objectAssign = __webpack_require__(10);
		
		var _objectAssign2 = _interopRequireDefault(_objectAssign);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		var DOMWrap = _react2["default"].createClass({
		  displayName: 'DOMWrap',
		
		  propTypes: {
		    tag: _react.PropTypes.string,
		    hiddenClassName: _react.PropTypes.string,
		    visible: _react.PropTypes.bool
		  },
		
		  getDefaultProps: function getDefaultProps() {
		    return {
		      tag: 'div'
		    };
		  },
		  render: function render() {
		    var props = (0, _objectAssign2["default"])({}, this.props);
		    if (!props.visible) {
		      props.className = props.className || '';
		      props.className += ' ' + props.hiddenClassName;
		    }
		    var Tag = props.tag;
		    delete props.tag;
		    delete props.hiddenClassName;
		    delete props.visible;
		    return _react2["default"].createElement(Tag, props);
		  }
		});
		
		exports["default"] = DOMWrap;
		module.exports = exports['default'];
	
	/***/ },
	/* 322 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		var Divider = _react2["default"].createClass({
		  displayName: 'Divider',
		  getDefaultProps: function getDefaultProps() {
		    return {
		      disabled: true
		    };
		  },
		  render: function render() {
		    var props = this.props;
		    var className = props.className || '';
		    var rootPrefixCls = props.rootPrefixCls;
		    className += ' ' + (rootPrefixCls + '-item-divider');
		    return _react2["default"].createElement('li', { className: className });
		  }
		});
		
		exports["default"] = Divider;
		module.exports = exports['default'];
	
	/***/ },
	/* 323 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _MenuMixin = __webpack_require__(108);
		
		var _MenuMixin2 = _interopRequireDefault(_MenuMixin);
		
		var _objectAssign = __webpack_require__(10);
		
		var _objectAssign2 = _interopRequireDefault(_objectAssign);
		
		var _util = __webpack_require__(24);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		var Menu = _react2["default"].createClass({
		  displayName: 'Menu',
		
		  propTypes: {
		    openSubMenuOnMouseEnter: _react.PropTypes.bool,
		    closeSubMenuOnMouseLeave: _react.PropTypes.bool,
		    selectedKeys: _react.PropTypes.arrayOf(_react.PropTypes.string),
		    defaultSelectedKeys: _react.PropTypes.arrayOf(_react.PropTypes.string),
		    defaultOpenKeys: _react.PropTypes.arrayOf(_react.PropTypes.string),
		    openKeys: _react.PropTypes.arrayOf(_react.PropTypes.string),
		    mode: _react.PropTypes.string,
		    onClick: _react.PropTypes.func,
		    onSelect: _react.PropTypes.func,
		    onDeselect: _react.PropTypes.func,
		    onDestroy: _react.PropTypes.func,
		    openTransitionName: _react.PropTypes.string,
		    openAnimation: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.object]),
		    level: _react.PropTypes.number,
		    eventKey: _react.PropTypes.string,
		    selectable: _react.PropTypes.bool,
		    children: _react.PropTypes.any
		  },
		
		  mixins: [_MenuMixin2["default"]],
		
		  getDefaultProps: function getDefaultProps() {
		    return {
		      openSubMenuOnMouseEnter: true,
		      closeSubMenuOnMouseLeave: true,
		      selectable: true,
		      onClick: _util.noop,
		      onSelect: _util.noop,
		      onOpen: _util.noop,
		      onClose: _util.noop,
		      onDeselect: _util.noop,
		      defaultSelectedKeys: [],
		      defaultOpenKeys: []
		    };
		  },
		  getInitialState: function getInitialState() {
		    var props = this.props;
		    var selectedKeys = props.defaultSelectedKeys;
		    var openKeys = props.defaultOpenKeys;
		    if ('selectedKeys' in props) {
		      selectedKeys = props.selectedKeys || [];
		    }
		    if ('openKeys' in props) {
		      openKeys = props.openKeys || [];
		    }
		    return {
		      selectedKeys: selectedKeys, openKeys: openKeys
		    };
		  },
		  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
		    var props = {};
		    if ('selectedKeys' in nextProps) {
		      props.selectedKeys = nextProps.selectedKeys;
		    }
		    if ('openKeys' in nextProps) {
		      props.openKeys = nextProps.openKeys;
		    }
		    this.setState(props);
		  },
		  onDestroy: function onDestroy(key) {
		    var state = this.state;
		    var props = this.props;
		    var selectedKeys = state.selectedKeys;
		    var openKeys = state.openKeys;
		    var index = selectedKeys.indexOf(key);
		    if (!('selectedKeys' in props) && index !== -1) {
		      selectedKeys.splice(index, 1);
		    }
		    index = openKeys.indexOf(key);
		    if (!('openKeys' in props) && index !== -1) {
		      openKeys.splice(index, 1);
		    }
		  },
		  onItemHover: function onItemHover(e) {
		    var _this = this;
		
		    var item = e.item;
		    // special for top sub menu
		
		    if (this.props.mode !== 'inline' && !this.props.closeSubMenuOnMouseLeave && item.isSubMenu) {
		      (function () {
		        var activeKey = _this.state.activeKey;
		        var activeItem = _this.getFlatInstanceArray().filter(function (c) {
		          return c && c.props.eventKey === activeKey;
		        })[0];
		        if (activeItem && activeItem.props.open) {
		          _this.onOpenChange({
		            key: item.props.eventKey,
		            item: e.item,
		            open: true
		          });
		        }
		      })();
		    }
		
		    this.onCommonItemHover(e);
		  },
		  onSelect: function onSelect(selectInfo) {
		    var props = this.props;
		    if (props.selectable) {
		      // root menu
		      var selectedKeys = this.state.selectedKeys;
		      var selectedKey = selectInfo.key;
		      if (props.multiple) {
		        selectedKeys = selectedKeys.concat([selectedKey]);
		      } else {
		        selectedKeys = [selectedKey];
		      }
		      if (!('selectedKeys' in props)) {
		        this.setState({
		          selectedKeys: selectedKeys
		        });
		      }
		      props.onSelect((0, _objectAssign2["default"])({}, selectInfo, {
		        selectedKeys: selectedKeys
		      }));
		    }
		  },
		  onClick: function onClick(e) {
		    var props = this.props;
		    props.onClick(e);
		  },
		  onOpenChange: function onOpenChange(e) {
		    var props = this.props;
		    var openKeys = this.state.openKeys;
		    var changed = true;
		    if (e.open) {
		      changed = openKeys.indexOf(e.key) === -1;
		      if (changed) {
		        openKeys = openKeys.concat(e.key);
		      }
		    } else {
		      var index = openKeys.indexOf(e.key);
		      changed = index !== -1;
		      if (changed) {
		        openKeys = openKeys.concat();
		        openKeys.splice(index, 1);
		      }
		    }
		    if (changed) {
		      // hack, synchronous call from onTitleMouseEnter
		      this.state.openKeys = openKeys;
		      if (!('openKeys' in this.props)) {
		        // hack: batch does not update state
		        this.setState({ openKeys: openKeys });
		      }
		      var info = (0, _objectAssign2["default"])({ openKeys: openKeys }, e);
		      if (e.open) {
		        props.onOpen(info);
		      } else {
		        props.onClose(info);
		      }
		    }
		  },
		  onDeselect: function onDeselect(selectInfo) {
		    var props = this.props;
		    if (props.selectable) {
		      var selectedKeys = this.state.selectedKeys.concat();
		      var selectedKey = selectInfo.key;
		      var index = selectedKeys.indexOf(selectedKey);
		      if (index !== -1) {
		        selectedKeys.splice(index, 1);
		      }
		      if (!('selectedKeys' in props)) {
		        this.setState({
		          selectedKeys: selectedKeys
		        });
		      }
		      props.onDeselect((0, _objectAssign2["default"])({}, selectInfo, {
		        selectedKeys: selectedKeys
		      }));
		    }
		  },
		  getOpenTransitionName: function getOpenTransitionName() {
		    var props = this.props;
		    var transitionName = props.openTransitionName;
		    var animationName = props.openAnimation;
		    if (!transitionName && typeof animationName === 'string') {
		      transitionName = props.prefixCls + '-open-' + animationName;
		    }
		    return transitionName;
		  },
		  isInlineMode: function isInlineMode() {
		    return this.props.mode === 'inline';
		  },
		  lastOpenSubMenu: function lastOpenSubMenu() {
		    var _this2 = this;
		
		    var lastOpen = [];
		    if (this.state.openKeys.length) {
		      lastOpen = this.getFlatInstanceArray().filter(function (c) {
		        return c && _this2.state.openKeys.indexOf(c.props.eventKey) !== -1;
		      });
		    }
		    return lastOpen[0];
		  },
		  renderMenuItem: function renderMenuItem(c, i, subIndex) {
		    if (!c) return null;
		    var key = (0, _util.getKeyFromChildrenIndex)(c, this.props.eventKey, i);
		    var state = this.state;
		    var extraProps = {
		      openKeys: state.openKeys,
		      open: state.openKeys.indexOf(key) !== -1,
		      selectedKeys: state.selectedKeys,
		      selected: state.selectedKeys.indexOf(key) !== -1,
		      openSubMenuOnMouseEnter: this.props.openSubMenuOnMouseEnter
		    };
		    return this.renderCommonMenuItem(c, i, subIndex, extraProps);
		  },
		  render: function render() {
		    var props = (0, _objectAssign2["default"])({}, this.props);
		    props.className += ' ' + props.prefixCls + '-root';
		    return this.renderRoot(props);
		  }
		});
		
		exports["default"] = Menu;
		module.exports = exports['default'];
	
	/***/ },
	/* 324 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _KeyCode = __webpack_require__(11);
		
		var _KeyCode2 = _interopRequireDefault(_KeyCode);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var _util = __webpack_require__(24);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		/* eslint react/no-is-mounted:0 */
		
		var MenuItem = _react2["default"].createClass({
		  displayName: 'MenuItem',
		
		  propTypes: {
		    rootPrefixCls: _react.PropTypes.string,
		    eventKey: _react.PropTypes.string,
		    active: _react.PropTypes.bool,
		    selected: _react.PropTypes.bool,
		    disabled: _react.PropTypes.bool,
		    title: _react.PropTypes.string,
		    onSelect: _react.PropTypes.func,
		    onClick: _react.PropTypes.func,
		    onDeselect: _react.PropTypes.func,
		    parentMenu: _react.PropTypes.object,
		    onItemHover: _react.PropTypes.func,
		    onDestroy: _react.PropTypes.func,
		    onMouseEnter: _react.PropTypes.func,
		    onMouseLeave: _react.PropTypes.func
		  },
		
		  getDefaultProps: function getDefaultProps() {
		    return {
		      onSelect: _util.noop,
		      onMouseEnter: _util.noop,
		      onMouseLeave: _util.noop
		    };
		  },
		  componentWillUnmount: function componentWillUnmount() {
		    var props = this.props;
		    if (props.onDestroy) {
		      props.onDestroy(props.eventKey);
		    }
		    if (props.parentMenu.menuItemInstance === this) {
		      this.clearMenuItemMouseLeaveTimer();
		    }
		  },
		  onKeyDown: function onKeyDown(e) {
		    var keyCode = e.keyCode;
		    if (keyCode === _KeyCode2["default"].ENTER) {
		      this.onClick(e);
		      return true;
		    }
		  },
		  onMouseLeave: function onMouseLeave(e) {
		    var _this = this;
		
		    var props = this.props;
		    var eventKey = props.eventKey;
		    var parentMenu = props.parentMenu;
		    parentMenu.menuItemInstance = this;
		    parentMenu.menuItemMouseLeaveFn = function () {
		      if (_this.isMounted() && props.active) {
		        props.onItemHover({
		          key: eventKey,
		          item: _this,
		          hover: false,
		          trigger: 'mouseleave'
		        });
		      }
		    };
		    parentMenu.menuItemMouseLeaveTimer = setTimeout(parentMenu.menuItemMouseLeaveFn, 30);
		    props.onMouseLeave({
		      key: eventKey,
		      domEvent: e
		    });
		  },
		  onMouseEnter: function onMouseEnter(e) {
		    var props = this.props;
		    var parentMenu = props.parentMenu;
		    this.clearMenuItemMouseLeaveTimer(parentMenu.menuItemInstance !== this);
		    if (parentMenu.subMenuInstance) {
		      parentMenu.subMenuInstance.clearSubMenuTimers(true);
		    }
		    var eventKey = props.eventKey;
		    props.onItemHover({
		      key: eventKey,
		      item: this,
		      hover: true,
		      trigger: 'mouseenter'
		    });
		    props.onMouseEnter({
		      key: eventKey,
		      domEvent: e
		    });
		  },
		  onClick: function onClick(e) {
		    var props = this.props;
		    var eventKey = props.eventKey;
		    var info = {
		      key: eventKey,
		      keyPath: [eventKey],
		      item: this,
		      domEvent: e
		    };
		    props.onClick(info);
		    if (props.multiple) {
		      if (props.selected) {
		        props.onDeselect(info);
		      } else {
		        props.onSelect(info);
		      }
		    } else if (!props.selected) {
		      props.onSelect(info);
		    }
		  },
		  getPrefixCls: function getPrefixCls() {
		    return this.props.rootPrefixCls + '-item';
		  },
		  getActiveClassName: function getActiveClassName() {
		    return this.getPrefixCls() + '-active';
		  },
		  getSelectedClassName: function getSelectedClassName() {
		    return this.getPrefixCls() + '-selected';
		  },
		  getDisabledClassName: function getDisabledClassName() {
		    return this.getPrefixCls() + '-disabled';
		  },
		  clearMenuItemMouseLeaveTimer: function clearMenuItemMouseLeaveTimer(callFn) {
		    var props = this.props;
		    var parentMenu = props.parentMenu;
		    if (parentMenu.menuItemMouseLeaveTimer) {
		      clearTimeout(parentMenu.menuItemMouseLeaveTimer);
		      parentMenu.menuItemMouseLeaveTimer = null;
		      if (callFn && parentMenu.menuItemMouseLeaveFn) {
		        parentMenu.menuItemMouseLeaveFn();
		      }
		      parentMenu.menuItemMouseLeaveFn = null;
		    }
		  },
		  render: function render() {
		    var props = this.props;
		    var classes = {};
		    classes[this.getActiveClassName()] = !props.disabled && props.active;
		    classes[this.getSelectedClassName()] = props.selected;
		    classes[this.getDisabledClassName()] = props.disabled;
		    classes[this.getPrefixCls()] = true;
		    classes[props.className] = !!props.className;
		    var attrs = _extends({}, props.attribute, {
		      title: props.title,
		      className: (0, _classnames2["default"])(classes),
		      role: 'menuitem',
		      'aria-selected': props.selected,
		      'aria-disabled': props.disabled
		    });
		    var mouseEvent = {};
		    if (!props.disabled) {
		      mouseEvent = {
		        onClick: this.onClick,
		        onMouseLeave: this.onMouseLeave,
		        onMouseEnter: this.onMouseEnter
		      };
		    }
		    var style = _extends({}, props.style);
		    if (props.mode === 'inline') {
		      style.paddingLeft = props.inlineIndent * props.level;
		    }
		    return _react2["default"].createElement(
		      'li',
		      _extends({
		        style: style
		      }, attrs, mouseEvent),
		      props.children
		    );
		  }
		});
		
		exports["default"] = MenuItem;
		module.exports = exports['default'];
	
	/***/ },
	/* 325 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		var MenuItemGroup = _react2["default"].createClass({
		  displayName: 'MenuItemGroup',
		
		  propTypes: {
		    renderMenuItem: _react.PropTypes.func,
		    index: _react.PropTypes.number
		  },
		
		  getDefaultProps: function getDefaultProps() {
		    return {
		      disabled: true
		    };
		  },
		  renderInnerMenuItem: function renderInnerMenuItem(item, subIndex) {
		    var renderMenuItem = this.props.renderMenuItem;
		    return renderMenuItem(item, this.props.index, subIndex);
		  },
		  render: function render() {
		    var props = this.props;
		    var className = props.className || '';
		    var rootPrefixCls = props.rootPrefixCls;
		
		    className += ' ' + rootPrefixCls + '-item-group';
		    var titleClassName = rootPrefixCls + '-item-group-title';
		    var listClassName = rootPrefixCls + '-item-group-list';
		    return _react2["default"].createElement(
		      'li',
		      { className: className },
		      _react2["default"].createElement(
		        'div',
		        { className: titleClassName },
		        props.title
		      ),
		      _react2["default"].createElement(
		        'ul',
		        { className: listClassName },
		        _react2["default"].Children.map(props.children, this.renderInnerMenuItem)
		      )
		    );
		  }
		});
		
		MenuItemGroup.isMenuItemGroup = true;
		
		exports["default"] = MenuItemGroup;
		module.exports = exports['default'];
	
	/***/ },
	/* 326 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _SubPopupMenu = __webpack_require__(328);
		
		var _SubPopupMenu2 = _interopRequireDefault(_SubPopupMenu);
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _KeyCode = __webpack_require__(11);
		
		var _KeyCode2 = _interopRequireDefault(_KeyCode);
		
		var _guid = __webpack_require__(124);
		
		var _guid2 = _interopRequireDefault(_guid);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var _util = __webpack_require__(24);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		/* eslint react/no-is-mounted:0 */
		
		var SubMenu = _react2["default"].createClass({
		  displayName: 'SubMenu',
		
		  propTypes: {
		    parentMenu: _react.PropTypes.object,
		    title: _react.PropTypes.node,
		    onClick: _react.PropTypes.func,
		    onOpenChange: _react.PropTypes.func,
		    rootPrefixCls: _react.PropTypes.string,
		    eventKey: _react.PropTypes.string,
		    multiple: _react.PropTypes.bool,
		    active: _react.PropTypes.bool,
		    open: _react.PropTypes.bool,
		    onSelect: _react.PropTypes.func,
		    closeSubMenuOnMouseLeave: _react.PropTypes.bool,
		    openSubMenuOnMouseEnter: _react.PropTypes.bool,
		    onDeselect: _react.PropTypes.func,
		    onDestroy: _react.PropTypes.func,
		    onItemHover: _react.PropTypes.func,
		    onMouseEnter: _react.PropTypes.func,
		    onMouseLeave: _react.PropTypes.func,
		    onTitleMouseEnter: _react.PropTypes.func,
		    onTitleMouseLeave: _react.PropTypes.func,
		    onTitleClick: _react.PropTypes.func
		  },
		
		  mixins: [__webpack_require__(327)],
		
		  getDefaultProps: function getDefaultProps() {
		    return {
		      onMouseEnter: _util.noop,
		      onMouseLeave: _util.noop,
		      onTitleMouseEnter: _util.noop,
		      onTitleMouseLeave: _util.noop,
		      onTitleClick: _util.noop,
		      title: ''
		    };
		  },
		  getInitialState: function getInitialState() {
		    this.isSubMenu = 1;
		    return {
		      defaultActiveFirst: false
		    };
		  },
		  componentWillUnmount: function componentWillUnmount() {
		    var props = this.props;
		    if (props.onDestroy) {
		      props.onDestroy(props.eventKey);
		    }
		    if (props.parentMenu.subMenuInstance === this) {
		      this.clearSubMenuTimers();
		    }
		  },
		  onDestroy: function onDestroy(key) {
		    this.props.onDestroy(key);
		  },
		  onKeyDown: function onKeyDown(e) {
		    var keyCode = e.keyCode;
		    var menu = this.menuInstance;
		
		    if (keyCode === _KeyCode2["default"].ENTER) {
		      this.onTitleClick(e);
		      this.setState({
		        defaultActiveFirst: true
		      });
		      return true;
		    }
		
		    if (keyCode === _KeyCode2["default"].RIGHT) {
		      if (this.props.open) {
		        menu.onKeyDown(e);
		      } else {
		        this.triggerOpenChange(true);
		        this.setState({
		          defaultActiveFirst: true
		        });
		      }
		      return true;
		    }
		    if (keyCode === _KeyCode2["default"].LEFT) {
		      var handled = void 0;
		      if (this.props.open) {
		        handled = menu.onKeyDown(e);
		      } else {
		        return undefined;
		      }
		      if (!handled) {
		        this.triggerOpenChange(false);
		        handled = true;
		      }
		      return handled;
		    }
		
		    if (this.props.open && (keyCode === _KeyCode2["default"].UP || keyCode === _KeyCode2["default"].DOWN)) {
		      return menu.onKeyDown(e);
		    }
		  },
		  onOpenChange: function onOpenChange(e) {
		    this.props.onOpenChange(this.addKeyPath(e));
		  },
		  onMouseEnter: function onMouseEnter(e) {
		    var props = this.props;
		    this.clearSubMenuLeaveTimer(props.parentMenu.subMenuInstance !== this);
		    props.onMouseEnter({
		      key: props.eventKey,
		      domEvent: e
		    });
		  },
		  onTitleMouseEnter: function onTitleMouseEnter(e) {
		    var props = this.props;
		    var parentMenu = props.parentMenu;
		    this.clearSubMenuTitleLeaveTimer(parentMenu.subMenuInstance !== this);
		    if (parentMenu.menuItemInstance) {
		      parentMenu.menuItemInstance.clearMenuItemMouseLeaveTimer(true);
		    }
		    props.onItemHover({
		      key: props.eventKey,
		      item: this,
		      hover: true,
		      trigger: 'mouseenter'
		    });
		    if (props.openSubMenuOnMouseEnter) {
		      this.triggerOpenChange(true);
		    }
		    this.setState({
		      defaultActiveFirst: false
		    });
		    props.onTitleMouseEnter({
		      key: props.eventKey,
		      domEvent: e
		    });
		  },
		  onTitleMouseLeave: function onTitleMouseLeave(e) {
		    var _this = this;
		
		    var props = this.props;
		
		    var parentMenu = props.parentMenu;
		    parentMenu.subMenuInstance = this;
		    parentMenu.subMenuTitleLeaveFn = function () {
		      var eventKey = props.eventKey;
		      if (_this.isMounted()) {
		        // leave whole sub tree
		        // still active
		        if (props.mode === 'inline' && props.active) {
		          props.onItemHover({
		            key: eventKey,
		            item: _this,
		            hover: false,
		            trigger: 'mouseleave'
		          });
		        }
		        props.onTitleMouseLeave({
		          key: props.eventKey,
		          domEvent: e
		        });
		      }
		    };
		    parentMenu.subMenuTitleLeaveTimer = setTimeout(parentMenu.subMenuTitleLeaveFn, 100);
		  },
		  onMouseLeave: function onMouseLeave(e) {
		    var _this2 = this;
		
		    var props = this.props;
		
		    var parentMenu = props.parentMenu;
		    parentMenu.subMenuInstance = this;
		    parentMenu.subMenuLeaveFn = function () {
		      var eventKey = props.eventKey;
		      if (_this2.isMounted()) {
		        // leave whole sub tree
		        // still active
		        if (props.mode !== 'inline') {
		          if (props.active) {
		            props.onItemHover({
		              key: eventKey,
		              item: _this2,
		              hover: false,
		              trigger: 'mouseleave'
		            });
		          }
		          if (props.open) {
		            if (props.closeSubMenuOnMouseLeave) {
		              _this2.triggerOpenChange(false);
		            }
		          }
		        }
		        // trigger mouseleave
		        props.onMouseLeave({
		          key: eventKey,
		          domEvent: e
		        });
		      }
		    };
		    // prevent popup menu and submenu gap
		    parentMenu.subMenuLeaveTimer = setTimeout(parentMenu.subMenuLeaveFn, 100);
		  },
		  onTitleClick: function onTitleClick(e) {
		    var props = this.props;
		
		    props.onTitleClick({
		      key: props.eventKey,
		      domEvent: e
		    });
		    if (props.openSubMenuOnMouseEnter) {
		      return;
		    }
		    this.triggerOpenChange(!props.open, 'click');
		    this.setState({
		      defaultActiveFirst: false
		    });
		  },
		  onSubMenuClick: function onSubMenuClick(info) {
		    this.props.onClick(this.addKeyPath(info));
		  },
		  onSelect: function onSelect(info) {
		    this.props.onSelect(info);
		  },
		  onDeselect: function onDeselect(info) {
		    this.props.onDeselect(info);
		  },
		  getPrefixCls: function getPrefixCls() {
		    return this.props.rootPrefixCls + '-submenu';
		  },
		  getActiveClassName: function getActiveClassName() {
		    return this.getPrefixCls() + '-active';
		  },
		  getDisabledClassName: function getDisabledClassName() {
		    return this.getPrefixCls() + '-disabled';
		  },
		  getOpenClassName: function getOpenClassName() {
		    return this.props.rootPrefixCls + '-submenu-open';
		  },
		  saveMenuInstance: function saveMenuInstance(c) {
		    this.menuInstance = c;
		  },
		  addKeyPath: function addKeyPath(info) {
		    return _extends({}, info, {
		      keyPath: (info.keyPath || []).concat(this.props.eventKey)
		    });
		  },
		  triggerOpenChange: function triggerOpenChange(open, type) {
		    var key = this.props.eventKey;
		    this.onOpenChange({
		      key: key,
		      item: this,
		      trigger: type,
		      open: open
		    });
		  },
		  clearSubMenuTimers: function clearSubMenuTimers(callFn) {
		    this.clearSubMenuLeaveTimer(callFn);
		    this.clearSubMenuTitleLeaveTimer(callFn);
		  },
		  clearSubMenuTitleLeaveTimer: function clearSubMenuTitleLeaveTimer(callFn) {
		    var parentMenu = this.props.parentMenu;
		    if (parentMenu.subMenuTitleLeaveTimer) {
		      clearTimeout(parentMenu.subMenuTitleLeaveTimer);
		      parentMenu.subMenuTitleLeaveTimer = null;
		      if (callFn && parentMenu.subMenuTitleLeaveFn) {
		        parentMenu.subMenuTitleLeaveFn();
		      }
		      parentMenu.subMenuTitleLeaveFn = null;
		    }
		  },
		  clearSubMenuLeaveTimer: function clearSubMenuLeaveTimer(callFn) {
		    var parentMenu = this.props.parentMenu;
		    if (parentMenu.subMenuLeaveTimer) {
		      clearTimeout(parentMenu.subMenuLeaveTimer);
		      parentMenu.subMenuLeaveTimer = null;
		      if (callFn && parentMenu.subMenuLeaveFn) {
		        parentMenu.subMenuLeaveFn();
		      }
		      parentMenu.subMenuLeaveFn = null;
		    }
		  },
		  renderChildren: function renderChildren(children) {
		    var props = this.props;
		    var baseProps = {
		      mode: props.mode === 'horizontal' ? 'vertical' : props.mode,
		      visible: props.open,
		      level: props.level + 1,
		      inlineIndent: props.inlineIndent,
		      focusable: false,
		      onClick: this.onSubMenuClick,
		      onSelect: this.onSelect,
		      onDeselect: this.onDeselect,
		      onDestroy: this.onDestroy,
		      selectedKeys: props.selectedKeys,
		      eventKey: props.eventKey + '-menu-',
		      openKeys: props.openKeys,
		      openTransitionName: props.openTransitionName,
		      openAnimation: props.openAnimation,
		      onOpenChange: this.onOpenChange,
		      closeSubMenuOnMouseLeave: props.closeSubMenuOnMouseLeave,
		      defaultActiveFirst: this.state.defaultActiveFirst,
		      multiple: props.multiple,
		      prefixCls: props.rootPrefixCls,
		      id: this._menuId,
		      ref: this.saveMenuInstance
		    };
		    return _react2["default"].createElement(
		      _SubPopupMenu2["default"],
		      baseProps,
		      children
		    );
		  },
		  render: function render() {
		    var _classes;
		
		    this.haveOpen = this.haveOpen || this.props.open;
		    var props = this.props;
		    var prefixCls = this.getPrefixCls();
		    var classes = (_classes = {}, _defineProperty(_classes, props.className, !!props.className), _defineProperty(_classes, prefixCls + '-' + props.mode, 1), _classes);
		
		    classes[this.getOpenClassName()] = this.props.open;
		    classes[this.getActiveClassName()] = props.active;
		    classes[this.getDisabledClassName()] = props.disabled;
		    this._menuId = this._menuId || (0, _guid2["default"])();
		    classes[prefixCls] = true;
		    classes[prefixCls + '-' + props.mode] = 1;
		    var titleClickEvents = {};
		    var mouseEvents = {};
		    var titleMouseEvents = {};
		    if (!props.disabled) {
		      titleClickEvents = {
		        onClick: this.onTitleClick
		      };
		      mouseEvents = {
		        onMouseLeave: this.onMouseLeave,
		        onMouseEnter: this.onMouseEnter
		      };
		      // only works in title, not outer li
		      titleMouseEvents = {
		        onMouseEnter: this.onTitleMouseEnter,
		        onMouseLeave: this.onTitleMouseLeave
		      };
		    }
		    var style = {};
		    if (props.mode === 'inline') {
		      style.paddingLeft = props.inlineIndent * props.level;
		    }
		    return _react2["default"].createElement(
		      'li',
		      _extends({ className: (0, _classnames2["default"])(classes) }, mouseEvents),
		      _react2["default"].createElement(
		        'div',
		        _extends({
		          style: style,
		          className: prefixCls + '-title'
		        }, titleMouseEvents, titleClickEvents, {
		          'aria-open': props.open,
		          'aria-owns': this._menuId,
		          'aria-haspopup': 'true'
		        }),
		        props.title
		      ),
		      this.renderChildren(props.children)
		    );
		  }
		});
		
		exports["default"] = SubMenu;
		module.exports = exports['default'];
	
	/***/ },
	/* 327 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _KeyCode = __webpack_require__(11);
		
		var _KeyCode2 = _interopRequireDefault(_KeyCode);
		
		var _addEventListener = __webpack_require__(13);
		
		var _addEventListener2 = _interopRequireDefault(_addEventListener);
		
		var _contains = __webpack_require__(49);
		
		var _contains2 = _interopRequireDefault(_contains);
		
		var _reactDom = __webpack_require__(4);
		
		var _reactDom2 = _interopRequireDefault(_reactDom);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		exports["default"] = {
		  componentDidMount: function componentDidMount() {
		    this.componentDidUpdate();
		  },
		  componentDidUpdate: function componentDidUpdate() {
		    if (this.props.mode !== 'inline') {
		      if (this.props.open) {
		        this.bindRootCloseHandlers();
		      } else {
		        this.unbindRootCloseHandlers();
		      }
		    }
		  },
		  handleDocumentKeyUp: function handleDocumentKeyUp(e) {
		    if (e.keyCode === _KeyCode2["default"].ESC) {
		      this.props.onItemHover({
		        key: this.props.eventKey,
		        item: this,
		        hover: false
		      });
		    }
		  },
		  handleDocumentClick: function handleDocumentClick(e) {
		    // If the click originated from within this component
		    // don't do anything.
		    if ((0, _contains2["default"])(_reactDom2["default"].findDOMNode(this), e.target)) {
		      return;
		    }
		    var props = this.props;
		    props.onItemHover({
		      hover: false,
		      item: this,
		      key: this.props.eventKey
		    });
		    this.triggerOpenChange(false);
		  },
		  bindRootCloseHandlers: function bindRootCloseHandlers() {
		    if (!this._onDocumentClickListener) {
		      this._onDocumentClickListener = (0, _addEventListener2["default"])(document, 'click', this.handleDocumentClick);
		      this._onDocumentKeyupListener = (0, _addEventListener2["default"])(document, 'keyup', this.handleDocumentKeyUp);
		    }
		  },
		  unbindRootCloseHandlers: function unbindRootCloseHandlers() {
		    if (this._onDocumentClickListener) {
		      this._onDocumentClickListener.remove();
		      this._onDocumentClickListener = null;
		    }
		
		    if (this._onDocumentKeyupListener) {
		      this._onDocumentKeyupListener.remove();
		      this._onDocumentKeyupListener = null;
		    }
		  },
		  componentWillUnmount: function componentWillUnmount() {
		    this.unbindRootCloseHandlers();
		  }
		};
		module.exports = exports['default'];
	
	/***/ },
	/* 328 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _MenuMixin = __webpack_require__(108);
		
		var _MenuMixin2 = _interopRequireDefault(_MenuMixin);
		
		var _objectAssign = __webpack_require__(10);
		
		var _objectAssign2 = _interopRequireDefault(_objectAssign);
		
		var _util = __webpack_require__(24);
		
		var _rcAnimate = __webpack_require__(7);
		
		var _rcAnimate2 = _interopRequireDefault(_rcAnimate);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		var SubPopupMenu = _react2["default"].createClass({
		  displayName: 'SubPopupMenu',
		
		  propTypes: {
		    onSelect: _react.PropTypes.func,
		    onClick: _react.PropTypes.func,
		    onDeselect: _react.PropTypes.func,
		    onOpenChange: _react.PropTypes.func,
		    onDestroy: _react.PropTypes.func,
		    openTransitionName: _react.PropTypes.string,
		    openAnimation: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.object]),
		    openKeys: _react.PropTypes.arrayOf(_react.PropTypes.string),
		    closeSubMenuOnMouseLeave: _react.PropTypes.bool,
		    visible: _react.PropTypes.bool,
		    children: _react.PropTypes.any
		  },
		
		  mixins: [_MenuMixin2["default"]],
		
		  onDeselect: function onDeselect(selectInfo) {
		    this.props.onDeselect(selectInfo);
		  },
		  onSelect: function onSelect(selectInfo) {
		    this.props.onSelect(selectInfo);
		  },
		  onClick: function onClick(e) {
		    this.props.onClick(e);
		  },
		  onOpenChange: function onOpenChange(e) {
		    this.props.onOpenChange(e);
		  },
		  onDestroy: function onDestroy(key) {
		    this.props.onDestroy(key);
		  },
		  onItemHover: function onItemHover(e) {
		    this.onCommonItemHover(e);
		  },
		  getOpenTransitionName: function getOpenTransitionName() {
		    return this.props.openTransitionName;
		  },
		  renderMenuItem: function renderMenuItem(c, i, subIndex) {
		    var props = this.props;
		    var key = (0, _util.getKeyFromChildrenIndex)(c, props.eventKey, i);
		    var extraProps = {
		      openKeys: props.openKeys,
		      selectedKeys: props.selectedKeys,
		      open: props.openKeys.indexOf(key) !== -1,
		      selected: props.selectedKeys.indexOf(key) !== -1,
		      openSubMenuOnMouseEnter: true
		    };
		    return this.renderCommonMenuItem(c, i, subIndex, extraProps);
		  },
		  render: function render() {
		    var renderFirst = this.renderFirst;
		    this.renderFirst = 1;
		    this.haveOpened = this.haveOpened || this.props.visible;
		    if (!this.haveOpened) {
		      return null;
		    }
		    var transitionAppear = true;
		    if (!renderFirst && this.props.visible) {
		      transitionAppear = false;
		    }
		    var props = (0, _objectAssign2["default"])({}, this.props);
		    props.className += ' ' + props.prefixCls + '-sub';
		    var animProps = {};
		    if (props.openTransitionName) {
		      animProps.transitionName = props.openTransitionName;
		    } else if (_typeof(props.openAnimation) === 'object') {
		      animProps.animation = (0, _objectAssign2["default"])({}, props.openAnimation);
		      if (!transitionAppear) {
		        delete animProps.animation.appear;
		      }
		    }
		    return _react2["default"].createElement(
		      _rcAnimate2["default"],
		      _extends({}, animProps, {
		        showProp: 'visible',
		        component: '',
		        transitionAppear: transitionAppear
		      }),
		      this.renderRoot(props)
		    );
		  }
		});
		
		exports["default"] = SubPopupMenu;
		module.exports = exports['default'];
	
	/***/ },
	/* 329 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		var Notice = _react2["default"].createClass({
		  displayName: 'Notice',
		
		  propTypes: {
		    duration: _react.PropTypes.number,
		    onClose: _react.PropTypes.func,
		    children: _react.PropTypes.any
		  },
		
		  getDefaultProps: function getDefaultProps() {
		    return {
		      onEnd: function onEnd() {},
		      onClose: function onClose() {},
		
		      duration: 1.5,
		      style: {
		        right: '50%'
		      }
		    };
		  },
		  componentDidMount: function componentDidMount() {
		    var _this = this;
		
		    if (this.props.duration) {
		      this.closeTimer = setTimeout(function () {
		        _this.close();
		      }, this.props.duration * 1000);
		    }
		  },
		  componentWillUnmount: function componentWillUnmount() {
		    this.clearCloseTimer();
		  },
		  clearCloseTimer: function clearCloseTimer() {
		    if (this.closeTimer) {
		      clearTimeout(this.closeTimer);
		      this.closeTimer = null;
		    }
		  },
		  close: function close() {
		    this.clearCloseTimer();
		    this.props.onClose();
		  },
		  render: function render() {
		    var _className;
		
		    var props = this.props;
		    var componentClass = props.prefixCls + '-notice';
		    var className = (_className = {}, _defineProperty(_className, '' + componentClass, 1), _defineProperty(_className, componentClass + '-closable', props.closable), _defineProperty(_className, props.className, !!props.className), _className);
		    return _react2["default"].createElement(
		      'div',
		      { className: (0, _classnames2["default"])(className), style: props.style },
		      _react2["default"].createElement(
		        'div',
		        { className: componentClass + '-content' },
		        props.children
		      ),
		      props.closable ? _react2["default"].createElement(
		        'a',
		        { tabIndex: '0', onClick: this.close, className: componentClass + '-close' },
		        _react2["default"].createElement('span', { className: componentClass + '-close-x' })
		      ) : null
		    );
		  }
		});
		
		exports["default"] = Notice;
		module.exports = exports['default'];
	
	/***/ },
	/* 330 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _reactDom = __webpack_require__(4);
		
		var _reactDom2 = _interopRequireDefault(_reactDom);
		
		var _rcAnimate = __webpack_require__(7);
		
		var _rcAnimate2 = _interopRequireDefault(_rcAnimate);
		
		var _rcUtil = __webpack_require__(33);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var _Notice = __webpack_require__(329);
		
		var _Notice2 = _interopRequireDefault(_Notice);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		var seed = 0;
		var now = Date.now();
		
		function getUuid() {
		  return 'rcNotification_' + now + '_' + seed++;
		}
		
		var Notification = _react2["default"].createClass({
		  displayName: 'Notification',
		
		  propTypes: {
		    prefixCls: _react.PropTypes.string,
		    transitionName: _react.PropTypes.string,
		    animation: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.object]),
		    style: _react.PropTypes.object
		  },
		
		  getDefaultProps: function getDefaultProps() {
		    return {
		      prefixCls: 'rc-notification',
		      animation: 'fade',
		      style: {
		        top: 65,
		        left: '50%'
		      }
		    };
		  },
		  getInitialState: function getInitialState() {
		    return {
		      notices: []
		    };
		  },
		  getTransitionName: function getTransitionName() {
		    var props = this.props;
		    var transitionName = props.transitionName;
		    if (!transitionName && props.animation) {
		      transitionName = props.prefixCls + '-' + props.animation;
		    }
		    return transitionName;
		  },
		  add: function add(notice) {
		    var key = notice.key = notice.key || getUuid();
		    this.setState(function (previousState) {
		      var notices = previousState.notices;
		      if (!notices.filter(function (v) {
		        return v.key === key;
		      }).length) {
		        return {
		          notices: notices.concat(notice)
		        };
		      }
		    });
		  },
		  remove: function remove(key) {
		    this.setState(function (previousState) {
		      return {
		        notices: previousState.notices.filter(function (notice) {
		          return notice.key !== key;
		        })
		      };
		    });
		  },
		  render: function render() {
		    var _this = this,
		        _className;
		
		    var props = this.props;
		    var noticeNodes = this.state.notices.map(function (notice) {
		      var onClose = (0, _rcUtil.createChainedFunction)(_this.remove.bind(_this, notice.key), notice.onClose);
		      return _react2["default"].createElement(
		        _Notice2["default"],
		        _extends({
		          prefixCls: props.prefixCls
		        }, notice, {
		          onClose: onClose
		        }),
		        notice.content
		      );
		    });
		    var className = (_className = {}, _defineProperty(_className, props.prefixCls, 1), _defineProperty(_className, props.className, !!props.className), _className);
		    return _react2["default"].createElement(
		      'div',
		      { className: (0, _classnames2["default"])(className), style: props.style },
		      _react2["default"].createElement(
		        _rcAnimate2["default"],
		        { transitionName: this.getTransitionName() },
		        noticeNodes
		      )
		    );
		  }
		});
		
		Notification.newInstance = function newNotificationInstance(properties) {
		  var props = properties || {};
		  var div = document.createElement('div');
		  document.body.appendChild(div);
		  var notification = _reactDom2["default"].render(_react2["default"].createElement(Notification, props), div);
		  return {
		    notice: function notice(noticeProps) {
		      notification.add(noticeProps);
		    },
		    removeNotice: function removeNotice(key) {
		      notification.remove(key);
		    },
		
		    component: notification,
		    destroy: function destroy() {
		      _reactDom2["default"].unmountComponentAtNode(div);
		      document.body.removeChild(div);
		    }
		  };
		};
		
		exports["default"] = Notification;
		module.exports = exports['default'];
	
	/***/ },
	/* 331 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
		
		var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var React = __webpack_require__(1);
		var KEYCODE = __webpack_require__(110);
		
		var Options = (function (_React$Component) {
		  _inherits(Options, _React$Component);
		
		  function Options(props) {
		    var _this = this;
		
		    _classCallCheck(this, Options);
		
		    _get(Object.getPrototypeOf(Options.prototype), 'constructor', this).call(this, props);
		
		    this.state = {
		      current: props.current,
		      _current: props.current
		    };
		
		    ['_handleChange', '_changeSize', '_go', '_buildOptionText'].forEach(function (method) {
		      return _this[method] = _this[method].bind(_this);
		    });
		  }
		
		  _createClass(Options, [{
		    key: '_buildOptionText',
		    value: function _buildOptionText(value) {
		      return value + ' ' + this.props.locale.items_per_page;
		    }
		  }, {
		    key: '_changeSize',
		    value: function _changeSize(value) {
		      this.props.changeSize(Number(value));
		    }
		  }, {
		    key: '_handleChange',
		    value: function _handleChange(evt) {
		      var _val = evt.target.value;
		
		      this.setState({
		        _current: _val
		      });
		    }
		  }, {
		    key: '_go',
		    value: function _go(e) {
		      var _val = e.target.value;
		      if (_val === '') {
		        return;
		      }
		      var val = Number(this.state._current);
		      if (isNaN(val)) {
		        val = this.state.current;
		      }
		      if (e.keyCode === KEYCODE.ENTER) {
		        var c = this.props.quickGo(val);
		        this.setState({
		          _current: c,
		          current: c
		        });
		      }
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var _this2 = this;
		
		      var props = this.props;
		      var state = this.state;
		      var locale = props.locale;
		      var prefixCls = props.rootPrefixCls + '-options';
		      var changeSize = props.changeSize;
		      var quickGo = props.quickGo;
		      var buildOptionText = props.buildOptionText || this._buildOptionText;
		      var Select = props.selectComponentClass;
		      var changeSelect = null;
		      var goInput = null;
		
		      if (!(changeSize || quickGo)) {
		        return null;
		      }
		
		      if (changeSize && Select) {
		        (function () {
		          var Option = Select.Option;
		          var pageSize = props.pageSize || props.pageSizeOptions[0];
		          var options = props.pageSizeOptions.map(function (opt, i) {
		            return React.createElement(
		              Option,
		              { key: i, value: opt },
		              buildOptionText(opt)
		            );
		          });
		
		          changeSelect = React.createElement(
		            Select,
		            {
		              prefixCls: props.selectPrefixCls, showSearch: false,
		              className: prefixCls + '-size-changer',
		              optionLabelProp: 'children',
		              dropdownMatchSelectWidth: false,
		              value: pageSize + '', onChange: _this2._changeSize },
		            options
		          );
		        })();
		      }
		
		      if (quickGo) {
		        goInput = React.createElement(
		          'div',
		          { className: prefixCls + '-quick-jumper' },
		          locale.jump_to,
		          React.createElement('input', { type: 'text', value: state._current, onChange: this._handleChange.bind(this), onKeyUp: this._go.bind(this) }),
		          locale.page
		        );
		      }
		
		      return React.createElement(
		        'div',
		        { className: '' + prefixCls },
		        changeSelect,
		        goInput
		      );
		    }
		  }]);
		
		  return Options;
		})(React.Component);
		
		Options.propTypes = {
		  changeSize: React.PropTypes.func,
		  quickGo: React.PropTypes.func,
		  selectComponentClass: React.PropTypes.func,
		  current: React.PropTypes.number,
		  pageSizeOptions: React.PropTypes.arrayOf(React.PropTypes.string),
		  pageSize: React.PropTypes.number,
		  buildOptionText: React.PropTypes.func,
		  locale: React.PropTypes.object
		};
		
		Options.defaultProps = {
		  pageSizeOptions: ['10', '20', '30', '40']
		};
		
		module.exports = Options;
	
	/***/ },
	/* 332 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
		
		var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var React = __webpack_require__(1);
		
		var Pager = (function (_React$Component) {
		  _inherits(Pager, _React$Component);
		
		  function Pager() {
		    _classCallCheck(this, Pager);
		
		    _get(Object.getPrototypeOf(Pager.prototype), 'constructor', this).apply(this, arguments);
		  }
		
		  _createClass(Pager, [{
		    key: 'render',
		    value: function render() {
		      var props = this.props;
		      var locale = props.locale;
		      var prefixCls = props.rootPrefixCls + '-item';
		      var cls = prefixCls + ' ' + prefixCls + '-' + props.page;
		
		      if (props.active) {
		        cls = cls + ' ' + prefixCls + '-active';
		      }
		
		      var title = undefined;
		      if (props.page === 1) {
		        title = locale.first_page;
		      } else if (props.last) {
		        title = locale.last_page + ': ' + props.page;
		      } else {
		        title = props.page;
		      }
		      return React.createElement(
		        'li',
		        { title: title, className: cls, onClick: props.onClick },
		        React.createElement(
		          'a',
		          null,
		          props.page
		        )
		      );
		    }
		  }]);
		
		  return Pager;
		})(React.Component);
		
		Pager.propTypes = {
		  page: React.PropTypes.number,
		  active: React.PropTypes.bool,
		  last: React.PropTypes.bool,
		  locale: React.PropTypes.object
		};
		
		module.exports = Pager;
	
	/***/ },
	/* 333 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
		
		var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var React = __webpack_require__(1);
		var Pager = __webpack_require__(332);
		var Options = __webpack_require__(331);
		var KEYCODE = __webpack_require__(110);
		var LOCALE = __webpack_require__(111);
		
		function noop() {}
		
		var Pagination = (function (_React$Component) {
		  _inherits(Pagination, _React$Component);
		
		  function Pagination(props) {
		    var _this = this;
		
		    _classCallCheck(this, Pagination);
		
		    _get(Object.getPrototypeOf(Pagination.prototype), 'constructor', this).call(this, props);
		
		    var hasOnChange = props.onChange !== noop;
		    var hasCurrent = ('current' in props);
		    if (hasCurrent && !hasOnChange) {
		      console.warn('Warning: You provided a `current` prop to a Pagination component without an `onChange` handler. This will render a read-only component.');
		    }
		
		    var current = props.defaultCurrent;
		    if ('current' in props) {
		      current = props.current;
		    }
		
		    var pageSize = props.defaultPageSize;
		    if ('pageSize' in props) {
		      pageSize = props.pageSize;
		    }
		
		    this.state = {
		      current: current,
		      _current: current,
		      pageSize: pageSize
		    };
		
		    ['render', '_handleChange', '_handleKeyUp', '_handleKeyDown', '_changePageSize', '_isValid', '_prev', '_next', '_hasPrev', '_hasNext', '_jumpPrev', '_jumpNext'].forEach(function (method) {
		      return _this[method] = _this[method].bind(_this);
		    });
		  }
		
		  _createClass(Pagination, [{
		    key: 'componentWillReceiveProps',
		    value: function componentWillReceiveProps(nextProps) {
		      if ('current' in nextProps) {
		        this.setState({
		          current: nextProps.current,
		          _current: nextProps.current
		        });
		      }
		
		      if ('pageSize' in nextProps) {
		        var newState = {};
		        var current = this.state.current;
		        var newCurrent = this._calcPage(nextProps.pageSize);
		        current = current > newCurrent ? newCurrent : current;
		        if (!('current' in nextProps)) {
		          newState.current = current;
		          newState._current = current;
		        }
		        newState.pageSize = nextProps.pageSize;
		        this.setState(newState);
		      }
		    }
		
		    // private methods
		
		  }, {
		    key: '_calcPage',
		    value: function _calcPage(p) {
		      var pageSize = p;
		      if (typeof pageSize === 'undefined') {
		        pageSize = this.state.pageSize;
		      }
		      return Math.floor((this.props.total - 1) / pageSize) + 1;
		    }
		  }, {
		    key: '_isValid',
		    value: function _isValid(page) {
		      return typeof page === 'number' && page >= 1 && page !== this.state.current;
		    }
		  }, {
		    key: '_handleKeyDown',
		    value: function _handleKeyDown(evt) {
		      if (evt.keyCode === KEYCODE.ARROW_UP || evt.keyCode === KEYCODE.ARROW_DOWN) {
		        evt.preventDefault();
		      }
		    }
		  }, {
		    key: '_handleKeyUp',
		    value: function _handleKeyUp(evt) {
		      var _val = evt.target.value;
		      var val = undefined;
		
		      if (_val === '') {
		        val = _val;
		      } else if (isNaN(Number(_val))) {
		        val = this.state._current;
		      } else {
		        val = Number(_val);
		      }
		
		      this.setState({
		        _current: val
		      });
		
		      if (evt.keyCode === KEYCODE.ENTER) {
		        this._handleChange(val);
		      } else if (evt.keyCode === KEYCODE.ARROW_UP) {
		        this._handleChange(val - 1);
		      } else if (evt.keyCode === KEYCODE.ARROW_DOWN) {
		        this._handleChange(val + 1);
		      }
		    }
		  }, {
		    key: '_changePageSize',
		    value: function _changePageSize(size) {
		      var current = this.state.current;
		      var newCurrent = this._calcPage(size);
		      current = current > newCurrent ? newCurrent : current;
		      if (typeof size === 'number') {
		        if (!('pageSize' in this.props)) {
		          this.setState({
		            pageSize: size
		          });
		        }
		        if (!('current' in this.props)) {
		          this.setState({
		            current: current,
		            _current: current
		          });
		        }
		      }
		      this.props.onShowSizeChange(current, size);
		    }
		  }, {
		    key: '_handleChange',
		    value: function _handleChange(p) {
		      var page = p;
		      if (this._isValid(page)) {
		        if (page > this._calcPage()) {
		          page = this._calcPage();
		        }
		
		        if (!('current' in this.props)) {
		          this.setState({
		            current: page,
		            _current: page
		          });
		        }
		
		        this.props.onChange(page);
		
		        return page;
		      }
		
		      return this.state.current;
		    }
		  }, {
		    key: '_prev',
		    value: function _prev() {
		      if (this._hasPrev()) {
		        this._handleChange(this.state.current - 1);
		      }
		    }
		  }, {
		    key: '_next',
		    value: function _next() {
		      if (this._hasNext()) {
		        this._handleChange(this.state.current + 1);
		      }
		    }
		  }, {
		    key: '_jumpPrev',
		    value: function _jumpPrev() {
		      this._handleChange(Math.max(1, this.state.current - 5));
		    }
		  }, {
		    key: '_jumpNext',
		    value: function _jumpNext() {
		      this._handleChange(Math.min(this._calcPage(), this.state.current + 5));
		    }
		  }, {
		    key: '_hasPrev',
		    value: function _hasPrev() {
		      return this.state.current > 1;
		    }
		  }, {
		    key: '_hasNext',
		    value: function _hasNext() {
		      return this.state.current < this._calcPage();
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var props = this.props;
		      var locale = props.locale;
		
		      var prefixCls = props.prefixCls;
		      var allPages = this._calcPage();
		      var pagerList = [];
		      var jumpPrev = null;
		      var jumpNext = null;
		      var firstPager = null;
		      var lastPager = null;
		
		      if (props.simple) {
		        return React.createElement(
		          'ul',
		          { className: prefixCls + ' ' + prefixCls + '-simple ' + props.className },
		          React.createElement(
		            'li',
		            { title: locale.prev_page, onClick: this._prev, className: (this._hasPrev() ? '' : prefixCls + '-disabled ') + (prefixCls + '-prev') },
		            React.createElement('a', null)
		          ),
		          React.createElement(
		            'div',
		            { title: this.state.current + '/' + allPages, className: prefixCls + '-simple-pager' },
		            React.createElement('input', { type: 'text', value: this.state._current, onKeyDown: this._handleKeyDown, onKeyUp: this._handleKeyUp, onChange: this._handleKeyUp }),
		            React.createElement(
		              'span',
		              { className: prefixCls + '-slash' },
		              '／'
		            ),
		            allPages
		          ),
		          React.createElement(
		            'li',
		            { title: locale.next_page, onClick: this._next, className: (this._hasNext() ? '' : prefixCls + '-disabled ') + (prefixCls + '-next') },
		            React.createElement('a', null)
		          )
		        );
		      }
		
		      if (allPages <= 9) {
		        for (var i = 1; i <= allPages; i++) {
		          var active = this.state.current === i;
		          pagerList.push(React.createElement(Pager, { locale: locale, rootPrefixCls: prefixCls, onClick: this._handleChange.bind(this, i), key: i, page: i, active: active }));
		        }
		      } else {
		        jumpPrev = React.createElement(
		          'li',
		          { title: locale.prev_5, key: 'prev', onClick: this._jumpPrev, className: prefixCls + '-jump-prev' },
		          React.createElement('a', null)
		        );
		        jumpNext = React.createElement(
		          'li',
		          { title: locale.next_5, key: 'next', onClick: this._jumpNext, className: prefixCls + '-jump-next' },
		          React.createElement('a', null)
		        );
		        lastPager = React.createElement(Pager, {
		          locale: props.locale,
		          last: true, rootPrefixCls: prefixCls, onClick: this._handleChange.bind(this, allPages), key: allPages, page: allPages, active: false });
		        firstPager = React.createElement(Pager, {
		          locale: props.locale,
		          rootPrefixCls: prefixCls, onClick: this._handleChange.bind(this, 1), key: 1, page: 1, active: false });
		
		        var current = this.state.current;
		
		        var left = Math.max(1, current - 2);
		        var right = Math.min(current + 2, allPages);
		
		        if (current - 1 <= 2) {
		          right = 1 + 4;
		        }
		
		        if (allPages - current <= 2) {
		          left = allPages - 4;
		        }
		
		        for (var i = left; i <= right; i++) {
		          var active = current === i;
		          pagerList.push(React.createElement(Pager, {
		            locale: props.locale,
		            rootPrefixCls: prefixCls, onClick: this._handleChange.bind(this, i), key: i, page: i, active: active }));
		        }
		
		        if (current - 1 >= 4) {
		          pagerList.unshift(jumpPrev);
		        }
		        if (allPages - current >= 4) {
		          pagerList.push(jumpNext);
		        }
		
		        if (left !== 1) {
		          pagerList.unshift(firstPager);
		        }
		        if (right !== allPages) {
		          pagerList.push(lastPager);
		        }
		      }
		
		      var totalText = null;
		
		      if (props.showTotal) {
		        totalText = React.createElement(
		          'span',
		          { className: prefixCls + '-total-text' },
		          props.showTotal(props.total)
		        );
		      }
		
		      return React.createElement(
		        'ul',
		        { className: prefixCls + ' ' + props.className,
		          unselectable: 'unselectable' },
		        totalText,
		        React.createElement(
		          'li',
		          { title: locale.prev_page, onClick: this._prev, className: (this._hasPrev() ? '' : prefixCls + '-disabled ') + (prefixCls + '-prev') },
		          React.createElement('a', null)
		        ),
		        pagerList,
		        React.createElement(
		          'li',
		          { title: locale.next_page, onClick: this._next, className: (this._hasNext() ? '' : prefixCls + '-disabled ') + (prefixCls + '-next') },
		          React.createElement('a', null)
		        ),
		        React.createElement(Options, {
		          locale: props.locale,
		          rootPrefixCls: prefixCls,
		          selectComponentClass: props.selectComponentClass,
		          selectPrefixCls: props.selectPrefixCls,
		          changeSize: this.props.showSizeChanger ? this._changePageSize.bind(this) : null,
		          current: this.state.current,
		          pageSize: this.state.pageSize,
		          pageSizeOptions: this.props.pageSizeOptions,
		          quickGo: this.props.showQuickJumper ? this._handleChange.bind(this) : null })
		      );
		    }
		  }]);
		
		  return Pagination;
		})(React.Component);
		
		Pagination.propTypes = {
		  current: React.PropTypes.number,
		  defaultCurrent: React.PropTypes.number,
		  total: React.PropTypes.number,
		  pageSize: React.PropTypes.number,
		  defaultPageSize: React.PropTypes.number,
		  onChange: React.PropTypes.func,
		  showSizeChanger: React.PropTypes.bool,
		  onShowSizeChange: React.PropTypes.func,
		  selectComponentClass: React.PropTypes.func,
		  showQuickJumper: React.PropTypes.bool,
		  pageSizeOptions: React.PropTypes.arrayOf(React.PropTypes.string),
		  showTotal: React.PropTypes.func,
		  locale: React.PropTypes.object
		};
		
		Pagination.defaultProps = {
		  defaultCurrent: 1,
		  total: 0,
		  defaultPageSize: 10,
		  onChange: noop,
		  className: '',
		  selectPrefixCls: 'rc-select',
		  prefixCls: 'rc-pagination',
		  selectComponentClass: null,
		  showQuickJumper: false,
		  showSizeChanger: false,
		  onShowSizeChange: noop,
		  locale: LOCALE
		};
		
		module.exports = Pagination;
	
	/***/ },
	/* 334 */
	/***/ function(module, exports, __webpack_require__) {
	
		// export this package's api
		'use strict';
		
		module.exports = __webpack_require__(333);
	
	/***/ },
	/* 335 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var assign = __webpack_require__(10);
		var React = __webpack_require__(1);
		var defaultProps = {
		  strokeWidth: 1,
		  strokeColor: '#3FC7FA',
		  trailWidth: 1,
		  trailColor: '#D9D9D9'
		};
		
		var Line = React.createClass({
		  displayName: 'Line',
		
		  render: function render() {
		    var props = assign({}, this.props);
		    var pathStyle = {
		      'strokeDasharray': '100px, 100px',
		      'strokeDashoffset': 100 - props.percent + 'px',
		      'transition': 'stroke-dashoffset 0.6s ease 0s, stroke 0.6s linear'
		    };
		
		    ['strokeWidth', 'strokeColor', 'trailWidth', 'trailColor'].forEach(function (item) {
		      if (item === 'trailWidth' && !props.trailWidth && props.strokeWidth) {
		        props.trailWidth = props.strokeWidth;
		        return;
		      }
		      if (item === 'strokeWidth' && props.strokeWidth && (!parseFloat(props.strokeWidth) || parseFloat(props.strokeWidth) > 100 || parseFloat(props.strokeWidth) < 0)) {
		        props[item] = defaultProps[item];
		        return;
		      }
		      if (!props[item]) {
		        props[item] = defaultProps[item];
		      }
		    });
		
		    var strokeWidth = props.strokeWidth;
		    var center = strokeWidth / 2;
		    var right = 100 - strokeWidth / 2;
		    var pathString = 'M ' + center + ',' + center + ' L ' + right + ',' + center;
		    var viewBoxString = '0 0 100 ' + strokeWidth;
		
		    return React.createElement(
		      'svg',
		      { className: "rc-progress-line", viewBox: viewBoxString, preserveAspectRatio: "none" },
		      React.createElement('path', { className: "rc-progress-line-trail", d: pathString, strokeLinecap: "round",
		        stroke: props.trailColor, strokeWidth: props.trailWidth, fillOpacity: "0" }),
		      React.createElement('path', { className: "rc-progress-line-path", d: pathString, strokeLinecap: "round",
		        stroke: props.strokeColor, strokeWidth: props.strokeWidth, fillOpacity: "0", style: pathStyle })
		    );
		  }
		});
		
		var Circle = React.createClass({
		  displayName: 'Circle',
		
		  render: function render() {
		    var props = assign({}, this.props);
		    var strokeWidth = props.strokeWidth;
		    var radius = 50 - strokeWidth / 2;
		    var pathString = 'M 50,50 m 0,-' + radius + '\n     a ' + radius + ',' + radius + ' 0 1 1 0,' + 2 * radius + '\n     a ' + radius + ',' + radius + ' 0 1 1 0,-' + 2 * radius;
		    var len = Math.PI * 2 * radius;
		    var pathStyle = {
		      'strokeDasharray': len + 'px ' + len + 'px',
		      'strokeDashoffset': (100 - props.percent) / 100 * len + 'px',
		      'transition': 'stroke-dashoffset 0.6s ease 0s, stroke 0.6s ease'
		    };
		    ['strokeWidth', 'strokeColor', 'trailWidth', 'trailColor'].forEach(function (item) {
		      if (item === 'trailWidth' && !props.trailWidth && props.strokeWidth) {
		        props.trailWidth = props.strokeWidth;
		        return;
		      }
		      if (!props[item]) {
		        props[item] = defaultProps[item];
		      }
		    });
		
		    return React.createElement(
		      'svg',
		      { className: 'rc-progress-circle', viewBox: '0 0 100 100' },
		      React.createElement('path', { className: 'rc-progress-circle-trail', d: pathString, stroke: props.trailColor,
		        strokeWidth: props.trailWidth, fillOpacity: '0' }),
		      React.createElement('path', { className: 'rc-progress-circle-path', d: pathString, strokeLinecap: 'round',
		        stroke: props.strokeColor, strokeWidth: props.strokeWidth, fillOpacity: '0', style: pathStyle })
		    );
		  }
		});
		
		module.exports = {
		  Line: Line,
		  Circle: Circle
		};
	
	/***/ },
	/* 336 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		module.exports = __webpack_require__(335);
	
	/***/ },
	/* 337 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(setImmediate) {'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _reactDom = __webpack_require__(4);
		
		var _utils = __webpack_require__(340);
		
		var _animTypes = __webpack_require__(338);
		
		var _animTypes2 = _interopRequireDefault(_animTypes);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var _ease = {
		  easeInElastic: function easeInElastic(_p, o, t) {
		    var p = _p;
		    var _p1 = o >= 1 ? o : 1;
		    var _p2 = (t || 1) / (o < 1 ? o : 1);
		    var _p3 = _p2 / Math.PI * 2 * (Math.asin(1 / _p1) || 0);
		    return -(_p1 * Math.pow(2, 10 * (p -= 1)) * Math.sin((p - _p3) * _p2));
		  },
		  easeOutElastic: function easeOutElastic(p, o, t) {
		    var _p1 = o >= 1 ? o : 1;
		    var _p2 = (t || 1) / (o < 1 ? o : 1);
		    var _p3 = _p2 / Math.PI * 2 * (Math.asin(1 / _p1) || 0);
		    return _p1 * Math.pow(2, -10 * p) * Math.sin((p - _p3) * _p2) + 1;
		  },
		  easeInOutElastic: function easeInOutElastic(_p, o, t) {
		    var p = _p;
		    var _p1 = o >= 1 ? o : 1;
		    var _p2 = (t || 1) / (o < 1 ? o : 1);
		    var _p3 = _p2 / Math.PI * 2 * (Math.asin(1 / _p1) || 0);
		    p *= 2;
		    return p < 1 ? -0.5 * (_p1 * Math.pow(2, 10 * (p -= 1)) * Math.sin((p - _p3) * _p2)) : _p1 * Math.pow(2, -10 * (p -= 1)) * Math.sin((p - _p3) * _p2) * 0.5 + 1;
		  },
		  easeInBounce: function easeInBounce(_p) {
		    var p = _p;
		    var __p = 1 - p;
		    if (__p < 1 / 2.75) {
		      return 1 - 7.5625 * p * p;
		    } else if (p < 2 / 2.75) {
		      return 1 - (7.5625 * (p -= 1.5 / 2.75) * p + 0.75);
		    } else if (p < 2.5 / 2.75) {
		      return 1 - (7.5625 * (p -= 2.25 / 2.75) * p + 0.9375);
		    }
		    return 1 - (7.5625 * (p -= 2.625 / 2.75) * p + 0.984375);
		  },
		  easeOutBounce: function easeOutBounce(_p) {
		    var p = _p;
		    if (p < 1 / 2.75) {
		      return 7.5625 * p * p;
		    } else if (p < 2 / 2.75) {
		      return 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;
		    } else if (p < 2.5 / 2.75) {
		      return 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;
		    }
		    return 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;
		  },
		  easeInOutBounce: function easeInOutBounce(_p) {
		    var p = _p;
		    var invert = p < 0.5;
		    if (invert) {
		      p = 1 - p * 2;
		    } else {
		      p = p * 2 - 1;
		    }
		    if (p < 1 / 2.75) {
		      p = 7.5625 * p * p;
		    } else if (p < 2 / 2.75) {
		      p = 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;
		    } else if (p < 2.5 / 2.75) {
		      p = 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;
		    } else {
		      p = 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;
		    }
		    return invert ? (1 - p) * 0.5 : p * 0.5 + 0.5;
		  }
		};
		
		var velocity = void 0;
		if (typeof document !== 'undefined' && typeof window !== 'undefined') {
		  // only load velocity on the client
		  velocity = __webpack_require__(419);
		  Object.keys(_ease).forEach(function (key) {
		    if (velocity.Easings) {
		      velocity.Easings[key] = _ease[key];
		    }
		  });
		} else {
		  // provide a velocity stub for the server
		  velocity = function velocityServerDummy() {
		    var callback = arguments[arguments.length - 1];
		    // call after stack flushes
		    // in case you app depends on the asyncron nature of this function
		    setImmediate(function () {
		      return callback();
		    });
		  };
		}
		
		var BackEase = {
		  easeInBack: [0.6, -0.28, 0.735, 0.045],
		  easeOutBack: [0.175, 0.885, 0.32, 1.275],
		  easeInOutBack: [0.68, -0.55, 0.265, 1.55]
		};
		
		var placeholderKeyPrefix = 'ant-queue-anim-placeholder-';
		
		var QueueAnim = function (_React$Component) {
		  _inherits(QueueAnim, _React$Component);
		
		  function QueueAnim() {
		    _classCallCheck(this, QueueAnim);
		
		    var _this = _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
		
		    _this.keysToEnter = [];
		    _this.keysToLeave = [];
		    _this.keysAnimating = [];
		    _this.placeholderTimeoutIds = {};
		
		    // 第一次进入，默认进场
		    var children = (0, _utils.toArrayChildren)((0, _utils.getChildrenFromProps)(_this.props));
		    children.forEach(function (child) {
		      if (!child || !child.key) {
		        return;
		      }
		      _this.keysToEnter.push(child.key);
		    });
		
		    _this.originalChildren = (0, _utils.toArrayChildren)((0, _utils.getChildrenFromProps)(_this.props));
		
		    _this.state = {
		      children: children,
		      childrenShow: {}
		    };
		
		    ['performEnter', 'performLeave', 'enterBegin', 'leaveComplete'].forEach(function (method) {
		      return _this[method] = _this[method].bind(_this);
		    });
		    return _this;
		  }
		
		  QueueAnim.prototype.componentDidMount = function componentDidMount() {
		    this.componentDidUpdate();
		  };
		
		  QueueAnim.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
		    var _this2 = this;
		
		    var nextChildren = (0, _utils.toArrayChildren)(nextProps.children);
		    var currentChildren = this.originalChildren;
		    var newChildren = (0, _utils.mergeChildren)(currentChildren, nextChildren);
		
		    this.keysToEnter = [];
		    this.keysToLeave = [];
		    this.keysAnimating = [];
		
		    // need render to avoid update
		    this.setState({
		      children: newChildren
		    });
		
		    nextChildren.forEach(function (c) {
		      if (!c) {
		        return;
		      }
		      var key = c.key;
		      var hasPrev = (0, _utils.findChildInChildrenByKey)(currentChildren, key);
		      if (!hasPrev && key) {
		        _this2.keysToEnter.push(key);
		      }
		    });
		
		    currentChildren.forEach(function (c) {
		      if (!c) {
		        return;
		      }
		      var key = c.key;
		      var hasNext = (0, _utils.findChildInChildrenByKey)(nextChildren, key);
		      if (!hasNext && key) {
		        _this2.keysToLeave.push(key);
		      }
		    });
		  };
		
		  QueueAnim.prototype.componentDidUpdate = function componentDidUpdate() {
		    this.originalChildren = (0, _utils.toArrayChildren)((0, _utils.getChildrenFromProps)(this.props));
		    var keysToEnter = Array.prototype.slice.call(this.keysToEnter);
		    var keysToLeave = Array.prototype.slice.call(this.keysToLeave);
		    if (this.keysAnimating.length === 0) {
		      this.keysAnimating = keysToEnter.concat(keysToLeave);
		    }
		    keysToEnter.forEach(this.performEnter);
		    keysToLeave.forEach(this.performLeave);
		  };
		
		  QueueAnim.prototype.componentWillUnmount = function componentWillUnmount() {
		    var _this3 = this;
		
		    [].concat(this.keysToEnter, this.keysToLeave, this.keysAnimating).forEach(function (key) {
		      return _this3.refs[key] && velocity((0, _reactDom.findDOMNode)(_this3.refs[key]), 'stop');
		    });
		    Object.keys(this.placeholderTimeoutIds).forEach(function (key) {
		      clearTimeout(_this3.placeholderTimeoutIds[key]);
		    });
		    this.keysToEnter = [];
		    this.keysToLeave = [];
		    this.keysAnimating = [];
		  };
		
		  QueueAnim.prototype.getVelocityConfig = function getVelocityConfig(index) {
		    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
		      args[_key - 1] = arguments[_key];
		    }
		
		    if (this.props.animConfig) {
		      return _utils.transformArguments.apply(undefined, [this.props.animConfig].concat(args))[index];
		    }
		    return _animTypes2["default"][_utils.transformArguments.apply(undefined, [this.props.type].concat(args))[index]];
		  };
		
		  QueueAnim.prototype.getVelocityEnterConfig = function getVelocityEnterConfig() {
		    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
		      args[_key2] = arguments[_key2];
		    }
		
		    return this.getVelocityConfig.apply(this, [0].concat(args));
		  };
		
		  QueueAnim.prototype.getVelocityLeaveConfig = function getVelocityLeaveConfig() {
		    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
		      args[_key3] = arguments[_key3];
		    }
		
		    var config = this.getVelocityConfig.apply(this, [1].concat(args));
		    var ret = {};
		    Object.keys(config).forEach(function (key) {
		      if (Array.isArray(config[key])) {
		        ret[key] = Array.prototype.slice.call(config[key]).reverse();
		      } else {
		        ret[key] = config[key];
		      }
		    });
		    return ret;
		  };
		
		  QueueAnim.prototype.getVelocityEasing = function getVelocityEasing() {
		    for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
		      args[_key4] = arguments[_key4];
		    }
		
		    return _utils.transformArguments.apply(undefined, [this.props.ease].concat(args)).map(function (easeName) {
		      if (typeof easeName === 'string') {
		        return BackEase[easeName] || easeName;
		      }
		    });
		  };
		
		  QueueAnim.prototype.performEnter = function performEnter(key, i) {
		    var interval = (0, _utils.transformArguments)(this.props.interval, key, i)[0];
		    var delay = (0, _utils.transformArguments)(this.props.delay, key, i)[0];
		    this.placeholderTimeoutIds[key] = setTimeout(this.performEnterBegin.bind(this, key, i), interval * i + delay);
		    if (this.keysToEnter.indexOf(key) >= 0) {
		      this.keysToEnter.splice(this.keysToEnter.indexOf(key), 1);
		    }
		  };
		
		  QueueAnim.prototype.performEnterBegin = function performEnterBegin(key, i) {
		    var childrenShow = this.state.childrenShow;
		    childrenShow[key] = true;
		    this.setState({ childrenShow: childrenShow }, this.realPerformEnter.bind(this, key, i));
		  };
		
		  QueueAnim.prototype.realPerformEnter = function realPerformEnter(key, i) {
		    var node = (0, _reactDom.findDOMNode)(this.refs[key]);
		    if (!node) {
		      return;
		    }
		    var duration = (0, _utils.transformArguments)(this.props.duration, key, i)[0];
		    node.style.visibility = 'hidden';
		    velocity(node, 'stop');
		    velocity(node, this.getVelocityEnterConfig(key, i), {
		      duration: duration,
		      easing: this.getVelocityEasing(key, i)[0],
		      visibility: 'visible',
		      begin: this.enterBegin.bind(this, key),
		      complete: this.enterComplete.bind(this, key)
		    });
		  };
		
		  QueueAnim.prototype.performLeave = function performLeave(key, i) {
		    clearTimeout(this.placeholderTimeoutIds[key]);
		    delete this.placeholderTimeoutIds[key];
		    var node = (0, _reactDom.findDOMNode)(this.refs[key]);
		    if (!node) {
		      return;
		    }
		    var interval = (0, _utils.transformArguments)(this.props.interval, key, i)[1];
		    var delay = (0, _utils.transformArguments)(this.props.delay, key, i)[1];
		    var duration = (0, _utils.transformArguments)(this.props.duration, key, i)[1];
		    var order = this.props.leaveReverse ? this.keysToLeave.length - i - 1 : i;
		    velocity(node, 'stop');
		    velocity(node, this.getVelocityLeaveConfig(key, i), {
		      delay: interval * order + delay,
		      duration: duration,
		      easing: this.getVelocityEasing(key, i)[1],
		      begin: this.leaveBegin.bind(this),
		      complete: this.leaveComplete.bind(this, key)
		    });
		  };
		
		  QueueAnim.prototype.enterBegin = function enterBegin(key, elements) {
		    var _this4 = this;
		
		    elements.forEach(function (elem) {
		      var animatingClassName = _this4.props.animatingClassName;
		      elem.className = elem.className.replace(animatingClassName[1], '');
		      if (elem.className.indexOf(animatingClassName[0]) === -1) {
		        elem.className += ' ' + animatingClassName[0];
		      }
		    });
		  };
		
		  QueueAnim.prototype.enterComplete = function enterComplete(key, elements) {
		    var _this5 = this;
		
		    if (this.keysAnimating.indexOf(key) >= 0) {
		      this.keysAnimating.splice(this.keysAnimating.indexOf(key), 1);
		    }
		    elements.forEach(function (elem) {
		      elem.className = elem.className.replace(_this5.props.animatingClassName[0], '').trim();
		    });
		  };
		
		  QueueAnim.prototype.leaveBegin = function leaveBegin(elements) {
		    var _this6 = this;
		
		    elements.forEach(function (elem) {
		      var animatingClassName = _this6.props.animatingClassName;
		      elem.className = elem.className.replace(animatingClassName[0], '');
		      if (elem.className.indexOf(animatingClassName[1]) === -1) {
		        elem.className += ' ' + animatingClassName[1];
		      }
		    });
		  };
		
		  QueueAnim.prototype.leaveComplete = function leaveComplete(key, elements) {
		    var _this7 = this;
		
		    if (this.keysAnimating.indexOf(key) < 0) {
		      return;
		    }
		    this.keysAnimating.splice(this.keysAnimating.indexOf(key), 1);
		    var childrenShow = this.state.childrenShow;
		    childrenShow[key] = false;
		    if (this.keysToLeave.indexOf(key) >= 0) {
		      this.keysToLeave.splice(this.keysToLeave.indexOf(key), 1);
		    }
		    var needLeave = this.keysToLeave.some(function (c) {
		      return childrenShow[c];
		    });
		    if (!needLeave) {
		      var currentChildren = (0, _utils.toArrayChildren)((0, _utils.getChildrenFromProps)(this.props));
		      this.setState({
		        children: currentChildren,
		        childrenShow: childrenShow
		      });
		    }
		    elements.forEach(function (elem) {
		      elem.className = elem.className.replace(_this7.props.animatingClassName[1], '').trim();
		    });
		  };
		
		  QueueAnim.prototype.render = function render() {
		    var _this8 = this;
		
		    var childrenToRender = (0, _utils.toArrayChildren)(this.state.children).map(function (child) {
		      if (!child || !child.key) {
		        return child;
		      }
		      return _this8.state.childrenShow[child.key] ? (0, _react.cloneElement)(child, {
		        ref: child.key,
		        key: child.key
		      }) : (0, _react.createElement)('div', {
		        ref: placeholderKeyPrefix + child.key,
		        key: placeholderKeyPrefix + child.key
		      });
		    });
		
		    var tagProps = _objectWithoutProperties(this.props, []);
		
		    ['component', 'interval', 'duration', 'delay', 'type', 'animConfig', 'ease', 'leaveReverse', 'animatingClassName'].forEach(function (key) {
		      return delete tagProps[key];
		    });
		    return (0, _react.createElement)(this.props.component, _extends({}, tagProps), childrenToRender);
		  };
		
		  return QueueAnim;
		}(_react2["default"].Component);
		
		var numberOrArray = _react2["default"].PropTypes.oneOfType([_react2["default"].PropTypes.number, _react2["default"].PropTypes.array]);
		var stringOrArray = _react2["default"].PropTypes.oneOfType([_react2["default"].PropTypes.string, _react2["default"].PropTypes.array]);
		var objectOrArray = _react2["default"].PropTypes.oneOfType([_react2["default"].PropTypes.object, _react2["default"].PropTypes.array]);
		var funcOrString = _react2["default"].PropTypes.oneOfType([_react2["default"].PropTypes.func, _react2["default"].PropTypes.string]);
		var funcOrStringOrArray = _react2["default"].PropTypes.oneOfType([_react2["default"].PropTypes.func, stringOrArray]);
		var funcOrObjectOrArray = _react2["default"].PropTypes.oneOfType([_react2["default"].PropTypes.func, objectOrArray]);
		var funcOrNumberOrArray = _react2["default"].PropTypes.oneOfType([_react2["default"].PropTypes.func, numberOrArray]);
		
		QueueAnim.propTypes = {
		  component: funcOrString,
		  interval: numberOrArray,
		  duration: funcOrNumberOrArray,
		  delay: funcOrNumberOrArray,
		  type: funcOrStringOrArray,
		  animConfig: funcOrObjectOrArray,
		  ease: funcOrStringOrArray,
		  leaveReverse: _react2["default"].PropTypes.bool,
		  animatingClassName: _react2["default"].PropTypes.array
		};
		
		QueueAnim.defaultProps = {
		  component: 'div',
		  interval: 100,
		  duration: 450,
		  delay: 0,
		  type: 'right',
		  animConfig: null,
		  ease: 'easeOutQuart',
		  leaveReverse: false,
		  animatingClassName: ['queue-anim-entering', 'queue-anim-leaving']
		};
		
		exports["default"] = QueueAnim;
		module.exports = exports['default'];
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(50).setImmediate))
	
	/***/ },
	/* 338 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = {
		  left: {
		    opacity: [1, 0],
		    translateX: [0, -30]
		  },
		  top: {
		    opacity: [1, 0],
		    translateY: [0, -30]
		  },
		  right: {
		    opacity: [1, 0],
		    translateX: [0, 30]
		  },
		  bottom: {
		    opacity: [1, 0],
		    translateY: [0, 30]
		  },
		  alpha: {
		    opacity: [1, 0]
		  },
		  scale: {
		    opacity: [1, 0],
		    scale: [1, 0]
		  },
		  scaleBig: {
		    opacity: [1, 0],
		    scale: [1, 2]
		  },
		  scaleX: {
		    opacity: [1, 0],
		    scaleX: [1, 0]
		  },
		  scaleY: {
		    opacity: [1, 0],
		    scaleY: [1, 0]
		  }
		};
		module.exports = exports['default'];
	
	/***/ },
	/* 339 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _QueueAnim = __webpack_require__(337);
		
		var _QueueAnim2 = _interopRequireDefault(_QueueAnim);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		exports["default"] = _QueueAnim2["default"]; // export this package's api
		
		module.exports = exports['default'];
	
	/***/ },
	/* 340 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.toArrayChildren = toArrayChildren;
		exports.findChildInChildrenByKey = findChildInChildrenByKey;
		exports.mergeChildren = mergeChildren;
		exports.transformArguments = transformArguments;
		exports.getChildrenFromProps = getChildrenFromProps;
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function toArrayChildren(children) {
		  var ret = [];
		  _react2["default"].Children.forEach(children, function (c) {
		    ret.push(c);
		  });
		  return ret;
		}
		
		function findChildInChildrenByKey(children, key) {
		  var ret = null;
		  if (children) {
		    children.forEach(function (c) {
		      if (ret || !c) {
		        return;
		      }
		      if (c.key === key) {
		        ret = c;
		      }
		    });
		  }
		  return ret;
		}
		
		function mergeChildren(prev, next) {
		  var ret = [];
		  // For each key of `next`, the list of keys to insert before that key in
		  // the combined list
		  var nextChildrenPending = {};
		  var pendingChildren = [];
		  prev.forEach(function (c) {
		    if (!c) {
		      return;
		    }
		    if (findChildInChildrenByKey(next, c.key)) {
		      if (pendingChildren.length) {
		        nextChildrenPending[c.key] = pendingChildren;
		        pendingChildren = [];
		      }
		    } else if (c.key) {
		      pendingChildren.push(c);
		    }
		  });
		
		  next.forEach(function (c) {
		    if (!c) {
		      return;
		    }
		    if (nextChildrenPending.hasOwnProperty(c.key)) {
		      ret = ret.concat(nextChildrenPending[c.key]);
		    }
		    ret.push(c);
		  });
		
		  // 保持原有的顺序
		  pendingChildren.forEach(function (c) {
		    var originIndex = prev.indexOf(c);
		    if (originIndex >= 0) {
		      ret.splice(originIndex, 0, c);
		    }
		  });
		
		  return ret;
		}
		
		function transformArguments(arg, key, i) {
		  var result = void 0;
		  if (typeof arg === 'function') {
		    result = arg({
		      key: key,
		      index: i
		    });
		  } else {
		    result = arg;
		  }
		  if (Array.isArray(result) && result.length === 2) {
		    return result;
		  }
		  return [result, result];
		}
		
		function getChildrenFromProps(props) {
		  return props && props.children;
		}
	
	/***/ },
	/* 341 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var React = __webpack_require__(1);
		var Checkbox = __webpack_require__(105);
		
		var Radio = React.createClass({
		  displayName: 'Radio',
		
		  getDefaultProps: function getDefaultProps() {
		    return {
		      prefixCls: 'rc-radio',
		      type: 'radio'
		    };
		  },
		
		  render: function render() {
		    return React.createElement(Checkbox, _extends({}, this.props, { ref: 'checkbox' }));
		  }
		});
		
		module.exports = Radio;
	
	/***/ },
	/* 342 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		module.exports = __webpack_require__(341);
	
	/***/ },
	/* 343 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _reactDom = __webpack_require__(4);
		
		var _reactDom2 = _interopRequireDefault(_reactDom);
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _util = __webpack_require__(346);
		
		var _Star = __webpack_require__(344);
		
		var _Star2 = _interopRequireDefault(_Star);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function noop() {}
		
		var Rate = _react2["default"].createClass({
		  displayName: 'Rate',
		
		  propTypes: {
		    disabled: _react.PropTypes.bool,
		    value: _react.PropTypes.number,
		    defaultValue: _react.PropTypes.number,
		    count: _react.PropTypes.number,
		    allowHalf: _react.PropTypes.bool,
		    style: _react.PropTypes.object,
		    prefixCls: _react.PropTypes.string,
		    onChange: _react.PropTypes.func
		  },
		
		  getDefaultProps: function getDefaultProps() {
		    return {
		      defaultValue: 0,
		      count: 5,
		      allowHalf: false,
		      style: {},
		      prefixCls: 'rc-rate',
		      onChange: noop
		    };
		  },
		  getInitialState: function getInitialState() {
		    var value = this.props.value;
		    if (value === undefined) {
		      value = this.props.defaultValue;
		    }
		    return {
		      value: value
		    };
		  },
		  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
		    if ('value' in nextProps) {
		      var value = nextProps.value;
		      if (value === undefined) {
		        value = nextProps.defaultValue;
		      }
		      this.setState({
		        value: value
		      });
		    }
		  },
		  onHover: function onHover(event, index) {
		    var hoverValue = this.getStarValue(index, event.pageX);
		    this.setState({
		      hoverValue: hoverValue
		    });
		  },
		  onMouseLeave: function onMouseLeave() {
		    this.setState({
		      hoverValue: undefined
		    });
		  },
		  onClick: function onClick(event, index) {
		    var value = this.getStarValue(index, event.pageX);
		    if (!('value' in this.props)) {
		      this.setState({
		        value: value
		      });
		    }
		    this.onMouseLeave();
		    this.props.onChange(value);
		  },
		  getStarDOM: function getStarDOM(index) {
		    return _reactDom2["default"].findDOMNode(this.refs['star_' + index]);
		  },
		  getStarValue: function getStarValue(index, x) {
		    var value = index + 1;
		    if (this.props.allowHalf) {
		      var leftEdge = (0, _util.getOffsetLeft)(this.getStarDOM(0));
		      var width = (0, _util.getOffsetLeft)(this.getStarDOM(1)) - leftEdge;
		      if (x - leftEdge - width * index < width / 2) {
		        value -= 0.5;
		      }
		    }
		    return value;
		  },
		  render: function render() {
		    var _props = this.props;
		    var count = _props.count;
		    var allowHalf = _props.allowHalf;
		    var style = _props.style;
		    var prefixCls = _props.prefixCls;
		    var disabled = _props.disabled;
		    var _state = this.state;
		    var value = _state.value;
		    var hoverValue = _state.hoverValue;
		
		    var stars = [];
		    var disabledClass = disabled ? prefixCls + '-disabled' : '';
		    for (var index = 0; index < count; index++) {
		      stars.push(_react2["default"].createElement(_Star2["default"], {
		        ref: 'star_' + index,
		        index: index,
		        disabled: disabled,
		        prefixCls: prefixCls + '-star',
		        allowHalf: allowHalf,
		        value: hoverValue === undefined ? value : hoverValue,
		        onClick: this.onClick,
		        onHover: this.onHover,
		        key: index
		      }));
		    }
		    return _react2["default"].createElement(
		      'ul',
		      {
		        className: prefixCls + ' ' + disabledClass,
		        style: style,
		        onMouseLeave: disabled ? null : this.onMouseLeave
		      },
		      stars
		    );
		  }
		});
		
		exports["default"] = Rate;
		module.exports = exports['default'];
	
	/***/ },
	/* 344 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		var Star = _react2["default"].createClass({
		  displayName: 'Star',
		
		  propTypes: {
		    value: _react.PropTypes.number,
		    index: _react.PropTypes.number,
		    prefixCls: _react.PropTypes.string,
		    allowHalf: _react.PropTypes.bool,
		    disabled: _react.PropTypes.bool,
		    onHover: _react.PropTypes.func,
		    onClick: _react.PropTypes.func
		  },
		
		  onHover: function onHover(e) {
		    this.props.onHover(e, this.props.index);
		  },
		  onClick: function onClick(e) {
		    this.props.onClick(e, this.props.index);
		  },
		  getClassName: function getClassName() {
		    var _props = this.props;
		    var index = _props.index;
		    var value = _props.value;
		    var prefixCls = _props.prefixCls;
		    var allowHalf = _props.allowHalf;
		
		    var starValue = index + 1;
		    if (allowHalf && value + 0.5 === starValue) {
		      return prefixCls + ' ' + prefixCls + '-half ' + prefixCls + '-active';
		    }
		    return starValue <= value ? prefixCls + ' ' + prefixCls + '-full' : prefixCls + ' ' + prefixCls + '-zero';
		  },
		  render: function render() {
		    var onHover = this.onHover;
		    var onClick = this.onClick;
		    var _props2 = this.props;
		    var disabled = _props2.disabled;
		    var prefixCls = _props2.prefixCls;
		
		    return _react2["default"].createElement(
		      'li',
		      {
		        className: this.getClassName(),
		        onClick: disabled ? null : onClick,
		        onMouseMove: disabled ? null : onHover
		      },
		      _react2["default"].createElement('div', { className: prefixCls + '-content' })
		    );
		  }
		});
		
		exports["default"] = Star;
		module.exports = exports['default'];
	
	/***/ },
	/* 345 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _Rate = __webpack_require__(343);
		
		var _Rate2 = _interopRequireDefault(_Rate);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		exports["default"] = _Rate2["default"];
		module.exports = exports['default'];
	
	/***/ },
	/* 346 */
	/***/ function(module, exports) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.getOffsetLeft = getOffsetLeft;
		function getScroll(w, top) {
		  var ret = top ? w.pageYOffset : w.pageXOffset;
		  var method = top ? 'scrollTop' : 'scrollLeft';
		  if (typeof ret !== 'number') {
		    var d = w.document;
		    // ie6,7,8 standard mode
		    ret = d.documentElement[method];
		    if (typeof ret !== 'number') {
		      // quirks mode
		      ret = d.body[method];
		    }
		  }
		  return ret;
		}
		
		function getClientPosition(elem) {
		  var box = void 0;
		  var x = void 0;
		  var y = void 0;
		  var doc = elem.ownerDocument;
		  var body = doc.body;
		  var docElem = doc && doc.documentElement;
		  box = elem.getBoundingClientRect();
		  x = box.left;
		  y = box.top;
		  x -= docElem.clientLeft || body.clientLeft || 0;
		  y -= docElem.clientTop || body.clientTop || 0;
		  return {
		    left: x,
		    top: y
		  };
		}
		
		function getOffsetLeft(el) {
		  var pos = getClientPosition(el);
		  var doc = el.ownerDocument;
		  var w = doc.defaultView || doc.parentWindow;
		  pos.left += getScroll(w);
		  return pos.left;
		}
	
	/***/ },
	/* 347 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _reactDom = __webpack_require__(4);
		
		var _util = __webpack_require__(31);
		
		var _rcMenu = __webpack_require__(23);
		
		var _rcMenu2 = _interopRequireDefault(_rcMenu);
		
		var _domScrollIntoView = __webpack_require__(43);
		
		var _domScrollIntoView2 = _interopRequireDefault(_domScrollIntoView);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		var DropdownMenu = _react2["default"].createClass({
		  displayName: 'DropdownMenu',
		
		  propTypes: {
		    defaultActiveFirstOption: _react.PropTypes.bool,
		    value: _react.PropTypes.any,
		    dropdownMenuStyle: _react.PropTypes.object,
		    multiple: _react.PropTypes.bool,
		    onPopupFocus: _react.PropTypes.func,
		    onMenuDeSelect: _react.PropTypes.func,
		    onMenuSelect: _react.PropTypes.func,
		    prefixCls: _react.PropTypes.string,
		    menuItems: _react.PropTypes.any,
		    inputValue: _react.PropTypes.string,
		    visible: _react.PropTypes.bool
		  },
		
		  componentWillMount: function componentWillMount() {
		    this.lastInputValue = this.props.inputValue;
		  },
		  componentDidMount: function componentDidMount() {
		    this.scrollActiveItemToView();
		    this.lastVisible = this.props.visible;
		  },
		  shouldComponentUpdate: function shouldComponentUpdate(nextProps) {
		    if (!nextProps.visible) {
		      this.lastVisible = false;
		    }
		    // freeze when hide
		    return nextProps.visible;
		  },
		  componentDidUpdate: function componentDidUpdate(prevProps) {
		    var props = this.props;
		    if (!prevProps.visible && props.visible) {
		      this.scrollActiveItemToView();
		    }
		    this.lastVisible = props.visible;
		    this.lastInputValue = props.inputValue;
		  },
		  scrollActiveItemToView: function scrollActiveItemToView() {
		    // scroll into view
		    var itemComponent = (0, _reactDom.findDOMNode)(this.firstActiveItem);
		    if (itemComponent) {
		      (0, _domScrollIntoView2["default"])(itemComponent, (0, _reactDom.findDOMNode)(this.refs.menu), {
		        onlyScrollIfNeeded: true
		      });
		    }
		  },
		  renderMenu: function renderMenu() {
		    var _this = this;
		
		    var props = this.props;
		    var menuItems = props.menuItems;
		    var defaultActiveFirstOption = props.defaultActiveFirstOption;
		    var value = props.value;
		    var prefixCls = props.prefixCls;
		    var multiple = props.multiple;
		    var onMenuSelect = props.onMenuSelect;
		    var inputValue = props.inputValue;
		
		    if (menuItems && menuItems.length) {
		      var _ret = function () {
		        var menuProps = {};
		        if (multiple) {
		          menuProps.onDeselect = props.onMenuDeselect;
		          menuProps.onSelect = onMenuSelect;
		        } else {
		          menuProps.onClick = onMenuSelect;
		        }
		
		        var selectedKeys = (0, _util.getSelectKeys)(menuItems, value);
		        var activeKeyProps = {};
		
		        var clonedMenuItems = menuItems;
		        if (selectedKeys.length) {
		          (function () {
		            if (props.visible && !_this.lastVisible) {
		              activeKeyProps.activeKey = selectedKeys[0];
		            }
		            var foundFirst = false;
		            // set firstActiveItem via cloning menus
		            // for scroll into view
		            var clone = function clone(item) {
		              if (!foundFirst && selectedKeys.indexOf(item.key) !== -1) {
		                foundFirst = true;
		                return (0, _react.cloneElement)(item, {
		                  ref: function ref(_ref) {
		                    _this.firstActiveItem = _ref;
		                  }
		                });
		              }
		              return item;
		            };
		
		            clonedMenuItems = menuItems.map(function (item) {
		              if (item.type === _rcMenu.ItemGroup) {
		                var children = item.props.children.map(clone);
		                return (0, _react.cloneElement)(item, {}, children);
		              }
		              return clone(item);
		            });
		          })();
		        }
		
		        // clear activeKey when inputValue change
		        if (inputValue !== _this.lastInputValue) {
		          activeKeyProps.activeKey = '';
		        }
		
		        return {
		          v: _react2["default"].createElement(
		            _rcMenu2["default"],
		            _extends({
		              ref: 'menu',
		              style: _this.props.dropdownMenuStyle,
		              defaultActiveFirst: defaultActiveFirstOption
		            }, activeKeyProps, {
		              multiple: multiple,
		              focusable: false
		            }, menuProps, {
		              selectedKeys: selectedKeys,
		              prefixCls: prefixCls + '-menu'
		            }),
		            clonedMenuItems
		          )
		        };
		      }();
		
		      if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
		    }
		    return null;
		  },
		  render: function render() {
		    return _react2["default"].createElement(
		      'div',
		      {
		        style: { overflow: 'auto' },
		        onFocus: this.props.onPopupFocus,
		        onMouseDown: _util.preventDefaultEvent
		      },
		      this.renderMenu()
		    );
		  }
		});
		
		exports["default"] = DropdownMenu;
		module.exports = exports['default'];
	
	/***/ },
	/* 348 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _util = __webpack_require__(31);
		
		var _rcMenu = __webpack_require__(23);
		
		var _warning = __webpack_require__(352);
		
		var _warning2 = _interopRequireDefault(_warning);
		
		var _OptGroup = __webpack_require__(47);
		
		var _OptGroup2 = _interopRequireDefault(_OptGroup);
		
		var _Option = __webpack_require__(112);
		
		var _Option2 = _interopRequireDefault(_Option);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		exports["default"] = {
		  filterOption: function filterOption(input, child) {
		    if (!input) {
		      return true;
		    }
		    var filterOption = this.props.filterOption;
		    if (!filterOption) {
		      return true;
		    }
		    if (child.props.disabled) {
		      return false;
		    }
		    return filterOption.call(this, input, child);
		  },
		  renderFilterOptions: function renderFilterOptions(inputValue) {
		    return this.renderFilterOptionsFromChildren(this.props.children, true, inputValue);
		  },
		  renderFilterOptionsFromChildren: function renderFilterOptionsFromChildren(children, showNotFound, iv) {
		    var _this = this;
		
		    var sel = [];
		    var props = this.props;
		    var inputValue = iv === undefined ? this.state.inputValue : iv;
		    var childrenKeys = [];
		    var tags = props.tags;
		    _react2["default"].Children.forEach(children, function (child) {
		      if (child.type === _OptGroup2["default"]) {
		        var innerItems = _this.renderFilterOptionsFromChildren(child.props.children, false);
		        if (innerItems.length) {
		          var label = child.props.label;
		          var key = child.key;
		          if (!key && typeof label === 'string') {
		            key = label;
		          } else if (!label && key) {
		            label = key;
		          }
		          sel.push(_react2["default"].createElement(
		            _rcMenu.ItemGroup,
		            { key: key, title: label },
		            innerItems
		          ));
		        }
		        return;
		      }
		
		      (0, _warning2["default"])(child.type === _Option2["default"], 'the children of `Select` should be `Select.Option` or `Select.OptGroup`, ' + ('instead of `' + (child.type.name || child.type.displayName || child.type) + '`.'));
		
		      var childValue = (0, _util.getValuePropValue)(child);
		      if (_this.filterOption(inputValue, child)) {
		        sel.push(_react2["default"].createElement(_rcMenu.Item, _extends({
		          style: _util.UNSELECTABLE_STYLE,
		          attribute: _util.UNSELECTABLE_ATTRIBUTE,
		          value: childValue,
		          key: childValue
		        }, child.props)));
		      }
		      if (tags && !child.props.disabled) {
		        childrenKeys.push(childValue);
		      }
		    });
		    if (tags) {
		      // tags value must be string
		      var value = this.state.value || [];
		      value = value.filter(function (singleValue) {
		        return childrenKeys.indexOf(singleValue.key) === -1 && (!inputValue || String(singleValue.key).indexOf(String(inputValue)) > -1);
		      });
		      sel = sel.concat(value.map(function (singleValue) {
		        var key = singleValue.key;
		        return _react2["default"].createElement(
		          _rcMenu.Item,
		          {
		            style: _util.UNSELECTABLE_STYLE,
		            attribute: _util.UNSELECTABLE_ATTRIBUTE,
		            value: key,
		            key: key
		          },
		          key
		        );
		      }));
		      if (inputValue) {
		        var notFindInputItem = sel.every(function (option) {
		          return (0, _util.getValuePropValue)(option) !== inputValue;
		        });
		        if (notFindInputItem) {
		          sel.unshift(_react2["default"].createElement(
		            _rcMenu.Item,
		            {
		              style: _util.UNSELECTABLE_STYLE,
		              attribute: _util.UNSELECTABLE_ATTRIBUTE,
		              value: inputValue,
		              key: inputValue
		            },
		            inputValue
		          ));
		        }
		      }
		    }
		    if (!sel.length && showNotFound && props.notFoundContent) {
		      sel = [_react2["default"].createElement(
		        _rcMenu.Item,
		        {
		          style: _util.UNSELECTABLE_STYLE,
		          attribute: _util.UNSELECTABLE_ATTRIBUTE,
		          disabled: true,
		          value: 'NOT_FOUND',
		          key: 'NOT_FOUND'
		        },
		        props.notFoundContent
		      )];
		    }
		    return sel;
		  }
		};
		module.exports = exports['default'];
	
	/***/ },
	/* 349 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _reactDom = __webpack_require__(4);
		
		var _reactDom2 = _interopRequireDefault(_reactDom);
		
		var _rcUtil = __webpack_require__(33);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var _OptGroup = __webpack_require__(47);
		
		var _OptGroup2 = _interopRequireDefault(_OptGroup);
		
		var _rcAnimate = __webpack_require__(7);
		
		var _rcAnimate2 = _interopRequireDefault(_rcAnimate);
		
		var _componentClasses = __webpack_require__(83);
		
		var _componentClasses2 = _interopRequireDefault(_componentClasses);
		
		var _util = __webpack_require__(31);
		
		var _SelectTrigger = __webpack_require__(350);
		
		var _SelectTrigger2 = _interopRequireDefault(_SelectTrigger);
		
		var _FilterMixin = __webpack_require__(348);
		
		var _FilterMixin2 = _interopRequireDefault(_FilterMixin);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function noop() {}
		
		function filterFn(input, child) {
		  return String((0, _util.getPropValue)(child, this.props.optionFilterProp)).indexOf(input) > -1;
		}
		
		function saveRef(name, component) {
		  this[name] = component;
		}
		
		var Select = _react2["default"].createClass({
		  displayName: 'Select',
		
		  propTypes: {
		    defaultActiveFirstOption: _react.PropTypes.bool,
		    multiple: _react.PropTypes.bool,
		    filterOption: _react.PropTypes.any,
		    showSearch: _react.PropTypes.bool,
		    disabled: _react.PropTypes.bool,
		    allowClear: _react.PropTypes.bool,
		    showArrow: _react.PropTypes.bool,
		    tags: _react.PropTypes.bool,
		    prefixCls: _react.PropTypes.string,
		    className: _react.PropTypes.string,
		    transitionName: _react.PropTypes.string,
		    optionLabelProp: _react.PropTypes.string,
		    optionFilterProp: _react.PropTypes.string,
		    animation: _react.PropTypes.string,
		    choiceTransitionName: _react.PropTypes.string,
		    onChange: _react.PropTypes.func,
		    onBlur: _react.PropTypes.func,
		    onSelect: _react.PropTypes.func,
		    onSearch: _react.PropTypes.func,
		    placeholder: _react.PropTypes.any,
		    onDeselect: _react.PropTypes.func,
		    labelInValue: _react.PropTypes.bool,
		    value: _react.PropTypes.any,
		    defaultValue: _react.PropTypes.any,
		    dropdownStyle: _react.PropTypes.object,
		    maxTagTextLength: _react.PropTypes.number
		  },
		
		  mixins: [_FilterMixin2["default"]],
		
		  getDefaultProps: function getDefaultProps() {
		    return {
		      prefixCls: 'rc-select',
		      filterOption: filterFn,
		      defaultOpen: false,
		      labelInValue: false,
		      defaultActiveFirstOption: true,
		      showSearch: true,
		      allowClear: false,
		      placeholder: '',
		      defaultValue: [],
		      onChange: noop,
		      onBlur: noop,
		      onSelect: noop,
		      onSearch: noop,
		      onDeselect: noop,
		      showArrow: true,
		      dropdownMatchSelectWidth: true,
		      dropdownStyle: {},
		      dropdownMenuStyle: {},
		      optionFilterProp: 'value',
		      optionLabelProp: 'value',
		      notFoundContent: 'Not Found'
		    };
		  },
		  getInitialState: function getInitialState() {
		    var props = this.props;
		    var value = [];
		    if ('value' in props) {
		      value = (0, _util.toArray)(props.value);
		    } else {
		      value = (0, _util.toArray)(props.defaultValue);
		    }
		    value = this.addLabelToValue(props, value);
		    var inputValue = '';
		    if (props.combobox) {
		      inputValue = value.length ? String(value[0].key) : '';
		    }
		    this.saveInputRef = saveRef.bind(this, 'inputInstance');
		    this.saveInputMirrorRef = saveRef.bind(this, 'inputMirrorInstance');
		    var open = props.open;
		    if (open === undefined) {
		      open = props.defaultOpen;
		    }
		    return {
		      value: value,
		      inputValue: inputValue,
		      open: open
		    };
		  },
		  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
		    if ('value' in nextProps) {
		      var value = (0, _util.toArray)(nextProps.value);
		      value = this.addLabelToValue(nextProps, value);
		      this.setState({
		        value: value
		      });
		      if (nextProps.combobox) {
		        this.setState({
		          inputValue: value.length ? String(value[0].key) : ''
		        });
		      }
		    }
		  },
		  componentDidUpdate: function componentDidUpdate() {
		    var state = this.state;
		    var props = this.props;
		
		    if (state.open && (0, _util.isMultipleOrTags)(props)) {
		      var inputNode = this.getInputDOMNode();
		      var mirrorNode = this.getInputMirrorDOMNode();
		      if (inputNode.value) {
		        inputNode.style.width = '';
		        inputNode.style.width = mirrorNode.clientWidth + 'px';
		      } else {
		        inputNode.style.width = '';
		      }
		    }
		  },
		  componentWillUnmount: function componentWillUnmount() {
		    this.clearBlurTime();
		    if (this.dropdownContainer) {
		      _reactDom2["default"].unmountComponentAtNode(this.dropdownContainer);
		      document.body.removeChild(this.dropdownContainer);
		      this.dropdownContainer = null;
		    }
		  },
		  onInputChange: function onInputChange(event) {
		    var val = event.target.value;
		    var props = this.props;
		
		    this.setInputValue(val);
		    this.setState({
		      open: true
		    });
		    if ((0, _util.isCombobox)(props)) {
		      this.fireChange([{
		        key: val
		      }]);
		    }
		  },
		  onDropdownVisibleChange: function onDropdownVisibleChange(open) {
		    this.setOpenState(open);
		  },
		
		
		  // combobox ignore
		  onKeyDown: function onKeyDown(event) {
		    var props = this.props;
		    if (props.disabled) {
		      return;
		    }
		    var keyCode = event.keyCode;
		    if (this.state.open && !this.getInputDOMNode()) {
		      this.onInputKeyDown(event);
		    } else if (keyCode === _rcUtil.KeyCode.ENTER || keyCode === _rcUtil.KeyCode.DOWN) {
		      this.setOpenState(true);
		      event.preventDefault();
		    }
		  },
		  onInputKeyDown: function onInputKeyDown(event) {
		    var props = this.props;
		    if (props.disabled) {
		      return;
		    }
		    var state = this.state;
		    var keyCode = event.keyCode;
		    if ((0, _util.isMultipleOrTags)(props) && !event.target.value && keyCode === _rcUtil.KeyCode.BACKSPACE) {
		      var value = state.value.concat();
		      if (value.length) {
		        var popValue = value.pop();
		        props.onDeselect(props.labelInValue ? popValue : popValue.key);
		        this.fireChange(value);
		      }
		      return;
		    }
		    if (keyCode === _rcUtil.KeyCode.DOWN) {
		      if (!state.open) {
		        this.openIfHasChildren();
		        event.preventDefault();
		        event.stopPropagation();
		        return;
		      }
		    } else if (keyCode === _rcUtil.KeyCode.ESC) {
		      if (state.open) {
		        this.setOpenState(false);
		        event.preventDefault();
		        event.stopPropagation();
		      }
		      return;
		    }
		
		    if (state.open) {
		      var menu = this.refs.trigger.getInnerMenu();
		      if (menu && menu.onKeyDown(event)) {
		        event.preventDefault();
		        event.stopPropagation();
		      }
		    }
		  },
		  onMenuSelect: function onMenuSelect(_ref) {
		    var item = _ref.item;
		
		    var value = this.state.value;
		    var props = this.props;
		    var selectedValue = (0, _util.getValuePropValue)(item);
		    var selectedLabel = this.getLabelFromOption(item);
		    var event = selectedValue;
		    if (props.labelInValue) {
		      event = {
		        key: event,
		        label: selectedLabel
		      };
		    }
		    props.onSelect(event, item);
		    if ((0, _util.isMultipleOrTags)(props)) {
		      if ((0, _util.findIndexInValueByKey)(value, selectedValue) !== -1) {
		        return;
		      }
		      value = value.concat([{
		        key: selectedValue,
		        label: selectedLabel
		      }]);
		    } else {
		      if (value.length && value[0].key === selectedValue) {
		        this.setOpenState(false, true);
		        return;
		      }
		      value = [{
		        key: selectedValue,
		        label: selectedLabel
		      }];
		      this.setOpenState(false, true);
		    }
		    this.fireChange(value);
		    var inputValue = void 0;
		    if ((0, _util.isCombobox)(props)) {
		      inputValue = (0, _util.getPropValue)(item, props.optionLabelProp);
		    } else {
		      inputValue = '';
		    }
		    this.setInputValue(inputValue, false);
		  },
		  onMenuDeselect: function onMenuDeselect(_ref2) {
		    var item = _ref2.item;
		    var domEvent = _ref2.domEvent;
		
		    if (domEvent.type === 'click') {
		      this.removeSelected((0, _util.getValuePropValue)(item));
		    }
		    this.setInputValue('', false);
		  },
		  onArrowClick: function onArrowClick(e) {
		    e.stopPropagation();
		    if (!this.props.disabled) {
		      this.setOpenState(!this.state.open, true);
		    }
		  },
		  onPlaceholderClick: function onPlaceholderClick() {
		    if (this.getInputDOMNode()) {
		      this.getInputDOMNode().focus();
		    }
		  },
		  onOuterFocus: function onOuterFocus() {
		    this.clearBlurTime();
		    this._focused = true;
		    this.updateFocusClassName();
		  },
		  onPopupFocus: function onPopupFocus() {
		    // fix ie scrollbar, focus element again
		    this.maybeFocus(true, true);
		  },
		  onOuterBlur: function onOuterBlur() {
		    var _this = this;
		
		    this.blurTimer = setTimeout(function () {
		      _this._focused = false;
		      _this.updateFocusClassName();
		      var props = _this.props;
		      var value = _this.state.value;
		
		      if ((0, _util.isSingleMode)(props) && props.showSearch && _this.state.inputValue && props.defaultActiveFirstOption) {
		        var options = _this._options || [];
		        if (options.length) {
		          var firstOption = (0, _util.findFirstMenuItem)(options);
		          if (firstOption) {
		            value = [{
		              key: firstOption.key,
		              label: _this.getLabelFromOption(firstOption)
		            }];
		            _this.fireChange(value);
		          }
		        }
		      }
		      props.onBlur(_this.getVLForOnChange(value));
		    }, 10);
		  },
		  onClearSelection: function onClearSelection(event) {
		    var props = this.props;
		    var state = this.state;
		    if (props.disabled) {
		      return;
		    }
		    var inputValue = state.inputValue;
		    var value = state.value;
		
		    event.stopPropagation();
		    if (inputValue || value.length) {
		      if (value.length) {
		        this.fireChange([]);
		      }
		      this.setOpenState(false, true);
		      if (inputValue) {
		        this.setInputValue('');
		      }
		    }
		  },
		  onChoiceAnimationLeave: function onChoiceAnimationLeave() {
		    this.refs.trigger.refs.trigger.forcePopupAlign();
		  },
		  getLabelBySingleValue: function getLabelBySingleValue(children, value) {
		    var _this2 = this;
		
		    if (value === undefined) {
		      return null;
		    }
		    var label = null;
		    _react2["default"].Children.forEach(children, function (child) {
		      if (child.type === _OptGroup2["default"]) {
		        var maybe = _this2.getLabelBySingleValue(child.props.children, value);
		        if (maybe !== null) {
		          label = maybe;
		        }
		      } else if ((0, _util.getValuePropValue)(child) === value) {
		        label = _this2.getLabelFromOption(child);
		      }
		    });
		    return label;
		  },
		  getLabelFromOption: function getLabelFromOption(child) {
		    return (0, _util.getPropValue)(child, this.props.optionLabelProp);
		  },
		  getLabelFromProps: function getLabelFromProps(props, value) {
		    return this.getLabelByValue(props.children, value);
		  },
		  getVLForOnChange: function getVLForOnChange(vls_) {
		    var vls = vls_;
		    if (vls !== undefined) {
		      if (!this.props.labelInValue) {
		        vls = vls.map(function (v) {
		          return v.key;
		        });
		      }
		      return (0, _util.isMultipleOrTags)(this.props) ? vls : vls[0];
		    }
		    return vls;
		  },
		  getLabelByValue: function getLabelByValue(children, value) {
		    var label = this.getLabelBySingleValue(children, value);
		    if (label === null) {
		      return value;
		    }
		    return label;
		  },
		  getDropdownContainer: function getDropdownContainer() {
		    if (!this.dropdownContainer) {
		      this.dropdownContainer = document.createElement('div');
		      document.body.appendChild(this.dropdownContainer);
		    }
		    return this.dropdownContainer;
		  },
		  getPlaceholderElement: function getPlaceholderElement() {
		    var props = this.props;
		    var state = this.state;
		
		    var hidden = false;
		    if (state.inputValue) {
		      hidden = true;
		    }
		    if (state.value.length) {
		      hidden = true;
		    }
		    if ((0, _util.isCombobox)(props) && state.value.length === 1 && !state.value[0].key) {
		      hidden = false;
		    }
		    var placeholder = props.placeholder;
		    if (placeholder) {
		      return _react2["default"].createElement(
		        'div',
		        _extends({
		          onMouseDown: _util.preventDefaultEvent,
		          style: _extends({
		            display: hidden ? 'none' : 'block'
		          }, _util.UNSELECTABLE_STYLE)
		        }, _util.UNSELECTABLE_ATTRIBUTE, {
		          onClick: this.onPlaceholderClick,
		          className: props.prefixCls + '-selection__placeholder'
		        }),
		        placeholder
		      );
		    }
		    return null;
		  },
		  getInputElement: function getInputElement() {
		    var props = this.props;
		    return _react2["default"].createElement(
		      'div',
		      { className: props.prefixCls + '-search__field__wrap' },
		      _react2["default"].createElement('input', {
		        ref: this.saveInputRef,
		        onChange: this.onInputChange,
		        onKeyDown: this.onInputKeyDown,
		        value: this.state.inputValue,
		        disabled: props.disabled,
		        className: props.prefixCls + '-search__field'
		      }),
		      _react2["default"].createElement(
		        'span',
		        {
		          ref: this.saveInputMirrorRef,
		          className: props.prefixCls + '-search__field__mirror'
		        },
		        this.state.inputValue
		      )
		    );
		  },
		  getInputDOMNode: function getInputDOMNode() {
		    return this.inputInstance;
		  },
		  getInputMirrorDOMNode: function getInputMirrorDOMNode() {
		    return this.inputMirrorInstance;
		  },
		  getPopupDOMNode: function getPopupDOMNode() {
		    return this.refs.trigger.getPopupDOMNode();
		  },
		  getPopupMenuComponent: function getPopupMenuComponent() {
		    return this.refs.trigger.getInnerMenu();
		  },
		  setOpenState: function setOpenState(open, needFocus) {
		    var _this3 = this;
		
		    var props = this.props;
		    var state = this.state;
		
		    if (state.open === open) {
		      this.maybeFocus(open, needFocus);
		      return;
		    }
		    var nextState = {
		      open: open
		    };
		    // clear search input value when open is false in singleMode.
		    if (!open && (0, _util.isSingleMode)(props) && props.showSearch) {
		      this.setInputValue('');
		    }
		    if (!open) {
		      this.maybeFocus(open, needFocus);
		    }
		    this.setState(nextState, function () {
		      if (open) {
		        _this3.maybeFocus(open, needFocus);
		      }
		    });
		  },
		  setInputValue: function setInputValue(inputValue) {
		    var fireSearch = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];
		
		    this.setState({
		      inputValue: inputValue
		    });
		    if (fireSearch) {
		      this.props.onSearch(inputValue);
		    }
		  },
		  clearBlurTime: function clearBlurTime() {
		    if (this.blurTimer) {
		      clearTimeout(this.blurTimer);
		      this.blurTimer = null;
		    }
		  },
		  updateFocusClassName: function updateFocusClassName() {
		    var refs = this.refs;
		    var props = this.props;
		    // avoid setState and its side effect
		
		    if (this._focused) {
		      (0, _componentClasses2["default"])(refs.root).add(props.prefixCls + '-focused');
		    } else {
		      (0, _componentClasses2["default"])(refs.root).remove(props.prefixCls + '-focused');
		    }
		  },
		  maybeFocus: function maybeFocus(open, needFocus) {
		    if (needFocus || open) {
		      var input = this.getInputDOMNode();
		      var _document = document;
		      var activeElement = _document.activeElement;
		
		      if (input && (open || (0, _util.isMultipleOrTagsOrCombobox)(this.props))) {
		        if (activeElement !== input) {
		          input.focus();
		        }
		      } else {
		        var selection = this.refs.selection;
		        if (activeElement !== selection) {
		          selection.focus();
		        }
		      }
		    }
		  },
		  addLabelToValue: function addLabelToValue(props, value_) {
		    var _this4 = this;
		
		    var value = value_;
		    if (props.labelInValue) {
		      value.forEach(function (v) {
		        v.label = v.label || _this4.getLabelFromProps(props, v.key);
		      });
		    } else {
		      value = value.map(function (v) {
		        return {
		          key: v,
		          label: _this4.getLabelFromProps(props, v)
		        };
		      });
		    }
		    return value;
		  },
		  removeSelected: function removeSelected(selectedKey) {
		    var props = this.props;
		    if (props.disabled) {
		      return;
		    }
		    var label = void 0;
		    var value = this.state.value.filter(function (singleValue) {
		      if (singleValue.key === selectedKey) {
		        label = singleValue.label;
		      }
		      return singleValue.key !== selectedKey;
		    });
		    var canMultiple = (0, _util.isMultipleOrTags)(props);
		
		    if (canMultiple) {
		      var event = selectedKey;
		      if (props.labelInValue) {
		        event = {
		          key: selectedKey,
		          label: label
		        };
		      }
		      props.onDeselect(event);
		    }
		    this.fireChange(value);
		  },
		  openIfHasChildren: function openIfHasChildren() {
		    var props = this.props;
		    if (_react2["default"].Children.count(props.children) || (0, _util.isSingleMode)(props)) {
		      this.setOpenState(true);
		    }
		  },
		  fireChange: function fireChange(value) {
		    var props = this.props;
		    if (!('value' in props)) {
		      this.setState({
		        value: value
		      });
		    }
		    props.onChange(this.getVLForOnChange(value));
		  },
		  renderTopControlNode: function renderTopControlNode() {
		    var _this5 = this;
		
		    var _state = this.state;
		    var value = _state.value;
		    var open = _state.open;
		    var inputValue = _state.inputValue;
		
		    var props = this.props;
		    var choiceTransitionName = props.choiceTransitionName;
		    var prefixCls = props.prefixCls;
		    var maxTagTextLength = props.maxTagTextLength;
		    var showSearch = props.showSearch;
		
		    var className = prefixCls + '-selection__rendered';
		    // search input is inside topControlNode in single, multiple & combobox. 2016/04/13
		    var innerNode = null;
		    if ((0, _util.isSingleMode)(props)) {
		      var selectedValue = null;
		      if (value.length) {
		        var showSelectedValue = false;
		        var opacity = 1;
		        if (!showSearch) {
		          showSelectedValue = true;
		        } else {
		          if (open) {
		            showSelectedValue = !inputValue;
		            if (showSelectedValue) {
		              opacity = 0.4;
		            }
		          } else {
		            showSelectedValue = true;
		          }
		        }
		        selectedValue = _react2["default"].createElement(
		          'div',
		          {
		            key: 'value',
		            className: prefixCls + '-selection-selected-value',
		            style: {
		              display: showSelectedValue ? 'block' : 'none',
		              opacity: opacity
		            }
		          },
		          value[0].label
		        );
		      }
		      if (!showSearch) {
		        innerNode = [selectedValue];
		      } else {
		        innerNode = [selectedValue, _react2["default"].createElement(
		          'div',
		          {
		            className: prefixCls + '-search ' + prefixCls + '-search--inline',
		            key: 'input',
		            style: {
		              display: open ? 'block' : 'none'
		            }
		          },
		          this.getInputElement()
		        )];
		      }
		    } else {
		      var selectedValueNodes = [];
		      if ((0, _util.isMultipleOrTags)(props)) {
		        selectedValueNodes = value.map(function (singleValue) {
		          var content = singleValue.label;
		          var title = content;
		          if (maxTagTextLength && typeof content === 'string' && content.length > maxTagTextLength) {
		            content = content.slice(0, maxTagTextLength) + '...';
		          }
		          var disabled = (0, _util.toArray)(props.children).some(function (child) {
		            var childValue = (0, _util.getValuePropValue)(child);
		            return childValue === singleValue.key && child.props && child.props.disabled;
		          });
		          var choiceClassName = disabled ? prefixCls + '-selection__choice ' + prefixCls + '-selection__choice__disabled' : prefixCls + '-selection__choice';
		          return _react2["default"].createElement(
		            'li',
		            _extends({
		              style: _util.UNSELECTABLE_STYLE
		            }, _util.UNSELECTABLE_ATTRIBUTE, {
		              onMouseDown: _util.preventDefaultEvent,
		              className: choiceClassName,
		              key: singleValue.key,
		              title: title
		            }),
		            _react2["default"].createElement(
		              'div',
		              { className: prefixCls + '-selection__choice__content' },
		              content
		            ),
		            disabled ? null : _react2["default"].createElement('span', {
		              className: prefixCls + '-selection__choice__remove',
		              onClick: _this5.removeSelected.bind(_this5, singleValue.key)
		            })
		          );
		        });
		      }
		      selectedValueNodes.push(_react2["default"].createElement(
		        'li',
		        {
		          className: prefixCls + '-search ' + prefixCls + '-search--inline',
		          key: '__input'
		        },
		        this.getInputElement()
		      ));
		
		      if ((0, _util.isMultipleOrTags)(props) && choiceTransitionName) {
		        innerNode = _react2["default"].createElement(
		          _rcAnimate2["default"],
		          {
		            onLeave: this.onChoiceAnimationLeave,
		            component: 'ul',
		            transitionName: choiceTransitionName
		          },
		          selectedValueNodes
		        );
		      } else {
		        innerNode = _react2["default"].createElement(
		          'ul',
		          null,
		          selectedValueNodes
		        );
		      }
		    }
		    return _react2["default"].createElement(
		      'div',
		      { className: className },
		      this.getPlaceholderElement(),
		      innerNode
		    );
		  },
		  render: function render() {
		    var _rootCls;
		
		    var props = this.props;
		    var multiple = (0, _util.isMultipleOrTags)(props);
		    var state = this.state;
		    var className = props.className;
		    var disabled = props.disabled;
		    var allowClear = props.allowClear;
		    var prefixCls = props.prefixCls;
		
		    var ctrlNode = this.renderTopControlNode();
		    var extraSelectionProps = {};
		    var open = this.state.open;
		
		    var options = [];
		    if (open) {
		      options = this.renderFilterOptions();
		    }
		    this._options = options;
		    if (open && ((0, _util.isMultipleOrTagsOrCombobox)(props) || !props.showSearch) && !options.length) {
		      open = false;
		    }
		    if (!(0, _util.isMultipleOrTagsOrCombobox)(props)) {
		      extraSelectionProps = {
		        onKeyDown: this.onKeyDown,
		        tabIndex: 0
		      };
		    }
		    var rootCls = (_rootCls = {}, _defineProperty(_rootCls, className, !!className), _defineProperty(_rootCls, prefixCls, 1), _defineProperty(_rootCls, prefixCls + '-open', open), _defineProperty(_rootCls, prefixCls + '-focused', open || !!this._focused), _defineProperty(_rootCls, prefixCls + '-combobox', (0, _util.isCombobox)(props)), _defineProperty(_rootCls, prefixCls + '-disabled', disabled), _defineProperty(_rootCls, prefixCls + '-enabled', !disabled), _defineProperty(_rootCls, prefixCls + '-allow-clear', !!props.allowClear), _rootCls);
		    var clearStyle = _extends({}, _util.UNSELECTABLE_STYLE, {
		      display: 'none'
		    });
		    if (state.inputValue || state.value.length) {
		      clearStyle.display = 'block';
		    }
		    var clear = _react2["default"].createElement('span', _extends({
		      key: 'clear',
		      onMouseDown: _util.preventDefaultEvent,
		      style: clearStyle
		    }, _util.UNSELECTABLE_ATTRIBUTE, {
		      className: prefixCls + '-selection__clear',
		      onClick: this.onClearSelection
		    }));
		    return _react2["default"].createElement(
		      _SelectTrigger2["default"],
		      {
		        onPopupFocus: this.onPopupFocus,
		        dropdownAlign: props.dropdownAlign,
		        dropdownClassName: props.dropdownClassName,
		        dropdownMatchSelectWidth: props.dropdownMatchSelectWidth,
		        defaultActiveFirstOption: props.defaultActiveFirstOption,
		        dropdownMenuStyle: props.dropdownMenuStyle,
		        transitionName: props.transitionName,
		        animation: props.animation,
		        prefixCls: props.prefixCls,
		        dropdownStyle: props.dropdownStyle,
		        combobox: props.combobox,
		        showSearch: props.showSearch,
		        options: options,
		        multiple: multiple,
		        disabled: disabled,
		        visible: open,
		        inputValue: state.inputValue,
		        value: state.value,
		        onDropdownVisibleChange: this.onDropdownVisibleChange,
		        getPopupContainer: props.getPopupContainer,
		        onMenuSelect: this.onMenuSelect,
		        onMenuDeselect: this.onMenuDeselect,
		        ref: 'trigger'
		      },
		      _react2["default"].createElement(
		        'div',
		        {
		          style: props.style,
		          ref: 'root',
		          onBlur: this.onOuterBlur,
		          onFocus: this.onOuterFocus,
		          className: (0, _classnames2["default"])(rootCls)
		        },
		        _react2["default"].createElement(
		          'div',
		          _extends({
		            ref: 'selection',
		            key: 'selection',
		            className: prefixCls + '-selection\n            ' + prefixCls + '-selection--' + (multiple ? 'multiple' : 'single'),
		            role: 'combobox',
		            'aria-autocomplete': 'list',
		            'aria-haspopup': 'true',
		            'aria-expanded': open
		          }, extraSelectionProps),
		          ctrlNode,
		          allowClear && !multiple ? clear : null,
		          multiple || !props.showArrow ? null : _react2["default"].createElement(
		            'span',
		            _extends({
		              key: 'arrow',
		              className: prefixCls + '-arrow',
		              style: _util.UNSELECTABLE_STYLE
		            }, _util.UNSELECTABLE_ATTRIBUTE, {
		              onMouseDown: _util.preventDefaultEvent,
		              onClick: this.onArrowClick
		            }),
		            _react2["default"].createElement('b', null)
		          )
		        )
		      )
		    );
		  }
		});
		
		exports["default"] = Select;
		module.exports = exports['default'];
	
	/***/ },
	/* 350 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _rcTrigger = __webpack_require__(17);
		
		var _rcTrigger2 = _interopRequireDefault(_rcTrigger);
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var _DropdownMenu = __webpack_require__(347);
		
		var _DropdownMenu2 = _interopRequireDefault(_DropdownMenu);
		
		var _reactDom = __webpack_require__(4);
		
		var _reactDom2 = _interopRequireDefault(_reactDom);
		
		var _util = __webpack_require__(31);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
		
		var BUILT_IN_PLACEMENTS = {
		  bottomLeft: {
		    points: ['tl', 'bl'],
		    offset: [0, 4],
		    overflow: {
		      adjustX: 0,
		      adjustY: 1
		    }
		  },
		  topLeft: {
		    points: ['bl', 'tl'],
		    offset: [0, -4],
		    overflow: {
		      adjustX: 0,
		      adjustY: 1
		    }
		  }
		};
		
		var SelectTrigger = _react2["default"].createClass({
		  displayName: 'SelectTrigger',
		
		  propTypes: {
		    onPopupFocus: _react.PropTypes.func,
		    dropdownMatchSelectWidth: _react.PropTypes.bool,
		    dropdownAlign: _react.PropTypes.object,
		    visible: _react.PropTypes.bool,
		    disabled: _react.PropTypes.bool,
		    showSearch: _react.PropTypes.bool,
		    dropdownClassName: _react.PropTypes.string,
		    multiple: _react.PropTypes.bool,
		    inputValue: _react.PropTypes.string,
		    filterOption: _react.PropTypes.any,
		    options: _react.PropTypes.any,
		    prefixCls: _react.PropTypes.string,
		    popupClassName: _react.PropTypes.string,
		    children: _react.PropTypes.any
		  },
		
		  componentDidUpdate: function componentDidUpdate() {
		    var _props = this.props;
		    var visible = _props.visible;
		    var dropdownMatchSelectWidth = _props.dropdownMatchSelectWidth;
		
		    if (visible) {
		      var dropdownDOMNode = this.getPopupDOMNode();
		      if (dropdownDOMNode) {
		        var widthProp = dropdownMatchSelectWidth ? 'width' : 'minWidth';
		        dropdownDOMNode.style[widthProp] = _reactDom2["default"].findDOMNode(this).offsetWidth + 'px';
		      }
		    }
		  },
		  getInnerMenu: function getInnerMenu() {
		    return this.popupMenu && this.popupMenu.refs.menu;
		  },
		  getPopupDOMNode: function getPopupDOMNode() {
		    return this.refs.trigger.getPopupDomNode();
		  },
		  getDropdownElement: function getDropdownElement(newProps) {
		    var props = this.props;
		    return _react2["default"].createElement(_DropdownMenu2["default"], _extends({
		      ref: this.saveMenu
		    }, newProps, {
		      prefixCls: this.getDropdownPrefixCls(),
		      onMenuSelect: props.onMenuSelect,
		      onMenuDeselect: props.onMenuDeselect,
		      value: props.value,
		      defaultActiveFirstOption: props.defaultActiveFirstOption,
		      dropdownMenuStyle: props.dropdownMenuStyle
		    }));
		  },
		  getDropdownTransitionName: function getDropdownTransitionName() {
		    var props = this.props;
		    var transitionName = props.transitionName;
		    if (!transitionName && props.animation) {
		      transitionName = this.getDropdownPrefixCls() + '-' + props.animation;
		    }
		    return transitionName;
		  },
		  getDropdownPrefixCls: function getDropdownPrefixCls() {
		    return this.props.prefixCls + '-dropdown';
		  },
		  saveMenu: function saveMenu(menu) {
		    this.popupMenu = menu;
		  },
		  render: function render() {
		    var _popupClassName;
		
		    var _props2 = this.props;
		    var onPopupFocus = _props2.onPopupFocus;
		
		    var props = _objectWithoutProperties(_props2, ['onPopupFocus']);
		
		    var multiple = props.multiple;
		    var visible = props.visible;
		    var inputValue = props.inputValue;
		    var dropdownAlign = props.dropdownAlign;
		    var disabled = props.disabled;
		    var showSearch = props.showSearch;
		    var dropdownClassName = props.dropdownClassName;
		
		    var dropdownPrefixCls = this.getDropdownPrefixCls();
		    var popupClassName = (_popupClassName = {}, _defineProperty(_popupClassName, dropdownClassName, !!dropdownClassName), _defineProperty(_popupClassName, dropdownPrefixCls + '--' + (multiple ? 'multiple' : 'single'), 1), _popupClassName);
		    var popupElement = this.getDropdownElement({
		      menuItems: props.options,
		      onPopupFocus: onPopupFocus,
		      multiple: multiple,
		      inputValue: inputValue,
		      visible: visible
		    });
		    var hideAction = void 0;
		    if (disabled) {
		      hideAction = [];
		    } else if ((0, _util.isSingleMode)(props) && !showSearch) {
		      hideAction = ['click'];
		    } else {
		      hideAction = ['blur'];
		    }
		    return _react2["default"].createElement(
		      _rcTrigger2["default"],
		      _extends({}, props, {
		        showAction: disabled ? [] : ['click'],
		        hideAction: hideAction,
		        ref: 'trigger',
		        popupPlacement: 'bottomLeft',
		        builtinPlacements: BUILT_IN_PLACEMENTS,
		        prefixCls: dropdownPrefixCls,
		        popupTransitionName: this.getDropdownTransitionName(),
		        onPopupVisibleChange: props.onDropdownVisibleChange,
		        popup: popupElement,
		        popupAlign: dropdownAlign,
		        popupVisible: visible,
		        getPopupContainer: props.getPopupContainer,
		        popupClassName: (0, _classnames2["default"])(popupClassName),
		        popupStyle: props.dropdownStyle
		      }),
		      props.children
		    );
		  }
		});
		
		exports["default"] = SelectTrigger;
		module.exports = exports['default'];
	
	/***/ },
	/* 351 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.OptGroup = exports.Option = undefined;
		
		var _Select = __webpack_require__(349);
		
		var _Select2 = _interopRequireDefault(_Select);
		
		var _Option = __webpack_require__(112);
		
		var _Option2 = _interopRequireDefault(_Option);
		
		var _OptGroup = __webpack_require__(47);
		
		var _OptGroup2 = _interopRequireDefault(_OptGroup);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		_Select2["default"].Option = _Option2["default"];
		_Select2["default"].OptGroup = _OptGroup2["default"];
		exports.Option = _Option2["default"];
		exports.OptGroup = _OptGroup2["default"];
		exports["default"] = _Select2["default"];
	
	/***/ },
	/* 352 */
	18,
	/* 353 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
		
		var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _rcTooltip = __webpack_require__(117);
		
		var _rcTooltip2 = _interopRequireDefault(_rcTooltip);
		
		var Handle = (function (_React$Component) {
		  _inherits(Handle, _React$Component);
		
		  function Handle(props) {
		    _classCallCheck(this, Handle);
		
		    _get(Object.getPrototypeOf(Handle.prototype), 'constructor', this).call(this, props);
		
		    this.state = {
		      isTooltipVisible: false
		    };
		  }
		
		  _createClass(Handle, [{
		    key: 'showTooltip',
		    value: function showTooltip() {
		      this.setState({
		        isTooltipVisible: true
		      });
		    }
		  }, {
		    key: 'hideTooltip',
		    value: function hideTooltip() {
		      this.setState({
		        isTooltipVisible: false
		      });
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var props = this.props;
		      var className = props.className;
		      var tipTransitionName = props.tipTransitionName;
		      var tipFormatter = props.tipFormatter;
		      var vertical = props.vertical;
		      var offset = props.offset;
		      var value = props.value;
		      var dragging = props.dragging;
		      var noTip = props.noTip;
		
		      var style = vertical ? { bottom: offset + '%' } : { left: offset + '%' };
		      var handle = _react2['default'].createElement('div', { className: className, style: style,
		        onMouseUp: this.showTooltip.bind(this),
		        onMouseEnter: this.showTooltip.bind(this),
		        onMouseLeave: this.hideTooltip.bind(this) });
		
		      if (noTip) {
		        return handle;
		      }
		
		      var isTooltipVisible = dragging || this.state.isTooltipVisible;
		      return _react2['default'].createElement(
		        _rcTooltip2['default'],
		        {
		          prefixCls: className.replace('slider-handle', 'tooltip'),
		          placement: 'top',
		          visible: isTooltipVisible,
		          overlay: _react2['default'].createElement(
		            'span',
		            null,
		            tipFormatter(value)
		          ),
		          delay: 0,
		          transitionName: tipTransitionName },
		        handle
		      );
		    }
		  }]);
		
		  return Handle;
		})(_react2['default'].Component);
		
		exports['default'] = Handle;
		
		Handle.propTypes = {
		  className: _react2['default'].PropTypes.string,
		  vertical: _react2['default'].PropTypes.bool,
		  offset: _react2['default'].PropTypes.number,
		  tipTransitionName: _react2['default'].PropTypes.string,
		  tipFormatter: _react2['default'].PropTypes.func,
		  value: _react2['default'].PropTypes.number,
		  dragging: _react2['default'].PropTypes.bool,
		  noTip: _react2['default'].PropTypes.bool
		};
		module.exports = exports['default'];
	
	/***/ },
	/* 354 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var Marks = function Marks(_ref) {
		  var className = _ref.className;
		  var vertical = _ref.vertical;
		  var marks = _ref.marks;
		  var included = _ref.included;
		  var upperBound = _ref.upperBound;
		  var lowerBound = _ref.lowerBound;
		  var max = _ref.max;
		  var min = _ref.min;
		
		  var marksKeys = Object.keys(marks);
		  var marksCount = marksKeys.length;
		  var unit = 100 / (marksCount - 1);
		  var markWidth = unit * 0.9;
		
		  var range = max - min;
		  var elements = marksKeys.map(parseFloat).sort(function (a, b) {
		    return a - b;
		  }).map(function (point) {
		    var _classNames;
		
		    var isActived = !included && point === upperBound || included && point <= upperBound && point >= lowerBound;
		    var markClassName = (0, _classnames2['default'])((_classNames = {}, _defineProperty(_classNames, className + '-text', true), _defineProperty(_classNames, className + '-text-active', isActived), _classNames));
		
		    var bottomStyle = {
		      // height: markWidth + '%',
		      marginBottom: '-200' + '%',
		      bottom: (point - min) / range * 100 + '%'
		    };
		
		    var leftStyle = {
		      width: markWidth + '%',
		      marginLeft: -markWidth / 2 + '%',
		      left: (point - min) / range * 100 + '%'
		    };
		
		    var style = vertical ? bottomStyle : leftStyle;
		
		    var markPoint = marks[point];
		    var markPointIsObject = typeof markPoint === 'object' && !_react2['default'].isValidElement(markPoint);
		    var markLabel = markPointIsObject ? markPoint.label : markPoint;
		    var markStyle = markPointIsObject ? _extends({}, style, markPoint.style) : style;
		    return _react2['default'].createElement(
		      'span',
		      { className: markClassName, style: markStyle, key: point },
		      markLabel
		    );
		  });
		
		  return _react2['default'].createElement(
		    'div',
		    { className: className },
		    elements
		  );
		};
		
		exports['default'] = Marks;
		module.exports = exports['default'];
	
	/***/ },
	/* 355 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
		
		var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _rcUtilLibDomAddEventListener = __webpack_require__(359);
		
		var _rcUtilLibDomAddEventListener2 = _interopRequireDefault(_rcUtilLibDomAddEventListener);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var _Track = __webpack_require__(357);
		
		var _Track2 = _interopRequireDefault(_Track);
		
		var _Handle = __webpack_require__(353);
		
		var _Handle2 = _interopRequireDefault(_Handle);
		
		var _Steps = __webpack_require__(356);
		
		var _Steps2 = _interopRequireDefault(_Steps);
		
		var _Marks = __webpack_require__(354);
		
		var _Marks2 = _interopRequireDefault(_Marks);
		
		function noop() {}
		
		function isNotTouchEvent(e) {
		  return e.touches.length > 1 || e.type.toLowerCase() === 'touchend' && e.touches.length > 0;
		}
		
		function getTouchPosition(vertical, e) {
		  return vertical ? e.touches[0].clientY : e.touches[0].pageX;
		}
		
		function getMousePosition(vertical, e) {
		  return vertical ? e.clientY : e.pageX;
		}
		
		function pauseEvent(e) {
		  e.stopPropagation();
		  e.preventDefault();
		}
		
		var Slider = (function (_React$Component) {
		  _inherits(Slider, _React$Component);
		
		  function Slider(props) {
		    _classCallCheck(this, Slider);
		
		    _get(Object.getPrototypeOf(Slider.prototype), 'constructor', this).call(this, props);
		
		    var range = props.range;
		    var min = props.min;
		    var max = props.max;
		
		    var initialValue = range ? [min, min] : min;
		    var defaultValue = 'defaultValue' in props ? props.defaultValue : initialValue;
		    var value = props.value !== undefined ? props.value : defaultValue;
		
		    var upperBound = undefined;
		    var lowerBound = undefined;
		    if (props.range) {
		      lowerBound = this.trimAlignValue(value[0]);
		      upperBound = this.trimAlignValue(value[1]);
		    } else {
		      upperBound = this.trimAlignValue(value);
		    }
		
		    var recent = undefined;
		    if (props.range && upperBound === lowerBound) {
		      recent = lowerBound === max ? 'lowerBound' : 'upperBound';
		    } else {
		      recent = 'upperBound';
		    }
		
		    this.state = {
		      handle: null,
		      recent: recent,
		      upperBound: upperBound,
		      // If Slider is not range, set `lowerBound` equal to `min`.
		      lowerBound: lowerBound || min
		    };
		  }
		
		  _createClass(Slider, [{
		    key: 'componentWillReceiveProps',
		    value: function componentWillReceiveProps(nextProps) {
		      if (!('value' in nextProps || 'min' in nextProps || 'max' in nextProps)) return;
		
		      var _state = this.state;
		      var lowerBound = _state.lowerBound;
		      var upperBound = _state.upperBound;
		
		      if (nextProps.range) {
		        var value = nextProps.value || [lowerBound, upperBound];
		        var nextUpperBound = this.trimAlignValue(value[1], nextProps);
		        var nextLowerBound = this.trimAlignValue(value[0], nextProps);
		        if (nextLowerBound === lowerBound && nextUpperBound === upperBound) return;
		
		        this.setState({
		          upperBound: nextUpperBound,
		          lowerBound: nextLowerBound
		        });
		        if (this.isValueOutOfBounds(upperBound, nextProps) || this.isValueOutOfBounds(lowerBound, nextProps)) {
		          this.props.onChange([nextLowerBound, nextUpperBound]);
		        }
		      } else {
		        var value = nextProps.value !== undefined ? nextProps.value : upperBound;
		        var nextValue = this.trimAlignValue(value, nextProps);
		        if (nextValue === upperBound && lowerBound === nextProps.min) return;
		
		        this.setState({
		          upperBound: nextValue,
		          lowerBound: nextProps.min
		        });
		        if (this.isValueOutOfBounds(upperBound, nextProps)) {
		          this.props.onChange(nextValue);
		        }
		      }
		    }
		  }, {
		    key: 'onChange',
		    value: function onChange(state) {
		      var props = this.props;
		      var isNotControlled = !('value' in props);
		      if (isNotControlled) {
		        this.setState(state);
		      } else if (state.handle) {
		        this.setState({ handle: state.handle });
		      }
		
		      var data = _extends({}, this.state, state);
		      var changedValue = props.range ? [data.lowerBound, data.upperBound] : data.upperBound;
		      props.onChange(changedValue);
		    }
		  }, {
		    key: 'onMouseMove',
		    value: function onMouseMove(e) {
		      var position = getMousePosition(this.props.vertical, e);
		      this.onMove(e, position);
		    }
		  }, {
		    key: 'onTouchMove',
		    value: function onTouchMove(e) {
		      if (isNotTouchEvent(e)) {
		        this.end('touch');
		        return;
		      }
		
		      var position = getTouchPosition(this.props.vertical, e);
		      this.onMove(e, position);
		    }
		  }, {
		    key: 'onMove',
		    value: function onMove(e, position) {
		      pauseEvent(e);
		      var props = this.props;
		      var state = this.state;
		
		      var diffPosition = position - this.startPosition;
		      diffPosition = this.props.vertical ? -diffPosition : diffPosition;
		      var diffValue = diffPosition / this.getSliderLength() * (props.max - props.min);
		
		      var value = this.trimAlignValue(this.startValue + diffValue);
		      var oldValue = state[state.handle];
		      if (value === oldValue) return;
		
		      if (props.allowCross && value < state.lowerBound && state.handle === 'upperBound') {
		        this.onChange({
		          handle: 'lowerBound',
		          lowerBound: value,
		          upperBound: this.state.lowerBound
		        });
		        return;
		      }
		      if (props.allowCross && value > state.upperBound && state.handle === 'lowerBound') {
		        this.onChange({
		          handle: 'upperBound',
		          upperBound: value,
		          lowerBound: this.state.upperBound
		        });
		        return;
		      }
		
		      this.onChange(_defineProperty({}, state.handle, value));
		    }
		  }, {
		    key: 'onTouchStart',
		    value: function onTouchStart(e) {
		      if (isNotTouchEvent(e)) return;
		
		      var position = getTouchPosition(this.props.vertical, e);
		      this.onStart(position);
		      this.addDocumentEvents('touch');
		      pauseEvent(e);
		    }
		  }, {
		    key: 'onMouseDown',
		    value: function onMouseDown(e) {
		      if (e.button !== 0) {
		        return;
		      }
		      var position = getMousePosition(this.props.vertical, e);
		      this.onStart(position);
		      this.addDocumentEvents('mouse');
		      pauseEvent(e);
		    }
		  }, {
		    key: 'onStart',
		    value: function onStart(position) {
		      var props = this.props;
		      props.onBeforeChange(this.getValue());
		
		      var value = this.calcValueByPos(position);
		      this.startValue = value;
		      this.startPosition = position;
		
		      var state = this.state;
		      var upperBound = state.upperBound;
		      var lowerBound = state.lowerBound;
		
		      var valueNeedChanging = 'upperBound';
		      if (this.props.range) {
		        var isLowerBoundCloser = Math.abs(upperBound - value) > Math.abs(lowerBound - value);
		        if (isLowerBoundCloser) {
		          valueNeedChanging = 'lowerBound';
		        }
		
		        var isAtTheSamePoint = upperBound === lowerBound;
		        if (isAtTheSamePoint) {
		          valueNeedChanging = state.recent;
		        }
		
		        if (isAtTheSamePoint && value !== upperBound) {
		          valueNeedChanging = value < upperBound ? 'lowerBound' : 'upperBound';
		        }
		      }
		
		      this.setState({
		        handle: valueNeedChanging,
		        recent: valueNeedChanging
		      });
		
		      var oldValue = state[valueNeedChanging];
		      if (value === oldValue) return;
		
		      this.onChange(_defineProperty({}, valueNeedChanging, value));
		    }
		  }, {
		    key: 'getValue',
		    value: function getValue() {
		      var _state2 = this.state;
		      var lowerBound = _state2.lowerBound;
		      var upperBound = _state2.upperBound;
		
		      return this.props.range ? [lowerBound, upperBound] : upperBound;
		    }
		  }, {
		    key: 'getSliderLength',
		    value: function getSliderLength() {
		      var slider = this.refs.slider;
		      if (!slider) {
		        return 0;
		      }
		
		      return this.props.vertical ? slider.clientHeight : slider.clientWidth;
		    }
		  }, {
		    key: 'getSliderStart',
		    value: function getSliderStart() {
		      var slider = this.refs.slider;
		      var rect = slider.getBoundingClientRect();
		
		      return this.props.vertical ? rect.top : rect.left;
		    }
		  }, {
		    key: 'getPrecision',
		    value: function getPrecision(step) {
		      var stepString = step.toString();
		      var precision = 0;
		      if (stepString.indexOf('.') >= 0) {
		        precision = stepString.length - stepString.indexOf('.') - 1;
		      }
		      return precision;
		    }
		  }, {
		    key: 'isValueOutOfBounds',
		    value: function isValueOutOfBounds(value, props) {
		      return value < props.min || value > props.max;
		    }
		  }, {
		    key: 'trimAlignValue',
		    value: function trimAlignValue(v, nextProps) {
		      var state = this.state || {};
		      var handle = state.handle;
		      var lowerBound = state.lowerBound;
		      var upperBound = state.upperBound;
		
		      var _extends2 = _extends({}, this.props, nextProps || {});
		
		      var marks = _extends2.marks;
		      var step = _extends2.step;
		      var min = _extends2.min;
		      var max = _extends2.max;
		      var allowCross = _extends2.allowCross;
		
		      var val = v;
		      if (val <= min) {
		        val = min;
		      }
		      if (val >= max) {
		        val = max;
		      }
		      if (!allowCross && handle === 'upperBound' && val <= lowerBound) {
		        val = lowerBound;
		      }
		      if (!allowCross && handle === 'lowerBound' && val >= upperBound) {
		        val = upperBound;
		      }
		
		      var points = Object.keys(marks).map(parseFloat);
		      if (step !== null) {
		        var closestStep = Math.round((val - min) / step) * step + min;
		        points.push(closestStep);
		      }
		
		      var diffs = points.map(function (point) {
		        return Math.abs(val - point);
		      });
		      var closestPoint = points[diffs.indexOf(Math.min.apply(Math, diffs))];
		
		      return step !== null ? parseFloat(closestPoint.toFixed(this.getPrecision(step))) : closestPoint;
		    }
		  }, {
		    key: 'calcOffset',
		    value: function calcOffset(value) {
		      var _props = this.props;
		      var min = _props.min;
		      var max = _props.max;
		
		      var ratio = (value - min) / (max - min);
		      return ratio * 100;
		    }
		  }, {
		    key: 'calcValue',
		    value: function calcValue(offset) {
		      var _props2 = this.props;
		      var vertical = _props2.vertical;
		      var min = _props2.min;
		      var max = _props2.max;
		
		      var ratio = Math.abs(offset / this.getSliderLength());
		      var value = vertical ? (1 - ratio) * (max - min) + min : ratio * (max - min) + min;
		      return value;
		    }
		  }, {
		    key: 'calcValueByPos',
		    value: function calcValueByPos(position) {
		      var pixelOffset = position - this.getSliderStart();
		      var nextValue = this.trimAlignValue(this.calcValue(pixelOffset));
		      return nextValue;
		    }
		  }, {
		    key: 'addDocumentEvents',
		    value: function addDocumentEvents(type) {
		      if (type === 'touch') {
		        // just work for chrome iOS Safari and Android Browser
		        this.onTouchMoveListener = (0, _rcUtilLibDomAddEventListener2['default'])(document, 'touchmove', this.onTouchMove.bind(this));
		        this.onTouchUpListener = (0, _rcUtilLibDomAddEventListener2['default'])(document, 'touchend', this.end.bind(this, 'touch'));
		      } else if (type === 'mouse') {
		        this.onMouseMoveListener = (0, _rcUtilLibDomAddEventListener2['default'])(document, 'mousemove', this.onMouseMove.bind(this));
		        this.onMouseUpListener = (0, _rcUtilLibDomAddEventListener2['default'])(document, 'mouseup', this.end.bind(this, 'mouse'));
		      }
		    }
		  }, {
		    key: 'removeEvents',
		    value: function removeEvents(type) {
		      if (type === 'touch') {
		        this.onTouchMoveListener.remove();
		        this.onTouchUpListener.remove();
		      } else if (type === 'mouse') {
		        this.onMouseMoveListener.remove();
		        this.onMouseUpListener.remove();
		      }
		    }
		  }, {
		    key: 'end',
		    value: function end(type) {
		      this.removeEvents(type);
		      this.props.onAfterChange(this.getValue());
		      this.setState({ handle: null });
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var _classNames;
		
		      var _state3 = this.state;
		      var handle = _state3.handle;
		      var upperBound = _state3.upperBound;
		      var lowerBound = _state3.lowerBound;
		      var _props3 = this.props;
		      var className = _props3.className;
		      var prefixCls = _props3.prefixCls;
		      var disabled = _props3.disabled;
		      var vertical = _props3.vertical;
		      var dots = _props3.dots;
		      var included = _props3.included;
		      var range = _props3.range;
		      var step = _props3.step;
		      var marks = _props3.marks;
		      var max = _props3.max;
		      var min = _props3.min;
		      var tipTransitionName = _props3.tipTransitionName;
		      var tipFormatter = _props3.tipFormatter;
		      var children = _props3.children;
		
		      var customHandle = this.props.handle;
		
		      var upperOffset = this.calcOffset(upperBound);
		      var lowerOffset = this.calcOffset(lowerBound);
		
		      var handleClassName = prefixCls + '-handle';
		      var isNoTip = step === null || tipFormatter === null;
		
		      var upper = (0, _react.cloneElement)(customHandle, { className: handleClassName,
		        noTip: isNoTip, tipTransitionName: tipTransitionName, tipFormatter: tipFormatter,
		        vertical: vertical, offset: upperOffset, value: upperBound, dragging: handle === 'upperBound' });
		
		      var lower = null;
		      if (range) {
		        lower = (0, _react.cloneElement)(customHandle, { className: handleClassName,
		          noTip: isNoTip, tipTransitionName: tipTransitionName, tipFormatter: tipFormatter,
		          vertical: vertical, offset: lowerOffset, value: lowerBound, dragging: handle === 'lowerBound' });
		      }
		
		      var sliderClassName = (0, _classnames2['default'])((_classNames = {}, _defineProperty(_classNames, prefixCls, true), _defineProperty(_classNames, prefixCls + '-disabled', disabled), _defineProperty(_classNames, className, !!className), _defineProperty(_classNames, prefixCls + '-vertical', this.props.vertical), _classNames));
		      var isIncluded = included || range;
		      return _react2['default'].createElement(
		        'div',
		        { ref: 'slider', className: sliderClassName,
		          onTouchStart: disabled ? noop : this.onTouchStart.bind(this),
		          onMouseDown: disabled ? noop : this.onMouseDown.bind(this) },
		        upper,
		        lower,
		        _react2['default'].createElement(_Track2['default'], { className: prefixCls + '-track', vertical: vertical, included: isIncluded,
		          offset: lowerOffset, length: upperOffset - lowerOffset }),
		        _react2['default'].createElement(_Steps2['default'], { prefixCls: prefixCls, vertical: vertical, marks: marks, dots: dots, step: step,
		          included: isIncluded, lowerBound: lowerBound,
		          upperBound: upperBound, max: max, min: min }),
		        _react2['default'].createElement(_Marks2['default'], { className: prefixCls + '-mark', vertical: vertical, marks: marks,
		          included: isIncluded, lowerBound: lowerBound,
		          upperBound: upperBound, max: max, min: min }),
		        children
		      );
		    }
		  }]);
		
		  return Slider;
		})(_react2['default'].Component);
		
		Slider.propTypes = {
		  min: _react2['default'].PropTypes.number,
		  max: _react2['default'].PropTypes.number,
		  step: _react2['default'].PropTypes.number,
		  defaultValue: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.number, _react2['default'].PropTypes.arrayOf(_react2['default'].PropTypes.number)]),
		  value: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.number, _react2['default'].PropTypes.arrayOf(_react2['default'].PropTypes.number)]),
		  marks: _react2['default'].PropTypes.object,
		  included: _react2['default'].PropTypes.bool,
		  className: _react2['default'].PropTypes.string,
		  prefixCls: _react2['default'].PropTypes.string,
		  disabled: _react2['default'].PropTypes.bool,
		  children: _react2['default'].PropTypes.any,
		  onBeforeChange: _react2['default'].PropTypes.func,
		  onChange: _react2['default'].PropTypes.func,
		  onAfterChange: _react2['default'].PropTypes.func,
		  handle: _react2['default'].PropTypes.element,
		  tipTransitionName: _react2['default'].PropTypes.string,
		  tipFormatter: _react2['default'].PropTypes.func,
		  dots: _react2['default'].PropTypes.bool,
		  range: _react2['default'].PropTypes.bool,
		  vertical: _react2['default'].PropTypes.bool,
		  allowCross: _react2['default'].PropTypes.bool
		};
		
		Slider.defaultProps = {
		  prefixCls: 'rc-slider',
		  className: '',
		  tipTransitionName: '',
		  min: 0,
		  max: 100,
		  step: 1,
		  marks: {},
		  handle: _react2['default'].createElement(_Handle2['default'], null),
		  onBeforeChange: noop,
		  onChange: noop,
		  onAfterChange: noop,
		  tipFormatter: function tipFormatter(value) {
		    return value;
		  },
		  included: true,
		  disabled: false,
		  dots: false,
		  range: false,
		  vertical: false,
		  allowCross: true
		};
		
		exports['default'] = Slider;
		module.exports = exports['default'];
	
	/***/ },
	/* 356 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var _warning = __webpack_require__(18);
		
		var _warning2 = _interopRequireDefault(_warning);
		
		function calcPoints(vertical, marks, dots, step, min, max) {
		  (0, _warning2['default'])(dots ? step > 0 : true, '`Slider[step]` should be a positive number in order to make Slider[dots] work.');
		  var points = Object.keys(marks).map(parseFloat);
		  if (dots) {
		    for (var i = min; i <= max; i = i + step) {
		      if (points.indexOf(i) >= 0) continue;
		      points.push(i);
		    }
		  }
		  return points;
		}
		
		var Steps = function Steps(_ref) {
		  var prefixCls = _ref.prefixCls;
		  var vertical = _ref.vertical;
		  var marks = _ref.marks;
		  var dots = _ref.dots;
		  var step = _ref.step;
		  var included = _ref.included;
		  var lowerBound = _ref.lowerBound;
		  var upperBound = _ref.upperBound;
		  var max = _ref.max;
		  var min = _ref.min;
		
		  var range = max - min;
		  var elements = calcPoints(vertical, marks, dots, step, min, max).map(function (point) {
		    var _classNames;
		
		    var offset = Math.abs(point - min) / range * 100 + '%';
		    var style = vertical ? { bottom: offset } : { left: offset };
		
		    var isActived = !included && point === upperBound || included && point <= upperBound && point >= lowerBound;
		    var pointClassName = (0, _classnames2['default'])((_classNames = {}, _defineProperty(_classNames, prefixCls + '-dot', true), _defineProperty(_classNames, prefixCls + '-dot-active', isActived), _classNames));
		
		    return _react2['default'].createElement('span', { className: pointClassName, style: style, key: point });
		  });
		
		  return _react2['default'].createElement(
		    'div',
		    { className: prefixCls + '-step' },
		    elements
		  );
		};
		
		exports['default'] = Steps;
		module.exports = exports['default'];
	
	/***/ },
	/* 357 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var Track = function Track(_ref) {
		  var className = _ref.className;
		  var included = _ref.included;
		  var vertical = _ref.vertical;
		  var offset = _ref.offset;
		  var length = _ref.length;
		
		  var style = {
		    visibility: included ? 'visible' : 'hidden'
		  };
		  if (vertical) {
		    style.bottom = offset + '%';
		    style.height = length + '%';
		  } else {
		    style.left = offset + '%';
		    style.width = length + '%';
		  }
		  return _react2['default'].createElement('div', { className: className, style: style });
		};
		
		exports['default'] = Track;
		module.exports = exports['default'];
	
	/***/ },
	/* 358 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		module.exports = __webpack_require__(355);
	
	/***/ },
	/* 359 */
	13,
	/* 360 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
		
		function Step(props) {
		  var _classNames, _classNames2;
		
		  var className = props.className;
		  var prefixCls = props.prefixCls;
		  var style = props.style;
		  var tailWidth = props.tailWidth;
		  var _props$status = props.status;
		  var status = _props$status === undefined ? 'wait' : _props$status;
		  var iconPrefix = props.iconPrefix;
		  var icon = props.icon;
		  var wrapperStyle = props.wrapperStyle;
		  var adjustMarginRight = props.adjustMarginRight;
		  var stepLast = props.stepLast;
		  var stepNumber = props.stepNumber;
		  var description = props.description;
		  var title = props.title;
		
		  var restProps = _objectWithoutProperties(props, ['className', 'prefixCls', 'style', 'tailWidth', 'status', 'iconPrefix', 'icon', 'wrapperStyle', 'adjustMarginRight', 'stepLast', 'stepNumber', 'description', 'title']);
		
		  var iconClassName = (0, _classnames2["default"])((_classNames = {}, _defineProperty(_classNames, prefixCls + '-icon', true), _defineProperty(_classNames, iconPrefix + 'icon', true), _defineProperty(_classNames, iconPrefix + 'icon-' + icon, icon), _defineProperty(_classNames, iconPrefix + 'icon-check', !icon && status === 'finish'), _defineProperty(_classNames, iconPrefix + 'icon-cross', !icon && status === 'error'), _classNames));
		  var iconNode = icon || status === 'finish' || status === 'error' ? _react2["default"].createElement('span', { className: iconClassName }) : _react2["default"].createElement(
		    'span',
		    { className: prefixCls + '-icon' },
		    stepNumber
		  );
		  var classString = (0, _classnames2["default"])((_classNames2 = {}, _defineProperty(_classNames2, prefixCls + '-item', true), _defineProperty(_classNames2, prefixCls + '-item-last', stepLast), _defineProperty(_classNames2, prefixCls + '-status-' + status, true), _defineProperty(_classNames2, prefixCls + '-custom', icon), _defineProperty(_classNames2, className, !!className), _classNames2));
		  return _react2["default"].createElement(
		    'div',
		    _extends({}, restProps, {
		      className: classString,
		      style: _extends({ width: tailWidth, marginRight: adjustMarginRight }, style)
		    }),
		    stepLast ? '' : _react2["default"].createElement(
		      'div',
		      { className: prefixCls + '-tail' },
		      _react2["default"].createElement('i', null)
		    ),
		    _react2["default"].createElement(
		      'div',
		      { className: prefixCls + '-step' },
		      _react2["default"].createElement(
		        'div',
		        {
		          className: prefixCls + '-head',
		          style: { background: wrapperStyle.background || wrapperStyle.backgroundColor }
		        },
		        _react2["default"].createElement(
		          'div',
		          { className: prefixCls + '-head-inner' },
		          iconNode
		        )
		      ),
		      _react2["default"].createElement(
		        'div',
		        { className: prefixCls + '-main' },
		        _react2["default"].createElement(
		          'div',
		          {
		            className: prefixCls + '-title',
		            style: { background: wrapperStyle.background || wrapperStyle.backgroundColor }
		          },
		          title
		        ),
		        description ? _react2["default"].createElement(
		          'div',
		          { className: prefixCls + '-description' },
		          description
		        ) : ''
		      )
		    )
		  );
		}
		
		Step.propTypes = {
		  className: _react.PropTypes.string,
		  prefixCls: _react.PropTypes.string,
		  style: _react.PropTypes.object,
		  wrapperStyle: _react.PropTypes.object,
		  tailWidth: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
		  status: _react.PropTypes.string,
		  iconPrefix: _react.PropTypes.string,
		  icon: _react.PropTypes.string,
		  adjustMarginRight: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string]),
		  stepLast: _react.PropTypes.bool,
		  stepNumber: _react.PropTypes.string,
		  description: _react.PropTypes.any,
		  title: _react.PropTypes.any
		};
		
		module.exports = Step;
	
	/***/ },
	/* 361 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _reactDom = __webpack_require__(4);
		
		var _reactDom2 = _interopRequireDefault(_reactDom);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }
		
		var Steps = function (_React$Component) {
		  _inherits(Steps, _React$Component);
		
		  function Steps(props) {
		    _classCallCheck(this, Steps);
		
		    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));
		
		    _this.culcLastStepOffsetWidth = function () {
		      var domNode = _reactDom2["default"].findDOMNode(_this);
		      if (domNode.children.length > 0) {
		        _this.culcTimeout = setTimeout(function () {
		          // +1 for fit edge bug of digit width, like 35.4px
		          var lastStepOffsetWidth = domNode.lastChild.offsetWidth + 1;
		          if (_this.state.lastStepOffsetWidth === lastStepOffsetWidth) {
		            return;
		          }
		          _this.setState({ lastStepOffsetWidth: lastStepOffsetWidth });
		        });
		      }
		    };
		
		    _this.state = {
		      lastStepOffsetWidth: 0
		    };
		    return _this;
		  }
		
		  Steps.prototype.componentDidMount = function componentDidMount() {
		    this.culcLastStepOffsetWidth();
		  };
		
		  Steps.prototype.componentDidUpdate = function componentDidUpdate() {
		    this.culcLastStepOffsetWidth();
		  };
		
		  Steps.prototype.componentWillUnmount = function componentWillUnmount() {
		    if (this.culcTimeout) {
		      clearTimeout(this.culcTimeout);
		    }
		  };
		
		  Steps.prototype.render = function render() {
		    var _classNames,
		        _this2 = this;
		
		    var props = this.props;
		    var prefixCls = props.prefixCls;
		    var _props$style = props.style;
		    var style = _props$style === undefined ? {} : _props$style;
		    var className = props.className;
		    var children = props.children;
		    var direction = props.direction;
		    var labelPlacement = props.labelPlacement;
		    var iconPrefix = props.iconPrefix;
		    var status = props.status;
		    var size = props.size;
		    var current = props.current;
		
		    var restProps = _objectWithoutProperties(props, ['prefixCls', 'style', 'className', 'children', 'direction', 'labelPlacement', 'iconPrefix', 'status', 'size', 'current']);
		
		    var lastIndex = children.length - 1;
		    var reLayouted = this.state.lastStepOffsetWidth > 0;
		    var classString = (0, _classnames2["default"])((_classNames = {}, _defineProperty(_classNames, prefixCls, true), _defineProperty(_classNames, prefixCls + '-' + size, size), _defineProperty(_classNames, prefixCls + '-' + direction, true), _defineProperty(_classNames, prefixCls + '-label-' + labelPlacement, direction === 'horizontal'), _defineProperty(_classNames, prefixCls + '-hidden', !reLayouted), _defineProperty(_classNames, className, className), _classNames));
		
		    return _react2["default"].createElement(
		      'div',
		      _extends({ className: classString, style: style }, restProps),
		      _react2["default"].Children.map(children, function (ele, idx) {
		        var tailWidth = direction === 'vertical' || idx === lastIndex || !reLayouted ? null : 100 / lastIndex + '%';
		        var adjustMarginRight = direction === 'vertical' || idx === lastIndex ? null : -(_this2.state.lastStepOffsetWidth / lastIndex + 1);
		        var np = {
		          stepNumber: (idx + 1).toString(),
		          stepLast: idx === lastIndex,
		          tailWidth: tailWidth,
		          adjustMarginRight: adjustMarginRight,
		          prefixCls: prefixCls,
		          iconPrefix: iconPrefix,
		          wrapperStyle: style
		        };
		
		        // fix tail color
		        if (status === 'error' && idx === current - 1) {
		          np.className = props.prefixCls + '-next-error';
		        }
		
		        if (!ele.props.status) {
		          if (idx === current) {
		            np.status = status;
		          } else if (idx < current) {
		            np.status = 'finish';
		          } else {
		            np.status = 'wait';
		          }
		        }
		        return _react2["default"].cloneElement(ele, np);
		      }, this)
		    );
		  };
		
		  return Steps;
		}(_react2["default"].Component);
		
		exports["default"] = Steps;
		
		
		Steps.propTypes = {
		  prefixCls: _react.PropTypes.string,
		  iconPrefix: _react.PropTypes.string,
		  direction: _react.PropTypes.string,
		  labelPlacement: _react.PropTypes.string,
		  children: _react.PropTypes.any,
		  status: _react.PropTypes.string,
		  size: _react.PropTypes.string
		};
		
		Steps.defaultProps = {
		  prefixCls: 'rc-steps',
		  iconPrefix: 'rc',
		  direction: 'horizontal',
		  labelPlacement: 'horizontal',
		  current: 0,
		  status: 'process',
		  size: ''
		};
		module.exports = exports['default'];
	
	/***/ },
	/* 362 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var Steps = __webpack_require__(361);
		Steps.Step = __webpack_require__(360);
		
		module.exports = Steps;
	
	/***/ },
	/* 363 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		var React = __webpack_require__(1);
		var classNames = __webpack_require__(2);
		
		function noop() {}
		
		var Switch = React.createClass({
		  displayName: 'Switch',
		
		  propTypes: {
		    className: React.PropTypes.string,
		    prefixCls: React.PropTypes.string,
		    disabled: React.PropTypes.bool,
		    checkedChildren: React.PropTypes.any,
		    unCheckedChildren: React.PropTypes.any,
		    onChange: React.PropTypes.func,
		    onMouseUp: React.PropTypes.func
		  },
		  getDefaultProps: function getDefaultProps() {
		    return {
		      prefixCls: 'rc-switch',
		      checkedChildren: null,
		      unCheckedChildren: null,
		      className: '',
		      defaultChecked: false,
		      onChange: noop
		    };
		  },
		  getInitialState: function getInitialState() {
		    var props = this.props;
		    var checked = false;
		    if ('checked' in props) {
		      checked = !!props.checked;
		    } else {
		      checked = !!props.defaultChecked;
		    }
		    return {
		      checked: checked
		    };
		  },
		  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
		    if ('checked' in nextProps) {
		      this.setState({
		        checked: !!nextProps.checked
		      });
		    }
		  },
		  setChecked: function setChecked(checked) {
		    if (!('checked' in this.props)) {
		      this.setState({
		        checked: checked
		      });
		    }
		    this.props.onChange(checked);
		  },
		  toggle: function toggle() {
		    var checked = !this.state.checked;
		    this.setChecked(checked);
		  },
		  handleKeyDown: function handleKeyDown(e) {
		    if (e.keyCode === 37) {
		      this.setChecked(false);
		    }
		    if (e.keyCode === 39) {
		      this.setChecked(true);
		    }
		  },
		  // Handle auto focus when click switch in Chrome
		  handleMouseUp: function handleMouseUp(e) {
		    if (this.refs.node) {
		      this.refs.node.blur();
		    }
		    if (this.props.onMouseUp) {
		      this.props.onMouseUp(e);
		    }
		  },
		  render: function render() {
		    var _classNames;
		
		    var _props = this.props;
		    var className = _props.className;
		    var prefixCls = _props.prefixCls;
		    var disabled = _props.disabled;
		    var checkedChildren = _props.checkedChildren;
		    var unCheckedChildren = _props.unCheckedChildren;
		
		    var restProps = _objectWithoutProperties(_props, ['className', 'prefixCls', 'disabled', 'checkedChildren', 'unCheckedChildren']);
		
		    var checked = this.state.checked;
		    var switchClassName = classNames((_classNames = {}, _defineProperty(_classNames, className, !!className), _defineProperty(_classNames, prefixCls, true), _defineProperty(_classNames, prefixCls + '-checked', checked), _defineProperty(_classNames, prefixCls + '-disabled', disabled), _classNames));
		    return React.createElement(
		      'span',
		      _extends({}, restProps, {
		        className: switchClassName,
		        tabIndex: '0',
		        ref: 'node',
		        onKeyDown: this.handleKeyDown,
		        onClick: disabled ? noop : this.toggle,
		        onMouseUp: this.handleMouseUp }),
		      React.createElement(
		        'span',
		        { className: prefixCls + '-inner' },
		        checked ? checkedChildren : unCheckedChildren
		      )
		    );
		  }
		});
		
		module.exports = Switch;
	
	/***/ },
	/* 364 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		module.exports = __webpack_require__(363);
	
	/***/ },
	/* 365 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _TableRow = __webpack_require__(366);
		
		var _TableRow2 = _interopRequireDefault(_TableRow);
		
		var _utils = __webpack_require__(368);
		
		var _shallowequal = __webpack_require__(35);
		
		var _shallowequal2 = _interopRequireDefault(_shallowequal);
		
		var _rcUtilLibDomAddEventListener = __webpack_require__(13);
		
		var _rcUtilLibDomAddEventListener2 = _interopRequireDefault(_rcUtilLibDomAddEventListener);
		
		var Table = _react2['default'].createClass({
		  displayName: 'Table',
		
		  propTypes: {
		    data: _react.PropTypes.array,
		    expandIconAsCell: _react.PropTypes.bool,
		    defaultExpandAllRows: _react.PropTypes.bool,
		    expandedRowKeys: _react.PropTypes.array,
		    defaultExpandedRowKeys: _react.PropTypes.array,
		    useFixedHeader: _react.PropTypes.bool,
		    columns: _react.PropTypes.array,
		    prefixCls: _react.PropTypes.string,
		    bodyStyle: _react.PropTypes.object,
		    style: _react.PropTypes.object,
		    rowKey: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.func]),
		    rowClassName: _react.PropTypes.func,
		    expandedRowClassName: _react.PropTypes.func,
		    childrenColumnName: _react.PropTypes.string,
		    onExpand: _react.PropTypes.func,
		    onExpandedRowsChange: _react.PropTypes.func,
		    indentSize: _react.PropTypes.number,
		    onRowClick: _react.PropTypes.func,
		    columnsPageRange: _react.PropTypes.array,
		    columnsPageSize: _react.PropTypes.number,
		    expandIconColumnIndex: _react.PropTypes.number,
		    showHeader: _react.PropTypes.bool,
		    footer: _react.PropTypes.func,
		    scroll: _react.PropTypes.object,
		    rowRef: _react.PropTypes.func
		  },
		
		  getDefaultProps: function getDefaultProps() {
		    return {
		      data: [],
		      useFixedHeader: false,
		      expandIconAsCell: false,
		      columns: [],
		      defaultExpandAllRows: false,
		      defaultExpandedRowKeys: [],
		      rowKey: 'key',
		      rowClassName: function rowClassName() {
		        return '';
		      },
		      expandedRowClassName: function expandedRowClassName() {
		        return '';
		      },
		      onExpand: function onExpand() {},
		      onExpandedRowsChange: function onExpandedRowsChange() {},
		      prefixCls: 'rc-table',
		      bodyStyle: {},
		      style: {},
		      childrenColumnName: 'children',
		      indentSize: 15,
		      columnsPageSize: 5,
		      expandIconColumnIndex: 0,
		      showHeader: true,
		      scroll: {},
		      rowRef: function rowRef() {
		        return null;
		      }
		    };
		  },
		
		  getInitialState: function getInitialState() {
		    var props = this.props;
		    var expandedRowKeys = [];
		    var rows = [].concat(_toConsumableArray(props.data));
		    if (props.defaultExpandAllRows) {
		      for (var i = 0; i < rows.length; i++) {
		        var row = rows[i];
		        expandedRowKeys.push(this.getRowKey(row));
		        rows = rows.concat(row[props.childrenColumnName] || []);
		      }
		    } else {
		      expandedRowKeys = props.expandedRowKeys || props.defaultExpandedRowKeys;
		    }
		    return {
		      expandedRowKeys: expandedRowKeys,
		      data: props.data,
		      currentColumnsPage: 0,
		      currentHoverKey: null,
		      scrollPosition: 'left',
		      fixedColumnsHeadRowsHeight: [],
		      fixedColumnsBodyRowsHeight: []
		    };
		  },
		
		  componentDidMount: function componentDidMount() {
		    if (this.refs.headTable) {
		      this.refs.headTable.scrollLeft = 0;
		    }
		    if (this.refs.bodyTable) {
		      this.refs.bodyTable.scrollLeft = 0;
		    }
		    this.syncFixedTableRowHeight();
		    var isAnyColumnsFixed = this.isAnyColumnsFixed();
		    if (isAnyColumnsFixed) {
		      this.resizeEvent = (0, _rcUtilLibDomAddEventListener2['default'])(window, 'resize', (0, _utils.debounce)(this.syncFixedTableRowHeight, 150));
		    }
		  },
		
		  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
		    if ('data' in nextProps) {
		      this.setState({
		        data: nextProps.data
		      });
		    }
		    if ('expandedRowKeys' in nextProps) {
		      this.setState({
		        expandedRowKeys: nextProps.expandedRowKeys
		      });
		    }
		    if (nextProps.columns !== this.props.columns) {
		      delete this.isAnyColumnsFixedCache;
		      delete this.isAnyColumnsLeftFixedCache;
		      delete this.isAnyColumnsRightFixedCache;
		    }
		  },
		
		  componentDidUpdate: function componentDidUpdate() {
		    this.syncFixedTableRowHeight();
		  },
		
		  componentWillUnmount: function componentWillUnmount() {
		    clearTimeout(this.timer);
		    if (this.resizeEvent) {
		      this.resizeEvent.remove();
		    }
		  },
		
		  onExpandedRowsChange: function onExpandedRowsChange(expandedRowKeys) {
		    if (!this.props.expandedRowKeys) {
		      this.setState({
		        expandedRowKeys: expandedRowKeys
		      });
		    }
		    this.props.onExpandedRowsChange(expandedRowKeys);
		  },
		
		  onExpanded: function onExpanded(expanded, record) {
		    var info = this.findExpandedRow(record);
		    if (typeof info !== 'undefined' && !expanded) {
		      this.onRowDestroy(record);
		    } else if (!info && expanded) {
		      var expandedRows = this.getExpandedRows().concat();
		      expandedRows.push(this.getRowKey(record));
		      this.onExpandedRowsChange(expandedRows);
		    }
		    this.props.onExpand(expanded, record);
		  },
		
		  onRowDestroy: function onRowDestroy(record) {
		    var expandedRows = this.getExpandedRows().concat();
		    var rowKey = this.getRowKey(record);
		    var index = -1;
		    expandedRows.forEach(function (r, i) {
		      if (r === rowKey) {
		        index = i;
		      }
		    });
		    if (index !== -1) {
		      expandedRows.splice(index, 1);
		    }
		    this.onExpandedRowsChange(expandedRows);
		  },
		
		  getRowKey: function getRowKey(record, index) {
		    var rowKey = this.props.rowKey;
		    if (typeof rowKey === 'function') {
		      return rowKey(record, index);
		    }
		    return record[rowKey] || index;
		  },
		
		  getExpandedRows: function getExpandedRows() {
		    return this.props.expandedRowKeys || this.state.expandedRowKeys;
		  },
		
		  getHeader: function getHeader(columns, fixed) {
		    var _props = this.props;
		    var showHeader = _props.showHeader;
		    var expandIconAsCell = _props.expandIconAsCell;
		    var prefixCls = _props.prefixCls;
		
		    var ths = [];
		    if (expandIconAsCell && fixed !== 'right') {
		      ths.push({
		        key: 'rc-table-expandIconAsCell',
		        className: prefixCls + '-expand-icon-th',
		        title: ''
		      });
		    }
		    ths = ths.concat(columns || this.getCurrentColumns()).map(function (c) {
		      if (c.colSpan !== 0) {
		        return _react2['default'].createElement(
		          'th',
		          { key: c.key, colSpan: c.colSpan, className: c.className || '' },
		          c.title
		        );
		      }
		    });
		    var fixedColumnsHeadRowsHeight = this.state.fixedColumnsHeadRowsHeight;
		
		    var trStyle = fixedColumnsHeadRowsHeight[0] && columns ? {
		      height: fixedColumnsHeadRowsHeight[0]
		    } : null;
		    return showHeader ? _react2['default'].createElement(
		      'thead',
		      { className: prefixCls + '-thead' },
		      _react2['default'].createElement(
		        'tr',
		        { style: trStyle },
		        ths
		      )
		    ) : null;
		  },
		
		  getExpandedRow: function getExpandedRow(key, content, visible, className, fixed) {
		    var prefixCls = this.props.prefixCls;
		    return _react2['default'].createElement(
		      'tr',
		      {
		        key: key + '-extra-row',
		        style: { display: visible ? '' : 'none' },
		        className: prefixCls + '-expanded-row ' + className },
		      this.props.expandIconAsCell && fixed !== 'right' ? _react2['default'].createElement('td', { key: 'rc-table-expand-icon-placeholder' }) : null,
		      _react2['default'].createElement(
		        'td',
		        { colSpan: this.props.columns.length },
		        fixed !== 'right' ? content : '&nbsp;'
		      )
		    );
		  },
		
		  getRowsByData: function getRowsByData(data, visible, indent, columns, fixed) {
		    var props = this.props;
		    var childrenColumnName = props.childrenColumnName;
		    var expandedRowRender = props.expandedRowRender;
		    var fixedColumnsBodyRowsHeight = this.state.fixedColumnsBodyRowsHeight;
		
		    var rst = [];
		    var rowClassName = props.rowClassName;
		    var rowRef = props.rowRef;
		    var expandedRowClassName = props.expandedRowClassName;
		    var needIndentSpaced = props.data.some(function (record) {
		      return record[childrenColumnName];
		    });
		    var onRowClick = props.onRowClick;
		    var isAnyColumnsFixed = this.isAnyColumnsFixed();
		
		    var expandIconAsCell = fixed !== 'right' ? props.expandIconAsCell : false;
		    var expandIconColumnIndex = fixed !== 'right' ? props.expandIconColumnIndex : -1;
		
		    for (var i = 0; i < data.length; i++) {
		      var record = data[i];
		      var key = this.getRowKey(record, i);
		      var childrenColumn = record[childrenColumnName];
		      var isRowExpanded = this.isRowExpanded(record);
		      var expandedRowContent = undefined;
		      if (expandedRowRender && isRowExpanded) {
		        expandedRowContent = expandedRowRender(record, i);
		      }
		      var className = rowClassName(record, i);
		      if (this.state.currentHoverKey === key) {
		        className += ' ' + props.prefixCls + '-row-hover';
		      }
		
		      var onHoverProps = {};
		      if (isAnyColumnsFixed) {
		        onHoverProps.onHover = this.handleRowHover;
		      }
		
		      var style = fixed && fixedColumnsBodyRowsHeight[i] ? {
		        height: fixedColumnsBodyRowsHeight[i]
		      } : {};
		
		      rst.push(_react2['default'].createElement(_TableRow2['default'], _extends({
		        indent: indent,
		        indentSize: props.indentSize,
		        needIndentSpaced: needIndentSpaced,
		        className: className,
		        record: record,
		        expandIconAsCell: expandIconAsCell,
		        onDestroy: this.onRowDestroy,
		        index: i,
		        visible: visible,
		        onExpand: this.onExpanded,
		        expandable: childrenColumn || expandedRowRender,
		        expanded: isRowExpanded,
		        prefixCls: props.prefixCls + '-row',
		        childrenColumnName: childrenColumnName,
		        columns: columns || this.getCurrentColumns(),
		        expandIconColumnIndex: expandIconColumnIndex,
		        onRowClick: onRowClick,
		        style: style
		      }, onHoverProps, {
		        key: key,
		        hoverKey: key,
		        ref: rowRef(record, i)
		      })));
		
		      var subVisible = visible && isRowExpanded;
		
		      if (expandedRowContent && isRowExpanded) {
		        rst.push(this.getExpandedRow(key, expandedRowContent, subVisible, expandedRowClassName(record, i), fixed));
		      }
		      if (childrenColumn) {
		        rst = rst.concat(this.getRowsByData(childrenColumn, subVisible, indent + 1, columns, fixed));
		      }
		    }
		    return rst;
		  },
		
		  getRows: function getRows(columns, fixed) {
		    return this.getRowsByData(this.state.data, true, 0, columns, fixed);
		  },
		
		  getColGroup: function getColGroup(columns, fixed) {
		    var cols = [];
		    if (this.props.expandIconAsCell && fixed !== 'right') {
		      cols.push(_react2['default'].createElement('col', { className: this.props.prefixCls + '-expand-icon-col', key: 'rc-table-expand-icon-col' }));
		    }
		    cols = cols.concat((columns || this.props.columns).map(function (c) {
		      return _react2['default'].createElement('col', { key: c.key, style: { width: c.width, minWidth: c.width } });
		    }));
		    return _react2['default'].createElement(
		      'colgroup',
		      null,
		      cols
		    );
		  },
		
		  getCurrentColumns: function getCurrentColumns() {
		    var _this = this;
		
		    var _props2 = this.props;
		    var columns = _props2.columns;
		    var columnsPageRange = _props2.columnsPageRange;
		    var columnsPageSize = _props2.columnsPageSize;
		    var prefixCls = _props2.prefixCls;
		    var currentColumnsPage = this.state.currentColumnsPage;
		
		    if (!columnsPageRange || columnsPageRange[0] > columnsPageRange[1]) {
		      return columns;
		    }
		    return columns.map(function (column, i) {
		      var newColumn = _extends({}, column);
		      if (i >= columnsPageRange[0] && i <= columnsPageRange[1]) {
		        var pageIndexStart = columnsPageRange[0] + currentColumnsPage * columnsPageSize;
		        var pageIndexEnd = columnsPageRange[0] + (currentColumnsPage + 1) * columnsPageSize - 1;
		        if (pageIndexEnd > columnsPageRange[1]) {
		          pageIndexEnd = columnsPageRange[1];
		        }
		        if (i < pageIndexStart || i > pageIndexEnd) {
		          newColumn.className = newColumn.className || '';
		          newColumn.className += ' ' + prefixCls + '-column-hidden';
		        }
		        newColumn = _this.wrapPageColumn(newColumn, i === pageIndexStart, i === pageIndexEnd);
		      }
		      return newColumn;
		    });
		  },
		
		  getLeftFixedTable: function getLeftFixedTable() {
		    var columns = this.props.columns;
		
		    var fixedColumns = columns.filter(function (column) {
		      return column.fixed === 'left' || column.fixed === true;
		    });
		    return this.getTable({
		      columns: fixedColumns,
		      fixed: 'left'
		    });
		  },
		
		  getRightFixedTable: function getRightFixedTable() {
		    var columns = this.props.columns;
		
		    var fixedColumns = columns.filter(function (column) {
		      return column.fixed === 'right';
		    });
		    return this.getTable({
		      columns: fixedColumns,
		      fixed: 'right'
		    });
		  },
		
		  getTable: function getTable() {
		    var _this2 = this;
		
		    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
		    var columns = options.columns;
		    var fixed = options.fixed;
		    var _props3 = this.props;
		    var prefixCls = _props3.prefixCls;
		    var _props3$scroll = _props3.scroll;
		    var scroll = _props3$scroll === undefined ? {} : _props3$scroll;
		    var useFixedHeader = this.props.useFixedHeader;
		
		    var bodyStyle = _extends({}, this.props.bodyStyle);
		    var headStyle = {};
		
		    var tableClassName = '';
		    if (scroll.x || columns) {
		      tableClassName = prefixCls + '-fixed';
		      bodyStyle.overflowX = bodyStyle.overflowX || 'auto';
		    }
		
		    if (scroll.y) {
		      bodyStyle.height = bodyStyle.height || scroll.y;
		      bodyStyle.overflowY = bodyStyle.overflowY || 'scroll';
		      useFixedHeader = true;
		
		      // Add negative margin bottom for scroll bar overflow bug
		      var scrollbarWidth = (0, _utils.measureScrollbar)();
		      if (scrollbarWidth > 0) {
		        (fixed ? bodyStyle : headStyle).marginBottom = '-' + scrollbarWidth + 'px';
		        (fixed ? bodyStyle : headStyle).paddingBottom = '0px';
		      }
		    }
		
		    var renderTable = function renderTable() {
		      var hasHead = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];
		      var hasBody = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];
		
		      var tableStyle = {};
		      if (!columns && scroll.x) {
		        // not set width, then use content fixed width
		        if (scroll.x === true) {
		          tableStyle.tableLayout = 'fixed';
		        } else {
		          tableStyle.width = scroll.x;
		        }
		      }
		      return _react2['default'].createElement(
		        'table',
		        { className: tableClassName, style: tableStyle },
		        _this2.getColGroup(columns, fixed),
		        hasHead ? _this2.getHeader(columns, fixed) : null,
		        hasBody ? _react2['default'].createElement(
		          'tbody',
		          { className: prefixCls + '-tbody' },
		          _this2.getRows(columns, fixed)
		        ) : null
		      );
		    };
		
		    var headTable = undefined;
		    if (useFixedHeader) {
		      headTable = _react2['default'].createElement(
		        'div',
		        {
		          className: prefixCls + '-header',
		          ref: columns ? null : 'headTable',
		          style: headStyle,
		          onMouseOver: this.detectScrollTarget,
		          onTouchStart: this.detectScrollTarget,
		          onScroll: this.handleBodyScroll },
		        renderTable(true, false)
		      );
		    }
		
		    var BodyTable = _react2['default'].createElement(
		      'div',
		      {
		        className: prefixCls + '-body',
		        style: bodyStyle,
		        ref: 'bodyTable',
		        onMouseOver: this.detectScrollTarget,
		        onTouchStart: this.detectScrollTarget,
		        onScroll: this.handleBodyScroll },
		      renderTable(!useFixedHeader)
		    );
		
		    if (columns && columns.length) {
		      var refName = undefined;
		      if (columns[0].fixed === 'left' || columns[0].fixed === true) {
		        refName = 'fixedColumnsBodyLeft';
		      } else if (columns[0].fixed === 'right') {
		        refName = 'fixedColumnsBodyRight';
		      }
		      delete bodyStyle.overflowX;
		      delete bodyStyle.overflowY;
		      BodyTable = _react2['default'].createElement(
		        'div',
		        {
		          className: prefixCls + '-body-outer',
		          style: _extends({}, bodyStyle) },
		        _react2['default'].createElement(
		          'div',
		          {
		            className: prefixCls + '-body-inner',
		            ref: refName,
		            onMouseOver: this.detectScrollTarget,
		            onTouchStart: this.detectScrollTarget,
		            onScroll: this.handleBodyScroll },
		          renderTable(!useFixedHeader)
		        )
		      );
		    }
		
		    return _react2['default'].createElement(
		      'span',
		      null,
		      headTable,
		      BodyTable
		    );
		  },
		
		  getFooter: function getFooter() {
		    var _props4 = this.props;
		    var footer = _props4.footer;
		    var prefixCls = _props4.prefixCls;
		
		    return footer ? _react2['default'].createElement(
		      'div',
		      { className: prefixCls + '-footer' },
		      footer(this.state.data)
		    ) : null;
		  },
		
		  getMaxColumnsPage: function getMaxColumnsPage() {
		    var _props5 = this.props;
		    var columnsPageRange = _props5.columnsPageRange;
		    var columnsPageSize = _props5.columnsPageSize;
		
		    return Math.ceil((columnsPageRange[1] - columnsPageRange[0] + 1) / columnsPageSize) - 1;
		  },
		
		  goToColumnsPage: function goToColumnsPage(currentColumnsPage) {
		    var maxColumnsPage = this.getMaxColumnsPage();
		    var page = currentColumnsPage;
		    if (page < 0) {
		      page = 0;
		    }
		    if (page > maxColumnsPage) {
		      page = maxColumnsPage;
		    }
		    this.setState({
		      currentColumnsPage: page
		    });
		  },
		
		  syncFixedTableRowHeight: function syncFixedTableRowHeight() {
		    var _this3 = this;
		
		    var prefixCls = this.props.prefixCls;
		
		    var headRows = this.refs.headTable ? this.refs.headTable.querySelectorAll('tr') : [];
		    var bodyRows = this.refs.bodyTable.querySelectorAll('.' + prefixCls + '-row') || [];
		    var fixedColumnsHeadRowsHeight = [].map.call(headRows, function (row) {
		      return row.getBoundingClientRect().height || 'auto';
		    });
		    var fixedColumnsBodyRowsHeight = [].map.call(bodyRows, function (row) {
		      return row.getBoundingClientRect().height || 'auto';
		    });
		    if ((0, _shallowequal2['default'])(this.state.fixedColumnsHeadRowsHeight, fixedColumnsHeadRowsHeight) && (0, _shallowequal2['default'])(this.state.fixedColumnsBodyRowsHeight, fixedColumnsBodyRowsHeight)) {
		      return;
		    }
		    this.timer = setTimeout(function () {
		      _this3.setState({
		        fixedColumnsHeadRowsHeight: fixedColumnsHeadRowsHeight,
		        fixedColumnsBodyRowsHeight: fixedColumnsBodyRowsHeight
		      });
		    });
		  },
		
		  prevColumnsPage: function prevColumnsPage() {
		    this.goToColumnsPage(this.state.currentColumnsPage - 1);
		  },
		
		  nextColumnsPage: function nextColumnsPage() {
		    this.goToColumnsPage(this.state.currentColumnsPage + 1);
		  },
		
		  wrapPageColumn: function wrapPageColumn(column, hasPrev, hasNext) {
		    var prefixCls = this.props.prefixCls;
		    var currentColumnsPage = this.state.currentColumnsPage;
		
		    var maxColumnsPage = this.getMaxColumnsPage();
		    var prevHandlerCls = prefixCls + '-prev-columns-page';
		    if (currentColumnsPage === 0) {
		      prevHandlerCls += ' ' + prefixCls + '-prev-columns-page-disabled';
		    }
		    var prevHandler = _react2['default'].createElement('span', { className: prevHandlerCls, onClick: this.prevColumnsPage });
		    var nextHandlerCls = prefixCls + '-next-columns-page';
		    if (currentColumnsPage === maxColumnsPage) {
		      nextHandlerCls += ' ' + prefixCls + '-next-columns-page-disabled';
		    }
		    var nextHandler = _react2['default'].createElement('span', { className: nextHandlerCls, onClick: this.nextColumnsPage });
		    if (hasPrev) {
		      column.title = _react2['default'].createElement(
		        'span',
		        null,
		        prevHandler,
		        column.title
		      );
		      column.className = (column.className || '') + (' ' + prefixCls + '-column-has-prev');
		    }
		    if (hasNext) {
		      column.title = _react2['default'].createElement(
		        'span',
		        null,
		        column.title,
		        nextHandler
		      );
		      column.className = (column.className || '') + (' ' + prefixCls + '-column-has-next');
		    }
		    return column;
		  },
		
		  findExpandedRow: function findExpandedRow(record) {
		    var _this4 = this;
		
		    var rows = this.getExpandedRows().filter(function (i) {
		      return i === _this4.getRowKey(record);
		    });
		    return rows[0];
		  },
		
		  isRowExpanded: function isRowExpanded(record) {
		    return typeof this.findExpandedRow(record) !== 'undefined';
		  },
		
		  detectScrollTarget: function detectScrollTarget(e) {
		    if (this.scrollTarget !== e.currentTarget) {
		      this.scrollTarget = e.currentTarget;
		    }
		  },
		
		  isAnyColumnsFixed: function isAnyColumnsFixed() {
		    if ('isAnyColumnsFixedCache' in this) {
		      return this.isAnyColumnsFixedCache;
		    }
		    this.isAnyColumnsFixedCache = this.getCurrentColumns().some(function (column) {
		      return !!column.fixed;
		    });
		    return this.isAnyColumnsFixedCache;
		  },
		
		  isAnyColumnsLeftFixed: function isAnyColumnsLeftFixed() {
		    if ('isAnyColumnsLeftFixedCache' in this) {
		      return this.isAnyColumnsLeftFixedCache;
		    }
		    this.isAnyColumnsLeftFixedCache = this.getCurrentColumns().some(function (column) {
		      return column.fixed === 'left' || column.fixed === true;
		    });
		    return this.isAnyColumnsLeftFixedCache;
		  },
		
		  isAnyColumnsRightFixed: function isAnyColumnsRightFixed() {
		    if ('isAnyColumnsRightFixedCache' in this) {
		      return this.isAnyColumnsRightFixedCache;
		    }
		    this.isAnyColumnsRightFixedCache = this.getCurrentColumns().some(function (column) {
		      return column.fixed === 'right';
		    });
		    return this.isAnyColumnsRightFixedCache;
		  },
		
		  handleBodyScroll: function handleBodyScroll(e) {
		    // Prevent scrollTop setter trigger onScroll event
		    // http://stackoverflow.com/q/1386696
		    if (e.target !== this.scrollTarget) {
		      return;
		    }
		    var _props$scroll = this.props.scroll;
		    var scroll = _props$scroll === undefined ? {} : _props$scroll;
		    var _refs = this.refs;
		    var headTable = _refs.headTable;
		    var bodyTable = _refs.bodyTable;
		    var fixedColumnsBodyLeft = _refs.fixedColumnsBodyLeft;
		    var fixedColumnsBodyRight = _refs.fixedColumnsBodyRight;
		
		    if (scroll.x) {
		      if (e.target === bodyTable && headTable) {
		        headTable.scrollLeft = e.target.scrollLeft;
		      } else if (e.target === headTable && bodyTable) {
		        bodyTable.scrollLeft = e.target.scrollLeft;
		      }
		      if (e.target.scrollLeft === 0) {
		        this.setState({ scrollPosition: 'left' });
		      } else if (e.target.scrollLeft + 1 >= e.target.children[0].getBoundingClientRect().width - e.target.getBoundingClientRect().width) {
		        this.setState({ scrollPosition: 'right' });
		      } else if (this.state.scrollPosition !== 'middle') {
		        this.setState({ scrollPosition: 'middle' });
		      }
		    }
		    if (scroll.y) {
		      if (fixedColumnsBodyLeft && e.target !== fixedColumnsBodyLeft) {
		        fixedColumnsBodyLeft.scrollTop = e.target.scrollTop;
		      }
		      if (fixedColumnsBodyRight && e.target !== fixedColumnsBodyRight) {
		        fixedColumnsBodyRight.scrollTop = e.target.scrollTop;
		      }
		      if (bodyTable && e.target !== bodyTable) {
		        bodyTable.scrollTop = e.target.scrollTop;
		      }
		    }
		  },
		
		  handleRowHover: function handleRowHover(isHover, key) {
		    if (isHover) {
		      this.setState({
		        currentHoverKey: key
		      });
		    } else {
		      this.setState({
		        currentHoverKey: null
		      });
		    }
		  },
		
		  render: function render() {
		    var props = this.props;
		    var prefixCls = props.prefixCls;
		
		    var className = props.prefixCls;
		    if (props.className) {
		      className += ' ' + props.className;
		    }
		    if (props.columnsPageRange) {
		      className += ' ' + prefixCls + '-columns-paging';
		    }
		    if (props.useFixedHeader || props.scroll && props.scroll.y) {
		      className += ' ' + prefixCls + '-fixed-header';
		    }
		    className += ' ' + prefixCls + '-scroll-position-' + this.state.scrollPosition;
		
		    var isTableScroll = this.isAnyColumnsFixed() || props.scroll.x || props.scroll.y;
		
		    return _react2['default'].createElement(
		      'div',
		      { className: className, style: props.style },
		      this.isAnyColumnsLeftFixed() && _react2['default'].createElement(
		        'div',
		        { className: prefixCls + '-fixed-left' },
		        this.getLeftFixedTable()
		      ),
		      _react2['default'].createElement(
		        'div',
		        { className: isTableScroll ? prefixCls + '-scroll' : '' },
		        this.getTable(),
		        this.getFooter()
		      ),
		      this.isAnyColumnsRightFixed() && _react2['default'].createElement(
		        'div',
		        { className: prefixCls + '-fixed-right' },
		        this.getRightFixedTable()
		      )
		    );
		  }
		});
		
		exports['default'] = Table;
		module.exports = exports['default'];
	
	/***/ },
	/* 366 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _objectPath = __webpack_require__(282);
		
		var _objectPath2 = _interopRequireDefault(_objectPath);
		
		var TableRow = _react2['default'].createClass({
		  displayName: 'TableRow',
		
		  propTypes: {
		    onDestroy: _react.PropTypes.func,
		    onRowClick: _react.PropTypes.func,
		    record: _react.PropTypes.object,
		    prefixCls: _react.PropTypes.string,
		    expandIconColumnIndex: _react.PropTypes.number,
		    onHover: _react.PropTypes.func
		  },
		
		  getDefaultProps: function getDefaultProps() {
		    return {
		      onRowClick: function onRowClick() {},
		      onDestroy: function onDestroy() {},
		      expandIconColumnIndex: 0,
		      onHover: function onHover() {}
		    };
		  },
		
		  componentWillUnmount: function componentWillUnmount() {
		    this.props.onDestroy(this.props.record);
		  },
		
		  isInvalidRenderCellText: function isInvalidRenderCellText(text) {
		    return text && !_react2['default'].isValidElement(text) && Object.prototype.toString.call(text) === '[object Object]';
		  },
		
		  render: function render() {
		    var props = this.props;
		    var prefixCls = props.prefixCls;
		    var columns = props.columns;
		    var record = props.record;
		    var style = props.style;
		    var visible = props.visible;
		    var index = props.index;
		    var hoverKey = props.hoverKey;
		    var cells = [];
		    var expanded = props.expanded;
		    var expandable = props.expandable;
		    var expandIconAsCell = props.expandIconAsCell;
		    var indent = props.indent;
		    var indentSize = props.indentSize;
		    var needIndentSpaced = props.needIndentSpaced;
		    var onRowClick = props.onRowClick;
		    var expandIconColumnIndex = props.expandIconColumnIndex;
		
		    for (var i = 0; i < columns.length; i++) {
		      var col = columns[i];
		      var colClassName = col.className || '';
		      var render = col.render;
		      var text = _objectPath2['default'].get(record, col.dataIndex);
		
		      var expandIcon = undefined;
		      var tdProps = undefined;
		      var colSpan = undefined;
		      var rowSpan = undefined;
		      var notRender = false;
		
		      if (expandable) {
		        expandIcon = _react2['default'].createElement('span', { className: prefixCls + '-expand-icon ' + prefixCls + '-' + (expanded ? 'expanded' : 'collapsed'),
		          onClick: props.onExpand.bind(null, !expanded, record) });
		      } else if (needIndentSpaced) {
		        expandIcon = _react2['default'].createElement('span', { className: prefixCls + '-expand-icon ' + prefixCls + '-spaced' });
		      }
		
		      var isColumnHaveExpandIcon = expandIconAsCell ? false : i === expandIconColumnIndex;
		
		      if (expandIconAsCell && i === 0) {
		        cells.push(_react2['default'].createElement(
		          'td',
		          { className: prefixCls + '-expand-icon-cell',
		            key: 'rc-table-expand-icon-cell' },
		          expandIcon
		        ));
		      }
		
		      if (render) {
		        text = render(text, record, index);
		        if (this.isInvalidRenderCellText(text)) {
		          tdProps = text.props || {};
		          rowSpan = tdProps.rowSpan;
		          colSpan = tdProps.colSpan;
		          text = text.children;
		        }
		      }
		
		      // Fix https://github.com/ant-design/ant-design/issues/1202
		      if (this.isInvalidRenderCellText(text)) {
		        text = null;
		      }
		
		      if (rowSpan === 0 || colSpan === 0) {
		        notRender = true;
		      }
		
		      var indentText = _react2['default'].createElement('span', { style: { paddingLeft: indentSize * indent + 'px' },
		        className: prefixCls + '-indent indent-level-' + indent });
		
		      if (!notRender) {
		        cells.push(_react2['default'].createElement(
		          'td',
		          { key: col.key,
		            colSpan: colSpan,
		            rowSpan: rowSpan,
		            className: colClassName },
		          isColumnHaveExpandIcon ? indentText : null,
		          isColumnHaveExpandIcon ? expandIcon : null,
		          text
		        ));
		      }
		    }
		
		    return _react2['default'].createElement(
		      'tr',
		      { onClick: onRowClick.bind(null, record, index),
		        onMouseEnter: props.onHover.bind(null, true, hoverKey),
		        onMouseLeave: props.onHover.bind(null, false, hoverKey),
		        className: prefixCls + ' ' + props.className + ' ' + prefixCls + '-level-' + indent,
		        style: visible ? style : _extends({}, style, { display: 'none' }) },
		      cells
		    );
		  }
		});
		
		exports['default'] = TableRow;
		module.exports = exports['default'];
	
	/***/ },
	/* 367 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		module.exports = __webpack_require__(365);
	
	/***/ },
	/* 368 */
	/***/ function(module, exports) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		exports.measureScrollbar = measureScrollbar;
		exports.debounce = debounce;
		var scrollbarWidth = undefined;
		
		// Measure scrollbar width for padding body during modal show/hide
		var scrollbarMeasure = {
		  position: 'absolute',
		  top: '-9999px',
		  width: '50px',
		  height: '50px',
		  overflow: 'scroll'
		};
		
		function measureScrollbar() {
		  if (scrollbarWidth) {
		    return scrollbarWidth;
		  }
		  var scrollDiv = document.createElement('div');
		  for (var scrollProp in scrollbarMeasure) {
		    if (scrollbarMeasure.hasOwnProperty(scrollProp)) {
		      scrollDiv.style[scrollProp] = scrollbarMeasure[scrollProp];
		    }
		  }
		  document.body.appendChild(scrollDiv);
		  var width = scrollDiv.offsetWidth - scrollDiv.clientWidth;
		  document.body.removeChild(scrollDiv);
		  scrollbarWidth = width;
		  return scrollbarWidth;
		}
		
		function debounce(func, wait, immediate) {
		  var _this = this,
		      _arguments = arguments;
		
		  var timeout = undefined;
		  return function () {
		    var context = _this;
		    var args = _arguments;
		    var later = function later() {
		      timeout = null;
		      if (!immediate) {
		        func.apply(context, args);
		      }
		    };
		    var callNow = immediate && !timeout;
		    clearTimeout(timeout);
		    timeout = setTimeout(later, wait);
		    if (callNow) {
		      func.apply(context, args);
		    }
		  };
		}
	
	/***/ },
	/* 369 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _utils = __webpack_require__(114);
		
		function _componentDidUpdate(component) {
		  var refs = component.refs;
		  var containerNode = refs.nav;
		  var containerOffset = (0, _utils.offset)(containerNode);
		  var inkBarNode = refs.inkBar;
		  var activeTab = refs.activeTab;
		  var tabPosition = component.props.tabPosition;
		  if (activeTab) {
		    var tabNode = activeTab;
		    var tabOffset = (0, _utils.offset)(tabNode);
		    var transformPropertyName = (0, _utils.getTransformPropertyName)();
		    if (tabPosition === 'top' || tabPosition === 'bottom') {
		      var left = tabOffset.left - containerOffset.left;
		      // use 3d gpu to optimize render
		      if (transformPropertyName) {
		        inkBarNode.style[transformPropertyName] = 'translate3d(' + left + 'px,0,0)';
		        inkBarNode.style.width = tabNode.offsetWidth + 'px';
		        inkBarNode.style.height = '';
		      } else {
		        inkBarNode.style.left = left + 'px';
		        inkBarNode.style.top = '';
		        inkBarNode.style.bottom = '';
		        inkBarNode.style.right = containerNode.offsetWidth - left - tabNode.offsetWidth + 'px';
		      }
		    } else {
		      var top = tabOffset.top - containerOffset.top;
		      if (transformPropertyName) {
		        inkBarNode.style[transformPropertyName] = 'translate3d(0,' + top + 'px,0)';
		        inkBarNode.style.height = tabNode.offsetHeight + 'px';
		        inkBarNode.style.width = '';
		      } else {
		        inkBarNode.style.left = '';
		        inkBarNode.style.right = '';
		        inkBarNode.style.top = top + 'px';
		        inkBarNode.style.bottom = containerNode.offsetHeight - top - tabNode.offsetHeight + 'px';
		      }
		    }
		  }
		  inkBarNode.style.display = activeTab ? 'block' : 'none';
		}
		
		exports["default"] = {
		  componentDidUpdate: function componentDidUpdate() {
		    _componentDidUpdate(this);
		  },
		  componentDidMount: function componentDidMount() {
		    _componentDidUpdate(this);
		  }
		};
		module.exports = exports['default'];
	
	/***/ },
	/* 370 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports["default"] = {
		  /**
		   * LEFT
		   */
		  LEFT: 37, // also NUM_WEST
		  /**
		   * UP
		   */
		  UP: 38, // also NUM_NORTH
		  /**
		   * RIGHT
		   */
		  RIGHT: 39, // also NUM_EAST
		  /**
		   * DOWN
		   */
		  DOWN: 40 };
		module.exports = exports['default'];
	
	/***/ },
	/* 371 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _classnames3 = __webpack_require__(2);
		
		var _classnames4 = _interopRequireDefault(_classnames3);
		
		var _InkBarMixin = __webpack_require__(369);
		
		var _InkBarMixin2 = _interopRequireDefault(_InkBarMixin);
		
		var _utils = __webpack_require__(114);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		var tabBarExtraContentStyle = {
		  "float": 'right'
		};
		
		function noop() {}
		
		var Nav = _react2["default"].createClass({
		  displayName: 'Nav',
		
		  propTypes: {
		    tabPosition: _react.PropTypes.string,
		    tabBarExtraContent: _react.PropTypes.any,
		    onTabClick: _react.PropTypes.func,
		    onKeyDown: _react.PropTypes.func
		  },
		
		  mixins: [_InkBarMixin2["default"]],
		
		  getInitialState: function getInitialState() {
		    return {
		      next: false,
		      offset: 0,
		      prev: false
		    };
		  },
		  componentDidMount: function componentDidMount() {
		    this.componentDidUpdate();
		  },
		  componentDidUpdate: function componentDidUpdate(prevProps) {
		    var props = this.props;
		    if (prevProps && prevProps.tabPosition !== props.tabPosition) {
		      this.setOffset(0);
		      return;
		    }
		    var navNode = this.refs.nav;
		    var navNodeWH = this.getOffsetWH(navNode);
		    var navWrapNode = this.refs.navWrap;
		    var navWrapNodeWH = this.getOffsetWH(navWrapNode);
		    var state = this.state;
		    var offset = state.offset;
		    var minOffset = navWrapNodeWH - navNodeWH;
		    var _state = this.state;
		    var next = _state.next;
		    var prev = _state.prev;
		
		    if (minOffset >= 0) {
		      next = false;
		      this.setOffset(0);
		      offset = 0;
		    } else if (minOffset < offset) {
		      next = true;
		    } else {
		      next = false;
		      this.setOffset(minOffset);
		      offset = minOffset;
		    }
		
		    if (offset < 0) {
		      prev = true;
		    } else {
		      prev = false;
		    }
		
		    this.setNext(next);
		    this.setPrev(prev);
		
		    var nextPrev = {
		      next: next,
		      prev: prev
		    };
		    // wait next,prev show hide
		    if (this.isNextPrevShown(state) !== this.isNextPrevShown(nextPrev)) {
		      this.setNextPrev({}, this.scrollToActiveTab);
		    } else {
		      // can not use props.activeKey
		      if (!prevProps || props.activeKey !== prevProps.activeKey) {
		        this.scrollToActiveTab();
		      }
		    }
		  },
		  onTabClick: function onTabClick(key) {
		    this.props.onTabClick(key);
		  },
		
		
		  // work around eslint warning
		  setNextPrev: function setNextPrev(nextPrev, callback) {
		    this.setState(nextPrev, callback);
		  },
		  getTabs: function getTabs() {
		    var _this = this;
		
		    var props = this.props;
		    var children = props.panels;
		    var activeKey = props.activeKey;
		    var rst = [];
		    var prefixCls = props.prefixCls;
		
		    _react2["default"].Children.forEach(children, function (child) {
		      var key = child.key;
		      var cls = activeKey === key ? prefixCls + '-tab-active' : '';
		      cls += ' ' + prefixCls + '-tab';
		      var events = {};
		      if (child.props.disabled) {
		        cls += ' ' + prefixCls + '-tab-disabled';
		      } else {
		        events = {
		          onClick: _this.onTabClick.bind(_this, key)
		        };
		      }
		      var ref = {};
		      if (activeKey === key) {
		        ref.ref = 'activeTab';
		      }
		      rst.push(_react2["default"].createElement(
		        'div',
		        _extends({
		          role: 'tab',
		          'aria-disabled': child.props.disabled ? 'true' : 'false',
		          'aria-selected': activeKey === key ? 'true' : 'false'
		        }, events, {
		          className: cls,
		          key: key
		        }, ref),
		        _react2["default"].createElement(
		          'div',
		          { className: prefixCls + '-tab-inner' },
		          child.props.tab
		        )
		      ));
		    });
		
		    return rst;
		  },
		  getOffsetWH: function getOffsetWH(node) {
		    var tabPosition = this.props.tabPosition;
		    var prop = 'offsetWidth';
		    if (tabPosition === 'left' || tabPosition === 'right') {
		      prop = 'offsetHeight';
		    }
		    return node[prop];
		  },
		  getOffsetLT: function getOffsetLT(node) {
		    var tabPosition = this.props.tabPosition;
		    var prop = 'left';
		    if (tabPosition === 'left' || tabPosition === 'right') {
		      prop = 'top';
		    }
		    return node.getBoundingClientRect()[prop];
		  },
		  setOffset: function setOffset(offset) {
		    var target = Math.min(0, offset);
		    if (this.state.offset !== target) {
		      this.setState({
		        offset: target
		      });
		      var navOffset = {};
		      var tabPosition = this.props.tabPosition;
		      var transformProperty = (0, _utils.getTransformPropertyName)();
		      if (tabPosition === 'left' || tabPosition === 'right') {
		        if (transformProperty) {
		          navOffset = {
		            name: transformProperty,
		            value: 'translate3d(0,' + target + 'px,0)'
		          };
		        } else {
		          navOffset = {
		            name: 'top',
		            value: target + 'px'
		          };
		        }
		      } else {
		        if (transformProperty) {
		          navOffset = {
		            name: transformProperty,
		            value: 'translate3d(' + target + 'px,0,0)'
		          };
		        } else {
		          navOffset = {
		            name: 'left',
		            value: target + 'px'
		          };
		        }
		      }
		      this.refs.nav.style[navOffset.name] = navOffset.value;
		    }
		  },
		  setPrev: function setPrev(v) {
		    if (this.state.prev !== v) {
		      this.setState({
		        prev: v
		      });
		    }
		  },
		  setNext: function setNext(v) {
		    if (this.state.next !== v) {
		      this.setState({
		        next: v
		      });
		    }
		  },
		  isNextPrevShown: function isNextPrevShown(state) {
		    return state.next || state.prev;
		  },
		  scrollToActiveTab: function scrollToActiveTab() {
		    var _refs = this.refs;
		    var activeTab = _refs.activeTab;
		    var navWrap = _refs.navWrap;
		
		    if (activeTab) {
		      var activeTabWH = this.getOffsetWH(activeTab);
		      var navWrapNodeWH = this.getOffsetWH(navWrap);
		      var offset = this.state.offset;
		
		      var wrapOffset = this.getOffsetLT(navWrap);
		      var activeTabOffset = this.getOffsetLT(activeTab);
		      if (wrapOffset > activeTabOffset) {
		        offset += wrapOffset - activeTabOffset;
		        this.setState({
		          offset: offset
		        });
		      } else if (wrapOffset + navWrapNodeWH < activeTabOffset + activeTabWH) {
		        offset -= activeTabOffset + activeTabWH - (wrapOffset + navWrapNodeWH);
		        this.setState({
		          offset: offset
		        });
		      }
		    }
		  },
		  prev: function prev() {
		    var navWrapNode = this.refs.navWrap;
		    var navWrapNodeWH = this.getOffsetWH(navWrapNode);
		    var state = this.state;
		    var offset = state.offset;
		    this.setOffset(offset + navWrapNodeWH);
		  },
		  next: function next() {
		    var navWrapNode = this.refs.navWrap;
		    var navWrapNodeWH = this.getOffsetWH(navWrapNode);
		    var state = this.state;
		    var offset = state.offset;
		    this.setOffset(offset - navWrapNodeWH);
		  },
		  render: function render() {
		    var props = this.props;
		    var state = this.state;
		    var prefixCls = props.prefixCls;
		    var tabs = this.getTabs();
		    var tabMovingDirection = props.tabMovingDirection;
		    var inkBarClass = prefixCls + '-ink-bar';
		    if (tabMovingDirection) {
		      inkBarClass += ' ' + prefixCls + '-ink-bar-transition-' + tabMovingDirection;
		    }
		    var nextButton = void 0;
		    var prevButton = void 0;
		
		    var showNextPrev = state.prev || state.next;
		
		    if (showNextPrev) {
		      var _classnames, _classnames2;
		
		      prevButton = _react2["default"].createElement(
		        'span',
		        {
		          onClick: state.prev ? this.prev : noop,
		          unselectable: 'unselectable',
		          className: (0, _classnames4["default"])((_classnames = {}, _defineProperty(_classnames, prefixCls + '-tab-prev', 1), _defineProperty(_classnames, prefixCls + '-tab-btn-disabled', !state.prev), _classnames))
		        },
		        _react2["default"].createElement('span', { className: prefixCls + '-tab-prev-icon' })
		      );
		
		      nextButton = _react2["default"].createElement(
		        'span',
		        {
		          onClick: state.next ? this.next : noop,
		          unselectable: 'unselectable',
		          className: (0, _classnames4["default"])((_classnames2 = {}, _defineProperty(_classnames2, prefixCls + '-tab-next', 1), _defineProperty(_classnames2, prefixCls + '-tab-btn-disabled', !state.next), _classnames2))
		        },
		        _react2["default"].createElement('span', { className: prefixCls + '-tab-next-icon' })
		      );
		    }
		
		    var tabBarExtraContent = this.props.tabBarExtraContent;
		
		    return _react2["default"].createElement(
		      'div',
		      {
		        role: 'tablist',
		        className: prefixCls + '-bar',
		        tabIndex: '0',
		        onKeyDown: this.props.onKeyDown
		      },
		      tabBarExtraContent ? _react2["default"].createElement(
		        'div',
		        { style: tabBarExtraContentStyle },
		        tabBarExtraContent
		      ) : null,
		      _react2["default"].createElement(
		        'div',
		        {
		          className: prefixCls + '-nav-container ' + (showNextPrev ? prefixCls + '-nav-container-scrolling' : ''),
		          style: props.style,
		          ref: 'container'
		        },
		        prevButton,
		        nextButton,
		        _react2["default"].createElement(
		          'div',
		          { className: prefixCls + '-nav-wrap', ref: 'navWrap' },
		          _react2["default"].createElement(
		            'div',
		            { className: prefixCls + '-nav-scroll' },
		            _react2["default"].createElement(
		              'div',
		              { className: prefixCls + '-nav', ref: 'nav' },
		              _react2["default"].createElement('div', { className: inkBarClass, ref: 'inkBar' }),
		              tabs
		            )
		          )
		        )
		      )
		    );
		  }
		});
		
		exports["default"] = Nav;
		module.exports = exports['default'];
	
	/***/ },
	/* 372 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _KeyCode = __webpack_require__(370);
		
		var _KeyCode2 = _interopRequireDefault(_KeyCode);
		
		var _TabPane = __webpack_require__(113);
		
		var _TabPane2 = _interopRequireDefault(_TabPane);
		
		var _Nav = __webpack_require__(371);
		
		var _Nav2 = _interopRequireDefault(_Nav);
		
		var _rcAnimate = __webpack_require__(7);
		
		var _rcAnimate2 = _interopRequireDefault(_rcAnimate);
		
		var _classnames2 = __webpack_require__(2);
		
		var _classnames3 = _interopRequireDefault(_classnames2);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function noop() {}
		
		function getDefaultActiveKey(props) {
		  var activeKey = void 0;
		  _react2["default"].Children.forEach(props.children, function (child) {
		    if (!activeKey && !child.props.disabled) {
		      activeKey = child.key;
		    }
		  });
		  return activeKey;
		}
		
		var Tabs = _react2["default"].createClass({
		  displayName: 'Tabs',
		
		  propTypes: {
		    destroyInactiveTabPane: _react.PropTypes.bool,
		    onTabClick: _react.PropTypes.func,
		    onChange: _react.PropTypes.func,
		    children: _react.PropTypes.any,
		    tabBarExtraContent: _react.PropTypes.any,
		    animation: _react.PropTypes.string,
		    prefixCls: _react.PropTypes.string,
		    className: _react.PropTypes.string,
		    tabPosition: _react.PropTypes.string
		  },
		
		  getDefaultProps: function getDefaultProps() {
		    return {
		      prefixCls: 'rc-tabs',
		      destroyInactiveTabPane: false,
		      tabBarExtraContent: null,
		      onChange: noop,
		      tabPosition: 'top',
		      style: {},
		      contentStyle: {},
		      navStyle: {},
		      onTabClick: noop
		    };
		  },
		  getInitialState: function getInitialState() {
		    var props = this.props;
		    var activeKey = void 0;
		    if ('activeKey' in props) {
		      activeKey = props.activeKey;
		    } else if ('defaultActiveKey' in props) {
		      activeKey = props.defaultActiveKey;
		    } else {
		      activeKey = getDefaultActiveKey(props);
		    }
		    return {
		      activeKey: activeKey
		    };
		  },
		  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
		    var newActiveKey = this.state.activeKey;
		    if ('activeKey' in nextProps) {
		      newActiveKey = nextProps.activeKey;
		      if (!newActiveKey) {
		        this.setState({
		          activeKey: newActiveKey
		        });
		        return;
		      }
		    }
		    var found = void 0;
		    _react2["default"].Children.forEach(nextProps.children, function (child) {
		      if (child.key === newActiveKey) {
		        found = true;
		      }
		    });
		    if (found) {
		      this.setActiveKey(newActiveKey, nextProps);
		    } else {
		      this.setActiveKey(getDefaultActiveKey(nextProps), nextProps);
		    }
		  },
		  onTabClick: function onTabClick(key) {
		    this.setActiveKey(key);
		    this.props.onTabClick(key);
		    if (this.state.activeKey !== key) {
		      this.props.onChange(key);
		    }
		  },
		  onNavKeyDown: function onNavKeyDown(e) {
		    var eventKeyCode = e.keyCode;
		    if (eventKeyCode === _KeyCode2["default"].RIGHT || eventKeyCode === _KeyCode2["default"].DOWN) {
		      e.preventDefault();
		      var nextKey = this.getNextActiveKey(true);
		      this.onTabClick(nextKey);
		    } else if (eventKeyCode === _KeyCode2["default"].LEFT || eventKeyCode === _KeyCode2["default"].UP) {
		      e.preventDefault();
		      var previousKey = this.getNextActiveKey(false);
		      this.onTabClick(previousKey);
		    }
		  },
		  getNextActiveKey: function getNextActiveKey(next) {
		    var activeKey = this.state.activeKey;
		    var children = [];
		    _react2["default"].Children.forEach(this.props.children, function (c) {
		      if (!c.props.disabled) {
		        if (next) {
		          children.push(c);
		        } else {
		          children.unshift(c);
		        }
		      }
		    });
		    var length = children.length;
		    var ret = length && children[0].key;
		    children.forEach(function (child, i) {
		      if (child.key === activeKey) {
		        if (i === length - 1) {
		          ret = children[0].key;
		        } else {
		          ret = children[i + 1].key;
		        }
		      }
		    });
		    return ret;
		  },
		  getTabPanes: function getTabPanes() {
		    var state = this.state;
		    var props = this.props;
		    var activeKey = state.activeKey;
		    var children = props.children;
		    var newChildren = [];
		
		    _react2["default"].Children.forEach(children, function (child) {
		      var key = child.key;
		      var active = activeKey === key;
		      newChildren.push(_react2["default"].cloneElement(child, {
		        active: active,
		        // eventKey: key,
		        rootPrefixCls: props.prefixCls
		      }));
		    });
		
		    return newChildren;
		  },
		  getIndexPair: function getIndexPair(props, currentActiveKey, activeKey) {
		    var keys = [];
		    _react2["default"].Children.forEach(props.children, function (c) {
		      keys.push(c.key);
		    });
		    var currentIndex = keys.indexOf(currentActiveKey);
		    var nextIndex = keys.indexOf(activeKey);
		    return {
		      currentIndex: currentIndex, nextIndex: nextIndex
		    };
		  },
		  setActiveKey: function setActiveKey(activeKey, ps) {
		    var props = ps || this.props;
		    var currentActiveKey = this.state.activeKey;
		    if (currentActiveKey === activeKey || 'activeKey' in props && props === this.props) {
		      return;
		    }
		    if (!currentActiveKey) {
		      this.setState({
		        activeKey: activeKey
		      });
		    } else {
		      var _getIndexPair = this.getIndexPair(props, currentActiveKey, activeKey);
		
		      var currentIndex = _getIndexPair.currentIndex;
		      var nextIndex = _getIndexPair.nextIndex;
		      // removed
		
		      if (currentIndex === -1) {
		        var newPair = this.getIndexPair(this.props, currentActiveKey, activeKey);
		        currentIndex = newPair.currentIndex;
		        nextIndex = newPair.nextIndex;
		      }
		      var tabMovingDirection = currentIndex > nextIndex ? 'backward' : 'forward';
		      this.setState({
		        activeKey: activeKey,
		        tabMovingDirection: tabMovingDirection
		      });
		    }
		  },
		  render: function render() {
		    var _classnames;
		
		    var props = this.props;
		    var destroyInactiveTabPane = props.destroyInactiveTabPane;
		    var prefixCls = props.prefixCls;
		    var tabPosition = props.tabPosition;
		    var className = props.className;
		    var animation = props.animation;
		
		    var cls = (0, _classnames3["default"])((_classnames = {}, _defineProperty(_classnames, prefixCls, 1), _defineProperty(_classnames, prefixCls + '-' + tabPosition, 1), _defineProperty(_classnames, className, !!className), _classnames));
		    var tabMovingDirection = this.state.tabMovingDirection;
		    var tabPanes = this.getTabPanes();
		    var transitionName = void 0;
		    transitionName = props.transitionName && props.transitionName[tabMovingDirection || 'backward'];
		    if (!transitionName && animation) {
		      transitionName = prefixCls + '-' + animation + '-' + (tabMovingDirection || 'backward');
		    }
		    if (destroyInactiveTabPane) {
		      tabPanes = tabPanes.filter(function (panel) {
		        return panel.props.active;
		      });
		    }
		    if (transitionName) {
		      if (destroyInactiveTabPane) {
		        tabPanes = _react2["default"].createElement(
		          _rcAnimate2["default"],
		          {
		            exclusive: true,
		            component: 'div',
		            transitionName: transitionName
		          },
		          tabPanes
		        );
		      } else {
		        tabPanes = _react2["default"].createElement(
		          _rcAnimate2["default"],
		          {
		            showProp: 'active',
		            exclusive: true,
		            component: 'div',
		            transitionName: transitionName
		          },
		          tabPanes
		        );
		      }
		    }
		    var contents = [_react2["default"].createElement(_Nav2["default"], {
		      prefixCls: prefixCls,
		      key: 'nav',
		      onKeyDown: this.onNavKeyDown,
		      tabBarExtraContent: this.props.tabBarExtraContent,
		      tabPosition: tabPosition,
		      style: props.navStyle,
		      onTabClick: this.onTabClick,
		      tabMovingDirection: tabMovingDirection,
		      panels: this.props.children,
		      activeKey: this.state.activeKey
		    }), _react2["default"].createElement(
		      'div',
		      {
		        className: prefixCls + '-content',
		        style: props.contentStyle,
		        key: 'content'
		      },
		      tabPanes
		    )];
		    if (tabPosition === 'bottom') {
		      contents.reverse();
		    }
		    return _react2["default"].createElement(
		      'div',
		      {
		        className: cls,
		        style: props.style
		      },
		      contents
		    );
		  }
		});
		
		Tabs.TabPane = _TabPane2["default"];
		
		exports["default"] = Tabs;
		module.exports = exports['default'];
	
	/***/ },
	/* 373 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.TabPane = exports["default"] = undefined;
		
		var _Tabs = __webpack_require__(372);
		
		var _Tabs2 = _interopRequireDefault(_Tabs);
		
		var _TabPane2 = __webpack_require__(113);
		
		var _TabPane3 = _interopRequireDefault(_TabPane2);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		exports["default"] = _Tabs2["default"];
		exports.TabPane = _TabPane3["default"];
	
	/***/ },
	/* 374 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		var _TimePicker = __webpack_require__(115);
		
		var _TimePicker2 = _interopRequireDefault(_TimePicker);
		
		exports['default'] = _TimePicker2['default'];
		module.exports = exports['default'];
	
	/***/ },
	/* 375 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		var _gregorianCalendarFormatLibLocaleEn_US = __webpack_require__(44);
		
		var _gregorianCalendarFormatLibLocaleEn_US2 = _interopRequireDefault(_gregorianCalendarFormatLibLocaleEn_US);
		
		var _gregorianCalendarLibLocaleEn_US = __webpack_require__(89);
		
		var _gregorianCalendarLibLocaleEn_US2 = _interopRequireDefault(_gregorianCalendarLibLocaleEn_US);
		
		exports['default'] = {
		  clear: 'Clear',
		  format: _gregorianCalendarFormatLibLocaleEn_US2['default'],
		  calendar: _gregorianCalendarLibLocaleEn_US2['default']
		};
		module.exports = exports['default'];
	
	/***/ },
	/* 376 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		var _gregorianCalendarFormatLibLocaleZh_CN = __webpack_require__(87);
		
		var _gregorianCalendarFormatLibLocaleZh_CN2 = _interopRequireDefault(_gregorianCalendarFormatLibLocaleZh_CN);
		
		var _gregorianCalendarLibLocaleZh_CN = __webpack_require__(90);
		
		var _gregorianCalendarLibLocaleZh_CN2 = _interopRequireDefault(_gregorianCalendarLibLocaleZh_CN);
		
		exports['default'] = {
		  clear: '清除',
		  format: _gregorianCalendarFormatLibLocaleZh_CN2['default'],
		  calendar: _gregorianCalendarLibLocaleZh_CN2['default']
		};
		module.exports = exports['default'];
	
	/***/ },
	/* 377 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _Select = __webpack_require__(380);
		
		var _Select2 = _interopRequireDefault(_Select);
		
		var _gregorianCalendar = __webpack_require__(9);
		
		var _gregorianCalendar2 = _interopRequireDefault(_gregorianCalendar);
		
		var formatOption = function formatOption(option, disabledOptions) {
		  var value = '' + option;
		  if (option < 10) {
		    value = '0' + option;
		  }
		
		  var disabled = false;
		  if (disabledOptions && disabledOptions.indexOf(option) >= 0) {
		    disabled = true;
		  }
		
		  return {
		    value: value,
		    disabled: disabled
		  };
		};
		
		var Combobox = _react2['default'].createClass({
		  displayName: 'Combobox',
		
		  propTypes: {
		    formatter: _react.PropTypes.object,
		    prefixCls: _react.PropTypes.string,
		    value: _react.PropTypes.object,
		    onChange: _react.PropTypes.func,
		    showHour: _react.PropTypes.bool,
		    gregorianCalendarLocale: _react.PropTypes.object,
		    showSecond: _react.PropTypes.bool,
		    hourOptions: _react.PropTypes.array,
		    minuteOptions: _react.PropTypes.array,
		    secondOptions: _react.PropTypes.array,
		    disabledHours: _react.PropTypes.func,
		    disabledMinutes: _react.PropTypes.func,
		    disabledSeconds: _react.PropTypes.func,
		    onCurrentSelectPanelChange: _react.PropTypes.func
		  },
		
		  onItemChange: function onItemChange(type, itemValue) {
		    var onChange = this.props.onChange;
		
		    var value = this.props.value;
		    if (value) {
		      value = value.clone();
		    } else {
		      value = this.getNow().clone();
		    }
		    if (type === 'hour') {
		      value.setHourOfDay(itemValue);
		    } else if (type === 'minute') {
		      value.setMinutes(itemValue);
		    } else {
		      value.setSeconds(itemValue);
		    }
		    onChange(value);
		  },
		
		  onEnterSelectPanel: function onEnterSelectPanel(range) {
		    this.props.onCurrentSelectPanelChange(range);
		  },
		
		  getHourSelect: function getHourSelect(hour) {
		    var _props = this.props;
		    var prefixCls = _props.prefixCls;
		    var hourOptions = _props.hourOptions;
		    var disabledHours = _props.disabledHours;
		    var showHour = _props.showHour;
		
		    if (!showHour) {
		      return null;
		    }
		    var disabledOptions = disabledHours();
		
		    return _react2['default'].createElement(_Select2['default'], {
		      prefixCls: prefixCls,
		      options: hourOptions.map(function (option) {
		        return formatOption(option, disabledOptions);
		      }),
		      selectedIndex: hourOptions.indexOf(hour),
		      type: 'hour',
		      onSelect: this.onItemChange,
		      onMouseEnter: this.onEnterSelectPanel.bind(this, 'hour')
		    });
		  },
		
		  getMinuteSelect: function getMinuteSelect(minute) {
		    var _props2 = this.props;
		    var prefixCls = _props2.prefixCls;
		    var minuteOptions = _props2.minuteOptions;
		    var disabledMinutes = _props2.disabledMinutes;
		
		    var value = this.props.value || this.getNow();
		    var disabledOptions = disabledMinutes(value.getHourOfDay());
		
		    return _react2['default'].createElement(_Select2['default'], {
		      prefixCls: prefixCls,
		      options: minuteOptions.map(function (option) {
		        return formatOption(option, disabledOptions);
		      }),
		      selectedIndex: minuteOptions.indexOf(minute),
		      type: 'minute',
		      onSelect: this.onItemChange,
		      onMouseEnter: this.onEnterSelectPanel.bind(this, 'minute')
		    });
		  },
		
		  getSecondSelect: function getSecondSelect(second) {
		    var _props3 = this.props;
		    var prefixCls = _props3.prefixCls;
		    var secondOptions = _props3.secondOptions;
		    var disabledSeconds = _props3.disabledSeconds;
		    var showSecond = _props3.showSecond;
		
		    if (!showSecond) {
		      return null;
		    }
		    var value = this.props.value || this.getNow();
		    var disabledOptions = disabledSeconds(value.getHourOfDay(), value.getMinutes());
		
		    return _react2['default'].createElement(_Select2['default'], {
		      prefixCls: prefixCls,
		      options: secondOptions.map(function (option) {
		        return formatOption(option, disabledOptions);
		      }),
		      selectedIndex: secondOptions.indexOf(second),
		      type: 'second',
		      onSelect: this.onItemChange,
		      onMouseEnter: this.onEnterSelectPanel.bind(this, 'second')
		    });
		  },
		
		  getNow: function getNow() {
		    if (this.showNow) {
		      return this.showNow;
		    }
		    var value = new _gregorianCalendar2['default'](this.props.gregorianCalendarLocale);
		    value.setTime(Date.now());
		    this.showNow = value;
		    return value;
		  },
		
		  render: function render() {
		    var prefixCls = this.props.prefixCls;
		
		    var value = this.props.value || this.getNow();
		    return _react2['default'].createElement(
		      'div',
		      { className: prefixCls + '-combobox' },
		      this.getHourSelect(value.getHourOfDay()),
		      this.getMinuteSelect(value.getMinutes()),
		      this.getSecondSelect(value.getSeconds())
		    );
		  }
		});
		
		exports['default'] = Combobox;
		module.exports = exports['default'];
	
	/***/ },
	/* 378 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _utilSelection = __webpack_require__(383);
		
		var _utilSelection2 = _interopRequireDefault(_utilSelection);
		
		var Header = _react2['default'].createClass({
		  displayName: 'Header',
		
		  propTypes: {
		    formatter: _react.PropTypes.object,
		    prefixCls: _react.PropTypes.string,
		    gregorianCalendarLocale: _react.PropTypes.object,
		    locale: _react.PropTypes.object,
		    disabledDate: _react.PropTypes.func,
		    placeholder: _react.PropTypes.string,
		    value: _react.PropTypes.object,
		    hourOptions: _react.PropTypes.array,
		    minuteOptions: _react.PropTypes.array,
		    secondOptions: _react.PropTypes.array,
		    disabledHours: _react.PropTypes.func,
		    disabledMinutes: _react.PropTypes.func,
		    disabledSeconds: _react.PropTypes.func,
		    onChange: _react.PropTypes.func,
		    onClear: _react.PropTypes.func,
		    onEsc: _react.PropTypes.func,
		    allowEmpty: _react.PropTypes.bool,
		    currentSelectPanel: _react.PropTypes.string
		  },
		
		  getInitialState: function getInitialState() {
		    var value = this.props.value;
		    return {
		      str: value && this.props.formatter.format(value) || '',
		      invalid: false
		    };
		  },
		
		  componentDidMount: function componentDidMount() {
		    this.timer = setTimeout(this.selectRange, 0);
		  },
		
		  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
		    var value = nextProps.value;
		    this.setState({
		      str: value && nextProps.formatter.format(value) || '',
		      invalid: false
		    });
		  },
		
		  componentDidUpdate: function componentDidUpdate() {
		    this.timer = setTimeout(this.selectRange, 0);
		  },
		
		  componentWillUnmount: function componentWillUnmount() {
		    clearTimeout(this.timer);
		  },
		
		  onInputChange: function onInputChange(event) {
		    var str = event.target.value;
		    this.setState({
		      str: str
		    });
		    var value = null;
		    var _props = this.props;
		    var formatter = _props.formatter;
		    var gregorianCalendarLocale = _props.gregorianCalendarLocale;
		    var hourOptions = _props.hourOptions;
		    var minuteOptions = _props.minuteOptions;
		    var secondOptions = _props.secondOptions;
		    var disabledHours = _props.disabledHours;
		    var disabledMinutes = _props.disabledMinutes;
		    var disabledSeconds = _props.disabledSeconds;
		    var onChange = _props.onChange;
		    var allowEmpty = _props.allowEmpty;
		
		    if (str) {
		      var originalValue = this.props.value;
		      try {
		        value = formatter.parse(str, {
		          locale: gregorianCalendarLocale,
		          obeyCount: true
		        });
		      } catch (ex) {
		        this.setState({
		          invalid: true
		        });
		        return;
		      }
		
		      if (value) {
		        // if time value not allowed, response warning.
		        if (hourOptions.indexOf(value.getHourOfDay()) < 0 || minuteOptions.indexOf(value.getMinutes()) < 0 || secondOptions.indexOf(value.getSeconds()) < 0) {
		          this.setState({
		            invalid: true
		          });
		          return;
		        }
		
		        // if time value is disabled, response warning.
		        var disabledHourOptions = disabledHours();
		        var disabledMinuteOptions = disabledMinutes(value.getHourOfDay());
		        var disabledSecondOptions = disabledSeconds(value.getHourOfDay(), value.getMinutes());
		        if (disabledHourOptions && disabledHourOptions.indexOf(value.getHourOfDay()) >= 0 || disabledMinuteOptions && disabledMinuteOptions.indexOf(value.getMinutes()) >= 0 || disabledSecondOptions && disabledSecondOptions.indexOf(value.getSeconds()) >= 0) {
		          this.setState({
		            invalid: true
		          });
		          return;
		        }
		
		        if (originalValue && value) {
		          if (originalValue.getHourOfDay() !== value.getHourOfDay() || originalValue.getMinutes() !== value.getMinutes() || originalValue.getSeconds() !== value.getSeconds()) {
		            // keep other fields for rc-calendar
		            var changedValue = originalValue.clone();
		            changedValue.setHourOfDay(value.getHourOfDay());
		            changedValue.setMinutes(value.getMinutes());
		            changedValue.setSeconds(value.getSeconds());
		            onChange(changedValue);
		          }
		        } else if (originalValue !== value) {
		          onChange(value);
		        }
		      } else {
		        this.setState({
		          invalid: true
		        });
		        return;
		      }
		    } else if (allowEmpty) {
		      onChange(null);
		    } else {
		      this.setState({
		        invalid: true
		      });
		      return;
		    }
		
		    this.setState({
		      invalid: false
		    });
		  },
		
		  onKeyDown: function onKeyDown(e) {
		    if (e.keyCode === 27) {
		      this.props.onEsc();
		    }
		  },
		
		  onClear: function onClear() {
		    this.setState({ str: '' });
		    this.props.onClear();
		  },
		
		  getClearButton: function getClearButton() {
		    var _props2 = this.props;
		    var locale = _props2.locale;
		    var prefixCls = _props2.prefixCls;
		    var allowEmpty = _props2.allowEmpty;
		
		    if (!allowEmpty) {
		      return null;
		    }
		    return _react2['default'].createElement('a', { className: prefixCls + '-clear-btn', role: 'button', title: locale.clear, onMouseDown: this.onClear });
		  },
		
		  getInput: function getInput() {
		    var _props3 = this.props;
		    var prefixCls = _props3.prefixCls;
		    var placeholder = _props3.placeholder;
		    var _state = this.state;
		    var invalid = _state.invalid;
		    var str = _state.str;
		
		    var invalidClass = invalid ? prefixCls + '-input-invalid' : '';
		    return _react2['default'].createElement('input', {
		      className: prefixCls + '-input  ' + invalidClass,
		      ref: 'input',
		      onKeyDown: this.onKeyDown,
		      value: str,
		      placeholder: placeholder, onChange: this.onInputChange
		    });
		  },
		
		  selectRange: function selectRange() {
		    this.refs.input.select();
		    if (this.props.currentSelectPanel && this.refs.input.value) {
		      var selectionRangeStart = 0;
		      var selectionRangeEnd = 0;
		      if (this.props.currentSelectPanel === 'hour') {
		        selectionRangeStart = 0;
		        selectionRangeEnd = this.refs.input.value.indexOf(':');
		      } else if (this.props.currentSelectPanel === 'minute') {
		        selectionRangeStart = this.refs.input.value.indexOf(':') + 1;
		        selectionRangeEnd = this.refs.input.value.lastIndexOf(':');
		      } else if (this.props.currentSelectPanel === 'second') {
		        selectionRangeStart = this.refs.input.value.lastIndexOf(':') + 1;
		        selectionRangeEnd = this.refs.input.value.length;
		      }
		      if (selectionRangeEnd - selectionRangeStart === 2) {
		        (0, _utilSelection2['default'])(this.refs.input, selectionRangeStart, selectionRangeEnd);
		      }
		    }
		  },
		
		  render: function render() {
		    var prefixCls = this.props.prefixCls;
		
		    return _react2['default'].createElement(
		      'div',
		      { className: prefixCls + '-input-wrap' },
		      this.getInput(),
		      this.getClearButton()
		    );
		  }
		});
		
		exports['default'] = Header;
		module.exports = exports['default'];
	
	/***/ },
	/* 379 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _mixinCommonMixin = __webpack_require__(116);
		
		var _mixinCommonMixin2 = _interopRequireDefault(_mixinCommonMixin);
		
		var _Header = __webpack_require__(378);
		
		var _Header2 = _interopRequireDefault(_Header);
		
		var _Combobox = __webpack_require__(377);
		
		var _Combobox2 = _interopRequireDefault(_Combobox);
		
		function noop() {}
		
		function generateOptions(length, disabledOptions, hideDisabledOptions) {
		  var arr = [];
		  for (var value = 0; value < length; value++) {
		    if (!disabledOptions || disabledOptions.indexOf(value) < 0 || !hideDisabledOptions) {
		      arr.push(value);
		    }
		  }
		  return arr;
		}
		
		var Panel = _react2['default'].createClass({
		  displayName: 'Panel',
		
		  propTypes: {
		    prefixCls: _react.PropTypes.string,
		    value: _react.PropTypes.object,
		    locale: _react.PropTypes.object,
		    placeholder: _react.PropTypes.string,
		    gregorianCalendarLocale: _react.PropTypes.object,
		    formatter: _react.PropTypes.object,
		    disabledHours: _react.PropTypes.func,
		    disabledMinutes: _react.PropTypes.func,
		    disabledSeconds: _react.PropTypes.func,
		    hideDisabledOptions: _react.PropTypes.bool,
		    onChange: _react.PropTypes.func,
		    onEsc: _react.PropTypes.func,
		    allowEmpty: _react.PropTypes.bool,
		    showHour: _react.PropTypes.bool,
		    showSecond: _react.PropTypes.bool,
		    onClear: _react.PropTypes.func
		  },
		
		  mixins: [_mixinCommonMixin2['default']],
		
		  getDefaultProps: function getDefaultProps() {
		    return {
		      prefixCls: 'rc-time-picker-panel',
		      onChange: noop,
		      onClear: noop
		    };
		  },
		
		  getInitialState: function getInitialState() {
		    return {
		      value: this.props.value,
		      selectionRange: []
		    };
		  },
		
		  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
		    var value = nextProps.value;
		    if (value) {
		      this.setState({
		        value: value
		      });
		    }
		  },
		
		  onChange: function onChange(newValue) {
		    this.setState({ value: newValue });
		    this.props.onChange(newValue);
		  },
		
		  onClear: function onClear() {
		    this.props.onClear();
		  },
		
		  onCurrentSelectPanelChange: function onCurrentSelectPanelChange(currentSelectPanel) {
		    this.setState({ currentSelectPanel: currentSelectPanel });
		  },
		
		  render: function render() {
		    var _props = this.props;
		    var locale = _props.locale;
		    var prefixCls = _props.prefixCls;
		    var placeholder = _props.placeholder;
		    var disabledHours = _props.disabledHours;
		    var disabledMinutes = _props.disabledMinutes;
		    var disabledSeconds = _props.disabledSeconds;
		    var hideDisabledOptions = _props.hideDisabledOptions;
		    var allowEmpty = _props.allowEmpty;
		    var showHour = _props.showHour;
		    var showSecond = _props.showSecond;
		    var formatter = _props.formatter;
		    var gregorianCalendarLocale = _props.gregorianCalendarLocale;
		
		    var value = this.state.value;
		    var disabledHourOptions = disabledHours();
		    var disabledMinuteOptions = disabledMinutes(value ? value.getHourOfDay() : null);
		    var disabledSecondOptions = disabledSeconds(value ? value.getHourOfDay() : null, value ? value.getMinutes() : null);
		    var hourOptions = generateOptions(24, disabledHourOptions, hideDisabledOptions);
		    var minuteOptions = generateOptions(60, disabledMinuteOptions, hideDisabledOptions);
		    var secondOptions = generateOptions(60, disabledSecondOptions, hideDisabledOptions);
		
		    return _react2['default'].createElement(
		      'div',
		      { className: prefixCls + '-inner' },
		      _react2['default'].createElement(_Header2['default'], {
		        prefixCls: prefixCls,
		        gregorianCalendarLocale: gregorianCalendarLocale,
		        locale: locale,
		        value: value,
		        currentSelectPanel: this.state.currentSelectPanel,
		        onEsc: this.props.onEsc,
		        formatter: formatter,
		        placeholder: placeholder,
		        hourOptions: hourOptions,
		        minuteOptions: minuteOptions,
		        secondOptions: secondOptions,
		        disabledHours: disabledHours,
		        disabledMinutes: disabledMinutes,
		        disabledSeconds: disabledSeconds,
		        onChange: this.onChange,
		        onClear: this.onClear,
		        allowEmpty: allowEmpty
		      }),
		      _react2['default'].createElement(_Combobox2['default'], {
		        prefixCls: prefixCls,
		        value: value,
		        gregorianCalendarLocale: gregorianCalendarLocale,
		        formatter: formatter,
		        onChange: this.onChange,
		        showHour: showHour,
		        showSecond: showSecond,
		        hourOptions: hourOptions,
		        minuteOptions: minuteOptions,
		        secondOptions: secondOptions,
		        disabledHours: disabledHours,
		        disabledMinutes: disabledMinutes,
		        disabledSeconds: disabledSeconds,
		        onCurrentSelectPanelChange: this.onCurrentSelectPanelChange
		      })
		    );
		  }
		});
		
		exports['default'] = Panel;
		module.exports = exports['default'];
	
	/***/ },
	/* 380 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _reactDom = __webpack_require__(4);
		
		var _reactDom2 = _interopRequireDefault(_reactDom);
		
		var _classnames2 = __webpack_require__(2);
		
		var _classnames3 = _interopRequireDefault(_classnames2);
		
		var scrollTo = function scrollTo(element, to, duration) {
		  var requestAnimationFrame = window.requestAnimationFrame || function requestAnimationFrameTimeout() {
		    return setTimeout(arguments[0], 10);
		  };
		  // jump to target if duration zero
		  if (duration <= 0) {
		    element.scrollTop = to;
		    return;
		  }
		  var difference = to - element.scrollTop;
		  var perTick = difference / duration * 10;
		
		  requestAnimationFrame(function () {
		    element.scrollTop = element.scrollTop + perTick;
		    if (element.scrollTop === to) return;
		    scrollTo(element, to, duration - 10);
		  });
		};
		
		var Select = _react2['default'].createClass({
		  displayName: 'Select',
		
		  propTypes: {
		    prefixCls: _react.PropTypes.string,
		    options: _react.PropTypes.array,
		    gregorianCalendarLocale: _react.PropTypes.object,
		    selectedIndex: _react.PropTypes.number,
		    type: _react.PropTypes.string,
		    onSelect: _react.PropTypes.func,
		    onMouseEnter: _react.PropTypes.func
		  },
		
		  componentDidMount: function componentDidMount() {
		    // jump to selected option
		    this.scrollToSelected(0);
		  },
		
		  componentDidUpdate: function componentDidUpdate(prevProps) {
		    // smooth scroll to selected option
		    if (prevProps.selectedIndex !== this.props.selectedIndex) {
		      this.scrollToSelected(120);
		    }
		  },
		
		  onSelect: function onSelect(value) {
		    var _props = this.props;
		    var onSelect = _props.onSelect;
		    var type = _props.type;
		
		    onSelect(type, value);
		  },
		
		  getOptions: function getOptions() {
		    var _this = this;
		
		    var _props2 = this.props;
		    var options = _props2.options;
		    var selectedIndex = _props2.selectedIndex;
		    var prefixCls = _props2.prefixCls;
		
		    return options.map(function (item, index) {
		      var _classnames;
		
		      var cls = (0, _classnames3['default'])((_classnames = {}, _defineProperty(_classnames, prefixCls + '-select-option-selected', selectedIndex === index), _defineProperty(_classnames, prefixCls + '-select-option-disabled', item.disabled), _classnames));
		      var onclick = null;
		      if (!item.disabled) {
		        onclick = _this.onSelect.bind(_this, +item.value);
		      }
		      return _react2['default'].createElement(
		        'li',
		        { className: cls, key: index, onClick: onclick, disabled: item.disabled },
		        item.value
		      );
		    });
		  },
		
		  scrollToSelected: function scrollToSelected(duration) {
		    // move to selected item
		    var select = _reactDom2['default'].findDOMNode(this);
		    var list = _reactDom2['default'].findDOMNode(this.refs.list);
		    var index = this.props.selectedIndex;
		    if (index < 0) {
		      index = 0;
		    }
		    var topOption = list.children[index];
		    var to = topOption.offsetTop;
		    scrollTo(select, to, duration);
		  },
		
		  render: function render() {
		    if (this.props.options.length === 0) {
		      return null;
		    }
		
		    var prefixCls = this.props.prefixCls;
		
		    return _react2['default'].createElement(
		      'div',
		      { className: prefixCls + '-select',
		        onMouseEnter: this.props.onMouseEnter },
		      _react2['default'].createElement(
		        'ul',
		        { ref: 'list' },
		        this.getOptions()
		      )
		    );
		  }
		});
		
		exports['default'] = Select;
		module.exports = exports['default'];
	
	/***/ },
	/* 381 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		exports.getFormatter = getFormatter;
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		var _gregorianCalendarFormat = __webpack_require__(29);
		
		var _gregorianCalendarFormat2 = _interopRequireDefault(_gregorianCalendarFormat);
		
		function getFormatter(format, locale) {
		  if (typeof format === 'string') {
		    return new _gregorianCalendarFormat2['default'](format, locale.format);
		  }
		  return format;
		}
	
	/***/ },
	/* 382 */
	/***/ function(module, exports) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		var autoAdjustOverflow = {
		  adjustX: 1,
		  adjustY: 1
		};
		
		var targetOffset = [0, 0];
		
		var placements = {
		  bottomLeft: {
		    points: ['tl', 'tl'],
		    overflow: autoAdjustOverflow,
		    offset: [0, -3],
		    targetOffset: targetOffset
		  },
		  bottomRight: {
		    points: ['tr', 'tr'],
		    overflow: autoAdjustOverflow,
		    offset: [0, -3],
		    targetOffset: targetOffset
		  },
		  topRight: {
		    points: ['br', 'br'],
		    overflow: autoAdjustOverflow,
		    offset: [0, 3],
		    targetOffset: targetOffset
		  },
		  topLeft: {
		    points: ['bl', 'bl'],
		    overflow: autoAdjustOverflow,
		    offset: [0, 3],
		    targetOffset: targetOffset
		  }
		};
		
		exports['default'] = placements;
		module.exports = exports['default'];
	
	/***/ },
	/* 383 */
	/***/ function(module, exports) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		exports['default'] = createSelection;
		
		function createSelection(field, start, end) {
		  if (field.createTextRange) {
		    var selRange = field.createTextRange();
		    selRange.collapse(true);
		    selRange.moveStart('character', start);
		    selRange.moveEnd('character', end);
		    selRange.select();
		    field.focus();
		  } else if (field.setSelectionRange) {
		    field.focus();
		    field.setSelectionRange(start, end);
		  } else if (typeof field.selectionStart !== 'undefined') {
		    field.selectionStart = start;
		    field.selectionEnd = end;
		    field.focus();
		  }
		}
		
		module.exports = exports['default'];
	
	/***/ },
	/* 384 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _placements = __webpack_require__(385);
		
		var _rcTrigger = __webpack_require__(17);
		
		var _rcTrigger2 = _interopRequireDefault(_rcTrigger);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
		
		var Tooltip = _react2["default"].createClass({
		  displayName: 'Tooltip',
		
		  propTypes: {
		    trigger: _react.PropTypes.any,
		    children: _react.PropTypes.any,
		    defaultVisible: _react.PropTypes.bool,
		    visible: _react.PropTypes.bool,
		    placement: _react.PropTypes.string,
		    transitionName: _react.PropTypes.string,
		    animation: _react.PropTypes.any,
		    onVisibleChange: _react.PropTypes.func,
		    afterVisibleChange: _react.PropTypes.func,
		    overlay: _react.PropTypes.oneOfType([_react2["default"].PropTypes.node, _react2["default"].PropTypes.func]).isRequired,
		    overlayStyle: _react.PropTypes.object,
		    overlayClassName: _react.PropTypes.string,
		    prefixCls: _react.PropTypes.string,
		    mouseEnterDelay: _react.PropTypes.number,
		    mouseLeaveDelay: _react.PropTypes.number,
		    getTooltipContainer: _react.PropTypes.func,
		    destroyTooltipOnHide: _react.PropTypes.bool,
		    align: _react.PropTypes.object,
		    arrowContent: _react.PropTypes.any
		  },
		
		  getDefaultProps: function getDefaultProps() {
		    return {
		      prefixCls: 'rc-tooltip',
		      mouseEnterDelay: 0,
		      destroyTooltipOnHide: false,
		      mouseLeaveDelay: 0.1,
		      align: {},
		      placement: 'right',
		      trigger: ['hover'],
		      arrowContent: null
		    };
		  },
		  getPopupElement: function getPopupElement() {
		    var _props = this.props;
		    var arrowContent = _props.arrowContent;
		    var overlay = _props.overlay;
		    var prefixCls = _props.prefixCls;
		
		    return [_react2["default"].createElement(
		      'div',
		      { className: prefixCls + '-arrow', key: 'arrow' },
		      arrowContent
		    ), _react2["default"].createElement(
		      'div',
		      { className: prefixCls + '-inner', key: 'content' },
		      typeof overlay === 'function' ? overlay() : overlay
		    )];
		  },
		  getPopupDomNode: function getPopupDomNode() {
		    return this.refs.trigger.getPopupDomNode();
		  },
		  render: function render() {
		    var _props2 = this.props;
		    var overlayClassName = _props2.overlayClassName;
		    var trigger = _props2.trigger;
		    var mouseEnterDelay = _props2.mouseEnterDelay;
		    var mouseLeaveDelay = _props2.mouseLeaveDelay;
		    var overlayStyle = _props2.overlayStyle;
		    var prefixCls = _props2.prefixCls;
		    var children = _props2.children;
		    var onVisibleChange = _props2.onVisibleChange;
		    var transitionName = _props2.transitionName;
		    var animation = _props2.animation;
		    var placement = _props2.placement;
		    var align = _props2.align;
		    var destroyTooltipOnHide = _props2.destroyTooltipOnHide;
		    var defaultVisible = _props2.defaultVisible;
		    var getTooltipContainer = _props2.getTooltipContainer;
		
		    var restProps = _objectWithoutProperties(_props2, ['overlayClassName', 'trigger', 'mouseEnterDelay', 'mouseLeaveDelay', 'overlayStyle', 'prefixCls', 'children', 'onVisibleChange', 'transitionName', 'animation', 'placement', 'align', 'destroyTooltipOnHide', 'defaultVisible', 'getTooltipContainer']);
		
		    var extraProps = _extends({}, restProps);
		    if ('visible' in this.props) {
		      extraProps.popupVisible = this.props.visible;
		    }
		    return _react2["default"].createElement(
		      _rcTrigger2["default"],
		      _extends({
		        popupClassName: overlayClassName,
		        ref: 'trigger',
		        prefixCls: prefixCls,
		        popup: this.getPopupElement,
		        action: trigger,
		        builtinPlacements: _placements.placements,
		        popupPlacement: placement,
		        popupAlign: align,
		        getPopupContainer: getTooltipContainer,
		        onPopupVisibleChange: onVisibleChange,
		        popupTransitionName: transitionName,
		        popupAnimation: animation,
		        defaultPopupVisible: defaultVisible,
		        destroyPopupOnHide: destroyTooltipOnHide,
		        mouseLeaveDelay: mouseLeaveDelay,
		        popupStyle: overlayStyle,
		        mouseEnterDelay: mouseEnterDelay
		      }, extraProps),
		      children
		    );
		  }
		});
		
		exports["default"] = Tooltip;
		module.exports = exports['default'];
	
	/***/ },
	/* 385 */
	/***/ function(module, exports) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		var autoAdjustOverflow = {
		  adjustX: 1,
		  adjustY: 1
		};
		
		var targetOffset = [0, 0];
		
		var placements = exports.placements = {
		  left: {
		    points: ['cr', 'cl'],
		    overflow: autoAdjustOverflow,
		    offset: [-4, 0],
		    targetOffset: targetOffset
		  },
		  right: {
		    points: ['cl', 'cr'],
		    overflow: autoAdjustOverflow,
		    offset: [4, 0],
		    targetOffset: targetOffset
		  },
		  top: {
		    points: ['bc', 'tc'],
		    overflow: autoAdjustOverflow,
		    offset: [0, -4],
		    targetOffset: targetOffset
		  },
		  bottom: {
		    points: ['tc', 'bc'],
		    overflow: autoAdjustOverflow,
		    offset: [0, 4],
		    targetOffset: targetOffset
		  },
		  topLeft: {
		    points: ['bl', 'tl'],
		    overflow: autoAdjustOverflow,
		    offset: [0, -4],
		    targetOffset: targetOffset
		  },
		  leftTop: {
		    points: ['tr', 'tl'],
		    overflow: autoAdjustOverflow,
		    offset: [-4, 0],
		    targetOffset: targetOffset
		  },
		  topRight: {
		    points: ['br', 'tr'],
		    overflow: autoAdjustOverflow,
		    offset: [0, -4],
		    targetOffset: targetOffset
		  },
		  rightTop: {
		    points: ['tl', 'tr'],
		    overflow: autoAdjustOverflow,
		    offset: [4, 0],
		    targetOffset: targetOffset
		  },
		  bottomRight: {
		    points: ['tr', 'br'],
		    overflow: autoAdjustOverflow,
		    offset: [0, 4],
		    targetOffset: targetOffset
		  },
		  rightBottom: {
		    points: ['bl', 'br'],
		    overflow: autoAdjustOverflow,
		    offset: [4, 0],
		    targetOffset: targetOffset
		  },
		  bottomLeft: {
		    points: ['tl', 'bl'],
		    overflow: autoAdjustOverflow,
		    offset: [0, 4],
		    targetOffset: targetOffset
		  },
		  leftBottom: {
		    points: ['br', 'bl'],
		    overflow: autoAdjustOverflow,
		    offset: [-4, 0],
		    targetOffset: targetOffset
		  }
		};
		
		exports["default"] = placements;
	
	/***/ },
	/* 386 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _reactDom = __webpack_require__(4);
		
		var _reactDom2 = _interopRequireDefault(_reactDom);
		
		var _rcUtil = __webpack_require__(33);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var _objectAssign = __webpack_require__(10);
		
		var _objectAssign2 = _interopRequireDefault(_objectAssign);
		
		var _rcAnimate = __webpack_require__(7);
		
		var _rcAnimate2 = _interopRequireDefault(_rcAnimate);
		
		var _util = __webpack_require__(119);
		
		var _SelectTrigger = __webpack_require__(387);
		
		var _SelectTrigger2 = _interopRequireDefault(_SelectTrigger);
		
		var _TreeNode2 = __webpack_require__(118);
		
		var _TreeNode3 = _interopRequireDefault(_TreeNode2);
		
		function noop() {}
		
		function filterFn(input, child) {
		  return String((0, _util.getPropValue)(child, (0, _util.labelCompatible)(this.props.treeNodeFilterProp))).indexOf(input) > -1;
		}
		
		function saveRef(name, component) {
		  this[name] = component;
		}
		
		function loopTreeData(data) {
		  var level = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];
		
		  return data.map(function (item, index) {
		    var pos = level + '-' + index;
		    var props = {
		      title: item.label,
		      value: item.value || String(item.key || item.label),
		      key: item.key || item.value || pos,
		      disabled: item.disabled || false,
		      selectable: item.hasOwnProperty('selectable') ? item.selectable : true
		    };
		    var ret = undefined;
		    if (item.children && item.children.length) {
		      ret = _react2['default'].createElement(
		        _TreeNode3['default'],
		        props,
		        loopTreeData(item.children, pos)
		      );
		    } else {
		      ret = _react2['default'].createElement(_TreeNode3['default'], _extends({}, props, { isLeaf: item.isLeaf }));
		    }
		    return ret;
		  });
		}
		
		var SHOW_ALL = 'SHOW_ALL';
		var SHOW_PARENT = 'SHOW_PARENT';
		var SHOW_CHILD = 'SHOW_CHILD';
		
		var Select = _react2['default'].createClass({
		  displayName: 'Select',
		
		  propTypes: {
		    children: _react.PropTypes.any,
		    multiple: _react.PropTypes.bool,
		    filterTreeNode: _react.PropTypes.any,
		    showSearch: _react.PropTypes.bool,
		    disabled: _react.PropTypes.bool,
		    showArrow: _react.PropTypes.bool,
		    tags: _react.PropTypes.bool,
		    transitionName: _react.PropTypes.string,
		    animation: _react.PropTypes.string,
		    choiceTransitionName: _react.PropTypes.string,
		    onClick: _react.PropTypes.func,
		    onChange: _react.PropTypes.func,
		    onSelect: _react.PropTypes.func,
		    onDeselect: _react.PropTypes.func,
		    onSearch: _react.PropTypes.func,
		    searchPlaceholder: _react.PropTypes.string,
		    placeholder: _react.PropTypes.any,
		    inputValue: _react.PropTypes.any,
		    value: _react.PropTypes.oneOfType([_react.PropTypes.array, _react.PropTypes.string, _react.PropTypes.object]),
		    defaultValue: _react.PropTypes.oneOfType([_react.PropTypes.array, _react.PropTypes.string, _react.PropTypes.object]),
		    label: _react.PropTypes.any,
		    defaultLabel: _react.PropTypes.any,
		    labelInValue: _react.PropTypes.bool,
		    dropdownStyle: _react.PropTypes.object,
		    drodownPopupAlign: _react.PropTypes.object,
		    onDropdownVisibleChange: _react.PropTypes.func,
		    maxTagTextLength: _react.PropTypes.number,
		    showCheckedStrategy: _react.PropTypes.oneOf([SHOW_ALL, SHOW_PARENT, SHOW_CHILD]),
		    // skipHandleInitValue: PropTypes.bool, // Deprecated (use treeCheckStrictly)
		    treeCheckStrictly: _react.PropTypes.bool,
		    treeIcon: _react.PropTypes.bool,
		    treeLine: _react.PropTypes.bool,
		    treeDefaultExpandAll: _react.PropTypes.bool,
		    treeCheckable: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.node]),
		    treeNodeLabelProp: _react.PropTypes.string,
		    treeNodeFilterProp: _react.PropTypes.string,
		    treeData: _react.PropTypes.array,
		    treeDataSimpleMode: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.object]),
		    loadData: _react.PropTypes.func
		  },
		
		  getDefaultProps: function getDefaultProps() {
		    return {
		      prefixCls: 'rc-tree-select',
		      filterTreeNode: filterFn,
		      showSearch: true,
		      allowClear: false,
		      placeholder: '',
		      searchPlaceholder: '',
		      labelInValue: false,
		      defaultValue: [],
		      inputValue: '',
		      onClick: noop,
		      onChange: noop,
		      onSelect: noop,
		      onDeselect: noop,
		      onSearch: noop,
		      showArrow: true,
		      dropdownMatchSelectWidth: true,
		      dropdownStyle: {},
		      onDropdownVisibleChange: function onDropdownVisibleChange() {
		        return true;
		      },
		      notFoundContent: 'Not Found',
		      showCheckedStrategy: SHOW_CHILD,
		      // skipHandleInitValue: false, // Deprecated (use treeCheckStrictly)
		      treeCheckStrictly: false,
		      treeIcon: false,
		      treeLine: false,
		      treeDataSimpleMode: false,
		      treeDefaultExpandAll: false,
		      treeCheckable: false,
		      treeNodeFilterProp: 'value',
		      treeNodeLabelProp: 'title'
		    };
		  },
		
		  getInitialState: function getInitialState() {
		    var props = this.props;
		    var value = [];
		    if ('value' in props) {
		      value = (0, _util.toArray)(props.value);
		    } else {
		      value = (0, _util.toArray)(props.defaultValue);
		    }
		    // save parsed treeData, for performance (treeData may be very big)
		    this.renderedTreeData = this.renderTreeData();
		    value = this.addLabelToValue(props, value);
		    value = this.getValue(props, value);
		    var inputValue = props.inputValue || '';
		    // if (props.combobox) {
		    //   inputValue = value.length ? String(value[0].value) : '';
		    // }
		    this.saveInputRef = saveRef.bind(this, 'inputInstance');
		    var open = props.open;
		    if (open === undefined) {
		      open = props.defaultOpen;
		    }
		    return {
		      value: value,
		      inputValue: inputValue,
		      open: open,
		      focused: false
		    };
		  },
		
		  componentDidMount: function componentDidMount() {
		    if (this.state.inputValue) {
		      var inputNode = this.getInputDOMNode();
		      if (inputNode && inputNode.value) {
		        inputNode.style.width = '';
		        inputNode.style.width = inputNode.scrollWidth + 'px';
		      }
		    }
		  },
		
		  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
		    if ('value' in nextProps) {
		      if (this._cacheTreeNodesStates !== 'no' && this._savedValue && nextProps.value === this._savedValue) {
		        // 只处理用户直接 在 onChange 里 this.setState({value}); 并且是同一个对象引用。
		        // 后续可以对比对象里边的值。
		        this._cacheTreeNodesStates = true;
		      } else {
		        this._cacheTreeNodesStates = false;
		      }
		      var value = (0, _util.toArray)(nextProps.value);
		      // save parsed treeData, for performance (treeData may be very big)
		      this.renderedTreeData = this.renderTreeData(nextProps);
		      value = this.addLabelToValue(nextProps, value);
		      value = this.getValue(nextProps, value);
		      this.setState({
		        value: value
		      });
		      // if (nextProps.combobox) {
		      //   this.setState({
		      //     inputValue: value.length ? String(value[0].key) : '',
		      //   });
		      // }
		    }
		  },
		
		  componentDidUpdate: function componentDidUpdate() {
		    var state = this.state;
		    var props = this.props;
		    if (state.open && (0, _util.isMultipleOrTags)(props)) {
		      var inputNode = this.getInputDOMNode();
		      if (inputNode.value) {
		        inputNode.style.width = '';
		        inputNode.style.width = inputNode.scrollWidth + 'px';
		      } else {
		        inputNode.style.width = '';
		      }
		    }
		  },
		
		  componentWillUnmount: function componentWillUnmount() {
		    this.clearDelayTimer();
		    if (this.dropdownContainer) {
		      _reactDom2['default'].unmountComponentAtNode(this.dropdownContainer);
		      document.body.removeChild(this.dropdownContainer);
		      this.dropdownContainer = null;
		    }
		  },
		
		  onInputChange: function onInputChange(event) {
		    var val = event.target.value;
		    var props = this.props;
		
		    this.setState({
		      inputValue: val,
		      open: true
		    });
		    // if (isCombobox(props)) {
		    //   this.fireChange([{
		    //     value: val,
		    //   }]);
		    // }
		    props.onSearch(val);
		  },
		
		  onDropdownVisibleChange: function onDropdownVisibleChange(open) {
		    var _this = this;
		
		    // selection inside combobox cause click
		    if (!open && document.activeElement === this.getInputDOMNode()) {}
		    // return;
		
		    // this.setOpenState(open);
		    // 加延时，才能产生动画，什么情况？？
		    setTimeout(function () {
		      if (_this.props.onDropdownVisibleChange(open)) {
		        _this.setOpenState(open);
		      }
		    }, 10);
		  },
		
		  // combobox ignore
		  onKeyDown: function onKeyDown(event) {
		    var props = this.props;
		    if (props.disabled) {
		      return;
		    }
		    var keyCode = event.keyCode;
		    if (this.state.open && !this.getInputDOMNode()) {
		      this.onInputKeyDown(event);
		    } else if (keyCode === _rcUtil.KeyCode.ENTER || keyCode === _rcUtil.KeyCode.DOWN) {
		      this.setOpenState(true);
		      event.preventDefault();
		    }
		  },
		
		  onInputBlur: function onInputBlur() {
		    // if (isMultipleOrTagsOrCombobox(this.props)) {
		    //   return;
		    // }
		    // this.clearDelayTimer();
		    // this.delayTimer = setTimeout(() => {
		    //   this.setOpenState(false);
		    // }, 150);
		  },
		
		  onInputKeyDown: function onInputKeyDown(event) {
		    var props = this.props;
		    if (props.disabled) {
		      return;
		    }
		    var state = this.state;
		    var keyCode = event.keyCode;
		    if ((0, _util.isMultipleOrTags)(props) && !event.target.value && keyCode === _rcUtil.KeyCode.BACKSPACE) {
		      var value = state.value.concat();
		      if (value.length) {
		        var popValue = value.pop();
		        props.onDeselect(this.isLabelInValue() ? popValue : popValue.key);
		        this.fireChange(value);
		      }
		      return;
		    }
		    if (keyCode === _rcUtil.KeyCode.DOWN) {
		      if (!state.open) {
		        this.openIfHasChildren();
		        event.preventDefault();
		        event.stopPropagation();
		        return;
		      }
		    } else if (keyCode === _rcUtil.KeyCode.ESC) {
		      if (state.open) {
		        this.setOpenState(false);
		        event.preventDefault();
		        event.stopPropagation();
		      }
		      return;
		    }
		
		    if (state.open) {
		      // const menu = this.refs.trigger.getPopupEleRefs();
		      // if (menu && menu.onKeyDown(event)) {
		      //   event.preventDefault();
		      //   event.stopPropagation();
		      // }
		    }
		  },
		
		  onSelect: function onSelect(selectedKeys, info) {
		    var _this2 = this;
		
		    if (info.selected === false) {
		      this.onDeselect(info);
		      return;
		    }
		    var item = info.node;
		    var value = this.state.value;
		    var props = this.props;
		    var selectedValue = (0, _util.getValuePropValue)(item);
		    var selectedLabel = this.getLabelFromNode(item);
		    var event = selectedValue;
		    if (this.isLabelInValue()) {
		      event = {
		        value: event,
		        label: selectedLabel
		      };
		    }
		    props.onSelect(event, item, info);
		    var checkEvt = info.event === 'check';
		    if ((0, _util.isMultipleOrTags)(props)) {
		      if (checkEvt) {
		        value = this.getCheckedNodes(info, props).map(function (n) {
		          return {
		            value: (0, _util.getValuePropValue)(n),
		            label: _this2.getLabelFromNode(n)
		          };
		        });
		      } else {
		        if (value.some(function (i) {
		          return i.value === selectedValue;
		        })) {
		          return;
		        }
		        value = value.concat([{
		          value: selectedValue,
		          label: selectedLabel
		        }]);
		      }
		      // if (!checkEvt && value.indexOf(selectedValue) !== -1) {
		      // 设置 multiple 时会有bug。（isValueChange 已有检查，此处注释掉）
		      // return;
		      // }
		    } else {
		        if (value.length && value[0].value === selectedValue) {
		          // this.setOpenState(false, true);
		          this.setOpenState(false);
		          return;
		        }
		        value = [{
		          value: selectedValue,
		          label: selectedLabel
		        }];
		        // this.setOpenState(false, true);
		        this.setOpenState(false);
		      }
		
		    var extraInfo = {
		      triggerValue: selectedValue,
		      triggerNode: item
		    };
		    if (checkEvt) {
		      extraInfo.checked = info.checked;
		      extraInfo.allCheckedNodes = props.treeCheckStrictly ? info.checkedNodes : (0, _util.flatToHierarchy)(info.checkedNodesPositions);
		      this._checkedNodes = info.checkedNodesPositions;
		      var _tree = this.refs.trigger.popupEle;
		      this._treeNodesStates = _tree.checkKeys;
		    } else {
		      extraInfo.selected = info.selected;
		    }
		
		    this.fireChange(value, extraInfo);
		    if (props.inputValue === null) {
		      this.setState({
		        inputValue: ''
		      });
		    }
		    // if (isCombobox(props)) {
		    //   this.setState({
		    //     inputValue: getPropValue(item, props.treeNodeLabelProp),
		    //   });
		    // }
		  },
		
		  onDeselect: function onDeselect(info) {
		    this.removeSelected((0, _util.getValuePropValue)(info.node));
		    if (!(0, _util.isMultipleOrTags)(this.props)) {
		      this.setOpenState(false);
		    }
		    if (this.props.inputValue === null) {
		      this.setState({
		        inputValue: ''
		      });
		    }
		  },
		
		  onPlaceholderClick: function onPlaceholderClick() {
		    this.getInputDOMNode().focus();
		  },
		
		  onOuterFocus: function onOuterFocus() {
		    // 此处会影响展开收起动画，类似问题在 onDropdownVisibleChange 里的 setTimeout 。
		    // this.setState({
		    //   focused: true,
		    // });
		  },
		
		  onOuterBlur: function onOuterBlur() {
		    // 此处会影响展开收起动画，类似问题在 onDropdownVisibleChange 里的 setTimeout 。
		    // this.setState({
		    //   focused: false,
		    // });
		  },
		
		  onClearSelection: function onClearSelection(event) {
		    var props = this.props;
		    var state = this.state;
		    if (props.disabled) {
		      return;
		    }
		    event.stopPropagation();
		    if (state.inputValue || state.value.length) {
		      this.fireChange([]);
		      this.setOpenState(false);
		      if (props.inputValue === null) {
		        this.setState({
		          inputValue: ''
		        });
		      }
		    }
		  },
		
		  getLabelFromNode: function getLabelFromNode(child) {
		    return (0, _util.getPropValue)(child, this.props.treeNodeLabelProp);
		  },
		
		  getLabelFromProps: function getLabelFromProps(props, value) {
		    var _this3 = this;
		
		    if (value === undefined) {
		      return null;
		    }
		    var label = null;
		    (0, _util.loopAllChildren)(this.renderedTreeData || props.children, function (item) {
		      if ((0, _util.getValuePropValue)(item) === value) {
		        label = _this3.getLabelFromNode(item);
		      }
		    });
		    if (label === null) {
		      return value;
		    }
		    return label;
		  },
		
		  getDropdownContainer: function getDropdownContainer() {
		    if (!this.dropdownContainer) {
		      this.dropdownContainer = document.createElement('div');
		      document.body.appendChild(this.dropdownContainer);
		    }
		    return this.dropdownContainer;
		  },
		
		  getSearchPlaceholderElement: function getSearchPlaceholderElement(hidden) {
		    var props = this.props;
		    var placeholder = undefined;
		    if ((0, _util.isMultipleOrTagsOrCombobox)(props)) {
		      placeholder = props.placeholder || props.searchPlaceholder;
		    } else {
		      placeholder = props.searchPlaceholder;
		    }
		    if (placeholder) {
		      return _react2['default'].createElement(
		        'span',
		        {
		          style: { display: hidden ? 'none' : 'block' },
		          onClick: this.onPlaceholderClick,
		          className: props.prefixCls + '-search__field__placeholder'
		        },
		        placeholder
		      );
		    }
		    return null;
		  },
		
		  getInputElement: function getInputElement() {
		    var props = this.props;
		    return _react2['default'].createElement(
		      'span',
		      { className: props.prefixCls + '-search__field__wrap' },
		      _react2['default'].createElement('input', {
		        ref: this.saveInputRef,
		        onBlur: this.onInputBlur,
		        onChange: this.onInputChange,
		        onKeyDown: this.onInputKeyDown,
		        value: this.state.inputValue,
		        disabled: props.disabled,
		        className: props.prefixCls + '-search__field',
		        role: 'textbox'
		      }),
		      (0, _util.isMultipleOrTags)(props) ? null : this.getSearchPlaceholderElement(!!this.state.inputValue)
		    );
		  },
		
		  getInputDOMNode: function getInputDOMNode() {
		    return this.inputInstance;
		  },
		
		  getPopupDOMNode: function getPopupDOMNode() {
		    return this.refs.trigger.getPopupDOMNode();
		  },
		
		  getPopupComponentRefs: function getPopupComponentRefs() {
		    return this.refs.trigger.getPopupEleRefs();
		  },
		
		  getValue: function getValue(_props, val) {
		    var _this4 = this;
		
		    var value = val;
		    if (_props.treeCheckable && _props.treeCheckStrictly) {
		      this.halfCheckedValues = [];
		      value = [];
		      val.forEach(function (i) {
		        if (!i.halfChecked) {
		          value.push(i);
		        } else {
		          _this4.halfCheckedValues.push(i);
		        }
		      });
		    }
		    if (!(_props.treeCheckable && !_props.treeCheckStrictly)) {
		      return value;
		    }
		    var checkedTreeNodes = undefined;
		    if (this._cachetreeData && this._cacheTreeNodesStates && this._checkedNodes) {
		      this.checkedTreeNodes = checkedTreeNodes = this._checkedNodes;
		    } else {
		      // getTreeNodesStates 耗时，做缓存处理。
		      this._treeNodesStates = (0, _util.getTreeNodesStates)(this.renderedTreeData || _props.children, value.map(function (item) {
		        return item.value;
		      }));
		      this.checkedTreeNodes = checkedTreeNodes = this._treeNodesStates.checkedNodes;
		    }
		    var mapLabVal = function mapLabVal(arr) {
		      return arr.map(function (itemObj) {
		        return {
		          value: (0, _util.getValuePropValue)(itemObj.node),
		          label: (0, _util.getPropValue)(itemObj.node, _props.treeNodeLabelProp)
		        };
		      });
		    };
		    var props = this.props;
		    var checkedValues = [];
		    if (props.showCheckedStrategy === SHOW_ALL) {
		      checkedValues = mapLabVal(checkedTreeNodes);
		    } else if (props.showCheckedStrategy === SHOW_PARENT) {
		      (function () {
		        var posArr = (0, _util.filterParentPosition)(checkedTreeNodes.map(function (itemObj) {
		          return itemObj.pos;
		        }));
		        checkedValues = mapLabVal(checkedTreeNodes.filter(function (itemObj) {
		          return posArr.indexOf(itemObj.pos) !== -1;
		        }));
		      })();
		    } else {
		      checkedValues = mapLabVal(checkedTreeNodes.filter(function (itemObj) {
		        return !itemObj.node.props.children;
		      }));
		    }
		    return checkedValues;
		  },
		
		  getCheckedNodes: function getCheckedNodes(info, props) {
		    // TODO treeCheckable does not support tags/dynamic
		    var checkedNodes = info.checkedNodes;
		
		    if (props.treeCheckStrictly) {
		      return checkedNodes;
		    }
		    var checkedNodesPositions = info.checkedNodesPositions;
		    if (props.showCheckedStrategy === SHOW_ALL) {
		      checkedNodes = checkedNodes;
		    } else if (props.showCheckedStrategy === SHOW_PARENT) {
		      (function () {
		        var posArr = (0, _util.filterParentPosition)(checkedNodesPositions.map(function (itemObj) {
		          return itemObj.pos;
		        }));
		        checkedNodes = checkedNodesPositions.filter(function (itemObj) {
		          return posArr.indexOf(itemObj.pos) !== -1;
		        }).map(function (itemObj) {
		          return itemObj.node;
		        });
		      })();
		    } else {
		      checkedNodes = checkedNodes.filter(function (n) {
		        return !n.props.children;
		      });
		    }
		    return checkedNodes;
		  },
		
		  getDeselectedValue: function getDeselectedValue(selectedValue) {
		    var checkedTreeNodes = this.checkedTreeNodes;
		    var unCheckPos = undefined;
		    checkedTreeNodes.forEach(function (itemObj) {
		      if (itemObj.node.props.value === selectedValue) {
		        unCheckPos = itemObj.pos;
		      }
		    });
		    var nArr = unCheckPos.split('-');
		    var newVals = [];
		    var newCkTns = [];
		    checkedTreeNodes.forEach(function (itemObj) {
		      var iArr = itemObj.pos.split('-');
		      if (itemObj.pos === unCheckPos || nArr.length > iArr.length && (0, _util.isInclude)(iArr, nArr) || nArr.length < iArr.length && (0, _util.isInclude)(nArr, iArr)) {
		        // 过滤掉 父级节点 和 所有子节点。
		        // 因为 node节点 不选时，其 父级节点 和 所有子节点 都不选。
		        return;
		      }
		      newCkTns.push(itemObj);
		      newVals.push(itemObj.node.props.value);
		    });
		    this.checkedTreeNodes = this._checkedNodes = newCkTns;
		    var nv = this.state.value.filter(function (val) {
		      return newVals.indexOf(val.value) !== -1;
		    });
		    this.fireChange(nv, { triggerValue: selectedValue, clear: true });
		  },
		
		  setOpenState: function setOpenState(open, needFocus) {
		    var _this5 = this;
		
		    this.clearDelayTimer();
		    var props = this.props;
		    var refs = this.refs;
		
		    // can not optimize, if children is empty
		    // if (this.state.open === open) {
		    //   return;
		    // }
		    this.setState({
		      open: open
		    }, function () {
		      if (needFocus || open) {
		        if (open || (0, _util.isMultipleOrTagsOrCombobox)(props)) {
		          var input = _this5.getInputDOMNode();
		          if (input && document.activeElement !== input) {
		            input.focus();
		          }
		        } else if (refs.selection) {
		          refs.selection.focus();
		        }
		      }
		    });
		  },
		
		  addLabelToValue: function addLabelToValue(props, value_) {
		    var _this6 = this;
		
		    var value = value_;
		    if (this.isLabelInValue()) {
		      value.forEach(function (v, i) {
		        if (Object.prototype.toString.call(value[i]) !== '[object Object]') {
		          value[i] = {
		            value: '',
		            label: ''
		          };
		          return;
		        }
		        v.label = v.label || _this6.getLabelFromProps(props, v.value);
		      });
		    } else {
		      value = value.map(function (v) {
		        return {
		          value: v,
		          label: _this6.getLabelFromProps(props, v)
		        };
		      });
		    }
		    return value;
		  },
		
		  clearDelayTimer: function clearDelayTimer() {
		    if (this.delayTimer) {
		      clearTimeout(this.delayTimer);
		      this.delayTimer = null;
		    }
		  },
		
		  removeSelected: function removeSelected(selectedVal) {
		    var props = this.props;
		    if (props.disabled) {
		      return;
		    }
		    this._cacheTreeNodesStates = 'no';
		    if (props.treeCheckable && (props.showCheckedStrategy === SHOW_ALL || props.showCheckedStrategy === SHOW_PARENT) && !props.treeCheckStrictly) {
		      this.getDeselectedValue(selectedVal);
		      return;
		    }
		    // if (props.treeCheckable) {
		    //   // 在 treeCheckable 时，相当于触发节点的 check(uncheck) 事件，
		    //   // 但假如 dropdown 没展开过，tree 也就没渲染好，触发不了tree内部方法。
		    // }
		    var label = undefined;
		    var value = this.state.value.filter(function (singleValue) {
		      if (singleValue.value === selectedVal) {
		        label = singleValue.label;
		      }
		      return singleValue.value !== selectedVal;
		    });
		    var canMultiple = (0, _util.isMultipleOrTags)(props);
		
		    if (canMultiple) {
		      var _event = selectedVal;
		      if (this.isLabelInValue()) {
		        _event = {
		          value: selectedVal,
		          label: label
		        };
		      }
		      props.onDeselect(_event);
		    }
		    if (props.treeCheckable) {
		      if (this.checkedTreeNodes && this.checkedTreeNodes.length) {
		        this.checkedTreeNodes = this._checkedNodes = this.checkedTreeNodes.filter(function (item) {
		          return value.some(function (i) {
		            return i.value === item.node.props.value;
		          });
		        });
		      }
		    }
		    this.fireChange(value, { triggerValue: selectedVal, clear: true });
		  },
		
		  openIfHasChildren: function openIfHasChildren() {
		    var props = this.props;
		    if (_react2['default'].Children.count(props.children) || (0, _util.isSingleMode)(props)) {
		      this.setOpenState(true);
		    }
		  },
		
		  fireChange: function fireChange(value, extraInfo) {
		    var _this7 = this;
		
		    var props = this.props;
		    if (!('value' in props)) {
		      this.setState({
		        value: value
		      });
		    }
		    var vals = value.map(function (i) {
		      return i.value;
		    });
		    var sv = this.state.value.map(function (i) {
		      return i.value;
		    });
		    if (vals.length !== sv.length || !vals.every(function (val, index) {
		      return sv[index] === val;
		    })) {
		      (function () {
		        var ex = { preValue: [].concat(_toConsumableArray(_this7.state.value)) };
		        if (extraInfo) {
		          (0, _objectAssign2['default'])(ex, extraInfo);
		        }
		        var labs = null;
		        var vls = value;
		        if (!_this7.isLabelInValue()) {
		          labs = value.map(function (i) {
		            return i.label;
		          });
		          vls = vls.map(function (v) {
		            return v.value;
		          });
		        } else if (_this7.halfCheckedValues && _this7.halfCheckedValues.length) {
		          _this7.halfCheckedValues.forEach(function (i) {
		            if (!vls.some(function (v) {
		              return v.value === i.value;
		            })) {
		              vls.push(i);
		            }
		          });
		        }
		        if (ex.clear && props.treeCheckable) {
		          var treeData = _this7.renderedTreeData || props.children;
		          ex.allCheckedNodes = (0, _util.flatToHierarchy)((0, _util.filterAllCheckedData)(vals, treeData));
		        }
		        _this7._savedValue = (0, _util.isMultipleOrTags)(props) ? vls : vls[0];
		        props.onChange(_this7._savedValue, labs, ex);
		      })();
		    }
		  },
		
		  isLabelInValue: function isLabelInValue() {
		    var _props2 = this.props;
		    var treeCheckable = _props2.treeCheckable;
		    var treeCheckStrictly = _props2.treeCheckStrictly;
		    var labelInValue = _props2.labelInValue;
		
		    if (treeCheckable && treeCheckStrictly) {
		      return true;
		    }
		    return labelInValue || false;
		  },
		
		  renderTopControlNode: function renderTopControlNode() {
		    var _this8 = this;
		
		    var value = this.state.value;
		
		    var props = this.props;
		    var choiceTransitionName = props.choiceTransitionName;
		    var prefixCls = props.prefixCls;
		    var maxTagTextLength = props.maxTagTextLength;
		
		    // single and not combobox, input is inside dropdown
		    if ((0, _util.isSingleMode)(props)) {
		      var innerNode = _react2['default'].createElement(
		        'span',
		        {
		          key: 'placeholder',
		          className: prefixCls + '-selection__placeholder'
		        },
		        props.placeholder
		      );
		      if (value.length) {
		        innerNode = _react2['default'].createElement(
		          'span',
		          { key: 'value' },
		          value[0].label
		        );
		      }
		      return _react2['default'].createElement(
		        'span',
		        { className: prefixCls + '-selection__rendered' },
		        innerNode
		      );
		    }
		
		    var selectedValueNodes = [];
		    if ((0, _util.isMultipleOrTags)(props)) {
		      selectedValueNodes = value.map(function (singleValue) {
		        var content = singleValue.label;
		        var title = content;
		        if (maxTagTextLength && typeof content === 'string' && content.length > maxTagTextLength) {
		          content = content.slice(0, maxTagTextLength) + '...';
		        }
		        return _react2['default'].createElement(
		          'li',
		          _extends({
		            style: _util.UNSELECTABLE_STYLE
		          }, _util.UNSELECTABLE_ATTRIBUTE, {
		            onMouseDown: _util.preventDefaultEvent,
		            className: prefixCls + '-selection__choice',
		            key: singleValue.value,
		            title: title
		          }),
		          _react2['default'].createElement('span', {
		            className: prefixCls + '-selection__choice__remove',
		            onClick: _this8.removeSelected.bind(_this8, singleValue.value)
		          }),
		          _react2['default'].createElement(
		            'span',
		            { className: prefixCls + '-selection__choice__content' },
		            content
		          )
		        );
		      });
		    }
		    selectedValueNodes.push(_react2['default'].createElement(
		      'li',
		      {
		        className: prefixCls + '-search ' + prefixCls + '-search--inline',
		        key: '__input'
		      },
		      this.getInputElement()
		    ));
		    var className = prefixCls + '-selection__rendered';
		    if ((0, _util.isMultipleOrTags)(props) && choiceTransitionName) {
		      return _react2['default'].createElement(
		        _rcAnimate2['default'],
		        {
		          className: className,
		          component: 'ul',
		          transitionName: choiceTransitionName
		        },
		        selectedValueNodes
		      );
		    }
		    return _react2['default'].createElement(
		      'ul',
		      { className: className },
		      selectedValueNodes
		    );
		  },
		
		  renderTreeData: function renderTreeData(props) {
		    var validProps = props || this.props;
		    if (validProps.treeData) {
		      if (props && props.treeData === this.props.treeData && this.renderedTreeData) {
		        // cache and use pre data.
		        this._cachetreeData = true;
		        return this.renderedTreeData;
		      }
		      this._cachetreeData = false;
		      var treeData = validProps.treeData;
		      // process treeDataSimpleMode
		      if (validProps.treeDataSimpleMode) {
		        var simpleFormat = {
		          id: 'id',
		          pId: 'pId',
		          rootPId: null
		        };
		        if (Object.prototype.toString.call(validProps.treeDataSimpleMode) === '[object Object]') {
		          (0, _objectAssign2['default'])(simpleFormat, validProps.treeDataSimpleMode);
		        }
		        treeData = (0, _util.processSimpleTreeData)(validProps.treeData, simpleFormat);
		      }
		      return loopTreeData(treeData);
		    }
		  },
		
		  render: function render() {
		    var _rootCls;
		
		    var props = this.props;
		    var multiple = (0, _util.isMultipleOrTags)(props);
		    var state = this.state;
		    var className = props.className;
		    var disabled = props.disabled;
		    var allowClear = props.allowClear;
		    var prefixCls = props.prefixCls;
		
		    var ctrlNode = this.renderTopControlNode();
		    var extraSelectionProps = {};
		    if (!(0, _util.isMultipleOrTagsOrCombobox)(props)) {
		      extraSelectionProps = {
		        onKeyDown: this.onKeyDown,
		        tabIndex: 0
		      };
		    }
		    var rootCls = (_rootCls = {}, _defineProperty(_rootCls, className, !!className), _defineProperty(_rootCls, prefixCls, 1), _defineProperty(_rootCls, prefixCls + '-open', state.open), _defineProperty(_rootCls, prefixCls + '-focused', state.open || state.focused), _defineProperty(_rootCls, prefixCls + '-disabled', disabled), _defineProperty(_rootCls, prefixCls + '-enabled', !disabled), _rootCls);
		
		    var clear = _react2['default'].createElement('span', {
		      key: 'clear',
		      className: prefixCls + '-selection__clear',
		      onClick: this.onClearSelection
		    });
		    return _react2['default'].createElement(
		      _SelectTrigger2['default'],
		      _extends({}, props, {
		        treeNodes: props.children,
		        treeData: this.renderedTreeData,
		        _cachetreeData: this._cachetreeData,
		        _treeNodesStates: this._treeNodesStates,
		        halfCheckedValues: this.halfCheckedValues,
		        multiple: multiple,
		        disabled: disabled,
		        visible: state.open,
		        inputValue: state.inputValue,
		        _inputValue: props.inputValue === null,
		        inputElement: this.getInputElement(),
		        value: state.value,
		        onDropdownVisibleChange: this.onDropdownVisibleChange,
		        onSelect: this.onSelect,
		        ref: 'trigger'
		      }),
		      _react2['default'].createElement(
		        'span',
		        {
		          style: props.style,
		          onClick: props.onClick,
		          onBlur: this.onOuterBlur,
		          onFocus: this.onOuterFocus,
		          className: (0, _classnames2['default'])(rootCls)
		        },
		        _react2['default'].createElement(
		          'span',
		          _extends({
		            ref: 'selection',
		            key: 'selection',
		            className: prefixCls + '-selection\n            ' + prefixCls + '-selection--' + (multiple ? 'multiple' : 'single'),
		            role: 'combobox',
		            'aria-autocomplete': 'list',
		            'aria-haspopup': 'true',
		            'aria-expanded': state.open
		          }, extraSelectionProps),
		          ctrlNode,
		          allowClear && !multiple ? clear : null,
		          multiple || !props.showArrow ? null : _react2['default'].createElement(
		            'span',
		            {
		              key: 'arrow',
		              className: prefixCls + '-arrow',
		              style: { outline: 'none' }
		            },
		            _react2['default'].createElement('b', null)
		          ),
		          multiple ? this.getSearchPlaceholderElement(!!this.state.inputValue || this.state.value.length) : null
		        )
		      )
		    );
		  }
		});
		
		Select.SHOW_ALL = SHOW_ALL;
		Select.SHOW_PARENT = SHOW_PARENT;
		Select.SHOW_CHILD = SHOW_CHILD;
		
		exports['default'] = Select;
		module.exports = exports['default'];
		/* isCombobox,*/
		
		// [`${prefixCls}-combobox`]: isCombobox(props),
	
	/***/ },
	/* 387 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _reactDom = __webpack_require__(4);
		
		var _reactDom2 = _interopRequireDefault(_reactDom);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var _rcTrigger = __webpack_require__(17);
		
		var _rcTrigger2 = _interopRequireDefault(_rcTrigger);
		
		var _rcTree = __webpack_require__(120);
		
		var _rcTree2 = _interopRequireDefault(_rcTree);
		
		var _util = __webpack_require__(119);
		
		var _rcUtil = __webpack_require__(33);
		
		var _rcUtil2 = _interopRequireDefault(_rcUtil);
		
		var BUILT_IN_PLACEMENTS = {
		  bottomLeft: {
		    points: ['tl', 'bl'],
		    offset: [0, 4],
		    overflow: {
		      adjustX: 0,
		      adjustY: 1
		    }
		  },
		  topLeft: {
		    points: ['bl', 'tl'],
		    offset: [0, -4],
		    overflow: {
		      adjustX: 0,
		      adjustY: 1
		    }
		  }
		};
		
		var SelectTrigger = _react2['default'].createClass({
		  displayName: 'SelectTrigger',
		
		  propTypes: {
		    dropdownMatchSelectWidth: _react.PropTypes.bool,
		    dropdownPopupAlign: _react.PropTypes.object,
		    visible: _react.PropTypes.bool,
		    filterTreeNode: _react.PropTypes.any,
		    treeNodes: _react.PropTypes.any,
		    inputValue: _react.PropTypes.string,
		    _inputValue: _react.PropTypes.bool,
		    prefixCls: _react.PropTypes.string,
		    popupClassName: _react.PropTypes.string,
		    children: _react.PropTypes.any
		  },
		
		  getInitialState: function getInitialState() {
		    return {
		      _expandedKeys: [],
		      fireOnExpand: false
		    };
		  },
		
		  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
		    if (nextProps.inputValue && nextProps.inputValue !== this.props.inputValue) {
		      // set autoExpandParent to true
		      this.setState({
		        _expandedKeys: [],
		        fireOnExpand: false
		      });
		    }
		  },
		
		  componentDidUpdate: function componentDidUpdate() {
		    if (this.props.dropdownMatchSelectWidth && this.props.visible) {
		      var dropdownDOMNode = this.getPopupDOMNode();
		      if (dropdownDOMNode) {
		        dropdownDOMNode.style.width = _reactDom2['default'].findDOMNode(this).offsetWidth + 'px';
		      }
		    }
		  },
		
		  onExpand: function onExpand(expandedKeys) {
		    // rerender
		    this.setState({
		      _expandedKeys: expandedKeys,
		      fireOnExpand: true
		    });
		  },
		
		  getPopupEleRefs: function getPopupEleRefs() {
		    return this.popupEle && this.popupEle.refs;
		  },
		
		  getPopupDOMNode: function getPopupDOMNode() {
		    return this.refs.trigger.getPopupDomNode();
		  },
		
		  getDropdownTransitionName: function getDropdownTransitionName() {
		    var props = this.props;
		    var transitionName = props.transitionName;
		    if (!transitionName && props.animation) {
		      transitionName = this.getDropdownPrefixCls() + '-' + props.animation;
		    }
		    return transitionName;
		  },
		
		  getDropdownPrefixCls: function getDropdownPrefixCls() {
		    return this.props.prefixCls + '-dropdown';
		  },
		
		  highlightTreeNode: function highlightTreeNode(treeNode) {
		    var props = this.props;
		    var filterVal = treeNode.props[(0, _util.labelCompatible)(props.treeNodeFilterProp)];
		    if (typeof filterVal === 'string') {
		      return props.inputValue && filterVal.indexOf(props.inputValue) > -1;
		    }
		    return false;
		  },
		
		  filterTreeNode: function filterTreeNode(input, child) {
		    if (!input) {
		      return true;
		    }
		    var filterTreeNode = this.props.filterTreeNode;
		    if (!filterTreeNode) {
		      return true;
		    }
		    if (child.props.disabled) {
		      return false;
		    }
		    return filterTreeNode.call(this, input, child);
		  },
		
		  savePopupElement: function savePopupElement(ele) {
		    this.popupEle = ele;
		  },
		
		  processTreeNode: function processTreeNode(treeNodes) {
		    var _this = this;
		
		    var filterPoss = [];
		    this._expandedKeys = [];
		    (0, _util.loopAllChildren)(treeNodes, function (child, index, pos) {
		      if (_this.filterTreeNode(_this.props.inputValue, child)) {
		        filterPoss.push(pos);
		        _this._expandedKeys.push(child.key);
		      }
		    });
		
		    // 把筛选节点的父节点（如果未筛选到）包含进来
		    var processedPoss = [];
		    filterPoss.forEach(function (pos) {
		      var arr = pos.split('-');
		      arr.reduce(function (pre, cur) {
		        var res = pre + '-' + cur;
		        if (processedPoss.indexOf(res) < 0) {
		          processedPoss.push(res);
		        }
		        return res;
		      });
		    });
		    var filterNodesPositions = [];
		    (0, _util.loopAllChildren)(treeNodes, function (child, index, pos) {
		      if (processedPoss.indexOf(pos) > -1) {
		        filterNodesPositions.push({ node: child, pos: pos });
		      }
		    });
		
		    var hierarchyNodes = (0, _util.flatToHierarchy)(filterNodesPositions);
		
		    var recursive = function recursive(children) {
		      return children.map(function (child) {
		        if (child.children) {
		          return _react2['default'].cloneElement(child.node, {}, recursive(child.children));
		        }
		        return child.node;
		      });
		    };
		    return recursive(hierarchyNodes);
		  },
		
		  renderTree: function renderTree(keys, halfCheckedKeys, newTreeNodes, multiple) {
		    var props = this.props;
		
		    var trProps = {
		      multiple: multiple,
		      prefixCls: props.prefixCls + '-tree',
		      showIcon: props.treeIcon,
		      showLine: props.treeLine,
		      defaultExpandAll: props.treeDefaultExpandAll,
		      filterTreeNode: this.highlightTreeNode
		    };
		
		    if (props.treeCheckable) {
		      if (!props.inputValue || props._inputValue) {
		        trProps._treeNodesStates = props._treeNodesStates;
		      }
		      trProps.selectable = false;
		      trProps.checkable = props.treeCheckable;
		      trProps.checkStrictly = props.treeCheckStrictly;
		      trProps.onCheck = props.onSelect;
		      if (props.treeCheckStrictly && halfCheckedKeys.length) {
		        trProps.checkedKeys = { checked: keys, halfChecked: halfCheckedKeys };
		      } else {
		        trProps.checkedKeys = keys;
		      }
		    } else {
		      trProps.selectedKeys = keys;
		      trProps.onSelect = props.onSelect;
		    }
		
		    // expand keys
		    if (!trProps.defaultExpandAll && !props.loadData) {
		      trProps.expandedKeys = keys;
		    }
		    trProps.autoExpandParent = true;
		    trProps.onExpand = this.onExpand;
		    if (this._expandedKeys && this._expandedKeys.length) {
		      trProps.expandedKeys = this._expandedKeys;
		    }
		    if (this.state.fireOnExpand) {
		      trProps.expandedKeys = this.state._expandedKeys;
		      trProps.autoExpandParent = false;
		    }
		
		    // async loadData
		    if (props.loadData) {
		      trProps.loadData = props.loadData;
		    }
		
		    return _react2['default'].createElement(
		      _rcTree2['default'],
		      _extends({ ref: this.savePopupElement }, trProps),
		      newTreeNodes
		    );
		  },
		  render: function render() {
		    var _popupClassName;
		
		    var props = this.props;
		    var multiple = props.multiple;
		    var dropdownPrefixCls = this.getDropdownPrefixCls();
		    var popupClassName = (_popupClassName = {}, _defineProperty(_popupClassName, props.dropdownClassName, !!props.dropdownClassName), _defineProperty(_popupClassName, dropdownPrefixCls + '--' + (multiple ? 'multiple' : 'single'), 1), _popupClassName);
		    var visible = props.visible;
		    var search = multiple || props.combobox || !props.showSearch ? null : _react2['default'].createElement(
		      'span',
		      { className: dropdownPrefixCls + '-search' },
		      props.inputElement
		    );
		
		    var recursive = function recursive(children) {
		      // 注意: 如果用 React.Children.map 遍历，key 会被修改掉。
		      return _rcUtil2['default'].Children.toArray(children).map(function (child) {
		        if (child && child.props.children) {
		          // null or String has no Prop
		          return _react2['default'].createElement(
		            _rcTree.TreeNode,
		            _extends({}, child.props, { key: child.key }),
		            recursive(child.props.children)
		          );
		        }
		        return _react2['default'].createElement(_rcTree.TreeNode, _extends({}, child.props, { key: child.key }));
		      });
		    };
		    // const s = Date.now();
		    var treeNodes = undefined;
		    if (props._cachetreeData && this.treeNodes) {
		      treeNodes = this.treeNodes;
		    } else {
		      treeNodes = recursive(props.treeData || props.treeNodes);
		      this.treeNodes = treeNodes;
		    }
		    // console.log(Date.now()-s);
		
		    if (props.inputValue) {
		      treeNodes = this.processTreeNode(treeNodes);
		    }
		
		    var keys = [];
		    var halfCheckedKeys = [];
		    (0, _util.loopAllChildren)(treeNodes, function (child) {
		      if (props.value.some(function (item) {
		        return item.value === (0, _util.getValuePropValue)(child);
		      })) {
		        keys.push(child.key);
		      }
		      if (props.halfCheckedValues && props.halfCheckedValues.some(function (item) {
		        return item.value === (0, _util.getValuePropValue)(child);
		      })) {
		        halfCheckedKeys.push(child.key);
		      }
		    });
		
		    var notFoundContent = undefined;
		    if (!treeNodes.length) {
		      if (props.notFoundContent) {
		        notFoundContent = _react2['default'].createElement(
		          'span',
		          { className: props.prefixCls + '-not-found' },
		          props.notFoundContent
		        );
		      } else if (!search) {
		        visible = false;
		      }
		    }
		    var popupElement = _react2['default'].createElement(
		      'div',
		      null,
		      search,
		      notFoundContent ? notFoundContent : this.renderTree(keys, halfCheckedKeys, treeNodes, multiple)
		    );
		
		    return _react2['default'].createElement(
		      _rcTrigger2['default'],
		      {
		        action: props.disabled ? [] : ['click'],
		        ref: 'trigger',
		        popupPlacement: 'bottomLeft',
		        builtinPlacements: BUILT_IN_PLACEMENTS,
		        popupAlign: this.props.dropdownPopupAlign,
		        prefixCls: dropdownPrefixCls,
		        popupTransitionName: this.getDropdownTransitionName(),
		        onPopupVisibleChange: props.onDropdownVisibleChange,
		        popup: popupElement,
		        popupVisible: visible,
		        popupClassName: (0, _classnames2['default'])(popupClassName),
		        popupStyle: props.dropdownStyle
		      },
		      this.props.children
		    );
		  }
		});
		
		exports['default'] = SelectTrigger;
		module.exports = exports['default'];
	
	/***/ },
	/* 388 */
	/***/ function(module, exports, __webpack_require__) {
	
		// export this package's api
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		var _Select = __webpack_require__(386);
		
		var _Select2 = _interopRequireDefault(_Select);
		
		var _TreeNode = __webpack_require__(118);
		
		var _TreeNode2 = _interopRequireDefault(_TreeNode);
		
		_Select2['default'].TreeNode = _TreeNode2['default'];
		exports['default'] = _Select2['default'];
		module.exports = exports['default'];
	
	/***/ },
	/* 389 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
		
		var _get = function get(_x2, _x3, _x4) { var _again = true; _function: while (_again) { var object = _x2, property = _x3, receiver = _x4; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x2 = parent; _x3 = property; _x4 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _objectAssign = __webpack_require__(10);
		
		var _objectAssign2 = _interopRequireDefault(_objectAssign);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var _util = __webpack_require__(121);
		
		function noop() {}
		
		var Tree = (function (_React$Component) {
		  _inherits(Tree, _React$Component);
		
		  function Tree(props) {
		    var _this = this;
		
		    _classCallCheck(this, Tree);
		
		    _get(Object.getPrototypeOf(Tree.prototype), 'constructor', this).call(this, props);
		    ['onKeyDown', 'onCheck'].forEach(function (m) {
		      _this[m] = _this[m].bind(_this);
		    });
		    this.contextmenuKeys = [];
		    this.checkedKeysChange = true;
		
		    this.state = {
		      expandedKeys: this.getDefaultExpandedKeys(props),
		      checkedKeys: this.getDefaultCheckedKeys(props),
		      selectedKeys: this.getDefaultSelectedKeys(props),
		      dragNodesKeys: '',
		      dragOverNodeKey: '',
		      dropNodeKey: ''
		    };
		  }
		
		  _createClass(Tree, [{
		    key: 'componentWillReceiveProps',
		    value: function componentWillReceiveProps(nextProps) {
		      var expandedKeys = this.getDefaultExpandedKeys(nextProps, true);
		      var checkedKeys = this.getDefaultCheckedKeys(nextProps, true);
		      var selectedKeys = this.getDefaultSelectedKeys(nextProps, true);
		      var st = {};
		      if (expandedKeys) {
		        st.expandedKeys = expandedKeys;
		      }
		      if (checkedKeys) {
		        if (nextProps.checkedKeys === this.props.checkedKeys) {
		          this.checkedKeysChange = false;
		        } else {
		          this.checkedKeysChange = true;
		        }
		        st.checkedKeys = checkedKeys;
		      }
		      if (selectedKeys) {
		        st.selectedKeys = selectedKeys;
		      }
		      this.setState(st);
		    }
		  }, {
		    key: 'onDragStart',
		    value: function onDragStart(e, treeNode) {
		      this.dragNode = treeNode;
		      this.dragNodesKeys = this.getDragNodes(treeNode);
		      var st = {
		        dragNodesKeys: this.dragNodesKeys
		      };
		      var expandedKeys = this.getExpandedKeys(treeNode, false);
		      if (expandedKeys) {
		        // Controlled expand, save and then reset
		        this.getRawExpandedKeys();
		        st.expandedKeys = expandedKeys;
		      }
		      this.setState(st);
		      this.props.onDragStart({
		        event: e,
		        node: treeNode
		      });
		    }
		  }, {
		    key: 'onDragEnterGap',
		    value: function onDragEnterGap(e, treeNode) {
		      var offsetTop = (0, _util.getOffset)(treeNode.refs.selectHandle).top;
		      var offsetHeight = treeNode.refs.selectHandle.offsetHeight;
		      var pageY = e.pageY;
		      var gapHeight = 2;
		      if (pageY > offsetTop + offsetHeight - gapHeight) {
		        this.dropPosition = 1;
		        return 1;
		      }
		      if (pageY < offsetTop + gapHeight) {
		        this.dropPosition = -1;
		        return -1;
		      }
		      this.dropPosition = 0;
		      return 0;
		    }
		  }, {
		    key: 'onDragEnter',
		    value: function onDragEnter(e, treeNode) {
		      var enterGap = this.onDragEnterGap(e, treeNode);
		      if (this.dragNode.props.eventKey === treeNode.props.eventKey && enterGap === 0) {
		        this.setState({
		          dragOverNodeKey: ''
		        });
		        return;
		      }
		      var st = {
		        dragOverNodeKey: treeNode.props.eventKey
		      };
		      var expandedKeys = this.getExpandedKeys(treeNode, true);
		      if (expandedKeys) {
		        this.getRawExpandedKeys();
		        st.expandedKeys = expandedKeys;
		      }
		      this.setState(st);
		      this.props.onDragEnter({
		        event: e,
		        node: treeNode,
		        expandedKeys: expandedKeys && [].concat(_toConsumableArray(expandedKeys)) || [].concat(_toConsumableArray(this.state.expandedKeys))
		      });
		    }
		  }, {
		    key: 'onDragOver',
		    value: function onDragOver(e, treeNode) {
		      this.props.onDragOver({ event: e, node: treeNode });
		    }
		  }, {
		    key: 'onDragLeave',
		    value: function onDragLeave(e, treeNode) {
		      this.props.onDragLeave({ event: e, node: treeNode });
		    }
		  }, {
		    key: 'onDrop',
		    value: function onDrop(e, treeNode) {
		      var key = treeNode.props.eventKey;
		      this.setState({
		        dragOverNodeKey: '',
		        dropNodeKey: key
		      });
		      if (this.dragNodesKeys.indexOf(key) > -1) {
		        if (console.warn) {
		          console.warn('can not drop to dragNode(include it\'s children node)');
		        }
		        return false;
		      }
		
		      var posArr = treeNode.props.pos.split('-');
		      var res = {
		        event: e,
		        node: treeNode,
		        dragNode: this.dragNode,
		        dragNodesKeys: [].concat(_toConsumableArray(this.dragNodesKeys)),
		        dropPosition: this.dropPosition + Number(posArr[posArr.length - 1])
		      };
		      if (this.dropPosition !== 0) {
		        res.dropToGap = true;
		      }
		      if ('expandedKeys' in this.props) {
		        res.rawExpandedKeys = [].concat(_toConsumableArray(this._rawExpandedKeys)) || [].concat(_toConsumableArray(this.state.expandedKeys));
		      }
		      this.props.onDrop(res);
		    }
		  }, {
		    key: 'onExpand',
		    value: function onExpand(treeNode) {
		      var _this2 = this;
		
		      var expanded = !treeNode.props.expanded;
		      var controlled = ('expandedKeys' in this.props);
		      var expandedKeys = [].concat(_toConsumableArray(this.state.expandedKeys));
		      var index = expandedKeys.indexOf(treeNode.props.eventKey);
		      if (expanded && index === -1) {
		        expandedKeys.push(treeNode.props.eventKey);
		      } else if (!expanded && index > -1) {
		        expandedKeys.splice(index, 1);
		      }
		      if (!controlled) {
		        this.setState({ expandedKeys: expandedKeys });
		      }
		      this.props.onExpand(expandedKeys, { node: treeNode, expanded: expanded });
		
		      // after data loaded, need set new expandedKeys
		      if (expanded && this.props.loadData) {
		        return this.props.loadData(treeNode).then(function () {
		          if (!controlled) {
		            _this2.setState({ expandedKeys: expandedKeys });
		          }
		        });
		      }
		    }
		  }, {
		    key: 'onCheck',
		    value: function onCheck(treeNode) {
		      var _this3 = this;
		
		      var checked = !treeNode.props.checked;
		      if (treeNode.props.halfChecked) {
		        checked = true;
		      }
		      var key = treeNode.props.eventKey;
		      var checkedKeys = [].concat(_toConsumableArray(this.state.checkedKeys));
		      var index = checkedKeys.indexOf(key);
		
		      var newSt = {
		        event: 'check',
		        node: treeNode,
		        checked: checked
		      };
		
		      if (this.props.checkStrictly && 'checkedKeys' in this.props) {
		        if (checked && index === -1) {
		          checkedKeys.push(key);
		        }
		        if (!checked && index > -1) {
		          checkedKeys.splice(index, 1);
		        }
		        newSt.checkedNodes = [];
		        (0, _util.loopAllChildren)(this.props.children, function (item, ind, pos, keyOrPos) {
		          if (checkedKeys.indexOf(keyOrPos) !== -1) {
		            newSt.checkedNodes.push(item);
		          }
		        });
		        this.props.onCheck((0, _util.getStrictlyValue)(checkedKeys, this.props.checkedKeys.halfChecked), newSt);
		      } else {
		        if (checked && index === -1) {
		          (function () {
		            _this3.treeNodesStates[treeNode.props.pos].checked = true;
		            var checkedPositions = [];
		            Object.keys(_this3.treeNodesStates).forEach(function (i) {
		              if (_this3.treeNodesStates[i].checked) {
		                checkedPositions.push(i);
		              }
		            });
		            (0, _util.handleCheckState)(_this3.treeNodesStates, (0, _util.filterParentPosition)(checkedPositions), true);
		          })();
		        }
		        if (!checked) {
		          this.treeNodesStates[treeNode.props.pos].checked = false;
		          this.treeNodesStates[treeNode.props.pos].halfChecked = false;
		          (0, _util.handleCheckState)(this.treeNodesStates, [treeNode.props.pos], false);
		        }
		        var checkKeys = (0, _util.getCheck)(this.treeNodesStates);
		        newSt.checkedNodes = checkKeys.checkedNodes;
		        newSt.checkedNodesPositions = checkKeys.checkedNodesPositions;
		        this.checkKeys = checkKeys;
		
		        this._checkedKeys = checkedKeys = checkKeys.checkedKeys;
		        if (!('checkedKeys' in this.props)) {
		          this.setState({
		            checkedKeys: checkedKeys
		          });
		        }
		        this.props.onCheck(checkedKeys, newSt);
		      }
		    }
		  }, {
		    key: 'onSelect',
		    value: function onSelect(treeNode) {
		      var props = this.props;
		      var selectedKeys = [].concat(_toConsumableArray(this.state.selectedKeys));
		      var eventKey = treeNode.props.eventKey;
		      var index = selectedKeys.indexOf(eventKey);
		      var selected = undefined;
		      if (index !== -1) {
		        selected = false;
		        selectedKeys.splice(index, 1);
		      } else {
		        selected = true;
		        if (!props.multiple) {
		          selectedKeys.length = 0;
		        }
		        selectedKeys.push(eventKey);
		      }
		      var selectedNodes = [];
		      if (selectedKeys.length) {
		        (0, _util.loopAllChildren)(this.props.children, function (item) {
		          if (selectedKeys.indexOf(item.key) !== -1) {
		            selectedNodes.push(item);
		          }
		        });
		      }
		      var newSt = {
		        event: 'select',
		        node: treeNode,
		        selected: selected,
		        selectedNodes: selectedNodes
		      };
		      if (!('selectedKeys' in this.props)) {
		        this.setState({
		          selectedKeys: selectedKeys
		        });
		      }
		      props.onSelect(selectedKeys, newSt);
		    }
		  }, {
		    key: 'onMouseEnter',
		    value: function onMouseEnter(e, treeNode) {
		      this.props.onMouseEnter({ event: e, node: treeNode });
		    }
		  }, {
		    key: 'onMouseLeave',
		    value: function onMouseLeave(e, treeNode) {
		      this.props.onMouseLeave({ event: e, node: treeNode });
		    }
		  }, {
		    key: 'onContextMenu',
		    value: function onContextMenu(e, treeNode) {
		      var selectedKeys = [].concat(_toConsumableArray(this.state.selectedKeys));
		      var eventKey = treeNode.props.eventKey;
		      if (this.contextmenuKeys.indexOf(eventKey) === -1) {
		        this.contextmenuKeys.push(eventKey);
		      }
		      this.contextmenuKeys.forEach(function (key) {
		        var index = selectedKeys.indexOf(key);
		        if (index !== -1) {
		          selectedKeys.splice(index, 1);
		        }
		      });
		      if (selectedKeys.indexOf(eventKey) === -1) {
		        selectedKeys.push(eventKey);
		      }
		      this.setState({
		        selectedKeys: selectedKeys
		      });
		      this.props.onRightClick({ event: e, node: treeNode });
		    }
		
		    // all keyboard events callbacks run from here at first
		  }, {
		    key: 'onKeyDown',
		    value: function onKeyDown(e) {
		      e.preventDefault();
		    }
		  }, {
		    key: 'getFilterExpandedKeys',
		    value: function getFilterExpandedKeys(props, expandKeyProp, expandAll) {
		      var keys = props[expandKeyProp];
		      var expandedPositionArr = [];
		      if (props.autoExpandParent) {
		        (0, _util.loopAllChildren)(props.children, function (item, index, pos, newKey) {
		          if (keys.indexOf(newKey) > -1) {
		            expandedPositionArr.push(pos);
		          }
		        });
		      }
		      var filterExpandedKeys = [];
		      (0, _util.loopAllChildren)(props.children, function (item, index, pos, newKey) {
		        if (expandAll) {
		          filterExpandedKeys.push(newKey);
		        } else if (props.autoExpandParent) {
		          expandedPositionArr.forEach(function (p) {
		            if ((p.split('-').length > pos.split('-').length && (0, _util.isInclude)(pos.split('-'), p.split('-')) || pos === p) && filterExpandedKeys.indexOf(newKey) === -1) {
		              filterExpandedKeys.push(newKey);
		            }
		          });
		        }
		      });
		      return filterExpandedKeys.length ? filterExpandedKeys : keys;
		    }
		  }, {
		    key: 'getDefaultExpandedKeys',
		    value: function getDefaultExpandedKeys(props, willReceiveProps) {
		      var expandedKeys = willReceiveProps ? undefined : this.getFilterExpandedKeys(props, 'defaultExpandedKeys', props.defaultExpandAll);
		      if ('expandedKeys' in props) {
		        expandedKeys = (props.autoExpandParent ? this.getFilterExpandedKeys(props, 'expandedKeys', false) : props.expandedKeys) || [];
		      }
		      return expandedKeys;
		    }
		  }, {
		    key: 'getDefaultCheckedKeys',
		    value: function getDefaultCheckedKeys(props, willReceiveProps) {
		      var checkedKeys = willReceiveProps ? undefined : props.defaultCheckedKeys;
		      if ('checkedKeys' in props) {
		        checkedKeys = props.checkedKeys || [];
		        if (props.checkStrictly) {
		          if (props.checkedKeys.checked) {
		            checkedKeys = props.checkedKeys.checked;
		          } else if (!Array.isArray(props.checkedKeys)) {
		            checkedKeys = [];
		          }
		        }
		      }
		      return checkedKeys;
		    }
		  }, {
		    key: 'getDefaultSelectedKeys',
		    value: function getDefaultSelectedKeys(props, willReceiveProps) {
		      var getKeys = function getKeys(keys) {
		        if (props.multiple) {
		          return [].concat(_toConsumableArray(keys));
		        }
		        if (keys.length) {
		          return [keys[0]];
		        }
		        return keys;
		      };
		      var selectedKeys = willReceiveProps ? undefined : getKeys(props.defaultSelectedKeys);
		      if ('selectedKeys' in props) {
		        selectedKeys = getKeys(props.selectedKeys);
		      }
		      return selectedKeys;
		    }
		  }, {
		    key: 'getRawExpandedKeys',
		    value: function getRawExpandedKeys() {
		      if (!this._rawExpandedKeys && 'expandedKeys' in this.props) {
		        this._rawExpandedKeys = [].concat(_toConsumableArray(this.state.expandedKeys));
		      }
		    }
		  }, {
		    key: 'getOpenTransitionName',
		    value: function getOpenTransitionName() {
		      var props = this.props;
		      var transitionName = props.openTransitionName;
		      var animationName = props.openAnimation;
		      if (!transitionName && typeof animationName === 'string') {
		        transitionName = props.prefixCls + '-open-' + animationName;
		      }
		      return transitionName;
		    }
		  }, {
		    key: 'getDragNodes',
		    value: function getDragNodes(treeNode) {
		      var dragNodesKeys = [];
		      var tPArr = treeNode.props.pos.split('-');
		      (0, _util.loopAllChildren)(this.props.children, function (item, index, pos, newKey) {
		        var pArr = pos.split('-');
		        if (treeNode.props.pos === pos || tPArr.length < pArr.length && (0, _util.isInclude)(tPArr, pArr)) {
		          dragNodesKeys.push(newKey);
		        }
		      });
		      return dragNodesKeys;
		    }
		  }, {
		    key: 'getExpandedKeys',
		    value: function getExpandedKeys(treeNode, expand) {
		      var key = treeNode.props.eventKey;
		      var expandedKeys = this.state.expandedKeys;
		      var expandedIndex = expandedKeys.indexOf(key);
		      var exKeys = undefined;
		      if (expandedIndex > -1 && !expand) {
		        exKeys = [].concat(_toConsumableArray(expandedKeys));
		        exKeys.splice(expandedIndex, 1);
		        return exKeys;
		      }
		      if (expand && expandedKeys.indexOf(key) === -1) {
		        return expandedKeys.concat([key]);
		      }
		    }
		  }, {
		    key: 'filterTreeNode',
		    value: function filterTreeNode(treeNode) {
		      var filterTreeNode = this.props.filterTreeNode;
		      if (typeof filterTreeNode !== 'function' || treeNode.props.disabled) {
		        return false;
		      }
		      return filterTreeNode.call(this, treeNode);
		    }
		  }, {
		    key: 'renderTreeNode',
		    value: function renderTreeNode(child, index) {
		      var level = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];
		
		      var pos = level + '-' + index;
		      var key = child.key || pos;
		      var state = this.state;
		      var props = this.props;
		
		      // prefer to child's own selectable property if passed
		      var selectable = props.selectable;
		      if (child.props.hasOwnProperty('selectable')) {
		        selectable = child.props.selectable;
		      }
		
		      var cloneProps = {
		        ref: 'treeNode-' + key,
		        root: this,
		        eventKey: key,
		        pos: pos,
		        selectable: selectable,
		        loadData: props.loadData,
		        onMouseEnter: props.onMouseEnter,
		        onMouseLeave: props.onMouseLeave,
		        onRightClick: props.onRightClick,
		        prefixCls: props.prefixCls,
		        showLine: props.showLine,
		        showIcon: props.showIcon,
		        draggable: props.draggable,
		        dragOver: state.dragOverNodeKey === key && this.dropPosition === 0,
		        dragOverGapTop: state.dragOverNodeKey === key && this.dropPosition === -1,
		        dragOverGapBottom: state.dragOverNodeKey === key && this.dropPosition === 1,
		        expanded: state.expandedKeys.indexOf(key) !== -1,
		        selected: state.selectedKeys.indexOf(key) !== -1,
		        openTransitionName: this.getOpenTransitionName(),
		        openAnimation: props.openAnimation,
		        filterTreeNode: this.filterTreeNode.bind(this)
		      };
		      if (props.checkable) {
		        cloneProps.checkable = props.checkable;
		        if (props.checkStrictly) {
		          if (state.checkedKeys) {
		            cloneProps.checked = state.checkedKeys.indexOf(key) !== -1 || false;
		          }
		          if (props.checkedKeys.halfChecked) {
		            cloneProps.halfChecked = props.checkedKeys.halfChecked.indexOf(key) !== -1 || false;
		          } else {
		            cloneProps.halfChecked = false;
		          }
		        } else {
		          if (this.checkedKeys) {
		            cloneProps.checked = this.checkedKeys.indexOf(key) !== -1 || false;
		          }
		          cloneProps.halfChecked = this.halfCheckedKeys.indexOf(key) !== -1;
		        }
		
		        if (this.treeNodesStates[pos]) {
		          (0, _objectAssign2['default'])(cloneProps, this.treeNodesStates[pos].siblingPosition);
		        }
		      }
		      return _react2['default'].cloneElement(child, cloneProps);
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var _this4 = this;
		
		      var props = this.props;
		      var domProps = {
		        className: (0, _classnames2['default'])(props.className, props.prefixCls),
		        role: 'tree-node'
		      };
		      if (props.focusable) {
		        domProps.tabIndex = '0';
		        domProps.onKeyDown = this.onKeyDown;
		      }
		      // console.log(this.state.expandedKeys, this._rawExpandedKeys, props.children);
		      if (props.checkable && (this.checkedKeysChange || props.loadData)) {
		        if (props.checkStrictly) {
		          this.treeNodesStates = {};
		          (0, _util.loopAllChildren)(props.children, function (item, index, pos, keyOrPos, siblingPosition) {
		            _this4.treeNodesStates[pos] = {
		              siblingPosition: siblingPosition
		            };
		          });
		        } else if (props._treeNodesStates) {
		          this.treeNodesStates = props._treeNodesStates.treeNodesStates;
		          this.halfCheckedKeys = props._treeNodesStates.halfCheckedKeys;
		          this.checkedKeys = props._treeNodesStates.checkedKeys;
		        } else {
		          (function () {
		            var checkedKeys = _this4.state.checkedKeys;
		            var checkKeys = undefined;
		            if (!props.loadData && _this4.checkKeys && _this4._checkedKeys && (0, _util.arraysEqual)(_this4._checkedKeys, checkedKeys)) {
		              // if checkedKeys the same as _checkedKeys from onCheck, use _checkedKeys.
		              checkKeys = _this4.checkKeys;
		            } else {
		              (function () {
		                var checkedPositions = [];
		                _this4.treeNodesStates = {};
		                (0, _util.loopAllChildren)(props.children, function (item, index, pos, keyOrPos, siblingPosition) {
		                  _this4.treeNodesStates[pos] = {
		                    node: item,
		                    key: keyOrPos,
		                    checked: false,
		                    halfChecked: false,
		                    siblingPosition: siblingPosition
		                  };
		                  if (checkedKeys.indexOf(keyOrPos) !== -1) {
		                    _this4.treeNodesStates[pos].checked = true;
		                    checkedPositions.push(pos);
		                  }
		                });
		                // if the parent node's key exists, it all children node will be checked
		                (0, _util.handleCheckState)(_this4.treeNodesStates, (0, _util.filterParentPosition)(checkedPositions), true);
		                checkKeys = (0, _util.getCheck)(_this4.treeNodesStates);
		              })();
		            }
		            _this4.halfCheckedKeys = checkKeys.halfCheckedKeys;
		            _this4.checkedKeys = checkKeys.checkedKeys;
		          })();
		        }
		      }
		
		      return _react2['default'].createElement(
		        'ul',
		        _extends({}, domProps, { unselectable: true, ref: 'tree' }),
		        _react2['default'].Children.map(props.children, this.renderTreeNode, this)
		      );
		    }
		  }]);
		
		  return Tree;
		})(_react2['default'].Component);
		
		Tree.propTypes = {
		  prefixCls: _react.PropTypes.string,
		  children: _react.PropTypes.any,
		  showLine: _react.PropTypes.bool,
		  showIcon: _react.PropTypes.bool,
		  selectable: _react.PropTypes.bool,
		  multiple: _react.PropTypes.bool,
		  checkable: _react.PropTypes.oneOfType([_react.PropTypes.bool, _react.PropTypes.node]),
		  _treeNodesStates: _react.PropTypes.object,
		  checkStrictly: _react.PropTypes.bool,
		  draggable: _react.PropTypes.bool,
		  autoExpandParent: _react.PropTypes.bool,
		  defaultExpandAll: _react.PropTypes.bool,
		  defaultExpandedKeys: _react.PropTypes.arrayOf(_react.PropTypes.string),
		  expandedKeys: _react.PropTypes.arrayOf(_react.PropTypes.string),
		  defaultCheckedKeys: _react.PropTypes.arrayOf(_react.PropTypes.string),
		  checkedKeys: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.string), _react.PropTypes.object]),
		  defaultSelectedKeys: _react.PropTypes.arrayOf(_react.PropTypes.string),
		  selectedKeys: _react.PropTypes.arrayOf(_react.PropTypes.string),
		  onExpand: _react.PropTypes.func,
		  onCheck: _react.PropTypes.func,
		  onSelect: _react.PropTypes.func,
		  loadData: _react.PropTypes.func,
		  onMouseEnter: _react.PropTypes.func,
		  onMouseLeave: _react.PropTypes.func,
		  onRightClick: _react.PropTypes.func,
		  onDragStart: _react.PropTypes.func,
		  onDragEnter: _react.PropTypes.func,
		  onDragOver: _react.PropTypes.func,
		  onDragLeave: _react.PropTypes.func,
		  onDrop: _react.PropTypes.func,
		  filterTreeNode: _react.PropTypes.func,
		  openTransitionName: _react.PropTypes.string,
		  openAnimation: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.object])
		};
		
		Tree.defaultProps = {
		  prefixCls: 'rc-tree',
		  showLine: false,
		  showIcon: true,
		  selectable: true,
		  multiple: false,
		  checkable: false,
		  checkStrictly: false,
		  draggable: false,
		  autoExpandParent: true,
		  defaultExpandAll: false,
		  defaultExpandedKeys: [],
		  defaultCheckedKeys: [],
		  defaultSelectedKeys: [],
		  onExpand: noop,
		  onCheck: noop,
		  onSelect: noop,
		  onDragStart: noop,
		  onDragEnter: noop,
		  onDragOver: noop,
		  onDragLeave: noop,
		  onDrop: noop
		};
		
		exports['default'] = Tree;
		module.exports = exports['default'];
	
	/***/ },
	/* 390 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();
		
		var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _objectAssign = __webpack_require__(10);
		
		var _objectAssign2 = _interopRequireDefault(_objectAssign);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var _rcAnimate = __webpack_require__(7);
		
		var _rcAnimate2 = _interopRequireDefault(_rcAnimate);
		
		var _util = __webpack_require__(121);
		
		var browserUa = typeof window !== 'undefined' ? (0, _util.browser)(window.navigator) : '';
		var ieOrEdge = /.*(IE|Edge).+/.test(browserUa);
		// const uaArray = browserUa.split(' ');
		// const gtIE8 = uaArray.length !== 2 || uaArray[0].indexOf('IE') === -1 || Number(uaArray[1]) > 8;
		
		var defaultTitle = '---';
		
		var TreeNode = (function (_React$Component) {
		  _inherits(TreeNode, _React$Component);
		
		  function TreeNode(props) {
		    var _this = this;
		
		    _classCallCheck(this, TreeNode);
		
		    _get(Object.getPrototypeOf(TreeNode.prototype), 'constructor', this).call(this, props);
		    ['onExpand', 'onCheck', 'onContextMenu', 'onMouseEnter', 'onMouseLeave', 'onDragStart', 'onDragEnter', 'onDragOver', 'onDragLeave', 'onDrop'].forEach(function (m) {
		      _this[m] = _this[m].bind(_this);
		    });
		    this.state = {
		      dataLoading: false,
		      dragNodeHighlight: false
		    };
		  }
		
		  _createClass(TreeNode, [{
		    key: 'componentDidMount',
		    value: function componentDidMount() {
		      if (!this.props.root._treeNodeInstances) {
		        this.props.root._treeNodeInstances = [];
		      }
		      this.props.root._treeNodeInstances.push(this);
		    }
		
		    // shouldComponentUpdate(nextProps) {
		    //   if (!nextProps.expanded) {
		    //     return false;
		    //   }
		    //   return true;
		    // }
		
		  }, {
		    key: 'onCheck',
		    value: function onCheck() {
		      this.props.root.onCheck(this);
		    }
		  }, {
		    key: 'onSelect',
		    value: function onSelect() {
		      this.props.root.onSelect(this);
		    }
		  }, {
		    key: 'onMouseEnter',
		    value: function onMouseEnter(e) {
		      e.preventDefault();
		      this.props.root.onMouseEnter(e, this);
		    }
		  }, {
		    key: 'onMouseLeave',
		    value: function onMouseLeave(e) {
		      e.preventDefault();
		      this.props.root.onMouseLeave(e, this);
		    }
		  }, {
		    key: 'onContextMenu',
		    value: function onContextMenu(e) {
		      e.preventDefault();
		      this.props.root.onContextMenu(e, this);
		    }
		  }, {
		    key: 'onDragStart',
		    value: function onDragStart(e) {
		      // console.log('dragstart', this.props.eventKey, e);
		      // e.preventDefault();
		      e.stopPropagation();
		      this.setState({
		        dragNodeHighlight: true
		      });
		      this.props.root.onDragStart(e, this);
		      try {
		        // ie throw error
		        e.dataTransfer.setData('text/plain', 'firefox-need-it');
		      } finally {
		        // empty
		      }
		    }
		  }, {
		    key: 'onDragEnter',
		    value: function onDragEnter(e) {
		      // console.log('dragenter', this.props.eventKey, e);
		      e.preventDefault();
		      e.stopPropagation();
		      this.props.root.onDragEnter(e, this);
		    }
		  }, {
		    key: 'onDragOver',
		    value: function onDragOver(e) {
		      // console.log(this.props.eventKey, e);
		      // todo disabled
		      e.preventDefault();
		      e.stopPropagation();
		      this.props.root.onDragOver(e, this);
		      return false;
		    }
		  }, {
		    key: 'onDragLeave',
		    value: function onDragLeave(e) {
		      // console.log(this.props.eventKey, e);
		      e.stopPropagation();
		      this.props.root.onDragLeave(e, this);
		    }
		  }, {
		    key: 'onDrop',
		    value: function onDrop(e) {
		      e.preventDefault();
		      e.stopPropagation();
		      this.setState({
		        dragNodeHighlight: false
		      });
		      this.props.root.onDrop(e, this);
		    }
		  }, {
		    key: 'onExpand',
		    value: function onExpand() {
		      var _this2 = this;
		
		      var callbackPromise = this.props.root.onExpand(this);
		      if (callbackPromise && typeof callbackPromise === 'object') {
		        (function () {
		          var setLoading = function setLoading(dataLoading) {
		            _this2.setState({ dataLoading: dataLoading });
		          };
		          setLoading(true);
		          callbackPromise.then(function () {
		            setLoading(false);
		          }, function () {
		            setLoading(false);
		          });
		        })();
		      }
		    }
		
		    // keyboard event support
		  }, {
		    key: 'onKeyDown',
		    value: function onKeyDown(e) {
		      e.preventDefault();
		    }
		  }, {
		    key: 'renderSwitcher',
		    value: function renderSwitcher(props, expandedState) {
		      var prefixCls = props.prefixCls;
		      var switcherCls = _defineProperty({}, prefixCls + '-switcher', true);
		      if (!props.showLine) {
		        switcherCls[prefixCls + '-noline_' + expandedState] = true;
		      } else if (props.pos === '0-0') {
		        switcherCls[prefixCls + '-roots_' + expandedState] = true;
		      } else {
		        switcherCls[prefixCls + '-center_' + expandedState] = !props.last;
		        switcherCls[prefixCls + '-bottom_' + expandedState] = props.last;
		      }
		      if (props.disabled) {
		        switcherCls[prefixCls + '-switcher-disabled'] = true;
		        return _react2['default'].createElement('span', { className: (0, _classnames2['default'])(switcherCls) });
		      }
		      return _react2['default'].createElement('span', { className: (0, _classnames2['default'])(switcherCls), onClick: this.onExpand });
		    }
		  }, {
		    key: 'renderCheckbox',
		    value: function renderCheckbox(props) {
		      var prefixCls = props.prefixCls;
		      var checkboxCls = _defineProperty({}, prefixCls + '-checkbox', true);
		      if (props.checked) {
		        checkboxCls[prefixCls + '-checkbox-checked'] = true;
		      } else if (props.halfChecked) {
		        checkboxCls[prefixCls + '-checkbox-indeterminate'] = true;
		      }
		      var customEle = null;
		      if (typeof props.checkable !== 'boolean') {
		        customEle = props.checkable;
		      }
		      if (props.disabled || props.disableCheckbox) {
		        checkboxCls[prefixCls + '-checkbox-disabled'] = true;
		        return _react2['default'].createElement(
		          'span',
		          { ref: 'checkbox', className: (0, _classnames2['default'])(checkboxCls) },
		          customEle
		        );
		      }
		      return _react2['default'].createElement(
		        'span',
		        { ref: 'checkbox', className: (0, _classnames2['default'])(checkboxCls), onClick: this.onCheck },
		        customEle
		      );
		    }
		  }, {
		    key: 'renderChildren',
		    value: function renderChildren(props) {
		      var renderFirst = this.renderFirst;
		      this.renderFirst = 1;
		      var transitionAppear = true;
		      if (!renderFirst && props.expanded) {
		        transitionAppear = false;
		      }
		      var children = props.children;
		      var newChildren = children;
		      if (children && (children.type === TreeNode || Array.isArray(children) && children.every(function (item) {
		        return item.type === TreeNode;
		      }))) {
		        var _cls;
		
		        var cls = (_cls = {}, _defineProperty(_cls, props.prefixCls + '-child-tree', true), _defineProperty(_cls, props.prefixCls + '-child-tree-open', props.expanded), _cls);
		        if (props.showLine) {
		          cls[props.prefixCls + '-line'] = !props.last;
		        }
		        var animProps = {};
		        if (props.openTransitionName) {
		          animProps.transitionName = props.openTransitionName;
		        } else if (typeof props.openAnimation === 'object') {
		          animProps.animation = (0, _objectAssign2['default'])({}, props.openAnimation);
		          if (!transitionAppear) {
		            delete animProps.animation.appear;
		          }
		        }
		        newChildren = _react2['default'].createElement(
		          _rcAnimate2['default'],
		          _extends({}, animProps, {
		            showProp: 'data-expanded',
		            transitionAppear: transitionAppear,
		            component: '' }),
		          !props.expanded ? null : _react2['default'].createElement(
		            'ul',
		            { className: (0, _classnames2['default'])(cls), 'data-expanded': props.expanded },
		            _react2['default'].Children.map(children, function (item, index) {
		              return props.root.renderTreeNode(item, index, props.pos);
		            }, props.root)
		          )
		        );
		      }
		      return newChildren;
		    }
		  }, {
		    key: 'render',
		    value: function render() {
		      var _iconEleCls,
		          _this3 = this;
		
		      var props = this.props;
		      var prefixCls = props.prefixCls;
		      var expandedState = props.expanded ? 'open' : 'close';
		
		      var iconEleCls = (_iconEleCls = {}, _defineProperty(_iconEleCls, prefixCls + '-iconEle', true), _defineProperty(_iconEleCls, prefixCls + '-icon_loading', this.state.dataLoading), _defineProperty(_iconEleCls, prefixCls + '-icon__' + expandedState, true), _iconEleCls);
		
		      var canRenderSwitcher = true;
		      var content = props.title;
		      var newChildren = this.renderChildren(props);
		      if (!newChildren || newChildren === props.children) {
		        // content = newChildren;
		        newChildren = null;
		        if (!props.loadData || props.isLeaf) {
		          canRenderSwitcher = false;
		        }
		      }
		      // For performance, does't render children into dom when `!props.expanded` (move to Animate)
		      // if (!props.expanded) {
		      //   newChildren = null;
		      // }
		
		      var selectHandle = function selectHandle() {
		        var icon = props.showIcon || props.loadData && _this3.state.dataLoading ? _react2['default'].createElement('span', { className: (0, _classnames2['default'])(iconEleCls) }) : null;
		        var title = _react2['default'].createElement(
		          'span',
		          { className: prefixCls + '-title' },
		          content
		        );
		        var domProps = {};
		        if (!props.disabled) {
		          if (props.selected || _this3.state.dragNodeHighlight) {
		            domProps.className = prefixCls + '-node-selected';
		          }
		          domProps.onClick = function (e) {
		            e.preventDefault();
		            if (props.selectable) {
		              _this3.onSelect();
		            }
		            // not fire check event
		            // if (props.checkable) {
		            //   this.onCheck();
		            // }
		          };
		          if (props.onRightClick) {
		            domProps.onContextMenu = _this3.onContextMenu;
		          }
		          if (props.onMouseEnter) {
		            domProps.onMouseEnter = _this3.onMouseEnter;
		          }
		          if (props.onMouseLeave) {
		            domProps.onMouseLeave = _this3.onMouseLeave;
		          }
		          if (props.draggable) {
		            if (ieOrEdge) {
		              // ie bug!
		              domProps.href = '#';
		            }
		            domProps.draggable = true;
		            domProps['aria-grabbed'] = true;
		            domProps.onDragStart = _this3.onDragStart;
		          }
		        }
		        return _react2['default'].createElement(
		          'a',
		          _extends({ ref: 'selectHandle', title: typeof content === 'string' ? content : '' }, domProps),
		          icon,
		          title
		        );
		      };
		
		      var liProps = {};
		      if (props.draggable) {
		        liProps.onDragEnter = this.onDragEnter;
		        liProps.onDragOver = this.onDragOver;
		        liProps.onDragLeave = this.onDragLeave;
		        liProps.onDrop = this.onDrop;
		      }
		
		      var disabledCls = '';
		      var dragOverCls = '';
		      if (props.disabled) {
		        disabledCls = prefixCls + '-treenode-disabled';
		      } else if (props.dragOver) {
		        dragOverCls = 'drag-over';
		      } else if (props.dragOverGapTop) {
		        dragOverCls = 'drag-over-gap-top';
		      } else if (props.dragOverGapBottom) {
		        dragOverCls = 'drag-over-gap-bottom';
		      }
		
		      var filterCls = props.filterTreeNode(this) ? 'filter-node' : '';
		
		      var noopSwitcher = function noopSwitcher() {
		        var _cls2;
		
		        var cls = (_cls2 = {}, _defineProperty(_cls2, prefixCls + '-switcher', true), _defineProperty(_cls2, prefixCls + '-switcher-noop', true), _cls2);
		        if (props.showLine) {
		          cls[prefixCls + '-center_docu'] = !props.last;
		          cls[prefixCls + '-bottom_docu'] = props.last;
		        } else {
		          cls[prefixCls + '-noline_docu'] = true;
		        }
		        return _react2['default'].createElement('span', { className: (0, _classnames2['default'])(cls) });
		      };
		
		      return _react2['default'].createElement(
		        'li',
		        _extends({}, liProps, { ref: 'li', className: (0, _classnames2['default'])(props.className, disabledCls, dragOverCls, filterCls) }),
		        canRenderSwitcher ? this.renderSwitcher(props, expandedState) : noopSwitcher(),
		        props.checkable ? this.renderCheckbox(props) : null,
		        selectHandle(),
		        newChildren
		      );
		    }
		  }]);
		
		  return TreeNode;
		})(_react2['default'].Component);
		
		TreeNode.isTreeNode = 1;
		
		TreeNode.propTypes = {
		  prefixCls: _react.PropTypes.string,
		  disabled: _react.PropTypes.bool,
		  disableCheckbox: _react.PropTypes.bool,
		  expanded: _react.PropTypes.bool,
		  isLeaf: _react.PropTypes.bool,
		  root: _react.PropTypes.object,
		  onSelect: _react.PropTypes.func
		};
		
		TreeNode.defaultProps = {
		  title: defaultTitle
		};
		
		exports['default'] = TreeNode;
		module.exports = exports['default'];
	
	/***/ },
	/* 391 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _reactDom = __webpack_require__(4);
		
		var _reactDom2 = _interopRequireDefault(_reactDom);
		
		var _rcAlign = __webpack_require__(285);
		
		var _rcAlign2 = _interopRequireDefault(_rcAlign);
		
		var _rcAnimate = __webpack_require__(7);
		
		var _rcAnimate2 = _interopRequireDefault(_rcAnimate);
		
		var _PopupInner = __webpack_require__(392);
		
		var _PopupInner2 = _interopRequireDefault(_PopupInner);
		
		var _LazyRenderBox = __webpack_require__(122);
		
		var _LazyRenderBox2 = _interopRequireDefault(_LazyRenderBox);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		var Popup = _react2["default"].createClass({
		  displayName: 'Popup',
		
		  propTypes: {
		    visible: _react.PropTypes.bool,
		    style: _react.PropTypes.object,
		    getClassNameFromAlign: _react.PropTypes.func,
		    onAlign: _react.PropTypes.func,
		    getRootDomNode: _react.PropTypes.func,
		    onMouseEnter: _react.PropTypes.func,
		    align: _react.PropTypes.any,
		    destroyPopupOnHide: _react.PropTypes.bool,
		    className: _react.PropTypes.string,
		    prefixCls: _react.PropTypes.string,
		    onMouseLeave: _react.PropTypes.func
		  },
		
		  componentDidMount: function componentDidMount() {
		    this.rootNode = this.getPopupDomNode();
		  },
		  onAlign: function onAlign(popupDomNode, align) {
		    var props = this.props;
		    var alignClassName = props.getClassNameFromAlign(props.align);
		    var currentAlignClassName = props.getClassNameFromAlign(align);
		    if (alignClassName !== currentAlignClassName) {
		      this.currentAlignClassName = currentAlignClassName;
		      popupDomNode.className = this.getClassName(currentAlignClassName);
		    }
		    props.onAlign(popupDomNode, align);
		  },
		  getPopupDomNode: function getPopupDomNode() {
		    return _reactDom2["default"].findDOMNode(this.refs.popup);
		  },
		  getTarget: function getTarget() {
		    return this.props.getRootDomNode();
		  },
		  getMaskTransitionName: function getMaskTransitionName() {
		    var props = this.props;
		    var transitionName = props.maskTransitionName;
		    var animation = props.maskAnimation;
		    if (!transitionName && animation) {
		      transitionName = props.prefixCls + '-' + animation;
		    }
		    return transitionName;
		  },
		  getTransitionName: function getTransitionName() {
		    var props = this.props;
		    var transitionName = props.transitionName;
		    if (!transitionName && props.animation) {
		      transitionName = props.prefixCls + '-' + props.animation;
		    }
		    return transitionName;
		  },
		  getClassName: function getClassName(currentAlignClassName) {
		    return this.props.prefixCls + ' ' + this.props.className + ' ' + currentAlignClassName;
		  },
		  getPopupElement: function getPopupElement() {
		    var props = this.props;
		    var align = props.align;
		    var style = props.style;
		    var visible = props.visible;
		    var prefixCls = props.prefixCls;
		    var destroyPopupOnHide = props.destroyPopupOnHide;
		
		    var className = this.getClassName(this.currentAlignClassName || props.getClassNameFromAlign(align));
		    var hiddenClassName = prefixCls + '-hidden';
		    if (!visible) {
		      this.currentAlignClassName = null;
		    }
		    var newStyle = _extends({}, style, this.getZIndexStyle());
		    var popupInnerProps = {
		      className: className,
		      prefixCls: prefixCls,
		      ref: 'popup',
		      onMouseEnter: props.onMouseEnter,
		      onMouseLeave: props.onMouseLeave,
		      style: newStyle
		    };
		    if (destroyPopupOnHide) {
		      return _react2["default"].createElement(
		        _rcAnimate2["default"],
		        {
		          component: '',
		          exclusive: true,
		          transitionAppear: true,
		          transitionName: this.getTransitionName()
		        },
		        visible ? _react2["default"].createElement(
		          _rcAlign2["default"],
		          {
		            target: this.getTarget,
		            key: 'popup',
		            ref: this.saveAlign,
		            monitorWindowResize: true,
		            align: align,
		            onAlign: this.onAlign
		          },
		          _react2["default"].createElement(
		            _PopupInner2["default"],
		            _extends({
		              visible: true
		            }, popupInnerProps),
		            props.children
		          )
		        ) : null
		      );
		    }
		    return _react2["default"].createElement(
		      _rcAnimate2["default"],
		      {
		        component: '',
		        exclusive: true,
		        transitionAppear: true,
		        transitionName: this.getTransitionName(),
		        showProp: 'xVisible'
		      },
		      _react2["default"].createElement(
		        _rcAlign2["default"],
		        {
		          target: this.getTarget,
		          key: 'popup',
		          ref: this.saveAlign,
		          monitorWindowResize: true,
		          xVisible: visible,
		          childrenProps: { visible: 'xVisible' },
		          disabled: !visible,
		          align: align,
		          onAlign: this.onAlign
		        },
		        _react2["default"].createElement(
		          _PopupInner2["default"],
		          _extends({
		            hiddenClassName: hiddenClassName
		          }, popupInnerProps),
		          props.children
		        )
		      )
		    );
		  },
		  getZIndexStyle: function getZIndexStyle() {
		    var style = {};
		    var props = this.props;
		    if (props.zIndex !== undefined) {
		      style.zIndex = props.zIndex;
		    }
		    return style;
		  },
		  getMaskElement: function getMaskElement() {
		    var props = this.props;
		    var maskElement = void 0;
		    if (props.mask) {
		      var maskTransition = this.getMaskTransitionName();
		      maskElement = _react2["default"].createElement(_LazyRenderBox2["default"], {
		        style: this.getZIndexStyle(),
		        key: 'mask',
		        className: props.prefixCls + '-mask',
		        hiddenClassName: props.prefixCls + '-mask-hidden',
		        visible: props.visible
		      });
		      if (maskTransition) {
		        maskElement = _react2["default"].createElement(
		          _rcAnimate2["default"],
		          {
		            key: 'mask',
		            showProp: 'visible',
		            transitionAppear: true,
		            component: '',
		            transitionName: maskTransition
		          },
		          maskElement
		        );
		      }
		    }
		    return maskElement;
		  },
		  saveAlign: function saveAlign(align) {
		    this.alignInstance = align;
		  },
		  render: function render() {
		    return _react2["default"].createElement(
		      'div',
		      null,
		      this.getMaskElement(),
		      this.getPopupElement()
		    );
		  }
		});
		
		exports["default"] = Popup;
		module.exports = exports['default'];
	
	/***/ },
	/* 392 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _LazyRenderBox = __webpack_require__(122);
		
		var _LazyRenderBox2 = _interopRequireDefault(_LazyRenderBox);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		var PopupInner = _react2["default"].createClass({
		  displayName: 'PopupInner',
		
		  propTypes: {
		    hiddenClassName: _react.PropTypes.string,
		    className: _react.PropTypes.string,
		    prefixCls: _react.PropTypes.string,
		    onMouseEnter: _react.PropTypes.func,
		    onMouseLeave: _react.PropTypes.func,
		    children: _react.PropTypes.any
		  },
		  render: function render() {
		    var props = this.props;
		    var className = props.className;
		    if (!props.visible) {
		      className += ' ' + props.hiddenClassName;
		    }
		    return _react2["default"].createElement(
		      'div',
		      {
		        className: className,
		        onMouseEnter: props.onMouseEnter,
		        onMouseLeave: props.onMouseLeave,
		        style: props.style
		      },
		      _react2["default"].createElement(
		        _LazyRenderBox2["default"],
		        { className: props.prefixCls + '-content', visible: props.visible },
		        props.children
		      )
		    );
		  }
		});
		
		exports["default"] = PopupInner;
		module.exports = exports['default'];
	
	/***/ },
	/* 393 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _reactDom = __webpack_require__(4);
		
		var _reactDom2 = _interopRequireDefault(_reactDom);
		
		var _createChainedFunction = __webpack_require__(32);
		
		var _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);
		
		var _contains = __webpack_require__(49);
		
		var _contains2 = _interopRequireDefault(_contains);
		
		var _addEventListener = __webpack_require__(13);
		
		var _addEventListener2 = _interopRequireDefault(_addEventListener);
		
		var _Popup = __webpack_require__(391);
		
		var _Popup2 = _interopRequireDefault(_Popup);
		
		var _utils = __webpack_require__(394);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
		
		function noop() {}
		
		function returnEmptyString() {
		  return '';
		}
		
		var ALL_HANDLERS = ['onClick', 'onMouseDown', 'onTouchStart', 'onMouseEnter', 'onMouseLeave', 'onFocus', 'onBlur'];
		
		var Trigger = _react2["default"].createClass({
		  displayName: 'Trigger',
		
		  propTypes: {
		    action: _react.PropTypes.any,
		    showAction: _react.PropTypes.any,
		    hideAction: _react.PropTypes.any,
		    getPopupClassNameFromAlign: _react.PropTypes.any,
		    onPopupVisibleChange: _react.PropTypes.func,
		    afterPopupVisibleChange: _react.PropTypes.func,
		    popup: _react.PropTypes.oneOfType([_react.PropTypes.node, _react.PropTypes.func]).isRequired,
		    popupStyle: _react.PropTypes.object,
		    prefixCls: _react.PropTypes.string,
		    popupClassName: _react.PropTypes.string,
		    popupPlacement: _react.PropTypes.string,
		    builtinPlacements: _react.PropTypes.object,
		    popupTransitionName: _react.PropTypes.string,
		    popupAnimation: _react.PropTypes.any,
		    mouseEnterDelay: _react.PropTypes.number,
		    mouseLeaveDelay: _react.PropTypes.number,
		    zIndex: _react.PropTypes.number,
		    focusDelay: _react.PropTypes.number,
		    blurDelay: _react.PropTypes.number,
		    getPopupContainer: _react.PropTypes.func,
		    destroyPopupOnHide: _react.PropTypes.bool,
		    mask: _react.PropTypes.bool,
		    onPopupAlign: _react.PropTypes.func,
		    popupAlign: _react.PropTypes.object,
		    popupVisible: _react.PropTypes.bool,
		    maskTransitionName: _react.PropTypes.string,
		    maskAnimation: _react.PropTypes.string
		  },
		
		  getDefaultProps: function getDefaultProps() {
		    return {
		      prefixCls: 'rc-trigger-popup',
		      getPopupClassNameFromAlign: returnEmptyString,
		      onPopupVisibleChange: noop,
		      afterPopupVisibleChange: noop,
		      onPopupAlign: noop,
		      popupClassName: '',
		      mouseEnterDelay: 0,
		      mouseLeaveDelay: 0.1,
		      focusDelay: 0,
		      blurDelay: 0.15,
		      popupStyle: {},
		      destroyPopupOnHide: false,
		      popupAlign: {},
		      defaultPopupVisible: false,
		      mask: false,
		      action: [],
		      showAction: [],
		      hideAction: []
		    };
		  },
		  getInitialState: function getInitialState() {
		    var props = this.props;
		    var popupVisible = void 0;
		    if ('popupVisible' in props) {
		      popupVisible = !!props.popupVisible;
		    } else {
		      popupVisible = !!props.defaultPopupVisible;
		    }
		    return {
		      popupVisible: popupVisible
		    };
		  },
		  componentDidMount: function componentDidMount() {
		    this.componentDidUpdate({}, {
		      popupVisible: this.state.popupVisible
		    });
		  },
		  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
		    if ('popupVisible' in nextProps) {
		      this.setState({
		        popupVisible: !!nextProps.popupVisible
		      });
		    }
		  },
		  componentDidUpdate: function componentDidUpdate(prevProps, prevState) {
		    var _this = this;
		
		    var props = this.props;
		    var state = this.state;
		    if (this.popupRendered) {
		      var _ret = function () {
		        var self = _this;
		        _reactDom2["default"].unstable_renderSubtreeIntoContainer(_this, _this.getPopupElement(), _this.getPopupContainer(), function mounted() {
		          self.popupInstance = this;
		          if (prevState.popupVisible !== state.popupVisible) {
		            props.afterPopupVisibleChange(state.popupVisible);
		          }
		        });
		        if (_this.isClickToHide()) {
		          if (state.popupVisible) {
		            if (!_this.clickOutsideHandler) {
		              _this.clickOutsideHandler = (0, _addEventListener2["default"])(document, 'mousedown', _this.onDocumentClick);
		              _this.touchOutsideHandler = (0, _addEventListener2["default"])(document, 'touchstart', _this.onDocumentClick);
		            }
		            return {
		              v: void 0
		            };
		          }
		        }
		        if (_this.clickOutsideHandler) {
		          _this.clickOutsideHandler.remove();
		          _this.touchOutsideHandler.remove();
		          _this.clickOutsideHandler = null;
		          _this.touchOutsideHandler = null;
		        }
		      }();
		
		      if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
		    }
		  },
		  componentWillUnmount: function componentWillUnmount() {
		    var popupContainer = this.popupContainer;
		    if (popupContainer) {
		      _reactDom2["default"].unmountComponentAtNode(popupContainer);
		      popupContainer.parentNode.removeChild(popupContainer);
		      this.popupContainer = null;
		    }
		    this.clearDelayTimer();
		    if (this.clickOutsideHandler) {
		      this.clickOutsideHandler.remove();
		      this.touchOutsideHandler.remove();
		      this.clickOutsideHandler = null;
		      this.touchOutsideHandler = null;
		    }
		  },
		  onMouseEnter: function onMouseEnter() {
		    this.delaySetPopupVisible(true, this.props.mouseEnterDelay);
		  },
		  onMouseLeave: function onMouseLeave(e) {
		    // https://github.com/react-component/trigger/pull/13
		    // react bug?
		    if (e.relatedTarget && !e.relatedTarget.setTimeout && (0, _contains2["default"])(this.popupContainer, e.relatedTarget)) {
		      return;
		    }
		    this.delaySetPopupVisible(false, this.props.mouseLeaveDelay);
		  },
		  onFocus: function onFocus() {
		    // incase focusin and focusout
		    this.clearDelayTimer();
		    if (this.isFocusToShow()) {
		      this.focusTime = Date.now();
		      this.delaySetPopupVisible(true, this.props.focusDelay);
		    }
		  },
		  onMouseDown: function onMouseDown() {
		    this.preClickTime = Date.now();
		  },
		  onTouchStart: function onTouchStart() {
		    this.preTouchTime = Date.now();
		  },
		  onBlur: function onBlur() {
		    this.clearDelayTimer();
		    if (this.isBlurToHide()) {
		      this.delaySetPopupVisible(false, this.props.blurDelay);
		    }
		  },
		  onClick: function onClick(event) {
		    // focus will trigger click
		    if (this.focusTime) {
		      var preTime = void 0;
		      if (this.preClickTime && this.preTouchTime) {
		        preTime = Math.min(this.preClickTime, this.preTouchTime);
		      } else if (this.preClickTime) {
		        preTime = this.preClickTime;
		      } else if (this.preTouchTime) {
		        preTime = this.preTouchTime;
		      }
		      if (Math.abs(preTime - this.focusTime) < 20) {
		        return;
		      }
		      this.focusTime = 0;
		    }
		    this.preClickTime = 0;
		    this.preTouchTime = 0;
		    event.preventDefault();
		    var nextVisible = !this.state.popupVisible;
		    if (this.isClickToHide() && !nextVisible || nextVisible && this.isClickToShow()) {
		      this.setPopupVisible(!this.state.popupVisible);
		    }
		  },
		  onDocumentClick: function onDocumentClick(event) {
		    var target = event.target;
		    var root = (0, _reactDom.findDOMNode)(this);
		    var popupNode = this.getPopupDomNode();
		    if (!(0, _contains2["default"])(root, target) && !(0, _contains2["default"])(popupNode, target)) {
		      this.setPopupVisible(false);
		    }
		  },
		  getPopupDomNode: function getPopupDomNode() {
		    // for test
		    if (this.popupInstance) {
		      return this.popupInstance.isMounted() ? this.popupInstance.getPopupDomNode() : null;
		    }
		    return null;
		  },
		  getRootDomNode: function getRootDomNode() {
		    return _reactDom2["default"].findDOMNode(this);
		  },
		  getPopupContainer: function getPopupContainer() {
		    if (!this.popupContainer) {
		      this.popupContainer = document.createElement('div');
		      var mountNode = this.props.getPopupContainer ? this.props.getPopupContainer((0, _reactDom.findDOMNode)(this)) : document.body;
		      mountNode.appendChild(this.popupContainer);
		    }
		    return this.popupContainer;
		  },
		  getPopupClassNameFromAlign: function getPopupClassNameFromAlign(align) {
		    var className = [];
		    var props = this.props;
		    var popupPlacement = props.popupPlacement;
		    var builtinPlacements = props.builtinPlacements;
		    var prefixCls = props.prefixCls;
		
		    if (popupPlacement && builtinPlacements) {
		      className.push((0, _utils.getPopupClassNameFromAlign)(builtinPlacements, prefixCls, align));
		    }
		    if (props.getPopupClassNameFromAlign) {
		      className.push(props.getPopupClassNameFromAlign(align));
		    }
		    return className.join(' ');
		  },
		  getPopupAlign: function getPopupAlign() {
		    var props = this.props;
		    var popupPlacement = props.popupPlacement;
		    var popupAlign = props.popupAlign;
		    var builtinPlacements = props.builtinPlacements;
		
		    if (popupPlacement && builtinPlacements) {
		      return (0, _utils.getAlignFromPlacement)(builtinPlacements, popupPlacement, popupAlign);
		    }
		    return popupAlign;
		  },
		  getPopupElement: function getPopupElement() {
		    var props = this.props;
		    var state = this.state;
		
		    var mouseProps = {};
		    if (this.isMouseEnterToShow()) {
		      mouseProps.onMouseEnter = this.onMouseEnter;
		    }
		    if (this.isMouseLeaveToHide()) {
		      mouseProps.onMouseLeave = this.onMouseLeave;
		    }
		    return _react2["default"].createElement(
		      _Popup2["default"],
		      _extends({
		        prefixCls: props.prefixCls,
		        destroyPopupOnHide: props.destroyPopupOnHide,
		        visible: state.popupVisible,
		        className: props.popupClassName,
		        action: props.action,
		        align: this.getPopupAlign(),
		        onAlign: props.onPopupAlign,
		        animation: props.popupAnimation,
		        getClassNameFromAlign: this.getPopupClassNameFromAlign
		      }, mouseProps, {
		        getRootDomNode: this.getRootDomNode,
		        style: props.popupStyle,
		        mask: props.mask,
		        zIndex: props.zIndex,
		        transitionName: props.popupTransitionName,
		        maskAnimation: props.maskAnimation,
		        maskTransitionName: props.maskTransitionName
		      }),
		      typeof props.popup === 'function' ? props.popup() : props.popup
		    );
		  },
		  setPopupVisible: function setPopupVisible(popupVisible) {
		    this.clearDelayTimer();
		    if (this.state.popupVisible !== popupVisible) {
		      if (!('popupVisible' in this.props)) {
		        this.setState({
		          popupVisible: popupVisible
		        });
		      }
		      this.props.onPopupVisibleChange(popupVisible);
		    }
		  },
		  delaySetPopupVisible: function delaySetPopupVisible(visible, delayS) {
		    var _this2 = this;
		
		    var delay = delayS * 1000;
		    this.clearDelayTimer();
		    if (delay) {
		      this.delayTimer = setTimeout(function () {
		        _this2.setPopupVisible(visible);
		        _this2.clearDelayTimer();
		      }, delay);
		    } else {
		      this.setPopupVisible(visible);
		    }
		  },
		  clearDelayTimer: function clearDelayTimer() {
		    if (this.delayTimer) {
		      clearTimeout(this.delayTimer);
		      this.delayTimer = null;
		    }
		  },
		  isClickToShow: function isClickToShow() {
		    var _props = this.props;
		    var action = _props.action;
		    var showAction = _props.showAction;
		
		    return action.indexOf('click') !== -1 || showAction.indexOf('click') !== -1;
		  },
		  isClickToHide: function isClickToHide() {
		    var _props2 = this.props;
		    var action = _props2.action;
		    var hideAction = _props2.hideAction;
		
		    return action.indexOf('click') !== -1 || hideAction.indexOf('click') !== -1;
		  },
		  isMouseEnterToShow: function isMouseEnterToShow() {
		    var _props3 = this.props;
		    var action = _props3.action;
		    var showAction = _props3.showAction;
		
		    return action.indexOf('hover') !== -1 || showAction.indexOf('mouseEnter') !== -1;
		  },
		  isMouseLeaveToHide: function isMouseLeaveToHide() {
		    var _props4 = this.props;
		    var action = _props4.action;
		    var hideAction = _props4.hideAction;
		
		    return action.indexOf('hover') !== -1 || hideAction.indexOf('mouseLeave') !== -1;
		  },
		  isFocusToShow: function isFocusToShow() {
		    var _props5 = this.props;
		    var action = _props5.action;
		    var showAction = _props5.showAction;
		
		    return action.indexOf('focus') !== -1 || showAction.indexOf('focus') !== -1;
		  },
		  isBlurToHide: function isBlurToHide() {
		    var _props6 = this.props;
		    var action = _props6.action;
		    var hideAction = _props6.hideAction;
		
		    return action.indexOf('focus') !== -1 || hideAction.indexOf('blur') !== -1;
		  },
		  forcePopupAlign: function forcePopupAlign() {
		    if (this.state.popupVisible && this.popupInstance && this.popupInstance.alignInstance) {
		      this.popupInstance.alignInstance.forceAlign();
		    }
		  },
		  render: function render() {
		    this.popupRendered = this.popupRendered || this.state.popupVisible;
		    var props = this.props;
		    var children = props.children;
		    var child = _react2["default"].Children.only(children);
		    var childProps = child.props || {};
		    var newChildProps = {};
		
		    if (this.isClickToHide() || this.isClickToShow()) {
		      newChildProps.onClick = (0, _createChainedFunction2["default"])(this.onClick, childProps.onClick);
		      newChildProps.onMouseDown = (0, _createChainedFunction2["default"])(this.onMouseDown, childProps.onMouseDown);
		      newChildProps.onTouchStart = (0, _createChainedFunction2["default"])(this.onTouchStart, childProps.onTouchStart);
		    }
		    if (this.isMouseEnterToShow()) {
		      newChildProps.onMouseEnter = (0, _createChainedFunction2["default"])(this.onMouseEnter, childProps.onMouseEnter);
		    }
		    if (this.isMouseLeaveToHide()) {
		      newChildProps.onMouseLeave = (0, _createChainedFunction2["default"])(this.onMouseLeave, childProps.onMouseLeave);
		    }
		    if (this.isFocusToShow() || this.isBlurToHide()) {
		      newChildProps.onFocus = (0, _createChainedFunction2["default"])(this.onFocus, childProps.onFocus);
		      newChildProps.onBlur = (0, _createChainedFunction2["default"])(this.onBlur, childProps.onBlur);
		    }
		
		    ALL_HANDLERS.forEach(function (handler) {
		      var newFn = void 0;
		      if (props[handler] && newChildProps[handler]) {
		        newFn = (0, _createChainedFunction2["default"])(props[handler], newChildProps[handler]);
		      } else {
		        newFn = props[handler] || newChildProps[handler];
		      }
		      if (newFn) {
		        newChildProps[handler] = newFn;
		      }
		    });
		
		    return _react2["default"].cloneElement(child, newChildProps);
		  }
		});
		
		exports["default"] = Trigger;
		module.exports = exports['default'];
	
	/***/ },
	/* 394 */
	/***/ function(module, exports) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		exports.getAlignFromPlacement = getAlignFromPlacement;
		exports.getPopupClassNameFromAlign = getPopupClassNameFromAlign;
		function isPointsEq(a1, a2) {
		  return a1[0] === a2[0] && a1[1] === a2[1];
		}
		
		function getAlignFromPlacement(builtinPlacements, placementStr, align) {
		  var baseAlign = builtinPlacements[placementStr] || {};
		  return _extends({}, baseAlign, align);
		}
		
		function getPopupClassNameFromAlign(builtinPlacements, prefixCls, align) {
		  var points = align.points;
		  for (var placement in builtinPlacements) {
		    if (builtinPlacements.hasOwnProperty(placement)) {
		      if (isPointsEq(builtinPlacements[placement].points, points)) {
		        return prefixCls + '-placement-' + placement;
		      }
		    }
		  }
		  return '';
		}
	
	/***/ },
	/* 395 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		var _request = __webpack_require__(399);
		
		var _request2 = _interopRequireDefault(_request);
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _uid = __webpack_require__(123);
		
		var _uid2 = _interopRequireDefault(_uid);
		
		var AjaxUploader = _react2['default'].createClass({
		  displayName: 'AjaxUploader',
		
		  propTypes: {
		    prefixCls: _react.PropTypes.string,
		    multiple: _react.PropTypes.bool,
		    onStart: _react.PropTypes.func,
		    data: _react.PropTypes.oneOfType([_react.PropTypes.object, _react.PropTypes.func]),
		    headers: _react.PropTypes.object,
		    beforeUpload: _react.PropTypes.func,
		    withCredentials: _react.PropTypes.bool
		  },
		
		  getInitialState: function getInitialState() {
		    return {
		      disabled: false,
		      uid: (0, _uid2['default'])()
		    };
		  },
		
		  onChange: function onChange(e) {
		    if (this.state.disabled) {
		      return;
		    }
		    this.setState({
		      disabled: true
		    });
		    var files = e.target.files;
		    this.uploadFiles(files);
		  },
		
		  onClick: function onClick() {
		    var el = this.refs.file;
		    if (!el) {
		      return;
		    }
		    el.click();
		  },
		
		  onKeyDown: function onKeyDown(e) {
		    if (e.key === 'Enter') {
		      this.onClick();
		    }
		  },
		
		  onFileDrop: function onFileDrop(e) {
		    if (e.type === 'dragover') {
		      e.preventDefault();
		      return;
		    }
		
		    if (this.state.disabled) {
		      return;
		    }
		
		    var files = e.dataTransfer.files;
		    this.uploadFiles(files);
		
		    e.preventDefault();
		  },
		
		  uploadFiles: function uploadFiles(files) {
		    var postFiles = Array.prototype.slice.call(files);
		    if (!this.props.multiple) {
		      postFiles = postFiles.slice(0, 1);
		    }
		    var len = postFiles.length;
		    if (len > 0) {
		      for (var i = 0; i < len; i++) {
		        var file = postFiles[i];
		        file.uid = (0, _uid2['default'])();
		        this.upload(file);
		      }
		      if (this.props.multiple) {
		        this.props.onStart(postFiles);
		      } else {
		        this.props.onStart(postFiles[0]);
		      }
		    }
		  },
		
		  upload: function upload(file) {
		    var _this = this;
		
		    var props = this.props;
		    if (!props.beforeUpload) {
		      return this.post(file);
		    }
		
		    var before = props.beforeUpload(file);
		    if (before && before.then) {
		      before.then(function (processedFile) {
		        if (Object.prototype.toString.call(processedFile) === '[object File]') {
		          _this.post(processedFile);
		        } else {
		          _this.post(file);
		        }
		      }, function () {
		        _this._reset();
		      });
		    } else if (before !== false) {
		      this.post(file);
		    } else {
		      // fix https://github.com/ant-design/ant-design/issues/1989
		      this._reset();
		    }
		  },
		
		  post: function post(file) {
		    var _this2 = this;
		
		    var props = this.props;
		    var data = props.data;
		    if (typeof data === 'function') {
		      data = data(file);
		    }
		
		    (0, _request2['default'])({
		      action: props.action,
		      filename: props.name,
		      file: file,
		      data: data,
		      headers: props.headers,
		      withCredentials: props.withCredentials,
		      onProgress: function onProgress(e) {
		        props.onProgress(e, file);
		      },
		      onSuccess: function onSuccess(ret) {
		        props.onSuccess(ret, file);
		        _this2._reset();
		      },
		      onError: function onError(err, ret) {
		        props.onError(err, ret, file);
		        _this2._reset();
		      }
		    });
		  },
		
		  _reset: function _reset() {
		    this.setState({
		      disabled: false,
		      uid: (0, _uid2['default'])()
		    });
		  },
		
		  render: function render() {
		    var props = this.props;
		    return _react2['default'].createElement(
		      'span',
		      {
		        onClick: this.onClick,
		        onKeyDown: this.onKeyDown,
		        onDrop: this.onFileDrop,
		        onDragOver: this.onFileDrop,
		        role: 'button',
		        tabIndex: '0',
		        className: this.state.disabled ? this.props.prefixCls + ' ' + props.prefixCls + '-disabled' : '' + this.props.prefixCls
		      },
		      _react2['default'].createElement('input', {
		        type: 'file',
		        ref: 'file',
		        key: this.state.uid,
		        disabled: this.state.disabled,
		        style: { display: 'none' },
		        accept: props.accept,
		        multiple: this.props.multiple,
		        onChange: this.onChange
		      }),
		      props.children
		    );
		  }
		});
		
		exports['default'] = AjaxUploader;
		module.exports = exports['default'];
	
	/***/ },
	/* 396 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _reactDom = __webpack_require__(4);
		
		var _reactDom2 = _interopRequireDefault(_reactDom);
		
		var _uid = __webpack_require__(123);
		
		var _uid2 = _interopRequireDefault(_uid);
		
		var _warning = __webpack_require__(400);
		
		var _warning2 = _interopRequireDefault(_warning);
		
		var iframeStyle = {
		  position: 'absolute',
		  top: 0,
		  opacity: 0,
		  filter: 'alpha(opacity=0)',
		  left: 0,
		  zIndex: 9999
		};
		
		var IframeUploader = _react2['default'].createClass({
		  displayName: 'IframeUploader',
		
		  propTypes: {
		    prefixCls: _react.PropTypes.string,
		    onStart: _react.PropTypes.func,
		    multiple: _react.PropTypes.bool,
		    children: _react.PropTypes.any,
		    data: _react.PropTypes.oneOfType([_react.PropTypes.object, _react.PropTypes.func]),
		    action: _react.PropTypes.string,
		    name: _react.PropTypes.string
		  },
		
		  getInitialState: function getInitialState() {
		    return { disabled: false };
		  },
		
		  componentDidMount: function componentDidMount() {
		    this.updateIframeWH();
		    this.initIframe();
		  },
		
		  componentDidUpdate: function componentDidUpdate() {
		    this.updateIframeWH();
		  },
		
		  onLoad: function onLoad() {
		    if (!this.state.disabled) {
		      return;
		    }
		    var props = this.props;
		    var response = undefined;
		    var eventFile = this.file;
		    try {
		      var doc = this.getIframeDocument();
		      var script = doc.getElementsByTagName('script')[0];
		      if (script && script.parentNode === doc.body) {
		        doc.body.removeChild(script);
		      }
		      response = doc.body.innerHTML;
		      props.onSuccess(response, eventFile);
		    } catch (err) {
		      (0, _warning2['default'])(false, 'cross domain error for Upload. Maybe server should return document.domain script. see Note from https://github.com/react-component/upload');
		      response = 'cross-domain';
		      props.onError(err, null, eventFile);
		    }
		    this.enableIframe();
		    this.initIframe();
		  },
		
		  onChange: function onChange() {
		    var target = this.getFormInputNode();
		    // ie8/9 don't support FileList Object
		    // http://stackoverflow.com/questions/12830058/ie8-input-type-file-get-files
		    var file = this.file = {
		      uid: (0, _uid2['default'])(),
		      name: target.value
		    };
		    this.props.onStart(this.getFileForMultiple(file));
		    var formNode = this.getFormNode();
		    var dataSpan = this.getFormDataNode();
		    var data = this.props.data;
		    if (typeof data === 'function') {
		      data = data(file);
		    }
		    var inputs = [];
		    for (var key in data) {
		      if (data.hasOwnProperty(key)) {
		        inputs.push('<input name="' + key + '" value="' + data[key] + '"/>');
		      }
		    }
		    dataSpan.innerHTML = inputs.join('');
		    this.disabledIframe();
		    formNode.submit();
		    dataSpan.innerHTML = '';
		  },
		
		  getIframeNode: function getIframeNode() {
		    return this.refs.iframe;
		  },
		
		  getIframeDocument: function getIframeDocument() {
		    return this.getIframeNode().contentDocument;
		  },
		
		  getFormNode: function getFormNode() {
		    return this.getIframeDocument().getElementById('form');
		  },
		
		  getFormInputNode: function getFormInputNode() {
		    return this.getIframeDocument().getElementById('input');
		  },
		
		  getFormDataNode: function getFormDataNode() {
		    return this.getIframeDocument().getElementById('data');
		  },
		
		  getFileForMultiple: function getFileForMultiple(file) {
		    return this.props.multiple ? [file] : file;
		  },
		
		  getIframeHTML: function getIframeHTML(domain) {
		    var domainScript = '';
		    var domainInput = '';
		    if (domain) {
		      domainScript = '<script>document.domain="' + domain + '";</script>';
		      domainInput = '<input name="_documentDomain" value="' + domain + '" />';
		    }
		    return '\n    <!DOCTYPE html>\n    <html>\n    <head>\n    <meta http-equiv="X-UA-Compatible" content="IE=edge" />\n    <style>\n    body,html {padding:0;margin:0;border:0;overflow:hidden;}\n    </style>\n    ' + domainScript + '\n    </head>\n    <body>\n    <form method="post"\n    encType="multipart/form-data"\n    action="' + this.props.action + '" id="form" style="display:block;height:9999px;position:relative;overflow:hidden;">\n    <input id="input" type="file"\n     name="' + this.props.name + '"\n     style="position:absolute;top:0;right:0;height:9999px;font-size:9999px;cursor:pointer;"/>\n    ' + domainInput + '\n    <span id="data"></span>\n    </form>\n    </body>\n    </html>\n    ';
		  },
		
		  initIframeSrc: function initIframeSrc() {
		    if (this.domain) {
		      this.getIframeNode().src = 'javascript:void((function(){\n        var d = document;\n        d.open();\n        d.domain=\'' + this.domain + '\';\n        d.write(\'\');\n        d.close();\n      })())';
		    }
		  },
		
		  initIframe: function initIframe() {
		    var iframeNode = this.getIframeNode();
		    var win = iframeNode.contentWindow;
		    var doc = undefined;
		    this.domain = this.domain || '';
		    this.initIframeSrc();
		    try {
		      doc = win.document;
		    } catch (e) {
		      this.domain = document.domain;
		      this.initIframeSrc();
		      win = iframeNode.contentWindow;
		      doc = win.document;
		    }
		    doc.open('text/html', 'replace');
		    doc.write(this.getIframeHTML(this.domain));
		    doc.close();
		    this.getFormInputNode().onchange = this.onChange;
		  },
		
		  enableIframe: function enableIframe() {
		    if (this.state.disabled) {
		      // hack avoid batch
		      this.state.disabled = false;
		      this.setState({
		        disabled: false
		      });
		    }
		  },
		
		  disabledIframe: function disabledIframe() {
		    if (!this.state.disabled) {
		      this.state.disabled = true;
		      this.setState({
		        disabled: true
		      });
		    }
		  },
		
		  updateIframeWH: function updateIframeWH() {
		    var rootNode = _reactDom2['default'].findDOMNode(this);
		    var iframeNode = this.getIframeNode();
		    iframeNode.style.height = rootNode.offsetHeight + 'px';
		    iframeNode.style.width = rootNode.offsetWidth + 'px';
		  },
		
		  render: function render() {
		    var style = _extends({}, iframeStyle, {
		      display: this.state.disabled ? 'none' : ''
		    });
		    return _react2['default'].createElement(
		      'span',
		      {
		        className: this.state.disabled ? this.props.prefixCls + ' ' + this.props.prefixCls + '-disabled' : '' + this.props.prefixCls,
		        style: { position: 'relative', zIndex: 0 }
		      },
		      _react2['default'].createElement('iframe', {
		        ref: 'iframe',
		        onLoad: this.onLoad,
		        style: style
		      }),
		      this.props.children
		    );
		  }
		});
		
		exports['default'] = IframeUploader;
		module.exports = exports['default'];
	
	/***/ },
	/* 397 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _AjaxUploader = __webpack_require__(395);
		
		var _AjaxUploader2 = _interopRequireDefault(_AjaxUploader);
		
		var _IframeUploader = __webpack_require__(396);
		
		var _IframeUploader2 = _interopRequireDefault(_IframeUploader);
		
		function empty() {}
		
		var Upload = _react2['default'].createClass({
		  displayName: 'Upload',
		
		  propTypes: {
		    prefixCls: _react.PropTypes.string,
		    action: _react.PropTypes.string,
		    name: _react.PropTypes.string,
		    multipart: _react.PropTypes.bool,
		    onError: _react.PropTypes.func,
		    onSuccess: _react.PropTypes.func,
		    onProgress: _react.PropTypes.func,
		    onStart: _react.PropTypes.func,
		    data: _react.PropTypes.oneOfType([_react.PropTypes.object, _react.PropTypes.func]),
		    headers: _react.PropTypes.object,
		    accept: _react.PropTypes.string,
		    multiple: _react.PropTypes.bool,
		    beforeUpload: _react.PropTypes.func,
		    onReady: _react.PropTypes.func,
		    withCredentials: _react.PropTypes.bool,
		    supportServerRender: _react.PropTypes.bool
		  },
		
		  getDefaultProps: function getDefaultProps() {
		    return {
		      prefixCls: 'rc-upload',
		      data: {},
		      headers: {},
		      name: 'file',
		      multipart: false,
		      onProgress: empty,
		      onReady: empty,
		      onStart: empty,
		      onError: empty,
		      onSuccess: empty,
		      supportServerRender: false,
		      multiple: false,
		      beforeUpload: null,
		      withCredentials: false
		    };
		  },
		
		  getInitialState: function getInitialState() {
		    return {
		      Component: null
		    };
		  },
		
		  componentDidMount: function componentDidMount() {
		    if (this.props.supportServerRender) {
		      /* eslint react/no-did-mount-set-state:0 */
		      this.setState({
		        Component: this.getComponent()
		      }, this.props.onReady);
		    }
		  },
		  getComponent: function getComponent() {
		    return typeof FormData !== 'undefined' ? _AjaxUploader2['default'] : _IframeUploader2['default'];
		  },
		
		  render: function render() {
		    if (this.props.supportServerRender) {
		      var _Component = this.state.Component;
		
		      if (_Component) {
		        return _react2['default'].createElement(_Component, this.props);
		      }
		      return null;
		    }
		    var Component = this.getComponent();
		    return _react2['default'].createElement(Component, this.props);
		  }
		});
		
		exports['default'] = Upload;
		module.exports = exports['default'];
	
	/***/ },
	/* 398 */
	/***/ function(module, exports, __webpack_require__) {
	
		// export this package's api
		'use strict';
		
		module.exports = __webpack_require__(397);
	
	/***/ },
	/* 399 */
	/***/ function(module, exports) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		exports['default'] = upload;
		function getError(option, xhr) {
		  var msg = 'cannot post ' + option.action + ' ' + xhr.status + '\'';
		  var err = new Error(msg);
		  err.status = xhr.status;
		  err.method = 'post';
		  err.url = option.action;
		  return err;
		}
		
		function getBody(xhr) {
		  var text = xhr.responseText || xhr.response;
		  if (!text) {
		    return text;
		  }
		
		  try {
		    return JSON.parse(text);
		  } catch (e) {
		    return text;
		  }
		}
		
		// option {
		//  onProgress: (event: { percent: number }): void,
		//  onError: (event: Error, body?: Object): void,
		//  onSuccess: (body: Object): void,
		//  data: Object,
		//  filename: String,
		//  file: File,
		//  withCredentials: Boolean,
		//  action: String,
		//  headers: Object,
		// }
		
		function upload(option) {
		  if (typeof XMLHttpRequest === 'undefined') {
		    return;
		  }
		
		  var xhr = new XMLHttpRequest();
		  if (xhr.upload) {
		    xhr.upload.onprogress = function progress(e) {
		      if (e.total > 0) {
		        e.percent = e.loaded / e.total * 100;
		      }
		      option.onProgress(e);
		    };
		  }
		
		  var formData = new FormData();
		
		  if (option.data) {
		    Object.keys(option.data).map(function (key) {
		      formData.append(key, option.data[key]);
		    });
		  }
		
		  formData.append(option.filename, option.file);
		
		  xhr.onerror = function error(e) {
		    option.onError(e);
		  };
		
		  xhr.onload = function onload() {
		    // allow success when 2xx status
		    // see https://github.com/react-component/upload/issues/34
		    if (xhr.status < 200 || xhr.status >= 300) {
		      return option.onError(getError(option, xhr), getBody(xhr));
		    }
		
		    option.onSuccess(getBody(xhr));
		  };
		
		  xhr.open('post', option.action, true);
		
		  // Has to be after `.open()`. See https://github.com/enyo/dropzone/issues/179
		  if (option.withCredentials && 'withCredentials' in xhr) {
		    xhr.withCredentials = true;
		  }
		
		  var headers = option.headers || {};
		
		  // when set headers['X-Requested-With'] = null , can close default XHR header
		  // see https://github.com/react-component/upload/issues/33
		  if (headers['X-Requested-With'] !== null) {
		    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
		  }
		
		  for (var h in headers) {
		    if (headers.hasOwnProperty(h) && headers[h] !== null) {
		      xhr.setRequestHeader(h, headers[h]);
		    }
		  }
		  xhr.send(formData);
		}
		
		module.exports = exports['default'];
	
	/***/ },
	/* 400 */
	18,
	/* 401 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var React = __webpack_require__(1);
		
		module.exports = function toArray(children) {
		  var ret = [];
		  React.Children.forEach(children, function each(c) {
		    ret.push(c);
		  });
		  return ret;
		};
	
	/***/ },
	/* 402 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var shallowEqual = __webpack_require__(35);
		
		/**
		 * If your React component's render function is "pure", e.g. it will render the
		 * same result given the same props and state, provide this Mixin for a
		 * considerable performance boost.
		 *
		 * Most React components have pure render functions.
		 *
		 * Example:
		 *
		 *   const ReactComponentWithPureRenderMixin =
		 *     require('ReactComponentWithPureRenderMixin');
		 *   React.createClass({
		 *     mixins: [ReactComponentWithPureRenderMixin],
		 *
		 *     render: function() {
		 *       return <div className={this.props.className}>foo</div>;
		 *     }
		 *   });
		 *
		 * Note: This only checks shallow equality for props and state. If these contain
		 * complex data structures this mixin may have false-negatives for deeper
		 * differences. Only mixin to components which have simple props and state, or
		 * use `forceUpdate()` when you know deep data structures have changed.
		 */
		var ReactComponentWithPureRenderMixin = {
		  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
		    return !shallowEqual(this.props, nextProps) || !shallowEqual(this.state, nextState);
		  }
		};
		
		module.exports = ReactComponentWithPureRenderMixin;
	
	/***/ },
	/* 403 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var deprecate = __webpack_require__(129);
		var classNames = __webpack_require__(2);
		
		module.exports = deprecate(classNames, '`rcUtil.classSet()` is deprecated, use `classNames()` by `require(\'classnames\')` instead');
	
	/***/ },
	/* 404 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var deprecate = __webpack_require__(129);
		var classNames = __webpack_require__(2);
		
		module.exports = deprecate(classNames, '`rcUtil.joinClasses()` is deprecated, use `classNames()` by `require(\'classnames\')` instead');
	
	/***/ },
	/* 405 */
	/***/ function(module, exports, __webpack_require__) {
	
		var canUseDOM = __webpack_require__(260);
		var enquire = canUseDOM && __webpack_require__(270);
		var json2mq = __webpack_require__(91);
		
		var ResponsiveMixin = {
		  media: function (query, handler) {
		    query = json2mq(query);
		    if (typeof handler === 'function') {
		      handler = {
		        match: handler
		      };
		    }
		    enquire.register(query, handler);
		
		    // Queue the handlers to unregister them at unmount  
		    if (! this._responsiveMediaHandlers) {
		      this._responsiveMediaHandlers = [];
		    }
		    this._responsiveMediaHandlers.push({query: query, handler: handler});
		  },
		  componentWillUnmount: function () {
		    if (this._responsiveMediaHandlers) {
		      this._responsiveMediaHandlers.forEach(function(obj) {
		        enquire.unregister(obj.query, obj.handler);
		      });
		    }
		  }
		};
		
		module.exports = ResponsiveMixin;
	
	/***/ },
	/* 406 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var PrevArrow = _react2['default'].createClass({
		  displayName: 'PrevArrow',
		
		  clickHandler: function clickHandler(options, e) {
		    e.preventDefault();
		    this.props.clickHandler(options, e);
		  },
		  render: function render() {
		    var prevClasses = { 'slick-prev': true };
		    var prevHandler = this.clickHandler.bind(this, { message: 'previous' });
		
		    if (!this.props.infinite && (this.props.currentSlide === 0 || this.props.slideCount <= this.props.slidesToShow)) {
		      prevClasses['slick-disabled'] = true;
		      prevHandler = null;
		    }
		
		    var prevArrowProps = {
		      key: '0',
		      'data-role': 'none',
		      className: (0, _classnames2['default'])(prevClasses),
		      style: { display: 'block' },
		      onClick: prevHandler
		    };
		    var prevArrow;
		
		    if (this.props.prevArrow) {
		      prevArrow = _react2['default'].cloneElement(this.props.prevArrow, prevArrowProps);
		    } else {
		      prevArrow = _react2['default'].createElement(
		        'button',
		        _extends({ key: '0', type: 'button' }, prevArrowProps),
		        ' Previous'
		      );
		    }
		
		    return prevArrow;
		  }
		});
		
		exports.PrevArrow = PrevArrow;
		var NextArrow = _react2['default'].createClass({
		  displayName: 'NextArrow',
		
		  clickHandler: function clickHandler(options, e) {
		    e.preventDefault();
		    this.props.clickHandler(options, e);
		  },
		  render: function render() {
		    var nextClasses = { 'slick-next': true };
		    var nextHandler = this.clickHandler.bind(this, { message: 'next' });
		
		    if (!this.props.infinite) {
		      if (this.props.centerMode && this.props.currentSlide >= this.props.slideCount - 1) {
		        nextClasses['slick-disabled'] = true;
		        nextHandler = null;
		      } else {
		        if (this.props.currentSlide >= this.props.slideCount - this.props.slidesToShow) {
		          nextClasses['slick-disabled'] = true;
		          nextHandler = null;
		        }
		      }
		
		      if (this.props.slideCount <= this.props.slidesToShow) {
		        nextClasses['slick-disabled'] = true;
		        nextHandler = null;
		      }
		    }
		
		    var nextArrowProps = {
		      key: '1',
		      'data-role': 'none',
		      className: (0, _classnames2['default'])(nextClasses),
		      style: { display: 'block' },
		      onClick: nextHandler
		    };
		
		    var nextArrow;
		
		    if (this.props.nextArrow) {
		      nextArrow = _react2['default'].cloneElement(this.props.nextArrow, nextArrowProps);
		    } else {
		      nextArrow = _react2['default'].createElement(
		        'button',
		        _extends({ key: '1', type: 'button' }, nextArrowProps),
		        ' Next'
		      );
		    }
		
		    return nextArrow;
		  }
		});
		exports.NextArrow = NextArrow;
	
	/***/ },
	/* 407 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var getDotCount = function getDotCount(spec) {
		  var dots;
		  dots = Math.ceil(spec.slideCount / spec.slidesToScroll);
		  return dots;
		};
		
		var Dots = _react2['default'].createClass({
		  displayName: 'Dots',
		
		  clickHandler: function clickHandler(options, e) {
		    // In Autoplay the focus stays on clicked button even after transition
		    // to next slide. That only goes away by click somewhere outside
		    e.preventDefault();
		    this.props.clickHandler(options);
		  },
		  render: function render() {
		    var _this = this;
		
		    var dotCount = getDotCount({
		      slideCount: this.props.slideCount,
		      slidesToScroll: this.props.slidesToScroll
		    });
		
		    // Apply join & split to Array to pre-fill it for IE8
		    //
		    // Credit: http://stackoverflow.com/a/13735425/1849458
		    var dots = Array.apply(null, Array(dotCount + 1).join('0').split('')).map(function (x, i) {
		
		      var className = (0, _classnames2['default'])({
		        'slick-active': _this.props.currentSlide === i * _this.props.slidesToScroll
		      });
		
		      var dotOptions = {
		        message: 'dots',
		        index: i,
		        slidesToScroll: _this.props.slidesToScroll,
		        currentSlide: _this.props.currentSlide
		      };
		
		      return _react2['default'].createElement(
		        'li',
		        { key: i, className: className },
		        _react2['default'].createElement(
		          'button',
		          { onClick: _this.clickHandler.bind(_this, dotOptions) },
		          i + 1
		        )
		      );
		    });
		
		    return _react2['default'].createElement(
		      'ul',
		      { className: this.props.dotsClass, style: { display: 'block' } },
		      dots
		    );
		  }
		});
		exports.Dots = Dots;
	
	/***/ },
	/* 408 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		module.exports = __webpack_require__(412);
	
	/***/ },
	/* 409 */
	/***/ function(module, exports) {
	
		"use strict";
		
		var initialState = {
		    animating: false,
		    dragging: false,
		    autoPlayTimer: null,
		    currentDirection: 0,
		    currentLeft: null,
		    currentSlide: 0,
		    direction: 1,
		    // listWidth: null,
		    // listHeight: null,
		    // loadIndex: 0,
		    slideCount: null,
		    slideWidth: null,
		    // sliding: false,
		    // slideOffset: 0,
		    swipeLeft: null,
		    touchObject: {
		        startX: 0,
		        startY: 0,
		        curX: 0,
		        curY: 0
		    },
		
		    lazyLoadedList: [],
		
		    // added for react
		    initialized: false,
		    edgeDragged: false,
		    swiped: false, // used by swipeEvent. differentites between touch and swipe.
		    trackStyle: {},
		    trackWidth: 0
		
		    // Removed
		    // transformsEnabled: false,
		    // $nextArrow: null,
		    // $prevArrow: null,
		    // $dots: null,
		    // $list: null,
		    // $slideTrack: null,
		    // $slides: null,
		};
		
		module.exports = initialState;
	
	/***/ },
	/* 410 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _mixinsEventHandlers = __webpack_require__(411);
		
		var _mixinsEventHandlers2 = _interopRequireDefault(_mixinsEventHandlers);
		
		var _mixinsHelpers = __webpack_require__(127);
		
		var _mixinsHelpers2 = _interopRequireDefault(_mixinsHelpers);
		
		var _initialState = __webpack_require__(409);
		
		var _initialState2 = _interopRequireDefault(_initialState);
		
		var _defaultProps = __webpack_require__(125);
		
		var _defaultProps2 = _interopRequireDefault(_defaultProps);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var _track = __webpack_require__(413);
		
		var _dots = __webpack_require__(407);
		
		var _arrows = __webpack_require__(406);
		
		var InnerSlider = _react2['default'].createClass({
		  displayName: 'InnerSlider',
		
		  mixins: [_mixinsHelpers2['default'], _mixinsEventHandlers2['default']],
		  getInitialState: function getInitialState() {
		    return _initialState2['default'];
		  },
		  getDefaultProps: function getDefaultProps() {
		    return _defaultProps2['default'];
		  },
		  componentWillMount: function componentWillMount() {
		    if (this.props.init) {
		      this.props.init();
		    }
		    this.setState({
		      mounted: true
		    });
		    var lazyLoadedList = [];
		    for (var i = 0; i < _react2['default'].Children.count(this.props.children); i++) {
		      if (i >= this.state.currentSlide && i < this.state.currentSlide + this.props.slidesToShow) {
		        lazyLoadedList.push(i);
		      }
		    }
		
		    if (this.props.lazyLoad && this.state.lazyLoadedList.length === 0) {
		      this.setState({
		        lazyLoadedList: lazyLoadedList
		      });
		    }
		  },
		  componentDidMount: function componentDidMount() {
		    // Hack for autoplay -- Inspect Later
		    this.initialize(this.props);
		    this.adaptHeight();
		    if (window.addEventListener) {
		      window.addEventListener('resize', this.onWindowResized);
		    } else {
		      window.attachEvent('onresize', this.onWindowResized);
		    }
		  },
		  componentWillUnmount: function componentWillUnmount() {
		    if (window.addEventListener) {
		      window.removeEventListener('resize', this.onWindowResized);
		    } else {
		      window.detachEvent('onresize', this.onWindowResized);
		    }
		    if (this.state.autoPlayTimer) {
		      window.clearInterval(this.state.autoPlayTimer);
		    }
		  },
		  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
		    if (this.props.slickGoTo != nextProps.slickGoTo) {
		      this.changeSlide({
		        message: 'index',
		        index: nextProps.slickGoTo,
		        currentSlide: this.state.currentSlide
		      });
		    } else {
		      this.update(nextProps);
		    }
		  },
		  componentDidUpdate: function componentDidUpdate() {
		    this.adaptHeight();
		  },
		  onWindowResized: function onWindowResized() {
		    this.update(this.props);
		  },
		  render: function render() {
		    var className = (0, _classnames2['default'])('slick-initialized', 'slick-slider', this.props.className);
		
		    var trackProps = {
		      fade: this.props.fade,
		      cssEase: this.props.cssEase,
		      speed: this.props.speed,
		      infinite: this.props.infinite,
		      centerMode: this.props.centerMode,
		      currentSlide: this.state.currentSlide,
		      lazyLoad: this.props.lazyLoad,
		      lazyLoadedList: this.state.lazyLoadedList,
		      rtl: this.props.rtl,
		      slideWidth: this.state.slideWidth,
		      slidesToShow: this.props.slidesToShow,
		      slideCount: this.state.slideCount,
		      trackStyle: this.state.trackStyle,
		      variableWidth: this.props.variableWidth
		    };
		
		    var dots;
		
		    if (this.props.dots === true && this.state.slideCount > this.props.slidesToShow) {
		      var dotProps = {
		        dotsClass: this.props.dotsClass,
		        slideCount: this.state.slideCount,
		        slidesToShow: this.props.slidesToShow,
		        currentSlide: this.state.currentSlide,
		        slidesToScroll: this.props.slidesToScroll,
		        clickHandler: this.changeSlide
		      };
		
		      dots = _react2['default'].createElement(_dots.Dots, dotProps);
		    }
		
		    var prevArrow, nextArrow;
		
		    var arrowProps = {
		      infinite: this.props.infinite,
		      centerMode: this.props.centerMode,
		      currentSlide: this.state.currentSlide,
		      slideCount: this.state.slideCount,
		      slidesToShow: this.props.slidesToShow,
		      prevArrow: this.props.prevArrow,
		      nextArrow: this.props.nextArrow,
		      clickHandler: this.changeSlide
		    };
		
		    if (this.props.arrows) {
		      prevArrow = _react2['default'].createElement(_arrows.PrevArrow, arrowProps);
		      nextArrow = _react2['default'].createElement(_arrows.NextArrow, arrowProps);
		    }
		
		    return _react2['default'].createElement(
		      'div',
		      { className: className, onMouseEnter: this.onInnerSliderEnter, onMouseLeave: this.onInnerSliderLeave },
		      _react2['default'].createElement(
		        'div',
		        {
		          ref: 'list',
		          className: 'slick-list',
		          onMouseDown: this.swipeStart,
		          onMouseMove: this.state.dragging ? this.swipeMove : null,
		          onMouseUp: this.swipeEnd,
		          onMouseLeave: this.state.dragging ? this.swipeEnd : null,
		          onTouchStart: this.swipeStart,
		          onTouchMove: this.state.dragging ? this.swipeMove : null,
		          onTouchEnd: this.swipeEnd,
		          onTouchCancel: this.state.dragging ? this.swipeEnd : null },
		        _react2['default'].createElement(
		          _track.Track,
		          _extends({ ref: 'track' }, trackProps),
		          this.props.children
		        )
		      ),
		      prevArrow,
		      nextArrow,
		      dots
		    );
		  }
		});
		exports.InnerSlider = InnerSlider;
	
	/***/ },
	/* 411 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		var _trackHelper = __webpack_require__(128);
		
		var _helpers = __webpack_require__(127);
		
		var _helpers2 = _interopRequireDefault(_helpers);
		
		var _objectAssign = __webpack_require__(34);
		
		var _objectAssign2 = _interopRequireDefault(_objectAssign);
		
		var EventHandlers = {
		  // Event handler for previous and next
		  changeSlide: function changeSlide(options) {
		    var indexOffset, previousInt, slideOffset, unevenOffset, targetSlide;
		    unevenOffset = this.state.slideCount % this.props.slidesToScroll !== 0;
		    indexOffset = unevenOffset ? 0 : (this.state.slideCount - this.state.currentSlide) % this.props.slidesToScroll;
		
		    if (options.message === 'previous') {
		      slideOffset = indexOffset === 0 ? this.props.slidesToScroll : this.props.slidesToShow - indexOffset;
		      targetSlide = this.state.currentSlide - slideOffset;
		      if (this.props.lazyLoad) {
		        previousInt = this.state.currentSlide - slideOffset;
		        targetSlide = previousInt === -1 ? this.state.slideCount - 1 : previousInt;
		      }
		    } else if (options.message === 'next') {
		      slideOffset = indexOffset === 0 ? this.props.slidesToScroll : indexOffset;
		      targetSlide = this.state.currentSlide + slideOffset;
		    } else if (options.message === 'dots') {
		      // Click on dots
		      targetSlide = options.index * options.slidesToScroll;
		      if (targetSlide === options.currentSlide) {
		        return;
		      }
		    } else if (options.message === 'index') {
		      targetSlide = options.index;
		      if (targetSlide === options.currentSlide) {
		        return;
		      }
		    }
		
		    this.slideHandler(targetSlide);
		  },
		  // Accessiblity handler for previous and next
		  keyHandler: function keyHandler(e) {},
		  // Focus on selecting a slide (click handler on track)
		  selectHandler: function selectHandler(e) {},
		  swipeStart: function swipeStart(e) {
		    var touches, posX, posY;
		
		    if (this.props.swipe === false || 'ontouchend' in document && this.props.swipe === false) {
		      return;
		    } else if (this.props.draggable === false && e.type.indexOf('mouse') !== -1) {
		      return;
		    }
		    posX = e.touches !== undefined ? e.touches[0].pageX : e.clientX;
		    posY = e.touches !== undefined ? e.touches[0].pageY : e.clientY;
		    this.setState({
		      dragging: true,
		      touchObject: {
		        startX: posX,
		        startY: posY,
		        curX: posX,
		        curY: posY
		      }
		    });
		  },
		  swipeMove: function swipeMove(e) {
		    if (!this.state.dragging) {
		      return;
		    }
		    if (this.state.animating) {
		      return;
		    }
		    var swipeLeft;
		    var curLeft, positionOffset;
		    var touchObject = this.state.touchObject;
		
		    curLeft = (0, _trackHelper.getTrackLeft)((0, _objectAssign2['default'])({
		      slideIndex: this.state.currentSlide,
		      trackRef: this.refs.track
		    }, this.props, this.state));
		    touchObject.curX = e.touches ? e.touches[0].pageX : e.clientX;
		    touchObject.curY = e.touches ? e.touches[0].pageY : e.clientY;
		    touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(touchObject.curX - touchObject.startX, 2)));
		
		    positionOffset = (this.props.rtl === false ? 1 : -1) * (touchObject.curX > touchObject.startX ? 1 : -1);
		
		    var currentSlide = this.state.currentSlide;
		    var dotCount = Math.ceil(this.state.slideCount / this.props.slidesToScroll);
		    var swipeDirection = this.swipeDirection(this.state.touchObject);
		    var touchSwipeLength = touchObject.swipeLength;
		
		    if (this.props.infinite === false) {
		      if (currentSlide === 0 && swipeDirection === 'right' || currentSlide + 1 >= dotCount && swipeDirection === 'left') {
		        touchSwipeLength = touchObject.swipeLength * this.props.edgeFriction;
		
		        if (this.state.edgeDragged === false && this.props.edgeEvent) {
		          this.props.edgeEvent(swipeDirection);
		          this.setState({ edgeDragged: true });
		        }
		      }
		    }
		
		    if (this.state.swiped === false && this.props.swipeEvent) {
		      this.props.swipeEvent(swipeDirection);
		      this.setState({ swiped: true });
		    }
		
		    swipeLeft = curLeft + touchSwipeLength * positionOffset;
		    this.setState({
		      touchObject: touchObject,
		      swipeLeft: swipeLeft,
		      trackStyle: (0, _trackHelper.getTrackCSS)((0, _objectAssign2['default'])({ left: swipeLeft }, this.props, this.state))
		    });
		
		    if (Math.abs(touchObject.curX - touchObject.startX) < Math.abs(touchObject.curY - touchObject.startY) * 0.8) {
		      return;
		    }
		    if (touchObject.swipeLength > 4) {
		      e.preventDefault();
		    }
		  },
		  swipeEnd: function swipeEnd(e) {
		    if (!this.state.dragging) {
		      return;
		    }
		    var touchObject = this.state.touchObject;
		    var minSwipe = this.state.listWidth / this.props.touchThreshold;
		    var swipeDirection = this.swipeDirection(touchObject);
		
		    // reset the state of touch related state variables.
		    this.setState({
		      dragging: false,
		      edgeDragged: false,
		      swiped: false,
		      swipeLeft: null,
		      touchObject: {}
		    });
		    // Fix for #13
		    if (!touchObject.swipeLength) {
		      return;
		    }
		    if (touchObject.swipeLength > minSwipe) {
		      e.preventDefault();
		      if (swipeDirection === 'left') {
		        this.slideHandler(this.state.currentSlide + this.props.slidesToScroll);
		      } else if (swipeDirection === 'right') {
		        this.slideHandler(this.state.currentSlide - this.props.slidesToScroll);
		      } else {
		        this.slideHandler(this.state.currentSlide);
		      }
		    } else {
		      // Adjust the track back to it's original position.
		      var currentLeft = (0, _trackHelper.getTrackLeft)((0, _objectAssign2['default'])({
		        slideIndex: this.state.currentSlide,
		        trackRef: this.refs.track
		      }, this.props, this.state));
		
		      this.setState({
		        trackStyle: (0, _trackHelper.getTrackAnimateCSS)((0, _objectAssign2['default'])({ left: currentLeft }, this.props, this.state))
		      });
		    }
		  },
		  onInnerSliderEnter: function onInnerSliderEnter(e) {
		    if (this.props.autoplay && this.props.pauseOnHover) {
		      this.pause();
		    }
		  },
		  onInnerSliderLeave: function onInnerSliderLeave(e) {
		    if (this.props.autoplay && this.props.pauseOnHover) {
		      this.autoPlay();
		    }
		  }
		};
		
		exports['default'] = EventHandlers;
		module.exports = exports['default'];
	
	/***/ },
	/* 412 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _innerSlider = __webpack_require__(410);
		
		var _objectAssign = __webpack_require__(34);
		
		var _objectAssign2 = _interopRequireDefault(_objectAssign);
		
		var _json2mq = __webpack_require__(91);
		
		var _json2mq2 = _interopRequireDefault(_json2mq);
		
		var _reactResponsiveMixin = __webpack_require__(405);
		
		var _reactResponsiveMixin2 = _interopRequireDefault(_reactResponsiveMixin);
		
		var _defaultProps = __webpack_require__(125);
		
		var _defaultProps2 = _interopRequireDefault(_defaultProps);
		
		var Slider = _react2['default'].createClass({
		  displayName: 'Slider',
		
		  mixins: [_reactResponsiveMixin2['default']],
		  getInitialState: function getInitialState() {
		    return {
		      breakpoint: null
		    };
		  },
		  componentDidMount: function componentDidMount() {
		    var _this = this;
		
		    if (this.props.responsive) {
		      var breakpoints = this.props.responsive.map(function (breakpt) {
		        return breakpt.breakpoint;
		      });
		      breakpoints.sort(function (x, y) {
		        return x - y;
		      });
		
		      breakpoints.forEach(function (breakpoint, index) {
		        var bQuery;
		        if (index === 0) {
		          bQuery = (0, _json2mq2['default'])({ minWidth: 0, maxWidth: breakpoint });
		        } else {
		          bQuery = (0, _json2mq2['default'])({ minWidth: breakpoints[index - 1], maxWidth: breakpoint });
		        }
		        _this.media(bQuery, function () {
		          _this.setState({ breakpoint: breakpoint });
		        });
		      });
		
		      // Register media query for full screen. Need to support resize from small to large
		      var query = (0, _json2mq2['default'])({ minWidth: breakpoints.slice(-1)[0] });
		
		      this.media(query, function () {
		        _this.setState({ breakpoint: null });
		      });
		    }
		  },
		  render: function render() {
		    var _this2 = this;
		
		    var settings;
		    var newProps;
		    if (this.state.breakpoint) {
		      newProps = this.props.responsive.filter(function (resp) {
		        return resp.breakpoint === _this2.state.breakpoint;
		      });
		      settings = newProps[0].settings === 'unslick' ? 'unslick' : (0, _objectAssign2['default'])({}, this.props, newProps[0].settings);
		    } else {
		      settings = (0, _objectAssign2['default'])({}, _defaultProps2['default'], this.props);
		    }
		    if (settings === 'unslick') {
		      // if 'unslick' responsive breakpoint setting used, just return the <Slider> tag nested HTML
		      return _react2['default'].createElement(
		        'div',
		        null,
		        this.props.children
		      );
		    } else {
		      return _react2['default'].createElement(
		        _innerSlider.InnerSlider,
		        settings,
		        this.props.children
		      );
		    }
		  }
		});
		
		module.exports = Slider;
	
	/***/ },
	/* 413 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		Object.defineProperty(exports, '__esModule', {
		  value: true
		});
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }
		
		var _react = __webpack_require__(1);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _objectAssign = __webpack_require__(34);
		
		var _objectAssign2 = _interopRequireDefault(_objectAssign);
		
		var _classnames = __webpack_require__(2);
		
		var _classnames2 = _interopRequireDefault(_classnames);
		
		var getSlideClasses = function getSlideClasses(spec) {
		  var slickActive, slickCenter, slickCloned;
		  var centerOffset, index;
		
		  if (spec.rtl) {
		    index = spec.slideCount - 1 - spec.index;
		  } else {
		    index = spec.index;
		  }
		
		  slickCloned = index < 0 || index >= spec.slideCount;
		  if (spec.centerMode) {
		    centerOffset = Math.floor(spec.slidesToShow / 2);
		    slickCenter = (index - spec.currentSlide) % spec.slideCount === 0;
		    if (index > spec.currentSlide - centerOffset - 1 && index <= spec.currentSlide + centerOffset) {
		      slickActive = true;
		    }
		  } else {
		    slickActive = spec.currentSlide <= index && index < spec.currentSlide + spec.slidesToShow;
		  }
		  return (0, _classnames2['default'])({
		    'slick-slide': true,
		    'slick-active': slickActive,
		    'slick-center': slickCenter,
		    'slick-cloned': slickCloned
		  });
		};
		
		var getSlideStyle = function getSlideStyle(spec) {
		  var style = {};
		
		  if (spec.variableWidth === undefined || spec.variableWidth === false) {
		    style.width = spec.slideWidth;
		  }
		
		  if (spec.fade) {
		    style.position = 'relative';
		    style.left = -spec.index * spec.slideWidth;
		    style.opacity = spec.currentSlide === spec.index ? 1 : 0;
		    style.transition = 'opacity ' + spec.speed + 'ms ' + spec.cssEase;
		    style.WebkitTransition = 'opacity ' + spec.speed + 'ms ' + spec.cssEase;
		  }
		
		  return style;
		};
		
		var getKey = function getKey(child, fallbackKey) {
		  // key could be a zero
		  return child.key === null || child.key === undefined ? fallbackKey : child.key;
		};
		
		var renderSlides = function renderSlides(spec) {
		  var key;
		  var slides = [];
		  var preCloneSlides = [];
		  var postCloneSlides = [];
		  var count = _react2['default'].Children.count(spec.children);
		  var child;
		
		  _react2['default'].Children.forEach(spec.children, function (elem, index) {
		    if (!spec.lazyLoad | (spec.lazyLoad && spec.lazyLoadedList.indexOf(index) >= 0)) {
		      child = elem;
		    } else {
		      child = _react2['default'].createElement('div', null);
		    }
		    var childStyle = getSlideStyle((0, _objectAssign2['default'])({}, spec, { index: index }));
		    var slickClasses = getSlideClasses((0, _objectAssign2['default'])({ index: index }, spec));
		    var cssClasses;
		
		    if (child.props.className) {
		      cssClasses = (0, _classnames2['default'])(slickClasses, child.props.className);
		    } else {
		      cssClasses = slickClasses;
		    }
		
		    slides.push(_react2['default'].cloneElement(child, {
		      key: 'original' + getKey(child, index),
		      'data-index': index,
		      className: cssClasses,
		      style: (0, _objectAssign2['default'])({}, child.props.style || {}, childStyle)
		    }));
		
		    // variableWidth doesn't wrap properly.
		    if (spec.infinite && spec.fade === false) {
		      var infiniteCount = spec.variableWidth ? spec.slidesToShow + 1 : spec.slidesToShow;
		
		      if (index >= count - infiniteCount) {
		        key = -(count - index);
		        preCloneSlides.push(_react2['default'].cloneElement(child, {
		          key: 'cloned' + getKey(child, key),
		          'data-index': key,
		          className: cssClasses,
		          style: (0, _objectAssign2['default'])({}, child.props.style || {}, childStyle)
		        }));
		      }
		
		      if (index < infiniteCount) {
		        key = count + index;
		        postCloneSlides.push(_react2['default'].cloneElement(child, {
		          key: 'cloned' + getKey(child, key),
		          'data-index': key,
		          className: cssClasses,
		          style: (0, _objectAssign2['default'])({}, child.props.style || {}, childStyle)
		        }));
		      }
		    }
		  });
		
		  if (spec.rtl) {
		    return preCloneSlides.concat(slides, postCloneSlides).reverse();
		  } else {
		    return preCloneSlides.concat(slides, postCloneSlides);
		  }
		};
		
		var Track = _react2['default'].createClass({
		  displayName: 'Track',
		
		  render: function render() {
		    var slides = renderSlides(this.props);
		    return _react2['default'].createElement(
		      'div',
		      { className: 'slick-track', style: this.props.trackStyle },
		      slides
		    );
		  }
		});
		exports.Track = Track;
	
	/***/ },
	/* 414 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * @providesModule ReactComponentWithPureRenderMixin
		 */
		
		'use strict';
		
		var shallowCompare = __webpack_require__(417);
		
		/**
		 * If your React component's render function is "pure", e.g. it will render the
		 * same result given the same props and state, provide this mixin for a
		 * considerable performance boost.
		 *
		 * Most React components have pure render functions.
		 *
		 * Example:
		 *
		 *   var ReactComponentWithPureRenderMixin =
		 *     require('ReactComponentWithPureRenderMixin');
		 *   React.createClass({
		 *     mixins: [ReactComponentWithPureRenderMixin],
		 *
		 *     render: function() {
		 *       return <div className={this.props.className}>foo</div>;
		 *     }
		 *   });
		 *
		 * Note: This only checks shallow equality for props and state. If these contain
		 * complex data structures this mixin may have false-negatives for deeper
		 * differences. Only mixin to components which have simple props and state, or
		 * use `forceUpdate()` when you know deep data structures have changed.
		 *
		 * See https://facebook.github.io/react/docs/pure-render-mixin.html
		 */
		var ReactComponentWithPureRenderMixin = {
		  shouldComponentUpdate: function (nextProps, nextState) {
		    return shallowCompare(this, nextProps, nextState);
		  }
		};
		
		module.exports = ReactComponentWithPureRenderMixin;
	
	/***/ },
	/* 415 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * @providesModule ReactTransitionEvents
		 */
		
		'use strict';
		
		var ExecutionEnvironment = __webpack_require__(86);
		
		var getVendorPrefixedEventName = __webpack_require__(416);
		
		var endEvents = [];
		
		function detectEvents() {
		  var animEnd = getVendorPrefixedEventName('animationend');
		  var transEnd = getVendorPrefixedEventName('transitionend');
		
		  if (animEnd) {
		    endEvents.push(animEnd);
		  }
		
		  if (transEnd) {
		    endEvents.push(transEnd);
		  }
		}
		
		if (ExecutionEnvironment.canUseDOM) {
		  detectEvents();
		}
		
		// We use the raw {add|remove}EventListener() call because EventListener
		// does not know how to remove event listeners and we really should
		// clean up. Also, these events are not triggered in older browsers
		// so we should be A-OK here.
		
		function addEventListener(node, eventName, eventListener) {
		  node.addEventListener(eventName, eventListener, false);
		}
		
		function removeEventListener(node, eventName, eventListener) {
		  node.removeEventListener(eventName, eventListener, false);
		}
		
		var ReactTransitionEvents = {
		  addEndEventListener: function (node, eventListener) {
		    if (endEvents.length === 0) {
		      // If CSS transitions are not supported, trigger an "end animation"
		      // event immediately.
		      window.setTimeout(eventListener, 0);
		      return;
		    }
		    endEvents.forEach(function (endEvent) {
		      addEventListener(node, endEvent, eventListener);
		    });
		  },
		
		  removeEndEventListener: function (node, eventListener) {
		    if (endEvents.length === 0) {
		      return;
		    }
		    endEvents.forEach(function (endEvent) {
		      removeEventListener(node, endEvent, eventListener);
		    });
		  }
		};
		
		module.exports = ReactTransitionEvents;
	
	/***/ },
	/* 416 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		 * @providesModule getVendorPrefixedEventName
		 */
		
		'use strict';
		
		var ExecutionEnvironment = __webpack_require__(86);
		
		/**
		 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
		 *
		 * @param {string} styleProp
		 * @param {string} eventName
		 * @returns {object}
		 */
		function makePrefixMap(styleProp, eventName) {
		  var prefixes = {};
		
		  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
		  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
		  prefixes['Moz' + styleProp] = 'moz' + eventName;
		  prefixes['ms' + styleProp] = 'MS' + eventName;
		  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();
		
		  return prefixes;
		}
		
		/**
		 * A list of event names to a configurable list of vendor prefixes.
		 */
		var vendorPrefixes = {
		  animationend: makePrefixMap('Animation', 'AnimationEnd'),
		  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
		  animationstart: makePrefixMap('Animation', 'AnimationStart'),
		  transitionend: makePrefixMap('Transition', 'TransitionEnd')
		};
		
		/**
		 * Event names that have already been detected and prefixed (if applicable).
		 */
		var prefixedEventNames = {};
		
		/**
		 * Element to check for prefixes on.
		 */
		var style = {};
		
		/**
		 * Bootstrap if a DOM exists.
		 */
		if (ExecutionEnvironment.canUseDOM) {
		  style = document.createElement('div').style;
		
		  // On some platforms, in particular some releases of Android 4.x,
		  // the un-prefixed "animation" and "transition" properties are defined on the
		  // style object but the events that fire will still be prefixed, so we need
		  // to check if the un-prefixed events are usable, and if not remove them from the map.
		  if (!('AnimationEvent' in window)) {
		    delete vendorPrefixes.animationend.animation;
		    delete vendorPrefixes.animationiteration.animation;
		    delete vendorPrefixes.animationstart.animation;
		  }
		
		  // Same as above
		  if (!('TransitionEvent' in window)) {
		    delete vendorPrefixes.transitionend.transition;
		  }
		}
		
		/**
		 * Attempts to determine the correct vendor prefixed event name.
		 *
		 * @param {string} eventName
		 * @returns {string}
		 */
		function getVendorPrefixedEventName(eventName) {
		  if (prefixedEventNames[eventName]) {
		    return prefixedEventNames[eventName];
		  } else if (!vendorPrefixes[eventName]) {
		    return eventName;
		  }
		
		  var prefixMap = vendorPrefixes[eventName];
		
		  for (var styleProp in prefixMap) {
		    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
		      return prefixedEventNames[eventName] = prefixMap[styleProp];
		    }
		  }
		
		  return '';
		}
		
		module.exports = getVendorPrefixedEventName;
	
	/***/ },
	/* 417 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * Copyright 2013-present, Facebook, Inc.
		 * All rights reserved.
		 *
		 * This source code is licensed under the BSD-style license found in the
		 * LICENSE file in the root directory of this source tree. An additional grant
		 * of patent rights can be found in the PATENTS file in the same directory.
		 *
		* @providesModule shallowCompare
		*/
		
		'use strict';
		
		var shallowEqual = __webpack_require__(271);
		
		/**
		 * Does a shallow comparison for props and state.
		 * See ReactComponentWithPureRenderMixin
		 * See also https://facebook.github.io/react/docs/shallow-compare.html
		 */
		function shallowCompare(instance, nextProps, nextState) {
		  return !shallowEqual(instance.props, nextProps) || !shallowEqual(instance.state, nextState);
		}
		
		module.exports = shallowCompare;
	
	/***/ },
	/* 418 */
	/***/ function(module, exports) {
	
		var camel2hyphen = function (str) {
		  return str
		          .replace(/[A-Z]/g, function (match) {
		            return '-' + match.toLowerCase();
		          })
		          .toLowerCase();
		};
		
		module.exports = camel2hyphen;
	
	/***/ },
	/* 419 */
	/***/ function(module, exports, __webpack_require__) {
	
		var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! VelocityJS.org (1.2.3). (C) 2014 Julian Shapiro. MIT @license: en.wikipedia.org/wiki/MIT_License */
		
		/*************************
		   Velocity jQuery Shim
		*************************/
		
		/*! VelocityJS.org jQuery Shim (1.0.1). (C) 2014 The jQuery Foundation. MIT @license: en.wikipedia.org/wiki/MIT_License. */
		
		/* This file contains the jQuery functions that Velocity relies on, thereby removing Velocity's dependency on a full copy of jQuery, and allowing it to work in any environment. */
		/* These shimmed functions are only used if jQuery isn't present. If both this shim and jQuery are loaded, Velocity defaults to jQuery proper. */
		/* Browser support: Using this shim instead of jQuery proper removes support for IE8. */
		
		;(function (window) {
		    /***************
		         Setup
		    ***************/
		
		    /* If jQuery is already loaded, there's no point in loading this shim. */
		    if (window.jQuery) {
		        return;
		    }
		
		    /* jQuery base. */
		    var $ = function (selector, context) {
		        return new $.fn.init(selector, context);
		    };
		
		    /********************
		       Private Methods
		    ********************/
		
		    /* jQuery */
		    $.isWindow = function (obj) {
		        /* jshint eqeqeq: false */
		        return obj != null && obj == obj.window;
		    };
		
		    /* jQuery */
		    $.type = function (obj) {
		        if (obj == null) {
		            return obj + "";
		        }
		
		        return typeof obj === "object" || typeof obj === "function" ?
		            class2type[toString.call(obj)] || "object" :
		            typeof obj;
		    };
		
		    /* jQuery */
		    $.isArray = Array.isArray || function (obj) {
		        return $.type(obj) === "array";
		    };
		
		    /* jQuery */
		    function isArraylike (obj) {
		        var length = obj.length,
		            type = $.type(obj);
		
		        if (type === "function" || $.isWindow(obj)) {
		            return false;
		        }
		
		        if (obj.nodeType === 1 && length) {
		            return true;
		        }
		
		        return type === "array" || length === 0 || typeof length === "number" && length > 0 && (length - 1) in obj;
		    }
		
		    /***************
		       $ Methods
		    ***************/
		
		    /* jQuery: Support removed for IE<9. */
		    $.isPlainObject = function (obj) {
		        var key;
		
		        if (!obj || $.type(obj) !== "object" || obj.nodeType || $.isWindow(obj)) {
		            return false;
		        }
		
		        try {
		            if (obj.constructor &&
		                !hasOwn.call(obj, "constructor") &&
		                !hasOwn.call(obj.constructor.prototype, "isPrototypeOf")) {
		                return false;
		            }
		        } catch (e) {
		            return false;
		        }
		
		        for (key in obj) {}
		
		        return key === undefined || hasOwn.call(obj, key);
		    };
		
		    /* jQuery */
		    $.each = function(obj, callback, args) {
		        var value,
		            i = 0,
		            length = obj.length,
		            isArray = isArraylike(obj);
		
		        if (args) {
		            if (isArray) {
		                for (; i < length; i++) {
		                    value = callback.apply(obj[i], args);
		
		                    if (value === false) {
		                        break;
		                    }
		                }
		            } else {
		                for (i in obj) {
		                    value = callback.apply(obj[i], args);
		
		                    if (value === false) {
		                        break;
		                    }
		                }
		            }
		
		        } else {
		            if (isArray) {
		                for (; i < length; i++) {
		                    value = callback.call(obj[i], i, obj[i]);
		
		                    if (value === false) {
		                        break;
		                    }
		                }
		            } else {
		                for (i in obj) {
		                    value = callback.call(obj[i], i, obj[i]);
		
		                    if (value === false) {
		                        break;
		                    }
		                }
		            }
		        }
		
		        return obj;
		    };
		
		    /* Custom */
		    $.data = function (node, key, value) {
		        /* $.getData() */
		        if (value === undefined) {
		            var id = node[$.expando],
		                store = id && cache[id];
		
		            if (key === undefined) {
		                return store;
		            } else if (store) {
		                if (key in store) {
		                    return store[key];
		                }
		            }
		        /* $.setData() */
		        } else if (key !== undefined) {
		            var id = node[$.expando] || (node[$.expando] = ++$.uuid);
		
		            cache[id] = cache[id] || {};
		            cache[id][key] = value;
		
		            return value;
		        }
		    };
		
		    /* Custom */
		    $.removeData = function (node, keys) {
		        var id = node[$.expando],
		            store = id && cache[id];
		
		        if (store) {
		            $.each(keys, function(_, key) {
		                delete store[key];
		            });
		        }
		    };
		
		    /* jQuery */
		    $.extend = function () {
		        var src, copyIsArray, copy, name, options, clone,
		            target = arguments[0] || {},
		            i = 1,
		            length = arguments.length,
		            deep = false;
		
		        if (typeof target === "boolean") {
		            deep = target;
		
		            target = arguments[i] || {};
		            i++;
		        }
		
		        if (typeof target !== "object" && $.type(target) !== "function") {
		            target = {};
		        }
		
		        if (i === length) {
		            target = this;
		            i--;
		        }
		
		        for (; i < length; i++) {
		            if ((options = arguments[i]) != null) {
		                for (name in options) {
		                    src = target[name];
		                    copy = options[name];
		
		                    if (target === copy) {
		                        continue;
		                    }
		
		                    if (deep && copy && ($.isPlainObject(copy) || (copyIsArray = $.isArray(copy)))) {
		                        if (copyIsArray) {
		                            copyIsArray = false;
		                            clone = src && $.isArray(src) ? src : [];
		
		                        } else {
		                            clone = src && $.isPlainObject(src) ? src : {};
		                        }
		
		                        target[name] = $.extend(deep, clone, copy);
		
		                    } else if (copy !== undefined) {
		                        target[name] = copy;
		                    }
		                }
		            }
		        }
		
		        return target;
		    };
		
		    /* jQuery 1.4.3 */
		    $.queue = function (elem, type, data) {
		        function $makeArray (arr, results) {
		            var ret = results || [];
		
		            if (arr != null) {
		                if (isArraylike(Object(arr))) {
		                    /* $.merge */
		                    (function(first, second) {
		                        var len = +second.length,
		                            j = 0,
		                            i = first.length;
		
		                        while (j < len) {
		                            first[i++] = second[j++];
		                        }
		
		                        if (len !== len) {
		                            while (second[j] !== undefined) {
		                                first[i++] = second[j++];
		                            }
		                        }
		
		                        first.length = i;
		
		                        return first;
		                    })(ret, typeof arr === "string" ? [arr] : arr);
		                } else {
		                    [].push.call(ret, arr);
		                }
		            }
		
		            return ret;
		        }
		
		        if (!elem) {
		            return;
		        }
		
		        type = (type || "fx") + "queue";
		
		        var q = $.data(elem, type);
		
		        if (!data) {
		            return q || [];
		        }
		
		        if (!q || $.isArray(data)) {
		            q = $.data(elem, type, $makeArray(data));
		        } else {
		            q.push(data);
		        }
		
		        return q;
		    };
		
		    /* jQuery 1.4.3 */
		    $.dequeue = function (elems, type) {
		        /* Custom: Embed element iteration. */
		        $.each(elems.nodeType ? [ elems ] : elems, function(i, elem) {
		            type = type || "fx";
		
		            var queue = $.queue(elem, type),
		                fn = queue.shift();
		
		            if (fn === "inprogress") {
		                fn = queue.shift();
		            }
		
		            if (fn) {
		                if (type === "fx") {
		                    queue.unshift("inprogress");
		                }
		
		                fn.call(elem, function() {
		                    $.dequeue(elem, type);
		                });
		            }
		        });
		    };
		
		    /******************
		       $.fn Methods
		    ******************/
		
		    /* jQuery */
		    $.fn = $.prototype = {
		        init: function (selector) {
		            /* Just return the element wrapped inside an array; don't proceed with the actual jQuery node wrapping process. */
		            if (selector.nodeType) {
		                this[0] = selector;
		
		                return this;
		            } else {
		                throw new Error("Not a DOM node.");
		            }
		        },
		
		        offset: function () {
		            /* jQuery altered code: Dropped disconnected DOM node checking. */
		            var box = this[0].getBoundingClientRect ? this[0].getBoundingClientRect() : { top: 0, left: 0 };
		
		            return {
		                top: box.top + (window.pageYOffset || document.scrollTop  || 0)  - (document.clientTop  || 0),
		                left: box.left + (window.pageXOffset || document.scrollLeft  || 0) - (document.clientLeft || 0)
		            };
		        },
		
		        position: function () {
		            /* jQuery */
		            function offsetParent() {
		                var offsetParent = this.offsetParent || document;
		
		                while (offsetParent && (!offsetParent.nodeType.toLowerCase === "html" && offsetParent.style.position === "static")) {
		                    offsetParent = offsetParent.offsetParent;
		                }
		
		                return offsetParent || document;
		            }
		
		            /* Zepto */
		            var elem = this[0],
		                offsetParent = offsetParent.apply(elem),
		                offset = this.offset(),
		                parentOffset = /^(?:body|html)$/i.test(offsetParent.nodeName) ? { top: 0, left: 0 } : $(offsetParent).offset()
		
		            offset.top -= parseFloat(elem.style.marginTop) || 0;
		            offset.left -= parseFloat(elem.style.marginLeft) || 0;
		
		            if (offsetParent.style) {
		                parentOffset.top += parseFloat(offsetParent.style.borderTopWidth) || 0
		                parentOffset.left += parseFloat(offsetParent.style.borderLeftWidth) || 0
		            }
		
		            return {
		                top: offset.top - parentOffset.top,
		                left: offset.left - parentOffset.left
		            };
		        }
		    };
		
		    /**********************
		       Private Variables
		    **********************/
		
		    /* For $.data() */
		    var cache = {};
		    $.expando = "velocity" + (new Date().getTime());
		    $.uuid = 0;
		
		    /* For $.queue() */
		    var class2type = {},
		        hasOwn = class2type.hasOwnProperty,
		        toString = class2type.toString;
		
		    var types = "Boolean Number String Function Array Date RegExp Object Error".split(" ");
		    for (var i = 0; i < types.length; i++) {
		        class2type["[object " + types[i] + "]"] = types[i].toLowerCase();
		    }
		
		    /* Makes $(node) possible, without having to call init. */
		    $.fn.init.prototype = $.fn;
		
		    /* Globalize Velocity onto the window, and assign its Utilities property. */
		    window.Velocity = { Utilities: $ };
		})(window);
		
		/******************
		    Velocity.js
		******************/
		
		;(function (factory) {
		    /* CommonJS module. */
		    if (typeof module === "object" && typeof module.exports === "object") {
		        module.exports = factory();
		    /* AMD module. */
		    } else if (true) {
		        !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		    /* Browser globals. */
		    } else {
		        factory();
		    }
		}(function() {
		return function (global, window, document, undefined) {
		
		    /***************
		        Summary
		    ***************/
		
		    /*
		    - CSS: CSS stack that works independently from the rest of Velocity.
		    - animate(): Core animation method that iterates over the targeted elements and queues the incoming call onto each element individually.
		      - Pre-Queueing: Prepare the element for animation by instantiating its data cache and processing the call's options.
		      - Queueing: The logic that runs once the call has reached its point of execution in the element's $.queue() stack.
		                  Most logic is placed here to avoid risking it becoming stale (if the element's properties have changed).
		      - Pushing: Consolidation of the tween data followed by its push onto the global in-progress calls container.
		    - tick(): The single requestAnimationFrame loop responsible for tweening all in-progress calls.
		    - completeCall(): Handles the cleanup process for each Velocity call.
		    */
		
		    /*********************
		       Helper Functions
		    *********************/
		
		    /* IE detection. Gist: https://gist.github.com/julianshapiro/9098609 */
		    var IE = (function() {
		        if (document.documentMode) {
		            return document.documentMode;
		        } else {
		            for (var i = 7; i > 4; i--) {
		                var div = document.createElement("div");
		
		                div.innerHTML = "<!--[if IE " + i + "]><span></span><![endif]-->";
		
		                if (div.getElementsByTagName("span").length) {
		                    div = null;
		
		                    return i;
		                }
		            }
		        }
		
		        return undefined;
		    })();
		
		    /* rAF shim. Gist: https://gist.github.com/julianshapiro/9497513 */
		    var rAFShim = (function() {
		        var timeLast = 0;
		
		        return window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function(callback) {
		            var timeCurrent = (new Date()).getTime(),
		                timeDelta;
		
		            /* Dynamically set delay on a per-tick basis to match 60fps. */
		            /* Technique by Erik Moller. MIT license: https://gist.github.com/paulirish/1579671 */
		            timeDelta = Math.max(0, 16 - (timeCurrent - timeLast));
		            timeLast = timeCurrent + timeDelta;
		
		            return setTimeout(function() { callback(timeCurrent + timeDelta); }, timeDelta);
		        };
		    })();
		
		    /* Array compacting. Copyright Lo-Dash. MIT License: https://github.com/lodash/lodash/blob/master/LICENSE.txt */
		    function compactSparseArray (array) {
		        var index = -1,
		            length = array ? array.length : 0,
		            result = [];
		
		        while (++index < length) {
		            var value = array[index];
		
		            if (value) {
		                result.push(value);
		            }
		        }
		
		        return result;
		    }
		
		    function sanitizeElements (elements) {
		        /* Unwrap jQuery/Zepto objects. */
		        if (Type.isWrapped(elements)) {
		            elements = [].slice.call(elements);
		        /* Wrap a single element in an array so that $.each() can iterate with the element instead of its node's children. */
		        } else if (Type.isNode(elements)) {
		            elements = [ elements ];
		        }
		
		        return elements;
		    }
		
		    var Type = {
		        isString: function (variable) {
		            return (typeof variable === "string");
		        },
		        isArray: Array.isArray || function (variable) {
		            return Object.prototype.toString.call(variable) === "[object Array]";
		        },
		        isFunction: function (variable) {
		            return Object.prototype.toString.call(variable) === "[object Function]";
		        },
		        isNode: function (variable) {
		            return variable && variable.nodeType;
		        },
		        /* Copyright Martin Bohm. MIT License: https://gist.github.com/Tomalak/818a78a226a0738eaade */
		        isNodeList: function (variable) {
		            return typeof variable === "object" &&
		                /^\[object (HTMLCollection|NodeList|Object)\]$/.test(Object.prototype.toString.call(variable)) &&
		                variable.length !== undefined &&
		                (variable.length === 0 || (typeof variable[0] === "object" && variable[0].nodeType > 0));
		        },
		        /* Determine if variable is a wrapped jQuery or Zepto element. */
		        isWrapped: function (variable) {
		            return variable && (variable.jquery || (window.Zepto && window.Zepto.zepto.isZ(variable)));
		        },
		        isSVG: function (variable) {
		            return window.SVGElement && (variable instanceof window.SVGElement);
		        },
		        isEmptyObject: function (variable) {
		            for (var name in variable) {
		                return false;
		            }
		
		            return true;
		        }
		    };
		
		    /*****************
		       Dependencies
		    *****************/
		
		    var $,
		        isJQuery = false;
		
		    if (global.fn && global.fn.jquery) {
		        $ = global;
		        isJQuery = true;
		    } else {
		        $ = window.Velocity.Utilities;
		    }
		
		    if (IE <= 8 && !isJQuery) {
		        throw new Error("Velocity: IE8 and below require jQuery to be loaded before Velocity.");
		    } else if (IE <= 7) {
		        /* Revert to jQuery's $.animate(), and lose Velocity's extra features. */
		        jQuery.fn.velocity = jQuery.fn.animate;
		
		        /* Now that $.fn.velocity is aliased, abort this Velocity declaration. */
		        return;
		    }
		
		    /*****************
		        Constants
		    *****************/
		
		    var DURATION_DEFAULT = 400,
		        EASING_DEFAULT = "swing";
		
		    /*************
		        State
		    *************/
		
		    var Velocity = {
		        /* Container for page-wide Velocity state data. */
		        State: {
		            /* Detect mobile devices to determine if mobileHA should be turned on. */
		            isMobile: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),
		            /* The mobileHA option's behavior changes on older Android devices (Gingerbread, versions 2.3.3-2.3.7). */
		            isAndroid: /Android/i.test(navigator.userAgent),
		            isGingerbread: /Android 2\.3\.[3-7]/i.test(navigator.userAgent),
		            isChrome: window.chrome,
		            isFirefox: /Firefox/i.test(navigator.userAgent),
		            /* Create a cached element for re-use when checking for CSS property prefixes. */
		            prefixElement: document.createElement("div"),
		            /* Cache every prefix match to avoid repeating lookups. */
		            prefixMatches: {},
		            /* Cache the anchor used for animating window scrolling. */
		            scrollAnchor: null,
		            /* Cache the browser-specific property names associated with the scroll anchor. */
		            scrollPropertyLeft: null,
		            scrollPropertyTop: null,
		            /* Keep track of whether our RAF tick is running. */
		            isTicking: false,
		            /* Container for every in-progress call to Velocity. */
		            calls: []
		        },
		        /* Velocity's custom CSS stack. Made global for unit testing. */
		        CSS: { /* Defined below. */ },
		        /* A shim of the jQuery utility functions used by Velocity -- provided by Velocity's optional jQuery shim. */
		        Utilities: $,
		        /* Container for the user's custom animation redirects that are referenced by name in place of the properties map argument. */
		        Redirects: { /* Manually registered by the user. */ },
		        Easings: { /* Defined below. */ },
		        /* Attempt to use ES6 Promises by default. Users can override this with a third-party promises library. */
		        Promise: window.Promise,
		        /* Velocity option defaults, which can be overriden by the user. */
		        defaults: {
		            queue: "",
		            duration: DURATION_DEFAULT,
		            easing: EASING_DEFAULT,
		            begin: undefined,
		            complete: undefined,
		            progress: undefined,
		            display: undefined,
		            visibility: undefined,
		            loop: false,
		            delay: false,
		            mobileHA: true,
		            /* Advanced: Set to false to prevent property values from being cached between consecutive Velocity-initiated chain calls. */
		            _cacheValues: true
		        },
		        /* A design goal of Velocity is to cache data wherever possible in order to avoid DOM requerying. Accordingly, each element has a data cache. */
		        init: function (element) {
		            $.data(element, "velocity", {
		                /* Store whether this is an SVG element, since its properties are retrieved and updated differently than standard HTML elements. */
		                isSVG: Type.isSVG(element),
		                /* Keep track of whether the element is currently being animated by Velocity.
		                   This is used to ensure that property values are not transferred between non-consecutive (stale) calls. */
		                isAnimating: false,
		                /* A reference to the element's live computedStyle object. Learn more here: https://developer.mozilla.org/en/docs/Web/API/window.getComputedStyle */
		                computedStyle: null,
		                /* Tween data is cached for each animation on the element so that data can be passed across calls --
		                   in particular, end values are used as subsequent start values in consecutive Velocity calls. */
		                tweensContainer: null,
		                /* The full root property values of each CSS hook being animated on this element are cached so that:
		                   1) Concurrently-animating hooks sharing the same root can have their root values' merged into one while tweening.
		                   2) Post-hook-injection root values can be transferred over to consecutively chained Velocity calls as starting root values. */
		                rootPropertyValueCache: {},
		                /* A cache for transform updates, which must be manually flushed via CSS.flushTransformCache(). */
		                transformCache: {}
		            });
		        },
		        /* A parallel to jQuery's $.css(), used for getting/setting Velocity's hooked CSS properties. */
		        hook: null, /* Defined below. */
		        /* Velocity-wide animation time remapping for testing purposes. */
		        mock: false,
		        version: { major: 1, minor: 2, patch: 2 },
		        /* Set to 1 or 2 (most verbose) to output debug info to console. */
		        debug: false
		    };
		
		    /* Retrieve the appropriate scroll anchor and property name for the browser: https://developer.mozilla.org/en-US/docs/Web/API/Window.scrollY */
		    if (window.pageYOffset !== undefined) {
		        Velocity.State.scrollAnchor = window;
		        Velocity.State.scrollPropertyLeft = "pageXOffset";
		        Velocity.State.scrollPropertyTop = "pageYOffset";
		    } else {
		        Velocity.State.scrollAnchor = document.documentElement || document.body.parentNode || document.body;
		        Velocity.State.scrollPropertyLeft = "scrollLeft";
		        Velocity.State.scrollPropertyTop = "scrollTop";
		    }
		
		    /* Shorthand alias for jQuery's $.data() utility. */
		    function Data (element) {
		        /* Hardcode a reference to the plugin name. */
		        var response = $.data(element, "velocity");
		
		        /* jQuery <=1.4.2 returns null instead of undefined when no match is found. We normalize this behavior. */
		        return response === null ? undefined : response;
		    };
		
		    /**************
		        Easing
		    **************/
		
		    /* Step easing generator. */
		    function generateStep (steps) {
		        return function (p) {
		            return Math.round(p * steps) * (1 / steps);
		        };
		    }
		
		    /* Bezier curve function generator. Copyright Gaetan Renaudeau. MIT License: http://en.wikipedia.org/wiki/MIT_License */
		    function generateBezier (mX1, mY1, mX2, mY2) {
		        var NEWTON_ITERATIONS = 4,
		            NEWTON_MIN_SLOPE = 0.001,
		            SUBDIVISION_PRECISION = 0.0000001,
		            SUBDIVISION_MAX_ITERATIONS = 10,
		            kSplineTableSize = 11,
		            kSampleStepSize = 1.0 / (kSplineTableSize - 1.0),
		            float32ArraySupported = "Float32Array" in window;
		
		        /* Must contain four arguments. */
		        if (arguments.length !== 4) {
		            return false;
		        }
		
		        /* Arguments must be numbers. */
		        for (var i = 0; i < 4; ++i) {
		            if (typeof arguments[i] !== "number" || isNaN(arguments[i]) || !isFinite(arguments[i])) {
		                return false;
		            }
		        }
		
		        /* X values must be in the [0, 1] range. */
		        mX1 = Math.min(mX1, 1);
		        mX2 = Math.min(mX2, 1);
		        mX1 = Math.max(mX1, 0);
		        mX2 = Math.max(mX2, 0);
		
		        var mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);
		
		        function A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }
		        function B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }
		        function C (aA1)      { return 3.0 * aA1; }
		
		        function calcBezier (aT, aA1, aA2) {
		            return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;
		        }
		
		        function getSlope (aT, aA1, aA2) {
		            return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);
		        }
		
		        function newtonRaphsonIterate (aX, aGuessT) {
		            for (var i = 0; i < NEWTON_ITERATIONS; ++i) {
		                var currentSlope = getSlope(aGuessT, mX1, mX2);
		
		                if (currentSlope === 0.0) return aGuessT;
		
		                var currentX = calcBezier(aGuessT, mX1, mX2) - aX;
		                aGuessT -= currentX / currentSlope;
		            }
		
		            return aGuessT;
		        }
		
		        function calcSampleValues () {
		            for (var i = 0; i < kSplineTableSize; ++i) {
		                mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);
		            }
		        }
		
		        function binarySubdivide (aX, aA, aB) {
		            var currentX, currentT, i = 0;
		
		            do {
		                currentT = aA + (aB - aA) / 2.0;
		                currentX = calcBezier(currentT, mX1, mX2) - aX;
		                if (currentX > 0.0) {
		                  aB = currentT;
		                } else {
		                  aA = currentT;
		                }
		            } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);
		
		            return currentT;
		        }
		
		        function getTForX (aX) {
		            var intervalStart = 0.0,
		                currentSample = 1,
		                lastSample = kSplineTableSize - 1;
		
		            for (; currentSample != lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {
		                intervalStart += kSampleStepSize;
		            }
		
		            --currentSample;
		
		            var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample+1] - mSampleValues[currentSample]),
		                guessForT = intervalStart + dist * kSampleStepSize,
		                initialSlope = getSlope(guessForT, mX1, mX2);
		
		            if (initialSlope >= NEWTON_MIN_SLOPE) {
		                return newtonRaphsonIterate(aX, guessForT);
		            } else if (initialSlope == 0.0) {
		                return guessForT;
		            } else {
		                return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize);
		            }
		        }
		
		        var _precomputed = false;
		
		        function precompute() {
		            _precomputed = true;
		            if (mX1 != mY1 || mX2 != mY2) calcSampleValues();
		        }
		
		        var f = function (aX) {
		            if (!_precomputed) precompute();
		            if (mX1 === mY1 && mX2 === mY2) return aX;
		            if (aX === 0) return 0;
		            if (aX === 1) return 1;
		
		            return calcBezier(getTForX(aX), mY1, mY2);
		        };
		
		        f.getControlPoints = function() { return [{ x: mX1, y: mY1 }, { x: mX2, y: mY2 }]; };
		
		        var str = "generateBezier(" + [mX1, mY1, mX2, mY2] + ")";
		        f.toString = function () { return str; };
		
		        return f;
		    }
		
		    /* Runge-Kutta spring physics function generator. Adapted from Framer.js, copyright Koen Bok. MIT License: http://en.wikipedia.org/wiki/MIT_License */
		    /* Given a tension, friction, and duration, a simulation at 60FPS will first run without a defined duration in order to calculate the full path. A second pass
		       then adjusts the time delta -- using the relation between actual time and duration -- to calculate the path for the duration-constrained animation. */
		    var generateSpringRK4 = (function () {
		        function springAccelerationForState (state) {
		            return (-state.tension * state.x) - (state.friction * state.v);
		        }
		
		        function springEvaluateStateWithDerivative (initialState, dt, derivative) {
		            var state = {
		                x: initialState.x + derivative.dx * dt,
		                v: initialState.v + derivative.dv * dt,
		                tension: initialState.tension,
		                friction: initialState.friction
		            };
		
		            return { dx: state.v, dv: springAccelerationForState(state) };
		        }
		
		        function springIntegrateState (state, dt) {
		            var a = {
		                    dx: state.v,
		                    dv: springAccelerationForState(state)
		                },
		                b = springEvaluateStateWithDerivative(state, dt * 0.5, a),
		                c = springEvaluateStateWithDerivative(state, dt * 0.5, b),
		                d = springEvaluateStateWithDerivative(state, dt, c),
		                dxdt = 1.0 / 6.0 * (a.dx + 2.0 * (b.dx + c.dx) + d.dx),
		                dvdt = 1.0 / 6.0 * (a.dv + 2.0 * (b.dv + c.dv) + d.dv);
		
		            state.x = state.x + dxdt * dt;
		            state.v = state.v + dvdt * dt;
		
		            return state;
		        }
		
		        return function springRK4Factory (tension, friction, duration) {
		
		            var initState = {
		                    x: -1,
		                    v: 0,
		                    tension: null,
		                    friction: null
		                },
		                path = [0],
		                time_lapsed = 0,
		                tolerance = 1 / 10000,
		                DT = 16 / 1000,
		                have_duration, dt, last_state;
		
		            tension = parseFloat(tension) || 500;
		            friction = parseFloat(friction) || 20;
		            duration = duration || null;
		
		            initState.tension = tension;
		            initState.friction = friction;
		
		            have_duration = duration !== null;
		
		            /* Calculate the actual time it takes for this animation to complete with the provided conditions. */
		            if (have_duration) {
		                /* Run the simulation without a duration. */
		                time_lapsed = springRK4Factory(tension, friction);
		                /* Compute the adjusted time delta. */
		                dt = time_lapsed / duration * DT;
		            } else {
		                dt = DT;
		            }
		
		            while (true) {
		                /* Next/step function .*/
		                last_state = springIntegrateState(last_state || initState, dt);
		                /* Store the position. */
		                path.push(1 + last_state.x);
		                time_lapsed += 16;
		                /* If the change threshold is reached, break. */
		                if (!(Math.abs(last_state.x) > tolerance && Math.abs(last_state.v) > tolerance)) {
		                    break;
		                }
		            }
		
		            /* If duration is not defined, return the actual time required for completing this animation. Otherwise, return a closure that holds the
		               computed path and returns a snapshot of the position according to a given percentComplete. */
		            return !have_duration ? time_lapsed : function(percentComplete) { return path[ (percentComplete * (path.length - 1)) | 0 ]; };
		        };
		    }());
		
		    /* jQuery easings. */
		    Velocity.Easings = {
		        linear: function(p) { return p; },
		        swing: function(p) { return 0.5 - Math.cos( p * Math.PI ) / 2 },
		        /* Bonus "spring" easing, which is a less exaggerated version of easeInOutElastic. */
		        spring: function(p) { return 1 - (Math.cos(p * 4.5 * Math.PI) * Math.exp(-p * 6)); }
		    };
		
		    /* CSS3 and Robert Penner easings. */
		    $.each(
		        [
		            [ "ease", [ 0.25, 0.1, 0.25, 1.0 ] ],
		            [ "ease-in", [ 0.42, 0.0, 1.00, 1.0 ] ],
		            [ "ease-out", [ 0.00, 0.0, 0.58, 1.0 ] ],
		            [ "ease-in-out", [ 0.42, 0.0, 0.58, 1.0 ] ],
		            [ "easeInSine", [ 0.47, 0, 0.745, 0.715 ] ],
		            [ "easeOutSine", [ 0.39, 0.575, 0.565, 1 ] ],
		            [ "easeInOutSine", [ 0.445, 0.05, 0.55, 0.95 ] ],
		            [ "easeInQuad", [ 0.55, 0.085, 0.68, 0.53 ] ],
		            [ "easeOutQuad", [ 0.25, 0.46, 0.45, 0.94 ] ],
		            [ "easeInOutQuad", [ 0.455, 0.03, 0.515, 0.955 ] ],
		            [ "easeInCubic", [ 0.55, 0.055, 0.675, 0.19 ] ],
		            [ "easeOutCubic", [ 0.215, 0.61, 0.355, 1 ] ],
		            [ "easeInOutCubic", [ 0.645, 0.045, 0.355, 1 ] ],
		            [ "easeInQuart", [ 0.895, 0.03, 0.685, 0.22 ] ],
		            [ "easeOutQuart", [ 0.165, 0.84, 0.44, 1 ] ],
		            [ "easeInOutQuart", [ 0.77, 0, 0.175, 1 ] ],
		            [ "easeInQuint", [ 0.755, 0.05, 0.855, 0.06 ] ],
		            [ "easeOutQuint", [ 0.23, 1, 0.32, 1 ] ],
		            [ "easeInOutQuint", [ 0.86, 0, 0.07, 1 ] ],
		            [ "easeInExpo", [ 0.95, 0.05, 0.795, 0.035 ] ],
		            [ "easeOutExpo", [ 0.19, 1, 0.22, 1 ] ],
		            [ "easeInOutExpo", [ 1, 0, 0, 1 ] ],
		            [ "easeInCirc", [ 0.6, 0.04, 0.98, 0.335 ] ],
		            [ "easeOutCirc", [ 0.075, 0.82, 0.165, 1 ] ],
		            [ "easeInOutCirc", [ 0.785, 0.135, 0.15, 0.86 ] ]
		        ], function(i, easingArray) {
		            Velocity.Easings[easingArray[0]] = generateBezier.apply(null, easingArray[1]);
		        });
		
		    /* Determine the appropriate easing type given an easing input. */
		    function getEasing(value, duration) {
		        var easing = value;
		
		        /* The easing option can either be a string that references a pre-registered easing,
		           or it can be a two-/four-item array of integers to be converted into a bezier/spring function. */
		        if (Type.isString(value)) {
		            /* Ensure that the easing has been assigned to jQuery's Velocity.Easings object. */
		            if (!Velocity.Easings[value]) {
		                easing = false;
		            }
		        } else if (Type.isArray(value) && value.length === 1) {
		            easing = generateStep.apply(null, value);
		        } else if (Type.isArray(value) && value.length === 2) {
		            /* springRK4 must be passed the animation's duration. */
		            /* Note: If the springRK4 array contains non-numbers, generateSpringRK4() returns an easing
		               function generated with default tension and friction values. */
		            easing = generateSpringRK4.apply(null, value.concat([ duration ]));
		        } else if (Type.isArray(value) && value.length === 4) {
		            /* Note: If the bezier array contains non-numbers, generateBezier() returns false. */
		            easing = generateBezier.apply(null, value);
		        } else {
		            easing = false;
		        }
		
		        /* Revert to the Velocity-wide default easing type, or fall back to "swing" (which is also jQuery's default)
		           if the Velocity-wide default has been incorrectly modified. */
		        if (easing === false) {
		            if (Velocity.Easings[Velocity.defaults.easing]) {
		                easing = Velocity.defaults.easing;
		            } else {
		                easing = EASING_DEFAULT;
		            }
		        }
		
		        return easing;
		    }
		
		    /*****************
		        CSS Stack
		    *****************/
		
		    /* The CSS object is a highly condensed and performant CSS stack that fully replaces jQuery's.
		       It handles the validation, getting, and setting of both standard CSS properties and CSS property hooks. */
		    /* Note: A "CSS" shorthand is aliased so that our code is easier to read. */
		    var CSS = Velocity.CSS = {
		
		        /*************
		            RegEx
		        *************/
		
		        RegEx: {
		            isHex: /^#([A-f\d]{3}){1,2}$/i,
		            /* Unwrap a property value's surrounding text, e.g. "rgba(4, 3, 2, 1)" ==> "4, 3, 2, 1" and "rect(4px 3px 2px 1px)" ==> "4px 3px 2px 1px". */
		            valueUnwrap: /^[A-z]+\((.*)\)$/i,
		            wrappedValueAlreadyExtracted: /[0-9.]+ [0-9.]+ [0-9.]+( [0-9.]+)?/,
		            /* Split a multi-value property into an array of subvalues, e.g. "rgba(4, 3, 2, 1) 4px 3px 2px 1px" ==> [ "rgba(4, 3, 2, 1)", "4px", "3px", "2px", "1px" ]. */
		            valueSplit: /([A-z]+\(.+\))|(([A-z0-9#-.]+?)(?=\s|$))/ig
		        },
		
		        /************
		            Lists
		        ************/
		
		        Lists: {
		            colors: [ "fill", "stroke", "stopColor", "color", "backgroundColor", "borderColor", "borderTopColor", "borderRightColor", "borderBottomColor", "borderLeftColor", "outlineColor" ],
		            transformsBase: [ "translateX", "translateY", "scale", "scaleX", "scaleY", "skewX", "skewY", "rotateZ" ],
		            transforms3D: [ "transformPerspective", "translateZ", "scaleZ", "rotateX", "rotateY" ]
		        },
		
		        /************
		            Hooks
		        ************/
		
		        /* Hooks allow a subproperty (e.g. "boxShadowBlur") of a compound-value CSS property
		           (e.g. "boxShadow: X Y Blur Spread Color") to be animated as if it were a discrete property. */
		        /* Note: Beyond enabling fine-grained property animation, hooking is necessary since Velocity only
		           tweens properties with single numeric values; unlike CSS transitions, Velocity does not interpolate compound-values. */
		        Hooks: {
		            /********************
		                Registration
		            ********************/
		
		            /* Templates are a concise way of indicating which subproperties must be individually registered for each compound-value CSS property. */
		            /* Each template consists of the compound-value's base name, its constituent subproperty names, and those subproperties' default values. */
		            templates: {
		                "textShadow": [ "Color X Y Blur", "black 0px 0px 0px" ],
		                "boxShadow": [ "Color X Y Blur Spread", "black 0px 0px 0px 0px" ],
		                "clip": [ "Top Right Bottom Left", "0px 0px 0px 0px" ],
		                "backgroundPosition": [ "X Y", "0% 0%" ],
		                "transformOrigin": [ "X Y Z", "50% 50% 0px" ],
		                "perspectiveOrigin": [ "X Y", "50% 50%" ]
		            },
		
		            /* A "registered" hook is one that has been converted from its template form into a live,
		               tweenable property. It contains data to associate it with its root property. */
		            registered: {
		                /* Note: A registered hook looks like this ==> textShadowBlur: [ "textShadow" 3 ]
		                   which consists of the subproperty's name the associated root property's name
		                   and the subproperty's position in the root's value. */
		            },
		            /* Convert the templates into individual hooks then append them to the registered object above. */
		            register: function () {
		                /* Color hooks registration: Colors are defaulted to white -- as opposed to black -- since colors that are
		                   currently set to "transparent" default to their respective template below when color-animated,
		                   and white is typically a closer match to transparent than black is. An exception is made for text ("color"),
		                   which is almost always set closer to black than white. */
		                for (var i = 0; i < CSS.Lists.colors.length; i++) {
		                    var rgbComponents = (CSS.Lists.colors[i] === "color") ? "0 0 0 1" : "255 255 255 1";
		                    CSS.Hooks.templates[CSS.Lists.colors[i]] = [ "Red Green Blue Alpha", rgbComponents ];
		                }
		
		                var rootProperty,
		                    hookTemplate,
		                    hookNames;
		
		                /* In IE, color values inside compound-value properties are positioned at the end the value instead of at the beginning.
		                   Thus, we re-arrange the templates accordingly. */
		                if (IE) {
		                    for (rootProperty in CSS.Hooks.templates) {
		                        hookTemplate = CSS.Hooks.templates[rootProperty];
		                        hookNames = hookTemplate[0].split(" ");
		
		                        var defaultValues = hookTemplate[1].match(CSS.RegEx.valueSplit);
		
		                        if (hookNames[0] === "Color") {
		                            /* Reposition both the hook's name and its default value to the end of their respective strings. */
		                            hookNames.push(hookNames.shift());
		                            defaultValues.push(defaultValues.shift());
		
		                            /* Replace the existing template for the hook's root property. */
		                            CSS.Hooks.templates[rootProperty] = [ hookNames.join(" "), defaultValues.join(" ") ];
		                        }
		                    }
		                }
		
		                /* Hook registration. */
		                for (rootProperty in CSS.Hooks.templates) {
		                    hookTemplate = CSS.Hooks.templates[rootProperty];
		                    hookNames = hookTemplate[0].split(" ");
		
		                    for (var i in hookNames) {
		                        var fullHookName = rootProperty + hookNames[i],
		                            hookPosition = i;
		
		                        /* For each hook, register its full name (e.g. textShadowBlur) with its root property (e.g. textShadow)
		                           and the hook's position in its template's default value string. */
		                        CSS.Hooks.registered[fullHookName] = [ rootProperty, hookPosition ];
		                    }
		                }
		            },
		
		            /*****************************
		               Injection and Extraction
		            *****************************/
		
		            /* Look up the root property associated with the hook (e.g. return "textShadow" for "textShadowBlur"). */
		            /* Since a hook cannot be set directly (the browser won't recognize it), style updating for hooks is routed through the hook's root property. */
		            getRoot: function (property) {
		                var hookData = CSS.Hooks.registered[property];
		
		                if (hookData) {
		                    return hookData[0];
		                } else {
		                    /* If there was no hook match, return the property name untouched. */
		                    return property;
		                }
		            },
		            /* Convert any rootPropertyValue, null or otherwise, into a space-delimited list of hook values so that
		               the targeted hook can be injected or extracted at its standard position. */
		            cleanRootPropertyValue: function(rootProperty, rootPropertyValue) {
		                /* If the rootPropertyValue is wrapped with "rgb()", "clip()", etc., remove the wrapping to normalize the value before manipulation. */
		                if (CSS.RegEx.valueUnwrap.test(rootPropertyValue)) {
		                    rootPropertyValue = rootPropertyValue.match(CSS.RegEx.valueUnwrap)[1];
		                }
		
		                /* If rootPropertyValue is a CSS null-value (from which there's inherently no hook value to extract),
		                   default to the root's default value as defined in CSS.Hooks.templates. */
		                /* Note: CSS null-values include "none", "auto", and "transparent". They must be converted into their
		                   zero-values (e.g. textShadow: "none" ==> textShadow: "0px 0px 0px black") for hook manipulation to proceed. */
		                if (CSS.Values.isCSSNullValue(rootPropertyValue)) {
		                    rootPropertyValue = CSS.Hooks.templates[rootProperty][1];
		                }
		
		                return rootPropertyValue;
		            },
		            /* Extracted the hook's value from its root property's value. This is used to get the starting value of an animating hook. */
		            extractValue: function (fullHookName, rootPropertyValue) {
		                var hookData = CSS.Hooks.registered[fullHookName];
		
		                if (hookData) {
		                    var hookRoot = hookData[0],
		                        hookPosition = hookData[1];
		
		                    rootPropertyValue = CSS.Hooks.cleanRootPropertyValue(hookRoot, rootPropertyValue);
		
		                    /* Split rootPropertyValue into its constituent hook values then grab the desired hook at its standard position. */
		                    return rootPropertyValue.toString().match(CSS.RegEx.valueSplit)[hookPosition];
		                } else {
		                    /* If the provided fullHookName isn't a registered hook, return the rootPropertyValue that was passed in. */
		                    return rootPropertyValue;
		                }
		            },
		            /* Inject the hook's value into its root property's value. This is used to piece back together the root property
		               once Velocity has updated one of its individually hooked values through tweening. */
		            injectValue: function (fullHookName, hookValue, rootPropertyValue) {
		                var hookData = CSS.Hooks.registered[fullHookName];
		
		                if (hookData) {
		                    var hookRoot = hookData[0],
		                        hookPosition = hookData[1],
		                        rootPropertyValueParts,
		                        rootPropertyValueUpdated;
		
		                    rootPropertyValue = CSS.Hooks.cleanRootPropertyValue(hookRoot, rootPropertyValue);
		
		                    /* Split rootPropertyValue into its individual hook values, replace the targeted value with hookValue,
		                       then reconstruct the rootPropertyValue string. */
		                    rootPropertyValueParts = rootPropertyValue.toString().match(CSS.RegEx.valueSplit);
		                    rootPropertyValueParts[hookPosition] = hookValue;
		                    rootPropertyValueUpdated = rootPropertyValueParts.join(" ");
		
		                    return rootPropertyValueUpdated;
		                } else {
		                    /* If the provided fullHookName isn't a registered hook, return the rootPropertyValue that was passed in. */
		                    return rootPropertyValue;
		                }
		            }
		        },
		
		        /*******************
		           Normalizations
		        *******************/
		
		        /* Normalizations standardize CSS property manipulation by pollyfilling browser-specific implementations (e.g. opacity)
		           and reformatting special properties (e.g. clip, rgba) to look like standard ones. */
		        Normalizations: {
		            /* Normalizations are passed a normalization target (either the property's name, its extracted value, or its injected value),
		               the targeted element (which may need to be queried), and the targeted property value. */
		            registered: {
		                clip: function (type, element, propertyValue) {
		                    switch (type) {
		                        case "name":
		                            return "clip";
		                        /* Clip needs to be unwrapped and stripped of its commas during extraction. */
		                        case "extract":
		                            var extracted;
		
		                            /* If Velocity also extracted this value, skip extraction. */
		                            if (CSS.RegEx.wrappedValueAlreadyExtracted.test(propertyValue)) {
		                                extracted = propertyValue;
		                            } else {
		                                /* Remove the "rect()" wrapper. */
		                                extracted = propertyValue.toString().match(CSS.RegEx.valueUnwrap);
		
		                                /* Strip off commas. */
		                                extracted = extracted ? extracted[1].replace(/,(\s+)?/g, " ") : propertyValue;
		                            }
		
		                            return extracted;
		                        /* Clip needs to be re-wrapped during injection. */
		                        case "inject":
		                            return "rect(" + propertyValue + ")";
		                    }
		                },
		
		                blur: function(type, element, propertyValue) {
		                    switch (type) {
		                        case "name":
		                            return Velocity.State.isFirefox ? "filter" : "-webkit-filter";
		                        case "extract":
		                            var extracted = parseFloat(propertyValue);
		
		                            /* If extracted is NaN, meaning the value isn't already extracted. */
		                            if (!(extracted || extracted === 0)) {
		                                var blurComponent = propertyValue.toString().match(/blur\(([0-9]+[A-z]+)\)/i);
		
		                                /* If the filter string had a blur component, return just the blur value and unit type. */
		                                if (blurComponent) {
		                                    extracted = blurComponent[1];
		                                /* If the component doesn't exist, default blur to 0. */
		                                } else {
		                                    extracted = 0;
		                                }
		                            }
		
		                            return extracted;
		                        /* Blur needs to be re-wrapped during injection. */
		                        case "inject":
		                            /* For the blur effect to be fully de-applied, it needs to be set to "none" instead of 0. */
		                            if (!parseFloat(propertyValue)) {
		                                return "none";
		                            } else {
		                                return "blur(" + propertyValue + ")";
		                            }
		                    }
		                },
		
		                /* <=IE8 do not support the standard opacity property. They use filter:alpha(opacity=INT) instead. */
		                opacity: function (type, element, propertyValue) {
		                    if (IE <= 8) {
		                        switch (type) {
		                            case "name":
		                                return "filter";
		                            case "extract":
		                                /* <=IE8 return a "filter" value of "alpha(opacity=\d{1,3})".
		                                   Extract the value and convert it to a decimal value to match the standard CSS opacity property's formatting. */
		                                var extracted = propertyValue.toString().match(/alpha\(opacity=(.*)\)/i);
		
		                                if (extracted) {
		                                    /* Convert to decimal value. */
		                                    propertyValue = extracted[1] / 100;
		                                } else {
		                                    /* When extracting opacity, default to 1 since a null value means opacity hasn't been set. */
		                                    propertyValue = 1;
		                                }
		
		                                return propertyValue;
		                            case "inject":
		                                /* Opacified elements are required to have their zoom property set to a non-zero value. */
		                                element.style.zoom = 1;
		
		                                /* Setting the filter property on elements with certain font property combinations can result in a
		                                   highly unappealing ultra-bolding effect. There's no way to remedy this throughout a tween, but dropping the
		                                   value altogether (when opacity hits 1) at leasts ensures that the glitch is gone post-tweening. */
		                                if (parseFloat(propertyValue) >= 1) {
		                                    return "";
		                                } else {
		                                  /* As per the filter property's spec, convert the decimal value to a whole number and wrap the value. */
		                                  return "alpha(opacity=" + parseInt(parseFloat(propertyValue) * 100, 10) + ")";
		                                }
		                        }
		                    /* With all other browsers, normalization is not required; return the same values that were passed in. */
		                    } else {
		                        switch (type) {
		                            case "name":
		                                return "opacity";
		                            case "extract":
		                                return propertyValue;
		                            case "inject":
		                                return propertyValue;
		                        }
		                    }
		                }
		            },
		
		            /*****************************
		                Batched Registrations
		            *****************************/
		
		            /* Note: Batched normalizations extend the CSS.Normalizations.registered object. */
		            register: function () {
		
		                /*****************
		                    Transforms
		                *****************/
		
		                /* Transforms are the subproperties contained by the CSS "transform" property. Transforms must undergo normalization
		                   so that they can be referenced in a properties map by their individual names. */
		                /* Note: When transforms are "set", they are actually assigned to a per-element transformCache. When all transform
		                   setting is complete complete, CSS.flushTransformCache() must be manually called to flush the values to the DOM.
		                   Transform setting is batched in this way to improve performance: the transform style only needs to be updated
		                   once when multiple transform subproperties are being animated simultaneously. */
		                /* Note: IE9 and Android Gingerbread have support for 2D -- but not 3D -- transforms. Since animating unsupported
		                   transform properties results in the browser ignoring the *entire* transform string, we prevent these 3D values
		                   from being normalized for these browsers so that tweening skips these properties altogether
		                   (since it will ignore them as being unsupported by the browser.) */
		                if (!(IE <= 9) && !Velocity.State.isGingerbread) {
		                    /* Note: Since the standalone CSS "perspective" property and the CSS transform "perspective" subproperty
		                    share the same name, the latter is given a unique token within Velocity: "transformPerspective". */
		                    CSS.Lists.transformsBase = CSS.Lists.transformsBase.concat(CSS.Lists.transforms3D);
		                }
		
		                for (var i = 0; i < CSS.Lists.transformsBase.length; i++) {
		                    /* Wrap the dynamically generated normalization function in a new scope so that transformName's value is
		                    paired with its respective function. (Otherwise, all functions would take the final for loop's transformName.) */
		                    (function() {
		                        var transformName = CSS.Lists.transformsBase[i];
		
		                        CSS.Normalizations.registered[transformName] = function (type, element, propertyValue) {
		                            switch (type) {
		                                /* The normalized property name is the parent "transform" property -- the property that is actually set in CSS. */
		                                case "name":
		                                    return "transform";
		                                /* Transform values are cached onto a per-element transformCache object. */
		                                case "extract":
		                                    /* If this transform has yet to be assigned a value, return its null value. */
		                                    if (Data(element) === undefined || Data(element).transformCache[transformName] === undefined) {
		                                        /* Scale CSS.Lists.transformsBase default to 1 whereas all other transform properties default to 0. */
		                                        return /^scale/i.test(transformName) ? 1 : 0;
		                                    /* When transform values are set, they are wrapped in parentheses as per the CSS spec.
		                                       Thus, when extracting their values (for tween calculations), we strip off the parentheses. */
		                                    } else {
		                                        return Data(element).transformCache[transformName].replace(/[()]/g, "");
		                                    }
		                                case "inject":
		                                    var invalid = false;
		
		                                    /* If an individual transform property contains an unsupported unit type, the browser ignores the *entire* transform property.
		                                       Thus, protect users from themselves by skipping setting for transform values supplied with invalid unit types. */
		                                    /* Switch on the base transform type; ignore the axis by removing the last letter from the transform's name. */
		                                    switch (transformName.substr(0, transformName.length - 1)) {
		                                        /* Whitelist unit types for each transform. */
		                                        case "translate":
		                                            invalid = !/(%|px|em|rem|vw|vh|\d)$/i.test(propertyValue);
		                                            break;
		                                        /* Since an axis-free "scale" property is supported as well, a little hack is used here to detect it by chopping off its last letter. */
		                                        case "scal":
		                                        case "scale":
		                                            /* Chrome on Android has a bug in which scaled elements blur if their initial scale
		                                               value is below 1 (which can happen with forcefeeding). Thus, we detect a yet-unset scale property
		                                               and ensure that its first value is always 1. More info: http://stackoverflow.com/questions/10417890/css3-animations-with-transform-causes-blurred-elements-on-webkit/10417962#10417962 */
		                                            if (Velocity.State.isAndroid && Data(element).transformCache[transformName] === undefined && propertyValue < 1) {
		                                                propertyValue = 1;
		                                            }
		
		                                            invalid = !/(\d)$/i.test(propertyValue);
		                                            break;
		                                        case "skew":
		                                            invalid = !/(deg|\d)$/i.test(propertyValue);
		                                            break;
		                                        case "rotate":
		                                            invalid = !/(deg|\d)$/i.test(propertyValue);
		                                            break;
		                                    }
		
		                                    if (!invalid) {
		                                        /* As per the CSS spec, wrap the value in parentheses. */
		                                        Data(element).transformCache[transformName] = "(" + propertyValue + ")";
		                                    }
		
		                                    /* Although the value is set on the transformCache object, return the newly-updated value for the calling code to process as normal. */
		                                    return Data(element).transformCache[transformName];
		                            }
		                        };
		                    })();
		                }
		
		                /*************
		                    Colors
		                *************/
		
		                /* Since Velocity only animates a single numeric value per property, color animation is achieved by hooking the individual RGBA components of CSS color properties.
		                   Accordingly, color values must be normalized (e.g. "#ff0000", "red", and "rgb(255, 0, 0)" ==> "255 0 0 1") so that their components can be injected/extracted by CSS.Hooks logic. */
		                for (var i = 0; i < CSS.Lists.colors.length; i++) {
		                    /* Wrap the dynamically generated normalization function in a new scope so that colorName's value is paired with its respective function.
		                       (Otherwise, all functions would take the final for loop's colorName.) */
		                    (function () {
		                        var colorName = CSS.Lists.colors[i];
		
		                        /* Note: In IE<=8, which support rgb but not rgba, color properties are reverted to rgb by stripping off the alpha component. */
		                        CSS.Normalizations.registered[colorName] = function(type, element, propertyValue) {
		                            switch (type) {
		                                case "name":
		                                    return colorName;
		                                /* Convert all color values into the rgb format. (Old IE can return hex values and color names instead of rgb/rgba.) */
		                                case "extract":
		                                    var extracted;
		
		                                    /* If the color is already in its hookable form (e.g. "255 255 255 1") due to having been previously extracted, skip extraction. */
		                                    if (CSS.RegEx.wrappedValueAlreadyExtracted.test(propertyValue)) {
		                                        extracted = propertyValue;
		                                    } else {
		                                        var converted,
		                                            colorNames = {
		                                                black: "rgb(0, 0, 0)",
		                                                blue: "rgb(0, 0, 255)",
		                                                gray: "rgb(128, 128, 128)",
		                                                green: "rgb(0, 128, 0)",
		                                                red: "rgb(255, 0, 0)",
		                                                white: "rgb(255, 255, 255)"
		                                            };
		
		                                        /* Convert color names to rgb. */
		                                        if (/^[A-z]+$/i.test(propertyValue)) {
		                                            if (colorNames[propertyValue] !== undefined) {
		                                                converted = colorNames[propertyValue]
		                                            } else {
		                                                /* If an unmatched color name is provided, default to black. */
		                                                converted = colorNames.black;
		                                            }
		                                        /* Convert hex values to rgb. */
		                                        } else if (CSS.RegEx.isHex.test(propertyValue)) {
		                                            converted = "rgb(" + CSS.Values.hexToRgb(propertyValue).join(" ") + ")";
		                                        /* If the provided color doesn't match any of the accepted color formats, default to black. */
		                                        } else if (!(/^rgba?\(/i.test(propertyValue))) {
		                                            converted = colorNames.black;
		                                        }
		
		                                        /* Remove the surrounding "rgb/rgba()" string then replace commas with spaces and strip
		                                           repeated spaces (in case the value included spaces to begin with). */
		                                        extracted = (converted || propertyValue).toString().match(CSS.RegEx.valueUnwrap)[1].replace(/,(\s+)?/g, " ");
		                                    }
		
		                                    /* So long as this isn't <=IE8, add a fourth (alpha) component if it's missing and default it to 1 (visible). */
		                                    if (!(IE <= 8) && extracted.split(" ").length === 3) {
		                                        extracted += " 1";
		                                    }
		
		                                    return extracted;
		                                case "inject":
		                                    /* If this is IE<=8 and an alpha component exists, strip it off. */
		                                    if (IE <= 8) {
		                                        if (propertyValue.split(" ").length === 4) {
		                                            propertyValue = propertyValue.split(/\s+/).slice(0, 3).join(" ");
		                                        }
		                                    /* Otherwise, add a fourth (alpha) component if it's missing and default it to 1 (visible). */
		                                    } else if (propertyValue.split(" ").length === 3) {
		                                        propertyValue += " 1";
		                                    }
		
		                                    /* Re-insert the browser-appropriate wrapper("rgb/rgba()"), insert commas, and strip off decimal units
		                                       on all values but the fourth (R, G, and B only accept whole numbers). */
		                                    return (IE <= 8 ? "rgb" : "rgba") + "(" + propertyValue.replace(/\s+/g, ",").replace(/\.(\d)+(?=,)/g, "") + ")";
		                            }
		                        };
		                    })();
		                }
		            }
		        },
		
		        /************************
		           CSS Property Names
		        ************************/
		
		        Names: {
		            /* Camelcase a property name into its JavaScript notation (e.g. "background-color" ==> "backgroundColor").
		               Camelcasing is used to normalize property names between and across calls. */
		            camelCase: function (property) {
		                return property.replace(/-(\w)/g, function (match, subMatch) {
		                    return subMatch.toUpperCase();
		                });
		            },
		
		            /* For SVG elements, some properties (namely, dimensional ones) are GET/SET via the element's HTML attributes (instead of via CSS styles). */
		            SVGAttribute: function (property) {
		                var SVGAttributes = "width|height|x|y|cx|cy|r|rx|ry|x1|x2|y1|y2";
		
		                /* Certain browsers require an SVG transform to be applied as an attribute. (Otherwise, application via CSS is preferable due to 3D support.) */
		                if (IE || (Velocity.State.isAndroid && !Velocity.State.isChrome)) {
		                    SVGAttributes += "|transform";
		                }
		
		                return new RegExp("^(" + SVGAttributes + ")$", "i").test(property);
		            },
		
		            /* Determine whether a property should be set with a vendor prefix. */
		            /* If a prefixed version of the property exists, return it. Otherwise, return the original property name.
		               If the property is not at all supported by the browser, return a false flag. */
		            prefixCheck: function (property) {
		                /* If this property has already been checked, return the cached value. */
		                if (Velocity.State.prefixMatches[property]) {
		                    return [ Velocity.State.prefixMatches[property], true ];
		                } else {
		                    var vendors = [ "", "Webkit", "Moz", "ms", "O" ];
		
		                    for (var i = 0, vendorsLength = vendors.length; i < vendorsLength; i++) {
		                        var propertyPrefixed;
		
		                        if (i === 0) {
		                            propertyPrefixed = property;
		                        } else {
		                            /* Capitalize the first letter of the property to conform to JavaScript vendor prefix notation (e.g. webkitFilter). */
		                            propertyPrefixed = vendors[i] + property.replace(/^\w/, function(match) { return match.toUpperCase(); });
		                        }
		
		                        /* Check if the browser supports this property as prefixed. */
		                        if (Type.isString(Velocity.State.prefixElement.style[propertyPrefixed])) {
		                            /* Cache the match. */
		                            Velocity.State.prefixMatches[property] = propertyPrefixed;
		
		                            return [ propertyPrefixed, true ];
		                        }
		                    }
		
		                    /* If the browser doesn't support this property in any form, include a false flag so that the caller can decide how to proceed. */
		                    return [ property, false ];
		                }
		            }
		        },
		
		        /************************
		           CSS Property Values
		        ************************/
		
		        Values: {
		            /* Hex to RGB conversion. Copyright Tim Down: http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb */
		            hexToRgb: function (hex) {
		                var shortformRegex = /^#?([a-f\d])([a-f\d])([a-f\d])$/i,
		                    longformRegex = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i,
		                    rgbParts;
		
		                hex = hex.replace(shortformRegex, function (m, r, g, b) {
		                    return r + r + g + g + b + b;
		                });
		
		                rgbParts = longformRegex.exec(hex);
		
		                return rgbParts ? [ parseInt(rgbParts[1], 16), parseInt(rgbParts[2], 16), parseInt(rgbParts[3], 16) ] : [ 0, 0, 0 ];
		            },
		
		            isCSSNullValue: function (value) {
		                /* The browser defaults CSS values that have not been set to either 0 or one of several possible null-value strings.
		                   Thus, we check for both falsiness and these special strings. */
		                /* Null-value checking is performed to default the special strings to 0 (for the sake of tweening) or their hook
		                   templates as defined as CSS.Hooks (for the sake of hook injection/extraction). */
		                /* Note: Chrome returns "rgba(0, 0, 0, 0)" for an undefined color whereas IE returns "transparent". */
		                return (value == 0 || /^(none|auto|transparent|(rgba\(0, ?0, ?0, ?0\)))$/i.test(value));
		            },
		
		            /* Retrieve a property's default unit type. Used for assigning a unit type when one is not supplied by the user. */
		            getUnitType: function (property) {
		                if (/^(rotate|skew)/i.test(property)) {
		                    return "deg";
		                } else if (/(^(scale|scaleX|scaleY|scaleZ|alpha|flexGrow|flexHeight|zIndex|fontWeight)$)|((opacity|red|green|blue|alpha)$)/i.test(property)) {
		                    /* The above properties are unitless. */
		                    return "";
		                } else {
		                    /* Default to px for all other properties. */
		                    return "px";
		                }
		            },
		
		            /* HTML elements default to an associated display type when they're not set to display:none. */
		            /* Note: This function is used for correctly setting the non-"none" display value in certain Velocity redirects, such as fadeIn/Out. */
		            getDisplayType: function (element) {
		                var tagName = element && element.tagName.toString().toLowerCase();
		
		                if (/^(b|big|i|small|tt|abbr|acronym|cite|code|dfn|em|kbd|strong|samp|var|a|bdo|br|img|map|object|q|script|span|sub|sup|button|input|label|select|textarea)$/i.test(tagName)) {
		                    return "inline";
		                } else if (/^(li)$/i.test(tagName)) {
		                    return "list-item";
		                } else if (/^(tr)$/i.test(tagName)) {
		                    return "table-row";
		                } else if (/^(table)$/i.test(tagName)) {
		                    return "table";
		                } else if (/^(tbody)$/i.test(tagName)) {
		                    return "table-row-group";
		                /* Default to "block" when no match is found. */
		                } else {
		                    return "block";
		                }
		            },
		
		            /* The class add/remove functions are used to temporarily apply a "velocity-animating" class to elements while they're animating. */
		            addClass: function (element, className) {
		                if (element.classList) {
		                    element.classList.add(className);
		                } else {
		                    element.className += (element.className.length ? " " : "") + className;
		                }
		            },
		
		            removeClass: function (element, className) {
		                if (element.classList) {
		                    element.classList.remove(className);
		                } else {
		                    element.className = element.className.toString().replace(new RegExp("(^|\\s)" + className.split(" ").join("|") + "(\\s|$)", "gi"), " ");
		                }
		            }
		        },
		
		        /****************************
		           Style Getting & Setting
		        ****************************/
		
		        /* The singular getPropertyValue, which routes the logic for all normalizations, hooks, and standard CSS properties. */
		        getPropertyValue: function (element, property, rootPropertyValue, forceStyleLookup) {
		            /* Get an element's computed property value. */
		            /* Note: Retrieving the value of a CSS property cannot simply be performed by checking an element's
		               style attribute (which only reflects user-defined values). Instead, the browser must be queried for a property's
		               *computed* value. You can read more about getComputedStyle here: https://developer.mozilla.org/en/docs/Web/API/window.getComputedStyle */
		            function computePropertyValue (element, property) {
		                /* When box-sizing isn't set to border-box, height and width style values are incorrectly computed when an
		                   element's scrollbars are visible (which expands the element's dimensions). Thus, we defer to the more accurate
		                   offsetHeight/Width property, which includes the total dimensions for interior, border, padding, and scrollbar.
		                   We subtract border and padding to get the sum of interior + scrollbar. */
		                var computedValue = 0;
		
		                /* IE<=8 doesn't support window.getComputedStyle, thus we defer to jQuery, which has an extensive array
		                   of hacks to accurately retrieve IE8 property values. Re-implementing that logic here is not worth bloating the
		                   codebase for a dying browser. The performance repercussions of using jQuery here are minimal since
		                   Velocity is optimized to rarely (and sometimes never) query the DOM. Further, the $.css() codepath isn't that slow. */
		                if (IE <= 8) {
		                    computedValue = $.css(element, property); /* GET */
		                /* All other browsers support getComputedStyle. The returned live object reference is cached onto its
		                   associated element so that it does not need to be refetched upon every GET. */
		                } else {
		                    /* Browsers do not return height and width values for elements that are set to display:"none". Thus, we temporarily
		                       toggle display to the element type's default value. */
		                    var toggleDisplay = false;
		
		                    if (/^(width|height)$/.test(property) && CSS.getPropertyValue(element, "display") === 0) {
		                        toggleDisplay = true;
		                        CSS.setPropertyValue(element, "display", CSS.Values.getDisplayType(element));
		                    }
		
		                    function revertDisplay () {
		                        if (toggleDisplay) {
		                            CSS.setPropertyValue(element, "display", "none");
		                        }
		                    }
		
		                    if (!forceStyleLookup) {
		                        if (property === "height" && CSS.getPropertyValue(element, "boxSizing").toString().toLowerCase() !== "border-box") {
		                            var contentBoxHeight = element.offsetHeight - (parseFloat(CSS.getPropertyValue(element, "borderTopWidth")) || 0) - (parseFloat(CSS.getPropertyValue(element, "borderBottomWidth")) || 0) - (parseFloat(CSS.getPropertyValue(element, "paddingTop")) || 0) - (parseFloat(CSS.getPropertyValue(element, "paddingBottom")) || 0);
		                            revertDisplay();
		
		                            return contentBoxHeight;
		                        } else if (property === "width" && CSS.getPropertyValue(element, "boxSizing").toString().toLowerCase() !== "border-box") {
		                            var contentBoxWidth = element.offsetWidth - (parseFloat(CSS.getPropertyValue(element, "borderLeftWidth")) || 0) - (parseFloat(CSS.getPropertyValue(element, "borderRightWidth")) || 0) - (parseFloat(CSS.getPropertyValue(element, "paddingLeft")) || 0) - (parseFloat(CSS.getPropertyValue(element, "paddingRight")) || 0);
		                            revertDisplay();
		
		                            return contentBoxWidth;
		                        }
		                    }
		
		                    var computedStyle;
		
		                    /* For elements that Velocity hasn't been called on directly (e.g. when Velocity queries the DOM on behalf
		                       of a parent of an element its animating), perform a direct getComputedStyle lookup since the object isn't cached. */
		                    if (Data(element) === undefined) {
		                        computedStyle = window.getComputedStyle(element, null); /* GET */
		                    /* If the computedStyle object has yet to be cached, do so now. */
		                    } else if (!Data(element).computedStyle) {
		                        computedStyle = Data(element).computedStyle = window.getComputedStyle(element, null); /* GET */
		                    /* If computedStyle is cached, use it. */
		                    } else {
		                        computedStyle = Data(element).computedStyle;
		                    }
		
		                    /* IE and Firefox do not return a value for the generic borderColor -- they only return individual values for each border side's color.
		                       Also, in all browsers, when border colors aren't all the same, a compound value is returned that Velocity isn't setup to parse.
		                       So, as a polyfill for querying individual border side colors, we just return the top border's color and animate all borders from that value. */
		                    if (property === "borderColor") {
		                        property = "borderTopColor";
		                    }
		
		                    /* IE9 has a bug in which the "filter" property must be accessed from computedStyle using the getPropertyValue method
		                       instead of a direct property lookup. The getPropertyValue method is slower than a direct lookup, which is why we avoid it by default. */
		                    if (IE === 9 && property === "filter") {
		                        computedValue = computedStyle.getPropertyValue(property); /* GET */
		                    } else {
		                        computedValue = computedStyle[property];
		                    }
		
		                    /* Fall back to the property's style value (if defined) when computedValue returns nothing,
		                       which can happen when the element hasn't been painted. */
		                    if (computedValue === "" || computedValue === null) {
		                        computedValue = element.style[property];
		                    }
		
		                    revertDisplay();
		                }
		
		                /* For top, right, bottom, and left (TRBL) values that are set to "auto" on elements of "fixed" or "absolute" position,
		                   defer to jQuery for converting "auto" to a numeric value. (For elements with a "static" or "relative" position, "auto" has the same
		                   effect as being set to 0, so no conversion is necessary.) */
		                /* An example of why numeric conversion is necessary: When an element with "position:absolute" has an untouched "left"
		                   property, which reverts to "auto", left's value is 0 relative to its parent element, but is often non-zero relative
		                   to its *containing* (not parent) element, which is the nearest "position:relative" ancestor or the viewport (and always the viewport in the case of "position:fixed"). */
		                if (computedValue === "auto" && /^(top|right|bottom|left)$/i.test(property)) {
		                    var position = computePropertyValue(element, "position"); /* GET */
		
		                    /* For absolute positioning, jQuery's $.position() only returns values for top and left;
		                       right and bottom will have their "auto" value reverted to 0. */
		                    /* Note: A jQuery object must be created here since jQuery doesn't have a low-level alias for $.position().
		                       Not a big deal since we're currently in a GET batch anyway. */
		                    if (position === "fixed" || (position === "absolute" && /top|left/i.test(property))) {
		                        /* Note: jQuery strips the pixel unit from its returned values; we re-add it here to conform with computePropertyValue's behavior. */
		                        computedValue = $(element).position()[property] + "px"; /* GET */
		                    }
		                }
		
		                return computedValue;
		            }
		
		            var propertyValue;
		
		            /* If this is a hooked property (e.g. "clipLeft" instead of the root property of "clip"),
		               extract the hook's value from a normalized rootPropertyValue using CSS.Hooks.extractValue(). */
		            if (CSS.Hooks.registered[property]) {
		                var hook = property,
		                    hookRoot = CSS.Hooks.getRoot(hook);
		
		                /* If a cached rootPropertyValue wasn't passed in (which Velocity always attempts to do in order to avoid requerying the DOM),
		                   query the DOM for the root property's value. */
		                if (rootPropertyValue === undefined) {
		                    /* Since the browser is now being directly queried, use the official post-prefixing property name for this lookup. */
		                    rootPropertyValue = CSS.getPropertyValue(element, CSS.Names.prefixCheck(hookRoot)[0]); /* GET */
		                }
		
		                /* If this root has a normalization registered, peform the associated normalization extraction. */
		                if (CSS.Normalizations.registered[hookRoot]) {
		                    rootPropertyValue = CSS.Normalizations.registered[hookRoot]("extract", element, rootPropertyValue);
		                }
		
		                /* Extract the hook's value. */
		                propertyValue = CSS.Hooks.extractValue(hook, rootPropertyValue);
		
		            /* If this is a normalized property (e.g. "opacity" becomes "filter" in <=IE8) or "translateX" becomes "transform"),
		               normalize the property's name and value, and handle the special case of transforms. */
		            /* Note: Normalizing a property is mutually exclusive from hooking a property since hook-extracted values are strictly
		               numerical and therefore do not require normalization extraction. */
		            } else if (CSS.Normalizations.registered[property]) {
		                var normalizedPropertyName,
		                    normalizedPropertyValue;
		
		                normalizedPropertyName = CSS.Normalizations.registered[property]("name", element);
		
		                /* Transform values are calculated via normalization extraction (see below), which checks against the element's transformCache.
		                   At no point do transform GETs ever actually query the DOM; initial stylesheet values are never processed.
		                   This is because parsing 3D transform matrices is not always accurate and would bloat our codebase;
		                   thus, normalization extraction defaults initial transform values to their zero-values (e.g. 1 for scaleX and 0 for translateX). */
		                if (normalizedPropertyName !== "transform") {
		                    normalizedPropertyValue = computePropertyValue(element, CSS.Names.prefixCheck(normalizedPropertyName)[0]); /* GET */
		
		                    /* If the value is a CSS null-value and this property has a hook template, use that zero-value template so that hooks can be extracted from it. */
		                    if (CSS.Values.isCSSNullValue(normalizedPropertyValue) && CSS.Hooks.templates[property]) {
		                        normalizedPropertyValue = CSS.Hooks.templates[property][1];
		                    }
		                }
		
		                propertyValue = CSS.Normalizations.registered[property]("extract", element, normalizedPropertyValue);
		            }
		
		            /* If a (numeric) value wasn't produced via hook extraction or normalization, query the DOM. */
		            if (!/^[\d-]/.test(propertyValue)) {
		                /* For SVG elements, dimensional properties (which SVGAttribute() detects) are tweened via
		                   their HTML attribute values instead of their CSS style values. */
		                if (Data(element) && Data(element).isSVG && CSS.Names.SVGAttribute(property)) {
		                    /* Since the height/width attribute values must be set manually, they don't reflect computed values.
		                       Thus, we use use getBBox() to ensure we always get values for elements with undefined height/width attributes. */
		                    if (/^(height|width)$/i.test(property)) {
		                        /* Firefox throws an error if .getBBox() is called on an SVG that isn't attached to the DOM. */
		                        try {
		                            propertyValue = element.getBBox()[property];
		                        } catch (error) {
		                            propertyValue = 0;
		                        }
		                    /* Otherwise, access the attribute value directly. */
		                    } else {
		                        propertyValue = element.getAttribute(property);
		                    }
		                } else {
		                    propertyValue = computePropertyValue(element, CSS.Names.prefixCheck(property)[0]); /* GET */
		                }
		            }
		
		            /* Since property lookups are for animation purposes (which entails computing the numeric delta between start and end values),
		               convert CSS null-values to an integer of value 0. */
		            if (CSS.Values.isCSSNullValue(propertyValue)) {
		                propertyValue = 0;
		            }
		
		            if (Velocity.debug >= 2) console.log("Get " + property + ": " + propertyValue);
		
		            return propertyValue;
		        },
		
		        /* The singular setPropertyValue, which routes the logic for all normalizations, hooks, and standard CSS properties. */
		        setPropertyValue: function(element, property, propertyValue, rootPropertyValue, scrollData) {
		            var propertyName = property;
		
		            /* In order to be subjected to call options and element queueing, scroll animation is routed through Velocity as if it were a standard CSS property. */
		            if (property === "scroll") {
		                /* If a container option is present, scroll the container instead of the browser window. */
		                if (scrollData.container) {
		                    scrollData.container["scroll" + scrollData.direction] = propertyValue;
		                /* Otherwise, Velocity defaults to scrolling the browser window. */
		                } else {
		                    if (scrollData.direction === "Left") {
		                        window.scrollTo(propertyValue, scrollData.alternateValue);
		                    } else {
		                        window.scrollTo(scrollData.alternateValue, propertyValue);
		                    }
		                }
		            } else {
		                /* Transforms (translateX, rotateZ, etc.) are applied to a per-element transformCache object, which is manually flushed via flushTransformCache().
		                   Thus, for now, we merely cache transforms being SET. */
		                if (CSS.Normalizations.registered[property] && CSS.Normalizations.registered[property]("name", element) === "transform") {
		                    /* Perform a normalization injection. */
		                    /* Note: The normalization logic handles the transformCache updating. */
		                    CSS.Normalizations.registered[property]("inject", element, propertyValue);
		
		                    propertyName = "transform";
		                    propertyValue = Data(element).transformCache[property];
		                } else {
		                    /* Inject hooks. */
		                    if (CSS.Hooks.registered[property]) {
		                        var hookName = property,
		                            hookRoot = CSS.Hooks.getRoot(property);
		
		                        /* If a cached rootPropertyValue was not provided, query the DOM for the hookRoot's current value. */
		                        rootPropertyValue = rootPropertyValue || CSS.getPropertyValue(element, hookRoot); /* GET */
		
		                        propertyValue = CSS.Hooks.injectValue(hookName, propertyValue, rootPropertyValue);
		                        property = hookRoot;
		                    }
		
		                    /* Normalize names and values. */
		                    if (CSS.Normalizations.registered[property]) {
		                        propertyValue = CSS.Normalizations.registered[property]("inject", element, propertyValue);
		                        property = CSS.Normalizations.registered[property]("name", element);
		                    }
		
		                    /* Assign the appropriate vendor prefix before performing an official style update. */
		                    propertyName = CSS.Names.prefixCheck(property)[0];
		
		                    /* A try/catch is used for IE<=8, which throws an error when "invalid" CSS values are set, e.g. a negative width.
		                       Try/catch is avoided for other browsers since it incurs a performance overhead. */
		                    if (IE <= 8) {
		                        try {
		                            element.style[propertyName] = propertyValue;
		                        } catch (error) { if (Velocity.debug) console.log("Browser does not support [" + propertyValue + "] for [" + propertyName + "]"); }
		                    /* SVG elements have their dimensional properties (width, height, x, y, cx, etc.) applied directly as attributes instead of as styles. */
		                    /* Note: IE8 does not support SVG elements, so it's okay that we skip it for SVG animation. */
		                    } else if (Data(element) && Data(element).isSVG && CSS.Names.SVGAttribute(property)) {
		                        /* Note: For SVG attributes, vendor-prefixed property names are never used. */
		                        /* Note: Not all CSS properties can be animated via attributes, but the browser won't throw an error for unsupported properties. */
		                        element.setAttribute(property, propertyValue);
		                    } else {
		                        element.style[propertyName] = propertyValue;
		                    }
		
		                    if (Velocity.debug >= 2) console.log("Set " + property + " (" + propertyName + "): " + propertyValue);
		                }
		            }
		
		            /* Return the normalized property name and value in case the caller wants to know how these values were modified before being applied to the DOM. */
		            return [ propertyName, propertyValue ];
		        },
		
		        /* To increase performance by batching transform updates into a single SET, transforms are not directly applied to an element until flushTransformCache() is called. */
		        /* Note: Velocity applies transform properties in the same order that they are chronogically introduced to the element's CSS styles. */
		        flushTransformCache: function(element) {
		            var transformString = "";
		
		            /* Certain browsers require that SVG transforms be applied as an attribute. However, the SVG transform attribute takes a modified version of CSS's transform string
		               (units are dropped and, except for skewX/Y, subproperties are merged into their master property -- e.g. scaleX and scaleY are merged into scale(X Y). */
		            if ((IE || (Velocity.State.isAndroid && !Velocity.State.isChrome)) && Data(element).isSVG) {
		                /* Since transform values are stored in their parentheses-wrapped form, we use a helper function to strip out their numeric values.
		                   Further, SVG transform properties only take unitless (representing pixels) values, so it's okay that parseFloat() strips the unit suffixed to the float value. */
		                function getTransformFloat (transformProperty) {
		                    return parseFloat(CSS.getPropertyValue(element, transformProperty));
		                }
		
		                /* Create an object to organize all the transforms that we'll apply to the SVG element. To keep the logic simple,
		                   we process *all* transform properties -- even those that may not be explicitly applied (since they default to their zero-values anyway). */
		                var SVGTransforms = {
		                    translate: [ getTransformFloat("translateX"), getTransformFloat("translateY") ],
		                    skewX: [ getTransformFloat("skewX") ], skewY: [ getTransformFloat("skewY") ],
		                    /* If the scale property is set (non-1), use that value for the scaleX and scaleY values
		                       (this behavior mimics the result of animating all these properties at once on HTML elements). */
		                    scale: getTransformFloat("scale") !== 1 ? [ getTransformFloat("scale"), getTransformFloat("scale") ] : [ getTransformFloat("scaleX"), getTransformFloat("scaleY") ],
		                    /* Note: SVG's rotate transform takes three values: rotation degrees followed by the X and Y values
		                       defining the rotation's origin point. We ignore the origin values (default them to 0). */
		                    rotate: [ getTransformFloat("rotateZ"), 0, 0 ]
		                };
		
		                /* Iterate through the transform properties in the user-defined property map order.
		                   (This mimics the behavior of non-SVG transform animation.) */
		                $.each(Data(element).transformCache, function(transformName) {
		                    /* Except for with skewX/Y, revert the axis-specific transform subproperties to their axis-free master
		                       properties so that they match up with SVG's accepted transform properties. */
		                    if (/^translate/i.test(transformName)) {
		                        transformName = "translate";
		                    } else if (/^scale/i.test(transformName)) {
		                        transformName = "scale";
		                    } else if (/^rotate/i.test(transformName)) {
		                        transformName = "rotate";
		                    }
		
		                    /* Check that we haven't yet deleted the property from the SVGTransforms container. */
		                    if (SVGTransforms[transformName]) {
		                        /* Append the transform property in the SVG-supported transform format. As per the spec, surround the space-delimited values in parentheses. */
		                        transformString += transformName + "(" + SVGTransforms[transformName].join(" ") + ")" + " ";
		
		                        /* After processing an SVG transform property, delete it from the SVGTransforms container so we don't
		                           re-insert the same master property if we encounter another one of its axis-specific properties. */
		                        delete SVGTransforms[transformName];
		                    }
		                });
		            } else {
		                var transformValue,
		                    perspective;
		
		                /* Transform properties are stored as members of the transformCache object. Concatenate all the members into a string. */
		                $.each(Data(element).transformCache, function(transformName) {
		                    transformValue = Data(element).transformCache[transformName];
		
		                    /* Transform's perspective subproperty must be set first in order to take effect. Store it temporarily. */
		                    if (transformName === "transformPerspective") {
		                        perspective = transformValue;
		                        return true;
		                    }
		
		                    /* IE9 only supports one rotation type, rotateZ, which it refers to as "rotate". */
		                    if (IE === 9 && transformName === "rotateZ") {
		                        transformName = "rotate";
		                    }
		
		                    transformString += transformName + transformValue + " ";
		                });
		
		                /* If present, set the perspective subproperty first. */
		                if (perspective) {
		                    transformString = "perspective" + perspective + " " + transformString;
		                }
		            }
		
		            CSS.setPropertyValue(element, "transform", transformString);
		        }
		    };
		
		    /* Register hooks and normalizations. */
		    CSS.Hooks.register();
		    CSS.Normalizations.register();
		
		    /* Allow hook setting in the same fashion as jQuery's $.css(). */
		    Velocity.hook = function (elements, arg2, arg3) {
		        var value = undefined;
		
		        elements = sanitizeElements(elements);
		
		        $.each(elements, function(i, element) {
		            /* Initialize Velocity's per-element data cache if this element hasn't previously been animated. */
		            if (Data(element) === undefined) {
		                Velocity.init(element);
		            }
		
		            /* Get property value. If an element set was passed in, only return the value for the first element. */
		            if (arg3 === undefined) {
		                if (value === undefined) {
		                    value = Velocity.CSS.getPropertyValue(element, arg2);
		                }
		            /* Set property value. */
		            } else {
		                /* sPV returns an array of the normalized propertyName/propertyValue pair used to update the DOM. */
		                var adjustedSet = Velocity.CSS.setPropertyValue(element, arg2, arg3);
		
		                /* Transform properties don't automatically set. They have to be flushed to the DOM. */
		                if (adjustedSet[0] === "transform") {
		                    Velocity.CSS.flushTransformCache(element);
		                }
		
		                value = adjustedSet;
		            }
		        });
		
		        return value;
		    };
		
		    /*****************
		        Animation
		    *****************/
		
		    var animate = function() {
		
		        /******************
		            Call Chain
		        ******************/
		
		        /* Logic for determining what to return to the call stack when exiting out of Velocity. */
		        function getChain () {
		            /* If we are using the utility function, attempt to return this call's promise. If no promise library was detected,
		               default to null instead of returning the targeted elements so that utility function's return value is standardized. */
		            if (isUtility) {
		                return promiseData.promise || null;
		            /* Otherwise, if we're using $.fn, return the jQuery-/Zepto-wrapped element set. */
		            } else {
		                return elementsWrapped;
		            }
		        }
		
		        /*************************
		           Arguments Assignment
		        *************************/
		
		        /* To allow for expressive CoffeeScript code, Velocity supports an alternative syntax in which "elements" (or "e"), "properties" (or "p"), and "options" (or "o")
		           objects are defined on a container object that's passed in as Velocity's sole argument. */
		        /* Note: Some browsers automatically populate arguments with a "properties" object. We detect it by checking for its default "names" property. */
		        var syntacticSugar = (arguments[0] && (arguments[0].p || (($.isPlainObject(arguments[0].properties) && !arguments[0].properties.names) || Type.isString(arguments[0].properties)))),
		            /* Whether Velocity was called via the utility function (as opposed to on a jQuery/Zepto object). */
		            isUtility,
		            /* When Velocity is called via the utility function ($.Velocity()/Velocity()), elements are explicitly
		               passed in as the first parameter. Thus, argument positioning varies. We normalize them here. */
		            elementsWrapped,
		            argumentIndex;
		
		        var elements,
		            propertiesMap,
		            options;
		
		        /* Detect jQuery/Zepto elements being animated via the $.fn method. */
		        if (Type.isWrapped(this)) {
		            isUtility = false;
		
		            argumentIndex = 0;
		            elements = this;
		            elementsWrapped = this;
		        /* Otherwise, raw elements are being animated via the utility function. */
		        } else {
		            isUtility = true;
		
		            argumentIndex = 1;
		            elements = syntacticSugar ? (arguments[0].elements || arguments[0].e) : arguments[0];
		        }
		
		        elements = sanitizeElements(elements);
		
		        if (!elements) {
		            return;
		        }
		
		        if (syntacticSugar) {
		            propertiesMap = arguments[0].properties || arguments[0].p;
		            options = arguments[0].options || arguments[0].o;
		        } else {
		            propertiesMap = arguments[argumentIndex];
		            options = arguments[argumentIndex + 1];
		        }
		
		        /* The length of the element set (in the form of a nodeList or an array of elements) is defaulted to 1 in case a
		           single raw DOM element is passed in (which doesn't contain a length property). */
		        var elementsLength = elements.length,
		            elementsIndex = 0;
		
		        /***************************
		            Argument Overloading
		        ***************************/
		
		        /* Support is included for jQuery's argument overloading: $.animate(propertyMap [, duration] [, easing] [, complete]).
		           Overloading is detected by checking for the absence of an object being passed into options. */
		        /* Note: The stop and finish actions do not accept animation options, and are therefore excluded from this check. */
		        if (!/^(stop|finish|finishAll)$/i.test(propertiesMap) && !$.isPlainObject(options)) {
		            /* The utility function shifts all arguments one position to the right, so we adjust for that offset. */
		            var startingArgumentPosition = argumentIndex + 1;
		
		            options = {};
		
		            /* Iterate through all options arguments */
		            for (var i = startingArgumentPosition; i < arguments.length; i++) {
		                /* Treat a number as a duration. Parse it out. */
		                /* Note: The following RegEx will return true if passed an array with a number as its first item.
		                   Thus, arrays are skipped from this check. */
		                if (!Type.isArray(arguments[i]) && (/^(fast|normal|slow)$/i.test(arguments[i]) || /^\d/.test(arguments[i]))) {
		                    options.duration = arguments[i];
		                /* Treat strings and arrays as easings. */
		                } else if (Type.isString(arguments[i]) || Type.isArray(arguments[i])) {
		                    options.easing = arguments[i];
		                /* Treat a function as a complete callback. */
		                } else if (Type.isFunction(arguments[i])) {
		                    options.complete = arguments[i];
		                }
		            }
		        }
		
		        /***************
		            Promises
		        ***************/
		
		        var promiseData = {
		                promise: null,
		                resolver: null,
		                rejecter: null
		            };
		
		        /* If this call was made via the utility function (which is the default method of invocation when jQuery/Zepto are not being used), and if
		           promise support was detected, create a promise object for this call and store references to its resolver and rejecter methods. The resolve
		           method is used when a call completes naturally or is prematurely stopped by the user. In both cases, completeCall() handles the associated
		           call cleanup and promise resolving logic. The reject method is used when an invalid set of arguments is passed into a Velocity call. */
		        /* Note: Velocity employs a call-based queueing architecture, which means that stopping an animating element actually stops the full call that
		           triggered it -- not that one element exclusively. Similarly, there is one promise per call, and all elements targeted by a Velocity call are
		           grouped together for the purposes of resolving and rejecting a promise. */
		        if (isUtility && Velocity.Promise) {
		            promiseData.promise = new Velocity.Promise(function (resolve, reject) {
		                promiseData.resolver = resolve;
		                promiseData.rejecter = reject;
		            });
		        }
		
		        /*********************
		           Action Detection
		        *********************/
		
		        /* Velocity's behavior is categorized into "actions": Elements can either be specially scrolled into view,
		           or they can be started, stopped, or reversed. If a literal or referenced properties map is passed in as Velocity's
		           first argument, the associated action is "start". Alternatively, "scroll", "reverse", or "stop" can be passed in instead of a properties map. */
		        var action;
		
		        switch (propertiesMap) {
		            case "scroll":
		                action = "scroll";
		                break;
		
		            case "reverse":
		                action = "reverse";
		                break;
		
		            case "finish":
		            case "finishAll":
		            case "stop":
		                /*******************
		                    Action: Stop
		                *******************/
		
		                /* Clear the currently-active delay on each targeted element. */
		                $.each(elements, function(i, element) {
		                    if (Data(element) && Data(element).delayTimer) {
		                        /* Stop the timer from triggering its cached next() function. */
		                        clearTimeout(Data(element).delayTimer.setTimeout);
		
		                        /* Manually call the next() function so that the subsequent queue items can progress. */
		                        if (Data(element).delayTimer.next) {
		                            Data(element).delayTimer.next();
		                        }
		
		                        delete Data(element).delayTimer;
		                    }
		
		                    /* If we want to finish everything in the queue, we have to iterate through it
		                       and call each function. This will make them active calls below, which will
		                       cause them to be applied via the duration setting. */
		                    if (propertiesMap === "finishAll" && (options === true || Type.isString(options))) {
		                        /* Iterate through the items in the element's queue. */
		                        $.each($.queue(element, Type.isString(options) ? options : ""), function(_, item) {
		                            /* The queue array can contain an "inprogress" string, which we skip. */
		                            if (Type.isFunction(item)) {
		                                item();
		                            }
		                        });
		
		                        /* Clearing the $.queue() array is achieved by resetting it to []. */
		                        $.queue(element, Type.isString(options) ? options : "", []);
		                    }
		                });
		
		                var callsToStop = [];
		
		                /* When the stop action is triggered, the elements' currently active call is immediately stopped. The active call might have
		                   been applied to multiple elements, in which case all of the call's elements will be stopped. When an element
		                   is stopped, the next item in its animation queue is immediately triggered. */
		                /* An additional argument may be passed in to clear an element's remaining queued calls. Either true (which defaults to the "fx" queue)
		                   or a custom queue string can be passed in. */
		                /* Note: The stop command runs prior to Velocity's Queueing phase since its behavior is intended to take effect *immediately*,
		                   regardless of the element's current queue state. */
		
		                /* Iterate through every active call. */
		                $.each(Velocity.State.calls, function(i, activeCall) {
		                    /* Inactive calls are set to false by the logic inside completeCall(). Skip them. */
		                    if (activeCall) {
		                        /* Iterate through the active call's targeted elements. */
		                        $.each(activeCall[1], function(k, activeElement) {
		                            /* If true was passed in as a secondary argument, clear absolutely all calls on this element. Otherwise, only
		                               clear calls associated with the relevant queue. */
		                            /* Call stopping logic works as follows:
		                               - options === true --> stop current default queue calls (and queue:false calls), including remaining queued ones.
		                               - options === undefined --> stop current queue:"" call and all queue:false calls.
		                               - options === false --> stop only queue:false calls.
		                               - options === "custom" --> stop current queue:"custom" call, including remaining queued ones (there is no functionality to only clear the currently-running queue:"custom" call). */
		                            var queueName = (options === undefined) ? "" : options;
		
		                            if (queueName !== true && (activeCall[2].queue !== queueName) && !(options === undefined && activeCall[2].queue === false)) {
		                                return true;
		                            }
		
		                            /* Iterate through the calls targeted by the stop command. */
		                            $.each(elements, function(l, element) {
		                                /* Check that this call was applied to the target element. */
		                                if (element === activeElement) {
		                                    /* Optionally clear the remaining queued calls. If we're doing "finishAll" this won't find anything,
		                                       due to the queue-clearing above. */
		                                    if (options === true || Type.isString(options)) {
		                                        /* Iterate through the items in the element's queue. */
		                                        $.each($.queue(element, Type.isString(options) ? options : ""), function(_, item) {
		                                            /* The queue array can contain an "inprogress" string, which we skip. */
		                                            if (Type.isFunction(item)) {
		                                                /* Pass the item's callback a flag indicating that we want to abort from the queue call.
		                                                   (Specifically, the queue will resolve the call's associated promise then abort.)  */
		                                                item(null, true);
		                                            }
		                                        });
		
		                                        /* Clearing the $.queue() array is achieved by resetting it to []. */
		                                        $.queue(element, Type.isString(options) ? options : "", []);
		                                    }
		
		                                    if (propertiesMap === "stop") {
		                                        /* Since "reverse" uses cached start values (the previous call's endValues), these values must be
		                                           changed to reflect the final value that the elements were actually tweened to. */
		                                        /* Note: If only queue:false animations are currently running on an element, it won't have a tweensContainer
		                                           object. Also, queue:false animations can't be reversed. */
		                                        if (Data(element) && Data(element).tweensContainer && queueName !== false) {
		                                            $.each(Data(element).tweensContainer, function(m, activeTween) {
		                                                activeTween.endValue = activeTween.currentValue;
		                                            });
		                                        }
		
		                                        callsToStop.push(i);
		                                    } else if (propertiesMap === "finish" || propertiesMap === "finishAll") {
		                                        /* To get active tweens to finish immediately, we forcefully shorten their durations to 1ms so that
		                                        they finish upon the next rAf tick then proceed with normal call completion logic. */
		                                        activeCall[2].duration = 1;
		                                    }
		                                }
		                            });
		                        });
		                    }
		                });
		
		                /* Prematurely call completeCall() on each matched active call. Pass an additional flag for "stop" to indicate
		                   that the complete callback and display:none setting should be skipped since we're completing prematurely. */
		                if (propertiesMap === "stop") {
		                    $.each(callsToStop, function(i, j) {
		                        completeCall(j, true);
		                    });
		
		                    if (promiseData.promise) {
		                        /* Immediately resolve the promise associated with this stop call since stop runs synchronously. */
		                        promiseData.resolver(elements);
		                    }
		                }
		
		                /* Since we're stopping, and not proceeding with queueing, exit out of Velocity. */
		                return getChain();
		
		            default:
		                /* Treat a non-empty plain object as a literal properties map. */
		                if ($.isPlainObject(propertiesMap) && !Type.isEmptyObject(propertiesMap)) {
		                    action = "start";
		
		                /****************
		                    Redirects
		                ****************/
		
		                /* Check if a string matches a registered redirect (see Redirects above). */
		                } else if (Type.isString(propertiesMap) && Velocity.Redirects[propertiesMap]) {
		                    var opts = $.extend({}, options),
		                        durationOriginal = opts.duration,
		                        delayOriginal = opts.delay || 0;
		
		                    /* If the backwards option was passed in, reverse the element set so that elements animate from the last to the first. */
		                    if (opts.backwards === true) {
		                        elements = $.extend(true, [], elements).reverse();
		                    }
		
		                    /* Individually trigger the redirect for each element in the set to prevent users from having to handle iteration logic in their redirect. */
		                    $.each(elements, function(elementIndex, element) {
		                        /* If the stagger option was passed in, successively delay each element by the stagger value (in ms). Retain the original delay value. */
		                        if (parseFloat(opts.stagger)) {
		                            opts.delay = delayOriginal + (parseFloat(opts.stagger) * elementIndex);
		                        } else if (Type.isFunction(opts.stagger)) {
		                            opts.delay = delayOriginal + opts.stagger.call(element, elementIndex, elementsLength);
		                        }
		
		                        /* If the drag option was passed in, successively increase/decrease (depending on the presense of opts.backwards)
		                           the duration of each element's animation, using floors to prevent producing very short durations. */
		                        if (opts.drag) {
		                            /* Default the duration of UI pack effects (callouts and transitions) to 1000ms instead of the usual default duration of 400ms. */
		                            opts.duration = parseFloat(durationOriginal) || (/^(callout|transition)/.test(propertiesMap) ? 1000 : DURATION_DEFAULT);
		
		                            /* For each element, take the greater duration of: A) animation completion percentage relative to the original duration,
		                               B) 75% of the original duration, or C) a 200ms fallback (in case duration is already set to a low value).
		                               The end result is a baseline of 75% of the redirect's duration that increases/decreases as the end of the element set is approached. */
		                            opts.duration = Math.max(opts.duration * (opts.backwards ? 1 - elementIndex/elementsLength : (elementIndex + 1) / elementsLength), opts.duration * 0.75, 200);
		                        }
		
		                        /* Pass in the call's opts object so that the redirect can optionally extend it. It defaults to an empty object instead of null to
		                           reduce the opts checking logic required inside the redirect. */
		                        Velocity.Redirects[propertiesMap].call(element, element, opts || {}, elementIndex, elementsLength, elements, promiseData.promise ? promiseData : undefined);
		                    });
		
		                    /* Since the animation logic resides within the redirect's own code, abort the remainder of this call.
		                       (The performance overhead up to this point is virtually non-existant.) */
		                    /* Note: The jQuery call chain is kept intact by returning the complete element set. */
		                    return getChain();
		                } else {
		                    var abortError = "Velocity: First argument (" + propertiesMap + ") was not a property map, a known action, or a registered redirect. Aborting.";
		
		                    if (promiseData.promise) {
		                        promiseData.rejecter(new Error(abortError));
		                    } else {
		                        console.log(abortError);
		                    }
		
		                    return getChain();
		                }
		        }
		
		        /**************************
		            Call-Wide Variables
		        **************************/
		
		        /* A container for CSS unit conversion ratios (e.g. %, rem, and em ==> px) that is used to cache ratios across all elements
		           being animated in a single Velocity call. Calculating unit ratios necessitates DOM querying and updating, and is therefore
		           avoided (via caching) wherever possible. This container is call-wide instead of page-wide to avoid the risk of using stale
		           conversion metrics across Velocity animations that are not immediately consecutively chained. */
		        var callUnitConversionData = {
		                lastParent: null,
		                lastPosition: null,
		                lastFontSize: null,
		                lastPercentToPxWidth: null,
		                lastPercentToPxHeight: null,
		                lastEmToPx: null,
		                remToPx: null,
		                vwToPx: null,
		                vhToPx: null
		            };
		
		        /* A container for all the ensuing tween data and metadata associated with this call. This container gets pushed to the page-wide
		           Velocity.State.calls array that is processed during animation ticking. */
		        var call = [];
		
		        /************************
		           Element Processing
		        ************************/
		
		        /* Element processing consists of three parts -- data processing that cannot go stale and data processing that *can* go stale (i.e. third-party style modifications):
		           1) Pre-Queueing: Element-wide variables, including the element's data storage, are instantiated. Call options are prepared. If triggered, the Stop action is executed.
		           2) Queueing: The logic that runs once this call has reached its point of execution in the element's $.queue() stack. Most logic is placed here to avoid risking it becoming stale.
		           3) Pushing: Consolidation of the tween data followed by its push onto the global in-progress calls container.
		        */
		
		        function processElement () {
		
		            /*************************
		               Part I: Pre-Queueing
		            *************************/
		
		            /***************************
		               Element-Wide Variables
		            ***************************/
		
		            var element = this,
		                /* The runtime opts object is the extension of the current call's options and Velocity's page-wide option defaults. */
		                opts = $.extend({}, Velocity.defaults, options),
		                /* A container for the processed data associated with each property in the propertyMap.
		                   (Each property in the map produces its own "tween".) */
		                tweensContainer = {},
		                elementUnitConversionData;
		
		            /******************
		               Element Init
		            ******************/
		
		            if (Data(element) === undefined) {
		                Velocity.init(element);
		            }
		
		            /******************
		               Option: Delay
		            ******************/
		
		            /* Since queue:false doesn't respect the item's existing queue, we avoid injecting its delay here (it's set later on). */
		            /* Note: Velocity rolls its own delay function since jQuery doesn't have a utility alias for $.fn.delay()
		               (and thus requires jQuery element creation, which we avoid since its overhead includes DOM querying). */
		            if (parseFloat(opts.delay) && opts.queue !== false) {
		                $.queue(element, opts.queue, function(next) {
		                    /* This is a flag used to indicate to the upcoming completeCall() function that this queue entry was initiated by Velocity. See completeCall() for further details. */
		                    Velocity.velocityQueueEntryFlag = true;
		
		                    /* The ensuing queue item (which is assigned to the "next" argument that $.queue() automatically passes in) will be triggered after a setTimeout delay.
		                       The setTimeout is stored so that it can be subjected to clearTimeout() if this animation is prematurely stopped via Velocity's "stop" command. */
		                    Data(element).delayTimer = {
		                        setTimeout: setTimeout(next, parseFloat(opts.delay)),
		                        next: next
		                    };
		                });
		            }
		
		            /*********************
		               Option: Duration
		            *********************/
		
		            /* Support for jQuery's named durations. */
		            switch (opts.duration.toString().toLowerCase()) {
		                case "fast":
		                    opts.duration = 200;
		                    break;
		
		                case "normal":
		                    opts.duration = DURATION_DEFAULT;
		                    break;
		
		                case "slow":
		                    opts.duration = 600;
		                    break;
		
		                default:
		                    /* Remove the potential "ms" suffix and default to 1 if the user is attempting to set a duration of 0 (in order to produce an immediate style change). */
		                    opts.duration = parseFloat(opts.duration) || 1;
		            }
		
		            /************************
		               Global Option: Mock
		            ************************/
		
		            if (Velocity.mock !== false) {
		                /* In mock mode, all animations are forced to 1ms so that they occur immediately upon the next rAF tick.
		                   Alternatively, a multiplier can be passed in to time remap all delays and durations. */
		                if (Velocity.mock === true) {
		                    opts.duration = opts.delay = 1;
		                } else {
		                    opts.duration *= parseFloat(Velocity.mock) || 1;
		                    opts.delay *= parseFloat(Velocity.mock) || 1;
		                }
		            }
		
		            /*******************
		               Option: Easing
		            *******************/
		
		            opts.easing = getEasing(opts.easing, opts.duration);
		
		            /**********************
		               Option: Callbacks
		            **********************/
		
		            /* Callbacks must functions. Otherwise, default to null. */
		            if (opts.begin && !Type.isFunction(opts.begin)) {
		                opts.begin = null;
		            }
		
		            if (opts.progress && !Type.isFunction(opts.progress)) {
		                opts.progress = null;
		            }
		
		            if (opts.complete && !Type.isFunction(opts.complete)) {
		                opts.complete = null;
		            }
		
		            /*********************************
		               Option: Display & Visibility
		            *********************************/
		
		            /* Refer to Velocity's documentation (VelocityJS.org/#displayAndVisibility) for a description of the display and visibility options' behavior. */
		            /* Note: We strictly check for undefined instead of falsiness because display accepts an empty string value. */
		            if (opts.display !== undefined && opts.display !== null) {
		                opts.display = opts.display.toString().toLowerCase();
		
		                /* Users can pass in a special "auto" value to instruct Velocity to set the element to its default display value. */
		                if (opts.display === "auto") {
		                    opts.display = Velocity.CSS.Values.getDisplayType(element);
		                }
		            }
		
		            if (opts.visibility !== undefined && opts.visibility !== null) {
		                opts.visibility = opts.visibility.toString().toLowerCase();
		            }
		
		            /**********************
		               Option: mobileHA
		            **********************/
		
		            /* When set to true, and if this is a mobile device, mobileHA automatically enables hardware acceleration (via a null transform hack)
		               on animating elements. HA is removed from the element at the completion of its animation. */
		            /* Note: Android Gingerbread doesn't support HA. If a null transform hack (mobileHA) is in fact set, it will prevent other tranform subproperties from taking effect. */
		            /* Note: You can read more about the use of mobileHA in Velocity's documentation: VelocityJS.org/#mobileHA. */
		            opts.mobileHA = (opts.mobileHA && Velocity.State.isMobile && !Velocity.State.isGingerbread);
		
		            /***********************
		               Part II: Queueing
		            ***********************/
		
		            /* When a set of elements is targeted by a Velocity call, the set is broken up and each element has the current Velocity call individually queued onto it.
		               In this way, each element's existing queue is respected; some elements may already be animating and accordingly should not have this current Velocity call triggered immediately. */
		            /* In each queue, tween data is processed for each animating property then pushed onto the call-wide calls array. When the last element in the set has had its tweens processed,
		               the call array is pushed to Velocity.State.calls for live processing by the requestAnimationFrame tick. */
		            function buildQueue (next) {
		
		                /*******************
		                   Option: Begin
		                *******************/
		
		                /* The begin callback is fired once per call -- not once per elemenet -- and is passed the full raw DOM element set as both its context and its first argument. */
		                if (opts.begin && elementsIndex === 0) {
		                    /* We throw callbacks in a setTimeout so that thrown errors don't halt the execution of Velocity itself. */
		                    try {
		                        opts.begin.call(elements, elements);
		                    } catch (error) {
		                        setTimeout(function() { throw error; }, 1);
		                    }
		                }
		
		                /*****************************************
		                   Tween Data Construction (for Scroll)
		                *****************************************/
		
		                /* Note: In order to be subjected to chaining and animation options, scroll's tweening is routed through Velocity as if it were a standard CSS property animation. */
		                if (action === "scroll") {
		                    /* The scroll action uniquely takes an optional "offset" option -- specified in pixels -- that offsets the targeted scroll position. */
		                    var scrollDirection = (/^x$/i.test(opts.axis) ? "Left" : "Top"),
		                        scrollOffset = parseFloat(opts.offset) || 0,
		                        scrollPositionCurrent,
		                        scrollPositionCurrentAlternate,
		                        scrollPositionEnd;
		
		                    /* Scroll also uniquely takes an optional "container" option, which indicates the parent element that should be scrolled --
		                       as opposed to the browser window itself. This is useful for scrolling toward an element that's inside an overflowing parent element. */
		                    if (opts.container) {
		                        /* Ensure that either a jQuery object or a raw DOM element was passed in. */
		                        if (Type.isWrapped(opts.container) || Type.isNode(opts.container)) {
		                            /* Extract the raw DOM element from the jQuery wrapper. */
		                            opts.container = opts.container[0] || opts.container;
		                            /* Note: Unlike other properties in Velocity, the browser's scroll position is never cached since it so frequently changes
		                               (due to the user's natural interaction with the page). */
		                            scrollPositionCurrent = opts.container["scroll" + scrollDirection]; /* GET */
		
		                            /* $.position() values are relative to the container's currently viewable area (without taking into account the container's true dimensions
		                               -- say, for example, if the container was not overflowing). Thus, the scroll end value is the sum of the child element's position *and*
		                               the scroll container's current scroll position. */
		                            scrollPositionEnd = (scrollPositionCurrent + $(element).position()[scrollDirection.toLowerCase()]) + scrollOffset; /* GET */
		                        /* If a value other than a jQuery object or a raw DOM element was passed in, default to null so that this option is ignored. */
		                        } else {
		                            opts.container = null;
		                        }
		                    } else {
		                        /* If the window itself is being scrolled -- not a containing element -- perform a live scroll position lookup using
		                           the appropriate cached property names (which differ based on browser type). */
		                        scrollPositionCurrent = Velocity.State.scrollAnchor[Velocity.State["scrollProperty" + scrollDirection]]; /* GET */
		                        /* When scrolling the browser window, cache the alternate axis's current value since window.scrollTo() doesn't let us change only one value at a time. */
		                        scrollPositionCurrentAlternate = Velocity.State.scrollAnchor[Velocity.State["scrollProperty" + (scrollDirection === "Left" ? "Top" : "Left")]]; /* GET */
		
		                        /* Unlike $.position(), $.offset() values are relative to the browser window's true dimensions -- not merely its currently viewable area --
		                           and therefore end values do not need to be compounded onto current values. */
		                        scrollPositionEnd = $(element).offset()[scrollDirection.toLowerCase()] + scrollOffset; /* GET */
		                    }
		
		                    /* Since there's only one format that scroll's associated tweensContainer can take, we create it manually. */
		                    tweensContainer = {
		                        scroll: {
		                            rootPropertyValue: false,
		                            startValue: scrollPositionCurrent,
		                            currentValue: scrollPositionCurrent,
		                            endValue: scrollPositionEnd,
		                            unitType: "",
		                            easing: opts.easing,
		                            scrollData: {
		                                container: opts.container,
		                                direction: scrollDirection,
		                                alternateValue: scrollPositionCurrentAlternate
		                            }
		                        },
		                        element: element
		                    };
		
		                    if (Velocity.debug) console.log("tweensContainer (scroll): ", tweensContainer.scroll, element);
		
		                /******************************************
		                   Tween Data Construction (for Reverse)
		                ******************************************/
		
		                /* Reverse acts like a "start" action in that a property map is animated toward. The only difference is
		                   that the property map used for reverse is the inverse of the map used in the previous call. Thus, we manipulate
		                   the previous call to construct our new map: use the previous map's end values as our new map's start values. Copy over all other data. */
		                /* Note: Reverse can be directly called via the "reverse" parameter, or it can be indirectly triggered via the loop option. (Loops are composed of multiple reverses.) */
		                /* Note: Reverse calls do not need to be consecutively chained onto a currently-animating element in order to operate on cached values;
		                   there is no harm to reverse being called on a potentially stale data cache since reverse's behavior is simply defined
		                   as reverting to the element's values as they were prior to the previous *Velocity* call. */
		                } else if (action === "reverse") {
		                    /* Abort if there is no prior animation data to reverse to. */
		                    if (!Data(element).tweensContainer) {
		                        /* Dequeue the element so that this queue entry releases itself immediately, allowing subsequent queue entries to run. */
		                        $.dequeue(element, opts.queue);
		
		                        return;
		                    } else {
		                        /*********************
		                           Options Parsing
		                        *********************/
		
		                        /* If the element was hidden via the display option in the previous call,
		                           revert display to "auto" prior to reversal so that the element is visible again. */
		                        if (Data(element).opts.display === "none") {
		                            Data(element).opts.display = "auto";
		                        }
		
		                        if (Data(element).opts.visibility === "hidden") {
		                            Data(element).opts.visibility = "visible";
		                        }
		
		                        /* If the loop option was set in the previous call, disable it so that "reverse" calls aren't recursively generated.
		                           Further, remove the previous call's callback options; typically, users do not want these to be refired. */
		                        Data(element).opts.loop = false;
		                        Data(element).opts.begin = null;
		                        Data(element).opts.complete = null;
		
		                        /* Since we're extending an opts object that has already been extended with the defaults options object,
		                           we remove non-explicitly-defined properties that are auto-assigned values. */
		                        if (!options.easing) {
		                            delete opts.easing;
		                        }
		
		                        if (!options.duration) {
		                            delete opts.duration;
		                        }
		
		                        /* The opts object used for reversal is an extension of the options object optionally passed into this
		                           reverse call plus the options used in the previous Velocity call. */
		                        opts = $.extend({}, Data(element).opts, opts);
		
		                        /*************************************
		                           Tweens Container Reconstruction
		                        *************************************/
		
		                        /* Create a deepy copy (indicated via the true flag) of the previous call's tweensContainer. */
		                        var lastTweensContainer = $.extend(true, {}, Data(element).tweensContainer);
		
		                        /* Manipulate the previous tweensContainer by replacing its end values and currentValues with its start values. */
		                        for (var lastTween in lastTweensContainer) {
		                            /* In addition to tween data, tweensContainers contain an element property that we ignore here. */
		                            if (lastTween !== "element") {
		                                var lastStartValue = lastTweensContainer[lastTween].startValue;
		
		                                lastTweensContainer[lastTween].startValue = lastTweensContainer[lastTween].currentValue = lastTweensContainer[lastTween].endValue;
		                                lastTweensContainer[lastTween].endValue = lastStartValue;
		
		                                /* Easing is the only option that embeds into the individual tween data (since it can be defined on a per-property basis).
		                                   Accordingly, every property's easing value must be updated when an options object is passed in with a reverse call.
		                                   The side effect of this extensibility is that all per-property easing values are forcefully reset to the new value. */
		                                if (!Type.isEmptyObject(options)) {
		                                    lastTweensContainer[lastTween].easing = opts.easing;
		                                }
		
		                                if (Velocity.debug) console.log("reverse tweensContainer (" + lastTween + "): " + JSON.stringify(lastTweensContainer[lastTween]), element);
		                            }
		                        }
		
		                        tweensContainer = lastTweensContainer;
		                    }
		
		                /*****************************************
		                   Tween Data Construction (for Start)
		                *****************************************/
		
		                } else if (action === "start") {
		
		                    /*************************
		                        Value Transferring
		                    *************************/
		
		                    /* If this queue entry follows a previous Velocity-initiated queue entry *and* if this entry was created
		                       while the element was in the process of being animated by Velocity, then this current call is safe to use
		                       the end values from the prior call as its start values. Velocity attempts to perform this value transfer
		                       process whenever possible in order to avoid requerying the DOM. */
		                    /* If values aren't transferred from a prior call and start values were not forcefed by the user (more on this below),
		                       then the DOM is queried for the element's current values as a last resort. */
		                    /* Note: Conversely, animation reversal (and looping) *always* perform inter-call value transfers; they never requery the DOM. */
		                    var lastTweensContainer;
		
		                    /* The per-element isAnimating flag is used to indicate whether it's safe (i.e. the data isn't stale)
		                       to transfer over end values to use as start values. If it's set to true and there is a previous
		                       Velocity call to pull values from, do so. */
		                    if (Data(element).tweensContainer && Data(element).isAnimating === true) {
		                        lastTweensContainer = Data(element).tweensContainer;
		                    }
		
		                    /***************************
		                       Tween Data Calculation
		                    ***************************/
		
		                    /* This function parses property data and defaults endValue, easing, and startValue as appropriate. */
		                    /* Property map values can either take the form of 1) a single value representing the end value,
		                       or 2) an array in the form of [ endValue, [, easing] [, startValue] ].
		                       The optional third parameter is a forcefed startValue to be used instead of querying the DOM for
		                       the element's current value. Read Velocity's docmentation to learn more about forcefeeding: VelocityJS.org/#forcefeeding */
		                    function parsePropertyValue (valueData, skipResolvingEasing) {
		                        var endValue = undefined,
		                            easing = undefined,
		                            startValue = undefined;
		
		                        /* Handle the array format, which can be structured as one of three potential overloads:
		                           A) [ endValue, easing, startValue ], B) [ endValue, easing ], or C) [ endValue, startValue ] */
		                        if (Type.isArray(valueData)) {
		                            /* endValue is always the first item in the array. Don't bother validating endValue's value now
		                               since the ensuing property cycling logic does that. */
		                            endValue = valueData[0];
		
		                            /* Two-item array format: If the second item is a number, function, or hex string, treat it as a
		                               start value since easings can only be non-hex strings or arrays. */
		                            if ((!Type.isArray(valueData[1]) && /^[\d-]/.test(valueData[1])) || Type.isFunction(valueData[1]) || CSS.RegEx.isHex.test(valueData[1])) {
		                                startValue = valueData[1];
		                            /* Two or three-item array: If the second item is a non-hex string or an array, treat it as an easing. */
		                            } else if ((Type.isString(valueData[1]) && !CSS.RegEx.isHex.test(valueData[1])) || Type.isArray(valueData[1])) {
		                                easing = skipResolvingEasing ? valueData[1] : getEasing(valueData[1], opts.duration);
		
		                                /* Don't bother validating startValue's value now since the ensuing property cycling logic inherently does that. */
		                                if (valueData[2] !== undefined) {
		                                    startValue = valueData[2];
		                                }
		                            }
		                        /* Handle the single-value format. */
		                        } else {
		                            endValue = valueData;
		                        }
		
		                        /* Default to the call's easing if a per-property easing type was not defined. */
		                        if (!skipResolvingEasing) {
		                            easing = easing || opts.easing;
		                        }
		
		                        /* If functions were passed in as values, pass the function the current element as its context,
		                           plus the element's index and the element set's size as arguments. Then, assign the returned value. */
		                        if (Type.isFunction(endValue)) {
		                            endValue = endValue.call(element, elementsIndex, elementsLength);
		                        }
		
		                        if (Type.isFunction(startValue)) {
		                            startValue = startValue.call(element, elementsIndex, elementsLength);
		                        }
		
		                        /* Allow startValue to be left as undefined to indicate to the ensuing code that its value was not forcefed. */
		                        return [ endValue || 0, easing, startValue ];
		                    }
		
		                    /* Cycle through each property in the map, looking for shorthand color properties (e.g. "color" as opposed to "colorRed"). Inject the corresponding
		                       colorRed, colorGreen, and colorBlue RGB component tweens into the propertiesMap (which Velocity understands) and remove the shorthand property. */
		                    $.each(propertiesMap, function(property, value) {
		                        /* Find shorthand color properties that have been passed a hex string. */
		                        if (RegExp("^" + CSS.Lists.colors.join("$|^") + "$").test(property)) {
		                            /* Parse the value data for each shorthand. */
		                            var valueData = parsePropertyValue(value, true),
		                                endValue = valueData[0],
		                                easing = valueData[1],
		                                startValue = valueData[2];
		
		                            if (CSS.RegEx.isHex.test(endValue)) {
		                                /* Convert the hex strings into their RGB component arrays. */
		                                var colorComponents = [ "Red", "Green", "Blue" ],
		                                    endValueRGB = CSS.Values.hexToRgb(endValue),
		                                    startValueRGB = startValue ? CSS.Values.hexToRgb(startValue) : undefined;
		
		                                /* Inject the RGB component tweens into propertiesMap. */
		                                for (var i = 0; i < colorComponents.length; i++) {
		                                    var dataArray = [ endValueRGB[i] ];
		
		                                    if (easing) {
		                                        dataArray.push(easing);
		                                    }
		
		                                    if (startValueRGB !== undefined) {
		                                        dataArray.push(startValueRGB[i]);
		                                    }
		
		                                    propertiesMap[property + colorComponents[i]] = dataArray;
		                                }
		
		                                /* Remove the intermediary shorthand property entry now that we've processed it. */
		                                delete propertiesMap[property];
		                            }
		                        }
		                    });
		
		                    /* Create a tween out of each property, and append its associated data to tweensContainer. */
		                    for (var property in propertiesMap) {
		
		                        /**************************
		                           Start Value Sourcing
		                        **************************/
		
		                        /* Parse out endValue, easing, and startValue from the property's data. */
		                        var valueData = parsePropertyValue(propertiesMap[property]),
		                            endValue = valueData[0],
		                            easing = valueData[1],
		                            startValue = valueData[2];
		
		                        /* Now that the original property name's format has been used for the parsePropertyValue() lookup above,
		                           we force the property to its camelCase styling to normalize it for manipulation. */
		                        property = CSS.Names.camelCase(property);
		
		                        /* In case this property is a hook, there are circumstances where we will intend to work on the hook's root property and not the hooked subproperty. */
		                        var rootProperty = CSS.Hooks.getRoot(property),
		                            rootPropertyValue = false;
		
		                        /* Other than for the dummy tween property, properties that are not supported by the browser (and do not have an associated normalization) will
		                           inherently produce no style changes when set, so they are skipped in order to decrease animation tick overhead.
		                           Property support is determined via prefixCheck(), which returns a false flag when no supported is detected. */
		                        /* Note: Since SVG elements have some of their properties directly applied as HTML attributes,
		                           there is no way to check for their explicit browser support, and so we skip skip this check for them. */
		                        if (!Data(element).isSVG && rootProperty !== "tween" && CSS.Names.prefixCheck(rootProperty)[1] === false && CSS.Normalizations.registered[rootProperty] === undefined) {
		                            if (Velocity.debug) console.log("Skipping [" + rootProperty + "] due to a lack of browser support.");
		
		                            continue;
		                        }
		
		                        /* If the display option is being set to a non-"none" (e.g. "block") and opacity (filter on IE<=8) is being
		                           animated to an endValue of non-zero, the user's intention is to fade in from invisible, thus we forcefeed opacity
		                           a startValue of 0 if its startValue hasn't already been sourced by value transferring or prior forcefeeding. */
		                        if (((opts.display !== undefined && opts.display !== null && opts.display !== "none") || (opts.visibility !== undefined && opts.visibility !== "hidden")) && /opacity|filter/.test(property) && !startValue && endValue !== 0) {
		                            startValue = 0;
		                        }
		
		                        /* If values have been transferred from the previous Velocity call, extract the endValue and rootPropertyValue
		                           for all of the current call's properties that were *also* animated in the previous call. */
		                        /* Note: Value transferring can optionally be disabled by the user via the _cacheValues option. */
		                        if (opts._cacheValues && lastTweensContainer && lastTweensContainer[property]) {
		                            if (startValue === undefined) {
		                                startValue = lastTweensContainer[property].endValue + lastTweensContainer[property].unitType;
		                            }
		
		                            /* The previous call's rootPropertyValue is extracted from the element's data cache since that's the
		                               instance of rootPropertyValue that gets freshly updated by the tweening process, whereas the rootPropertyValue
		                               attached to the incoming lastTweensContainer is equal to the root property's value prior to any tweening. */
		                            rootPropertyValue = Data(element).rootPropertyValueCache[rootProperty];
		                        /* If values were not transferred from a previous Velocity call, query the DOM as needed. */
		                        } else {
		                            /* Handle hooked properties. */
		                            if (CSS.Hooks.registered[property]) {
		                               if (startValue === undefined) {
		                                    rootPropertyValue = CSS.getPropertyValue(element, rootProperty); /* GET */
		                                    /* Note: The following getPropertyValue() call does not actually trigger a DOM query;
		                                       getPropertyValue() will extract the hook from rootPropertyValue. */
		                                    startValue = CSS.getPropertyValue(element, property, rootPropertyValue);
		                                /* If startValue is already defined via forcefeeding, do not query the DOM for the root property's value;
		                                   just grab rootProperty's zero-value template from CSS.Hooks. This overwrites the element's actual
		                                   root property value (if one is set), but this is acceptable since the primary reason users forcefeed is
		                                   to avoid DOM queries, and thus we likewise avoid querying the DOM for the root property's value. */
		                                } else {
		                                    /* Grab this hook's zero-value template, e.g. "0px 0px 0px black". */
		                                    rootPropertyValue = CSS.Hooks.templates[rootProperty][1];
		                                }
		                            /* Handle non-hooked properties that haven't already been defined via forcefeeding. */
		                            } else if (startValue === undefined) {
		                                startValue = CSS.getPropertyValue(element, property); /* GET */
		                            }
		                        }
		
		                        /**************************
		                           Value Data Extraction
		                        **************************/
		
		                        var separatedValue,
		                            endValueUnitType,
		                            startValueUnitType,
		                            operator = false;
		
		                        /* Separates a property value into its numeric value and its unit type. */
		                        function separateValue (property, value) {
		                            var unitType,
		                                numericValue;
		
		                            numericValue = (value || "0")
		                                .toString()
		                                .toLowerCase()
		                                /* Match the unit type at the end of the value. */
		                                .replace(/[%A-z]+$/, function(match) {
		                                    /* Grab the unit type. */
		                                    unitType = match;
		
		                                    /* Strip the unit type off of value. */
		                                    return "";
		                                });
		
		                            /* If no unit type was supplied, assign one that is appropriate for this property (e.g. "deg" for rotateZ or "px" for width). */
		                            if (!unitType) {
		                                unitType = CSS.Values.getUnitType(property);
		                            }
		
		                            return [ numericValue, unitType ];
		                        }
		
		                        /* Separate startValue. */
		                        separatedValue = separateValue(property, startValue);
		                        startValue = separatedValue[0];
		                        startValueUnitType = separatedValue[1];
		
		                        /* Separate endValue, and extract a value operator (e.g. "+=", "-=") if one exists. */
		                        separatedValue = separateValue(property, endValue);
		                        endValue = separatedValue[0].replace(/^([+-\/*])=/, function(match, subMatch) {
		                            operator = subMatch;
		
		                            /* Strip the operator off of the value. */
		                            return "";
		                        });
		                        endValueUnitType = separatedValue[1];
		
		                        /* Parse float values from endValue and startValue. Default to 0 if NaN is returned. */
		                        startValue = parseFloat(startValue) || 0;
		                        endValue = parseFloat(endValue) || 0;
		
		                        /***************************************
		                           Property-Specific Value Conversion
		                        ***************************************/
		
		                        /* Custom support for properties that don't actually accept the % unit type, but where pollyfilling is trivial and relatively foolproof. */
		                        if (endValueUnitType === "%") {
		                            /* A %-value fontSize/lineHeight is relative to the parent's fontSize (as opposed to the parent's dimensions),
		                               which is identical to the em unit's behavior, so we piggyback off of that. */
		                            if (/^(fontSize|lineHeight)$/.test(property)) {
		                                /* Convert % into an em decimal value. */
		                                endValue = endValue / 100;
		                                endValueUnitType = "em";
		                            /* For scaleX and scaleY, convert the value into its decimal format and strip off the unit type. */
		                            } else if (/^scale/.test(property)) {
		                                endValue = endValue / 100;
		                                endValueUnitType = "";
		                            /* For RGB components, take the defined percentage of 255 and strip off the unit type. */
		                            } else if (/(Red|Green|Blue)$/i.test(property)) {
		                                endValue = (endValue / 100) * 255;
		                                endValueUnitType = "";
		                            }
		                        }
		
		                        /***************************
		                           Unit Ratio Calculation
		                        ***************************/
		
		                        /* When queried, the browser returns (most) CSS property values in pixels. Therefore, if an endValue with a unit type of
		                           %, em, or rem is animated toward, startValue must be converted from pixels into the same unit type as endValue in order
		                           for value manipulation logic (increment/decrement) to proceed. Further, if the startValue was forcefed or transferred
		                           from a previous call, startValue may also not be in pixels. Unit conversion logic therefore consists of two steps:
		                           1) Calculating the ratio of %/em/rem/vh/vw relative to pixels
		                           2) Converting startValue into the same unit of measurement as endValue based on these ratios. */
		                        /* Unit conversion ratios are calculated by inserting a sibling node next to the target node, copying over its position property,
		                           setting values with the target unit type then comparing the returned pixel value. */
		                        /* Note: Even if only one of these unit types is being animated, all unit ratios are calculated at once since the overhead
		                           of batching the SETs and GETs together upfront outweights the potential overhead
		                           of layout thrashing caused by re-querying for uncalculated ratios for subsequently-processed properties. */
		                        /* Todo: Shift this logic into the calls' first tick instance so that it's synced with RAF. */
		                        function calculateUnitRatios () {
		
		                            /************************
		                                Same Ratio Checks
		                            ************************/
		
		                            /* The properties below are used to determine whether the element differs sufficiently from this call's
		                               previously iterated element to also differ in its unit conversion ratios. If the properties match up with those
		                               of the prior element, the prior element's conversion ratios are used. Like most optimizations in Velocity,
		                               this is done to minimize DOM querying. */
		                            var sameRatioIndicators = {
		                                    myParent: element.parentNode || document.body, /* GET */
		                                    position: CSS.getPropertyValue(element, "position"), /* GET */
		                                    fontSize: CSS.getPropertyValue(element, "fontSize") /* GET */
		                                },
		                                /* Determine if the same % ratio can be used. % is based on the element's position value and its parent's width and height dimensions. */
		                                samePercentRatio = ((sameRatioIndicators.position === callUnitConversionData.lastPosition) && (sameRatioIndicators.myParent === callUnitConversionData.lastParent)),
		                                /* Determine if the same em ratio can be used. em is relative to the element's fontSize. */
		                                sameEmRatio = (sameRatioIndicators.fontSize === callUnitConversionData.lastFontSize);
		
		                            /* Store these ratio indicators call-wide for the next element to compare against. */
		                            callUnitConversionData.lastParent = sameRatioIndicators.myParent;
		                            callUnitConversionData.lastPosition = sameRatioIndicators.position;
		                            callUnitConversionData.lastFontSize = sameRatioIndicators.fontSize;
		
		                            /***************************
		                               Element-Specific Units
		                            ***************************/
		
		                            /* Note: IE8 rounds to the nearest pixel when returning CSS values, thus we perform conversions using a measurement
		                               of 100 (instead of 1) to give our ratios a precision of at least 2 decimal values. */
		                            var measurement = 100,
		                                unitRatios = {};
		
		                            if (!sameEmRatio || !samePercentRatio) {
		                                var dummy = Data(element).isSVG ? document.createElementNS("http://www.w3.org/2000/svg", "rect") : document.createElement("div");
		
		                                Velocity.init(dummy);
		                                sameRatioIndicators.myParent.appendChild(dummy);
		
		                                /* To accurately and consistently calculate conversion ratios, the element's cascaded overflow and box-sizing are stripped.
		                                   Similarly, since width/height can be artificially constrained by their min-/max- equivalents, these are controlled for as well. */
		                                /* Note: Overflow must be also be controlled for per-axis since the overflow property overwrites its per-axis values. */
		                                $.each([ "overflow", "overflowX", "overflowY" ], function(i, property) {
		                                    Velocity.CSS.setPropertyValue(dummy, property, "hidden");
		                                });
		                                Velocity.CSS.setPropertyValue(dummy, "position", sameRatioIndicators.position);
		                                Velocity.CSS.setPropertyValue(dummy, "fontSize", sameRatioIndicators.fontSize);
		                                Velocity.CSS.setPropertyValue(dummy, "boxSizing", "content-box");
		
		                                /* width and height act as our proxy properties for measuring the horizontal and vertical % ratios. */
		                                $.each([ "minWidth", "maxWidth", "width", "minHeight", "maxHeight", "height" ], function(i, property) {
		                                    Velocity.CSS.setPropertyValue(dummy, property, measurement + "%");
		                                });
		                                /* paddingLeft arbitrarily acts as our proxy property for the em ratio. */
		                                Velocity.CSS.setPropertyValue(dummy, "paddingLeft", measurement + "em");
		
		                                /* Divide the returned value by the measurement to get the ratio between 1% and 1px. Default to 1 since working with 0 can produce Infinite. */
		                                unitRatios.percentToPxWidth = callUnitConversionData.lastPercentToPxWidth = (parseFloat(CSS.getPropertyValue(dummy, "width", null, true)) || 1) / measurement; /* GET */
		                                unitRatios.percentToPxHeight = callUnitConversionData.lastPercentToPxHeight = (parseFloat(CSS.getPropertyValue(dummy, "height", null, true)) || 1) / measurement; /* GET */
		                                unitRatios.emToPx = callUnitConversionData.lastEmToPx = (parseFloat(CSS.getPropertyValue(dummy, "paddingLeft")) || 1) / measurement; /* GET */
		
		                                sameRatioIndicators.myParent.removeChild(dummy);
		                            } else {
		                                unitRatios.emToPx = callUnitConversionData.lastEmToPx;
		                                unitRatios.percentToPxWidth = callUnitConversionData.lastPercentToPxWidth;
		                                unitRatios.percentToPxHeight = callUnitConversionData.lastPercentToPxHeight;
		                            }
		
		                            /***************************
		                               Element-Agnostic Units
		                            ***************************/
		
		                            /* Whereas % and em ratios are determined on a per-element basis, the rem unit only needs to be checked
		                               once per call since it's exclusively dependant upon document.body's fontSize. If this is the first time
		                               that calculateUnitRatios() is being run during this call, remToPx will still be set to its default value of null,
		                               so we calculate it now. */
		                            if (callUnitConversionData.remToPx === null) {
		                                /* Default to browsers' default fontSize of 16px in the case of 0. */
		                                callUnitConversionData.remToPx = parseFloat(CSS.getPropertyValue(document.body, "fontSize")) || 16; /* GET */
		                            }
		
		                            /* Similarly, viewport units are %-relative to the window's inner dimensions. */
		                            if (callUnitConversionData.vwToPx === null) {
		                                callUnitConversionData.vwToPx = parseFloat(window.innerWidth) / 100; /* GET */
		                                callUnitConversionData.vhToPx = parseFloat(window.innerHeight) / 100; /* GET */
		                            }
		
		                            unitRatios.remToPx = callUnitConversionData.remToPx;
		                            unitRatios.vwToPx = callUnitConversionData.vwToPx;
		                            unitRatios.vhToPx = callUnitConversionData.vhToPx;
		
		                            if (Velocity.debug >= 1) console.log("Unit ratios: " + JSON.stringify(unitRatios), element);
		
		                            return unitRatios;
		                        }
		
		                        /********************
		                           Unit Conversion
		                        ********************/
		
		                        /* The * and / operators, which are not passed in with an associated unit, inherently use startValue's unit. Skip value and unit conversion. */
		                        if (/[\/*]/.test(operator)) {
		                            endValueUnitType = startValueUnitType;
		                        /* If startValue and endValue differ in unit type, convert startValue into the same unit type as endValue so that if endValueUnitType
		                           is a relative unit (%, em, rem), the values set during tweening will continue to be accurately relative even if the metrics they depend
		                           on are dynamically changing during the course of the animation. Conversely, if we always normalized into px and used px for setting values, the px ratio
		                           would become stale if the original unit being animated toward was relative and the underlying metrics change during the animation. */
		                        /* Since 0 is 0 in any unit type, no conversion is necessary when startValue is 0 -- we just start at 0 with endValueUnitType. */
		                        } else if ((startValueUnitType !== endValueUnitType) && startValue !== 0) {
		                            /* Unit conversion is also skipped when endValue is 0, but *startValueUnitType* must be used for tween values to remain accurate. */
		                            /* Note: Skipping unit conversion here means that if endValueUnitType was originally a relative unit, the animation won't relatively
		                               match the underlying metrics if they change, but this is acceptable since we're animating toward invisibility instead of toward visibility,
		                               which remains past the point of the animation's completion. */
		                            if (endValue === 0) {
		                                endValueUnitType = startValueUnitType;
		                            } else {
		                                /* By this point, we cannot avoid unit conversion (it's undesirable since it causes layout thrashing).
		                                   If we haven't already, we trigger calculateUnitRatios(), which runs once per element per call. */
		                                elementUnitConversionData = elementUnitConversionData || calculateUnitRatios();
		
		                                /* The following RegEx matches CSS properties that have their % values measured relative to the x-axis. */
		                                /* Note: W3C spec mandates that all of margin and padding's properties (even top and bottom) are %-relative to the *width* of the parent element. */
		                                var axis = (/margin|padding|left|right|width|text|word|letter/i.test(property) || /X$/.test(property) || property === "x") ? "x" : "y";
		
		                                /* In order to avoid generating n^2 bespoke conversion functions, unit conversion is a two-step process:
		                                   1) Convert startValue into pixels. 2) Convert this new pixel value into endValue's unit type. */
		                                switch (startValueUnitType) {
		                                    case "%":
		                                        /* Note: translateX and translateY are the only properties that are %-relative to an element's own dimensions -- not its parent's dimensions.
		                                           Velocity does not include a special conversion process to account for this behavior. Therefore, animating translateX/Y from a % value
		                                           to a non-% value will produce an incorrect start value. Fortunately, this sort of cross-unit conversion is rarely done by users in practice. */
		                                        startValue *= (axis === "x" ? elementUnitConversionData.percentToPxWidth : elementUnitConversionData.percentToPxHeight);
		                                        break;
		
		                                    case "px":
		                                        /* px acts as our midpoint in the unit conversion process; do nothing. */
		                                        break;
		
		                                    default:
		                                        startValue *= elementUnitConversionData[startValueUnitType + "ToPx"];
		                                }
		
		                                /* Invert the px ratios to convert into to the target unit. */
		                                switch (endValueUnitType) {
		                                    case "%":
		                                        startValue *= 1 / (axis === "x" ? elementUnitConversionData.percentToPxWidth : elementUnitConversionData.percentToPxHeight);
		                                        break;
		
		                                    case "px":
		                                        /* startValue is already in px, do nothing; we're done. */
		                                        break;
		
		                                    default:
		                                        startValue *= 1 / elementUnitConversionData[endValueUnitType + "ToPx"];
		                                }
		                            }
		                        }
		
		                        /*********************
		                           Relative Values
		                        *********************/
		
		                        /* Operator logic must be performed last since it requires unit-normalized start and end values. */
		                        /* Note: Relative *percent values* do not behave how most people think; while one would expect "+=50%"
		                           to increase the property 1.5x its current value, it in fact increases the percent units in absolute terms:
		                           50 points is added on top of the current % value. */
		                        switch (operator) {
		                            case "+":
		                                endValue = startValue + endValue;
		                                break;
		
		                            case "-":
		                                endValue = startValue - endValue;
		                                break;
		
		                            case "*":
		                                endValue = startValue * endValue;
		                                break;
		
		                            case "/":
		                                endValue = startValue / endValue;
		                                break;
		                        }
		
		                        /**************************
		                           tweensContainer Push
		                        **************************/
		
		                        /* Construct the per-property tween object, and push it to the element's tweensContainer. */
		                        tweensContainer[property] = {
		                            rootPropertyValue: rootPropertyValue,
		                            startValue: startValue,
		                            currentValue: startValue,
		                            endValue: endValue,
		                            unitType: endValueUnitType,
		                            easing: easing
		                        };
		
		                        if (Velocity.debug) console.log("tweensContainer (" + property + "): " + JSON.stringify(tweensContainer[property]), element);
		                    }
		
		                    /* Along with its property data, store a reference to the element itself onto tweensContainer. */
		                    tweensContainer.element = element;
		                }
		
		                /*****************
		                    Call Push
		                *****************/
		
		                /* Note: tweensContainer can be empty if all of the properties in this call's property map were skipped due to not
		                   being supported by the browser. The element property is used for checking that the tweensContainer has been appended to. */
		                if (tweensContainer.element) {
		                    /* Apply the "velocity-animating" indicator class. */
		                    CSS.Values.addClass(element, "velocity-animating");
		
		                    /* The call array houses the tweensContainers for each element being animated in the current call. */
		                    call.push(tweensContainer);
		
		                    /* Store the tweensContainer and options if we're working on the default effects queue, so that they can be used by the reverse command. */
		                    if (opts.queue === "") {
		                        Data(element).tweensContainer = tweensContainer;
		                        Data(element).opts = opts;
		                    }
		
		                    /* Switch on the element's animating flag. */
		                    Data(element).isAnimating = true;
		
		                    /* Once the final element in this call's element set has been processed, push the call array onto
		                       Velocity.State.calls for the animation tick to immediately begin processing. */
		                    if (elementsIndex === elementsLength - 1) {
		                        /* Add the current call plus its associated metadata (the element set and the call's options) onto the global call container.
		                           Anything on this call container is subjected to tick() processing. */
		                        Velocity.State.calls.push([ call, elements, opts, null, promiseData.resolver ]);
		
		                        /* If the animation tick isn't running, start it. (Velocity shuts it off when there are no active calls to process.) */
		                        if (Velocity.State.isTicking === false) {
		                            Velocity.State.isTicking = true;
		
		                            /* Start the tick loop. */
		                            tick();
		                        }
		                    } else {
		                        elementsIndex++;
		                    }
		                }
		            }
		
		            /* When the queue option is set to false, the call skips the element's queue and fires immediately. */
		            if (opts.queue === false) {
		                /* Since this buildQueue call doesn't respect the element's existing queue (which is where a delay option would have been appended),
		                   we manually inject the delay property here with an explicit setTimeout. */
		                if (opts.delay) {
		                    setTimeout(buildQueue, opts.delay);
		                } else {
		                    buildQueue();
		                }
		            /* Otherwise, the call undergoes element queueing as normal. */
		            /* Note: To interoperate with jQuery, Velocity uses jQuery's own $.queue() stack for queuing logic. */
		            } else {
		                $.queue(element, opts.queue, function(next, clearQueue) {
		                    /* If the clearQueue flag was passed in by the stop command, resolve this call's promise. (Promises can only be resolved once,
		                       so it's fine if this is repeatedly triggered for each element in the associated call.) */
		                    if (clearQueue === true) {
		                        if (promiseData.promise) {
		                            promiseData.resolver(elements);
		                        }
		
		                        /* Do not continue with animation queueing. */
		                        return true;
		                    }
		
		                    /* This flag indicates to the upcoming completeCall() function that this queue entry was initiated by Velocity.
		                       See completeCall() for further details. */
		                    Velocity.velocityQueueEntryFlag = true;
		
		                    buildQueue(next);
		                });
		            }
		
		            /*********************
		                Auto-Dequeuing
		            *********************/
		
		            /* As per jQuery's $.queue() behavior, to fire the first non-custom-queue entry on an element, the element
		               must be dequeued if its queue stack consists *solely* of the current call. (This can be determined by checking
		               for the "inprogress" item that jQuery prepends to active queue stack arrays.) Regardless, whenever the element's
		               queue is further appended with additional items -- including $.delay()'s or even $.animate() calls, the queue's
		               first entry is automatically fired. This behavior contrasts that of custom queues, which never auto-fire. */
		            /* Note: When an element set is being subjected to a non-parallel Velocity call, the animation will not begin until
		               each one of the elements in the set has reached the end of its individually pre-existing queue chain. */
		            /* Note: Unfortunately, most people don't fully grasp jQuery's powerful, yet quirky, $.queue() function.
		               Lean more here: http://stackoverflow.com/questions/1058158/can-somebody-explain-jquery-queue-to-me */
		            if ((opts.queue === "" || opts.queue === "fx") && $.queue(element)[0] !== "inprogress") {
		                $.dequeue(element);
		            }
		        }
		
		        /**************************
		           Element Set Iteration
		        **************************/
		
		        /* If the "nodeType" property exists on the elements variable, we're animating a single element.
		           Place it in an array so that $.each() can iterate over it. */
		        $.each(elements, function(i, element) {
		            /* Ensure each element in a set has a nodeType (is a real element) to avoid throwing errors. */
		            if (Type.isNode(element)) {
		                processElement.call(element);
		            }
		        });
		
		        /******************
		           Option: Loop
		        ******************/
		
		        /* The loop option accepts an integer indicating how many times the element should loop between the values in the
		           current call's properties map and the element's property values prior to this call. */
		        /* Note: The loop option's logic is performed here -- after element processing -- because the current call needs
		           to undergo its queue insertion prior to the loop option generating its series of constituent "reverse" calls,
		           which chain after the current call. Two reverse calls (two "alternations") constitute one loop. */
		        var opts = $.extend({}, Velocity.defaults, options),
		            reverseCallsCount;
		
		        opts.loop = parseInt(opts.loop);
		        reverseCallsCount = (opts.loop * 2) - 1;
		
		        if (opts.loop) {
		            /* Double the loop count to convert it into its appropriate number of "reverse" calls.
		               Subtract 1 from the resulting value since the current call is included in the total alternation count. */
		            for (var x = 0; x < reverseCallsCount; x++) {
		                /* Since the logic for the reverse action occurs inside Queueing and therefore this call's options object
		                   isn't parsed until then as well, the current call's delay option must be explicitly passed into the reverse
		                   call so that the delay logic that occurs inside *Pre-Queueing* can process it. */
		                var reverseOptions = {
		                    delay: opts.delay,
		                    progress: opts.progress
		                };
		
		                /* If a complete callback was passed into this call, transfer it to the loop redirect's final "reverse" call
		                   so that it's triggered when the entire redirect is complete (and not when the very first animation is complete). */
		                if (x === reverseCallsCount - 1) {
		                    reverseOptions.display = opts.display;
		                    reverseOptions.visibility = opts.visibility;
		                    reverseOptions.complete = opts.complete;
		                }
		
		                animate(elements, "reverse", reverseOptions);
		            }
		        }
		
		        /***************
		            Chaining
		        ***************/
		
		        /* Return the elements back to the call chain, with wrapped elements taking precedence in case Velocity was called via the $.fn. extension. */
		        return getChain();
		    };
		
		    /* Turn Velocity into the animation function, extended with the pre-existing Velocity object. */
		    Velocity = $.extend(animate, Velocity);
		    /* For legacy support, also expose the literal animate method. */
		    Velocity.animate = animate;
		
		    /**************
		        Timing
		    **************/
		
		    /* Ticker function. */
		    var ticker = window.requestAnimationFrame || rAFShim;
		
		    /* Inactive browser tabs pause rAF, which results in all active animations immediately sprinting to their completion states when the tab refocuses.
		       To get around this, we dynamically switch rAF to setTimeout (which the browser *doesn't* pause) when the tab loses focus. We skip this for mobile
		       devices to avoid wasting battery power on inactive tabs. */
		    /* Note: Tab focus detection doesn't work on older versions of IE, but that's okay since they don't support rAF to begin with. */
		    if (!Velocity.State.isMobile && document.hidden !== undefined) {
		        document.addEventListener("visibilitychange", function() {
		            /* Reassign the rAF function (which the global tick() function uses) based on the tab's focus state. */
		            if (document.hidden) {
		                ticker = function(callback) {
		                    /* The tick function needs a truthy first argument in order to pass its internal timestamp check. */
		                    return setTimeout(function() { callback(true) }, 16);
		                };
		
		                /* The rAF loop has been paused by the browser, so we manually restart the tick. */
		                tick();
		            } else {
		                ticker = window.requestAnimationFrame || rAFShim;
		            }
		        });
		    }
		
		    /************
		        Tick
		    ************/
		
		    /* Note: All calls to Velocity are pushed to the Velocity.State.calls array, which is fully iterated through upon each tick. */
		    function tick (timestamp) {
		        /* An empty timestamp argument indicates that this is the first tick occurence since ticking was turned on.
		           We leverage this metadata to fully ignore the first tick pass since RAF's initial pass is fired whenever
		           the browser's next tick sync time occurs, which results in the first elements subjected to Velocity
		           calls being animated out of sync with any elements animated immediately thereafter. In short, we ignore
		           the first RAF tick pass so that elements being immediately consecutively animated -- instead of simultaneously animated
		           by the same Velocity call -- are properly batched into the same initial RAF tick and consequently remain in sync thereafter. */
		        if (timestamp) {
		            /* We ignore RAF's high resolution timestamp since it can be significantly offset when the browser is
		               under high stress; we opt for choppiness over allowing the browser to drop huge chunks of frames. */
		            var timeCurrent = (new Date).getTime();
		
		            /********************
		               Call Iteration
		            ********************/
		
		            var callsLength = Velocity.State.calls.length;
		
		            /* To speed up iterating over this array, it is compacted (falsey items -- calls that have completed -- are removed)
		               when its length has ballooned to a point that can impact tick performance. This only becomes necessary when animation
		               has been continuous with many elements over a long period of time; whenever all active calls are completed, completeCall() clears Velocity.State.calls. */
		            if (callsLength > 10000) {
		                Velocity.State.calls = compactSparseArray(Velocity.State.calls);
		            }
		
		            /* Iterate through each active call. */
		            for (var i = 0; i < callsLength; i++) {
		                /* When a Velocity call is completed, its Velocity.State.calls entry is set to false. Continue on to the next call. */
		                if (!Velocity.State.calls[i]) {
		                    continue;
		                }
		
		                /************************
		                   Call-Wide Variables
		                ************************/
		
		                var callContainer = Velocity.State.calls[i],
		                    call = callContainer[0],
		                    opts = callContainer[2],
		                    timeStart = callContainer[3],
		                    firstTick = !!timeStart,
		                    tweenDummyValue = null;
		
		                /* If timeStart is undefined, then this is the first time that this call has been processed by tick().
		                   We assign timeStart now so that its value is as close to the real animation start time as possible.
		                   (Conversely, had timeStart been defined when this call was added to Velocity.State.calls, the delay
		                   between that time and now would cause the first few frames of the tween to be skipped since
		                   percentComplete is calculated relative to timeStart.) */
		                /* Further, subtract 16ms (the approximate resolution of RAF) from the current time value so that the
		                   first tick iteration isn't wasted by animating at 0% tween completion, which would produce the
		                   same style value as the element's current value. */
		                if (!timeStart) {
		                    timeStart = Velocity.State.calls[i][3] = timeCurrent - 16;
		                }
		
		                /* The tween's completion percentage is relative to the tween's start time, not the tween's start value
		                   (which would result in unpredictable tween durations since JavaScript's timers are not particularly accurate).
		                   Accordingly, we ensure that percentComplete does not exceed 1. */
		                var percentComplete = Math.min((timeCurrent - timeStart) / opts.duration, 1);
		
		                /**********************
		                   Element Iteration
		                **********************/
		
		                /* For every call, iterate through each of the elements in its set. */
		                for (var j = 0, callLength = call.length; j < callLength; j++) {
		                    var tweensContainer = call[j],
		                        element = tweensContainer.element;
		
		                    /* Check to see if this element has been deleted midway through the animation by checking for the
		                       continued existence of its data cache. If it's gone, skip animating this element. */
		                    if (!Data(element)) {
		                        continue;
		                    }
		
		                    var transformPropertyExists = false;
		
		                    /**********************************
		                       Display & Visibility Toggling
		                    **********************************/
		
		                    /* If the display option is set to non-"none", set it upfront so that the element can become visible before tweening begins.
		                       (Otherwise, display's "none" value is set in completeCall() once the animation has completed.) */
		                    if (opts.display !== undefined && opts.display !== null && opts.display !== "none") {
		                        if (opts.display === "flex") {
		                            var flexValues = [ "-webkit-box", "-moz-box", "-ms-flexbox", "-webkit-flex" ];
		
		                            $.each(flexValues, function(i, flexValue) {
		                                CSS.setPropertyValue(element, "display", flexValue);
		                            });
		                        }
		
		                        CSS.setPropertyValue(element, "display", opts.display);
		                    }
		
		                    /* Same goes with the visibility option, but its "none" equivalent is "hidden". */
		                    if (opts.visibility !== undefined && opts.visibility !== "hidden") {
		                        CSS.setPropertyValue(element, "visibility", opts.visibility);
		                    }
		
		                    /************************
		                       Property Iteration
		                    ************************/
		
		                    /* For every element, iterate through each property. */
		                    for (var property in tweensContainer) {
		                        /* Note: In addition to property tween data, tweensContainer contains a reference to its associated element. */
		                        if (property !== "element") {
		                            var tween = tweensContainer[property],
		                                currentValue,
		                                /* Easing can either be a pre-genereated function or a string that references a pre-registered easing
		                                   on the Velocity.Easings object. In either case, return the appropriate easing *function*. */
		                                easing = Type.isString(tween.easing) ? Velocity.Easings[tween.easing] : tween.easing;
		
		                            /******************************
		                               Current Value Calculation
		                            ******************************/
		
		                            /* If this is the last tick pass (if we've reached 100% completion for this tween),
		                               ensure that currentValue is explicitly set to its target endValue so that it's not subjected to any rounding. */
		                            if (percentComplete === 1) {
		                                currentValue = tween.endValue;
		                            /* Otherwise, calculate currentValue based on the current delta from startValue. */
		                            } else {
		                                var tweenDelta = tween.endValue - tween.startValue;
		                                currentValue = tween.startValue + (tweenDelta * easing(percentComplete, opts, tweenDelta));
		
		                                /* If no value change is occurring, don't proceed with DOM updating. */
		                                if (!firstTick && (currentValue === tween.currentValue)) {
		                                    continue;
		                                }
		                            }
		
		                            tween.currentValue = currentValue;
		
		                            /* If we're tweening a fake 'tween' property in order to log transition values, update the one-per-call variable so that
		                               it can be passed into the progress callback. */
		                            if (property === "tween") {
		                                tweenDummyValue = currentValue;
		                            } else {
		                                /******************
		                                   Hooks: Part I
		                                ******************/
		
		                                /* For hooked properties, the newly-updated rootPropertyValueCache is cached onto the element so that it can be used
		                                   for subsequent hooks in this call that are associated with the same root property. If we didn't cache the updated
		                                   rootPropertyValue, each subsequent update to the root property in this tick pass would reset the previous hook's
		                                   updates to rootPropertyValue prior to injection. A nice performance byproduct of rootPropertyValue caching is that
		                                   subsequently chained animations using the same hookRoot but a different hook can use this cached rootPropertyValue. */
		                                if (CSS.Hooks.registered[property]) {
		                                    var hookRoot = CSS.Hooks.getRoot(property),
		                                        rootPropertyValueCache = Data(element).rootPropertyValueCache[hookRoot];
		
		                                    if (rootPropertyValueCache) {
		                                        tween.rootPropertyValue = rootPropertyValueCache;
		                                    }
		                                }
		
		                                /*****************
		                                    DOM Update
		                                *****************/
		
		                                /* setPropertyValue() returns an array of the property name and property value post any normalization that may have been performed. */
		                                /* Note: To solve an IE<=8 positioning bug, the unit type is dropped when setting a property value of 0. */
		                                var adjustedSetData = CSS.setPropertyValue(element, /* SET */
		                                                                           property,
		                                                                           tween.currentValue + (parseFloat(currentValue) === 0 ? "" : tween.unitType),
		                                                                           tween.rootPropertyValue,
		                                                                           tween.scrollData);
		
		                                /*******************
		                                   Hooks: Part II
		                                *******************/
		
		                                /* Now that we have the hook's updated rootPropertyValue (the post-processed value provided by adjustedSetData), cache it onto the element. */
		                                if (CSS.Hooks.registered[property]) {
		                                    /* Since adjustedSetData contains normalized data ready for DOM updating, the rootPropertyValue needs to be re-extracted from its normalized form. ?? */
		                                    if (CSS.Normalizations.registered[hookRoot]) {
		                                        Data(element).rootPropertyValueCache[hookRoot] = CSS.Normalizations.registered[hookRoot]("extract", null, adjustedSetData[1]);
		                                    } else {
		                                        Data(element).rootPropertyValueCache[hookRoot] = adjustedSetData[1];
		                                    }
		                                }
		
		                                /***************
		                                   Transforms
		                                ***************/
		
		                                /* Flag whether a transform property is being animated so that flushTransformCache() can be triggered once this tick pass is complete. */
		                                if (adjustedSetData[0] === "transform") {
		                                    transformPropertyExists = true;
		                                }
		
		                            }
		                        }
		                    }
		
		                    /****************
		                        mobileHA
		                    ****************/
		
		                    /* If mobileHA is enabled, set the translate3d transform to null to force hardware acceleration.
		                       It's safe to override this property since Velocity doesn't actually support its animation (hooks are used in its place). */
		                    if (opts.mobileHA) {
		                        /* Don't set the null transform hack if we've already done so. */
		                        if (Data(element).transformCache.translate3d === undefined) {
		                            /* All entries on the transformCache object are later concatenated into a single transform string via flushTransformCache(). */
		                            Data(element).transformCache.translate3d = "(0px, 0px, 0px)";
		
		                            transformPropertyExists = true;
		                        }
		                    }
		
		                    if (transformPropertyExists) {
		                        CSS.flushTransformCache(element);
		                    }
		                }
		
		                /* The non-"none" display value is only applied to an element once -- when its associated call is first ticked through.
		                   Accordingly, it's set to false so that it isn't re-processed by this call in the next tick. */
		                if (opts.display !== undefined && opts.display !== "none") {
		                    Velocity.State.calls[i][2].display = false;
		                }
		                if (opts.visibility !== undefined && opts.visibility !== "hidden") {
		                    Velocity.State.calls[i][2].visibility = false;
		                }
		
		                /* Pass the elements and the timing data (percentComplete, msRemaining, timeStart, tweenDummyValue) into the progress callback. */
		                if (opts.progress) {
		                    opts.progress.call(callContainer[1],
		                                       callContainer[1],
		                                       percentComplete,
		                                       Math.max(0, (timeStart + opts.duration) - timeCurrent),
		                                       timeStart,
		                                       tweenDummyValue);
		                }
		
		                /* If this call has finished tweening, pass its index to completeCall() to handle call cleanup. */
		                if (percentComplete === 1) {
		                    completeCall(i);
		                }
		            }
		        }
		
		        /* Note: completeCall() sets the isTicking flag to false when the last call on Velocity.State.calls has completed. */
		        if (Velocity.State.isTicking) {
		            ticker(tick);
		        }
		    }
		
		    /**********************
		        Call Completion
		    **********************/
		
		    /* Note: Unlike tick(), which processes all active calls at once, call completion is handled on a per-call basis. */
		    function completeCall (callIndex, isStopped) {
		        /* Ensure the call exists. */
		        if (!Velocity.State.calls[callIndex]) {
		            return false;
		        }
		
		        /* Pull the metadata from the call. */
		        var call = Velocity.State.calls[callIndex][0],
		            elements = Velocity.State.calls[callIndex][1],
		            opts = Velocity.State.calls[callIndex][2],
		            resolver = Velocity.State.calls[callIndex][4];
		
		        var remainingCallsExist = false;
		
		        /*************************
		           Element Finalization
		        *************************/
		
		        for (var i = 0, callLength = call.length; i < callLength; i++) {
		            var element = call[i].element;
		
		            /* If the user set display to "none" (intending to hide the element), set it now that the animation has completed. */
		            /* Note: display:none isn't set when calls are manually stopped (via Velocity("stop"). */
		            /* Note: Display gets ignored with "reverse" calls and infinite loops, since this behavior would be undesirable. */
		            if (!isStopped && !opts.loop) {
		                if (opts.display === "none") {
		                    CSS.setPropertyValue(element, "display", opts.display);
		                }
		
		                if (opts.visibility === "hidden") {
		                    CSS.setPropertyValue(element, "visibility", opts.visibility);
		                }
		            }
		
		            /* If the element's queue is empty (if only the "inprogress" item is left at position 0) or if its queue is about to run
		               a non-Velocity-initiated entry, turn off the isAnimating flag. A non-Velocity-initiatied queue entry's logic might alter
		               an element's CSS values and thereby cause Velocity's cached value data to go stale. To detect if a queue entry was initiated by Velocity,
		               we check for the existence of our special Velocity.queueEntryFlag declaration, which minifiers won't rename since the flag
		               is assigned to jQuery's global $ object and thus exists out of Velocity's own scope. */
		            if (opts.loop !== true && ($.queue(element)[1] === undefined || !/\.velocityQueueEntryFlag/i.test($.queue(element)[1]))) {
		                /* The element may have been deleted. Ensure that its data cache still exists before acting on it. */
		                if (Data(element)) {
		                    Data(element).isAnimating = false;
		                    /* Clear the element's rootPropertyValueCache, which will become stale. */
		                    Data(element).rootPropertyValueCache = {};
		
		                    var transformHAPropertyExists = false;
		                    /* If any 3D transform subproperty is at its default value (regardless of unit type), remove it. */
		                    $.each(CSS.Lists.transforms3D, function(i, transformName) {
		                        var defaultValue = /^scale/.test(transformName) ? 1 : 0,
		                            currentValue = Data(element).transformCache[transformName];
		
		                        if (Data(element).transformCache[transformName] !== undefined && new RegExp("^\\(" + defaultValue + "[^.]").test(currentValue)) {
		                            transformHAPropertyExists = true;
		
		                            delete Data(element).transformCache[transformName];
		                        }
		                    });
		
		                    /* Mobile devices have hardware acceleration removed at the end of the animation in order to avoid hogging the GPU's memory. */
		                    if (opts.mobileHA) {
		                        transformHAPropertyExists = true;
		                        delete Data(element).transformCache.translate3d;
		                    }
		
		                    /* Flush the subproperty removals to the DOM. */
		                    if (transformHAPropertyExists) {
		                        CSS.flushTransformCache(element);
		                    }
		
		                    /* Remove the "velocity-animating" indicator class. */
		                    CSS.Values.removeClass(element, "velocity-animating");
		                }
		            }
		
		            /*********************
		               Option: Complete
		            *********************/
		
		            /* Complete is fired once per call (not once per element) and is passed the full raw DOM element set as both its context and its first argument. */
		            /* Note: Callbacks aren't fired when calls are manually stopped (via Velocity("stop"). */
		            if (!isStopped && opts.complete && !opts.loop && (i === callLength - 1)) {
		                /* We throw callbacks in a setTimeout so that thrown errors don't halt the execution of Velocity itself. */
		                try {
		                    opts.complete.call(elements, elements);
		                } catch (error) {
		                    setTimeout(function() { throw error; }, 1);
		                }
		            }
		
		            /**********************
		               Promise Resolving
		            **********************/
		
		            /* Note: Infinite loops don't return promises. */
		            if (resolver && opts.loop !== true) {
		                resolver(elements);
		            }
		
		            /****************************
		               Option: Loop (Infinite)
		            ****************************/
		
		            if (Data(element) && opts.loop === true && !isStopped) {
		                /* If a rotateX/Y/Z property is being animated to 360 deg with loop:true, swap tween start/end values to enable
		                   continuous iterative rotation looping. (Otherise, the element would just rotate back and forth.) */
		                $.each(Data(element).tweensContainer, function(propertyName, tweenContainer) {
		                    if (/^rotate/.test(propertyName) && parseFloat(tweenContainer.endValue) === 360) {
		                        tweenContainer.endValue = 0;
		                        tweenContainer.startValue = 360;
		                    }
		
		                    if (/^backgroundPosition/.test(propertyName) && parseFloat(tweenContainer.endValue) === 100 && tweenContainer.unitType === "%") {
		                        tweenContainer.endValue = 0;
		                        tweenContainer.startValue = 100;
		                    }
		                });
		
		                Velocity(element, "reverse", { loop: true, delay: opts.delay });
		            }
		
		            /***************
		               Dequeueing
		            ***************/
		
		            /* Fire the next call in the queue so long as this call's queue wasn't set to false (to trigger a parallel animation),
		               which would have already caused the next call to fire. Note: Even if the end of the animation queue has been reached,
		               $.dequeue() must still be called in order to completely clear jQuery's animation queue. */
		            if (opts.queue !== false) {
		                $.dequeue(element, opts.queue);
		            }
		        }
		
		        /************************
		           Calls Array Cleanup
		        ************************/
		
		        /* Since this call is complete, set it to false so that the rAF tick skips it. This array is later compacted via compactSparseArray().
		          (For performance reasons, the call is set to false instead of being deleted from the array: http://www.html5rocks.com/en/tutorials/speed/v8/) */
		        Velocity.State.calls[callIndex] = false;
		
		        /* Iterate through the calls array to determine if this was the final in-progress animation.
		           If so, set a flag to end ticking and clear the calls array. */
		        for (var j = 0, callsLength = Velocity.State.calls.length; j < callsLength; j++) {
		            if (Velocity.State.calls[j] !== false) {
		                remainingCallsExist = true;
		
		                break;
		            }
		        }
		
		        if (remainingCallsExist === false) {
		            /* tick() will detect this flag upon its next iteration and subsequently turn itself off. */
		            Velocity.State.isTicking = false;
		
		            /* Clear the calls array so that its length is reset. */
		            delete Velocity.State.calls;
		            Velocity.State.calls = [];
		        }
		    }
		
		    /******************
		        Frameworks
		    ******************/
		
		    /* Both jQuery and Zepto allow their $.fn object to be extended to allow wrapped elements to be subjected to plugin calls.
		       If either framework is loaded, register a "velocity" extension pointing to Velocity's core animate() method.  Velocity
		       also registers itself onto a global container (window.jQuery || window.Zepto || window) so that certain features are
		       accessible beyond just a per-element scope. This master object contains an .animate() method, which is later assigned to $.fn
		       (if jQuery or Zepto are present). Accordingly, Velocity can both act on wrapped DOM elements and stand alone for targeting raw DOM elements. */
		    global.Velocity = Velocity;
		
		    if (global !== window) {
		        /* Assign the element function to Velocity's core animate() method. */
		        global.fn.velocity = animate;
		        /* Assign the object function's defaults to Velocity's global defaults object. */
		        global.fn.velocity.defaults = Velocity.defaults;
		    }
		
		    /***********************
		       Packaged Redirects
		    ***********************/
		
		    /* slideUp, slideDown */
		    $.each([ "Down", "Up" ], function(i, direction) {
		        Velocity.Redirects["slide" + direction] = function (element, options, elementsIndex, elementsSize, elements, promiseData) {
		            var opts = $.extend({}, options),
		                begin = opts.begin,
		                complete = opts.complete,
		                computedValues = { height: "", marginTop: "", marginBottom: "", paddingTop: "", paddingBottom: "" },
		                inlineValues = {};
		
		            if (opts.display === undefined) {
		                /* Show the element before slideDown begins and hide the element after slideUp completes. */
		                /* Note: Inline elements cannot have dimensions animated, so they're reverted to inline-block. */
		                opts.display = (direction === "Down" ? (Velocity.CSS.Values.getDisplayType(element) === "inline" ? "inline-block" : "block") : "none");
		            }
		
		            opts.begin = function() {
		                /* If the user passed in a begin callback, fire it now. */
		                begin && begin.call(elements, elements);
		
		                /* Cache the elements' original vertical dimensional property values so that we can animate back to them. */
		                for (var property in computedValues) {
		                    inlineValues[property] = element.style[property];
		
		                    /* For slideDown, use forcefeeding to animate all vertical properties from 0. For slideUp,
		                       use forcefeeding to start from computed values and animate down to 0. */
		                    var propertyValue = Velocity.CSS.getPropertyValue(element, property);
		                    computedValues[property] = (direction === "Down") ? [ propertyValue, 0 ] : [ 0, propertyValue ];
		                }
		
		                /* Force vertical overflow content to clip so that sliding works as expected. */
		                inlineValues.overflow = element.style.overflow;
		                element.style.overflow = "hidden";
		            }
		
		            opts.complete = function() {
		                /* Reset element to its pre-slide inline values once its slide animation is complete. */
		                for (var property in inlineValues) {
		                    element.style[property] = inlineValues[property];
		                }
		
		                /* If the user passed in a complete callback, fire it now. */
		                complete && complete.call(elements, elements);
		                promiseData && promiseData.resolver(elements);
		            };
		
		            Velocity(element, computedValues, opts);
		        };
		    });
		
		    /* fadeIn, fadeOut */
		    $.each([ "In", "Out" ], function(i, direction) {
		        Velocity.Redirects["fade" + direction] = function (element, options, elementsIndex, elementsSize, elements, promiseData) {
		            var opts = $.extend({}, options),
		                propertiesMap = { opacity: (direction === "In") ? 1 : 0 },
		                originalComplete = opts.complete;
		
		            /* Since redirects are triggered individually for each element in the animated set, avoid repeatedly triggering
		               callbacks by firing them only when the final element has been reached. */
		            if (elementsIndex !== elementsSize - 1) {
		                opts.complete = opts.begin = null;
		            } else {
		                opts.complete = function() {
		                    if (originalComplete) {
		                        originalComplete.call(elements, elements);
		                    }
		
		                    promiseData && promiseData.resolver(elements);
		                }
		            }
		
		            /* If a display was passed in, use it. Otherwise, default to "none" for fadeOut or the element-specific default for fadeIn. */
		            /* Note: We allow users to pass in "null" to skip display setting altogether. */
		            if (opts.display === undefined) {
		                opts.display = (direction === "In" ? "auto" : "none");
		            }
		
		            Velocity(this, propertiesMap, opts);
		        };
		    });
		
		    return Velocity;
		}((window.jQuery || window.Zepto || window), window, document);
		}));
		
		/******************
		   Known Issues
		******************/
		
		/* The CSS spec mandates that the translateX/Y/Z transforms are %-relative to the element itself -- not its parent.
		Velocity, however, doesn't make this distinction. Thus, converting to or from the % unit with these subproperties
		will produce an inaccurate conversion value. The same issue exists with the cx/cy attributes of SVG circles and ellipses. */
	
	/***/ },
	/* 420 */
	3,
	/* 421 */
	3,
	/* 422 */
	3,
	/* 423 */
	3,
	/* 424 */
	3,
	/* 425 */
	3,
	/* 426 */
	3,
	/* 427 */
	3,
	/* 428 */
	3,
	/* 429 */
	3,
	/* 430 */
	3,
	/* 431 */
	3,
	/* 432 */
	3,
	/* 433 */
	3,
	/* 434 */
	3,
	/* 435 */
	3,
	/* 436 */
	3,
	/* 437 */
	3,
	/* 438 */
	3,
	/* 439 */
	3,
	/* 440 */
	3,
	/* 441 */
	3,
	/* 442 */
	3,
	/* 443 */
	3,
	/* 444 */
	3,
	/* 445 */
	3,
	/* 446 */
	3,
	/* 447 */
	3,
	/* 448 */
	3,
	/* 449 */
	3,
	/* 450 */
	3,
	/* 451 */
	3,
	/* 452 */
	3,
	/* 453 */
	3,
	/* 454 */
	3,
	/* 455 */
	3,
	/* 456 */
	3,
	/* 457 */
	3,
	/* 458 */
	3,
	/* 459 */
	3,
	/* 460 */
	3,
	/* 461 */
	/***/ function(module, exports, __webpack_require__, __webpack_module_template_argument_0__) {
	
		'use strict';
		
		__webpack_require__(3);
		
		__webpack_require__(__webpack_module_template_argument_0__);
	
	/***/ },
	/* 462 */
	/***/ function(module, exports, __webpack_require__, __webpack_module_template_argument_0__) {
	
		'use strict';
		
		__webpack_require__(3);
		
		__webpack_require__(__webpack_module_template_argument_0__);
		
		__webpack_require__(15);
	
	/***/ },
	/* 463 */
	/***/ function(module, exports, __webpack_require__, __webpack_module_template_argument_0__) {
	
		'use strict';
		
		__webpack_require__(3);
		
		__webpack_require__(__webpack_module_template_argument_0__);
		
		__webpack_require__(25);
	
	/***/ }
	/******/ ])))
	});
	;
	//# sourceMappingURL=antd.js.map

/***/ },
/* 387 */
/*!*************************************!*\
  !*** ./common/operateActionUtil.ts ***!
  \*************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var ActionInfo_1 = __webpack_require__(/*! ./Module/ActionInfo */ 388);
	//actionID can derive post url, privilegeInfo
	function getActionInfo(actionID) {
	    //if exist in context, get
	    return new ActionInfo_1.ActionInfo(actionID);
	}
	exports.getActionInfo = getActionInfo;


/***/ },
/* 388 */
/*!*************************************!*\
  !*** ./common/Module/ActionInfo.ts ***!
  \*************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var ActionInfoUtil_1 = __webpack_require__(/*! ./ActionInfoUtil */ 389);
	var privilegeUtil_1 = __webpack_require__(/*! ../privilegeUtil */ 409);
	var ActionInfo = (function () {
	    function ActionInfo(actionID) {
	        var actionBasicInfo = ActionInfoUtil_1.getActionBasicInfo(actionID);
	        this.url = actionBasicInfo.url;
	        this.privilege = privilegeUtil_1.getPrivilegeByModules(actionBasicInfo.modules);
	    }
	    return ActionInfo;
	}());
	exports.ActionInfo = ActionInfo;


/***/ },
/* 389 */
/*!*****************************************!*\
  !*** ./common/Module/ActionInfoUtil.ts ***!
  \*****************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	//import all actionMap
	var SubjectLibActionMap_1 = __webpack_require__(/*! ../../actions/SubjectLib/SubjectLibActionMap */ 390);
	var TeacherPersonalPageActionMap_1 = __webpack_require__(/*! ../../actions/TeacherPersonalPage/TeacherPersonalPageActionMap */ 392);
	var commonFunc_1 = __webpack_require__(/*! ../commonFunc */ 378);
	var MIAssessActionMap_1 = __webpack_require__(/*! ../../actions/AssessCenter/MIAssess/MIAssessActionMap */ 393);
	var CollegeLibActionMap_1 = __webpack_require__(/*! ../../actions/CollegeLib/CollegeLibActionMap */ 395);
	var HomePageActionMap_1 = __webpack_require__(/*! ../../actions/HomePage/HomePageActionMap */ 396);
	var JobLibActionMap_1 = __webpack_require__(/*! ../../actions/JobLib/JobLibActionMap */ 397);
	var CommonActionMap_1 = __webpack_require__(/*! ../../actions/CommonAction/CommonActionMap */ 398);
	var TermAnalysisActionMap_1 = __webpack_require__(/*! ../../actions/TermAnalysis/TermAnalysisActionMap */ 400);
	var MajorLibActionMap_1 = __webpack_require__(/*! ../../actions/MajorLib/MajorLibActionMap */ 402);
	var SearchActionMap_1 = __webpack_require__(/*! ../../actions/Search/SearchActionMap */ 403);
	var AdminPageActionMap_1 = __webpack_require__(/*! ../../actions/AdminPage/AdminPageActionMap */ 404);
	var AssessCenterActionMap_1 = __webpack_require__(/*! ../../actions/AssessCenter/AssessCenterActionMap */ 405);
	var ValueAssessActionMap_1 = __webpack_require__(/*! ../../actions/AssessCenter/ValueAssess/ValueAssessActionMap */ 407);
	var allActionMap = {
	    subjectLibActionMap: SubjectLibActionMap_1.subjectLibActionMap,
	    MIAssessActionMap: MIAssessActionMap_1.MIAssessActionMap,
	    teacherActionMap: TeacherPersonalPageActionMap_1.teacherActionMap,
	    collegeLibActionMap: CollegeLibActionMap_1.collegeLibActionMap,
	    homePageActionMap: HomePageActionMap_1.homePageActionMap,
	    jobLibActionMap: JobLibActionMap_1.jobLibActionMap,
	    commonActionMap: CommonActionMap_1.commonActionMap,
	    termAnalysisActionMap: TermAnalysisActionMap_1.termAnalysisActionMap,
	    majorLibActionMap: MajorLibActionMap_1.majorLibActionMap,
	    searchActionMap: SearchActionMap_1.searchActionMap,
	    adminPageActionMap: AdminPageActionMap_1.adminPageActionMap,
	    assessCenterActionMap: AssessCenterActionMap_1.assessCenterActionMap,
	    ValueAssessActionMap: ValueAssessActionMap_1.ValueAssessActionMap,
	};
	function getUrlByActionID(actionID) {
	    return;
	}
	exports.getUrlByActionID = getUrlByActionID;
	function getPrivilegeByActionID(actionID) {
	    return;
	}
	exports.getPrivilegeByActionID = getPrivilegeByActionID;
	function getModuleAndOperationByActionID(actionID) {
	}
	//actionID 必须全局唯一
	function getActionBasicInfo(actionID) {
	    //actionID -> actionMap
	    for (var key in allActionMap) {
	        if (commonFunc_1.hasKeyInMap(actionID, allActionMap[key])) {
	            return allActionMap[key][actionID];
	        }
	    }
	    return;
	}
	exports.getActionBasicInfo = getActionBasicInfo;


/***/ },
/* 390 */
/*!***************************************************!*\
  !*** ./actions/SubjectLib/SubjectLibActionMap.ts ***!
  \***************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	// define action basic info here
	var ActionTypes = __webpack_require__(/*! ./SubjectLibActionTypes */ 364);
	var BiMap = __webpack_require__(/*! ../../common/Collect/BiMap */ 391);
	var subjectLibActionMapTemp = {};
	var initSubjLibUrl = "/subjectReference/Get/subjectReferences"; //对应action请求url，baseurl之后的路径，
	subjectLibActionMapTemp[ActionTypes.INIT_SUBJLIB_CURRENTSUBJ] = {
	    url: initSubjLibUrl,
	    moduleID: "subjectLib",
	    operate: "read",
	    useMockData: true
	};
	exports.subjectLibActionMap = subjectLibActionMapTemp;
	//为了方便模拟数据产生，需要添加 url - actionID 映射，与上面的actionID basicInfo 成对出现
	var subjectLibUrlMapTemp = new BiMap();
	subjectLibUrlMapTemp.put(initSubjLibUrl, ActionTypes.INIT_SUBJLIB_CURRENTSUBJ);
	exports.subjectLibUrlMap = subjectLibUrlMapTemp;


/***/ },
/* 391 */
/*!*********************************!*\
  !*** ./common/Collect/BiMap.ts ***!
  \*********************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var commonFunc_1 = __webpack_require__(/*! ../commonFunc */ 378);
	var BiMap = (function () {
	    function BiMap() {
	        this.delegate = {};
	        this.inverseMap = {};
	    }
	    BiMap.prototype.setDelegate = function (d) {
	        this.delegate = d;
	    };
	    BiMap.prototype.setInverse = function (i) {
	        this.inverseMap = i;
	    };
	    BiMap.prototype.put = function (k, v) {
	        //todo
	        /* if(hasKeyInMap(v, this.inverseMap)){
	             if (isDebug()){
	                 console.log("duplicate for the same value : " + v)
	             }
	         }*/
	        this.delegate[k] = v;
	        this.inverseMap[v] = k;
	        return this;
	    };
	    ;
	    BiMap.prototype.get = function (k) {
	        return this.delegate[k];
	    };
	    BiMap.prototype.contains = function (k) {
	        return commonFunc_1.hasKeyInMap(k, this.delegate);
	    };
	    BiMap.prototype.inverse = function () {
	        var inversedBiMap = new BiMap();
	        inversedBiMap.setDelegate(this.inverseMap);
	        inversedBiMap.setInverse(this.delegate);
	        return inversedBiMap;
	    };
	    return BiMap;
	}());
	module.exports = BiMap;


/***/ },
/* 392 */
/*!*********************************************************************!*\
  !*** ./actions/TeacherPersonalPage/TeacherPersonalPageActionMap.ts ***!
  \*********************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	// define action basic info here
	var ActionTypes = __webpack_require__(/*! ./TeacherPersonalPageActionTypes */ 381);
	var BiMap = __webpack_require__(/*! ../../common/Collect/BiMap */ 391);
	var teacherActionMapTemp = {};
	var teacherUrlMapTemp = new BiMap();
	var READ_TEACHER_USERINFO = '/url/here/READ_TEACHER_USERINFO'; //对应action请求url，baseurl之后的路径，
	teacherActionMapTemp[ActionTypes.READ_TEACHER_USERINFO] = {
	    url: READ_TEACHER_USERINFO,
	    moduleID: 'teacher',
	    operate: 'read'
	};
	//为了方便模拟数据产生，需要添加 url - actionID 映射，与上面的actionID basicInfo 成对出现
	teacherUrlMapTemp.put(READ_TEACHER_USERINFO, ActionTypes.READ_TEACHER_USERINFO);
	var GET_TEACHER_MODULECONFIG = '/url/here/GET_TEACHER_MODULECONFIG'; //对应action请求url，baseurl之后的路径，
	teacherActionMapTemp[ActionTypes.GET_TEACHER_MODULECONFIG] = {
	    url: GET_TEACHER_MODULECONFIG,
	    moduleID: 'teacher',
	    operate: 'read'
	};
	teacherUrlMapTemp.put(GET_TEACHER_MODULECONFIG, ActionTypes.GET_TEACHER_MODULECONFIG);
	//获取学生列表 ---  不打分的
	var GET_TEACHER_CLASSMATELIST = '/studentPerformanceRecord/Get/performanceStudentInfos'; //对应action请求url，baseurl之后的路径，
	teacherActionMapTemp[ActionTypes.GET_TEACHER_CLASSMATELIST] = {
	    url: GET_TEACHER_CLASSMATELIST,
	    moduleID: 'teacher',
	    operate: 'read',
	    useMockData: false
	};
	teacherUrlMapTemp.put(GET_TEACHER_CLASSMATELIST, ActionTypes.GET_TEACHER_CLASSMATELIST);
	var GET_TEACHER_RANKSTATE = '/url/here/GET_TEACHER_RANKSTATE'; //对应action请求url，baseurl之后的路径，
	teacherActionMapTemp[ActionTypes.GET_TEACHER_RANKSTATE] = {
	    url: GET_TEACHER_RANKSTATE,
	    moduleID: 'teacher',
	    operate: 'read'
	};
	teacherUrlMapTemp.put(GET_TEACHER_RANKSTATE, ActionTypes.GET_TEACHER_RANKSTATE);
	//班级通知--获取
	var GET_TEACHER_CLASSNOTIFICATION = '/teacherNotification/Get/notifications'; //对应action请求url，baseurl之后的路径，
	teacherActionMapTemp[ActionTypes.GET_TEACHER_CLASSNOTIFICATION] = {
	    url: GET_TEACHER_CLASSNOTIFICATION,
	    moduleID: 'teacher',
	    operate: 'read',
	    useMockData: false
	};
	teacherUrlMapTemp.put(GET_TEACHER_CLASSNOTIFICATION, ActionTypes.GET_TEACHER_CLASSNOTIFICATION);
	//班级通知--保存
	var SET_TEACHER_CLASSNOTIFICATION = '/teacherNotification/Set/saveNotification'; //对应action请求url，baseurl之后的路径，
	teacherActionMapTemp[ActionTypes.SET_TEACHER_CLASSNOTIFICATION] = {
	    url: SET_TEACHER_CLASSNOTIFICATION,
	    moduleID: 'teacher',
	    operate: 'read',
	    useMockData: false
	};
	teacherUrlMapTemp.put(SET_TEACHER_CLASSNOTIFICATION, ActionTypes.SET_TEACHER_CLASSNOTIFICATION);
	//班级通知 -- 删除
	var DELETE_TEACHER_CLASSNOTIFICATION = '/teacherNotification/Set/deleteNotification'; //对应action请求url，baseurl之后的路径，
	teacherActionMapTemp[ActionTypes.DELETE_TEACHER_CLASSNOTIFICATION] = {
	    url: DELETE_TEACHER_CLASSNOTIFICATION,
	    moduleID: 'teacher',
	    operate: 'read',
	    useMockData: false
	};
	teacherUrlMapTemp.put(DELETE_TEACHER_CLASSNOTIFICATION, ActionTypes.SET_TEACHER_CLASSNOTIFICATION);
	var GET_TEACHER_RANKINCLASS = '/url/here/GET_TEACHER_RANKINCLASS'; //对应action请求url，baseurl之后的路径，
	teacherActionMapTemp[ActionTypes.GET_TEACHER_RANKINCLASS] = {
	    url: GET_TEACHER_RANKINCLASS,
	    moduleID: 'teacher',
	    operate: 'read'
	};
	teacherUrlMapTemp.put(GET_TEACHER_RANKINCLASS, ActionTypes.GET_TEACHER_RANKINCLASS);
	//班团活动-信息
	var READ_TEACHER_ACTIVITY = '/classActivity/Get/stuClassActivityInfos'; //对应action请求url，baseurl之后的路径，
	teacherActionMapTemp[ActionTypes.READ_TEACHER_ACTIVITY] = {
	    url: READ_TEACHER_ACTIVITY,
	    moduleID: 'teacher',
	    operate: 'read',
	    useMockData: false
	};
	teacherUrlMapTemp.put(READ_TEACHER_ACTIVITY, ActionTypes.READ_TEACHER_ACTIVITY);
	//班团活动-保存
	var SAVE_TEACHER_ACTIVITY = '/classActivity/Set/saveStuClassActivityInfo'; //对应action请求url，baseurl之后的路径，
	teacherActionMapTemp[ActionTypes.SAVE_TEACHER_ACTIVITY] = {
	    url: SAVE_TEACHER_ACTIVITY,
	    moduleID: 'teacher',
	    operate: 'read',
	    useMockData: false
	};
	teacherUrlMapTemp.put(SAVE_TEACHER_ACTIVITY, ActionTypes.SAVE_TEACHER_ACTIVITY);
	//班团活动-删除
	var DELETE_TEACHER_ACTIVITY = '/classActivity/Set/deleteStuClassActivityInfo'; //对应action请求url，baseurl之后的路径，
	teacherActionMapTemp[ActionTypes.DELETE_TEACHER_ACTIVITY] = {
	    url: DELETE_TEACHER_ACTIVITY,
	    moduleID: 'teacher',
	    operate: 'read',
	    useMockData: false
	};
	teacherUrlMapTemp.put(DELETE_TEACHER_ACTIVITY, ActionTypes.DELETE_TEACHER_ACTIVITY);
	var READ_TEACHER_STUDENTPERFORMANCEOPTIONS = '/studentPerformanceRecord/Get/studentPerformanceOptions'; //对应action请求url，baseurl之后的路径，
	teacherActionMapTemp[ActionTypes.READ_TEACHER_STUDENTPERFORMANCEOPTIONS] = {
	    url: READ_TEACHER_STUDENTPERFORMANCEOPTIONS,
	    moduleID: 'teacher',
	    operate: "read",
	    useMockData: false
	};
	teacherUrlMapTemp.put(READ_TEACHER_STUDENTPERFORMANCEOPTIONS, ActionTypes.READ_TEACHER_STUDENTPERFORMANCEOPTIONS);
	var READ_TEACHER_STUDENTPERFORMANCE_RECORD = '/studentPerformanceRecord/Get/studentPerformanceRecords'; //对应action请求url，baseurl之后的路径，
	teacherActionMapTemp[ActionTypes.READ_TEACHER_STUDENTPERFORMANCE_RECORD] = {
	    url: READ_TEACHER_STUDENTPERFORMANCE_RECORD,
	    moduleID: 'teacher',
	    operate: "read",
	    useMockData: false
	};
	teacherUrlMapTemp.put(READ_TEACHER_STUDENTPERFORMANCE_RECORD, ActionTypes.READ_TEACHER_STUDENTPERFORMANCE_RECORD);
	var SAVE_TEACHER_STUDENTPERFORMANCE_RECORD = '/studentPerformanceRecord/Set/saveStudentPerformanceRecord'; //对应action请求url，baseurl之后的路径，
	teacherActionMapTemp[ActionTypes.SAVE_TEACHER_STUDENTPERFORMANCE_RECORD] = {
	    url: SAVE_TEACHER_STUDENTPERFORMANCE_RECORD,
	    moduleID: 'teacher',
	    operate: "read",
	    useMockData: false
	};
	teacherUrlMapTemp.put(SAVE_TEACHER_STUDENTPERFORMANCE_RECORD, ActionTypes.SAVE_TEACHER_STUDENTPERFORMANCE_RECORD);
	var DELETE_TEACHER_STUDENTPERFORMANCE_RECORD = '/studentPerformanceRecord/Set/deleteStudentPerformanceRecord'; //对应action请求url，baseurl之后的路径，
	teacherActionMapTemp[ActionTypes.DELETE_TEACHER_STUDENTPERFORMANCE_RECORD] = {
	    url: DELETE_TEACHER_STUDENTPERFORMANCE_RECORD,
	    moduleID: 'teacher',
	    operate: "read",
	    useMockData: false
	};
	teacherUrlMapTemp.put(DELETE_TEACHER_STUDENTPERFORMANCE_RECORD, ActionTypes.DELETE_TEACHER_STUDENTPERFORMANCE_RECORD);
	//特殊学生情况 -- get特殊学生
	var READ_TEACHER_SPECIALSTUDENT = '/specialStudent/Get/specialStudents'; //对应action请求url，baseurl之后的路径，
	teacherActionMapTemp[ActionTypes.READ_TEACHER_SPECIALSTUDENT] = {
	    url: READ_TEACHER_SPECIALSTUDENT,
	    moduleID: 'teacher',
	    operate: "read",
	    useMockData: false
	};
	teacherUrlMapTemp.put(READ_TEACHER_SPECIALSTUDENT, ActionTypes.READ_TEACHER_SPECIALSTUDENT);
	//特殊学生情况 -- 添加特殊学生
	var CREATE_TEACHER_SPECIALSTUDENT = '/specialStudent/Set/insertSpecialStudent'; //对应action请求url，baseurl之后的路径，
	teacherActionMapTemp[ActionTypes.CREATE_TEACHER_SPECIALSTUDENT] = {
	    url: CREATE_TEACHER_SPECIALSTUDENT,
	    moduleID: 'teacher',
	    operate: "read",
	    useMockData: false
	};
	teacherUrlMapTemp.put(CREATE_TEACHER_SPECIALSTUDENT, ActionTypes.CREATE_TEACHER_SPECIALSTUDENT);
	//特殊学生情况 -- 移除特殊学生---待定功能《未调试》
	var DELETE_TEACHER_SPECIALSTUDENT = '/url/here/DELETE_TEACHER_SPECIALSTUDENT'; //对应action请求url，baseurl之后的路径，
	teacherActionMapTemp[ActionTypes.DELETE_TEACHER_SPECIALSTUDENT] = {
	    url: DELETE_TEACHER_SPECIALSTUDENT,
	    moduleID: 'teacher',
	    operate: 'read'
	};
	teacherUrlMapTemp.put(DELETE_TEACHER_SPECIALSTUDENT, ActionTypes.DELETE_TEACHER_SPECIALSTUDENT);
	//特殊学生情况 --- 学生过往记录list
	var READ_TEACHER_SPECIALSTUDENT_RECORD = '/specialStudentRecord/Get/specialStudentRecords'; //对应action请求url，baseurl之后的路径，
	teacherActionMapTemp[ActionTypes.READ_TEACHER_SPECIALSTUDENT_RECORD] = {
	    url: READ_TEACHER_SPECIALSTUDENT_RECORD,
	    moduleID: 'teacher',
	    operate: "read",
	    useMockData: false
	};
	teacherUrlMapTemp.put(READ_TEACHER_SPECIALSTUDENT_RECORD, ActionTypes.READ_TEACHER_SPECIALSTUDENT_RECORD);
	var SAVE_TEACHER_SPECIALSTUDENT_RECORD = '/specialStudentRecord/Set/saveSpecialStudentRecord'; //对应action请求url，baseurl之后的路径，
	teacherActionMapTemp[ActionTypes.SAVE_TEACHER_SPECIALSTUDENT_RECORD] = {
	    url: SAVE_TEACHER_SPECIALSTUDENT_RECORD,
	    moduleID: 'teacher',
	    operate: "read",
	    useMockData: false
	};
	teacherUrlMapTemp.put(SAVE_TEACHER_SPECIALSTUDENT_RECORD, ActionTypes.SAVE_TEACHER_SPECIALSTUDENT_RECORD);
	var DELETE_TEACHER_SPECIALSTUDENT_RECORD = '/specialStudentRecord/Set/deleteSpecialStudentRecord'; //对应action请求url，baseurl之后的路径，
	teacherActionMapTemp[ActionTypes.DELETE_TEACHER_SPECIALSTUDENT_RECORD] = {
	    url: DELETE_TEACHER_SPECIALSTUDENT_RECORD,
	    moduleID: 'teacher',
	    operate: "read",
	    useMockData: false
	};
	teacherUrlMapTemp.put(DELETE_TEACHER_SPECIALSTUDENT_RECORD, ActionTypes.DELETE_TEACHER_SPECIALSTUDENT_RECORD);
	//班主任评价学生---给学生打分--获取
	var GET_TEACHER_EVALUATESTUDENT_STAR = '/studentEvaluationScore/Get/studentEvaluationScores'; //对应action请求url，baseurl之后的路径，
	teacherActionMapTemp[ActionTypes.GET_TEACHER_EVALUATESTUDENT_STAR] = {
	    url: GET_TEACHER_EVALUATESTUDENT_STAR,
	    moduleID: 'teacher',
	    operate: "read",
	    useMockData: false
	};
	teacherUrlMapTemp.put(GET_TEACHER_EVALUATESTUDENT_STAR, ActionTypes.GET_TEACHER_EVALUATESTUDENT_STAR);
	//班主任评价学生 --- 给学生打分--保存
	var SET_TEACHER_EVALUATESTUDENT_STAR = '/studentEvaluationScore/Set/setStudentEvaluationScore'; //对应action请求url，baseurl之后的路径，
	teacherActionMapTemp[ActionTypes.SET_TEACHER_EVALUATESTUDENT_STAR] = {
	    url: SET_TEACHER_EVALUATESTUDENT_STAR,
	    moduleID: 'teacher',
	    operate: "read",
	    useMockData: false
	};
	teacherUrlMapTemp.put(SET_TEACHER_EVALUATESTUDENT_STAR, ActionTypes.SET_TEACHER_EVALUATESTUDENT_STAR);
	//班主任评价学生 ---  综合评价获取
	var GET_TEACHER_TERMEVALUATE = '/stuTermEvaluate/Get/stuTermEvaluates'; //对应action请求url，baseurl之后的路径，
	teacherActionMapTemp[ActionTypes.GET_TEACHER_TERMEVALUATE] = {
	    url: GET_TEACHER_TERMEVALUATE,
	    moduleID: 'teacher',
	    operate: "read",
	    useMockData: false
	};
	teacherUrlMapTemp.put(GET_TEACHER_TERMEVALUATE, ActionTypes.GET_TEACHER_TERMEVALUATE);
	//班主任评价学生 ---  综合评价保存
	var SET_TEACHER_TERMEVALUATE = '/stuTermEvaluate/Set/saveStuTermEvaluates'; //对应action请求url，baseurl之后的路径，
	teacherActionMapTemp[ActionTypes.SET_TEACHER_TERMEVALUATE] = {
	    url: SET_TEACHER_TERMEVALUATE,
	    moduleID: 'teacher',
	    operate: "read",
	    useMockData: false
	};
	teacherUrlMapTemp.put(SET_TEACHER_TERMEVALUATE, ActionTypes.SET_TEACHER_TERMEVALUATE);
	//班主任评价学生---学生月度总结 --- 班主任月度评语--保存
	var SET_TEACHER_MONTHEVALUATE = '/stuMonthSummary/Set/saveStuMonthSummaryEvaluate'; //对应action请求url，baseurl之后的路径，
	teacherActionMapTemp[ActionTypes.SET_TEACHER_MONTHEVALUATE] = {
	    url: SET_TEACHER_MONTHEVALUATE,
	    moduleID: 'teacher',
	    operate: "read",
	    useMockData: false
	};
	teacherUrlMapTemp.put(SET_TEACHER_MONTHEVALUATE, ActionTypes.SET_TEACHER_MONTHEVALUATE);
	var GET_TEACHER_STUDENTMONTHSUMMARY = '/url/here/GET_TEACHER_STUDENTMONTHSUMMARY'; //对应action请求url，baseurl之后的路径，
	teacherActionMapTemp[ActionTypes.GET_TEACHER_STUDENTMONTHSUMMARY] = {
	    url: GET_TEACHER_STUDENTMONTHSUMMARY,
	    moduleID: 'teacher',
	    operate: 'read'
	};
	teacherUrlMapTemp.put(GET_TEACHER_STUDENTMONTHSUMMARY, ActionTypes.GET_TEACHER_STUDENTMONTHSUMMARY);
	var GET_TEACHER_STUTERMQUALITYEVALUATIONITEMS = '/url/here/GET_TEACHER_STUTERMQUALITYEVALUATIONITEMS'; //对应action请求url，baseurl之后的路径，
	teacherActionMapTemp[ActionTypes.GET_TEACHER_STUTERMQUALITYEVALUATIONITEMS] = {
	    url: GET_TEACHER_STUTERMQUALITYEVALUATIONITEMS,
	    moduleID: 'teacher',
	    operate: 'read'
	};
	teacherUrlMapTemp.put(GET_TEACHER_STUTERMQUALITYEVALUATIONITEMS, ActionTypes.GET_TEACHER_STUTERMQUALITYEVALUATIONITEMS);
	//评语管理--获取table list
	var READ_TEACHER_EVALUATESTUDENTDICT = '/moralComment/Get/moralComments'; //对应action请求url，baseurl之后的路径，
	teacherActionMapTemp[ActionTypes.READ_TEACHER_EVALUATESTUDENTDICT] = {
	    url: READ_TEACHER_EVALUATESTUDENTDICT,
	    moduleID: 'teacher',
	    operate: 'read',
	    useMockData: false
	};
	teacherUrlMapTemp.put(READ_TEACHER_EVALUATESTUDENTDICT, ActionTypes.READ_TEACHER_EVALUATESTUDENTDICT);
	//评语管理--保存
	var SAVE_TEACHER_QUALITYCATEGORYINFOS = '/moralComment/Set/saveMoralComment'; //对应action请求url，baseurl之后的路径，
	teacherActionMapTemp[ActionTypes.SAVE_TEACHER_REVIEWWORD] = {
	    url: SAVE_TEACHER_QUALITYCATEGORYINFOS,
	    moduleID: 'teacher',
	    operate: 'read',
	    useMockData: false
	};
	teacherUrlMapTemp.put(SAVE_TEACHER_QUALITYCATEGORYINFOS, ActionTypes.SAVE_TEACHER_REVIEWWORD);
	//评语管理--删除
	var DELETE_TEACHER_REVIEWWORD = '/moralComment/Set/deleteMoralComment'; //对应action请求url，baseurl之后的路径，
	teacherActionMapTemp[ActionTypes.DELETE_TEACHER_REVIEWWORD] = {
	    url: DELETE_TEACHER_REVIEWWORD,
	    moduleID: 'teacher',
	    operate: 'read',
	    useMockData: false
	};
	teacherUrlMapTemp.put(DELETE_TEACHER_REVIEWWORD, ActionTypes.DELETE_TEACHER_REVIEWWORD);
	var SUBMIT_TEACHER_STUTERMQUALITYEVALUATION = '/url/here/SUBMIT_TEACHER_STUTERMQUALITYEVALUATION'; //对应action请求url，baseurl之后的路径，
	teacherActionMapTemp[ActionTypes.SUBMIT_TEACHER_STUTERMQUALITYEVALUATION] = {
	    url: SUBMIT_TEACHER_STUTERMQUALITYEVALUATION,
	    moduleID: 'teacher',
	    operate: 'read'
	};
	teacherUrlMapTemp.put(SUBMIT_TEACHER_STUTERMQUALITYEVALUATION, ActionTypes.SUBMIT_TEACHER_STUTERMQUALITYEVALUATION);
	exports.teacherActionMap = teacherActionMapTemp;
	exports.teacherUrlMap = teacherUrlMapTemp;


/***/ },
/* 393 */
/*!************************************************************!*\
  !*** ./actions/AssessCenter/MIAssess/MIAssessActionMap.ts ***!
  \************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	// define action basic info here
	var ActionTypes = __webpack_require__(/*! ./MIAssessActionTypes */ 394);
	var BiMap = __webpack_require__(/*! ../../../common/Collect/BiMap */ 391);
	var MIAssessActionMapTemp = {};
	var GET_MIASSESS_QUIZZES = "/url/here/GET_MIASSESS_QUIZZES"; //对应action请求url，baseurl之后的路径，必须‘/’开头，
	MIAssessActionMapTemp[ActionTypes.GET_MIASSESS_QUIZZES] = {
	    url: GET_MIASSESS_QUIZZES,
	    moduleID: "MIAssess",
	    operate: "read"
	};
	exports.MIAssessActionMap = MIAssessActionMapTemp;
	//为了方便模拟数据产生，需要添加 url - actionID 映射，与上面的actionID basicInfo 成对出现
	var MIAssessUrlMapTemp = new BiMap();
	MIAssessUrlMapTemp.put(GET_MIASSESS_QUIZZES, ActionTypes.GET_MIASSESS_QUIZZES);
	//提交MI测试的答案
	var SUBMIT_MIASSESS_ANSWERS = "/url/here/SUBMIT_MIASSESS_ANSWERS";
	MIAssessActionMapTemp[ActionTypes.SUBMIT_MIASSESS_ANSWERS] = {
	    url: SUBMIT_MIASSESS_ANSWERS,
	    moduleID: "MIAssess",
	    operate: "read"
	};
	MIAssessUrlMapTemp.put(SUBMIT_MIASSESS_ANSWERS, ActionTypes.SUBMIT_MIASSESS_ANSWERS);
	//获取MI测试是否完成的状态
	var GET_MIASSESS_MIASSWSSFINISHSTATE = "/url/here/GET_MIASSESS_MIASSWSSFINISHSTATE";
	MIAssessActionMapTemp[ActionTypes.GET_MIASSESS_MIASSWSSFINISHSTATE] = {
	    url: GET_MIASSESS_MIASSWSSFINISHSTATE,
	    moduleID: "MIAssess",
	    operate: "read"
	};
	MIAssessUrlMapTemp.put(GET_MIASSESS_MIASSWSSFINISHSTATE, ActionTypes.GET_MIASSESS_MIASSWSSFINISHSTATE);
	//获取MI测试引导页面介绍语
	var GET_MIASSESS_INTRODUCTION = "/url/here/GET_MIASSESS_INTRODUCTION";
	MIAssessActionMapTemp[ActionTypes.GET_MIASSESS_INTRODUCTION] = {
	    url: GET_MIASSESS_INTRODUCTION,
	    moduleID: "MIAssess",
	    operate: "read"
	};
	MIAssessUrlMapTemp.put(GET_MIASSESS_INTRODUCTION, ActionTypes.GET_MIASSESS_INTRODUCTION);
	//获取MI测试的结果
	var GET_MIASSESS_MI_REPORT = "/url/here/GET_MIASSESS_MI_REPORT";
	MIAssessActionMapTemp[ActionTypes.GET_MIASSESS_MI_REPORT] = {
	    url: GET_MIASSESS_MI_REPORT,
	    moduleID: "MIAssess",
	    operate: "read"
	};
	MIAssessUrlMapTemp.put(GET_MIASSESS_MI_REPORT, ActionTypes.GET_MIASSESS_MI_REPORT);
	exports.MIAssessUrlMap = MIAssessUrlMapTemp;


/***/ },
/* 394 */
/*!**************************************************************!*\
  !*** ./actions/AssessCenter/MIAssess/MIAssessActionTypes.ts ***!
  \**************************************************************/
/***/ function(module, exports) {

	"use strict";
	//所有程序中用到的有关此模块的actionID 都引用于此 ****必须全局唯一*****
	// 获取MI测试题目
	exports.GET_MIASSESS_QUIZZES = "GET_MIASSESS_QUIZZES";
	//提交MI测试的答案
	exports.SUBMIT_MIASSESS_ANSWERS = 'SUBMIT_MIASSESS_ANSWERS';
	//获取多元智能测试是否完成的状态
	exports.GET_MIASSESS_MIASSWSSFINISHSTATE = 'GET_MIASSESS_MIASSWSSFINISHSTATE';
	//获取MI测试引导页导语
	exports.GET_MIASSESS_INTRODUCTION = "GET_MIASSESS_INTRODUCTION";
	// 获取MI测试结果
	exports.GET_MIASSESS_MI_REPORT = "GET_MIASSESS_MI_REPORT";


/***/ },
/* 395 */
/*!***************************************************!*\
  !*** ./actions/CollegeLib/CollegeLibActionMap.ts ***!
  \***************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	// define action basic info here
	var ActionTypes = __webpack_require__(/*! ./CollegeLibActionTypes */ 368);
	var BiMap = __webpack_require__(/*! ../../common/Collect/BiMap */ 391);
	var collegeLibUrlFlag = "/collegeLibrary";
	var collegeLibUrlMapTemp = new BiMap();
	var collegeLibActionMapTemp = {};
	//院校类别list（province,type,level,collegeprop）
	var collegeConditionsUrl = collegeLibUrlFlag + "/Get/collegeHomeDicts";
	collegeLibActionMapTemp[ActionTypes.GET_COLLEGELIB_CONDITIONS] = {
	    url: collegeConditionsUrl,
	    moduleID: "collegeLib",
	    operate: "read",
	    useMockData: true
	};
	collegeLibUrlMapTemp.put(collegeConditionsUrl, ActionTypes.GET_COLLEGELIB_CONDITIONS); //url - actionID 映射
	//院校列表
	var collegeLibUrl = collegeLibUrlFlag + "/Get/collegeInfos";
	collegeLibActionMapTemp[ActionTypes.GET_COLLEGELIB_COLLEGELIST] = {
	    url: collegeLibUrl,
	    moduleID: "collegeLib",
	    operate: "read",
	    useMockData: true
	};
	collegeLibUrlMapTemp.put(collegeLibUrl, ActionTypes.GET_COLLEGELIB_COLLEGELIST); //url - actionID 映射
	//学校详情
	var collegeLibDetailUrl = collegeLibUrlFlag + "/Get/collegeInfo";
	collegeLibActionMapTemp[ActionTypes.GET_COLLEGELIB_COLLEGEDETAIL] = {
	    url: collegeLibDetailUrl,
	    moduleID: "collegeLib",
	    operate: "read",
	    useMockData: true
	};
	collegeLibUrlMapTemp.put(collegeLibDetailUrl, ActionTypes.GET_COLLEGELIB_COLLEGEDETAIL); //url - actionID 映射
	exports.collegeLibActionMap = collegeLibActionMapTemp;
	exports.collegeLibUrlMap = collegeLibUrlMapTemp;


/***/ },
/* 396 */
/*!***********************************************!*\
  !*** ./actions/HomePage/HomePageActionMap.ts ***!
  \***********************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	// define action basic info here
	var ActionTypes = __webpack_require__(/*! ./HomePageActionTypes */ 380);
	var BiMap = __webpack_require__(/*! ../../common/Collect/BiMap */ 391);
	var homePageUrlMapTemp = new BiMap();
	var homePageActionMapTemp = {};
	//获取学生个人信息 basicInfo
	var studentUserInfoUrl = "/homePage/get/studentUserInfo";
	homePageActionMapTemp[ActionTypes.READ_STUDENT_USERINFO] = {
	    url: studentUserInfoUrl,
	    moduleID: "homePage",
	    operate: "read"
	};
	homePageUrlMapTemp.put(studentUserInfoUrl, ActionTypes.READ_STUDENT_USERINFO); //url - actionID 映射
	//右侧  学生自己的排名情况
	var rankUrl = "/homePage/get/rankState";
	homePageActionMapTemp[ActionTypes.GET_STUDENT_RANKSTATE] = {
	    url: rankUrl,
	    moduleID: "homePage",
	    operate: "read"
	};
	homePageUrlMapTemp.put(rankUrl, ActionTypes.GET_STUDENT_RANKSTATE); //url - actionID 映射
	//7选3卡片：7选3选科结果 学科兴趣  学科能力  意向专业
	var chooseSubjectUrl = "/homePage/get/chooseSubject";
	homePageActionMapTemp[ActionTypes.GET_STUDENT_SUBJECTCHOICESTATE] = {
	    url: chooseSubjectUrl,
	    moduleID: "homePage",
	    operate: "read"
	};
	homePageUrlMapTemp.put(chooseSubjectUrl, ActionTypes.GET_STUDENT_SUBJECTCHOICESTATE); //url - actionID 映射
	//测评中心 完成情况
	var assessCenterUrl = "/homePage/get/careerState";
	homePageActionMapTemp[ActionTypes.GET_STUDENT_CAREERSTATE] = {
	    url: assessCenterUrl,
	    moduleID: "homePage",
	    operate: "read"
	};
	homePageUrlMapTemp.put(assessCenterUrl, ActionTypes.GET_STUDENT_CAREERSTATE); //url - actionID 映射
	//自我剖析 -- 获取
	var GET_STUDENT_ANALYZEMYSELF = "/selfAnalyse/Get/selfAnalyseInfos";
	homePageActionMapTemp[ActionTypes.GET_STUDENT_ANALYZEMYSELF] = {
	    url: GET_STUDENT_ANALYZEMYSELF,
	    moduleID: "homePage",
	    operate: "read",
	    useMockData: false
	};
	homePageUrlMapTemp.put(GET_STUDENT_ANALYZEMYSELF, ActionTypes.GET_STUDENT_ANALYZEMYSELF); //url - actionID 映射
	//自我剖析  -- 保存
	var analyzeMyselfUpdateUrl = "/selfAnalyse/Set/saveSelfAnalyseInfo";
	homePageActionMapTemp[ActionTypes.SET_STUDENT_ANALYZEMYSELF] = {
	    url: analyzeMyselfUpdateUrl,
	    moduleID: "homePage",
	    operate: "read",
	    useMockData: false
	};
	homePageUrlMapTemp.put(analyzeMyselfUpdateUrl, ActionTypes.SET_STUDENT_ANALYZEMYSELF); //url - actionID 映射
	//目标设定  -- 获取
	var GET_STUDENT_TARGETSTATE = "/stuTargetSetting/Get/stuTargetSetting";
	homePageActionMapTemp[ActionTypes.GET_STUDENT_TARGETSTATE] = {
	    url: GET_STUDENT_TARGETSTATE,
	    moduleID: "homePage",
	    operate: "read",
	    useMockData: false
	};
	homePageUrlMapTemp.put(GET_STUDENT_TARGETSTATE, ActionTypes.GET_STUDENT_TARGETSTATE); //url - actionID 映射
	//目标设定  -- 保存
	var SET_STUDENT_TARGETSTATE = "/stuTargetSetting/Set/saveStuTargetSetting";
	homePageActionMapTemp[ActionTypes.SET_STUDENT_TARGETSTATE] = {
	    url: SET_STUDENT_TARGETSTATE,
	    moduleID: "homePage",
	    operate: "read",
	    useMockData: false
	};
	homePageUrlMapTemp.put(SET_STUDENT_TARGETSTATE, ActionTypes.SET_STUDENT_TARGETSTATE); //url - actionID 映射
	//综合素质纪录  八项
	var comprehensiveQualityRecordsUrl = "/homePage/get/comprehensiveQualityRecords";
	homePageActionMapTemp[ActionTypes.GET_STUDENT_COMPROHENSIVEQUALITYCARDS] = {
	    url: comprehensiveQualityRecordsUrl,
	    moduleID: "homePage",
	    operate: "read"
	};
	homePageUrlMapTemp.put(comprehensiveQualityRecordsUrl, ActionTypes.GET_STUDENT_COMPROHENSIVEQUALITYCARDS); //url - actionID 映射
	//选修课，选择名称--所属类别--课程学分
	var electiveCourseCategoryUrl = "/homePage/get/electiveCourseCategory";
	homePageActionMapTemp[ActionTypes.GET_ELECTIVECOURSE_CATEGORY] = {
	    url: electiveCourseCategoryUrl,
	    moduleID: "homePage",
	    operate: "read"
	};
	homePageUrlMapTemp.put(electiveCourseCategoryUrl, ActionTypes.GET_ELECTIVECOURSE_CATEGORY); //url - actionID 映射
	//同学眼中的我--- 同学对我的印象
	var studentImpressionUrl = "/stuImpression/Get/studentEvaluates";
	homePageActionMapTemp[ActionTypes.GET_STUDENT_IMPRESSION] = {
	    url: studentImpressionUrl,
	    moduleID: "homePage",
	    operate: "read",
	    useMockData: false
	};
	homePageUrlMapTemp.put(studentImpressionUrl, ActionTypes.GET_STUDENT_IMPRESSION); //url - actionID 映射
	//同学眼中的我--- 获取印象列表
	var schoolProvidedImpressionsUrl = "/schoolImpressionDict/Get/impressionDicts";
	homePageActionMapTemp[ActionTypes.SCHOOL_PROVIDED_IMPRESSIONS] = {
	    url: schoolProvidedImpressionsUrl,
	    moduleID: "homePage",
	    operate: "read",
	    useMockData: false
	};
	homePageUrlMapTemp.put(schoolProvidedImpressionsUrl, ActionTypes.SCHOOL_PROVIDED_IMPRESSIONS); //url - actionID 映射
	//同学眼中的我--- 保存印象
	var studentImpressionsUrl = "/stuImpression/Set/saveStudentEvaluates";
	homePageActionMapTemp[ActionTypes.SET_STUDENT_IMPRESSIONS] = {
	    url: studentImpressionsUrl,
	    moduleID: "homePage",
	    operate: "read",
	    useMockData: false
	};
	homePageUrlMapTemp.put(studentImpressionsUrl, ActionTypes.SET_STUDENT_IMPRESSIONS); //url - actionID 映射
	//最近来访
	var latestVisitorUrl = "/stuLatestVisitor/Get/stuLatestVisitors";
	homePageActionMapTemp[ActionTypes.GET_STUDENT_LATESTVISITOR] = {
	    url: latestVisitorUrl,
	    moduleID: "homePage",
	    operate: "read",
	    useMockData: false
	};
	homePageUrlMapTemp.put(latestVisitorUrl, ActionTypes.GET_STUDENT_LATESTVISITOR); //url - actionID 映射
	exports.homePageActionMap = homePageActionMapTemp;
	exports.homePageUrlMap = homePageUrlMapTemp;


/***/ },
/* 397 */
/*!*******************************************!*\
  !*** ./actions/JobLib/JobLibActionMap.ts ***!
  \*******************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var ActionTypes = __webpack_require__(/*! ./JobLibActionTypes */ 371);
	var BiMap = __webpack_require__(/*! ../../common/Collect/BiMap */ 391);
	var jobLibActionMapTemp = {};
	var mergeJobOptionsCareerUrl = "/jobCategory/Get/jobCategoriesWithSubJob"; //对应action请求url，baseurl之后的路径，
	jobLibActionMapTemp[ActionTypes.GET_JOBLIB_JOBLIB] = {
	    url: mergeJobOptionsCareerUrl,
	    moduleID: "jobLib",
	    operate: "read",
	    useMockData: true
	};
	exports.jobLibActionMap = jobLibActionMapTemp;
	var getJobIntroductionUrl = "/careerIntroduce/Get/careerMlByCareerCategoryId"; //对应action请求url，baseurl之后的路径，
	jobLibActionMapTemp[ActionTypes.GET_JOBLIB_JOBINTRODUCTION] = {
	    url: getJobIntroductionUrl,
	    moduleID: "jobLib",
	    operate: "read",
	    useMockData: true
	};
	//为了方便模拟数据产生，需要添加 url - actionID 映射，与上面的actionID basicInfo 成对出现
	var jobLibUrlMapTemp = new BiMap();
	jobLibUrlMapTemp.put(mergeJobOptionsCareerUrl, ActionTypes.GET_JOBLIB_JOBLIB);
	jobLibUrlMapTemp.put(getJobIntroductionUrl, ActionTypes.GET_JOBLIB_JOBINTRODUCTION);
	exports.jobLibUrlMap = jobLibUrlMapTemp;


/***/ },
/* 398 */
/*!*************************************************!*\
  !*** ./actions/CommonAction/CommonActionMap.ts ***!
  \*************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var ActionTypes = __webpack_require__(/*! ./CommonActionTypes */ 399);
	var BiMap = __webpack_require__(/*! ../../common/Collect/BiMap */ 391);
	var commonActionMapTemp = {};
	var commonUrlMapTemp = new BiMap();
	var GET_COMMON_ACTIVITIES = '/url/here/GET_COMMON_ACTIVITIES'; //对应action请求url，baseurl之后的路径，
	commonActionMapTemp[ActionTypes.GET_COMMON_ACTIVITIES] = {
	    url: GET_COMMON_ACTIVITIES,
	    moduleID: 'teacher',
	    operate: 'read'
	};
	//为了方便模拟数据产生，需要添加 url - actionID 映射，与上面的actionID basicInfo 成对出现
	commonUrlMapTemp.put(GET_COMMON_ACTIVITIES, ActionTypes.GET_COMMON_ACTIVITIES);
	var GET_COMMON_SOCIALINFO = '/url/here/GET_COMMON_SOCIALINFO'; //对应action请求url，baseurl之后的路径，
	commonActionMapTemp[ActionTypes.GET_COMMON_SOCIALINFO] = {
	    url: GET_COMMON_SOCIALINFO,
	    moduleID: 'teacher',
	    operate: 'read'
	};
	//为了方便模拟数据产生，需要添加 url - actionID 映射，与上面的actionID basicInfo 成对出现
	commonUrlMapTemp.put(GET_COMMON_SOCIALINFO, ActionTypes.GET_COMMON_SOCIALINFO);
	//取消关注
	var SET_COMMON_CANCELFOLLOWED = '/url/here/SET_COMMON_CANCELFOLLOWED'; //对应action请求url，baseurl之后的路径，
	commonActionMapTemp[ActionTypes.SET_COMMON_CANCELFOLLOWED] = {
	    url: SET_COMMON_CANCELFOLLOWED,
	    moduleID: 'search',
	    operate: 'read'
	};
	//为了方便模拟数据产生，需要添加 url - actionID 映射，与上面的actionID basicInfo 成对出现
	commonUrlMapTemp.put(SET_COMMON_CANCELFOLLOWED, ActionTypes.SET_COMMON_CANCELFOLLOWED);
	//加关注
	var SET_COMMON_BECOMEFOLLOWER = '/url/here/SET_COMMON_BECOMEFOLLOWER'; //对应action请求url，baseurl之后的路径，
	commonActionMapTemp[ActionTypes.SET_COMMON_BECOMEFOLLOWER] = {
	    url: SET_COMMON_BECOMEFOLLOWER,
	    moduleID: 'search',
	    operate: 'read'
	};
	//为了方便模拟数据产生，需要添加 url - actionID 映射，与上面的actionID basicInfo 成对出现
	commonUrlMapTemp.put(SET_COMMON_BECOMEFOLLOWER, ActionTypes.SET_COMMON_BECOMEFOLLOWER);
	//
	var GET_COMMON_OTHERUSERREGIONSCHOOLINFO = '/url/here/GET_COMMON_OTHERUSERREGIONSCHOOLINFO'; //对应action请求url，baseurl之后的路径，
	commonActionMapTemp[ActionTypes.GET_COMMON_OTHERUSERREGIONSCHOOLINFO] = {
	    url: GET_COMMON_OTHERUSERREGIONSCHOOLINFO,
	    moduleID: 'search',
	    operate: 'read',
	    useMockData: false };
	//为了方便模拟数据产生，需要添加 url - actionID 映射，与上面的actionID basicInfo 成对出现
	commonUrlMapTemp.put(GET_COMMON_OTHERUSERREGIONSCHOOLINFO, ActionTypes.GET_COMMON_OTHERUSERREGIONSCHOOLINFO);
	var ADD_COMMON_VISITRECORD = '/stuLatestVisitor/Set/saveStuLatestVisitor'; //对应action请求url，baseurl之后的路径，
	commonActionMapTemp[ActionTypes.ADD_COMMON_VISITRECORD] = {
	    url: ADD_COMMON_VISITRECORD,
	    moduleID: 'search',
	    operate: 'read',
	    useMockData: false
	};
	//为了方便模拟数据产生，需要添加 url - actionID 映射，与上面的actionID basicInfo 成对出现
	commonUrlMapTemp.put(ADD_COMMON_VISITRECORD, ActionTypes.ADD_COMMON_VISITRECORD);
	exports.commonUrlMap = commonUrlMapTemp;
	exports.commonActionMap = commonActionMapTemp;


/***/ },
/* 399 */
/*!***************************************************!*\
  !*** ./actions/CommonAction/CommonActionTypes.ts ***!
  \***************************************************/
/***/ function(module, exports) {

	//所有程序中用到的有关此模块的actionID 都引用于此 ****必须全局唯一*****
	"use strict";
	// 公共 获取最新动态
	exports.GET_COMMON_ACTIVITIES = "GET_COMMON_ACTIVITIES";
	// 公共 获取关注人数与粉丝人数
	exports.GET_COMMON_SOCIALINFO = "GET_COMMON_SOCIALINFO";
	//取消好友关注
	exports.SET_COMMON_CANCELFOLLOWED = "SET_COMMON_CANCELFOLLOWED";
	//加好友关注
	exports.SET_COMMON_BECOMEFOLLOWER = "SET_COMMON_BECOMEFOLLOWER";
	exports.ADD_COMMON_VISITRECORD = "ADD_COMMON_VISITRECORD";
	exports.GET_COMMON_OTHERUSERREGIONSCHOOLINFO = "GET_COMMON_OTHERUSERREGIONSCHOOLINFO";
	exports.SET_COMMON_COMMENT = "SET_COMMON_COMMENT";
	exports.GET_COMMON_NOTIFICATIONS = "GET_COMMON_NOTIFICATIONS";
	exports.SET_COMMON_LIKE = "SET_COMMON_LIKE";
	exports.GET_COMMON_NATIVEPLACEINFO = "GET_COMMON_NATIVEPLACEINFO";
	exports.GET_COMMON_SELFUSERINFO = "GET_COMMON_SELFUSERINFO";
	exports.SET_COMMON_SELFUSERINFO = "SET_COMMON_SELFUSERINFO";
	exports.SET_COMMON_PASSWORD = "SET_COMMON_PASSWORD";
	exports.SET_COMMON_ADVICE = "SET_COMMON_ADVICE";


/***/ },
/* 400 */
/*!*******************************************************!*\
  !*** ./actions/TermAnalysis/TermAnalysisActionMap.ts ***!
  \*******************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	// define action basic info here
	var ActionTypes = __webpack_require__(/*! ./TermAnalysisActionTypes */ 401);
	var BiMap = __webpack_require__(/*! ../../common/Collect/BiMap */ 391);
	var termAnalysisUrlMapTemp = new BiMap();
	var termAnalysisActionMapTemp = {};
	//班级积分排名
	var rankInClassUrl = "/termAnalysis/get/rankInClass";
	termAnalysisActionMapTemp[ActionTypes.GET_STUDENT_RANKINCLASS] = {
	    url: rankInClassUrl,
	    moduleID: "termAnalysis",
	    operate: "read"
	};
	termAnalysisUrlMapTemp.put(rankInClassUrl, ActionTypes.GET_STUDENT_RANKINCLASS); //url - actionID 映射
	//获取成长积分记录
	var integralScoreRecordUrl = "/termAnalysis/get/integralScoreRecord";
	termAnalysisActionMapTemp[ActionTypes.GET_STUDENT_INTEGRALSCORERECORD] = {
	    url: integralScoreRecordUrl,
	    moduleID: "termAnalysis",
	    operate: "read"
	};
	termAnalysisUrlMapTemp.put(integralScoreRecordUrl, ActionTypes.GET_STUDENT_INTEGRALSCORERECORD); //url - actionID 映射
	//月度总结
	var monthSummaryUrl = "/stuMonthSummary/Get/stuMonthSummarys";
	termAnalysisActionMapTemp[ActionTypes.GET_STUDENT_MONTHSUMMARY] = {
	    url: monthSummaryUrl,
	    moduleID: "termAnalysis",
	    operate: "read",
	    useMockData: false
	};
	termAnalysisUrlMapTemp.put(monthSummaryUrl, ActionTypes.GET_STUDENT_MONTHSUMMARY); //url - actionID 映射
	//月度总结---按月份保存textarea
	var setMonthSummaryUrl = "/stuMonthSummary/Set/saveStuMonthSummarys";
	termAnalysisActionMapTemp[ActionTypes.SET_STUDENT_MONTHSUMMARY] = {
	    url: setMonthSummaryUrl,
	    moduleID: "termAnalysis",
	    operate: "read",
	    useMockData: false
	};
	termAnalysisUrlMapTemp.put(setMonthSummaryUrl, ActionTypes.SET_STUDENT_MONTHSUMMARY); //url - actionID 映射
	//学期总结
	var semesterSummaryUrl = "/stuTermSummary/Get/stuTermSummarys";
	termAnalysisActionMapTemp[ActionTypes.GET_STUDENT_SEMESTERSUMMARY] = {
	    url: semesterSummaryUrl,
	    moduleID: "termAnalysis",
	    operate: "read",
	    useMockData: false
	};
	termAnalysisUrlMapTemp.put(semesterSummaryUrl, ActionTypes.GET_STUDENT_SEMESTERSUMMARY); //url - actionID 映射
	//学期总结--保存评语textarea  --- 学期总评
	var setSemesterSummaryUrl = "/stuTermSummary/Set/saveStuTermSummarys";
	termAnalysisActionMapTemp[ActionTypes.SET_STUDENT_SEMESTERSUMMARY] = {
	    url: setSemesterSummaryUrl,
	    moduleID: "termAnalysis",
	    operate: "read",
	    useMockData: false
	};
	termAnalysisUrlMapTemp.put(setSemesterSummaryUrl, ActionTypes.SET_STUDENT_SEMESTERSUMMARY); //url - actionID 映射
	//学期总结--保存评语textarea  --- 品德操守等等
	var setSemesterSummaryQualityUrl = "/stuTermSummary/Set/saveStuTermQualitySummarys";
	termAnalysisActionMapTemp[ActionTypes.SET_STUDENT_SEMESTERQUALITYSUMMARY] = {
	    url: setSemesterSummaryQualityUrl,
	    moduleID: "termAnalysis",
	    operate: "read",
	    useMockData: false
	};
	termAnalysisUrlMapTemp.put(setSemesterSummaryQualityUrl, ActionTypes.SET_STUDENT_SEMESTERQUALITYSUMMARY); //url - actionID 映射
	//老师评语
	var teacherEvaluateUrl = "/studentEvaluationScore/Get/studentEvaluationOverallWithScore";
	termAnalysisActionMapTemp[ActionTypes.GET_STUDENT_TEACHEREVALUATE] = {
	    url: teacherEvaluateUrl,
	    moduleID: "termAnalysis",
	    operate: "read",
	    useMockData: false
	};
	termAnalysisUrlMapTemp.put(teacherEvaluateUrl, ActionTypes.GET_STUDENT_TEACHEREVALUATE); //url - actionID 映射
	//学业水平记录
	var scoreWithTermUrl = "/termAnalysis/get/scoreWithTerm";
	termAnalysisActionMapTemp[ActionTypes.GET_STUDENT_SCORE] = {
	    url: scoreWithTermUrl,
	    moduleID: "termAnalysis",
	    operate: "read"
	};
	termAnalysisUrlMapTemp.put(scoreWithTermUrl, ActionTypes.GET_STUDENT_SCORE); //url - actionID 映射
	//同学互评--星星评价
	var evaluateStudentStarUrl = "/termAnalysis/get/evaluateStudentStar";
	termAnalysisActionMapTemp[ActionTypes.GET_EVALUATE_STUDENT_STAR] = {
	    url: evaluateStudentStarUrl,
	    moduleID: "termAnalysis",
	    operate: "read"
	};
	termAnalysisUrlMapTemp.put(evaluateStudentStarUrl, ActionTypes.GET_EVALUATE_STUDENT_STAR); //url - actionID 映射
	//同学互评--我的星星得分
	var evaluateStudentMySelfStarUrl = "/termAnalysis/get/evaluateStudentMySelfStar";
	termAnalysisActionMapTemp[ActionTypes.GET_EVALUATE_STUDENT_MYSELF_STAR] = {
	    url: evaluateStudentMySelfStarUrl,
	    moduleID: "termAnalysis",
	    operate: "read"
	};
	termAnalysisUrlMapTemp.put(evaluateStudentMySelfStarUrl, ActionTypes.GET_EVALUATE_STUDENT_MYSELF_STAR); //url - actionID 映射
	exports.termAnalysisActionMap = termAnalysisActionMapTemp;
	exports.termAnalysisUrlMap = termAnalysisUrlMapTemp;


/***/ },
/* 401 */
/*!*********************************************************!*\
  !*** ./actions/TermAnalysis/TermAnalysisActionTypes.ts ***!
  \*********************************************************/
/***/ function(module, exports) {

	//所有程序中用到的有关此模块的actionID 都引用于此 ****必须全局唯一*****
	"use strict";
	//学生学期整体分析
	//获取班级积分排名
	exports.GET_STUDENT_RANKINCLASS = "GET_STUDENT_RANKINCLASS";
	// 获取成长积分记录
	exports.GET_STUDENT_INTEGRALSCORERECORD = "GET_STUDENT_INTEGRALSCORERECORD";
	// 获取月度总结 // 保存月度总结
	exports.GET_STUDENT_MONTHSUMMARY = "GET_STUDENT_MONTHSUMMARY";
	exports.SET_STUDENT_MONTHSUMMARY = "SET_STUDENT_MONTHSUMMARY";
	// 获取学期总结 // 保存学期总结
	exports.GET_STUDENT_SEMESTERSUMMARY = "GET_STUDENT_SEMESTERSUMMARY";
	exports.SET_STUDENT_SEMESTERSUMMARY = "SET_STUDENT_SEMESTERSUMMARY";
	exports.SET_STUDENT_SEMESTERQUALITYSUMMARY = "SET_STUDENT_SEMESTERQUALITYSUMMARY";
	// 获取老师评语
	exports.GET_STUDENT_TEACHEREVALUATE = "GET_STUDENT_TEACHEREVALUATE";
	// 获取学业水平记录
	exports.GET_STUDENT_SCORE = "GET_STUDENT_SCORE";
	// 获取综合素质档案
	exports.GET_STUDENT_COMPREHENSIVEQUALITYRECORD = "GET_STUDENT_COMPREHENSIVEQUALITYRECORD";
	// 同学互评
	exports.GET_EVALUATE_STUDENT_STAR = "GET_EVALUATE_STUDENT_STAR";
	//同学互评 ---  我的星星得分
	exports.GET_EVALUATE_STUDENT_MYSELF_STAR = "GET_EVALUATE_STUDENT_MYSELF_STAR";


/***/ },
/* 402 */
/*!***********************************************!*\
  !*** ./actions/MajorLib/MajorLibActionMap.ts ***!
  \***********************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	// define action basic info here
	var ActionTypes = __webpack_require__(/*! ./MajorLibActionTypes */ 366);
	var BiMap = __webpack_require__(/*! ../../common/Collect/BiMap */ 391);
	var majorLibUrlMapTemp = new BiMap();
	var majorLibActionMapTemp = {};
	//专业列表
	var majorLibUrl = "/majorLibrary/Get/majorHomeDickInfos";
	majorLibActionMapTemp[ActionTypes.GET_MAJORLIB_MAJORLIB] = {
	    url: majorLibUrl,
	    moduleID: "majorLib",
	    operate: "read",
	    useMockData: true
	};
	majorLibUrlMapTemp.put(majorLibUrl, ActionTypes.GET_MAJORLIB_MAJORLIB); //url - actionID 映射
	//专业详情
	var majorLibDetailUrl = "/majorLibrary/Get/majorDetail";
	majorLibActionMapTemp[ActionTypes.GET_MAJORLIB_MAJORDETAIL] = {
	    url: majorLibDetailUrl,
	    moduleID: "majorLib",
	    operate: "read",
	    useMockData: true
	};
	majorLibUrlMapTemp.put(majorLibDetailUrl, ActionTypes.GET_MAJORLIB_MAJORDETAIL); //url - actionID 映射
	exports.majorLibActionMap = majorLibActionMapTemp;
	exports.majorLibUrlMap = majorLibUrlMapTemp;


/***/ },
/* 403 */
/*!*******************************************!*\
  !*** ./actions/Search/SearchActionMap.ts ***!
  \*******************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var ActionTypes = __webpack_require__(/*! ./SearchActionTypes */ 373);
	var BiMap = __webpack_require__(/*! ../../common/Collect/BiMap */ 391);
	var searchActionMapTemp = {};
	var GET_SEARCH_PERSONALINFOLIST = '/stuSearch/Get/stuInfos'; //对应action请求url，baseurl之后的路径，
	searchActionMapTemp[ActionTypes.GET_SEARCH_PERSONALINFOLIST] = {
	    url: GET_SEARCH_PERSONALINFOLIST,
	    moduleID: "search",
	    operate: "read",
	    useMockData: false,
	};
	exports.searchActionMap = searchActionMapTemp;
	//为了方便模拟数据产生，需要添加 url - actionID 映射，与上面的actionID basicInfo 成对出现
	var searchUrlMapTemp = new BiMap();
	searchUrlMapTemp.put(GET_SEARCH_PERSONALINFOLIST, ActionTypes.GET_SEARCH_PERSONALINFOLIST);
	//获取搜索结果的筛选项的值
	var GET_SEARCH_OPTIONS = '/url/here/GET_SEARCH_OPTIONS'; //对应action请求url，baseurl之后的路径，
	searchActionMapTemp[ActionTypes.GET_SEARCH_OPTIONS] = {
	    url: GET_SEARCH_OPTIONS,
	    moduleID: 'search',
	    operate: 'read',
	};
	searchUrlMapTemp.put(GET_SEARCH_OPTIONS, ActionTypes.GET_SEARCH_OPTIONS);
	exports.searchUrlMap = searchUrlMapTemp;


/***/ },
/* 404 */
/*!*************************************************!*\
  !*** ./actions/AdminPage/AdminPageActionMap.ts ***!
  \*************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	// define action basic info here
	var ActionTypes = __webpack_require__(/*! ./AdminPageActionTypes */ 382);
	var BiMap = __webpack_require__(/*! ../../common/Collect/BiMap */ 391);
	var adminPageActionMapTemp = {};
	var adminPageUrlMapTemp = new BiMap();
	var READ_ADMIN_USERINFO = '/url/here/READ_ADMIN_USERINFO'; //对应action请求url，baseurl之后的路径，
	adminPageActionMapTemp[ActionTypes.READ_ADMIN_USERINFO] = {
	    url: READ_ADMIN_USERINFO,
	    modules: [
	        {
	            moduleID: 'adminPage',
	            operate: ['read']
	        }
	    ]
	};
	//为了方便模拟数据产生，需要添加 url - actionID 映射，与上面的actionID basicInfo 成对出现
	adminPageUrlMapTemp.put(READ_ADMIN_USERINFO, ActionTypes.READ_ADMIN_USERINFO);
	var GET_ADMIN_TERMWITHGRADEYEARSTRUCT = '/url/here/GET_ADMIN_TERMWITHGRADEYEARSTRUCT'; //对应action请求url，baseurl之后的路径，
	adminPageActionMapTemp[ActionTypes.GET_ADMIN_TERMWITHGRADEYEARSTRUCT] = {
	    url: GET_ADMIN_TERMWITHGRADEYEARSTRUCT,
	    modules: [
	        {
	            moduleID: 'adminPage',
	            operate: ['read']
	        }
	    ]
	};
	adminPageUrlMapTemp.put(GET_ADMIN_TERMWITHGRADEYEARSTRUCT, ActionTypes.GET_ADMIN_TERMWITHGRADEYEARSTRUCT);
	var GET_ADMIN_SCHOOLACCOUNTSTATISTIC = '/url/here/GET_ADMIN_SCHOOLACCOUNTSTATISTIC'; //对应action请求url，baseurl之后的路径，
	adminPageActionMapTemp[ActionTypes.GET_ADMIN_SCHOOLACCOUNTSTATISTIC] = {
	    url: GET_ADMIN_SCHOOLACCOUNTSTATISTIC,
	    modules: [
	        {
	            moduleID: 'adminPage',
	            operate: ['read']
	        }
	    ]
	};
	adminPageUrlMapTemp.put(GET_ADMIN_SCHOOLACCOUNTSTATISTIC, ActionTypes.GET_ADMIN_SCHOOLACCOUNTSTATISTIC);
	var READ_ADMIN_MANAGERCOUNT = '/url/here/READ_ADMIN_MANAGERCOUNT'; //对应action请求url，baseurl之后的路径，
	adminPageActionMapTemp[ActionTypes.READ_ADMIN_MANAGERCOUNT] = {
	    url: READ_ADMIN_MANAGERCOUNT,
	    modules: [
	        {
	            moduleID: 'adminPage',
	            operate: ['read']
	        }
	    ]
	};
	adminPageUrlMapTemp.put(READ_ADMIN_MANAGERCOUNT, ActionTypes.READ_ADMIN_MANAGERCOUNT);
	var CREATE_ADMIN_MANAGERCOUNT = '/url/here/CREATE_ADMIN_MANAGERCOUNT'; //对应action请求url，baseurl之后的路径，
	adminPageActionMapTemp[ActionTypes.CREATE_ADMIN_MANAGERCOUNT] = {
	    url: CREATE_ADMIN_MANAGERCOUNT,
	    modules: [
	        {
	            moduleID: 'adminPage',
	            operate: ['read']
	        }
	    ]
	};
	adminPageUrlMapTemp.put(CREATE_ADMIN_MANAGERCOUNT, ActionTypes.CREATE_ADMIN_MANAGERCOUNT);
	var UPDATE_ADMIN_MANAGERCOUNT = '/url/here/UPDATE_ADMIN_MANAGERCOUNT'; //对应action请求url，baseurl之后的路径，
	adminPageActionMapTemp[ActionTypes.UPDATE_ADMIN_MANAGERCOUNT] = {
	    url: UPDATE_ADMIN_MANAGERCOUNT,
	    modules: [
	        {
	            moduleID: 'adminPage',
	            operate: ['read']
	        }
	    ]
	};
	adminPageUrlMapTemp.put(UPDATE_ADMIN_MANAGERCOUNT, ActionTypes.UPDATE_ADMIN_MANAGERCOUNT);
	var DELETE_ADMIN_MANAGERCOUNT = '/url/here/DELETE_ADMIN_MANAGERCOUNT'; //对应action请求url，baseurl之后的路径，
	adminPageActionMapTemp[ActionTypes.DELETE_ADMIN_MANAGERCOUNT] = {
	    url: DELETE_ADMIN_MANAGERCOUNT,
	    modules: [
	        {
	            moduleID: 'adminPage',
	            operate: ['read']
	        }
	    ]
	};
	adminPageUrlMapTemp.put(DELETE_ADMIN_MANAGERCOUNT, ActionTypes.DELETE_ADMIN_MANAGERCOUNT);
	var READ_ADMIN_STUDENTACCOUNT = '/url/here/READ_ADMIN_STUDENTACCOUNT'; //对应action请求url，baseurl之后的路径，
	adminPageActionMapTemp[ActionTypes.READ_ADMIN_STUDENTACCOUNT] = {
	    url: READ_ADMIN_STUDENTACCOUNT,
	    modules: [
	        {
	            moduleID: 'adminPage',
	            operate: ['read']
	        }
	    ]
	};
	adminPageUrlMapTemp.put(READ_ADMIN_STUDENTACCOUNT, ActionTypes.READ_ADMIN_STUDENTACCOUNT);
	var CREATE_ADMIN_STUDENTACCOUNT = '/url/here/CREATE_ADMIN_STUDENTACCOUNT'; //对应action请求url，baseurl之后的路径，
	adminPageActionMapTemp[ActionTypes.CREATE_ADMIN_STUDENTACCOUNT] = {
	    url: CREATE_ADMIN_STUDENTACCOUNT,
	    modules: [
	        {
	            moduleID: 'adminPage',
	            operate: ['read']
	        }
	    ]
	};
	adminPageUrlMapTemp.put(CREATE_ADMIN_STUDENTACCOUNT, ActionTypes.CREATE_ADMIN_STUDENTACCOUNT);
	var UPDATE_ADMIN_STUDENTACCOUNT = '/url/here/UPDATE_ADMIN_STUDENTACCOUNT'; //对应action请求url，baseurl之后的路径，
	adminPageActionMapTemp[ActionTypes.UPDATE_ADMIN_STUDENTACCOUNT] = {
	    url: UPDATE_ADMIN_STUDENTACCOUNT,
	    modules: [
	        {
	            moduleID: 'adminPage',
	            operate: ['read']
	        }
	    ]
	};
	adminPageUrlMapTemp.put(UPDATE_ADMIN_STUDENTACCOUNT, ActionTypes.UPDATE_ADMIN_STUDENTACCOUNT);
	var DELETE_ADMIN_STUDENTACCOUNT = '/url/here/DELETE_ADMIN_STUDENTACCOUNT'; //对应action请求url，baseurl之后的路径，
	adminPageActionMapTemp[ActionTypes.DELETE_ADMIN_STUDENTACCOUNT] = {
	    url: DELETE_ADMIN_STUDENTACCOUNT,
	    modules: [
	        {
	            moduleID: 'adminPage',
	            operate: ['read']
	        }
	    ]
	};
	adminPageUrlMapTemp.put(DELETE_ADMIN_STUDENTACCOUNT, ActionTypes.DELETE_ADMIN_STUDENTACCOUNT);
	var READ_ADMIN_EXAMINFO = '/url/here/READ_ADMIN_EXAMINFO'; //对应action请求url，baseurl之后的路径，
	adminPageActionMapTemp[ActionTypes.READ_ADMIN_EXAMINFO] = {
	    url: READ_ADMIN_EXAMINFO,
	    modules: [
	        {
	            moduleID: 'adminPage',
	            operate: ['read']
	        }
	    ]
	};
	adminPageUrlMapTemp.put(READ_ADMIN_EXAMINFO, ActionTypes.READ_ADMIN_EXAMINFO);
	var CREATE_ADMIN_EXAMINFO = '/url/here/CREATE_ADMIN_EXAMINFO'; //对应action请求url，baseurl之后的路径，
	adminPageActionMapTemp[ActionTypes.CREATE_ADMIN_EXAMINFO] = {
	    url: CREATE_ADMIN_EXAMINFO,
	    modules: [
	        {
	            moduleID: 'adminPage',
	            operate: ['read']
	        }
	    ]
	};
	adminPageUrlMapTemp.put(CREATE_ADMIN_EXAMINFO, ActionTypes.CREATE_ADMIN_EXAMINFO);
	var UPDATE_ADMIN_EXAMINFO = '/url/here/UPDATE_ADMIN_EXAMINFO'; //对应action请求url，baseurl之后的路径，
	adminPageActionMapTemp[ActionTypes.UPDATE_ADMIN_EXAMINFO] = {
	    url: UPDATE_ADMIN_EXAMINFO,
	    modules: [
	        {
	            moduleID: 'adminPage',
	            operate: ['read']
	        }
	    ]
	};
	adminPageUrlMapTemp.put(UPDATE_ADMIN_EXAMINFO, ActionTypes.UPDATE_ADMIN_EXAMINFO);
	var DELETE_ADMIN_EXAMINFO = '/url/here/DELETE_ADMIN_EXAMINFO'; //对应action请求url，baseurl之后的路径，
	adminPageActionMapTemp[ActionTypes.DELETE_ADMIN_EXAMINFO] = {
	    url: DELETE_ADMIN_EXAMINFO,
	    modules: [
	        {
	            moduleID: 'adminPage',
	            operate: ['read']
	        }
	    ]
	};
	adminPageUrlMapTemp.put(DELETE_ADMIN_EXAMINFO, ActionTypes.DELETE_ADMIN_EXAMINFO);
	var UPLOAD_ADMIN_EXAMSCORE = '/url/here/UPLOAD_ADMIN_EXAMSCORE'; //对应action请求url，baseurl之后的路径，
	adminPageActionMapTemp[ActionTypes.UPLOAD_ADMIN_EXAMSCORE] = {
	    url: UPLOAD_ADMIN_EXAMSCORE,
	    modules: [
	        {
	            moduleID: 'adminPage',
	            operate: ['read']
	        }
	    ]
	};
	adminPageUrlMapTemp.put(UPLOAD_ADMIN_EXAMSCORE, ActionTypes.UPLOAD_ADMIN_EXAMSCORE);
	var GET_ADMIN_MONTHTHEME = '/url/here/GET_ADMIN_MONTHTHEME'; //对应action请求url，baseurl之后的路径，
	adminPageActionMapTemp[ActionTypes.GET_ADMIN_MONTHTHEME] = {
	    url: GET_ADMIN_MONTHTHEME,
	    modules: [
	        {
	            moduleID: 'adminPage',
	            operate: ['read']
	        }
	    ]
	};
	adminPageUrlMapTemp.put(GET_ADMIN_MONTHTHEME, ActionTypes.GET_ADMIN_MONTHTHEME);
	var SET_ADMIN_MONTHTHEME = '/url/here/SET_ADMIN_MONTHTHEME'; //对应action请求url，baseurl之后的路径，
	adminPageActionMapTemp[ActionTypes.SET_ADMIN_MONTHTHEME] = {
	    url: SET_ADMIN_MONTHTHEME,
	    modules: [
	        {
	            moduleID: 'adminPage',
	            operate: ['read']
	        }
	    ]
	};
	adminPageUrlMapTemp.put(SET_ADMIN_MONTHTHEME, ActionTypes.SET_ADMIN_MONTHTHEME);
	var READ_ADMIN_EVENTHOLDER = '/url/here/READ_ADMIN_EVENTHOLDER'; //对应action请求url，baseurl之后的路径，
	adminPageActionMapTemp[ActionTypes.READ_ADMIN_EVENTHOLDER] = {
	    url: READ_ADMIN_EVENTHOLDER,
	    modules: [
	        {
	            moduleID: 'adminPage',
	            operate: ['read']
	        }
	    ]
	};
	adminPageUrlMapTemp.put(READ_ADMIN_EVENTHOLDER, ActionTypes.READ_ADMIN_EVENTHOLDER);
	var CREATE_ADMIN_EVENTHOLDER = '/url/here/CREATE_ADMIN_EVENTHOLDER'; //对应action请求url，baseurl之后的路径，
	adminPageActionMapTemp[ActionTypes.CREATE_ADMIN_EVENTHOLDER] = {
	    url: CREATE_ADMIN_EVENTHOLDER,
	    modules: [
	        {
	            moduleID: 'adminPage',
	            operate: ['read']
	        }
	    ]
	};
	adminPageUrlMapTemp.put(CREATE_ADMIN_EVENTHOLDER, ActionTypes.CREATE_ADMIN_EVENTHOLDER);
	var UPDATE_ADMIN_EVENTHOLDER = '/url/here/UPDATE_ADMIN_EVENTHOLDER'; //对应action请求url，baseurl之后的路径，
	adminPageActionMapTemp[ActionTypes.UPDATE_ADMIN_EVENTHOLDER] = {
	    url: UPDATE_ADMIN_EVENTHOLDER,
	    modules: [
	        {
	            moduleID: 'adminPage',
	            operate: ['read']
	        }
	    ]
	};
	adminPageUrlMapTemp.put(UPDATE_ADMIN_EVENTHOLDER, ActionTypes.UPDATE_ADMIN_EVENTHOLDER);
	var DELETE_ADMIN_EVENTHOLDER = '/url/here/DELETE_ADMIN_EVENTHOLDER'; //对应action请求url，baseurl之后的路径，
	adminPageActionMapTemp[ActionTypes.DELETE_ADMIN_EVENTHOLDER] = {
	    url: DELETE_ADMIN_EVENTHOLDER,
	    modules: [
	        {
	            moduleID: 'adminPage',
	            operate: ['read']
	        }
	    ]
	};
	adminPageUrlMapTemp.put(DELETE_ADMIN_EVENTHOLDER, ActionTypes.DELETE_ADMIN_EVENTHOLDER);
	var READ_ADMIN_IMPRESSIONWORD = '/url/here/READ_ADMIN_IMPRESSIONWORD'; //对应action请求url，baseurl之后的路径，
	adminPageActionMapTemp[ActionTypes.READ_ADMIN_IMPRESSIONWORD] = {
	    url: READ_ADMIN_IMPRESSIONWORD,
	    modules: [
	        {
	            moduleID: 'adminPage',
	            operate: ['read']
	        }
	    ]
	};
	adminPageUrlMapTemp.put(READ_ADMIN_IMPRESSIONWORD, ActionTypes.READ_ADMIN_IMPRESSIONWORD);
	var CREATE_ADMIN_IMPRESSIONWORD = '/url/here/CREATE_ADMIN_IMPRESSIONWORD'; //对应action请求url，baseurl之后的路径，
	adminPageActionMapTemp[ActionTypes.CREATE_ADMIN_IMPRESSIONWORD] = {
	    url: CREATE_ADMIN_IMPRESSIONWORD,
	    modules: [
	        {
	            moduleID: 'adminPage',
	            operate: ['read']
	        }
	    ]
	};
	adminPageUrlMapTemp.put(CREATE_ADMIN_IMPRESSIONWORD, ActionTypes.CREATE_ADMIN_IMPRESSIONWORD);
	var UPDATE_ADMIN_IMPRESSIONWORD = '/url/here/UPDATE_ADMIN_IMPRESSIONWORD'; //对应action请求url，baseurl之后的路径，
	adminPageActionMapTemp[ActionTypes.UPDATE_ADMIN_IMPRESSIONWORD] = {
	    url: UPDATE_ADMIN_IMPRESSIONWORD,
	    modules: [
	        {
	            moduleID: 'adminPage',
	            operate: ['read']
	        }
	    ]
	};
	adminPageUrlMapTemp.put(UPDATE_ADMIN_IMPRESSIONWORD, ActionTypes.UPDATE_ADMIN_IMPRESSIONWORD);
	var DELETE_ADMIN_IMPRESSIONWORD = '/url/here/DELETE_ADMIN_IMPRESSIONWORD'; //对应action请求url，baseurl之后的路径，
	adminPageActionMapTemp[ActionTypes.DELETE_ADMIN_IMPRESSIONWORD] = {
	    url: DELETE_ADMIN_IMPRESSIONWORD,
	    modules: [
	        {
	            moduleID: 'adminPage',
	            operate: ['read']
	        }
	    ]
	};
	adminPageUrlMapTemp.put(DELETE_ADMIN_IMPRESSIONWORD, ActionTypes.DELETE_ADMIN_IMPRESSIONWORD);
	var GET_ADMIN_INTEGRALSCOREITEM = '/url/here/GET_ADMIN_INTEGRALSCOREITEM'; //对应action请求url，baseurl之后的路径，
	adminPageActionMapTemp[ActionTypes.GET_ADMIN_INTEGRALSCOREITEM] = {
	    url: GET_ADMIN_INTEGRALSCOREITEM,
	    modules: [
	        {
	            moduleID: 'adminPage',
	            operate: ['read']
	        }
	    ]
	};
	adminPageUrlMapTemp.put(GET_ADMIN_INTEGRALSCOREITEM, ActionTypes.GET_ADMIN_INTEGRALSCOREITEM);
	var SET_ADMIN_INTEGRALSCOREITEM = '/url/here/SET_ADMIN_INTEGRALSCOREITEM'; //对应action请求url，baseurl之后的路径，
	adminPageActionMapTemp[ActionTypes.SET_ADMIN_INTEGRALSCOREITEM] = {
	    url: SET_ADMIN_INTEGRALSCOREITEM,
	    modules: [
	        {
	            moduleID: 'adminPage',
	            operate: ['read']
	        }
	    ]
	};
	adminPageUrlMapTemp.put(SET_ADMIN_INTEGRALSCOREITEM, ActionTypes.SET_ADMIN_INTEGRALSCOREITEM);
	var GET_ADMIN_ACTIVITYLIBSTATISTICS = '/url/here/GET_ADMIN_ACTIVITYLIBSTATISTICS'; //对应action请求url，baseurl之后的路径，
	adminPageActionMapTemp[ActionTypes.GET_ADMIN_ACTIVITYLIBSTATISTICS] = {
	    url: GET_ADMIN_ACTIVITYLIBSTATISTICS,
	    modules: [
	        {
	            moduleID: 'adminPage',
	            operate: ['read']
	        }
	    ]
	};
	adminPageUrlMapTemp.put(GET_ADMIN_ACTIVITYLIBSTATISTICS, ActionTypes.GET_ADMIN_ACTIVITYLIBSTATISTICS);
	var GET_ADMIN_STUDENTACTIVITYSTATISTICS = '/url/here/GET_ADMIN_STUDENTACTIVITYSTATISTICS'; //对应action请求url，baseurl之后的路径，
	adminPageActionMapTemp[ActionTypes.GET_ADMIN_STUDENTACTIVITYSTATISTICS] = {
	    url: GET_ADMIN_STUDENTACTIVITYSTATISTICS,
	    modules: [
	        {
	            moduleID: 'adminPage',
	            operate: ['read']
	        }
	    ]
	};
	adminPageUrlMapTemp.put(GET_ADMIN_STUDENTACTIVITYSTATISTICS, ActionTypes.GET_ADMIN_STUDENTACTIVITYSTATISTICS);
	var READ_ADMIN_STUDENTRECORD = '/url/here/READ_ADMIN_STUDENTRECORD'; //对应action请求url，baseurl之后的路径，
	adminPageActionMapTemp[ActionTypes.READ_ADMIN_STUDENTRECORD] = {
	    url: READ_ADMIN_STUDENTRECORD,
	    modules: [
	        {
	            moduleID: 'adminPage',
	            operate: ['read']
	        }
	    ]
	};
	adminPageUrlMapTemp.put(READ_ADMIN_STUDENTRECORD, ActionTypes.READ_ADMIN_STUDENTRECORD);
	var CREATE_ADMIN_STUDENTRECORD = '/url/here/CREATE_ADMIN_STUDENTRECORD'; //对应action请求url，baseurl之后的路径，
	adminPageActionMapTemp[ActionTypes.CREATE_ADMIN_STUDENTRECORD] = {
	    url: CREATE_ADMIN_STUDENTRECORD,
	    modules: [
	        {
	            moduleID: 'adminPage',
	            operate: ['read']
	        }
	    ]
	};
	adminPageUrlMapTemp.put(CREATE_ADMIN_STUDENTRECORD, ActionTypes.CREATE_ADMIN_STUDENTRECORD);
	var DOWNLOAD_ADMIN_STUDENTRECORD = '/url/here/DOWNLOAD_ADMIN_STUDENTRECORD'; //对应action请求url，baseurl之后的路径，
	adminPageActionMapTemp[ActionTypes.DOWNLOAD_ADMIN_STUDENTRECORD] = {
	    url: DOWNLOAD_ADMIN_STUDENTRECORD,
	    modules: [
	        {
	            moduleID: 'adminPage',
	            operate: ['read']
	        }
	    ]
	};
	adminPageUrlMapTemp.put(DOWNLOAD_ADMIN_STUDENTRECORD, ActionTypes.DOWNLOAD_ADMIN_STUDENTRECORD);
	var READ_ADMIN_REPORTITEM = '/url/here/READ_ADMIN_REPORTITEM'; //对应action请求url，baseurl之后的路径，
	adminPageActionMapTemp[ActionTypes.READ_ADMIN_REPORTITEM] = {
	    url: READ_ADMIN_REPORTITEM,
	    modules: [
	        {
	            moduleID: 'adminPage',
	            operate: ['read']
	        }
	    ]
	};
	adminPageUrlMapTemp.put(READ_ADMIN_REPORTITEM, ActionTypes.READ_ADMIN_REPORTITEM);
	var MARK_ADMIN_REPORTITEM = '/url/here/MARK_ADMIN_REPORTITEM'; //对应action请求url，baseurl之后的路径，
	adminPageActionMapTemp[ActionTypes.MARK_ADMIN_REPORTITEM] = {
	    url: MARK_ADMIN_REPORTITEM,
	    modules: [
	        {
	            moduleID: 'adminPage',
	            operate: ['read']
	        }
	    ]
	};
	adminPageUrlMapTemp.put(MARK_ADMIN_REPORTITEM, ActionTypes.MARK_ADMIN_REPORTITEM);
	var ACCEPT_ADMIN_REPORTITEM = '/url/here/ACCEPT_ADMIN_REPORTITEM'; //对应action请求url，baseurl之后的路径，
	adminPageActionMapTemp[ActionTypes.ACCEPT_ADMIN_REPORTITEM] = {
	    url: ACCEPT_ADMIN_REPORTITEM,
	    modules: [
	        {
	            moduleID: 'adminPage',
	            operate: ['read']
	        }
	    ]
	};
	adminPageUrlMapTemp.put(ACCEPT_ADMIN_REPORTITEM, ActionTypes.ACCEPT_ADMIN_REPORTITEM);
	var DELETE_ADMIN_REPORTITEM = '/url/here/DELETE_ADMIN_REPORTITEM'; //对应action请求url，baseurl之后的路径，
	adminPageActionMapTemp[ActionTypes.DELETE_ADMIN_REPORTITEM] = {
	    url: DELETE_ADMIN_REPORTITEM,
	    modules: [
	        {
	            moduleID: 'adminPage',
	            operate: ['read']
	        }
	    ]
	};
	adminPageUrlMapTemp.put(DELETE_ADMIN_REPORTITEM, ActionTypes.DELETE_ADMIN_REPORTITEM);
	var GET_ADMIN_IMPRESSIONTYPES = '/url/here/GET_ADMIN_IMPRESSIONTYPES'; //对应action请求url，baseurl之后的路径，
	adminPageActionMapTemp[ActionTypes.GET_ADMIN_IMPRESSIONTYPES] = {
	    url: GET_ADMIN_IMPRESSIONTYPES,
	    modules: [
	        {
	            moduleID: 'adminPage',
	            operate: ['read']
	        }
	    ]
	};
	adminPageUrlMapTemp.put(GET_ADMIN_IMPRESSIONTYPES, ActionTypes.GET_ADMIN_IMPRESSIONTYPES);
	//校园寻星--获取评选条目
	var GET_ADMIN_STAROPTIONS = '/url/here/GET_ADMIN_STAROPTIONS'; //对应action请求url，baseurl之后的路径，
	adminPageActionMapTemp[ActionTypes.GET_ADMIN_STAROPTIONS] = {
	    url: GET_ADMIN_STAROPTIONS,
	    modules: [
	        {
	            moduleID: 'adminPage',
	            operate: ['read']
	        }
	    ]
	};
	adminPageUrlMapTemp.put(GET_ADMIN_STAROPTIONS, ActionTypes.GET_ADMIN_STAROPTIONS);
	exports.adminPageActionMap = adminPageActionMapTemp;
	exports.adminPageUrlMap = adminPageUrlMapTemp;


/***/ },
/* 405 */
/*!*******************************************************!*\
  !*** ./actions/AssessCenter/AssessCenterActionMap.ts ***!
  \*******************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var ActionTypes = __webpack_require__(/*! ./AssessCenterActionTypes */ 406);
	var BiMap = __webpack_require__(/*! ../../common/Collect/BiMap */ 391);
	var assessCenterActionMapTemp = {};
	exports.assessCenterActionMap = assessCenterActionMapTemp;
	//为了方便模拟数据产生，需要添加 url - actionID 映射，与上面的actionID basicInfo 成对出现
	var assessCenterUrlMapTemp = new BiMap();
	//获取Holland测试的结果
	var GET_ASSESSCENTER_HOLLAND_REPORT = '/url/here/GET_ASSESSCENTER_HOLLAND_REPORT'; //对应action请求url，baseurl之后的路径，
	assessCenterActionMapTemp[ActionTypes.GET_ASSESSCENTER_HOLLAND_REPORT] = {
	    url: GET_ASSESSCENTER_HOLLAND_REPORT,
	    moduleID: 'assessCenter',
	    operate: 'read'
	};
	assessCenterUrlMapTemp.put(GET_ASSESSCENTER_HOLLAND_REPORT, ActionTypes.GET_ASSESSCENTER_HOLLAND_REPORT);
	//获取MBTI测试的结果
	var GET_ASSESSCENTER_MBTI_REPORT = '/url/here/GET_ASSESSCENTER_MBTI_REPORT'; //对应action请求url，baseurl之后的路径，
	assessCenterActionMapTemp[ActionTypes.GET_ASSESSCENTER_MBTI_REPORT] = {
	    url: GET_ASSESSCENTER_MBTI_REPORT,
	    moduleID: 'assessCenter',
	    operate: 'read'
	};
	assessCenterUrlMapTemp.put(GET_ASSESSCENTER_MBTI_REPORT, ActionTypes.GET_ASSESSCENTER_MBTI_REPORT);
	exports.assessCenterUrlMap = assessCenterUrlMapTemp;


/***/ },
/* 406 */
/*!*********************************************************!*\
  !*** ./actions/AssessCenter/AssessCenterActionTypes.ts ***!
  \*********************************************************/
/***/ function(module, exports) {

	//所有程序中用到的有关此模块的actionID 都引用于此 ****必须全局唯一*****
	"use strict";
	//获取MBTI测试结果
	exports.GET_ASSESSCENTER_MBTI_REPORT = "GET_ASSESSCENTER_MBTI_REPORT";
	//获取HOLLAND 测试结果
	exports.GET_ASSESSCENTER_HOLLAND_REPORT = "GET_ASSESSCENTER_HOLLAND_REPORT";
	// 提交MI测试答案
	exports.SUBMIT_ASSESSCENTER_MI_ANSWERS = "SUBMIT_ASSESSCENTER_MI_ANSWERS";
	// 提交价值观测试答案
	exports.SUBMIT_ASSESSCENTER_VALUE_ANSWERS = "SUBMIT_ASSESSCENTER_VALUE_ANSWERS";


/***/ },
/* 407 */
/*!******************************************************************!*\
  !*** ./actions/AssessCenter/ValueAssess/ValueAssessActionMap.ts ***!
  \******************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	// define action basic info here
	var ActionTypes = __webpack_require__(/*! ./ValueAssessActionTypes */ 408);
	var BiMap = __webpack_require__(/*! ../../../common/Collect/BiMap */ 391);
	var ValueAssessActionMapTemp = {};
	//获取价值观测试完成状态
	var GET_VALUEASSESS_VALUEASSESSFINISHSTATE = "/url/here/GET_VALUEASSESS_VALUEASSESSFINISHSTATE"; //对应action请求url，baseurl之后的路径，必须‘/’开头，
	ValueAssessActionMapTemp[ActionTypes.GET_VALUEASSESS_VALUEASSESSFINISHSTATE] = {
	    url: GET_VALUEASSESS_VALUEASSESSFINISHSTATE,
	    moduleID: "ValueAssess",
	    operate: "read"
	};
	exports.ValueAssessActionMap = ValueAssessActionMapTemp;
	//为了方便模拟数据产生，需要添加 url - actionID 映射，与上面的actionID basicInfo 成对出现
	var ValueAssessUrlMapTemp = new BiMap();
	ValueAssessUrlMapTemp.put(GET_VALUEASSESS_VALUEASSESSFINISHSTATE, ActionTypes.GET_VALUEASSESS_VALUEASSESSFINISHSTATE);
	//获取价值观测试的题目
	var GET_VALUEASSESS_QUIZZES = "/url/here/GET_VALUEASSESS_QUIZZES"; //对应action请求url，baseurl之后的路径，必须‘/’开头，
	ValueAssessActionMapTemp[ActionTypes.GET_VALUEASSESS_QUIZZES] = {
	    url: GET_VALUEASSESS_QUIZZES,
	    moduleID: "ValueAssess",
	    operate: "read"
	};
	ValueAssessUrlMapTemp.put(GET_VALUEASSESS_QUIZZES, ActionTypes.GET_VALUEASSESS_QUIZZES);
	//获取价值观测试引导页导语
	var GET_VALUEASSESS_VALUE_INTRODUCTION = "/url/here/GET_VALUEASSESS_VALUE_INTRODUCTION"; //对应action请求url，baseurl之后的路径，必须‘/’开头，
	ValueAssessActionMapTemp[ActionTypes.GET_VALUEASSESS_VALUE_INTRODUCTION] = {
	    url: GET_VALUEASSESS_VALUE_INTRODUCTION,
	    moduleID: "ValueAssess",
	    operate: "read"
	};
	ValueAssessUrlMapTemp.put(GET_VALUEASSESS_VALUE_INTRODUCTION, ActionTypes.GET_VALUEASSESS_VALUE_INTRODUCTION);
	//获取价值观测试结果
	var GET_VALUEASSESS_VALUE_REPORT = "/url/here/GET_VALUEASSESS_VALUE_REPORT"; //对应action请求url，baseurl之后的路径，必须‘/’开头，
	ValueAssessActionMapTemp[ActionTypes.GET_VALUEASSESS_VALUE_REPORT] = {
	    url: GET_VALUEASSESS_VALUE_REPORT,
	    moduleID: "ValueAssess",
	    operate: "read"
	};
	ValueAssessUrlMapTemp.put(GET_VALUEASSESS_VALUE_REPORT, ActionTypes.GET_VALUEASSESS_VALUE_REPORT);
	exports.ValueAssessUrlMap = ValueAssessUrlMapTemp;


/***/ },
/* 408 */
/*!********************************************************************!*\
  !*** ./actions/AssessCenter/ValueAssess/ValueAssessActionTypes.ts ***!
  \********************************************************************/
/***/ function(module, exports) {

	"use strict";
	//所有程序中用到的有关此模块的actionID 都引用于此 ****必须全局唯一*****
	//获取价值观测试完成状态
	exports.GET_VALUEASSESS_VALUEASSESSFINISHSTATE = "GET_VALUEASSESS_VALUEASSESSFINISHSTATE";
	//获取价值观测试题目
	exports.GET_VALUEASSESS_QUIZZES = "GET_VALUEASSESS_QUIZZES";
	//获取价值观测试引导页导语
	exports.GET_VALUEASSESS_VALUE_INTRODUCTION = "GET_VALUEASSESS_VALUE_INTRODUCTION";
	// 获取价值观测试结果
	exports.GET_VALUEASSESS_VALUE_REPORT = "GET_VALUEASSESS_VALUE_REPORT";
	//提交价值观测试的答案 


/***/ },
/* 409 */
/*!*********************************!*\
  !*** ./common/privilegeUtil.ts ***!
  \*********************************/
/***/ function(module, exports) {

	"use strict";
	//parse privilege method for common pages
	function getPrivilegeByModules(modules) {
	    var privilege = [];
	    /*for (var i=0; i<modules.length; i++){
	        var module = modules[i];
	        privilege.push(getPrivilegeByModule(module));
	    }*/
	    return {};
	}
	exports.getPrivilegeByModules = getPrivilegeByModules;
	function getPrivilegeByModule(module) {
	    //context get all privileges
	    var privileges = [
	        {
	            "moduleID": "Statistic_SingleSubjectChoice",
	            "moduleName": "统计-单科选科结果统计",
	            "permission": [
	                {
	                    "department": { "school": "10000" },
	                    "operate": ["Read"]
	                },
	                {
	                    "department": {
	                        "school": "10000",
	                        "grades": [
	                            {
	                                "grade": "1"
	                            }
	                        ]
	                    },
	                    "operate": ["Create", "Update", "Remove", "Read", "ExportData"]
	                },
	                {
	                    "department": {
	                        "school": "10000",
	                        "grades": [
	                            {
	                                "grade": "2015",
	                                "gradeName": "高一",
	                                "classes": [
	                                    {
	                                        classID: "1",
	                                        className: "高一一班"
	                                    }
	                                ]
	                            }
	                        ]
	                    },
	                    "operate": ["Create", "Update", "Remove", "Read", "ExportData"]
	                },
	            ]
	        },
	        {
	            "moduleID": "Statistic_SubjectCombChoice",
	            "moduleName": "统计-选科组合情况统计",
	            "permission": [
	                /*{
	                 "department": {"school": "10000"},
	                 "operate": ["Create","Update","Remove","Read","ExportData"]
	                 },*/
	                {
	                    "department": {
	                        "school": "10000",
	                        "grades": [
	                            {
	                                "grade": "1"
	                            }
	                        ]
	                    },
	                    "operate": ["Read", "ExportData"]
	                },
	            ]
	        },
	        {
	            "moduleID": "Statistic_SubjectChoiceMatchLevel",
	            "moduleName": "统计-学生匹配结果统计",
	            "permission": [
	                {
	                    "department": { "school": "10000" },
	                    "operate": ["Create", "Update", "Remove", "Read", "ExportData"]
	                }
	            ]
	        },
	        {
	            "moduleID": "Statistic_SubjectChoiceStatus",
	            "moduleName": "统计-选科完成情况",
	            "permission": [
	                {
	                    "department": { "school": "10000" },
	                    "operate": ["Create", "Update", "Remove", "Read", "ExportData"]
	                }
	            ]
	        },
	        {
	            "moduleID": "Statistic_CareerAssessAnalysis",
	            "moduleName": "统计-兴趣性格分析",
	            "permission": [
	                {
	                    "department": { "school": "10000" },
	                    "operate": ["Create", "Update", "Remove", "Read", "ExportData"]
	                }
	            ]
	        },
	        {
	            "moduleID": "Statistic_StudentDetailInfo",
	            "moduleName": "统计-学生详细列表",
	            "permission": [
	                {
	                    "department": { "school": "10000" },
	                    "operate": ["Create", "Update", "Remove", "Read", "ExportData"]
	                }
	            ]
	        },
	        {
	            "moduleID": "StudentManagement_UsualExamScore",
	            "moduleName": "学生成绩信息",
	            "permission": [
	                {
	                    "department": { "school": "10000" },
	                    "operate": ["Create", "Update", "Remove", "Read", "ExportData"]
	                }
	            ]
	        },
	        {
	            "moduleID": "Setting_MajorRecommandRatio",
	            "moduleName": "设置-学校端推荐比例",
	            "permission": [
	                {
	                    "department": { "school": "10000" },
	                    "operate": ["Create", "Update", "Remove", "Read", "ExportData"]
	                }
	            ]
	        },
	        {
	            "moduleID": "Setting_UsualExamScoreWeight",
	            "moduleName": "设置-成绩权重",
	            "permission": [
	                {
	                    "department": { "school": "10000" },
	                    "operate": ["Create", "Update", "Remove", "Read", "ExportData"]
	                }
	            ]
	        },
	        {
	            "moduleID": "Setting_AvailSubjectComb",
	            "moduleName": "设置-学科组合",
	            "permission": [
	                {
	                    "department": { "school": "10000" },
	                    "operate": ["Create", "Update", "Remove", "Read", "ExportData"]
	                }
	            ]
	        },
	        {
	            "moduleID": "Setting_SystemOpenTime",
	            "moduleName": "设置-系统开放时间点",
	            "permission": [
	                {
	                    "department": { "school": "10000" },
	                    "operate": ["Create", "Update", "Remove", "Read", "ExportData"]
	                }
	            ]
	        },
	        {
	            "moduleID": "StudentManagement_Account",
	            "moduleName": "学生帐户管理",
	            "permission": [
	                {
	                    "department": { "school": "10000" },
	                    "operate": ["Create", "Update", "Remove", "Read", "ExportData"]
	                }
	            ]
	        } /*,
	         {
	         "moduleID": "teacherAccountManageSubjectTeacher",
	         "moduleName": "教师账户管理-任课教师",
	         "permission": [
	         {
	         "department": {"school": "10000"},
	         "operate": ["Create","Update","Remove","Read","ExportData"]
	         }
	         ]
	         }*/,
	        {
	            "moduleID": "TeacherManagement_SchoolObserver",
	            "moduleName": "教师账户管理-校级观察员",
	            "permission": [
	                {
	                    "department": { "school": "10000" },
	                    "operate": ["Create", "Update", "Remove", "Read", "ExportData"]
	                }
	            ]
	        },
	        {
	            "moduleID": "TeacherManagement_ClassAdmin",
	            "moduleName": "教师账户管理-班主任",
	            "permission": [
	                {
	                    "department": { "school": "10000" },
	                    "operate": ["Create", "Update", "Remove", "Read", "ExportData"]
	                }
	            ]
	        },
	        {
	            "moduleID": "TeacherManagement_GradeAdmin",
	            "moduleName": "教师账户管理-年级管理员",
	            "permission": [
	                {
	                    "department": { "school": "10000" },
	                    "operate": ["Create", "Update", "Remove", "Read", "ExportData"]
	                }
	            ]
	        },
	        {
	            "moduleID": "TeacherManagement_SchoolAdmin",
	            "moduleName": "教师账户管理-校级管理员",
	            "permission": [
	                {
	                    "department": { "school": "10000" },
	                    "operate": ["Create", "Update", "Remove", "Read", "ExportData"]
	                }
	            ]
	        },
	        {
	            "moduleID": "DepartmentManagement",
	            "moduleName": "学校结构",
	            "permission": [
	                {
	                    "department": { "school": "10000" },
	                    "operate": ["Create", "Update", "Remove", "Read", "ExportData"]
	                }
	            ]
	        }
	    ];
	    /*moduleID: "TeacherManagement_GradeAdmin",
	        operate: ["Create"],
	        department: {
	        school: "10000"
	    }*/
	    /*for(var i=0; i<privileges; i++){
	        var privilege = privileges[i];
	        if (privilege.moduleID === module.moduleID){
	
	        }
	    }*/
	}
	function getSinglePrivilegeByModuleID(module) {
	    //get from context
	    var privileges = [];
	    for (var i = 0; i < privileges.length; i++) {
	        var privilege = privileges[i];
	        if (privilege.moduleID === module.moduleID) {
	            return privilege;
	        }
	    }
	}


/***/ },
/* 410 */
/*!*******************************!*\
  !*** ./test/mock/MockUtil.ts ***!
  \*******************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var UrlUtil = __webpack_require__(/*! ../../common/urlUtil */ 411);
	var Mock = __webpack_require__(/*! mockjs */ 412);
	var commonFunc_1 = __webpack_require__(/*! ../../common/commonFunc */ 378);
	var SubjectLibMockTemplate_1 = __webpack_require__(/*! ./ajaxMock/SubjectLibMockTemplate */ 413);
	var SubjectLibActionMap_1 = __webpack_require__(/*! ../../actions/SubjectLib/SubjectLibActionMap */ 390);
	var MIAssessMockTemplate_1 = __webpack_require__(/*! ./ajaxMock/MIAssessMockTemplate */ 414);
	var MIAssessActionMap_1 = __webpack_require__(/*! ../../actions/AssessCenter/MIAssess/MIAssessActionMap */ 393);
	//学院库
	var CollegeLibMockTemplate_1 = __webpack_require__(/*! ./ajaxMock/CollegeLibMockTemplate */ 415);
	var CollegeLibActionMap_1 = __webpack_require__(/*! ../../actions/CollegeLib/CollegeLibActionMap */ 395);
	//职业库
	var JobLibMockTemplate_1 = __webpack_require__(/*! ./ajaxMock/JobLibMockTemplate */ 416);
	var JobLibActionMap_1 = __webpack_require__(/*! ../../actions/JobLib/JobLibActionMap */ 397);
	//学生个人主页
	var HomePageMockTemplate_1 = __webpack_require__(/*! ./ajaxMock/HomePageMockTemplate */ 417);
	var HomePageActionMap_1 = __webpack_require__(/*! ../../actions/HomePage/HomePageActionMap */ 396);
	var TeacherMockTemplate_1 = __webpack_require__(/*! ./ajaxMock/TeacherMockTemplate */ 418);
	var TeacherPersonalPageActionMap_1 = __webpack_require__(/*! ../../actions/TeacherPersonalPage/TeacherPersonalPageActionMap */ 392);
	var CommonMockTemplate_1 = __webpack_require__(/*! ./ajaxMock/CommonMockTemplate */ 419);
	var CommonActionMap_1 = __webpack_require__(/*! ../../actions/CommonAction/CommonActionMap */ 398);
	//学生学期分析
	var TermAnalysisMockTemplate_1 = __webpack_require__(/*! ./ajaxMock/TermAnalysisMockTemplate */ 420);
	var TermAnalysisActionMap_1 = __webpack_require__(/*! ../../actions/TermAnalysis/TermAnalysisActionMap */ 400);
	//专业库
	var MajorLibMockTemplate_1 = __webpack_require__(/*! ./ajaxMock/MajorLibMockTemplate */ 421);
	var MajorLibActionMap_1 = __webpack_require__(/*! ../../actions/MajorLib/MajorLibActionMap */ 402);
	//搜索用户
	var SearchMockTemplate_1 = __webpack_require__(/*! ./ajaxMock/SearchMockTemplate */ 422);
	var SearchActionMap_1 = __webpack_require__(/*! ../../actions/Search/SearchActionMap */ 403);
	//管理员页面
	var AdminPageMockTemplate_1 = __webpack_require__(/*! ./ajaxMock/AdminPageMockTemplate */ 423);
	var AdminPageActionMap_1 = __webpack_require__(/*! ../../actions/AdminPage/AdminPageActionMap */ 404);
	//测试中心
	var AssessCenterMockTemplate_1 = __webpack_require__(/*! ./ajaxMock/AssessCenterMockTemplate */ 424);
	var AssessCenterActionMap_1 = __webpack_require__(/*! ../../actions/AssessCenter/AssessCenterActionMap */ 405);
	//价值观测试
	var ValueAssessMockTemplate_1 = __webpack_require__(/*! ./ajaxMock/ValueAssessMockTemplate */ 425);
	var ValueAssessActionMap_1 = __webpack_require__(/*! ../../actions/AssessCenter/ValueAssess/ValueAssessActionMap */ 407);
	var AjaxType_Post = "post";
	var allTemplateMap = {
	    subjectLibMockTemplate: SubjectLibMockTemplate_1.subjectLibMockTemplate,
	    MIAssessMockTemplate: MIAssessMockTemplate_1.MIAssessMockTemplate,
	    collegeLibMockTemplate: CollegeLibMockTemplate_1.collegeLibMockTemplate,
	    studentMockTemplate: HomePageMockTemplate_1.studentMockTemplate,
	    jobLibMockTemplate: JobLibMockTemplate_1.jobLibMockTemplate,
	    teacherMockTemplate: TeacherMockTemplate_1.teacherMockTemplate,
	    commonMockTemplate: CommonMockTemplate_1.commonMockTemplate,
	    termAnalysisMockTemplate: TermAnalysisMockTemplate_1.termAnalysisMockTemplate,
	    majorLibMockTemplate: MajorLibMockTemplate_1.majorLibMockTemplate,
	    searchMockTemplate: SearchMockTemplate_1.searchMockTemplate,
	    adminPageMockTemplate: AdminPageMockTemplate_1.adminPageMockTemplate,
	    assessCenterMockTemplate: AssessCenterMockTemplate_1.assessCenterMockTemplate,
	    ValueAssessMockTemplate: ValueAssessMockTemplate_1.ValueAssessMockTemplate,
	};
	var allUrlMap = {
	    subjectLibUrlMap: SubjectLibActionMap_1.subjectLibUrlMap,
	    MIAssessUrlMap: MIAssessActionMap_1.MIAssessUrlMap,
	    collegeLibUrlMap: CollegeLibActionMap_1.collegeLibUrlMap,
	    homePageUrlMap: HomePageActionMap_1.homePageUrlMap,
	    jobLibUrlMap: JobLibActionMap_1.jobLibUrlMap,
	    teacherUrlMap: TeacherPersonalPageActionMap_1.teacherUrlMap,
	    commonUrlMap: CommonActionMap_1.commonUrlMap,
	    termAnalysisUrlMap: TermAnalysisActionMap_1.termAnalysisUrlMap,
	    majorLibUrlMap: MajorLibActionMap_1.majorLibUrlMap,
	    searchUrlMap: SearchActionMap_1.searchUrlMap,
	    adminPageUrlMap: AdminPageActionMap_1.adminPageUrlMap,
	    assessCenterUrlMap: AssessCenterActionMap_1.assessCenterUrlMap,
	    ValueAssessUrlMap: ValueAssessActionMap_1.ValueAssessUrlMap,
	};
	function mockDataByUrl(url) {
	    url = UrlUtil.parseURL(url).relativePath;
	    //get actionID by url
	    var actionID = getActionIDByUrl(url);
	    mockDataByActionIDAndUrl(actionID, url);
	}
	exports.mockDataByUrl = mockDataByUrl;
	function getMockTemplateByActionID(actionID) {
	    //get all mock template in one object, actionID as key, template as value
	    for (var key in allTemplateMap) {
	        if (commonFunc_1.hasKeyInMap(actionID, allTemplateMap[key])) {
	            return allTemplateMap[key][actionID];
	        }
	    }
	    return;
	}
	function mockDataByActionIDAndUrl(actionID, url, ajaxType) {
	    if (!ajaxType) {
	        ajaxType = AjaxType_Post;
	    }
	    var regexString = UrlUtil.getRegFromUrl(url);
	    var template = getMockTemplateByActionID(actionID);
	    Mock.mock(eval(regexString), ajaxType, template);
	}
	exports.mockDataByActionIDAndUrl = mockDataByActionIDAndUrl;
	function getActionIDByUrl(url) {
	    for (var key in allUrlMap) {
	        if (allUrlMap[key] && allUrlMap[key].get(url)) {
	            return allUrlMap[key].get(url);
	        }
	    }
	    return;
	}


/***/ },
/* 411 */
/*!***************************!*\
  !*** ./common/urlUtil.ts ***!
  \***************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var commonVar_1 = __webpack_require__(/*! ./commonVar */ 355);
	/**
	 *
	 * @param  192.169.1.122:8080/nicezhuanye /aaa/bbb?dkdk=111
	 *          or /aaa/bbb?dkdk=111
	 * @returns {string} /\/aaa\/bbb/
	 */
	function getRegFromUrl(url) {
	    var regexString = "nomatchUrl";
	    var urlArray = url.split(commonVar_1.baseUrl);
	    if (urlArray.length < 2) {
	        regexString = getRegFromShortUrl(url);
	    }
	    else {
	        var urlAfterBase = urlArray[1];
	        regexString = getRegFromShortUrl(urlAfterBase);
	    }
	    return regexString;
	}
	exports.getRegFromUrl = getRegFromUrl;
	function getRegFromShortUrl(shortUrl) {
	    var urlArrayAfterSplit = shortUrl.split("?");
	    var urlNeedParse = urlArrayAfterSplit[0];
	    var urlArrayNeedParse = urlNeedParse.split("/");
	    var regexString = "/";
	    for (var i = 1; i < urlArrayNeedParse.length; i++) {
	        regexString = regexString + "\\/" + urlArrayNeedParse[i];
	    }
	    regexString = regexString + "/";
	    return regexString;
	}
	/**
	 *
	 * @param url  192.169.1.122:8080/nicezhuanye /aaa/bbb?dkdk=111
	 */
	function parseURL(url) {
	    var urlArray = url.split(commonVar_1.baseUrl);
	    var urlAfterBase = url;
	    if (urlArray.length >= 2) {
	        urlAfterBase = urlArray[1];
	    }
	    var urlArrayAfterBase = urlAfterBase.split("?");
	    var relativePath = urlAfterBase;
	    if (urlArrayAfterBase.length >= 2) {
	        relativePath = urlArrayAfterBase[0];
	    }
	    var a = document.createElement('a');
	    a.href = url;
	    return {
	        relativePath: relativePath,
	        params: (function () {
	            var ret = {}, seg = a.search.replace(/^\?/, '').split('&'), len = seg.length, i = 0, s;
	            for (; i < len; i++) {
	                if (!seg[i]) {
	                    continue;
	                }
	                s = seg[i].split('=');
	                ret[s[0]] = s[1];
	            }
	            return ret;
	        })()
	    };
	}
	exports.parseURL = parseURL;
	function parseURLFull(url) {
	    var a = document.createElement('a');
	    a.href = url;
	    return {
	        source: url,
	        protocol: a.protocol.replace(':', ''),
	        host: a.hostname,
	        port: a.port,
	        query: a.search,
	        params: (function () {
	            var ret = {}, seg = a.search.replace(/^\?/, '').split('&'), len = seg.length, i = 0, s;
	            for (; i < len; i++) {
	                if (!seg[i]) {
	                    continue;
	                }
	                s = seg[i].split('=');
	                ret[s[0]] = s[1];
	            }
	            return ret;
	        })(),
	        file: (a.pathname.match(/\/([^\/?#]+)$/i) || [, ''])[1],
	        hash: a.hash.replace('#', ''),
	        path: a.pathname.replace(/^([^\/])/, '/$1'),
	        relative: (a.href.match(/tps?:\/\/[^\/]+(.+)/) || [, ''])[1],
	        segments: a.pathname.replace(/^\//, '').split('/')
	    };
	}


/***/ },
/* 412 */
/*!*******************************!*\
  !*** ./~/mockjs/dist/mock.js ***!
  \*******************************/
/***/ function(module, exports, __webpack_require__) {

	(function webpackUniversalModuleDefinition(root, factory) {
		if(true)
			module.exports = factory();
		else if(typeof define === 'function' && define.amd)
			define([], factory);
		else if(typeof exports === 'object')
			exports["Mock"] = factory();
		else
			root["Mock"] = factory();
	})(this, function() {
	return /******/ (function(modules) { // webpackBootstrap
	/******/ 	// The module cache
	/******/ 	var installedModules = {};
	
	/******/ 	// The require function
	/******/ 	function __webpack_require__(moduleId) {
	
	/******/ 		// Check if module is in cache
	/******/ 		if(installedModules[moduleId])
	/******/ 			return installedModules[moduleId].exports;
	
	/******/ 		// Create a new module (and put it into the cache)
	/******/ 		var module = installedModules[moduleId] = {
	/******/ 			exports: {},
	/******/ 			id: moduleId,
	/******/ 			loaded: false
	/******/ 		};
	
	/******/ 		// Execute the module function
	/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
	
	/******/ 		// Flag the module as loaded
	/******/ 		module.loaded = true;
	
	/******/ 		// Return the exports of the module
	/******/ 		return module.exports;
	/******/ 	}
	
	
	/******/ 	// expose the modules object (__webpack_modules__)
	/******/ 	__webpack_require__.m = modules;
	
	/******/ 	// expose the module cache
	/******/ 	__webpack_require__.c = installedModules;
	
	/******/ 	// __webpack_public_path__
	/******/ 	__webpack_require__.p = "";
	
	/******/ 	// Load entry module and return exports
	/******/ 	return __webpack_require__(0);
	/******/ })
	/************************************************************************/
	/******/ ([
	/* 0 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* global require, module, window */
		var Handler = __webpack_require__(1)
		var Util = __webpack_require__(3)
		var Random = __webpack_require__(5)
		var RE = __webpack_require__(20)
		var toJSONSchema = __webpack_require__(23)
		var valid = __webpack_require__(25)
	
		var XHR
		if (typeof window !== 'undefined') XHR = __webpack_require__(27)
	
		/*!
		    Mock - 模拟请求 & 模拟数据
		    https://github.com/nuysoft/Mock
		    墨智 mozhi.gyy@taobao.com nuysoft@gmail.com
		*/
		var Mock = {
		    Handler: Handler,
		    Random: Random,
		    Util: Util,
		    XHR: XHR,
		    RE: RE,
		    toJSONSchema: toJSONSchema,
		    valid: valid,
		    heredoc: Util.heredoc,
		    setup: function(settings) {
		        return XHR.setup(settings)
		    },
		    _mocked: {}
		}
	
		Mock.version = '1.0.1-beta2'
	
		// 避免循环依赖
		if (XHR) XHR.Mock = Mock
	
		/*
		    * Mock.mock( template )
		    * Mock.mock( function() )
		    * Mock.mock( rurl, template )
		    * Mock.mock( rurl, function(options) )
		    * Mock.mock( rurl, rtype, template )
		    * Mock.mock( rurl, rtype, function(options) )
	
		    根据数据模板生成模拟数据。
		*/
		Mock.mock = function(rurl, rtype, template) {
		    // Mock.mock(template)
		    if (arguments.length === 1) {
		        return Handler.gen(rurl)
		    }
		    // Mock.mock(rurl, template)
		    if (arguments.length === 2) {
		        template = rtype
		        rtype = undefined
		    }
		    // 拦截 XHR
		    if (XHR) window.XMLHttpRequest = XHR
		    Mock._mocked[rurl + (rtype || '')] = {
		        rurl: rurl,
		        rtype: rtype,
		        template: template
		    }
		    return Mock
		}
	
		module.exports = Mock
	
	/***/ },
	/* 1 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* 
		    ## Handler
	
		    处理数据模板。
		    
		    * Handler.gen( template, name?, context? )
	
		        入口方法。
	
		    * Data Template Definition, DTD
		        
		        处理数据模板定义。
	
		        * Handler.array( options )
		        * Handler.object( options )
		        * Handler.number( options )
		        * Handler.boolean( options )
		        * Handler.string( options )
		        * Handler.function( options )
		        * Handler.regexp( options )
		        
		        处理路径（相对和绝对）。
	
		        * Handler.getValueByKeyPath( key, options )
	
		    * Data Placeholder Definition, DPD
	
		        处理数据占位符定义
	
		        * Handler.placeholder( placeholder, context, templateContext, options )
	
		*/
	
		var Constant = __webpack_require__(2)
		var Util = __webpack_require__(3)
		var Parser = __webpack_require__(4)
		var Random = __webpack_require__(5)
		var RE = __webpack_require__(20)
	
		var Handler = {
		    extend: Util.extend
		}
	
		/*
		    template        属性值（即数据模板）
		    name            属性名
		    context         数据上下文，生成后的数据
		    templateContext 模板上下文，
	
		    Handle.gen(template, name, options)
		    context
		        currentContext, templateCurrentContext, 
		        path, templatePath
		        root, templateRoot
		*/
		Handler.gen = function(template, name, context) {
		    /* jshint -W041 */
		    name = name == undefined ? '' : (name + '')
	
		    context = context || {}
		    context = {
		            // 当前访问路径，只有属性名，不包括生成规则
		            path: context.path || [Constant.GUID],
		            templatePath: context.templatePath || [Constant.GUID++],
		            // 最终属性值的上下文
		            currentContext: context.currentContext,
		            // 属性值模板的上下文
		            templateCurrentContext: context.templateCurrentContext || template,
		            // 最终值的根
		            root: context.root || context.currentContext,
		            // 模板的根
		            templateRoot: context.templateRoot || context.templateCurrentContext || template
		        }
		        // console.log('path:', context.path.join('.'), template)
	
		    var rule = Parser.parse(name)
		    var type = Util.type(template)
		    var data
	
		    if (Handler[type]) {
		        data = Handler[type]({
		            // 属性值类型
		            type: type,
		            // 属性值模板
		            template: template,
		            // 属性名 + 生成规则
		            name: name,
		            // 属性名
		            parsedName: name ? name.replace(Constant.RE_KEY, '$1') : name,
	
		            // 解析后的生成规则
		            rule: rule,
		            // 相关上下文
		            context: context
		        })
	
		        if (!context.root) context.root = data
		        return data
		    }
	
		    return template
		}
	
		Handler.extend({
		    array: function(options) {
		        var result = [],
		            i, ii;
	
		        // 'name|1': []
		        // 'name|count': []
		        // 'name|min-max': []
		        if (options.template.length === 0) return result
	
		        // 'arr': [{ 'email': '@EMAIL' }, { 'email': '@EMAIL' }]
		        if (!options.rule.parameters) {
		            for (i = 0; i < options.template.length; i++) {
		                options.context.path.push(i)
		                options.context.templatePath.push(i)
		                result.push(
		                    Handler.gen(options.template[i], i, {
		                        path: options.context.path,
		                        templatePath: options.context.templatePath,
		                        currentContext: result,
		                        templateCurrentContext: options.template,
		                        root: options.context.root || result,
		                        templateRoot: options.context.templateRoot || options.template
		                    })
		                )
		                options.context.path.pop()
		                options.context.templatePath.pop()
		            }
		        } else {
		            // 'method|1': ['GET', 'POST', 'HEAD', 'DELETE']
		            if (options.rule.min === 1 && options.rule.max === undefined) {
		                // fix #17
		                options.context.path.push(options.name)
		                options.context.templatePath.push(options.name)
		                result = Random.pick(
		                    Handler.gen(options.template, undefined, {
		                        path: options.context.path,
		                        templatePath: options.context.templatePath,
		                        currentContext: result,
		                        templateCurrentContext: options.template,
		                        root: options.context.root || result,
		                        templateRoot: options.context.templateRoot || options.template
		                    })
		                )
		                options.context.path.pop()
		                options.context.templatePath.pop()
		            } else {
		                // 'data|+1': [{}, {}]
		                if (options.rule.parameters[2]) {
		                    options.template.__order_index = options.template.__order_index || 0
	
		                    options.context.path.push(options.name)
		                    options.context.templatePath.push(options.name)
		                    result = Handler.gen(options.template, undefined, {
		                        path: options.context.path,
		                        templatePath: options.context.templatePath,
		                        currentContext: result,
		                        templateCurrentContext: options.template,
		                        root: options.context.root || result,
		                        templateRoot: options.context.templateRoot || options.template
		                    })[
		                        options.template.__order_index % options.template.length
		                    ]
	
		                    options.template.__order_index += +options.rule.parameters[2]
	
		                    options.context.path.pop()
		                    options.context.templatePath.pop()
	
		                } else {
		                    // 'data|1-10': [{}]
		                    for (i = 0; i < options.rule.count; i++) {
		                        // 'data|1-10': [{}, {}]
		                        for (ii = 0; ii < options.template.length; ii++) {
		                            options.context.path.push(result.length)
		                            options.context.templatePath.push(ii)
		                            result.push(
		                                Handler.gen(options.template[ii], result.length, {
		                                    path: options.context.path,
		                                    templatePath: options.context.templatePath,
		                                    currentContext: result,
		                                    templateCurrentContext: options.template,
		                                    root: options.context.root || result,
		                                    templateRoot: options.context.templateRoot || options.template
		                                })
		                            )
		                            options.context.path.pop()
		                            options.context.templatePath.pop()
		                        }
		                    }
		                }
		            }
		        }
		        return result
		    },
		    object: function(options) {
		        var result = {},
		            keys, fnKeys, key, parsedKey, inc, i;
	
		        // 'obj|min-max': {}
		        /* jshint -W041 */
		        if (options.rule.min != undefined) {
		            keys = Util.keys(options.template)
		            keys = Random.shuffle(keys)
		            keys = keys.slice(0, options.rule.count)
		            for (i = 0; i < keys.length; i++) {
		                key = keys[i]
		                parsedKey = key.replace(Constant.RE_KEY, '$1')
		                options.context.path.push(parsedKey)
		                options.context.templatePath.push(key)
		                result[parsedKey] = Handler.gen(options.template[key], key, {
		                    path: options.context.path,
		                    templatePath: options.context.templatePath,
		                    currentContext: result,
		                    templateCurrentContext: options.template,
		                    root: options.context.root || result,
		                    templateRoot: options.context.templateRoot || options.template
		                })
		                options.context.path.pop()
		                options.context.templatePath.pop()
		            }
	
		        } else {
		            // 'obj': {}
		            keys = []
		            fnKeys = [] // #25 改变了非函数属性的顺序，查找起来不方便
		            for (key in options.template) {
		                (typeof options.template[key] === 'function' ? fnKeys : keys).push(key)
		            }
		            keys = keys.concat(fnKeys)
	
		            /*
		                会改变非函数属性的顺序
		                keys = Util.keys(options.template)
		                keys.sort(function(a, b) {
		                    var afn = typeof options.template[a] === 'function'
		                    var bfn = typeof options.template[b] === 'function'
		                    if (afn === bfn) return 0
		                    if (afn && !bfn) return 1
		                    if (!afn && bfn) return -1
		                })
		            */
	
		            for (i = 0; i < keys.length; i++) {
		                key = keys[i]
		                parsedKey = key.replace(Constant.RE_KEY, '$1')
		                options.context.path.push(parsedKey)
		                options.context.templatePath.push(key)
		                result[parsedKey] = Handler.gen(options.template[key], key, {
		                    path: options.context.path,
		                    templatePath: options.context.templatePath,
		                    currentContext: result,
		                    templateCurrentContext: options.template,
		                    root: options.context.root || result,
		                    templateRoot: options.context.templateRoot || options.template
		                })
		                options.context.path.pop()
		                options.context.templatePath.pop()
		                    // 'id|+1': 1
		                inc = key.match(Constant.RE_KEY)
		                if (inc && inc[2] && Util.type(options.template[key]) === 'number') {
		                    options.template[key] += parseInt(inc[2], 10)
		                }
		            }
		        }
		        return result
		    },
		    number: function(options) {
		        var result, parts;
		        if (options.rule.decimal) { // float
		            options.template += ''
		            parts = options.template.split('.')
		                // 'float1|.1-10': 10,
		                // 'float2|1-100.1-10': 1,
		                // 'float3|999.1-10': 1,
		                // 'float4|.3-10': 123.123,
		            parts[0] = options.rule.range ? options.rule.count : parts[0]
		            parts[1] = (parts[1] || '').slice(0, options.rule.dcount)
		            while (parts[1].length < options.rule.dcount) {
		                parts[1] += (
		                    // 最后一位不能为 0：如果最后一位为 0，会被 JS 引擎忽略掉。
		                    (parts[1].length < options.rule.dcount - 1) ? Random.character('number') : Random.character('123456789')
		                )
		            }
		            result = parseFloat(parts.join('.'), 10)
		        } else { // integer
		            // 'grade1|1-100': 1,
		            result = options.rule.range && !options.rule.parameters[2] ? options.rule.count : options.template
		        }
		        return result
		    },
		    boolean: function(options) {
		        var result;
		        // 'prop|multiple': false, 当前值是相反值的概率倍数
		        // 'prop|probability-probability': false, 当前值与相反值的概率
		        result = options.rule.parameters ? Random.bool(options.rule.min, options.rule.max, options.template) : options.template
		        return result
		    },
		    string: function(options) {
		        var result = '',
		            i, placeholders, ph, phed;
		        if (options.template.length) {
	
		            //  'foo': '★',
		            /* jshint -W041 */
		            if (options.rule.count == undefined) {
		                result += options.template
		            }
	
		            // 'star|1-5': '★',
		            for (i = 0; i < options.rule.count; i++) {
		                result += options.template
		            }
		            // 'email|1-10': '@EMAIL, ',
		            placeholders = result.match(Constant.RE_PLACEHOLDER) || [] // A-Z_0-9 > \w_
		            for (i = 0; i < placeholders.length; i++) {
		                ph = placeholders[i]
	
		                // 遇到转义斜杠，不需要解析占位符
		                if (/^\\/.test(ph)) {
		                    placeholders.splice(i--, 1)
		                    continue
		                }
	
		                phed = Handler.placeholder(ph, options.context.currentContext, options.context.templateCurrentContext, options)
	
		                // 只有一个占位符，并且没有其他字符
		                if (placeholders.length === 1 && ph === result && typeof phed !== typeof result) { // 
		                    result = phed
		                    break
	
		                    if (Util.isNumeric(phed)) {
		                        result = parseFloat(phed, 10)
		                        break
		                    }
		                    if (/^(true|false)$/.test(phed)) {
		                        result = phed === 'true' ? true :
		                            phed === 'false' ? false :
		                            phed // 已经是布尔值
		                        break
		                    }
		                }
		                result = result.replace(ph, phed)
		            }
	
		        } else {
		            // 'ASCII|1-10': '',
		            // 'ASCII': '',
		            result = options.rule.range ? Random.string(options.rule.count) : options.template
		        }
		        return result
		    },
		    'function': function(options) {
		        // ( context, options )
		        return options.template.call(options.context.currentContext, options)
		    },
		    'regexp': function(options) {
		        // regexp.source
		        var source = options.template.source
	
		        // 'name|1-5': /regexp/,
		        for (var i = 0; i < options.rule.count; i++) {
		            source += options.template.source
		        }
	
		        return RE.Handler.gen(
		            RE.Parser.parse(
		                source
		            )
		        )
		    }
		})
	
		Handler.extend({
		    _all: function() {
		        var re = {};
		        for (var key in Random) re[key.toLowerCase()] = key
		        return re
		    },
		    // 处理占位符，转换为最终值
		    placeholder: function(placeholder, obj, templateContext, options) {
		        // console.log(options.context.path)
		        // 1 key, 2 params
		        Constant.RE_PLACEHOLDER.exec('')
		        var parts = Constant.RE_PLACEHOLDER.exec(placeholder),
		            key = parts && parts[1],
		            lkey = key && key.toLowerCase(),
		            okey = this._all()[lkey],
		            params = parts && parts[2] || ''
		        var pathParts = this.splitPathToArray(key)
	
		        // 解析占位符的参数
		        try {
		            // 1. 尝试保持参数的类型
		            /*
		                #24 [Window Firefox 30.0 引用 占位符 抛错](https://github.com/nuysoft/Mock/issues/24)
		                [BX9056: 各浏览器下 window.eval 方法的执行上下文存在差异](http://www.w3help.org/zh-cn/causes/BX9056)
		                应该属于 Window Firefox 30.0 的 BUG
		            */
		            /* jshint -W061 */
		            params = eval('(function(){ return [].splice.call(arguments, 0 ) })(' + params + ')')
		        } catch (error) {
		            // 2. 如果失败，只能解析为字符串
		            // console.error(error)
		            // if (error instanceof ReferenceError) params = parts[2].split(/,\s*/);
		            // else throw error
		            params = parts[2].split(/,\s*/)
		        }
	
		        // 占位符优先引用数据模板中的属性
		        if (obj && (key in obj)) return obj[key]
	
		        // @index @key
		        // if (Constant.RE_INDEX.test(key)) return +options.name
		        // if (Constant.RE_KEY.test(key)) return options.name
	
		        // 绝对路径 or 相对路径
		        if (
		            key.charAt(0) === '/' ||
		            pathParts.length > 1
		        ) return this.getValueByKeyPath(key, options)
	
		        // 递归引用数据模板中的属性
		        if (templateContext &&
		            (typeof templateContext === 'object') &&
		            (key in templateContext) &&
		            (placeholder !== templateContext[key]) // fix #15 避免自己依赖自己
		        ) {
		            // 先计算被引用的属性值
		            templateContext[key] = Handler.gen(templateContext[key], key, {
		                currentContext: obj,
		                templateCurrentContext: templateContext
		            })
		            return templateContext[key]
		        }
	
		        // 如果未找到，则原样返回
		        if (!(key in Random) && !(lkey in Random) && !(okey in Random)) return placeholder
	
		        // 递归解析参数中的占位符
		        for (var i = 0; i < params.length; i++) {
		            Constant.RE_PLACEHOLDER.exec('')
		            if (Constant.RE_PLACEHOLDER.test(params[i])) {
		                params[i] = Handler.placeholder(params[i], obj, templateContext, options)
		            }
		        }
	
		        var handle = Random[key] || Random[lkey] || Random[okey]
		        switch (Util.type(handle)) {
		            case 'array':
		                // 自动从数组中取一个，例如 @areas
		                return Random.pick(handle)
		            case 'function':
		                // 执行占位符方法（大多数情况）
		                handle.options = options
		                var re = handle.apply(Random, params)
		                if (re === undefined) re = '' // 因为是在字符串中，所以默认为空字符串。
		                delete handle.options
		                return re
		        }
		    },
		    getValueByKeyPath: function(key, options) {
		        var originalKey = key
		        var keyPathParts = this.splitPathToArray(key)
		        var absolutePathParts = []
	
		        // 绝对路径
		        if (key.charAt(0) === '/') {
		            absolutePathParts = [options.context.path[0]].concat(
		                this.normalizePath(keyPathParts)
		            )
		        } else {
		            // 相对路径
		            if (keyPathParts.length > 1) {
		                absolutePathParts = options.context.path.slice(0)
		                absolutePathParts.pop()
		                absolutePathParts = this.normalizePath(
		                    absolutePathParts.concat(keyPathParts)
		                )
	
		            }
		        }
	
		        key = keyPathParts[keyPathParts.length - 1]
		        var currentContext = options.context.root
		        var templateCurrentContext = options.context.templateRoot
		        for (var i = 1; i < absolutePathParts.length - 1; i++) {
		            currentContext = currentContext[absolutePathParts[i]]
		            templateCurrentContext = templateCurrentContext[absolutePathParts[i]]
		        }
		        // 引用的值已经计算好
		        if (currentContext && (key in currentContext)) return currentContext[key]
	
		        // 尚未计算，递归引用数据模板中的属性
		        if (templateCurrentContext &&
		            (typeof templateCurrentContext === 'object') &&
		            (key in templateCurrentContext) &&
		            (originalKey !== templateCurrentContext[key]) // fix #15 避免自己依赖自己
		        ) {
		            // 先计算被引用的属性值
		            templateCurrentContext[key] = Handler.gen(templateCurrentContext[key], key, {
		                currentContext: currentContext,
		                templateCurrentContext: templateCurrentContext
		            })
		            return templateCurrentContext[key]
		        }
		    },
		    // https://github.com/kissyteam/kissy/blob/master/src/path/src/path.js
		    normalizePath: function(pathParts) {
		        var newPathParts = []
		        for (var i = 0; i < pathParts.length; i++) {
		            switch (pathParts[i]) {
		                case '..':
		                    newPathParts.pop()
		                    break
		                case '.':
		                    break
		                default:
		                    newPathParts.push(pathParts[i])
		            }
		        }
		        return newPathParts
		    },
		    splitPathToArray: function(path) {
		        var parts = path.split(/\/+/);
		        if (!parts[parts.length - 1]) parts = parts.slice(0, -1)
		        if (!parts[0]) parts = parts.slice(1)
		        return parts;
		    }
		})
	
		module.exports = Handler
	
	/***/ },
	/* 2 */
	/***/ function(module, exports) {
	
		/*
		    ## Constant
	
		    常量集合。
		 */
		/*
		    RE_KEY
		        'name|min-max': value
		        'name|count': value
		        'name|min-max.dmin-dmax': value
		        'name|min-max.dcount': value
		        'name|count.dmin-dmax': value
		        'name|count.dcount': value
		        'name|+step': value
	
		        1 name, 2 step, 3 range [ min, max ], 4 drange [ dmin, dmax ]
	
		    RE_PLACEHOLDER
		        placeholder(*)
	
		    [正则查看工具](http://www.regexper.com/)
	
		    #26 生成规则 支持 负数，例如 number|-100-100
		*/
		module.exports = {
		    GUID: 1,
		    RE_KEY: /(.+)\|(?:\+(\d+)|([\+\-]?\d+-?[\+\-]?\d*)?(?:\.(\d+-?\d*))?)/,
		    RE_RANGE: /([\+\-]?\d+)-?([\+\-]?\d+)?/,
		    RE_PLACEHOLDER: /\\*@([^@#%&()\?\s]+)(?:\((.*?)\))?/g
		    // /\\*@([^@#%&()\?\s\/\.]+)(?:\((.*?)\))?/g
		    // RE_INDEX: /^index$/,
		    // RE_KEY: /^key$/
		}
	
	/***/ },
	/* 3 */
	/***/ function(module, exports) {
	
		/*
		    ## Utilities
		*/
		var Util = {}
	
		Util.extend = function extend() {
		    var target = arguments[0] || {},
		        i = 1,
		        length = arguments.length,
		        options, name, src, copy, clone
	
		    if (length === 1) {
		        target = this
		        i = 0
		    }
	
		    for (; i < length; i++) {
		        options = arguments[i]
		        if (!options) continue
	
		        for (name in options) {
		            src = target[name]
		            copy = options[name]
	
		            if (target === copy) continue
		            if (copy === undefined) continue
	
		            if (Util.isArray(copy) || Util.isObject(copy)) {
		                if (Util.isArray(copy)) clone = src && Util.isArray(src) ? src : []
		                if (Util.isObject(copy)) clone = src && Util.isObject(src) ? src : {}
	
		                target[name] = Util.extend(clone, copy)
		            } else {
		                target[name] = copy
		            }
		        }
		    }
	
		    return target
		}
	
		Util.each = function each(obj, iterator, context) {
		    var i, key
		    if (this.type(obj) === 'number') {
		        for (i = 0; i < obj; i++) {
		            iterator(i, i)
		        }
		    } else if (obj.length === +obj.length) {
		        for (i = 0; i < obj.length; i++) {
		            if (iterator.call(context, obj[i], i, obj) === false) break
		        }
		    } else {
		        for (key in obj) {
		            if (iterator.call(context, obj[key], key, obj) === false) break
		        }
		    }
		}
	
		Util.type = function type(obj) {
		    return (obj === null || obj === undefined) ? String(obj) : Object.prototype.toString.call(obj).match(/\[object (\w+)\]/)[1].toLowerCase()
		}
	
		Util.each('String Object Array RegExp Function'.split(' '), function(value) {
		    Util['is' + value] = function(obj) {
		        return Util.type(obj) === value.toLowerCase()
		    }
		})
	
		Util.isObjectOrArray = function(value) {
		    return Util.isObject(value) || Util.isArray(value)
		}
	
		Util.isNumeric = function(value) {
		    return !isNaN(parseFloat(value)) && isFinite(value)
		}
	
		Util.keys = function(obj) {
		    var keys = [];
		    for (var key in obj) {
		        if (obj.hasOwnProperty(key)) keys.push(key)
		    }
		    return keys;
		}
		Util.values = function(obj) {
		    var values = [];
		    for (var key in obj) {
		        if (obj.hasOwnProperty(key)) values.push(obj[key])
		    }
		    return values;
		}
	
		/*
		    ### Mock.heredoc(fn)
	
		    * Mock.heredoc(fn)
	
		    以直观、安全的方式书写（多行）HTML 模板。
	
		    **使用示例**如下所示：
	
		        var tpl = Mock.heredoc(function() {
		            /*!
		        {{email}}{{age}}
		        <!-- Mock { 
		            email: '@EMAIL',
		            age: '@INT(1,100)'
		        } -->
		            *\/
		        })
		    
		    **相关阅读**
		    * [Creating multiline strings in JavaScript](http://stackoverflow.com/questions/805107/creating-multiline-strings-in-javascript)、
		*/
		Util.heredoc = function heredoc(fn) {
		    // 1. 移除起始的 function(){ /*!
		    // 2. 移除末尾的 */ }
		    // 3. 移除起始和末尾的空格
		    return fn.toString()
		        .replace(/^[^\/]+\/\*!?/, '')
		        .replace(/\*\/[^\/]+$/, '')
		        .replace(/^[\s\xA0]+/, '').replace(/[\s\xA0]+$/, '') // .trim()
		}
	
		Util.noop = function() {}
	
		module.exports = Util
	
	/***/ },
	/* 4 */
	/***/ function(module, exports, __webpack_require__) {
	
		/*
			## Parser
	
			解析数据模板（属性名部分）。
	
			* Parser.parse( name )
				
				```json
				{
					parameters: [ name, inc, range, decimal ],
					rnage: [ min , max ],
	
					min: min,
					max: max,
					count : count,
	
					decimal: decimal,
					dmin: dmin,
					dmax: dmax,
					dcount: dcount
				}
				```
		 */
	
		var Constant = __webpack_require__(2)
		var Random = __webpack_require__(5)
	
		/* jshint -W041 */
		module.exports = {
			parse: function(name) {
				name = name == undefined ? '' : (name + '')
	
				var parameters = (name || '').match(Constant.RE_KEY)
	
				var range = parameters && parameters[3] && parameters[3].match(Constant.RE_RANGE)
				var min = range && range[1] && parseInt(range[1], 10) // || 1
				var max = range && range[2] && parseInt(range[2], 10) // || 1
					// repeat || min-max || 1
					// var count = range ? !range[2] && parseInt(range[1], 10) || Random.integer(min, max) : 1
				var count = range ? !range[2] ? parseInt(range[1], 10) : Random.integer(min, max) : undefined
	
				var decimal = parameters && parameters[4] && parameters[4].match(Constant.RE_RANGE)
				var dmin = decimal && parseInt(decimal[1], 10) // || 0,
				var dmax = decimal && parseInt(decimal[2], 10) // || 0,
					// int || dmin-dmax || 0
				var dcount = decimal ? !decimal[2] && parseInt(decimal[1], 10) || Random.integer(dmin, dmax) : undefined
	
				var result = {
					// 1 name, 2 inc, 3 range, 4 decimal
					parameters: parameters,
					// 1 min, 2 max
					range: range,
					min: min,
					max: max,
					// min-max
					count: count,
					// 是否有 decimal
					decimal: decimal,
					dmin: dmin,
					dmax: dmax,
					// dmin-dimax
					dcount: dcount
				}
	
				for (var r in result) {
					if (result[r] != undefined) return result
				}
	
				return {}
			}
		}
	
	/***/ },
	/* 5 */
	/***/ function(module, exports, __webpack_require__) {
	
		/*
		    ## Mock.Random
		    
		    工具类，用于生成各种随机数据。
		*/
	
		var Util = __webpack_require__(3)
	
		var Random = {
		    extend: Util.extend
		}
	
		Random.extend(__webpack_require__(6))
		Random.extend(__webpack_require__(7))
		Random.extend(__webpack_require__(8))
		Random.extend(__webpack_require__(10))
		Random.extend(__webpack_require__(13))
		Random.extend(__webpack_require__(15))
		Random.extend(__webpack_require__(16))
		Random.extend(__webpack_require__(17))
		Random.extend(__webpack_require__(14))
		Random.extend(__webpack_require__(19))
	
		module.exports = Random
	
	/***/ },
	/* 6 */
	/***/ function(module, exports) {
	
		/*
		    ## Basics
		*/
		module.exports = {
		    // 返回一个随机的布尔值。
		    boolean: function(min, max, cur) {
		        if (cur !== undefined) {
		            min = typeof min !== 'undefined' && !isNaN(min) ? parseInt(min, 10) : 1
		            max = typeof max !== 'undefined' && !isNaN(max) ? parseInt(max, 10) : 1
		            return Math.random() > 1.0 / (min + max) * min ? !cur : cur
		        }
	
		        return Math.random() >= 0.5
		    },
		    bool: function(min, max, cur) {
		        return this.boolean(min, max, cur)
		    },
		    // 返回一个随机的自然数（大于等于 0 的整数）。
		    natural: function(min, max) {
		        min = typeof min !== 'undefined' ? parseInt(min, 10) : 0
		        max = typeof max !== 'undefined' ? parseInt(max, 10) : 9007199254740992 // 2^53
		        return Math.round(Math.random() * (max - min)) + min
		    },
		    // 返回一个随机的整数。
		    integer: function(min, max) {
		        min = typeof min !== 'undefined' ? parseInt(min, 10) : -9007199254740992
		        max = typeof max !== 'undefined' ? parseInt(max, 10) : 9007199254740992 // 2^53
		        return Math.round(Math.random() * (max - min)) + min
		    },
		    int: function(min, max) {
		        return this.integer(min, max)
		    },
		    // 返回一个随机的浮点数。
		    float: function(min, max, dmin, dmax) {
		        dmin = dmin === undefined ? 0 : dmin
		        dmin = Math.max(Math.min(dmin, 17), 0)
		        dmax = dmax === undefined ? 17 : dmax
		        dmax = Math.max(Math.min(dmax, 17), 0)
		        var ret = this.integer(min, max) + '.';
		        for (var i = 0, dcount = this.natural(dmin, dmax); i < dcount; i++) {
		            ret += (
		                // 最后一位不能为 0：如果最后一位为 0，会被 JS 引擎忽略掉。
		                (i < dcount - 1) ? this.character('number') : this.character('123456789')
		            )
		        }
		        return parseFloat(ret, 10)
		    },
		    // 返回一个随机字符。
		    character: function(pool) {
		        var pools = {
		            lower: 'abcdefghijklmnopqrstuvwxyz',
		            upper: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ',
		            number: '0123456789',
		            symbol: '!@#$%^&*()[]'
		        }
		        pools.alpha = pools.lower + pools.upper
		        pools['undefined'] = pools.lower + pools.upper + pools.number + pools.symbol
	
		        pool = pools[('' + pool).toLowerCase()] || pool
		        return pool.charAt(this.natural(0, pool.length - 1))
		    },
		    char: function(pool) {
		        return this.character(pool)
		    },
		    // 返回一个随机字符串。
		    string: function(pool, min, max) {
		        var len
		        switch (arguments.length) {
		            case 0: // ()
		                len = this.natural(3, 7)
		                break
		            case 1: // ( length )
		                len = pool
		                pool = undefined
		                break
		            case 2:
		                // ( pool, length )
		                if (typeof arguments[0] === 'string') {
		                    len = min
		                } else {
		                    // ( min, max )
		                    len = this.natural(pool, min)
		                    pool = undefined
		                }
		                break
		            case 3:
		                len = this.natural(min, max)
		                break
		        }
	
		        var text = ''
		        for (var i = 0; i < len; i++) {
		            text += this.character(pool)
		        }
	
		        return text
		    },
		    str: function( /*pool, min, max*/ ) {
		        return this.string.apply(this, arguments)
		    },
		    // 返回一个整型数组。
		    range: function(start, stop, step) {
		        // range( stop )
		        if (arguments.length <= 1) {
		            stop = start || 0;
		            start = 0;
		        }
		        // range( start, stop )
		        step = arguments[2] || 1;
	
		        start = +start
		        stop = +stop
		        step = +step
	
		        var len = Math.max(Math.ceil((stop - start) / step), 0);
		        var idx = 0;
		        var range = new Array(len);
	
		        while (idx < len) {
		            range[idx++] = start;
		            start += step;
		        }
	
		        return range;
		    }
		}
	
	/***/ },
	/* 7 */
	/***/ function(module, exports) {
	
		/*
		    ## Date
		*/
		var patternLetters = {
		    yyyy: 'getFullYear',
		    yy: function(date) {
		        return ('' + date.getFullYear()).slice(2)
		    },
		    y: 'yy',
	
		    MM: function(date) {
		        var m = date.getMonth() + 1
		        return m < 10 ? '0' + m : m
		    },
		    M: function(date) {
		        return date.getMonth() + 1
		    },
	
		    dd: function(date) {
		        var d = date.getDate()
		        return d < 10 ? '0' + d : d
		    },
		    d: 'getDate',
	
		    HH: function(date) {
		        var h = date.getHours()
		        return h < 10 ? '0' + h : h
		    },
		    H: 'getHours',
		    hh: function(date) {
		        var h = date.getHours() % 12
		        return h < 10 ? '0' + h : h
		    },
		    h: function(date) {
		        return date.getHours() % 12
		    },
	
		    mm: function(date) {
		        var m = date.getMinutes()
		        return m < 10 ? '0' + m : m
		    },
		    m: 'getMinutes',
	
		    ss: function(date) {
		        var s = date.getSeconds()
		        return s < 10 ? '0' + s : s
		    },
		    s: 'getSeconds',
	
		    SS: function(date) {
		        var ms = date.getMilliseconds()
		        return ms < 10 && '00' + ms || ms < 100 && '0' + ms || ms
		    },
		    S: 'getMilliseconds',
	
		    A: function(date) {
		        return date.getHours() < 12 ? 'AM' : 'PM'
		    },
		    a: function(date) {
		        return date.getHours() < 12 ? 'am' : 'pm'
		    },
		    T: 'getTime'
		}
		module.exports = {
		    // 日期占位符集合。
		    _patternLetters: patternLetters,
		    // 日期占位符正则。
		    _rformat: new RegExp((function() {
		        var re = []
		        for (var i in patternLetters) re.push(i)
		        return '(' + re.join('|') + ')'
		    })(), 'g'),
		    // 格式化日期。
		    _formatDate: function(date, format) {
		        return format.replace(this._rformat, function creatNewSubString($0, flag) {
		            return typeof patternLetters[flag] === 'function' ? patternLetters[flag](date) :
		                patternLetters[flag] in patternLetters ? creatNewSubString($0, patternLetters[flag]) :
		                date[patternLetters[flag]]()
		        })
		    },
		    // 生成一个随机的 Date 对象。
		    _randomDate: function(min, max) { // min, max
		        min = min === undefined ? new Date(0) : min
		        max = max === undefined ? new Date() : max
		        return new Date(Math.random() * (max.getTime() - min.getTime()))
		    },
		    // 返回一个随机的日期字符串。
		    date: function(format) {
		        format = format || 'yyyy-MM-dd'
		        return this._formatDate(this._randomDate(), format)
		    },
		    // 返回一个随机的时间字符串。
		    time: function(format) {
		        format = format || 'HH:mm:ss'
		        return this._formatDate(this._randomDate(), format)
		    },
		    // 返回一个随机的日期和时间字符串。
		    datetime: function(format) {
		        format = format || 'yyyy-MM-dd HH:mm:ss'
		        return this._formatDate(this._randomDate(), format)
		    },
		    // 返回当前的日期和时间字符串。
		    now: function(unit, format) {
		        // now(unit) now(format)
		        if (arguments.length === 1) {
		            // now(format)
		            if (!/year|month|day|hour|minute|second|week/.test(unit)) {
		                format = unit
		                unit = ''
		            }
		        }
		        unit = (unit || '').toLowerCase()
		        format = format || 'yyyy-MM-dd HH:mm:ss'
	
		        var date = new Date()
	
		        /* jshint -W086 */
		        // 参考自 http://momentjs.cn/docs/#/manipulating/start-of/
		        switch (unit) {
		            case 'year':
		                date.setMonth(0)
		            case 'month':
		                date.setDate(1)
		            case 'week':
		            case 'day':
		                date.setHours(0)
		            case 'hour':
		                date.setMinutes(0)
		            case 'minute':
		                date.setSeconds(0)
		            case 'second':
		                date.setMilliseconds(0)
		        }
		        switch (unit) {
		            case 'week':
		                date.setDate(date.getDate() - date.getDay())
		        }
	
		        return this._formatDate(date, format)
		    }
		}
	
	/***/ },
	/* 8 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* WEBPACK VAR INJECTION */(function(module) {/* global document  */
		/*
		    ## Image
		*/
		module.exports = {
		    // 常见的广告宽高
		    _adSize: [
		        '300x250', '250x250', '240x400', '336x280', '180x150',
		        '720x300', '468x60', '234x60', '88x31', '120x90',
		        '120x60', '120x240', '125x125', '728x90', '160x600',
		        '120x600', '300x600'
		    ],
		    // 常见的屏幕宽高
		    _screenSize: [
		        '320x200', '320x240', '640x480', '800x480', '800x480',
		        '1024x600', '1024x768', '1280x800', '1440x900', '1920x1200',
		        '2560x1600'
		    ],
		    // 常见的视频宽高
		    _videoSize: ['720x480', '768x576', '1280x720', '1920x1080'],
		    /*
		        生成一个随机的图片地址。
	
		        替代图片源
		            http://fpoimg.com/
		        参考自 
		            http://rensanning.iteye.com/blog/1933310
		            http://code.tutsplus.com/articles/the-top-8-placeholders-for-web-designers--net-19485
		    */
		    image: function(size, background, foreground, format, text) {
		        // Random.image( size, background, foreground, text )
		        if (arguments.length === 4) {
		            text = format
		            format = undefined
		        }
		        // Random.image( size, background, text )
		        if (arguments.length === 3) {
		            text = foreground
		            foreground = undefined
		        }
		        // Random.image()
		        if (!size) size = this.pick(this._adSize)
	
		        if (background && ~background.indexOf('#')) background = background.slice(1)
		        if (foreground && ~foreground.indexOf('#')) foreground = foreground.slice(1)
	
		        // http://dummyimage.com/600x400/cc00cc/470047.png&text=hello
		        return 'http://dummyimage.com/' + size +
		            (background ? '/' + background : '') +
		            (foreground ? '/' + foreground : '') +
		            (format ? '.' + format : '') +
		            (text ? '&text=' + text : '')
		    },
		    img: function() {
		        return this.image.apply(this, arguments)
		    },
	
		    /*
		        BrandColors
		        http://brandcolors.net/
		        A collection of major brand color codes curated by Galen Gidman.
		        大牌公司的颜色集合
	
		        // 获取品牌和颜色
		        $('h2').each(function(index, item){
		            item = $(item)
		            console.log('\'' + item.text() + '\'', ':', '\'' + item.next().text() + '\'', ',')
		        })
		    */
		    _brandColors: {
		        '4ormat': '#fb0a2a',
		        '500px': '#02adea',
		        'About.me (blue)': '#00405d',
		        'About.me (yellow)': '#ffcc33',
		        'Addvocate': '#ff6138',
		        'Adobe': '#ff0000',
		        'Aim': '#fcd20b',
		        'Amazon': '#e47911',
		        'Android': '#a4c639',
		        'Angie\'s List': '#7fbb00',
		        'AOL': '#0060a3',
		        'Atlassian': '#003366',
		        'Behance': '#053eff',
		        'Big Cartel': '#97b538',
		        'bitly': '#ee6123',
		        'Blogger': '#fc4f08',
		        'Boeing': '#0039a6',
		        'Booking.com': '#003580',
		        'Carbonmade': '#613854',
		        'Cheddar': '#ff7243',
		        'Code School': '#3d4944',
		        'Delicious': '#205cc0',
		        'Dell': '#3287c1',
		        'Designmoo': '#e54a4f',
		        'Deviantart': '#4e6252',
		        'Designer News': '#2d72da',
		        'Devour': '#fd0001',
		        'DEWALT': '#febd17',
		        'Disqus (blue)': '#59a3fc',
		        'Disqus (orange)': '#db7132',
		        'Dribbble': '#ea4c89',
		        'Dropbox': '#3d9ae8',
		        'Drupal': '#0c76ab',
		        'Dunked': '#2a323a',
		        'eBay': '#89c507',
		        'Ember': '#f05e1b',
		        'Engadget': '#00bdf6',
		        'Envato': '#528036',
		        'Etsy': '#eb6d20',
		        'Evernote': '#5ba525',
		        'Fab.com': '#dd0017',
		        'Facebook': '#3b5998',
		        'Firefox': '#e66000',
		        'Flickr (blue)': '#0063dc',
		        'Flickr (pink)': '#ff0084',
		        'Forrst': '#5b9a68',
		        'Foursquare': '#25a0ca',
		        'Garmin': '#007cc3',
		        'GetGlue': '#2d75a2',
		        'Gimmebar': '#f70078',
		        'GitHub': '#171515',
		        'Google Blue': '#0140ca',
		        'Google Green': '#16a61e',
		        'Google Red': '#dd1812',
		        'Google Yellow': '#fcca03',
		        'Google+': '#dd4b39',
		        'Grooveshark': '#f77f00',
		        'Groupon': '#82b548',
		        'Hacker News': '#ff6600',
		        'HelloWallet': '#0085ca',
		        'Heroku (light)': '#c7c5e6',
		        'Heroku (dark)': '#6567a5',
		        'HootSuite': '#003366',
		        'Houzz': '#73ba37',
		        'HTML5': '#ec6231',
		        'IKEA': '#ffcc33',
		        'IMDb': '#f3ce13',
		        'Instagram': '#3f729b',
		        'Intel': '#0071c5',
		        'Intuit': '#365ebf',
		        'Kickstarter': '#76cc1e',
		        'kippt': '#e03500',
		        'Kodery': '#00af81',
		        'LastFM': '#c3000d',
		        'LinkedIn': '#0e76a8',
		        'Livestream': '#cf0005',
		        'Lumo': '#576396',
		        'Mixpanel': '#a086d3',
		        'Meetup': '#e51937',
		        'Nokia': '#183693',
		        'NVIDIA': '#76b900',
		        'Opera': '#cc0f16',
		        'Path': '#e41f11',
		        'PayPal (dark)': '#1e477a',
		        'PayPal (light)': '#3b7bbf',
		        'Pinboard': '#0000e6',
		        'Pinterest': '#c8232c',
		        'PlayStation': '#665cbe',
		        'Pocket': '#ee4056',
		        'Prezi': '#318bff',
		        'Pusha': '#0f71b4',
		        'Quora': '#a82400',
		        'QUOTE.fm': '#66ceff',
		        'Rdio': '#008fd5',
		        'Readability': '#9c0000',
		        'Red Hat': '#cc0000',
		        'Resource': '#7eb400',
		        'Rockpack': '#0ba6ab',
		        'Roon': '#62b0d9',
		        'RSS': '#ee802f',
		        'Salesforce': '#1798c1',
		        'Samsung': '#0c4da2',
		        'Shopify': '#96bf48',
		        'Skype': '#00aff0',
		        'Snagajob': '#f47a20',
		        'Softonic': '#008ace',
		        'SoundCloud': '#ff7700',
		        'Space Box': '#f86960',
		        'Spotify': '#81b71a',
		        'Sprint': '#fee100',
		        'Squarespace': '#121212',
		        'StackOverflow': '#ef8236',
		        'Staples': '#cc0000',
		        'Status Chart': '#d7584f',
		        'Stripe': '#008cdd',
		        'StudyBlue': '#00afe1',
		        'StumbleUpon': '#f74425',
		        'T-Mobile': '#ea0a8e',
		        'Technorati': '#40a800',
		        'The Next Web': '#ef4423',
		        'Treehouse': '#5cb868',
		        'Trulia': '#5eab1f',
		        'Tumblr': '#34526f',
		        'Twitch.tv': '#6441a5',
		        'Twitter': '#00acee',
		        'TYPO3': '#ff8700',
		        'Ubuntu': '#dd4814',
		        'Ustream': '#3388ff',
		        'Verizon': '#ef1d1d',
		        'Vimeo': '#86c9ef',
		        'Vine': '#00a478',
		        'Virb': '#06afd8',
		        'Virgin Media': '#cc0000',
		        'Wooga': '#5b009c',
		        'WordPress (blue)': '#21759b',
		        'WordPress (orange)': '#d54e21',
		        'WordPress (grey)': '#464646',
		        'Wunderlist': '#2b88d9',
		        'XBOX': '#9bc848',
		        'XING': '#126567',
		        'Yahoo!': '#720e9e',
		        'Yandex': '#ffcc00',
		        'Yelp': '#c41200',
		        'YouTube': '#c4302b',
		        'Zalongo': '#5498dc',
		        'Zendesk': '#78a300',
		        'Zerply': '#9dcc7a',
		        'Zootool': '#5e8b1d'
		    },
		    _brandNames: function() {
		        var brands = [];
		        for (var b in this._brandColors) {
		            brands.push(b)
		        }
		        return brands
		    },
		    /*
		        生成一段随机的 Base64 图片编码。
	
		        https://github.com/imsky/holder
		        Holder renders image placeholders entirely on the client side.
	
		        dataImageHolder: function(size) {
		            return 'holder.js/' + size
		        },
		    */
		    dataImage: function(size, text) {
		        var canvas
		        if (typeof document !== 'undefined') {
		            canvas = document.createElement('canvas')
		        } else {
		            /*
		                https://github.com/Automattic/node-canvas
		                    npm install canvas --save
		                安装问题：
		                * http://stackoverflow.com/questions/22953206/gulp-issues-with-cario-install-command-not-found-when-trying-to-installing-canva
		                * https://github.com/Automattic/node-canvas/issues/415
		                * https://github.com/Automattic/node-canvas/wiki/_pages
	
		                PS：node-canvas 的安装过程实在是太繁琐了，所以不放入 package.json 的 dependencies。
		             */
		            var Canvas = module.require('canvas')
		            canvas = new Canvas()
		        }
	
		        var ctx = canvas && canvas.getContext && canvas.getContext("2d")
		        if (!canvas || !ctx) return ''
	
		        if (!size) size = this.pick(this._adSize)
		        text = text !== undefined ? text : size
	
		        size = size.split('x')
	
		        var width = parseInt(size[0], 10),
		            height = parseInt(size[1], 10),
		            background = this._brandColors[this.pick(this._brandNames())],
		            foreground = '#FFF',
		            text_height = 14,
		            font = 'sans-serif';
	
		        canvas.width = width
		        canvas.height = height
		        ctx.textAlign = 'center'
		        ctx.textBaseline = 'middle'
		        ctx.fillStyle = background
		        ctx.fillRect(0, 0, width, height)
		        ctx.fillStyle = foreground
		        ctx.font = 'bold ' + text_height + 'px ' + font
		        ctx.fillText(text, (width / 2), (height / 2), width)
		        return canvas.toDataURL('image/png')
		    }
		}
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9)(module)))
	
	/***/ },
	/* 9 */
	/***/ function(module, exports) {
	
		module.exports = function(module) {
			if(!module.webpackPolyfill) {
				module.deprecate = function() {};
				module.paths = [];
				// module.parent = undefined by default
				module.children = [];
				module.webpackPolyfill = 1;
			}
			return module;
		}
	
	
	/***/ },
	/* 10 */
	/***/ function(module, exports, __webpack_require__) {
	
		/*
		    ## Color
	
		    http://llllll.li/randomColor/
		        A color generator for JavaScript.
		        randomColor generates attractive colors by default. More specifically, randomColor produces bright colors with a reasonably high saturation. This makes randomColor particularly useful for data visualizations and generative art.
	
		    http://randomcolour.com/
		        var bg_colour = Math.floor(Math.random() * 16777215).toString(16);
		        bg_colour = "#" + ("000000" + bg_colour).slice(-6);
		        document.bgColor = bg_colour;
		    
		    http://martin.ankerl.com/2009/12/09/how-to-create-random-colors-programmatically/
		        Creating random colors is actually more difficult than it seems. The randomness itself is easy, but aesthetically pleasing randomness is more difficult.
		        https://github.com/devongovett/color-generator
	
		    http://www.paulirish.com/2009/random-hex-color-code-snippets/
		        Random Hex Color Code Generator in JavaScript
	
		    http://chancejs.com/#color
		        chance.color()
		        // => '#79c157'
		        chance.color({format: 'hex'})
		        // => '#d67118'
		        chance.color({format: 'shorthex'})
		        // => '#60f'
		        chance.color({format: 'rgb'})
		        // => 'rgb(110,52,164)'
	
		    http://tool.c7sky.com/webcolor
		        网页设计常用色彩搭配表
		    
		    https://github.com/One-com/one-color
		        An OO-based JavaScript color parser/computation toolkit with support for RGB, HSV, HSL, CMYK, and alpha channels.
		        API 很赞
	
		    https://github.com/harthur/color
		        JavaScript color conversion and manipulation library
	
		    https://github.com/leaverou/css-colors
		        Share & convert CSS colors
		    http://leaverou.github.io/css-colors/#slategray
		        Type a CSS color keyword, #hex, hsl(), rgba(), whatever:
	
		    色调 hue
		        http://baike.baidu.com/view/23368.htm
		        色调指的是一幅画中画面色彩的总体倾向，是大的色彩效果。
		    饱和度 saturation
		        http://baike.baidu.com/view/189644.htm
		        饱和度是指色彩的鲜艳程度，也称色彩的纯度。饱和度取决于该色中含色成分和消色成分（灰色）的比例。含色成分越大，饱和度越大；消色成分越大，饱和度越小。
		    亮度 brightness
		        http://baike.baidu.com/view/34773.htm
		        亮度是指发光体（反光体）表面发光（反光）强弱的物理量。
		    照度 luminosity
		        物体被照亮的程度,采用单位面积所接受的光通量来表示,表示单位为勒[克斯](Lux,lx) ,即 1m / m2 。
	
		    http://stackoverflow.com/questions/1484506/random-color-generator-in-javascript
		        var letters = '0123456789ABCDEF'.split('')
		        var color = '#'
		        for (var i = 0; i < 6; i++) {
		            color += letters[Math.floor(Math.random() * 16)]
		        }
		        return color
		    
		        // 随机生成一个无脑的颜色，格式为 '#RRGGBB'。
		        // _brainlessColor()
		        var color = Math.floor(
		            Math.random() *
		            (16 * 16 * 16 * 16 * 16 * 16 - 1)
		        ).toString(16)
		        color = "#" + ("000000" + color).slice(-6)
		        return color.toUpperCase()
		*/
	
		var Convert = __webpack_require__(11)
		var DICT = __webpack_require__(12)
	
		module.exports = {
		    // 随机生成一个有吸引力的颜色，格式为 '#RRGGBB'。
		    color: function(name) {
		        if (name || DICT[name]) return DICT[name].nicer
		        return this.hex()
		    },
		    // #DAC0DE
		    hex: function() {
		        var hsv = this._goldenRatioColor()
		        var rgb = Convert.hsv2rgb(hsv)
		        var hex = Convert.rgb2hex(rgb[0], rgb[1], rgb[2])
		        return hex
		    },
		    // rgb(128,255,255)
		    rgb: function() {
		        var hsv = this._goldenRatioColor()
		        var rgb = Convert.hsv2rgb(hsv)
		        return 'rgb(' +
		            parseInt(rgb[0], 10) + ', ' +
		            parseInt(rgb[1], 10) + ', ' +
		            parseInt(rgb[2], 10) + ')'
		    },
		    // rgba(128,255,255,0.3)
		    rgba: function() {
		        var hsv = this._goldenRatioColor()
		        var rgb = Convert.hsv2rgb(hsv)
		        return 'rgba(' +
		            parseInt(rgb[0], 10) + ', ' +
		            parseInt(rgb[1], 10) + ', ' +
		            parseInt(rgb[2], 10) + ', ' +
		            Math.random().toFixed(2) + ')'
		    },
		    // hsl(300,80%,90%)
		    hsl: function() {
		        var hsv = this._goldenRatioColor()
		        var hsl = Convert.hsv2hsl(hsv)
		        return 'hsl(' +
		            parseInt(hsl[0], 10) + ', ' +
		            parseInt(hsl[1], 10) + ', ' +
		            parseInt(hsl[2], 10) + ')'
		    },
		    // http://martin.ankerl.com/2009/12/09/how-to-create-random-colors-programmatically/
		    // https://github.com/devongovett/color-generator/blob/master/index.js
		    // 随机生成一个有吸引力的颜色。
		    _goldenRatioColor: function(saturation, value) {
		        this._goldenRatio = 0.618033988749895
		        this._hue = this._hue || Math.random()
		        this._hue += this._goldenRatio
		        this._hue %= 1
	
		        if (typeof saturation !== "number") saturation = 0.5;
		        if (typeof value !== "number") value = 0.95;
	
		        return [
		            this._hue * 360,
		            saturation * 100,
		            value * 100
		        ]
		    }
		}
	
	/***/ },
	/* 11 */
	/***/ function(module, exports) {
	
		/*
		    ## Color Convert
	
		    http://blog.csdn.net/idfaya/article/details/6770414
		        颜色空间RGB与HSV(HSL)的转换
		*/
		// https://github.com/harthur/color-convert/blob/master/conversions.js
		module.exports = {
			rgb2hsl: function rgb2hsl(rgb) {
				var r = rgb[0] / 255,
					g = rgb[1] / 255,
					b = rgb[2] / 255,
					min = Math.min(r, g, b),
					max = Math.max(r, g, b),
					delta = max - min,
					h, s, l;
	
				if (max == min)
					h = 0;
				else if (r == max)
					h = (g - b) / delta;
				else if (g == max)
					h = 2 + (b - r) / delta;
				else if (b == max)
					h = 4 + (r - g) / delta;
	
				h = Math.min(h * 60, 360);
	
				if (h < 0)
					h += 360;
	
				l = (min + max) / 2;
	
				if (max == min)
					s = 0;
				else if (l <= 0.5)
					s = delta / (max + min);
				else
					s = delta / (2 - max - min);
	
				return [h, s * 100, l * 100];
			},
			rgb2hsv: function rgb2hsv(rgb) {
				var r = rgb[0],
					g = rgb[1],
					b = rgb[2],
					min = Math.min(r, g, b),
					max = Math.max(r, g, b),
					delta = max - min,
					h, s, v;
	
				if (max === 0)
					s = 0;
				else
					s = (delta / max * 1000) / 10;
	
				if (max == min)
					h = 0;
				else if (r == max)
					h = (g - b) / delta;
				else if (g == max)
					h = 2 + (b - r) / delta;
				else if (b == max)
					h = 4 + (r - g) / delta;
	
				h = Math.min(h * 60, 360);
	
				if (h < 0)
					h += 360;
	
				v = ((max / 255) * 1000) / 10;
	
				return [h, s, v];
			},
			hsl2rgb: function hsl2rgb(hsl) {
				var h = hsl[0] / 360,
					s = hsl[1] / 100,
					l = hsl[2] / 100,
					t1, t2, t3, rgb, val;
	
				if (s === 0) {
					val = l * 255;
					return [val, val, val];
				}
	
				if (l < 0.5)
					t2 = l * (1 + s);
				else
					t2 = l + s - l * s;
				t1 = 2 * l - t2;
	
				rgb = [0, 0, 0];
				for (var i = 0; i < 3; i++) {
					t3 = h + 1 / 3 * -(i - 1);
					if (t3 < 0) t3++;
					if (t3 > 1) t3--;
	
					if (6 * t3 < 1)
						val = t1 + (t2 - t1) * 6 * t3;
					else if (2 * t3 < 1)
						val = t2;
					else if (3 * t3 < 2)
						val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;
					else
						val = t1;
	
					rgb[i] = val * 255;
				}
	
				return rgb;
			},
			hsl2hsv: function hsl2hsv(hsl) {
				var h = hsl[0],
					s = hsl[1] / 100,
					l = hsl[2] / 100,
					sv, v;
				l *= 2;
				s *= (l <= 1) ? l : 2 - l;
				v = (l + s) / 2;
				sv = (2 * s) / (l + s);
				return [h, sv * 100, v * 100];
			},
			hsv2rgb: function hsv2rgb(hsv) {
				var h = hsv[0] / 60
				var s = hsv[1] / 100
				var v = hsv[2] / 100
				var hi = Math.floor(h) % 6
	
				var f = h - Math.floor(h)
				var p = 255 * v * (1 - s)
				var q = 255 * v * (1 - (s * f))
				var t = 255 * v * (1 - (s * (1 - f)))
	
				v = 255 * v
	
				switch (hi) {
					case 0:
						return [v, t, p]
					case 1:
						return [q, v, p]
					case 2:
						return [p, v, t]
					case 3:
						return [p, q, v]
					case 4:
						return [t, p, v]
					case 5:
						return [v, p, q]
				}
			},
			hsv2hsl: function hsv2hsl(hsv) {
				var h = hsv[0],
					s = hsv[1] / 100,
					v = hsv[2] / 100,
					sl, l;
	
				l = (2 - s) * v;
				sl = s * v;
				sl /= (l <= 1) ? l : 2 - l;
				l /= 2;
				return [h, sl * 100, l * 100];
			},
			// http://www.140byt.es/keywords/color
			rgb2hex: function(
				a, // red, as a number from 0 to 255
				b, // green, as a number from 0 to 255
				c // blue, as a number from 0 to 255
			) {
				return "#" + ((256 + a << 8 | b) << 8 | c).toString(16).slice(1)
			},
			hex2rgb: function(
				a // take a "#xxxxxx" hex string,
			) {
				a = '0x' + a.slice(1).replace(a.length > 4 ? a : /./g, '$&$&') | 0;
				return [a >> 16, a >> 8 & 255, a & 255]
			}
		}
	
	/***/ },
	/* 12 */
	/***/ function(module, exports) {
	
		/*
		    ## Color 字典数据
	
		    字典数据来源 [A nicer color palette for the web](http://clrs.cc/)
		*/
		module.exports = {
		    // name value nicer
		    navy: {
		        value: '#000080',
		        nicer: '#001F3F'
		    },
		    blue: {
		        value: '#0000ff',
		        nicer: '#0074D9'
		    },
		    aqua: {
		        value: '#00ffff',
		        nicer: '#7FDBFF'
		    },
		    teal: {
		        value: '#008080',
		        nicer: '#39CCCC'
		    },
		    olive: {
		        value: '#008000',
		        nicer: '#3D9970'
		    },
		    green: {
		        value: '#008000',
		        nicer: '#2ECC40'
		    },
		    lime: {
		        value: '#00ff00',
		        nicer: '#01FF70'
		    },
		    yellow: {
		        value: '#ffff00',
		        nicer: '#FFDC00'
		    },
		    orange: {
		        value: '#ffa500',
		        nicer: '#FF851B'
		    },
		    red: {
		        value: '#ff0000',
		        nicer: '#FF4136'
		    },
		    maroon: {
		        value: '#800000',
		        nicer: '#85144B'
		    },
		    fuchsia: {
		        value: '#ff00ff',
		        nicer: '#F012BE'
		    },
		    purple: {
		        value: '#800080',
		        nicer: '#B10DC9'
		    },
		    silver: {
		        value: '#c0c0c0',
		        nicer: '#DDDDDD'
		    },
		    gray: {
		        value: '#808080',
		        nicer: '#AAAAAA'
		    },
		    black: {
		        value: '#000000',
		        nicer: '#111111'
		    },
		    white: {
		        value: '#FFFFFF',
		        nicer: '#FFFFFF'
		    }
		}
	
	/***/ },
	/* 13 */
	/***/ function(module, exports, __webpack_require__) {
	
		/*
		    ## Text
	
		    http://www.lipsum.com/
		*/
		var Basic = __webpack_require__(6)
		var Helper = __webpack_require__(14)
	
		function range(defaultMin, defaultMax, min, max) {
		    return min === undefined ? Basic.natural(defaultMin, defaultMax) : // ()
		        max === undefined ? min : // ( len )
		        Basic.natural(parseInt(min, 10), parseInt(max, 10)) // ( min, max )
		}
	
		module.exports = {
		    // 随机生成一段文本。
		    paragraph: function(min, max) {
		        var len = range(3, 7, min, max)
		        var result = []
		        for (var i = 0; i < len; i++) {
		            result.push(this.sentence())
		        }
		        return result.join(' ')
		    },
		    // 
		    cparagraph: function(min, max) {
		        var len = range(3, 7, min, max)
		        var result = []
		        for (var i = 0; i < len; i++) {
		            result.push(this.csentence())
		        }
		        return result.join('')
		    },
		    // 随机生成一个句子，第一个单词的首字母大写。
		    sentence: function(min, max) {
		        var len = range(12, 18, min, max)
		        var result = []
		        for (var i = 0; i < len; i++) {
		            result.push(this.word())
		        }
		        return Helper.capitalize(result.join(' ')) + '.'
		    },
		    // 随机生成一个中文句子。
		    csentence: function(min, max) {
		        var len = range(12, 18, min, max)
		        var result = []
		        for (var i = 0; i < len; i++) {
		            result.push(this.cword())
		        }
	
		        return result.join('') + '。'
		    },
		    // 随机生成一个单词。
		    word: function(min, max) {
		        var len = range(3, 10, min, max)
		        var result = '';
		        for (var i = 0; i < len; i++) {
		            result += Basic.character('lower')
		        }
		        return result
		    },
		    // 随机生成一个或多个汉字。
		    cword: function(pool, min, max) {
		        // 最常用的 500 个汉字 http://baike.baidu.com/view/568436.htm
		        var DICT_KANZI = '的一是在不了有和人这中大为上个国我以要他时来用们生到作地于出就分对成会可主发年动同工也能下过子说产种面而方后多定行学法所民得经十三之进着等部度家电力里如水化高自二理起小物现实加量都两体制机当使点从业本去把性好应开它合还因由其些然前外天政四日那社义事平形相全表间样与关各重新线内数正心反你明看原又么利比或但质气第向道命此变条只没结解问意建月公无系军很情者最立代想已通并提直题党程展五果料象员革位入常文总次品式活设及管特件长求老头基资边流路级少图山统接知较将组见计别她手角期根论运农指几九区强放决西被干做必战先回则任取据处队南给色光门即保治北造百规热领七海口东导器压志世金增争济阶油思术极交受联什认六共权收证改清己美再采转更单风切打白教速花带安场身车例真务具万每目至达走积示议声报斗完类八离华名确才科张信马节话米整空元况今集温传土许步群广石记需段研界拉林律叫且究观越织装影算低持音众书布复容儿须际商非验连断深难近矿千周委素技备半办青省列习响约支般史感劳便团往酸历市克何除消构府称太准精值号率族维划选标写存候毛亲快效斯院查江型眼王按格养易置派层片始却专状育厂京识适属圆包火住调满县局照参红细引听该铁价严龙飞'
	
		        var len
		        switch (arguments.length) {
		            case 0: // ()
		                pool = DICT_KANZI
		                len = 1
		                break
		            case 1: // ( pool )
		                if (typeof arguments[0] === 'string') {
		                    len = 1
		                } else {
		                    // ( length )
		                    len = pool
		                    pool = DICT_KANZI
		                }
		                break
		            case 2:
		                // ( pool, length )
		                if (typeof arguments[0] === 'string') {
		                    len = min
		                } else {
		                    // ( min, max )
		                    len = this.natural(pool, min)
		                    pool = DICT_KANZI
		                }
		                break
		            case 3:
		                len = this.natural(min, max)
		                break
		        }
	
		        var result = ''
		        for (var i = 0; i < len; i++) {
		            result += pool.charAt(this.natural(0, pool.length - 1))
		        }
		        return result
		    },
		    // 随机生成一句标题，其中每个单词的首字母大写。
		    title: function(min, max) {
		        var len = range(3, 7, min, max)
		        var result = []
		        for (var i = 0; i < len; i++) {
		            result.push(this.capitalize(this.word()))
		        }
		        return result.join(' ')
		    },
		    // 随机生成一句中文标题。
		    ctitle: function(min, max) {
		        var len = range(3, 7, min, max)
		        var result = []
		        for (var i = 0; i < len; i++) {
		            result.push(this.cword())
		        }
		        return result.join('')
		    }
		}
	
	/***/ },
	/* 14 */
	/***/ function(module, exports, __webpack_require__) {
	
		/*
		    ## Helpers
		*/
	
		var Util = __webpack_require__(3)
	
		module.exports = {
			// 把字符串的第一个字母转换为大写。
			capitalize: function(word) {
				return (word + '').charAt(0).toUpperCase() + (word + '').substr(1)
			},
			// 把字符串转换为大写。
			upper: function(str) {
				return (str + '').toUpperCase()
			},
			// 把字符串转换为小写。
			lower: function(str) {
				return (str + '').toLowerCase()
			},
			// 从数组中随机选取一个元素，并返回。
			pick: function pick(arr, min, max) {
				// pick( item1, item2 ... )
				if (!Util.isArray(arr)) {
					arr = [].slice.call(arguments)
					min = 1
					max = 1
				} else {
					// pick( [ item1, item2 ... ] )
					if (min === undefined) min = 1
	
					// pick( [ item1, item2 ... ], count )
					if (max === undefined) max = min
				}
	
				if (min === 1 && max === 1) return arr[this.natural(0, arr.length - 1)]
	
				// pick( [ item1, item2 ... ], min, max )
				return this.shuffle(arr, min, max)
	
				// 通过参数个数判断方法签名，扩展性太差！#90
				// switch (arguments.length) {
				// 	case 1:
				// 		// pick( [ item1, item2 ... ] )
				// 		return arr[this.natural(0, arr.length - 1)]
				// 	case 2:
				// 		// pick( [ item1, item2 ... ], count )
				// 		max = min
				// 			/* falls through */
				// 	case 3:
				// 		// pick( [ item1, item2 ... ], min, max )
				// 		return this.shuffle(arr, min, max)
				// }
			},
			/*
			    打乱数组中元素的顺序，并返回。
			    Given an array, scramble the order and return it.
	
			    其他的实现思路：
			        // https://code.google.com/p/jslibs/wiki/JavascriptTips
			        result = result.sort(function() {
			            return Math.random() - 0.5
			        })
			*/
			shuffle: function shuffle(arr, min, max) {
				arr = arr || []
				var old = arr.slice(0),
					result = [],
					index = 0,
					length = old.length;
				for (var i = 0; i < length; i++) {
					index = this.natural(0, old.length - 1)
					result.push(old[index])
					old.splice(index, 1)
				}
				switch (arguments.length) {
					case 0:
					case 1:
						return result
					case 2:
						max = min
							/* falls through */
					case 3:
						min = parseInt(min, 10)
						max = parseInt(max, 10)
						return result.slice(0, this.natural(min, max))
				}
			},
			/*
			    * Random.order(item, item)
			    * Random.order([item, item ...])
	
			    顺序获取数组中的元素
	
			    [JSON导入数组支持数组数据录入](https://github.com/thx/RAP/issues/22)
	
			    不支持单独调用！
			*/
			order: function order(array) {
				order.cache = order.cache || {}
	
				if (arguments.length > 1) array = [].slice.call(arguments, 0)
	
				// options.context.path/templatePath
				var options = order.options
				var templatePath = options.context.templatePath.join('.')
	
				var cache = (
					order.cache[templatePath] = order.cache[templatePath] || {
						index: 0,
						array: array
					}
				)
	
				return cache.array[cache.index++ % cache.array.length]
			}
		}
	
	/***/ },
	/* 15 */
	/***/ function(module, exports) {
	
		/*
		    ## Name
	
		    [Beyond the Top 1000 Names](http://www.ssa.gov/oact/babynames/limits.html)
		*/
		module.exports = {
			// 随机生成一个常见的英文名。
			first: function() {
				var names = [
					// male
					"James", "John", "Robert", "Michael", "William",
					"David", "Richard", "Charles", "Joseph", "Thomas",
					"Christopher", "Daniel", "Paul", "Mark", "Donald",
					"George", "Kenneth", "Steven", "Edward", "Brian",
					"Ronald", "Anthony", "Kevin", "Jason", "Matthew",
					"Gary", "Timothy", "Jose", "Larry", "Jeffrey",
					"Frank", "Scott", "Eric"
				].concat([
					// female
					"Mary", "Patricia", "Linda", "Barbara", "Elizabeth",
					"Jennifer", "Maria", "Susan", "Margaret", "Dorothy",
					"Lisa", "Nancy", "Karen", "Betty", "Helen",
					"Sandra", "Donna", "Carol", "Ruth", "Sharon",
					"Michelle", "Laura", "Sarah", "Kimberly", "Deborah",
					"Jessica", "Shirley", "Cynthia", "Angela", "Melissa",
					"Brenda", "Amy", "Anna"
				])
				return this.pick(names)
					// or this.capitalize(this.word())
			},
			// 随机生成一个常见的英文姓。
			last: function() {
				var names = [
					"Smith", "Johnson", "Williams", "Brown", "Jones",
					"Miller", "Davis", "Garcia", "Rodriguez", "Wilson",
					"Martinez", "Anderson", "Taylor", "Thomas", "Hernandez",
					"Moore", "Martin", "Jackson", "Thompson", "White",
					"Lopez", "Lee", "Gonzalez", "Harris", "Clark",
					"Lewis", "Robinson", "Walker", "Perez", "Hall",
					"Young", "Allen"
				]
				return this.pick(names)
					// or this.capitalize(this.word())
			},
			// 随机生成一个常见的英文姓名。
			name: function(middle) {
				return this.first() + ' ' +
					(middle ? this.first() + ' ' : '') +
					this.last()
			},
			/*
			    随机生成一个常见的中文姓。
			    [世界常用姓氏排行](http://baike.baidu.com/view/1719115.htm)
			    [玄派网 - 网络小说创作辅助平台](http://xuanpai.sinaapp.com/)
			 */
			cfirst: function() {
				var names = (
					'王 李 张 刘 陈 杨 赵 黄 周 吴 ' +
					'徐 孙 胡 朱 高 林 何 郭 马 罗 ' +
					'梁 宋 郑 谢 韩 唐 冯 于 董 萧 ' +
					'程 曹 袁 邓 许 傅 沈 曾 彭 吕 ' +
					'苏 卢 蒋 蔡 贾 丁 魏 薛 叶 阎 ' +
					'余 潘 杜 戴 夏 锺 汪 田 任 姜 ' +
					'范 方 石 姚 谭 廖 邹 熊 金 陆 ' +
					'郝 孔 白 崔 康 毛 邱 秦 江 史 ' +
					'顾 侯 邵 孟 龙 万 段 雷 钱 汤 ' +
					'尹 黎 易 常 武 乔 贺 赖 龚 文'
				).split(' ')
				return this.pick(names)
			},
			/*
			    随机生成一个常见的中文名。
			    [中国最常见名字前50名_三九算命网](http://www.name999.net/xingming/xingshi/20131004/48.html)
			 */
			clast: function() {
				var names = (
					'伟 芳 娜 秀英 敏 静 丽 强 磊 军 ' +
					'洋 勇 艳 杰 娟 涛 明 超 秀兰 霞 ' +
					'平 刚 桂英'
				).split(' ')
				return this.pick(names)
			},
			// 随机生成一个常见的中文姓名。
			cname: function() {
				return this.cfirst() + this.clast()
			}
		}
	
	/***/ },
	/* 16 */
	/***/ function(module, exports) {
	
		/*
		    ## Web
		*/
		module.exports = {
		    /*
		        随机生成一个 URL。
	
		        [URL 规范](http://www.w3.org/Addressing/URL/url-spec.txt)
		            http                    Hypertext Transfer Protocol 
		            ftp                     File Transfer protocol 
		            gopher                  The Gopher protocol 
		            mailto                  Electronic mail address 
		            mid                     Message identifiers for electronic mail 
		            cid                     Content identifiers for MIME body part 
		            news                    Usenet news 
		            nntp                    Usenet news for local NNTP access only 
		            prospero                Access using the prospero protocols 
		            telnet rlogin tn3270    Reference to interactive sessions
		            wais                    Wide Area Information Servers 
		    */
		    url: function(protocol, host) {
		        return (protocol || this.protocol()) + '://' + // protocol?
		            (host || this.domain()) + // host?
		            '/' + this.word()
		    },
		    // 随机生成一个 URL 协议。
		    protocol: function() {
		        return this.pick(
		            // 协议簇
		            'http ftp gopher mailto mid cid news nntp prospero telnet rlogin tn3270 wais'.split(' ')
		        )
		    },
		    // 随机生成一个域名。
		    domain: function(tld) {
		        return this.word() + '.' + (tld || this.tld())
		    },
		    /*
		        随机生成一个顶级域名。
		        国际顶级域名 international top-level domain-names, iTLDs
		        国家顶级域名 national top-level domainnames, nTLDs
		        [域名后缀大全](http://www.163ns.com/zixun/post/4417.html)
		    */
		    tld: function() { // Top Level Domain
		        return this.pick(
		            (
		                // 域名后缀
		                'com net org edu gov int mil cn ' +
		                // 国内域名
		                'com.cn net.cn gov.cn org.cn ' +
		                // 中文国内域名
		                '中国 中国互联.公司 中国互联.网络 ' +
		                // 新国际域名
		                'tel biz cc tv info name hk mobi asia cd travel pro museum coop aero ' +
		                // 世界各国域名后缀
		                'ad ae af ag ai al am an ao aq ar as at au aw az ba bb bd be bf bg bh bi bj bm bn bo br bs bt bv bw by bz ca cc cf cg ch ci ck cl cm cn co cq cr cu cv cx cy cz de dj dk dm do dz ec ee eg eh es et ev fi fj fk fm fo fr ga gb gd ge gf gh gi gl gm gn gp gr gt gu gw gy hk hm hn hr ht hu id ie il in io iq ir is it jm jo jp ke kg kh ki km kn kp kr kw ky kz la lb lc li lk lr ls lt lu lv ly ma mc md mg mh ml mm mn mo mp mq mr ms mt mv mw mx my mz na nc ne nf ng ni nl no np nr nt nu nz om qa pa pe pf pg ph pk pl pm pn pr pt pw py re ro ru rw sa sb sc sd se sg sh si sj sk sl sm sn so sr st su sy sz tc td tf tg th tj tk tm tn to tp tr tt tv tw tz ua ug uk us uy va vc ve vg vn vu wf ws ye yu za zm zr zw'
		            ).split(' ')
		        )
		    },
		    // 随机生成一个邮件地址。
		    email: function(domain) {
		        return this.character('lower') + '.' + this.word() + '@' +
		            (
		                domain ||
		                (this.word() + '.' + this.tld())
		            )
		            // return this.character('lower') + '.' + this.last().toLowerCase() + '@' + this.last().toLowerCase() + '.' + this.tld()
		            // return this.word() + '@' + (domain || this.domain())
		    },
		    // 随机生成一个 IP 地址。
		    ip: function() {
		        return this.natural(0, 255) + '.' +
		            this.natural(0, 255) + '.' +
		            this.natural(0, 255) + '.' +
		            this.natural(0, 255)
		    }
		}
	
	/***/ },
	/* 17 */
	/***/ function(module, exports, __webpack_require__) {
	
		/*
		    ## Address
		*/
	
		var DICT = __webpack_require__(18)
		var REGION = ['东北', '华北', '华东', '华中', '华南', '西南', '西北']
	
		module.exports = {
		    // 随机生成一个大区。
		    region: function() {
		        return this.pick(REGION)
		    },
		    // 随机生成一个（中国）省（或直辖市、自治区、特别行政区）。
		    province: function() {
		        return this.pick(DICT).name
		    },
		    // 随机生成一个（中国）市。
		    city: function(prefix) {
		        var province = this.pick(DICT)
		        var city = this.pick(province.children)
		        return prefix ? [province.name, city.name].join(' ') : city.name
		    },
		    // 随机生成一个（中国）县。
		    county: function(prefix) {
		        var province = this.pick(DICT)
		        var city = this.pick(province.children)
		        var county = this.pick(city.children) || {
		            name: '-'
		        }
		        return prefix ? [province.name, city.name, county.name].join(' ') : county.name
		    },
		    // 随机生成一个邮政编码（六位数字）。
		    zip: function(len) {
		        var zip = ''
		        for (var i = 0; i < (len || 6); i++) zip += this.natural(0, 9)
		        return zip
		    }
	
		    // address: function() {},
		    // phone: function() {},
		    // areacode: function() {},
		    // street: function() {},
		    // street_suffixes: function() {},
		    // street_suffix: function() {},
		    // states: function() {},
		    // state: function() {},
		}
	
	/***/ },
	/* 18 */
	/***/ function(module, exports) {
	
		/*
		    ## Address 字典数据
	
		    字典数据来源 http://www.atatech.org/articles/30028?rnd=254259856
	
		    国标 省（市）级行政区划码表
	
		    华北   北京市 天津市 河北省 山西省 内蒙古自治区
		    东北   辽宁省 吉林省 黑龙江省
		    华东   上海市 江苏省 浙江省 安徽省 福建省 江西省 山东省
		    华南   广东省 广西壮族自治区 海南省
		    华中   河南省 湖北省 湖南省
		    西南   重庆市 四川省 贵州省 云南省 西藏自治区
		    西北   陕西省 甘肃省 青海省 宁夏回族自治区 新疆维吾尔自治区
		    港澳台 香港特别行政区 澳门特别行政区 台湾省
		    
		    **排序**
		    
		    ```js
		    var map = {}
		    _.each(_.keys(REGIONS),function(id){
		      map[id] = REGIONS[ID]
		    })
		    JSON.stringify(map)
		    ```
		*/
		var DICT = {
		    "110000": "北京",
		    "110100": "北京市",
		    "110101": "东城区",
		    "110102": "西城区",
		    "110105": "朝阳区",
		    "110106": "丰台区",
		    "110107": "石景山区",
		    "110108": "海淀区",
		    "110109": "门头沟区",
		    "110111": "房山区",
		    "110112": "通州区",
		    "110113": "顺义区",
		    "110114": "昌平区",
		    "110115": "大兴区",
		    "110116": "怀柔区",
		    "110117": "平谷区",
		    "110228": "密云县",
		    "110229": "延庆县",
		    "110230": "其它区",
		    "120000": "天津",
		    "120100": "天津市",
		    "120101": "和平区",
		    "120102": "河东区",
		    "120103": "河西区",
		    "120104": "南开区",
		    "120105": "河北区",
		    "120106": "红桥区",
		    "120110": "东丽区",
		    "120111": "西青区",
		    "120112": "津南区",
		    "120113": "北辰区",
		    "120114": "武清区",
		    "120115": "宝坻区",
		    "120116": "滨海新区",
		    "120221": "宁河县",
		    "120223": "静海县",
		    "120225": "蓟县",
		    "120226": "其它区",
		    "130000": "河北省",
		    "130100": "石家庄市",
		    "130102": "长安区",
		    "130103": "桥东区",
		    "130104": "桥西区",
		    "130105": "新华区",
		    "130107": "井陉矿区",
		    "130108": "裕华区",
		    "130121": "井陉县",
		    "130123": "正定县",
		    "130124": "栾城县",
		    "130125": "行唐县",
		    "130126": "灵寿县",
		    "130127": "高邑县",
		    "130128": "深泽县",
		    "130129": "赞皇县",
		    "130130": "无极县",
		    "130131": "平山县",
		    "130132": "元氏县",
		    "130133": "赵县",
		    "130181": "辛集市",
		    "130182": "藁城市",
		    "130183": "晋州市",
		    "130184": "新乐市",
		    "130185": "鹿泉市",
		    "130186": "其它区",
		    "130200": "唐山市",
		    "130202": "路南区",
		    "130203": "路北区",
		    "130204": "古冶区",
		    "130205": "开平区",
		    "130207": "丰南区",
		    "130208": "丰润区",
		    "130223": "滦县",
		    "130224": "滦南县",
		    "130225": "乐亭县",
		    "130227": "迁西县",
		    "130229": "玉田县",
		    "130230": "曹妃甸区",
		    "130281": "遵化市",
		    "130283": "迁安市",
		    "130284": "其它区",
		    "130300": "秦皇岛市",
		    "130302": "海港区",
		    "130303": "山海关区",
		    "130304": "北戴河区",
		    "130321": "青龙满族自治县",
		    "130322": "昌黎县",
		    "130323": "抚宁县",
		    "130324": "卢龙县",
		    "130398": "其它区",
		    "130400": "邯郸市",
		    "130402": "邯山区",
		    "130403": "丛台区",
		    "130404": "复兴区",
		    "130406": "峰峰矿区",
		    "130421": "邯郸县",
		    "130423": "临漳县",
		    "130424": "成安县",
		    "130425": "大名县",
		    "130426": "涉县",
		    "130427": "磁县",
		    "130428": "肥乡县",
		    "130429": "永年县",
		    "130430": "邱县",
		    "130431": "鸡泽县",
		    "130432": "广平县",
		    "130433": "馆陶县",
		    "130434": "魏县",
		    "130435": "曲周县",
		    "130481": "武安市",
		    "130482": "其它区",
		    "130500": "邢台市",
		    "130502": "桥东区",
		    "130503": "桥西区",
		    "130521": "邢台县",
		    "130522": "临城县",
		    "130523": "内丘县",
		    "130524": "柏乡县",
		    "130525": "隆尧县",
		    "130526": "任县",
		    "130527": "南和县",
		    "130528": "宁晋县",
		    "130529": "巨鹿县",
		    "130530": "新河县",
		    "130531": "广宗县",
		    "130532": "平乡县",
		    "130533": "威县",
		    "130534": "清河县",
		    "130535": "临西县",
		    "130581": "南宫市",
		    "130582": "沙河市",
		    "130583": "其它区",
		    "130600": "保定市",
		    "130602": "新市区",
		    "130603": "北市区",
		    "130604": "南市区",
		    "130621": "满城县",
		    "130622": "清苑县",
		    "130623": "涞水县",
		    "130624": "阜平县",
		    "130625": "徐水县",
		    "130626": "定兴县",
		    "130627": "唐县",
		    "130628": "高阳县",
		    "130629": "容城县",
		    "130630": "涞源县",
		    "130631": "望都县",
		    "130632": "安新县",
		    "130633": "易县",
		    "130634": "曲阳县",
		    "130635": "蠡县",
		    "130636": "顺平县",
		    "130637": "博野县",
		    "130638": "雄县",
		    "130681": "涿州市",
		    "130682": "定州市",
		    "130683": "安国市",
		    "130684": "高碑店市",
		    "130699": "其它区",
		    "130700": "张家口市",
		    "130702": "桥东区",
		    "130703": "桥西区",
		    "130705": "宣化区",
		    "130706": "下花园区",
		    "130721": "宣化县",
		    "130722": "张北县",
		    "130723": "康保县",
		    "130724": "沽源县",
		    "130725": "尚义县",
		    "130726": "蔚县",
		    "130727": "阳原县",
		    "130728": "怀安县",
		    "130729": "万全县",
		    "130730": "怀来县",
		    "130731": "涿鹿县",
		    "130732": "赤城县",
		    "130733": "崇礼县",
		    "130734": "其它区",
		    "130800": "承德市",
		    "130802": "双桥区",
		    "130803": "双滦区",
		    "130804": "鹰手营子矿区",
		    "130821": "承德县",
		    "130822": "兴隆县",
		    "130823": "平泉县",
		    "130824": "滦平县",
		    "130825": "隆化县",
		    "130826": "丰宁满族自治县",
		    "130827": "宽城满族自治县",
		    "130828": "围场满族蒙古族自治县",
		    "130829": "其它区",
		    "130900": "沧州市",
		    "130902": "新华区",
		    "130903": "运河区",
		    "130921": "沧县",
		    "130922": "青县",
		    "130923": "东光县",
		    "130924": "海兴县",
		    "130925": "盐山县",
		    "130926": "肃宁县",
		    "130927": "南皮县",
		    "130928": "吴桥县",
		    "130929": "献县",
		    "130930": "孟村回族自治县",
		    "130981": "泊头市",
		    "130982": "任丘市",
		    "130983": "黄骅市",
		    "130984": "河间市",
		    "130985": "其它区",
		    "131000": "廊坊市",
		    "131002": "安次区",
		    "131003": "广阳区",
		    "131022": "固安县",
		    "131023": "永清县",
		    "131024": "香河县",
		    "131025": "大城县",
		    "131026": "文安县",
		    "131028": "大厂回族自治县",
		    "131081": "霸州市",
		    "131082": "三河市",
		    "131083": "其它区",
		    "131100": "衡水市",
		    "131102": "桃城区",
		    "131121": "枣强县",
		    "131122": "武邑县",
		    "131123": "武强县",
		    "131124": "饶阳县",
		    "131125": "安平县",
		    "131126": "故城县",
		    "131127": "景县",
		    "131128": "阜城县",
		    "131181": "冀州市",
		    "131182": "深州市",
		    "131183": "其它区",
		    "140000": "山西省",
		    "140100": "太原市",
		    "140105": "小店区",
		    "140106": "迎泽区",
		    "140107": "杏花岭区",
		    "140108": "尖草坪区",
		    "140109": "万柏林区",
		    "140110": "晋源区",
		    "140121": "清徐县",
		    "140122": "阳曲县",
		    "140123": "娄烦县",
		    "140181": "古交市",
		    "140182": "其它区",
		    "140200": "大同市",
		    "140202": "城区",
		    "140203": "矿区",
		    "140211": "南郊区",
		    "140212": "新荣区",
		    "140221": "阳高县",
		    "140222": "天镇县",
		    "140223": "广灵县",
		    "140224": "灵丘县",
		    "140225": "浑源县",
		    "140226": "左云县",
		    "140227": "大同县",
		    "140228": "其它区",
		    "140300": "阳泉市",
		    "140302": "城区",
		    "140303": "矿区",
		    "140311": "郊区",
		    "140321": "平定县",
		    "140322": "盂县",
		    "140323": "其它区",
		    "140400": "长治市",
		    "140421": "长治县",
		    "140423": "襄垣县",
		    "140424": "屯留县",
		    "140425": "平顺县",
		    "140426": "黎城县",
		    "140427": "壶关县",
		    "140428": "长子县",
		    "140429": "武乡县",
		    "140430": "沁县",
		    "140431": "沁源县",
		    "140481": "潞城市",
		    "140482": "城区",
		    "140483": "郊区",
		    "140485": "其它区",
		    "140500": "晋城市",
		    "140502": "城区",
		    "140521": "沁水县",
		    "140522": "阳城县",
		    "140524": "陵川县",
		    "140525": "泽州县",
		    "140581": "高平市",
		    "140582": "其它区",
		    "140600": "朔州市",
		    "140602": "朔城区",
		    "140603": "平鲁区",
		    "140621": "山阴县",
		    "140622": "应县",
		    "140623": "右玉县",
		    "140624": "怀仁县",
		    "140625": "其它区",
		    "140700": "晋中市",
		    "140702": "榆次区",
		    "140721": "榆社县",
		    "140722": "左权县",
		    "140723": "和顺县",
		    "140724": "昔阳县",
		    "140725": "寿阳县",
		    "140726": "太谷县",
		    "140727": "祁县",
		    "140728": "平遥县",
		    "140729": "灵石县",
		    "140781": "介休市",
		    "140782": "其它区",
		    "140800": "运城市",
		    "140802": "盐湖区",
		    "140821": "临猗县",
		    "140822": "万荣县",
		    "140823": "闻喜县",
		    "140824": "稷山县",
		    "140825": "新绛县",
		    "140826": "绛县",
		    "140827": "垣曲县",
		    "140828": "夏县",
		    "140829": "平陆县",
		    "140830": "芮城县",
		    "140881": "永济市",
		    "140882": "河津市",
		    "140883": "其它区",
		    "140900": "忻州市",
		    "140902": "忻府区",
		    "140921": "定襄县",
		    "140922": "五台县",
		    "140923": "代县",
		    "140924": "繁峙县",
		    "140925": "宁武县",
		    "140926": "静乐县",
		    "140927": "神池县",
		    "140928": "五寨县",
		    "140929": "岢岚县",
		    "140930": "河曲县",
		    "140931": "保德县",
		    "140932": "偏关县",
		    "140981": "原平市",
		    "140982": "其它区",
		    "141000": "临汾市",
		    "141002": "尧都区",
		    "141021": "曲沃县",
		    "141022": "翼城县",
		    "141023": "襄汾县",
		    "141024": "洪洞县",
		    "141025": "古县",
		    "141026": "安泽县",
		    "141027": "浮山县",
		    "141028": "吉县",
		    "141029": "乡宁县",
		    "141030": "大宁县",
		    "141031": "隰县",
		    "141032": "永和县",
		    "141033": "蒲县",
		    "141034": "汾西县",
		    "141081": "侯马市",
		    "141082": "霍州市",
		    "141083": "其它区",
		    "141100": "吕梁市",
		    "141102": "离石区",
		    "141121": "文水县",
		    "141122": "交城县",
		    "141123": "兴县",
		    "141124": "临县",
		    "141125": "柳林县",
		    "141126": "石楼县",
		    "141127": "岚县",
		    "141128": "方山县",
		    "141129": "中阳县",
		    "141130": "交口县",
		    "141181": "孝义市",
		    "141182": "汾阳市",
		    "141183": "其它区",
		    "150000": "内蒙古自治区",
		    "150100": "呼和浩特市",
		    "150102": "新城区",
		    "150103": "回民区",
		    "150104": "玉泉区",
		    "150105": "赛罕区",
		    "150121": "土默特左旗",
		    "150122": "托克托县",
		    "150123": "和林格尔县",
		    "150124": "清水河县",
		    "150125": "武川县",
		    "150126": "其它区",
		    "150200": "包头市",
		    "150202": "东河区",
		    "150203": "昆都仑区",
		    "150204": "青山区",
		    "150205": "石拐区",
		    "150206": "白云鄂博矿区",
		    "150207": "九原区",
		    "150221": "土默特右旗",
		    "150222": "固阳县",
		    "150223": "达尔罕茂明安联合旗",
		    "150224": "其它区",
		    "150300": "乌海市",
		    "150302": "海勃湾区",
		    "150303": "海南区",
		    "150304": "乌达区",
		    "150305": "其它区",
		    "150400": "赤峰市",
		    "150402": "红山区",
		    "150403": "元宝山区",
		    "150404": "松山区",
		    "150421": "阿鲁科尔沁旗",
		    "150422": "巴林左旗",
		    "150423": "巴林右旗",
		    "150424": "林西县",
		    "150425": "克什克腾旗",
		    "150426": "翁牛特旗",
		    "150428": "喀喇沁旗",
		    "150429": "宁城县",
		    "150430": "敖汉旗",
		    "150431": "其它区",
		    "150500": "通辽市",
		    "150502": "科尔沁区",
		    "150521": "科尔沁左翼中旗",
		    "150522": "科尔沁左翼后旗",
		    "150523": "开鲁县",
		    "150524": "库伦旗",
		    "150525": "奈曼旗",
		    "150526": "扎鲁特旗",
		    "150581": "霍林郭勒市",
		    "150582": "其它区",
		    "150600": "鄂尔多斯市",
		    "150602": "东胜区",
		    "150621": "达拉特旗",
		    "150622": "准格尔旗",
		    "150623": "鄂托克前旗",
		    "150624": "鄂托克旗",
		    "150625": "杭锦旗",
		    "150626": "乌审旗",
		    "150627": "伊金霍洛旗",
		    "150628": "其它区",
		    "150700": "呼伦贝尔市",
		    "150702": "海拉尔区",
		    "150703": "扎赉诺尔区",
		    "150721": "阿荣旗",
		    "150722": "莫力达瓦达斡尔族自治旗",
		    "150723": "鄂伦春自治旗",
		    "150724": "鄂温克族自治旗",
		    "150725": "陈巴尔虎旗",
		    "150726": "新巴尔虎左旗",
		    "150727": "新巴尔虎右旗",
		    "150781": "满洲里市",
		    "150782": "牙克石市",
		    "150783": "扎兰屯市",
		    "150784": "额尔古纳市",
		    "150785": "根河市",
		    "150786": "其它区",
		    "150800": "巴彦淖尔市",
		    "150802": "临河区",
		    "150821": "五原县",
		    "150822": "磴口县",
		    "150823": "乌拉特前旗",
		    "150824": "乌拉特中旗",
		    "150825": "乌拉特后旗",
		    "150826": "杭锦后旗",
		    "150827": "其它区",
		    "150900": "乌兰察布市",
		    "150902": "集宁区",
		    "150921": "卓资县",
		    "150922": "化德县",
		    "150923": "商都县",
		    "150924": "兴和县",
		    "150925": "凉城县",
		    "150926": "察哈尔右翼前旗",
		    "150927": "察哈尔右翼中旗",
		    "150928": "察哈尔右翼后旗",
		    "150929": "四子王旗",
		    "150981": "丰镇市",
		    "150982": "其它区",
		    "152200": "兴安盟",
		    "152201": "乌兰浩特市",
		    "152202": "阿尔山市",
		    "152221": "科尔沁右翼前旗",
		    "152222": "科尔沁右翼中旗",
		    "152223": "扎赉特旗",
		    "152224": "突泉县",
		    "152225": "其它区",
		    "152500": "锡林郭勒盟",
		    "152501": "二连浩特市",
		    "152502": "锡林浩特市",
		    "152522": "阿巴嘎旗",
		    "152523": "苏尼特左旗",
		    "152524": "苏尼特右旗",
		    "152525": "东乌珠穆沁旗",
		    "152526": "西乌珠穆沁旗",
		    "152527": "太仆寺旗",
		    "152528": "镶黄旗",
		    "152529": "正镶白旗",
		    "152530": "正蓝旗",
		    "152531": "多伦县",
		    "152532": "其它区",
		    "152900": "阿拉善盟",
		    "152921": "阿拉善左旗",
		    "152922": "阿拉善右旗",
		    "152923": "额济纳旗",
		    "152924": "其它区",
		    "210000": "辽宁省",
		    "210100": "沈阳市",
		    "210102": "和平区",
		    "210103": "沈河区",
		    "210104": "大东区",
		    "210105": "皇姑区",
		    "210106": "铁西区",
		    "210111": "苏家屯区",
		    "210112": "东陵区",
		    "210113": "新城子区",
		    "210114": "于洪区",
		    "210122": "辽中县",
		    "210123": "康平县",
		    "210124": "法库县",
		    "210181": "新民市",
		    "210184": "沈北新区",
		    "210185": "其它区",
		    "210200": "大连市",
		    "210202": "中山区",
		    "210203": "西岗区",
		    "210204": "沙河口区",
		    "210211": "甘井子区",
		    "210212": "旅顺口区",
		    "210213": "金州区",
		    "210224": "长海县",
		    "210281": "瓦房店市",
		    "210282": "普兰店市",
		    "210283": "庄河市",
		    "210298": "其它区",
		    "210300": "鞍山市",
		    "210302": "铁东区",
		    "210303": "铁西区",
		    "210304": "立山区",
		    "210311": "千山区",
		    "210321": "台安县",
		    "210323": "岫岩满族自治县",
		    "210381": "海城市",
		    "210382": "其它区",
		    "210400": "抚顺市",
		    "210402": "新抚区",
		    "210403": "东洲区",
		    "210404": "望花区",
		    "210411": "顺城区",
		    "210421": "抚顺县",
		    "210422": "新宾满族自治县",
		    "210423": "清原满族自治县",
		    "210424": "其它区",
		    "210500": "本溪市",
		    "210502": "平山区",
		    "210503": "溪湖区",
		    "210504": "明山区",
		    "210505": "南芬区",
		    "210521": "本溪满族自治县",
		    "210522": "桓仁满族自治县",
		    "210523": "其它区",
		    "210600": "丹东市",
		    "210602": "元宝区",
		    "210603": "振兴区",
		    "210604": "振安区",
		    "210624": "宽甸满族自治县",
		    "210681": "东港市",
		    "210682": "凤城市",
		    "210683": "其它区",
		    "210700": "锦州市",
		    "210702": "古塔区",
		    "210703": "凌河区",
		    "210711": "太和区",
		    "210726": "黑山县",
		    "210727": "义县",
		    "210781": "凌海市",
		    "210782": "北镇市",
		    "210783": "其它区",
		    "210800": "营口市",
		    "210802": "站前区",
		    "210803": "西市区",
		    "210804": "鲅鱼圈区",
		    "210811": "老边区",
		    "210881": "盖州市",
		    "210882": "大石桥市",
		    "210883": "其它区",
		    "210900": "阜新市",
		    "210902": "海州区",
		    "210903": "新邱区",
		    "210904": "太平区",
		    "210905": "清河门区",
		    "210911": "细河区",
		    "210921": "阜新蒙古族自治县",
		    "210922": "彰武县",
		    "210923": "其它区",
		    "211000": "辽阳市",
		    "211002": "白塔区",
		    "211003": "文圣区",
		    "211004": "宏伟区",
		    "211005": "弓长岭区",
		    "211011": "太子河区",
		    "211021": "辽阳县",
		    "211081": "灯塔市",
		    "211082": "其它区",
		    "211100": "盘锦市",
		    "211102": "双台子区",
		    "211103": "兴隆台区",
		    "211121": "大洼县",
		    "211122": "盘山县",
		    "211123": "其它区",
		    "211200": "铁岭市",
		    "211202": "银州区",
		    "211204": "清河区",
		    "211221": "铁岭县",
		    "211223": "西丰县",
		    "211224": "昌图县",
		    "211281": "调兵山市",
		    "211282": "开原市",
		    "211283": "其它区",
		    "211300": "朝阳市",
		    "211302": "双塔区",
		    "211303": "龙城区",
		    "211321": "朝阳县",
		    "211322": "建平县",
		    "211324": "喀喇沁左翼蒙古族自治县",
		    "211381": "北票市",
		    "211382": "凌源市",
		    "211383": "其它区",
		    "211400": "葫芦岛市",
		    "211402": "连山区",
		    "211403": "龙港区",
		    "211404": "南票区",
		    "211421": "绥中县",
		    "211422": "建昌县",
		    "211481": "兴城市",
		    "211482": "其它区",
		    "220000": "吉林省",
		    "220100": "长春市",
		    "220102": "南关区",
		    "220103": "宽城区",
		    "220104": "朝阳区",
		    "220105": "二道区",
		    "220106": "绿园区",
		    "220112": "双阳区",
		    "220122": "农安县",
		    "220181": "九台市",
		    "220182": "榆树市",
		    "220183": "德惠市",
		    "220188": "其它区",
		    "220200": "吉林市",
		    "220202": "昌邑区",
		    "220203": "龙潭区",
		    "220204": "船营区",
		    "220211": "丰满区",
		    "220221": "永吉县",
		    "220281": "蛟河市",
		    "220282": "桦甸市",
		    "220283": "舒兰市",
		    "220284": "磐石市",
		    "220285": "其它区",
		    "220300": "四平市",
		    "220302": "铁西区",
		    "220303": "铁东区",
		    "220322": "梨树县",
		    "220323": "伊通满族自治县",
		    "220381": "公主岭市",
		    "220382": "双辽市",
		    "220383": "其它区",
		    "220400": "辽源市",
		    "220402": "龙山区",
		    "220403": "西安区",
		    "220421": "东丰县",
		    "220422": "东辽县",
		    "220423": "其它区",
		    "220500": "通化市",
		    "220502": "东昌区",
		    "220503": "二道江区",
		    "220521": "通化县",
		    "220523": "辉南县",
		    "220524": "柳河县",
		    "220581": "梅河口市",
		    "220582": "集安市",
		    "220583": "其它区",
		    "220600": "白山市",
		    "220602": "浑江区",
		    "220621": "抚松县",
		    "220622": "靖宇县",
		    "220623": "长白朝鲜族自治县",
		    "220625": "江源区",
		    "220681": "临江市",
		    "220682": "其它区",
		    "220700": "松原市",
		    "220702": "宁江区",
		    "220721": "前郭尔罗斯蒙古族自治县",
		    "220722": "长岭县",
		    "220723": "乾安县",
		    "220724": "扶余市",
		    "220725": "其它区",
		    "220800": "白城市",
		    "220802": "洮北区",
		    "220821": "镇赉县",
		    "220822": "通榆县",
		    "220881": "洮南市",
		    "220882": "大安市",
		    "220883": "其它区",
		    "222400": "延边朝鲜族自治州",
		    "222401": "延吉市",
		    "222402": "图们市",
		    "222403": "敦化市",
		    "222404": "珲春市",
		    "222405": "龙井市",
		    "222406": "和龙市",
		    "222424": "汪清县",
		    "222426": "安图县",
		    "222427": "其它区",
		    "230000": "黑龙江省",
		    "230100": "哈尔滨市",
		    "230102": "道里区",
		    "230103": "南岗区",
		    "230104": "道外区",
		    "230106": "香坊区",
		    "230108": "平房区",
		    "230109": "松北区",
		    "230111": "呼兰区",
		    "230123": "依兰县",
		    "230124": "方正县",
		    "230125": "宾县",
		    "230126": "巴彦县",
		    "230127": "木兰县",
		    "230128": "通河县",
		    "230129": "延寿县",
		    "230181": "阿城区",
		    "230182": "双城市",
		    "230183": "尚志市",
		    "230184": "五常市",
		    "230186": "其它区",
		    "230200": "齐齐哈尔市",
		    "230202": "龙沙区",
		    "230203": "建华区",
		    "230204": "铁锋区",
		    "230205": "昂昂溪区",
		    "230206": "富拉尔基区",
		    "230207": "碾子山区",
		    "230208": "梅里斯达斡尔族区",
		    "230221": "龙江县",
		    "230223": "依安县",
		    "230224": "泰来县",
		    "230225": "甘南县",
		    "230227": "富裕县",
		    "230229": "克山县",
		    "230230": "克东县",
		    "230231": "拜泉县",
		    "230281": "讷河市",
		    "230282": "其它区",
		    "230300": "鸡西市",
		    "230302": "鸡冠区",
		    "230303": "恒山区",
		    "230304": "滴道区",
		    "230305": "梨树区",
		    "230306": "城子河区",
		    "230307": "麻山区",
		    "230321": "鸡东县",
		    "230381": "虎林市",
		    "230382": "密山市",
		    "230383": "其它区",
		    "230400": "鹤岗市",
		    "230402": "向阳区",
		    "230403": "工农区",
		    "230404": "南山区",
		    "230405": "兴安区",
		    "230406": "东山区",
		    "230407": "兴山区",
		    "230421": "萝北县",
		    "230422": "绥滨县",
		    "230423": "其它区",
		    "230500": "双鸭山市",
		    "230502": "尖山区",
		    "230503": "岭东区",
		    "230505": "四方台区",
		    "230506": "宝山区",
		    "230521": "集贤县",
		    "230522": "友谊县",
		    "230523": "宝清县",
		    "230524": "饶河县",
		    "230525": "其它区",
		    "230600": "大庆市",
		    "230602": "萨尔图区",
		    "230603": "龙凤区",
		    "230604": "让胡路区",
		    "230605": "红岗区",
		    "230606": "大同区",
		    "230621": "肇州县",
		    "230622": "肇源县",
		    "230623": "林甸县",
		    "230624": "杜尔伯特蒙古族自治县",
		    "230625": "其它区",
		    "230700": "伊春市",
		    "230702": "伊春区",
		    "230703": "南岔区",
		    "230704": "友好区",
		    "230705": "西林区",
		    "230706": "翠峦区",
		    "230707": "新青区",
		    "230708": "美溪区",
		    "230709": "金山屯区",
		    "230710": "五营区",
		    "230711": "乌马河区",
		    "230712": "汤旺河区",
		    "230713": "带岭区",
		    "230714": "乌伊岭区",
		    "230715": "红星区",
		    "230716": "上甘岭区",
		    "230722": "嘉荫县",
		    "230781": "铁力市",
		    "230782": "其它区",
		    "230800": "佳木斯市",
		    "230803": "向阳区",
		    "230804": "前进区",
		    "230805": "东风区",
		    "230811": "郊区",
		    "230822": "桦南县",
		    "230826": "桦川县",
		    "230828": "汤原县",
		    "230833": "抚远县",
		    "230881": "同江市",
		    "230882": "富锦市",
		    "230883": "其它区",
		    "230900": "七台河市",
		    "230902": "新兴区",
		    "230903": "桃山区",
		    "230904": "茄子河区",
		    "230921": "勃利县",
		    "230922": "其它区",
		    "231000": "牡丹江市",
		    "231002": "东安区",
		    "231003": "阳明区",
		    "231004": "爱民区",
		    "231005": "西安区",
		    "231024": "东宁县",
		    "231025": "林口县",
		    "231081": "绥芬河市",
		    "231083": "海林市",
		    "231084": "宁安市",
		    "231085": "穆棱市",
		    "231086": "其它区",
		    "231100": "黑河市",
		    "231102": "爱辉区",
		    "231121": "嫩江县",
		    "231123": "逊克县",
		    "231124": "孙吴县",
		    "231181": "北安市",
		    "231182": "五大连池市",
		    "231183": "其它区",
		    "231200": "绥化市",
		    "231202": "北林区",
		    "231221": "望奎县",
		    "231222": "兰西县",
		    "231223": "青冈县",
		    "231224": "庆安县",
		    "231225": "明水县",
		    "231226": "绥棱县",
		    "231281": "安达市",
		    "231282": "肇东市",
		    "231283": "海伦市",
		    "231284": "其它区",
		    "232700": "大兴安岭地区",
		    "232702": "松岭区",
		    "232703": "新林区",
		    "232704": "呼中区",
		    "232721": "呼玛县",
		    "232722": "塔河县",
		    "232723": "漠河县",
		    "232724": "加格达奇区",
		    "232725": "其它区",
		    "310000": "上海",
		    "310100": "上海市",
		    "310101": "黄浦区",
		    "310104": "徐汇区",
		    "310105": "长宁区",
		    "310106": "静安区",
		    "310107": "普陀区",
		    "310108": "闸北区",
		    "310109": "虹口区",
		    "310110": "杨浦区",
		    "310112": "闵行区",
		    "310113": "宝山区",
		    "310114": "嘉定区",
		    "310115": "浦东新区",
		    "310116": "金山区",
		    "310117": "松江区",
		    "310118": "青浦区",
		    "310120": "奉贤区",
		    "310230": "崇明县",
		    "310231": "其它区",
		    "320000": "江苏省",
		    "320100": "南京市",
		    "320102": "玄武区",
		    "320104": "秦淮区",
		    "320105": "建邺区",
		    "320106": "鼓楼区",
		    "320111": "浦口区",
		    "320113": "栖霞区",
		    "320114": "雨花台区",
		    "320115": "江宁区",
		    "320116": "六合区",
		    "320124": "溧水区",
		    "320125": "高淳区",
		    "320126": "其它区",
		    "320200": "无锡市",
		    "320202": "崇安区",
		    "320203": "南长区",
		    "320204": "北塘区",
		    "320205": "锡山区",
		    "320206": "惠山区",
		    "320211": "滨湖区",
		    "320281": "江阴市",
		    "320282": "宜兴市",
		    "320297": "其它区",
		    "320300": "徐州市",
		    "320302": "鼓楼区",
		    "320303": "云龙区",
		    "320305": "贾汪区",
		    "320311": "泉山区",
		    "320321": "丰县",
		    "320322": "沛县",
		    "320323": "铜山区",
		    "320324": "睢宁县",
		    "320381": "新沂市",
		    "320382": "邳州市",
		    "320383": "其它区",
		    "320400": "常州市",
		    "320402": "天宁区",
		    "320404": "钟楼区",
		    "320405": "戚墅堰区",
		    "320411": "新北区",
		    "320412": "武进区",
		    "320481": "溧阳市",
		    "320482": "金坛市",
		    "320483": "其它区",
		    "320500": "苏州市",
		    "320505": "虎丘区",
		    "320506": "吴中区",
		    "320507": "相城区",
		    "320508": "姑苏区",
		    "320581": "常熟市",
		    "320582": "张家港市",
		    "320583": "昆山市",
		    "320584": "吴江区",
		    "320585": "太仓市",
		    "320596": "其它区",
		    "320600": "南通市",
		    "320602": "崇川区",
		    "320611": "港闸区",
		    "320612": "通州区",
		    "320621": "海安县",
		    "320623": "如东县",
		    "320681": "启东市",
		    "320682": "如皋市",
		    "320684": "海门市",
		    "320694": "其它区",
		    "320700": "连云港市",
		    "320703": "连云区",
		    "320705": "新浦区",
		    "320706": "海州区",
		    "320721": "赣榆县",
		    "320722": "东海县",
		    "320723": "灌云县",
		    "320724": "灌南县",
		    "320725": "其它区",
		    "320800": "淮安市",
		    "320802": "清河区",
		    "320803": "淮安区",
		    "320804": "淮阴区",
		    "320811": "清浦区",
		    "320826": "涟水县",
		    "320829": "洪泽县",
		    "320830": "盱眙县",
		    "320831": "金湖县",
		    "320832": "其它区",
		    "320900": "盐城市",
		    "320902": "亭湖区",
		    "320903": "盐都区",
		    "320921": "响水县",
		    "320922": "滨海县",
		    "320923": "阜宁县",
		    "320924": "射阳县",
		    "320925": "建湖县",
		    "320981": "东台市",
		    "320982": "大丰市",
		    "320983": "其它区",
		    "321000": "扬州市",
		    "321002": "广陵区",
		    "321003": "邗江区",
		    "321023": "宝应县",
		    "321081": "仪征市",
		    "321084": "高邮市",
		    "321088": "江都区",
		    "321093": "其它区",
		    "321100": "镇江市",
		    "321102": "京口区",
		    "321111": "润州区",
		    "321112": "丹徒区",
		    "321181": "丹阳市",
		    "321182": "扬中市",
		    "321183": "句容市",
		    "321184": "其它区",
		    "321200": "泰州市",
		    "321202": "海陵区",
		    "321203": "高港区",
		    "321281": "兴化市",
		    "321282": "靖江市",
		    "321283": "泰兴市",
		    "321284": "姜堰区",
		    "321285": "其它区",
		    "321300": "宿迁市",
		    "321302": "宿城区",
		    "321311": "宿豫区",
		    "321322": "沭阳县",
		    "321323": "泗阳县",
		    "321324": "泗洪县",
		    "321325": "其它区",
		    "330000": "浙江省",
		    "330100": "杭州市",
		    "330102": "上城区",
		    "330103": "下城区",
		    "330104": "江干区",
		    "330105": "拱墅区",
		    "330106": "西湖区",
		    "330108": "滨江区",
		    "330109": "萧山区",
		    "330110": "余杭区",
		    "330122": "桐庐县",
		    "330127": "淳安县",
		    "330182": "建德市",
		    "330183": "富阳市",
		    "330185": "临安市",
		    "330186": "其它区",
		    "330200": "宁波市",
		    "330203": "海曙区",
		    "330204": "江东区",
		    "330205": "江北区",
		    "330206": "北仑区",
		    "330211": "镇海区",
		    "330212": "鄞州区",
		    "330225": "象山县",
		    "330226": "宁海县",
		    "330281": "余姚市",
		    "330282": "慈溪市",
		    "330283": "奉化市",
		    "330284": "其它区",
		    "330300": "温州市",
		    "330302": "鹿城区",
		    "330303": "龙湾区",
		    "330304": "瓯海区",
		    "330322": "洞头县",
		    "330324": "永嘉县",
		    "330326": "平阳县",
		    "330327": "苍南县",
		    "330328": "文成县",
		    "330329": "泰顺县",
		    "330381": "瑞安市",
		    "330382": "乐清市",
		    "330383": "其它区",
		    "330400": "嘉兴市",
		    "330402": "南湖区",
		    "330411": "秀洲区",
		    "330421": "嘉善县",
		    "330424": "海盐县",
		    "330481": "海宁市",
		    "330482": "平湖市",
		    "330483": "桐乡市",
		    "330484": "其它区",
		    "330500": "湖州市",
		    "330502": "吴兴区",
		    "330503": "南浔区",
		    "330521": "德清县",
		    "330522": "长兴县",
		    "330523": "安吉县",
		    "330524": "其它区",
		    "330600": "绍兴市",
		    "330602": "越城区",
		    "330621": "绍兴县",
		    "330624": "新昌县",
		    "330681": "诸暨市",
		    "330682": "上虞市",
		    "330683": "嵊州市",
		    "330684": "其它区",
		    "330700": "金华市",
		    "330702": "婺城区",
		    "330703": "金东区",
		    "330723": "武义县",
		    "330726": "浦江县",
		    "330727": "磐安县",
		    "330781": "兰溪市",
		    "330782": "义乌市",
		    "330783": "东阳市",
		    "330784": "永康市",
		    "330785": "其它区",
		    "330800": "衢州市",
		    "330802": "柯城区",
		    "330803": "衢江区",
		    "330822": "常山县",
		    "330824": "开化县",
		    "330825": "龙游县",
		    "330881": "江山市",
		    "330882": "其它区",
		    "330900": "舟山市",
		    "330902": "定海区",
		    "330903": "普陀区",
		    "330921": "岱山县",
		    "330922": "嵊泗县",
		    "330923": "其它区",
		    "331000": "台州市",
		    "331002": "椒江区",
		    "331003": "黄岩区",
		    "331004": "路桥区",
		    "331021": "玉环县",
		    "331022": "三门县",
		    "331023": "天台县",
		    "331024": "仙居县",
		    "331081": "温岭市",
		    "331082": "临海市",
		    "331083": "其它区",
		    "331100": "丽水市",
		    "331102": "莲都区",
		    "331121": "青田县",
		    "331122": "缙云县",
		    "331123": "遂昌县",
		    "331124": "松阳县",
		    "331125": "云和县",
		    "331126": "庆元县",
		    "331127": "景宁畲族自治县",
		    "331181": "龙泉市",
		    "331182": "其它区",
		    "340000": "安徽省",
		    "340100": "合肥市",
		    "340102": "瑶海区",
		    "340103": "庐阳区",
		    "340104": "蜀山区",
		    "340111": "包河区",
		    "340121": "长丰县",
		    "340122": "肥东县",
		    "340123": "肥西县",
		    "340192": "其它区",
		    "340200": "芜湖市",
		    "340202": "镜湖区",
		    "340203": "弋江区",
		    "340207": "鸠江区",
		    "340208": "三山区",
		    "340221": "芜湖县",
		    "340222": "繁昌县",
		    "340223": "南陵县",
		    "340224": "其它区",
		    "340300": "蚌埠市",
		    "340302": "龙子湖区",
		    "340303": "蚌山区",
		    "340304": "禹会区",
		    "340311": "淮上区",
		    "340321": "怀远县",
		    "340322": "五河县",
		    "340323": "固镇县",
		    "340324": "其它区",
		    "340400": "淮南市",
		    "340402": "大通区",
		    "340403": "田家庵区",
		    "340404": "谢家集区",
		    "340405": "八公山区",
		    "340406": "潘集区",
		    "340421": "凤台县",
		    "340422": "其它区",
		    "340500": "马鞍山市",
		    "340503": "花山区",
		    "340504": "雨山区",
		    "340506": "博望区",
		    "340521": "当涂县",
		    "340522": "其它区",
		    "340600": "淮北市",
		    "340602": "杜集区",
		    "340603": "相山区",
		    "340604": "烈山区",
		    "340621": "濉溪县",
		    "340622": "其它区",
		    "340700": "铜陵市",
		    "340702": "铜官山区",
		    "340703": "狮子山区",
		    "340711": "郊区",
		    "340721": "铜陵县",
		    "340722": "其它区",
		    "340800": "安庆市",
		    "340802": "迎江区",
		    "340803": "大观区",
		    "340811": "宜秀区",
		    "340822": "怀宁县",
		    "340823": "枞阳县",
		    "340824": "潜山县",
		    "340825": "太湖县",
		    "340826": "宿松县",
		    "340827": "望江县",
		    "340828": "岳西县",
		    "340881": "桐城市",
		    "340882": "其它区",
		    "341000": "黄山市",
		    "341002": "屯溪区",
		    "341003": "黄山区",
		    "341004": "徽州区",
		    "341021": "歙县",
		    "341022": "休宁县",
		    "341023": "黟县",
		    "341024": "祁门县",
		    "341025": "其它区",
		    "341100": "滁州市",
		    "341102": "琅琊区",
		    "341103": "南谯区",
		    "341122": "来安县",
		    "341124": "全椒县",
		    "341125": "定远县",
		    "341126": "凤阳县",
		    "341181": "天长市",
		    "341182": "明光市",
		    "341183": "其它区",
		    "341200": "阜阳市",
		    "341202": "颍州区",
		    "341203": "颍东区",
		    "341204": "颍泉区",
		    "341221": "临泉县",
		    "341222": "太和县",
		    "341225": "阜南县",
		    "341226": "颍上县",
		    "341282": "界首市",
		    "341283": "其它区",
		    "341300": "宿州市",
		    "341302": "埇桥区",
		    "341321": "砀山县",
		    "341322": "萧县",
		    "341323": "灵璧县",
		    "341324": "泗县",
		    "341325": "其它区",
		    "341400": "巢湖市",
		    "341421": "庐江县",
		    "341422": "无为县",
		    "341423": "含山县",
		    "341424": "和县",
		    "341500": "六安市",
		    "341502": "金安区",
		    "341503": "裕安区",
		    "341521": "寿县",
		    "341522": "霍邱县",
		    "341523": "舒城县",
		    "341524": "金寨县",
		    "341525": "霍山县",
		    "341526": "其它区",
		    "341600": "亳州市",
		    "341602": "谯城区",
		    "341621": "涡阳县",
		    "341622": "蒙城县",
		    "341623": "利辛县",
		    "341624": "其它区",
		    "341700": "池州市",
		    "341702": "贵池区",
		    "341721": "东至县",
		    "341722": "石台县",
		    "341723": "青阳县",
		    "341724": "其它区",
		    "341800": "宣城市",
		    "341802": "宣州区",
		    "341821": "郎溪县",
		    "341822": "广德县",
		    "341823": "泾县",
		    "341824": "绩溪县",
		    "341825": "旌德县",
		    "341881": "宁国市",
		    "341882": "其它区",
		    "350000": "福建省",
		    "350100": "福州市",
		    "350102": "鼓楼区",
		    "350103": "台江区",
		    "350104": "仓山区",
		    "350105": "马尾区",
		    "350111": "晋安区",
		    "350121": "闽侯县",
		    "350122": "连江县",
		    "350123": "罗源县",
		    "350124": "闽清县",
		    "350125": "永泰县",
		    "350128": "平潭县",
		    "350181": "福清市",
		    "350182": "长乐市",
		    "350183": "其它区",
		    "350200": "厦门市",
		    "350203": "思明区",
		    "350205": "海沧区",
		    "350206": "湖里区",
		    "350211": "集美区",
		    "350212": "同安区",
		    "350213": "翔安区",
		    "350214": "其它区",
		    "350300": "莆田市",
		    "350302": "城厢区",
		    "350303": "涵江区",
		    "350304": "荔城区",
		    "350305": "秀屿区",
		    "350322": "仙游县",
		    "350323": "其它区",
		    "350400": "三明市",
		    "350402": "梅列区",
		    "350403": "三元区",
		    "350421": "明溪县",
		    "350423": "清流县",
		    "350424": "宁化县",
		    "350425": "大田县",
		    "350426": "尤溪县",
		    "350427": "沙县",
		    "350428": "将乐县",
		    "350429": "泰宁县",
		    "350430": "建宁县",
		    "350481": "永安市",
		    "350482": "其它区",
		    "350500": "泉州市",
		    "350502": "鲤城区",
		    "350503": "丰泽区",
		    "350504": "洛江区",
		    "350505": "泉港区",
		    "350521": "惠安县",
		    "350524": "安溪县",
		    "350525": "永春县",
		    "350526": "德化县",
		    "350527": "金门县",
		    "350581": "石狮市",
		    "350582": "晋江市",
		    "350583": "南安市",
		    "350584": "其它区",
		    "350600": "漳州市",
		    "350602": "芗城区",
		    "350603": "龙文区",
		    "350622": "云霄县",
		    "350623": "漳浦县",
		    "350624": "诏安县",
		    "350625": "长泰县",
		    "350626": "东山县",
		    "350627": "南靖县",
		    "350628": "平和县",
		    "350629": "华安县",
		    "350681": "龙海市",
		    "350682": "其它区",
		    "350700": "南平市",
		    "350702": "延平区",
		    "350721": "顺昌县",
		    "350722": "浦城县",
		    "350723": "光泽县",
		    "350724": "松溪县",
		    "350725": "政和县",
		    "350781": "邵武市",
		    "350782": "武夷山市",
		    "350783": "建瓯市",
		    "350784": "建阳市",
		    "350785": "其它区",
		    "350800": "龙岩市",
		    "350802": "新罗区",
		    "350821": "长汀县",
		    "350822": "永定县",
		    "350823": "上杭县",
		    "350824": "武平县",
		    "350825": "连城县",
		    "350881": "漳平市",
		    "350882": "其它区",
		    "350900": "宁德市",
		    "350902": "蕉城区",
		    "350921": "霞浦县",
		    "350922": "古田县",
		    "350923": "屏南县",
		    "350924": "寿宁县",
		    "350925": "周宁县",
		    "350926": "柘荣县",
		    "350981": "福安市",
		    "350982": "福鼎市",
		    "350983": "其它区",
		    "360000": "江西省",
		    "360100": "南昌市",
		    "360102": "东湖区",
		    "360103": "西湖区",
		    "360104": "青云谱区",
		    "360105": "湾里区",
		    "360111": "青山湖区",
		    "360121": "南昌县",
		    "360122": "新建县",
		    "360123": "安义县",
		    "360124": "进贤县",
		    "360128": "其它区",
		    "360200": "景德镇市",
		    "360202": "昌江区",
		    "360203": "珠山区",
		    "360222": "浮梁县",
		    "360281": "乐平市",
		    "360282": "其它区",
		    "360300": "萍乡市",
		    "360302": "安源区",
		    "360313": "湘东区",
		    "360321": "莲花县",
		    "360322": "上栗县",
		    "360323": "芦溪县",
		    "360324": "其它区",
		    "360400": "九江市",
		    "360402": "庐山区",
		    "360403": "浔阳区",
		    "360421": "九江县",
		    "360423": "武宁县",
		    "360424": "修水县",
		    "360425": "永修县",
		    "360426": "德安县",
		    "360427": "星子县",
		    "360428": "都昌县",
		    "360429": "湖口县",
		    "360430": "彭泽县",
		    "360481": "瑞昌市",
		    "360482": "其它区",
		    "360483": "共青城市",
		    "360500": "新余市",
		    "360502": "渝水区",
		    "360521": "分宜县",
		    "360522": "其它区",
		    "360600": "鹰潭市",
		    "360602": "月湖区",
		    "360622": "余江县",
		    "360681": "贵溪市",
		    "360682": "其它区",
		    "360700": "赣州市",
		    "360702": "章贡区",
		    "360721": "赣县",
		    "360722": "信丰县",
		    "360723": "大余县",
		    "360724": "上犹县",
		    "360725": "崇义县",
		    "360726": "安远县",
		    "360727": "龙南县",
		    "360728": "定南县",
		    "360729": "全南县",
		    "360730": "宁都县",
		    "360731": "于都县",
		    "360732": "兴国县",
		    "360733": "会昌县",
		    "360734": "寻乌县",
		    "360735": "石城县",
		    "360781": "瑞金市",
		    "360782": "南康市",
		    "360783": "其它区",
		    "360800": "吉安市",
		    "360802": "吉州区",
		    "360803": "青原区",
		    "360821": "吉安县",
		    "360822": "吉水县",
		    "360823": "峡江县",
		    "360824": "新干县",
		    "360825": "永丰县",
		    "360826": "泰和县",
		    "360827": "遂川县",
		    "360828": "万安县",
		    "360829": "安福县",
		    "360830": "永新县",
		    "360881": "井冈山市",
		    "360882": "其它区",
		    "360900": "宜春市",
		    "360902": "袁州区",
		    "360921": "奉新县",
		    "360922": "万载县",
		    "360923": "上高县",
		    "360924": "宜丰县",
		    "360925": "靖安县",
		    "360926": "铜鼓县",
		    "360981": "丰城市",
		    "360982": "樟树市",
		    "360983": "高安市",
		    "360984": "其它区",
		    "361000": "抚州市",
		    "361002": "临川区",
		    "361021": "南城县",
		    "361022": "黎川县",
		    "361023": "南丰县",
		    "361024": "崇仁县",
		    "361025": "乐安县",
		    "361026": "宜黄县",
		    "361027": "金溪县",
		    "361028": "资溪县",
		    "361029": "东乡县",
		    "361030": "广昌县",
		    "361031": "其它区",
		    "361100": "上饶市",
		    "361102": "信州区",
		    "361121": "上饶县",
		    "361122": "广丰县",
		    "361123": "玉山县",
		    "361124": "铅山县",
		    "361125": "横峰县",
		    "361126": "弋阳县",
		    "361127": "余干县",
		    "361128": "鄱阳县",
		    "361129": "万年县",
		    "361130": "婺源县",
		    "361181": "德兴市",
		    "361182": "其它区",
		    "370000": "山东省",
		    "370100": "济南市",
		    "370102": "历下区",
		    "370103": "市中区",
		    "370104": "槐荫区",
		    "370105": "天桥区",
		    "370112": "历城区",
		    "370113": "长清区",
		    "370124": "平阴县",
		    "370125": "济阳县",
		    "370126": "商河县",
		    "370181": "章丘市",
		    "370182": "其它区",
		    "370200": "青岛市",
		    "370202": "市南区",
		    "370203": "市北区",
		    "370211": "黄岛区",
		    "370212": "崂山区",
		    "370213": "李沧区",
		    "370214": "城阳区",
		    "370281": "胶州市",
		    "370282": "即墨市",
		    "370283": "平度市",
		    "370285": "莱西市",
		    "370286": "其它区",
		    "370300": "淄博市",
		    "370302": "淄川区",
		    "370303": "张店区",
		    "370304": "博山区",
		    "370305": "临淄区",
		    "370306": "周村区",
		    "370321": "桓台县",
		    "370322": "高青县",
		    "370323": "沂源县",
		    "370324": "其它区",
		    "370400": "枣庄市",
		    "370402": "市中区",
		    "370403": "薛城区",
		    "370404": "峄城区",
		    "370405": "台儿庄区",
		    "370406": "山亭区",
		    "370481": "滕州市",
		    "370482": "其它区",
		    "370500": "东营市",
		    "370502": "东营区",
		    "370503": "河口区",
		    "370521": "垦利县",
		    "370522": "利津县",
		    "370523": "广饶县",
		    "370591": "其它区",
		    "370600": "烟台市",
		    "370602": "芝罘区",
		    "370611": "福山区",
		    "370612": "牟平区",
		    "370613": "莱山区",
		    "370634": "长岛县",
		    "370681": "龙口市",
		    "370682": "莱阳市",
		    "370683": "莱州市",
		    "370684": "蓬莱市",
		    "370685": "招远市",
		    "370686": "栖霞市",
		    "370687": "海阳市",
		    "370688": "其它区",
		    "370700": "潍坊市",
		    "370702": "潍城区",
		    "370703": "寒亭区",
		    "370704": "坊子区",
		    "370705": "奎文区",
		    "370724": "临朐县",
		    "370725": "昌乐县",
		    "370781": "青州市",
		    "370782": "诸城市",
		    "370783": "寿光市",
		    "370784": "安丘市",
		    "370785": "高密市",
		    "370786": "昌邑市",
		    "370787": "其它区",
		    "370800": "济宁市",
		    "370802": "市中区",
		    "370811": "任城区",
		    "370826": "微山县",
		    "370827": "鱼台县",
		    "370828": "金乡县",
		    "370829": "嘉祥县",
		    "370830": "汶上县",
		    "370831": "泗水县",
		    "370832": "梁山县",
		    "370881": "曲阜市",
		    "370882": "兖州市",
		    "370883": "邹城市",
		    "370884": "其它区",
		    "370900": "泰安市",
		    "370902": "泰山区",
		    "370903": "岱岳区",
		    "370921": "宁阳县",
		    "370923": "东平县",
		    "370982": "新泰市",
		    "370983": "肥城市",
		    "370984": "其它区",
		    "371000": "威海市",
		    "371002": "环翠区",
		    "371081": "文登市",
		    "371082": "荣成市",
		    "371083": "乳山市",
		    "371084": "其它区",
		    "371100": "日照市",
		    "371102": "东港区",
		    "371103": "岚山区",
		    "371121": "五莲县",
		    "371122": "莒县",
		    "371123": "其它区",
		    "371200": "莱芜市",
		    "371202": "莱城区",
		    "371203": "钢城区",
		    "371204": "其它区",
		    "371300": "临沂市",
		    "371302": "兰山区",
		    "371311": "罗庄区",
		    "371312": "河东区",
		    "371321": "沂南县",
		    "371322": "郯城县",
		    "371323": "沂水县",
		    "371324": "苍山县",
		    "371325": "费县",
		    "371326": "平邑县",
		    "371327": "莒南县",
		    "371328": "蒙阴县",
		    "371329": "临沭县",
		    "371330": "其它区",
		    "371400": "德州市",
		    "371402": "德城区",
		    "371421": "陵县",
		    "371422": "宁津县",
		    "371423": "庆云县",
		    "371424": "临邑县",
		    "371425": "齐河县",
		    "371426": "平原县",
		    "371427": "夏津县",
		    "371428": "武城县",
		    "371481": "乐陵市",
		    "371482": "禹城市",
		    "371483": "其它区",
		    "371500": "聊城市",
		    "371502": "东昌府区",
		    "371521": "阳谷县",
		    "371522": "莘县",
		    "371523": "茌平县",
		    "371524": "东阿县",
		    "371525": "冠县",
		    "371526": "高唐县",
		    "371581": "临清市",
		    "371582": "其它区",
		    "371600": "滨州市",
		    "371602": "滨城区",
		    "371621": "惠民县",
		    "371622": "阳信县",
		    "371623": "无棣县",
		    "371624": "沾化县",
		    "371625": "博兴县",
		    "371626": "邹平县",
		    "371627": "其它区",
		    "371700": "菏泽市",
		    "371702": "牡丹区",
		    "371721": "曹县",
		    "371722": "单县",
		    "371723": "成武县",
		    "371724": "巨野县",
		    "371725": "郓城县",
		    "371726": "鄄城县",
		    "371727": "定陶县",
		    "371728": "东明县",
		    "371729": "其它区",
		    "410000": "河南省",
		    "410100": "郑州市",
		    "410102": "中原区",
		    "410103": "二七区",
		    "410104": "管城回族区",
		    "410105": "金水区",
		    "410106": "上街区",
		    "410108": "惠济区",
		    "410122": "中牟县",
		    "410181": "巩义市",
		    "410182": "荥阳市",
		    "410183": "新密市",
		    "410184": "新郑市",
		    "410185": "登封市",
		    "410188": "其它区",
		    "410200": "开封市",
		    "410202": "龙亭区",
		    "410203": "顺河回族区",
		    "410204": "鼓楼区",
		    "410205": "禹王台区",
		    "410211": "金明区",
		    "410221": "杞县",
		    "410222": "通许县",
		    "410223": "尉氏县",
		    "410224": "开封县",
		    "410225": "兰考县",
		    "410226": "其它区",
		    "410300": "洛阳市",
		    "410302": "老城区",
		    "410303": "西工区",
		    "410304": "瀍河回族区",
		    "410305": "涧西区",
		    "410306": "吉利区",
		    "410307": "洛龙区",
		    "410322": "孟津县",
		    "410323": "新安县",
		    "410324": "栾川县",
		    "410325": "嵩县",
		    "410326": "汝阳县",
		    "410327": "宜阳县",
		    "410328": "洛宁县",
		    "410329": "伊川县",
		    "410381": "偃师市",
		    "410400": "平顶山市",
		    "410402": "新华区",
		    "410403": "卫东区",
		    "410404": "石龙区",
		    "410411": "湛河区",
		    "410421": "宝丰县",
		    "410422": "叶县",
		    "410423": "鲁山县",
		    "410425": "郏县",
		    "410481": "舞钢市",
		    "410482": "汝州市",
		    "410483": "其它区",
		    "410500": "安阳市",
		    "410502": "文峰区",
		    "410503": "北关区",
		    "410505": "殷都区",
		    "410506": "龙安区",
		    "410522": "安阳县",
		    "410523": "汤阴县",
		    "410526": "滑县",
		    "410527": "内黄县",
		    "410581": "林州市",
		    "410582": "其它区",
		    "410600": "鹤壁市",
		    "410602": "鹤山区",
		    "410603": "山城区",
		    "410611": "淇滨区",
		    "410621": "浚县",
		    "410622": "淇县",
		    "410623": "其它区",
		    "410700": "新乡市",
		    "410702": "红旗区",
		    "410703": "卫滨区",
		    "410704": "凤泉区",
		    "410711": "牧野区",
		    "410721": "新乡县",
		    "410724": "获嘉县",
		    "410725": "原阳县",
		    "410726": "延津县",
		    "410727": "封丘县",
		    "410728": "长垣县",
		    "410781": "卫辉市",
		    "410782": "辉县市",
		    "410783": "其它区",
		    "410800": "焦作市",
		    "410802": "解放区",
		    "410803": "中站区",
		    "410804": "马村区",
		    "410811": "山阳区",
		    "410821": "修武县",
		    "410822": "博爱县",
		    "410823": "武陟县",
		    "410825": "温县",
		    "410881": "济源市",
		    "410882": "沁阳市",
		    "410883": "孟州市",
		    "410884": "其它区",
		    "410900": "濮阳市",
		    "410902": "华龙区",
		    "410922": "清丰县",
		    "410923": "南乐县",
		    "410926": "范县",
		    "410927": "台前县",
		    "410928": "濮阳县",
		    "410929": "其它区",
		    "411000": "许昌市",
		    "411002": "魏都区",
		    "411023": "许昌县",
		    "411024": "鄢陵县",
		    "411025": "襄城县",
		    "411081": "禹州市",
		    "411082": "长葛市",
		    "411083": "其它区",
		    "411100": "漯河市",
		    "411102": "源汇区",
		    "411103": "郾城区",
		    "411104": "召陵区",
		    "411121": "舞阳县",
		    "411122": "临颍县",
		    "411123": "其它区",
		    "411200": "三门峡市",
		    "411202": "湖滨区",
		    "411221": "渑池县",
		    "411222": "陕县",
		    "411224": "卢氏县",
		    "411281": "义马市",
		    "411282": "灵宝市",
		    "411283": "其它区",
		    "411300": "南阳市",
		    "411302": "宛城区",
		    "411303": "卧龙区",
		    "411321": "南召县",
		    "411322": "方城县",
		    "411323": "西峡县",
		    "411324": "镇平县",
		    "411325": "内乡县",
		    "411326": "淅川县",
		    "411327": "社旗县",
		    "411328": "唐河县",
		    "411329": "新野县",
		    "411330": "桐柏县",
		    "411381": "邓州市",
		    "411382": "其它区",
		    "411400": "商丘市",
		    "411402": "梁园区",
		    "411403": "睢阳区",
		    "411421": "民权县",
		    "411422": "睢县",
		    "411423": "宁陵县",
		    "411424": "柘城县",
		    "411425": "虞城县",
		    "411426": "夏邑县",
		    "411481": "永城市",
		    "411482": "其它区",
		    "411500": "信阳市",
		    "411502": "浉河区",
		    "411503": "平桥区",
		    "411521": "罗山县",
		    "411522": "光山县",
		    "411523": "新县",
		    "411524": "商城县",
		    "411525": "固始县",
		    "411526": "潢川县",
		    "411527": "淮滨县",
		    "411528": "息县",
		    "411529": "其它区",
		    "411600": "周口市",
		    "411602": "川汇区",
		    "411621": "扶沟县",
		    "411622": "西华县",
		    "411623": "商水县",
		    "411624": "沈丘县",
		    "411625": "郸城县",
		    "411626": "淮阳县",
		    "411627": "太康县",
		    "411628": "鹿邑县",
		    "411681": "项城市",
		    "411682": "其它区",
		    "411700": "驻马店市",
		    "411702": "驿城区",
		    "411721": "西平县",
		    "411722": "上蔡县",
		    "411723": "平舆县",
		    "411724": "正阳县",
		    "411725": "确山县",
		    "411726": "泌阳县",
		    "411727": "汝南县",
		    "411728": "遂平县",
		    "411729": "新蔡县",
		    "411730": "其它区",
		    "420000": "湖北省",
		    "420100": "武汉市",
		    "420102": "江岸区",
		    "420103": "江汉区",
		    "420104": "硚口区",
		    "420105": "汉阳区",
		    "420106": "武昌区",
		    "420107": "青山区",
		    "420111": "洪山区",
		    "420112": "东西湖区",
		    "420113": "汉南区",
		    "420114": "蔡甸区",
		    "420115": "江夏区",
		    "420116": "黄陂区",
		    "420117": "新洲区",
		    "420118": "其它区",
		    "420200": "黄石市",
		    "420202": "黄石港区",
		    "420203": "西塞山区",
		    "420204": "下陆区",
		    "420205": "铁山区",
		    "420222": "阳新县",
		    "420281": "大冶市",
		    "420282": "其它区",
		    "420300": "十堰市",
		    "420302": "茅箭区",
		    "420303": "张湾区",
		    "420321": "郧县",
		    "420322": "郧西县",
		    "420323": "竹山县",
		    "420324": "竹溪县",
		    "420325": "房县",
		    "420381": "丹江口市",
		    "420383": "其它区",
		    "420500": "宜昌市",
		    "420502": "西陵区",
		    "420503": "伍家岗区",
		    "420504": "点军区",
		    "420505": "猇亭区",
		    "420506": "夷陵区",
		    "420525": "远安县",
		    "420526": "兴山县",
		    "420527": "秭归县",
		    "420528": "长阳土家族自治县",
		    "420529": "五峰土家族自治县",
		    "420581": "宜都市",
		    "420582": "当阳市",
		    "420583": "枝江市",
		    "420584": "其它区",
		    "420600": "襄阳市",
		    "420602": "襄城区",
		    "420606": "樊城区",
		    "420607": "襄州区",
		    "420624": "南漳县",
		    "420625": "谷城县",
		    "420626": "保康县",
		    "420682": "老河口市",
		    "420683": "枣阳市",
		    "420684": "宜城市",
		    "420685": "其它区",
		    "420700": "鄂州市",
		    "420702": "梁子湖区",
		    "420703": "华容区",
		    "420704": "鄂城区",
		    "420705": "其它区",
		    "420800": "荆门市",
		    "420802": "东宝区",
		    "420804": "掇刀区",
		    "420821": "京山县",
		    "420822": "沙洋县",
		    "420881": "钟祥市",
		    "420882": "其它区",
		    "420900": "孝感市",
		    "420902": "孝南区",
		    "420921": "孝昌县",
		    "420922": "大悟县",
		    "420923": "云梦县",
		    "420981": "应城市",
		    "420982": "安陆市",
		    "420984": "汉川市",
		    "420985": "其它区",
		    "421000": "荆州市",
		    "421002": "沙市区",
		    "421003": "荆州区",
		    "421022": "公安县",
		    "421023": "监利县",
		    "421024": "江陵县",
		    "421081": "石首市",
		    "421083": "洪湖市",
		    "421087": "松滋市",
		    "421088": "其它区",
		    "421100": "黄冈市",
		    "421102": "黄州区",
		    "421121": "团风县",
		    "421122": "红安县",
		    "421123": "罗田县",
		    "421124": "英山县",
		    "421125": "浠水县",
		    "421126": "蕲春县",
		    "421127": "黄梅县",
		    "421181": "麻城市",
		    "421182": "武穴市",
		    "421183": "其它区",
		    "421200": "咸宁市",
		    "421202": "咸安区",
		    "421221": "嘉鱼县",
		    "421222": "通城县",
		    "421223": "崇阳县",
		    "421224": "通山县",
		    "421281": "赤壁市",
		    "421283": "其它区",
		    "421300": "随州市",
		    "421302": "曾都区",
		    "421321": "随县",
		    "421381": "广水市",
		    "421382": "其它区",
		    "422800": "恩施土家族苗族自治州",
		    "422801": "恩施市",
		    "422802": "利川市",
		    "422822": "建始县",
		    "422823": "巴东县",
		    "422825": "宣恩县",
		    "422826": "咸丰县",
		    "422827": "来凤县",
		    "422828": "鹤峰县",
		    "422829": "其它区",
		    "429004": "仙桃市",
		    "429005": "潜江市",
		    "429006": "天门市",
		    "429021": "神农架林区",
		    "430000": "湖南省",
		    "430100": "长沙市",
		    "430102": "芙蓉区",
		    "430103": "天心区",
		    "430104": "岳麓区",
		    "430105": "开福区",
		    "430111": "雨花区",
		    "430121": "长沙县",
		    "430122": "望城区",
		    "430124": "宁乡县",
		    "430181": "浏阳市",
		    "430182": "其它区",
		    "430200": "株洲市",
		    "430202": "荷塘区",
		    "430203": "芦淞区",
		    "430204": "石峰区",
		    "430211": "天元区",
		    "430221": "株洲县",
		    "430223": "攸县",
		    "430224": "茶陵县",
		    "430225": "炎陵县",
		    "430281": "醴陵市",
		    "430282": "其它区",
		    "430300": "湘潭市",
		    "430302": "雨湖区",
		    "430304": "岳塘区",
		    "430321": "湘潭县",
		    "430381": "湘乡市",
		    "430382": "韶山市",
		    "430383": "其它区",
		    "430400": "衡阳市",
		    "430405": "珠晖区",
		    "430406": "雁峰区",
		    "430407": "石鼓区",
		    "430408": "蒸湘区",
		    "430412": "南岳区",
		    "430421": "衡阳县",
		    "430422": "衡南县",
		    "430423": "衡山县",
		    "430424": "衡东县",
		    "430426": "祁东县",
		    "430481": "耒阳市",
		    "430482": "常宁市",
		    "430483": "其它区",
		    "430500": "邵阳市",
		    "430502": "双清区",
		    "430503": "大祥区",
		    "430511": "北塔区",
		    "430521": "邵东县",
		    "430522": "新邵县",
		    "430523": "邵阳县",
		    "430524": "隆回县",
		    "430525": "洞口县",
		    "430527": "绥宁县",
		    "430528": "新宁县",
		    "430529": "城步苗族自治县",
		    "430581": "武冈市",
		    "430582": "其它区",
		    "430600": "岳阳市",
		    "430602": "岳阳楼区",
		    "430603": "云溪区",
		    "430611": "君山区",
		    "430621": "岳阳县",
		    "430623": "华容县",
		    "430624": "湘阴县",
		    "430626": "平江县",
		    "430681": "汨罗市",
		    "430682": "临湘市",
		    "430683": "其它区",
		    "430700": "常德市",
		    "430702": "武陵区",
		    "430703": "鼎城区",
		    "430721": "安乡县",
		    "430722": "汉寿县",
		    "430723": "澧县",
		    "430724": "临澧县",
		    "430725": "桃源县",
		    "430726": "石门县",
		    "430781": "津市市",
		    "430782": "其它区",
		    "430800": "张家界市",
		    "430802": "永定区",
		    "430811": "武陵源区",
		    "430821": "慈利县",
		    "430822": "桑植县",
		    "430823": "其它区",
		    "430900": "益阳市",
		    "430902": "资阳区",
		    "430903": "赫山区",
		    "430921": "南县",
		    "430922": "桃江县",
		    "430923": "安化县",
		    "430981": "沅江市",
		    "430982": "其它区",
		    "431000": "郴州市",
		    "431002": "北湖区",
		    "431003": "苏仙区",
		    "431021": "桂阳县",
		    "431022": "宜章县",
		    "431023": "永兴县",
		    "431024": "嘉禾县",
		    "431025": "临武县",
		    "431026": "汝城县",
		    "431027": "桂东县",
		    "431028": "安仁县",
		    "431081": "资兴市",
		    "431082": "其它区",
		    "431100": "永州市",
		    "431102": "零陵区",
		    "431103": "冷水滩区",
		    "431121": "祁阳县",
		    "431122": "东安县",
		    "431123": "双牌县",
		    "431124": "道县",
		    "431125": "江永县",
		    "431126": "宁远县",
		    "431127": "蓝山县",
		    "431128": "新田县",
		    "431129": "江华瑶族自治县",
		    "431130": "其它区",
		    "431200": "怀化市",
		    "431202": "鹤城区",
		    "431221": "中方县",
		    "431222": "沅陵县",
		    "431223": "辰溪县",
		    "431224": "溆浦县",
		    "431225": "会同县",
		    "431226": "麻阳苗族自治县",
		    "431227": "新晃侗族自治县",
		    "431228": "芷江侗族自治县",
		    "431229": "靖州苗族侗族自治县",
		    "431230": "通道侗族自治县",
		    "431281": "洪江市",
		    "431282": "其它区",
		    "431300": "娄底市",
		    "431302": "娄星区",
		    "431321": "双峰县",
		    "431322": "新化县",
		    "431381": "冷水江市",
		    "431382": "涟源市",
		    "431383": "其它区",
		    "433100": "湘西土家族苗族自治州",
		    "433101": "吉首市",
		    "433122": "泸溪县",
		    "433123": "凤凰县",
		    "433124": "花垣县",
		    "433125": "保靖县",
		    "433126": "古丈县",
		    "433127": "永顺县",
		    "433130": "龙山县",
		    "433131": "其它区",
		    "440000": "广东省",
		    "440100": "广州市",
		    "440103": "荔湾区",
		    "440104": "越秀区",
		    "440105": "海珠区",
		    "440106": "天河区",
		    "440111": "白云区",
		    "440112": "黄埔区",
		    "440113": "番禺区",
		    "440114": "花都区",
		    "440115": "南沙区",
		    "440116": "萝岗区",
		    "440183": "增城市",
		    "440184": "从化市",
		    "440189": "其它区",
		    "440200": "韶关市",
		    "440203": "武江区",
		    "440204": "浈江区",
		    "440205": "曲江区",
		    "440222": "始兴县",
		    "440224": "仁化县",
		    "440229": "翁源县",
		    "440232": "乳源瑶族自治县",
		    "440233": "新丰县",
		    "440281": "乐昌市",
		    "440282": "南雄市",
		    "440283": "其它区",
		    "440300": "深圳市",
		    "440303": "罗湖区",
		    "440304": "福田区",
		    "440305": "南山区",
		    "440306": "宝安区",
		    "440307": "龙岗区",
		    "440308": "盐田区",
		    "440309": "其它区",
		    "440320": "光明新区",
		    "440321": "坪山新区",
		    "440322": "大鹏新区",
		    "440323": "龙华新区",
		    "440400": "珠海市",
		    "440402": "香洲区",
		    "440403": "斗门区",
		    "440404": "金湾区",
		    "440488": "其它区",
		    "440500": "汕头市",
		    "440507": "龙湖区",
		    "440511": "金平区",
		    "440512": "濠江区",
		    "440513": "潮阳区",
		    "440514": "潮南区",
		    "440515": "澄海区",
		    "440523": "南澳县",
		    "440524": "其它区",
		    "440600": "佛山市",
		    "440604": "禅城区",
		    "440605": "南海区",
		    "440606": "顺德区",
		    "440607": "三水区",
		    "440608": "高明区",
		    "440609": "其它区",
		    "440700": "江门市",
		    "440703": "蓬江区",
		    "440704": "江海区",
		    "440705": "新会区",
		    "440781": "台山市",
		    "440783": "开平市",
		    "440784": "鹤山市",
		    "440785": "恩平市",
		    "440786": "其它区",
		    "440800": "湛江市",
		    "440802": "赤坎区",
		    "440803": "霞山区",
		    "440804": "坡头区",
		    "440811": "麻章区",
		    "440823": "遂溪县",
		    "440825": "徐闻县",
		    "440881": "廉江市",
		    "440882": "雷州市",
		    "440883": "吴川市",
		    "440884": "其它区",
		    "440900": "茂名市",
		    "440902": "茂南区",
		    "440903": "茂港区",
		    "440923": "电白县",
		    "440981": "高州市",
		    "440982": "化州市",
		    "440983": "信宜市",
		    "440984": "其它区",
		    "441200": "肇庆市",
		    "441202": "端州区",
		    "441203": "鼎湖区",
		    "441223": "广宁县",
		    "441224": "怀集县",
		    "441225": "封开县",
		    "441226": "德庆县",
		    "441283": "高要市",
		    "441284": "四会市",
		    "441285": "其它区",
		    "441300": "惠州市",
		    "441302": "惠城区",
		    "441303": "惠阳区",
		    "441322": "博罗县",
		    "441323": "惠东县",
		    "441324": "龙门县",
		    "441325": "其它区",
		    "441400": "梅州市",
		    "441402": "梅江区",
		    "441421": "梅县",
		    "441422": "大埔县",
		    "441423": "丰顺县",
		    "441424": "五华县",
		    "441426": "平远县",
		    "441427": "蕉岭县",
		    "441481": "兴宁市",
		    "441482": "其它区",
		    "441500": "汕尾市",
		    "441502": "城区",
		    "441521": "海丰县",
		    "441523": "陆河县",
		    "441581": "陆丰市",
		    "441582": "其它区",
		    "441600": "河源市",
		    "441602": "源城区",
		    "441621": "紫金县",
		    "441622": "龙川县",
		    "441623": "连平县",
		    "441624": "和平县",
		    "441625": "东源县",
		    "441626": "其它区",
		    "441700": "阳江市",
		    "441702": "江城区",
		    "441721": "阳西县",
		    "441723": "阳东县",
		    "441781": "阳春市",
		    "441782": "其它区",
		    "441800": "清远市",
		    "441802": "清城区",
		    "441821": "佛冈县",
		    "441823": "阳山县",
		    "441825": "连山壮族瑶族自治县",
		    "441826": "连南瑶族自治县",
		    "441827": "清新区",
		    "441881": "英德市",
		    "441882": "连州市",
		    "441883": "其它区",
		    "441900": "东莞市",
		    "442000": "中山市",
		    "442101": "东沙群岛",
		    "445100": "潮州市",
		    "445102": "湘桥区",
		    "445121": "潮安区",
		    "445122": "饶平县",
		    "445186": "其它区",
		    "445200": "揭阳市",
		    "445202": "榕城区",
		    "445221": "揭东区",
		    "445222": "揭西县",
		    "445224": "惠来县",
		    "445281": "普宁市",
		    "445285": "其它区",
		    "445300": "云浮市",
		    "445302": "云城区",
		    "445321": "新兴县",
		    "445322": "郁南县",
		    "445323": "云安县",
		    "445381": "罗定市",
		    "445382": "其它区",
		    "450000": "广西壮族自治区",
		    "450100": "南宁市",
		    "450102": "兴宁区",
		    "450103": "青秀区",
		    "450105": "江南区",
		    "450107": "西乡塘区",
		    "450108": "良庆区",
		    "450109": "邕宁区",
		    "450122": "武鸣县",
		    "450123": "隆安县",
		    "450124": "马山县",
		    "450125": "上林县",
		    "450126": "宾阳县",
		    "450127": "横县",
		    "450128": "其它区",
		    "450200": "柳州市",
		    "450202": "城中区",
		    "450203": "鱼峰区",
		    "450204": "柳南区",
		    "450205": "柳北区",
		    "450221": "柳江县",
		    "450222": "柳城县",
		    "450223": "鹿寨县",
		    "450224": "融安县",
		    "450225": "融水苗族自治县",
		    "450226": "三江侗族自治县",
		    "450227": "其它区",
		    "450300": "桂林市",
		    "450302": "秀峰区",
		    "450303": "叠彩区",
		    "450304": "象山区",
		    "450305": "七星区",
		    "450311": "雁山区",
		    "450321": "阳朔县",
		    "450322": "临桂区",
		    "450323": "灵川县",
		    "450324": "全州县",
		    "450325": "兴安县",
		    "450326": "永福县",
		    "450327": "灌阳县",
		    "450328": "龙胜各族自治县",
		    "450329": "资源县",
		    "450330": "平乐县",
		    "450331": "荔浦县",
		    "450332": "恭城瑶族自治县",
		    "450333": "其它区",
		    "450400": "梧州市",
		    "450403": "万秀区",
		    "450405": "长洲区",
		    "450406": "龙圩区",
		    "450421": "苍梧县",
		    "450422": "藤县",
		    "450423": "蒙山县",
		    "450481": "岑溪市",
		    "450482": "其它区",
		    "450500": "北海市",
		    "450502": "海城区",
		    "450503": "银海区",
		    "450512": "铁山港区",
		    "450521": "合浦县",
		    "450522": "其它区",
		    "450600": "防城港市",
		    "450602": "港口区",
		    "450603": "防城区",
		    "450621": "上思县",
		    "450681": "东兴市",
		    "450682": "其它区",
		    "450700": "钦州市",
		    "450702": "钦南区",
		    "450703": "钦北区",
		    "450721": "灵山县",
		    "450722": "浦北县",
		    "450723": "其它区",
		    "450800": "贵港市",
		    "450802": "港北区",
		    "450803": "港南区",
		    "450804": "覃塘区",
		    "450821": "平南县",
		    "450881": "桂平市",
		    "450882": "其它区",
		    "450900": "玉林市",
		    "450902": "玉州区",
		    "450903": "福绵区",
		    "450921": "容县",
		    "450922": "陆川县",
		    "450923": "博白县",
		    "450924": "兴业县",
		    "450981": "北流市",
		    "450982": "其它区",
		    "451000": "百色市",
		    "451002": "右江区",
		    "451021": "田阳县",
		    "451022": "田东县",
		    "451023": "平果县",
		    "451024": "德保县",
		    "451025": "靖西县",
		    "451026": "那坡县",
		    "451027": "凌云县",
		    "451028": "乐业县",
		    "451029": "田林县",
		    "451030": "西林县",
		    "451031": "隆林各族自治县",
		    "451032": "其它区",
		    "451100": "贺州市",
		    "451102": "八步区",
		    "451119": "平桂管理区",
		    "451121": "昭平县",
		    "451122": "钟山县",
		    "451123": "富川瑶族自治县",
		    "451124": "其它区",
		    "451200": "河池市",
		    "451202": "金城江区",
		    "451221": "南丹县",
		    "451222": "天峨县",
		    "451223": "凤山县",
		    "451224": "东兰县",
		    "451225": "罗城仫佬族自治县",
		    "451226": "环江毛南族自治县",
		    "451227": "巴马瑶族自治县",
		    "451228": "都安瑶族自治县",
		    "451229": "大化瑶族自治县",
		    "451281": "宜州市",
		    "451282": "其它区",
		    "451300": "来宾市",
		    "451302": "兴宾区",
		    "451321": "忻城县",
		    "451322": "象州县",
		    "451323": "武宣县",
		    "451324": "金秀瑶族自治县",
		    "451381": "合山市",
		    "451382": "其它区",
		    "451400": "崇左市",
		    "451402": "江州区",
		    "451421": "扶绥县",
		    "451422": "宁明县",
		    "451423": "龙州县",
		    "451424": "大新县",
		    "451425": "天等县",
		    "451481": "凭祥市",
		    "451482": "其它区",
		    "460000": "海南省",
		    "460100": "海口市",
		    "460105": "秀英区",
		    "460106": "龙华区",
		    "460107": "琼山区",
		    "460108": "美兰区",
		    "460109": "其它区",
		    "460200": "三亚市",
		    "460300": "三沙市",
		    "460321": "西沙群岛",
		    "460322": "南沙群岛",
		    "460323": "中沙群岛的岛礁及其海域",
		    "469001": "五指山市",
		    "469002": "琼海市",
		    "469003": "儋州市",
		    "469005": "文昌市",
		    "469006": "万宁市",
		    "469007": "东方市",
		    "469025": "定安县",
		    "469026": "屯昌县",
		    "469027": "澄迈县",
		    "469028": "临高县",
		    "469030": "白沙黎族自治县",
		    "469031": "昌江黎族自治县",
		    "469033": "乐东黎族自治县",
		    "469034": "陵水黎族自治县",
		    "469035": "保亭黎族苗族自治县",
		    "469036": "琼中黎族苗族自治县",
		    "471005": "其它区",
		    "500000": "重庆",
		    "500100": "重庆市",
		    "500101": "万州区",
		    "500102": "涪陵区",
		    "500103": "渝中区",
		    "500104": "大渡口区",
		    "500105": "江北区",
		    "500106": "沙坪坝区",
		    "500107": "九龙坡区",
		    "500108": "南岸区",
		    "500109": "北碚区",
		    "500110": "万盛区",
		    "500111": "双桥区",
		    "500112": "渝北区",
		    "500113": "巴南区",
		    "500114": "黔江区",
		    "500115": "长寿区",
		    "500222": "綦江区",
		    "500223": "潼南县",
		    "500224": "铜梁县",
		    "500225": "大足区",
		    "500226": "荣昌县",
		    "500227": "璧山县",
		    "500228": "梁平县",
		    "500229": "城口县",
		    "500230": "丰都县",
		    "500231": "垫江县",
		    "500232": "武隆县",
		    "500233": "忠县",
		    "500234": "开县",
		    "500235": "云阳县",
		    "500236": "奉节县",
		    "500237": "巫山县",
		    "500238": "巫溪县",
		    "500240": "石柱土家族自治县",
		    "500241": "秀山土家族苗族自治县",
		    "500242": "酉阳土家族苗族自治县",
		    "500243": "彭水苗族土家族自治县",
		    "500381": "江津区",
		    "500382": "合川区",
		    "500383": "永川区",
		    "500384": "南川区",
		    "500385": "其它区",
		    "510000": "四川省",
		    "510100": "成都市",
		    "510104": "锦江区",
		    "510105": "青羊区",
		    "510106": "金牛区",
		    "510107": "武侯区",
		    "510108": "成华区",
		    "510112": "龙泉驿区",
		    "510113": "青白江区",
		    "510114": "新都区",
		    "510115": "温江区",
		    "510121": "金堂县",
		    "510122": "双流县",
		    "510124": "郫县",
		    "510129": "大邑县",
		    "510131": "蒲江县",
		    "510132": "新津县",
		    "510181": "都江堰市",
		    "510182": "彭州市",
		    "510183": "邛崃市",
		    "510184": "崇州市",
		    "510185": "其它区",
		    "510300": "自贡市",
		    "510302": "自流井区",
		    "510303": "贡井区",
		    "510304": "大安区",
		    "510311": "沿滩区",
		    "510321": "荣县",
		    "510322": "富顺县",
		    "510323": "其它区",
		    "510400": "攀枝花市",
		    "510402": "东区",
		    "510403": "西区",
		    "510411": "仁和区",
		    "510421": "米易县",
		    "510422": "盐边县",
		    "510423": "其它区",
		    "510500": "泸州市",
		    "510502": "江阳区",
		    "510503": "纳溪区",
		    "510504": "龙马潭区",
		    "510521": "泸县",
		    "510522": "合江县",
		    "510524": "叙永县",
		    "510525": "古蔺县",
		    "510526": "其它区",
		    "510600": "德阳市",
		    "510603": "旌阳区",
		    "510623": "中江县",
		    "510626": "罗江县",
		    "510681": "广汉市",
		    "510682": "什邡市",
		    "510683": "绵竹市",
		    "510684": "其它区",
		    "510700": "绵阳市",
		    "510703": "涪城区",
		    "510704": "游仙区",
		    "510722": "三台县",
		    "510723": "盐亭县",
		    "510724": "安县",
		    "510725": "梓潼县",
		    "510726": "北川羌族自治县",
		    "510727": "平武县",
		    "510781": "江油市",
		    "510782": "其它区",
		    "510800": "广元市",
		    "510802": "利州区",
		    "510811": "昭化区",
		    "510812": "朝天区",
		    "510821": "旺苍县",
		    "510822": "青川县",
		    "510823": "剑阁县",
		    "510824": "苍溪县",
		    "510825": "其它区",
		    "510900": "遂宁市",
		    "510903": "船山区",
		    "510904": "安居区",
		    "510921": "蓬溪县",
		    "510922": "射洪县",
		    "510923": "大英县",
		    "510924": "其它区",
		    "511000": "内江市",
		    "511002": "市中区",
		    "511011": "东兴区",
		    "511024": "威远县",
		    "511025": "资中县",
		    "511028": "隆昌县",
		    "511029": "其它区",
		    "511100": "乐山市",
		    "511102": "市中区",
		    "511111": "沙湾区",
		    "511112": "五通桥区",
		    "511113": "金口河区",
		    "511123": "犍为县",
		    "511124": "井研县",
		    "511126": "夹江县",
		    "511129": "沐川县",
		    "511132": "峨边彝族自治县",
		    "511133": "马边彝族自治县",
		    "511181": "峨眉山市",
		    "511182": "其它区",
		    "511300": "南充市",
		    "511302": "顺庆区",
		    "511303": "高坪区",
		    "511304": "嘉陵区",
		    "511321": "南部县",
		    "511322": "营山县",
		    "511323": "蓬安县",
		    "511324": "仪陇县",
		    "511325": "西充县",
		    "511381": "阆中市",
		    "511382": "其它区",
		    "511400": "眉山市",
		    "511402": "东坡区",
		    "511421": "仁寿县",
		    "511422": "彭山县",
		    "511423": "洪雅县",
		    "511424": "丹棱县",
		    "511425": "青神县",
		    "511426": "其它区",
		    "511500": "宜宾市",
		    "511502": "翠屏区",
		    "511521": "宜宾县",
		    "511522": "南溪区",
		    "511523": "江安县",
		    "511524": "长宁县",
		    "511525": "高县",
		    "511526": "珙县",
		    "511527": "筠连县",
		    "511528": "兴文县",
		    "511529": "屏山县",
		    "511530": "其它区",
		    "511600": "广安市",
		    "511602": "广安区",
		    "511603": "前锋区",
		    "511621": "岳池县",
		    "511622": "武胜县",
		    "511623": "邻水县",
		    "511681": "华蓥市",
		    "511683": "其它区",
		    "511700": "达州市",
		    "511702": "通川区",
		    "511721": "达川区",
		    "511722": "宣汉县",
		    "511723": "开江县",
		    "511724": "大竹县",
		    "511725": "渠县",
		    "511781": "万源市",
		    "511782": "其它区",
		    "511800": "雅安市",
		    "511802": "雨城区",
		    "511821": "名山区",
		    "511822": "荥经县",
		    "511823": "汉源县",
		    "511824": "石棉县",
		    "511825": "天全县",
		    "511826": "芦山县",
		    "511827": "宝兴县",
		    "511828": "其它区",
		    "511900": "巴中市",
		    "511902": "巴州区",
		    "511903": "恩阳区",
		    "511921": "通江县",
		    "511922": "南江县",
		    "511923": "平昌县",
		    "511924": "其它区",
		    "512000": "资阳市",
		    "512002": "雁江区",
		    "512021": "安岳县",
		    "512022": "乐至县",
		    "512081": "简阳市",
		    "512082": "其它区",
		    "513200": "阿坝藏族羌族自治州",
		    "513221": "汶川县",
		    "513222": "理县",
		    "513223": "茂县",
		    "513224": "松潘县",
		    "513225": "九寨沟县",
		    "513226": "金川县",
		    "513227": "小金县",
		    "513228": "黑水县",
		    "513229": "马尔康县",
		    "513230": "壤塘县",
		    "513231": "阿坝县",
		    "513232": "若尔盖县",
		    "513233": "红原县",
		    "513234": "其它区",
		    "513300": "甘孜藏族自治州",
		    "513321": "康定县",
		    "513322": "泸定县",
		    "513323": "丹巴县",
		    "513324": "九龙县",
		    "513325": "雅江县",
		    "513326": "道孚县",
		    "513327": "炉霍县",
		    "513328": "甘孜县",
		    "513329": "新龙县",
		    "513330": "德格县",
		    "513331": "白玉县",
		    "513332": "石渠县",
		    "513333": "色达县",
		    "513334": "理塘县",
		    "513335": "巴塘县",
		    "513336": "乡城县",
		    "513337": "稻城县",
		    "513338": "得荣县",
		    "513339": "其它区",
		    "513400": "凉山彝族自治州",
		    "513401": "西昌市",
		    "513422": "木里藏族自治县",
		    "513423": "盐源县",
		    "513424": "德昌县",
		    "513425": "会理县",
		    "513426": "会东县",
		    "513427": "宁南县",
		    "513428": "普格县",
		    "513429": "布拖县",
		    "513430": "金阳县",
		    "513431": "昭觉县",
		    "513432": "喜德县",
		    "513433": "冕宁县",
		    "513434": "越西县",
		    "513435": "甘洛县",
		    "513436": "美姑县",
		    "513437": "雷波县",
		    "513438": "其它区",
		    "520000": "贵州省",
		    "520100": "贵阳市",
		    "520102": "南明区",
		    "520103": "云岩区",
		    "520111": "花溪区",
		    "520112": "乌当区",
		    "520113": "白云区",
		    "520121": "开阳县",
		    "520122": "息烽县",
		    "520123": "修文县",
		    "520151": "观山湖区",
		    "520181": "清镇市",
		    "520182": "其它区",
		    "520200": "六盘水市",
		    "520201": "钟山区",
		    "520203": "六枝特区",
		    "520221": "水城县",
		    "520222": "盘县",
		    "520223": "其它区",
		    "520300": "遵义市",
		    "520302": "红花岗区",
		    "520303": "汇川区",
		    "520321": "遵义县",
		    "520322": "桐梓县",
		    "520323": "绥阳县",
		    "520324": "正安县",
		    "520325": "道真仡佬族苗族自治县",
		    "520326": "务川仡佬族苗族自治县",
		    "520327": "凤冈县",
		    "520328": "湄潭县",
		    "520329": "余庆县",
		    "520330": "习水县",
		    "520381": "赤水市",
		    "520382": "仁怀市",
		    "520383": "其它区",
		    "520400": "安顺市",
		    "520402": "西秀区",
		    "520421": "平坝县",
		    "520422": "普定县",
		    "520423": "镇宁布依族苗族自治县",
		    "520424": "关岭布依族苗族自治县",
		    "520425": "紫云苗族布依族自治县",
		    "520426": "其它区",
		    "522200": "铜仁市",
		    "522201": "碧江区",
		    "522222": "江口县",
		    "522223": "玉屏侗族自治县",
		    "522224": "石阡县",
		    "522225": "思南县",
		    "522226": "印江土家族苗族自治县",
		    "522227": "德江县",
		    "522228": "沿河土家族自治县",
		    "522229": "松桃苗族自治县",
		    "522230": "万山区",
		    "522231": "其它区",
		    "522300": "黔西南布依族苗族自治州",
		    "522301": "兴义市",
		    "522322": "兴仁县",
		    "522323": "普安县",
		    "522324": "晴隆县",
		    "522325": "贞丰县",
		    "522326": "望谟县",
		    "522327": "册亨县",
		    "522328": "安龙县",
		    "522329": "其它区",
		    "522400": "毕节市",
		    "522401": "七星关区",
		    "522422": "大方县",
		    "522423": "黔西县",
		    "522424": "金沙县",
		    "522425": "织金县",
		    "522426": "纳雍县",
		    "522427": "威宁彝族回族苗族自治县",
		    "522428": "赫章县",
		    "522429": "其它区",
		    "522600": "黔东南苗族侗族自治州",
		    "522601": "凯里市",
		    "522622": "黄平县",
		    "522623": "施秉县",
		    "522624": "三穗县",
		    "522625": "镇远县",
		    "522626": "岑巩县",
		    "522627": "天柱县",
		    "522628": "锦屏县",
		    "522629": "剑河县",
		    "522630": "台江县",
		    "522631": "黎平县",
		    "522632": "榕江县",
		    "522633": "从江县",
		    "522634": "雷山县",
		    "522635": "麻江县",
		    "522636": "丹寨县",
		    "522637": "其它区",
		    "522700": "黔南布依族苗族自治州",
		    "522701": "都匀市",
		    "522702": "福泉市",
		    "522722": "荔波县",
		    "522723": "贵定县",
		    "522725": "瓮安县",
		    "522726": "独山县",
		    "522727": "平塘县",
		    "522728": "罗甸县",
		    "522729": "长顺县",
		    "522730": "龙里县",
		    "522731": "惠水县",
		    "522732": "三都水族自治县",
		    "522733": "其它区",
		    "530000": "云南省",
		    "530100": "昆明市",
		    "530102": "五华区",
		    "530103": "盘龙区",
		    "530111": "官渡区",
		    "530112": "西山区",
		    "530113": "东川区",
		    "530121": "呈贡区",
		    "530122": "晋宁县",
		    "530124": "富民县",
		    "530125": "宜良县",
		    "530126": "石林彝族自治县",
		    "530127": "嵩明县",
		    "530128": "禄劝彝族苗族自治县",
		    "530129": "寻甸回族彝族自治县",
		    "530181": "安宁市",
		    "530182": "其它区",
		    "530300": "曲靖市",
		    "530302": "麒麟区",
		    "530321": "马龙县",
		    "530322": "陆良县",
		    "530323": "师宗县",
		    "530324": "罗平县",
		    "530325": "富源县",
		    "530326": "会泽县",
		    "530328": "沾益县",
		    "530381": "宣威市",
		    "530382": "其它区",
		    "530400": "玉溪市",
		    "530402": "红塔区",
		    "530421": "江川县",
		    "530422": "澄江县",
		    "530423": "通海县",
		    "530424": "华宁县",
		    "530425": "易门县",
		    "530426": "峨山彝族自治县",
		    "530427": "新平彝族傣族自治县",
		    "530428": "元江哈尼族彝族傣族自治县",
		    "530429": "其它区",
		    "530500": "保山市",
		    "530502": "隆阳区",
		    "530521": "施甸县",
		    "530522": "腾冲县",
		    "530523": "龙陵县",
		    "530524": "昌宁县",
		    "530525": "其它区",
		    "530600": "昭通市",
		    "530602": "昭阳区",
		    "530621": "鲁甸县",
		    "530622": "巧家县",
		    "530623": "盐津县",
		    "530624": "大关县",
		    "530625": "永善县",
		    "530626": "绥江县",
		    "530627": "镇雄县",
		    "530628": "彝良县",
		    "530629": "威信县",
		    "530630": "水富县",
		    "530631": "其它区",
		    "530700": "丽江市",
		    "530702": "古城区",
		    "530721": "玉龙纳西族自治县",
		    "530722": "永胜县",
		    "530723": "华坪县",
		    "530724": "宁蒗彝族自治县",
		    "530725": "其它区",
		    "530800": "普洱市",
		    "530802": "思茅区",
		    "530821": "宁洱哈尼族彝族自治县",
		    "530822": "墨江哈尼族自治县",
		    "530823": "景东彝族自治县",
		    "530824": "景谷傣族彝族自治县",
		    "530825": "镇沅彝族哈尼族拉祜族自治县",
		    "530826": "江城哈尼族彝族自治县",
		    "530827": "孟连傣族拉祜族佤族自治县",
		    "530828": "澜沧拉祜族自治县",
		    "530829": "西盟佤族自治县",
		    "530830": "其它区",
		    "530900": "临沧市",
		    "530902": "临翔区",
		    "530921": "凤庆县",
		    "530922": "云县",
		    "530923": "永德县",
		    "530924": "镇康县",
		    "530925": "双江拉祜族佤族布朗族傣族自治县",
		    "530926": "耿马傣族佤族自治县",
		    "530927": "沧源佤族自治县",
		    "530928": "其它区",
		    "532300": "楚雄彝族自治州",
		    "532301": "楚雄市",
		    "532322": "双柏县",
		    "532323": "牟定县",
		    "532324": "南华县",
		    "532325": "姚安县",
		    "532326": "大姚县",
		    "532327": "永仁县",
		    "532328": "元谋县",
		    "532329": "武定县",
		    "532331": "禄丰县",
		    "532332": "其它区",
		    "532500": "红河哈尼族彝族自治州",
		    "532501": "个旧市",
		    "532502": "开远市",
		    "532522": "蒙自市",
		    "532523": "屏边苗族自治县",
		    "532524": "建水县",
		    "532525": "石屏县",
		    "532526": "弥勒市",
		    "532527": "泸西县",
		    "532528": "元阳县",
		    "532529": "红河县",
		    "532530": "金平苗族瑶族傣族自治县",
		    "532531": "绿春县",
		    "532532": "河口瑶族自治县",
		    "532533": "其它区",
		    "532600": "文山壮族苗族自治州",
		    "532621": "文山市",
		    "532622": "砚山县",
		    "532623": "西畴县",
		    "532624": "麻栗坡县",
		    "532625": "马关县",
		    "532626": "丘北县",
		    "532627": "广南县",
		    "532628": "富宁县",
		    "532629": "其它区",
		    "532800": "西双版纳傣族自治州",
		    "532801": "景洪市",
		    "532822": "勐海县",
		    "532823": "勐腊县",
		    "532824": "其它区",
		    "532900": "大理白族自治州",
		    "532901": "大理市",
		    "532922": "漾濞彝族自治县",
		    "532923": "祥云县",
		    "532924": "宾川县",
		    "532925": "弥渡县",
		    "532926": "南涧彝族自治县",
		    "532927": "巍山彝族回族自治县",
		    "532928": "永平县",
		    "532929": "云龙县",
		    "532930": "洱源县",
		    "532931": "剑川县",
		    "532932": "鹤庆县",
		    "532933": "其它区",
		    "533100": "德宏傣族景颇族自治州",
		    "533102": "瑞丽市",
		    "533103": "芒市",
		    "533122": "梁河县",
		    "533123": "盈江县",
		    "533124": "陇川县",
		    "533125": "其它区",
		    "533300": "怒江傈僳族自治州",
		    "533321": "泸水县",
		    "533323": "福贡县",
		    "533324": "贡山独龙族怒族自治县",
		    "533325": "兰坪白族普米族自治县",
		    "533326": "其它区",
		    "533400": "迪庆藏族自治州",
		    "533421": "香格里拉县",
		    "533422": "德钦县",
		    "533423": "维西傈僳族自治县",
		    "533424": "其它区",
		    "540000": "西藏自治区",
		    "540100": "拉萨市",
		    "540102": "城关区",
		    "540121": "林周县",
		    "540122": "当雄县",
		    "540123": "尼木县",
		    "540124": "曲水县",
		    "540125": "堆龙德庆县",
		    "540126": "达孜县",
		    "540127": "墨竹工卡县",
		    "540128": "其它区",
		    "542100": "昌都地区",
		    "542121": "昌都县",
		    "542122": "江达县",
		    "542123": "贡觉县",
		    "542124": "类乌齐县",
		    "542125": "丁青县",
		    "542126": "察雅县",
		    "542127": "八宿县",
		    "542128": "左贡县",
		    "542129": "芒康县",
		    "542132": "洛隆县",
		    "542133": "边坝县",
		    "542134": "其它区",
		    "542200": "山南地区",
		    "542221": "乃东县",
		    "542222": "扎囊县",
		    "542223": "贡嘎县",
		    "542224": "桑日县",
		    "542225": "琼结县",
		    "542226": "曲松县",
		    "542227": "措美县",
		    "542228": "洛扎县",
		    "542229": "加查县",
		    "542231": "隆子县",
		    "542232": "错那县",
		    "542233": "浪卡子县",
		    "542234": "其它区",
		    "542300": "日喀则地区",
		    "542301": "日喀则市",
		    "542322": "南木林县",
		    "542323": "江孜县",
		    "542324": "定日县",
		    "542325": "萨迦县",
		    "542326": "拉孜县",
		    "542327": "昂仁县",
		    "542328": "谢通门县",
		    "542329": "白朗县",
		    "542330": "仁布县",
		    "542331": "康马县",
		    "542332": "定结县",
		    "542333": "仲巴县",
		    "542334": "亚东县",
		    "542335": "吉隆县",
		    "542336": "聂拉木县",
		    "542337": "萨嘎县",
		    "542338": "岗巴县",
		    "542339": "其它区",
		    "542400": "那曲地区",
		    "542421": "那曲县",
		    "542422": "嘉黎县",
		    "542423": "比如县",
		    "542424": "聂荣县",
		    "542425": "安多县",
		    "542426": "申扎县",
		    "542427": "索县",
		    "542428": "班戈县",
		    "542429": "巴青县",
		    "542430": "尼玛县",
		    "542431": "其它区",
		    "542432": "双湖县",
		    "542500": "阿里地区",
		    "542521": "普兰县",
		    "542522": "札达县",
		    "542523": "噶尔县",
		    "542524": "日土县",
		    "542525": "革吉县",
		    "542526": "改则县",
		    "542527": "措勤县",
		    "542528": "其它区",
		    "542600": "林芝地区",
		    "542621": "林芝县",
		    "542622": "工布江达县",
		    "542623": "米林县",
		    "542624": "墨脱县",
		    "542625": "波密县",
		    "542626": "察隅县",
		    "542627": "朗县",
		    "542628": "其它区",
		    "610000": "陕西省",
		    "610100": "西安市",
		    "610102": "新城区",
		    "610103": "碑林区",
		    "610104": "莲湖区",
		    "610111": "灞桥区",
		    "610112": "未央区",
		    "610113": "雁塔区",
		    "610114": "阎良区",
		    "610115": "临潼区",
		    "610116": "长安区",
		    "610122": "蓝田县",
		    "610124": "周至县",
		    "610125": "户县",
		    "610126": "高陵县",
		    "610127": "其它区",
		    "610200": "铜川市",
		    "610202": "王益区",
		    "610203": "印台区",
		    "610204": "耀州区",
		    "610222": "宜君县",
		    "610223": "其它区",
		    "610300": "宝鸡市",
		    "610302": "渭滨区",
		    "610303": "金台区",
		    "610304": "陈仓区",
		    "610322": "凤翔县",
		    "610323": "岐山县",
		    "610324": "扶风县",
		    "610326": "眉县",
		    "610327": "陇县",
		    "610328": "千阳县",
		    "610329": "麟游县",
		    "610330": "凤县",
		    "610331": "太白县",
		    "610332": "其它区",
		    "610400": "咸阳市",
		    "610402": "秦都区",
		    "610403": "杨陵区",
		    "610404": "渭城区",
		    "610422": "三原县",
		    "610423": "泾阳县",
		    "610424": "乾县",
		    "610425": "礼泉县",
		    "610426": "永寿县",
		    "610427": "彬县",
		    "610428": "长武县",
		    "610429": "旬邑县",
		    "610430": "淳化县",
		    "610431": "武功县",
		    "610481": "兴平市",
		    "610482": "其它区",
		    "610500": "渭南市",
		    "610502": "临渭区",
		    "610521": "华县",
		    "610522": "潼关县",
		    "610523": "大荔县",
		    "610524": "合阳县",
		    "610525": "澄城县",
		    "610526": "蒲城县",
		    "610527": "白水县",
		    "610528": "富平县",
		    "610581": "韩城市",
		    "610582": "华阴市",
		    "610583": "其它区",
		    "610600": "延安市",
		    "610602": "宝塔区",
		    "610621": "延长县",
		    "610622": "延川县",
		    "610623": "子长县",
		    "610624": "安塞县",
		    "610625": "志丹县",
		    "610626": "吴起县",
		    "610627": "甘泉县",
		    "610628": "富县",
		    "610629": "洛川县",
		    "610630": "宜川县",
		    "610631": "黄龙县",
		    "610632": "黄陵县",
		    "610633": "其它区",
		    "610700": "汉中市",
		    "610702": "汉台区",
		    "610721": "南郑县",
		    "610722": "城固县",
		    "610723": "洋县",
		    "610724": "西乡县",
		    "610725": "勉县",
		    "610726": "宁强县",
		    "610727": "略阳县",
		    "610728": "镇巴县",
		    "610729": "留坝县",
		    "610730": "佛坪县",
		    "610731": "其它区",
		    "610800": "榆林市",
		    "610802": "榆阳区",
		    "610821": "神木县",
		    "610822": "府谷县",
		    "610823": "横山县",
		    "610824": "靖边县",
		    "610825": "定边县",
		    "610826": "绥德县",
		    "610827": "米脂县",
		    "610828": "佳县",
		    "610829": "吴堡县",
		    "610830": "清涧县",
		    "610831": "子洲县",
		    "610832": "其它区",
		    "610900": "安康市",
		    "610902": "汉滨区",
		    "610921": "汉阴县",
		    "610922": "石泉县",
		    "610923": "宁陕县",
		    "610924": "紫阳县",
		    "610925": "岚皋县",
		    "610926": "平利县",
		    "610927": "镇坪县",
		    "610928": "旬阳县",
		    "610929": "白河县",
		    "610930": "其它区",
		    "611000": "商洛市",
		    "611002": "商州区",
		    "611021": "洛南县",
		    "611022": "丹凤县",
		    "611023": "商南县",
		    "611024": "山阳县",
		    "611025": "镇安县",
		    "611026": "柞水县",
		    "611027": "其它区",
		    "620000": "甘肃省",
		    "620100": "兰州市",
		    "620102": "城关区",
		    "620103": "七里河区",
		    "620104": "西固区",
		    "620105": "安宁区",
		    "620111": "红古区",
		    "620121": "永登县",
		    "620122": "皋兰县",
		    "620123": "榆中县",
		    "620124": "其它区",
		    "620200": "嘉峪关市",
		    "620300": "金昌市",
		    "620302": "金川区",
		    "620321": "永昌县",
		    "620322": "其它区",
		    "620400": "白银市",
		    "620402": "白银区",
		    "620403": "平川区",
		    "620421": "靖远县",
		    "620422": "会宁县",
		    "620423": "景泰县",
		    "620424": "其它区",
		    "620500": "天水市",
		    "620502": "秦州区",
		    "620503": "麦积区",
		    "620521": "清水县",
		    "620522": "秦安县",
		    "620523": "甘谷县",
		    "620524": "武山县",
		    "620525": "张家川回族自治县",
		    "620526": "其它区",
		    "620600": "武威市",
		    "620602": "凉州区",
		    "620621": "民勤县",
		    "620622": "古浪县",
		    "620623": "天祝藏族自治县",
		    "620624": "其它区",
		    "620700": "张掖市",
		    "620702": "甘州区",
		    "620721": "肃南裕固族自治县",
		    "620722": "民乐县",
		    "620723": "临泽县",
		    "620724": "高台县",
		    "620725": "山丹县",
		    "620726": "其它区",
		    "620800": "平凉市",
		    "620802": "崆峒区",
		    "620821": "泾川县",
		    "620822": "灵台县",
		    "620823": "崇信县",
		    "620824": "华亭县",
		    "620825": "庄浪县",
		    "620826": "静宁县",
		    "620827": "其它区",
		    "620900": "酒泉市",
		    "620902": "肃州区",
		    "620921": "金塔县",
		    "620922": "瓜州县",
		    "620923": "肃北蒙古族自治县",
		    "620924": "阿克塞哈萨克族自治县",
		    "620981": "玉门市",
		    "620982": "敦煌市",
		    "620983": "其它区",
		    "621000": "庆阳市",
		    "621002": "西峰区",
		    "621021": "庆城县",
		    "621022": "环县",
		    "621023": "华池县",
		    "621024": "合水县",
		    "621025": "正宁县",
		    "621026": "宁县",
		    "621027": "镇原县",
		    "621028": "其它区",
		    "621100": "定西市",
		    "621102": "安定区",
		    "621121": "通渭县",
		    "621122": "陇西县",
		    "621123": "渭源县",
		    "621124": "临洮县",
		    "621125": "漳县",
		    "621126": "岷县",
		    "621127": "其它区",
		    "621200": "陇南市",
		    "621202": "武都区",
		    "621221": "成县",
		    "621222": "文县",
		    "621223": "宕昌县",
		    "621224": "康县",
		    "621225": "西和县",
		    "621226": "礼县",
		    "621227": "徽县",
		    "621228": "两当县",
		    "621229": "其它区",
		    "622900": "临夏回族自治州",
		    "622901": "临夏市",
		    "622921": "临夏县",
		    "622922": "康乐县",
		    "622923": "永靖县",
		    "622924": "广河县",
		    "622925": "和政县",
		    "622926": "东乡族自治县",
		    "622927": "积石山保安族东乡族撒拉族自治县",
		    "622928": "其它区",
		    "623000": "甘南藏族自治州",
		    "623001": "合作市",
		    "623021": "临潭县",
		    "623022": "卓尼县",
		    "623023": "舟曲县",
		    "623024": "迭部县",
		    "623025": "玛曲县",
		    "623026": "碌曲县",
		    "623027": "夏河县",
		    "623028": "其它区",
		    "630000": "青海省",
		    "630100": "西宁市",
		    "630102": "城东区",
		    "630103": "城中区",
		    "630104": "城西区",
		    "630105": "城北区",
		    "630121": "大通回族土族自治县",
		    "630122": "湟中县",
		    "630123": "湟源县",
		    "630124": "其它区",
		    "632100": "海东市",
		    "632121": "平安县",
		    "632122": "民和回族土族自治县",
		    "632123": "乐都区",
		    "632126": "互助土族自治县",
		    "632127": "化隆回族自治县",
		    "632128": "循化撒拉族自治县",
		    "632129": "其它区",
		    "632200": "海北藏族自治州",
		    "632221": "门源回族自治县",
		    "632222": "祁连县",
		    "632223": "海晏县",
		    "632224": "刚察县",
		    "632225": "其它区",
		    "632300": "黄南藏族自治州",
		    "632321": "同仁县",
		    "632322": "尖扎县",
		    "632323": "泽库县",
		    "632324": "河南蒙古族自治县",
		    "632325": "其它区",
		    "632500": "海南藏族自治州",
		    "632521": "共和县",
		    "632522": "同德县",
		    "632523": "贵德县",
		    "632524": "兴海县",
		    "632525": "贵南县",
		    "632526": "其它区",
		    "632600": "果洛藏族自治州",
		    "632621": "玛沁县",
		    "632622": "班玛县",
		    "632623": "甘德县",
		    "632624": "达日县",
		    "632625": "久治县",
		    "632626": "玛多县",
		    "632627": "其它区",
		    "632700": "玉树藏族自治州",
		    "632721": "玉树市",
		    "632722": "杂多县",
		    "632723": "称多县",
		    "632724": "治多县",
		    "632725": "囊谦县",
		    "632726": "曲麻莱县",
		    "632727": "其它区",
		    "632800": "海西蒙古族藏族自治州",
		    "632801": "格尔木市",
		    "632802": "德令哈市",
		    "632821": "乌兰县",
		    "632822": "都兰县",
		    "632823": "天峻县",
		    "632824": "其它区",
		    "640000": "宁夏回族自治区",
		    "640100": "银川市",
		    "640104": "兴庆区",
		    "640105": "西夏区",
		    "640106": "金凤区",
		    "640121": "永宁县",
		    "640122": "贺兰县",
		    "640181": "灵武市",
		    "640182": "其它区",
		    "640200": "石嘴山市",
		    "640202": "大武口区",
		    "640205": "惠农区",
		    "640221": "平罗县",
		    "640222": "其它区",
		    "640300": "吴忠市",
		    "640302": "利通区",
		    "640303": "红寺堡区",
		    "640323": "盐池县",
		    "640324": "同心县",
		    "640381": "青铜峡市",
		    "640382": "其它区",
		    "640400": "固原市",
		    "640402": "原州区",
		    "640422": "西吉县",
		    "640423": "隆德县",
		    "640424": "泾源县",
		    "640425": "彭阳县",
		    "640426": "其它区",
		    "640500": "中卫市",
		    "640502": "沙坡头区",
		    "640521": "中宁县",
		    "640522": "海原县",
		    "640523": "其它区",
		    "650000": "新疆维吾尔自治区",
		    "650100": "乌鲁木齐市",
		    "650102": "天山区",
		    "650103": "沙依巴克区",
		    "650104": "新市区",
		    "650105": "水磨沟区",
		    "650106": "头屯河区",
		    "650107": "达坂城区",
		    "650109": "米东区",
		    "650121": "乌鲁木齐县",
		    "650122": "其它区",
		    "650200": "克拉玛依市",
		    "650202": "独山子区",
		    "650203": "克拉玛依区",
		    "650204": "白碱滩区",
		    "650205": "乌尔禾区",
		    "650206": "其它区",
		    "652100": "吐鲁番地区",
		    "652101": "吐鲁番市",
		    "652122": "鄯善县",
		    "652123": "托克逊县",
		    "652124": "其它区",
		    "652200": "哈密地区",
		    "652201": "哈密市",
		    "652222": "巴里坤哈萨克自治县",
		    "652223": "伊吾县",
		    "652224": "其它区",
		    "652300": "昌吉回族自治州",
		    "652301": "昌吉市",
		    "652302": "阜康市",
		    "652323": "呼图壁县",
		    "652324": "玛纳斯县",
		    "652325": "奇台县",
		    "652327": "吉木萨尔县",
		    "652328": "木垒哈萨克自治县",
		    "652329": "其它区",
		    "652700": "博尔塔拉蒙古自治州",
		    "652701": "博乐市",
		    "652702": "阿拉山口市",
		    "652722": "精河县",
		    "652723": "温泉县",
		    "652724": "其它区",
		    "652800": "巴音郭楞蒙古自治州",
		    "652801": "库尔勒市",
		    "652822": "轮台县",
		    "652823": "尉犁县",
		    "652824": "若羌县",
		    "652825": "且末县",
		    "652826": "焉耆回族自治县",
		    "652827": "和静县",
		    "652828": "和硕县",
		    "652829": "博湖县",
		    "652830": "其它区",
		    "652900": "阿克苏地区",
		    "652901": "阿克苏市",
		    "652922": "温宿县",
		    "652923": "库车县",
		    "652924": "沙雅县",
		    "652925": "新和县",
		    "652926": "拜城县",
		    "652927": "乌什县",
		    "652928": "阿瓦提县",
		    "652929": "柯坪县",
		    "652930": "其它区",
		    "653000": "克孜勒苏柯尔克孜自治州",
		    "653001": "阿图什市",
		    "653022": "阿克陶县",
		    "653023": "阿合奇县",
		    "653024": "乌恰县",
		    "653025": "其它区",
		    "653100": "喀什地区",
		    "653101": "喀什市",
		    "653121": "疏附县",
		    "653122": "疏勒县",
		    "653123": "英吉沙县",
		    "653124": "泽普县",
		    "653125": "莎车县",
		    "653126": "叶城县",
		    "653127": "麦盖提县",
		    "653128": "岳普湖县",
		    "653129": "伽师县",
		    "653130": "巴楚县",
		    "653131": "塔什库尔干塔吉克自治县",
		    "653132": "其它区",
		    "653200": "和田地区",
		    "653201": "和田市",
		    "653221": "和田县",
		    "653222": "墨玉县",
		    "653223": "皮山县",
		    "653224": "洛浦县",
		    "653225": "策勒县",
		    "653226": "于田县",
		    "653227": "民丰县",
		    "653228": "其它区",
		    "654000": "伊犁哈萨克自治州",
		    "654002": "伊宁市",
		    "654003": "奎屯市",
		    "654021": "伊宁县",
		    "654022": "察布查尔锡伯自治县",
		    "654023": "霍城县",
		    "654024": "巩留县",
		    "654025": "新源县",
		    "654026": "昭苏县",
		    "654027": "特克斯县",
		    "654028": "尼勒克县",
		    "654029": "其它区",
		    "654200": "塔城地区",
		    "654201": "塔城市",
		    "654202": "乌苏市",
		    "654221": "额敏县",
		    "654223": "沙湾县",
		    "654224": "托里县",
		    "654225": "裕民县",
		    "654226": "和布克赛尔蒙古自治县",
		    "654227": "其它区",
		    "654300": "阿勒泰地区",
		    "654301": "阿勒泰市",
		    "654321": "布尔津县",
		    "654322": "富蕴县",
		    "654323": "福海县",
		    "654324": "哈巴河县",
		    "654325": "青河县",
		    "654326": "吉木乃县",
		    "654327": "其它区",
		    "659001": "石河子市",
		    "659002": "阿拉尔市",
		    "659003": "图木舒克市",
		    "659004": "五家渠市",
		    "710000": "台湾",
		    "710100": "台北市",
		    "710101": "中正区",
		    "710102": "大同区",
		    "710103": "中山区",
		    "710104": "松山区",
		    "710105": "大安区",
		    "710106": "万华区",
		    "710107": "信义区",
		    "710108": "士林区",
		    "710109": "北投区",
		    "710110": "内湖区",
		    "710111": "南港区",
		    "710112": "文山区",
		    "710113": "其它区",
		    "710200": "高雄市",
		    "710201": "新兴区",
		    "710202": "前金区",
		    "710203": "芩雅区",
		    "710204": "盐埕区",
		    "710205": "鼓山区",
		    "710206": "旗津区",
		    "710207": "前镇区",
		    "710208": "三民区",
		    "710209": "左营区",
		    "710210": "楠梓区",
		    "710211": "小港区",
		    "710212": "其它区",
		    "710241": "苓雅区",
		    "710242": "仁武区",
		    "710243": "大社区",
		    "710244": "冈山区",
		    "710245": "路竹区",
		    "710246": "阿莲区",
		    "710247": "田寮区",
		    "710248": "燕巢区",
		    "710249": "桥头区",
		    "710250": "梓官区",
		    "710251": "弥陀区",
		    "710252": "永安区",
		    "710253": "湖内区",
		    "710254": "凤山区",
		    "710255": "大寮区",
		    "710256": "林园区",
		    "710257": "鸟松区",
		    "710258": "大树区",
		    "710259": "旗山区",
		    "710260": "美浓区",
		    "710261": "六龟区",
		    "710262": "内门区",
		    "710263": "杉林区",
		    "710264": "甲仙区",
		    "710265": "桃源区",
		    "710266": "那玛夏区",
		    "710267": "茂林区",
		    "710268": "茄萣区",
		    "710300": "台南市",
		    "710301": "中西区",
		    "710302": "东区",
		    "710303": "南区",
		    "710304": "北区",
		    "710305": "安平区",
		    "710306": "安南区",
		    "710307": "其它区",
		    "710339": "永康区",
		    "710340": "归仁区",
		    "710341": "新化区",
		    "710342": "左镇区",
		    "710343": "玉井区",
		    "710344": "楠西区",
		    "710345": "南化区",
		    "710346": "仁德区",
		    "710347": "关庙区",
		    "710348": "龙崎区",
		    "710349": "官田区",
		    "710350": "麻豆区",
		    "710351": "佳里区",
		    "710352": "西港区",
		    "710353": "七股区",
		    "710354": "将军区",
		    "710355": "学甲区",
		    "710356": "北门区",
		    "710357": "新营区",
		    "710358": "后壁区",
		    "710359": "白河区",
		    "710360": "东山区",
		    "710361": "六甲区",
		    "710362": "下营区",
		    "710363": "柳营区",
		    "710364": "盐水区",
		    "710365": "善化区",
		    "710366": "大内区",
		    "710367": "山上区",
		    "710368": "新市区",
		    "710369": "安定区",
		    "710400": "台中市",
		    "710401": "中区",
		    "710402": "东区",
		    "710403": "南区",
		    "710404": "西区",
		    "710405": "北区",
		    "710406": "北屯区",
		    "710407": "西屯区",
		    "710408": "南屯区",
		    "710409": "其它区",
		    "710431": "太平区",
		    "710432": "大里区",
		    "710433": "雾峰区",
		    "710434": "乌日区",
		    "710435": "丰原区",
		    "710436": "后里区",
		    "710437": "石冈区",
		    "710438": "东势区",
		    "710439": "和平区",
		    "710440": "新社区",
		    "710441": "潭子区",
		    "710442": "大雅区",
		    "710443": "神冈区",
		    "710444": "大肚区",
		    "710445": "沙鹿区",
		    "710446": "龙井区",
		    "710447": "梧栖区",
		    "710448": "清水区",
		    "710449": "大甲区",
		    "710450": "外埔区",
		    "710451": "大安区",
		    "710500": "金门县",
		    "710507": "金沙镇",
		    "710508": "金湖镇",
		    "710509": "金宁乡",
		    "710510": "金城镇",
		    "710511": "烈屿乡",
		    "710512": "乌坵乡",
		    "710600": "南投县",
		    "710614": "南投市",
		    "710615": "中寮乡",
		    "710616": "草屯镇",
		    "710617": "国姓乡",
		    "710618": "埔里镇",
		    "710619": "仁爱乡",
		    "710620": "名间乡",
		    "710621": "集集镇",
		    "710622": "水里乡",
		    "710623": "鱼池乡",
		    "710624": "信义乡",
		    "710625": "竹山镇",
		    "710626": "鹿谷乡",
		    "710700": "基隆市",
		    "710701": "仁爱区",
		    "710702": "信义区",
		    "710703": "中正区",
		    "710704": "中山区",
		    "710705": "安乐区",
		    "710706": "暖暖区",
		    "710707": "七堵区",
		    "710708": "其它区",
		    "710800": "新竹市",
		    "710801": "东区",
		    "710802": "北区",
		    "710803": "香山区",
		    "710804": "其它区",
		    "710900": "嘉义市",
		    "710901": "东区",
		    "710902": "西区",
		    "710903": "其它区",
		    "711100": "新北市",
		    "711130": "万里区",
		    "711131": "金山区",
		    "711132": "板桥区",
		    "711133": "汐止区",
		    "711134": "深坑区",
		    "711135": "石碇区",
		    "711136": "瑞芳区",
		    "711137": "平溪区",
		    "711138": "双溪区",
		    "711139": "贡寮区",
		    "711140": "新店区",
		    "711141": "坪林区",
		    "711142": "乌来区",
		    "711143": "永和区",
		    "711144": "中和区",
		    "711145": "土城区",
		    "711146": "三峡区",
		    "711147": "树林区",
		    "711148": "莺歌区",
		    "711149": "三重区",
		    "711150": "新庄区",
		    "711151": "泰山区",
		    "711152": "林口区",
		    "711153": "芦洲区",
		    "711154": "五股区",
		    "711155": "八里区",
		    "711156": "淡水区",
		    "711157": "三芝区",
		    "711158": "石门区",
		    "711200": "宜兰县",
		    "711214": "宜兰市",
		    "711215": "头城镇",
		    "711216": "礁溪乡",
		    "711217": "壮围乡",
		    "711218": "员山乡",
		    "711219": "罗东镇",
		    "711220": "三星乡",
		    "711221": "大同乡",
		    "711222": "五结乡",
		    "711223": "冬山乡",
		    "711224": "苏澳镇",
		    "711225": "南澳乡",
		    "711226": "钓鱼台",
		    "711300": "新竹县",
		    "711314": "竹北市",
		    "711315": "湖口乡",
		    "711316": "新丰乡",
		    "711317": "新埔镇",
		    "711318": "关西镇",
		    "711319": "芎林乡",
		    "711320": "宝山乡",
		    "711321": "竹东镇",
		    "711322": "五峰乡",
		    "711323": "横山乡",
		    "711324": "尖石乡",
		    "711325": "北埔乡",
		    "711326": "峨眉乡",
		    "711400": "桃园县",
		    "711414": "中坜市",
		    "711415": "平镇市",
		    "711416": "龙潭乡",
		    "711417": "杨梅市",
		    "711418": "新屋乡",
		    "711419": "观音乡",
		    "711420": "桃园市",
		    "711421": "龟山乡",
		    "711422": "八德市",
		    "711423": "大溪镇",
		    "711424": "复兴乡",
		    "711425": "大园乡",
		    "711426": "芦竹乡",
		    "711500": "苗栗县",
		    "711519": "竹南镇",
		    "711520": "头份镇",
		    "711521": "三湾乡",
		    "711522": "南庄乡",
		    "711523": "狮潭乡",
		    "711524": "后龙镇",
		    "711525": "通霄镇",
		    "711526": "苑里镇",
		    "711527": "苗栗市",
		    "711528": "造桥乡",
		    "711529": "头屋乡",
		    "711530": "公馆乡",
		    "711531": "大湖乡",
		    "711532": "泰安乡",
		    "711533": "铜锣乡",
		    "711534": "三义乡",
		    "711535": "西湖乡",
		    "711536": "卓兰镇",
		    "711700": "彰化县",
		    "711727": "彰化市",
		    "711728": "芬园乡",
		    "711729": "花坛乡",
		    "711730": "秀水乡",
		    "711731": "鹿港镇",
		    "711732": "福兴乡",
		    "711733": "线西乡",
		    "711734": "和美镇",
		    "711735": "伸港乡",
		    "711736": "员林镇",
		    "711737": "社头乡",
		    "711738": "永靖乡",
		    "711739": "埔心乡",
		    "711740": "溪湖镇",
		    "711741": "大村乡",
		    "711742": "埔盐乡",
		    "711743": "田中镇",
		    "711744": "北斗镇",
		    "711745": "田尾乡",
		    "711746": "埤头乡",
		    "711747": "溪州乡",
		    "711748": "竹塘乡",
		    "711749": "二林镇",
		    "711750": "大城乡",
		    "711751": "芳苑乡",
		    "711752": "二水乡",
		    "711900": "嘉义县",
		    "711919": "番路乡",
		    "711920": "梅山乡",
		    "711921": "竹崎乡",
		    "711922": "阿里山乡",
		    "711923": "中埔乡",
		    "711924": "大埔乡",
		    "711925": "水上乡",
		    "711926": "鹿草乡",
		    "711927": "太保市",
		    "711928": "朴子市",
		    "711929": "东石乡",
		    "711930": "六脚乡",
		    "711931": "新港乡",
		    "711932": "民雄乡",
		    "711933": "大林镇",
		    "711934": "溪口乡",
		    "711935": "义竹乡",
		    "711936": "布袋镇",
		    "712100": "云林县",
		    "712121": "斗南镇",
		    "712122": "大埤乡",
		    "712123": "虎尾镇",
		    "712124": "土库镇",
		    "712125": "褒忠乡",
		    "712126": "东势乡",
		    "712127": "台西乡",
		    "712128": "仑背乡",
		    "712129": "麦寮乡",
		    "712130": "斗六市",
		    "712131": "林内乡",
		    "712132": "古坑乡",
		    "712133": "莿桐乡",
		    "712134": "西螺镇",
		    "712135": "二仑乡",
		    "712136": "北港镇",
		    "712137": "水林乡",
		    "712138": "口湖乡",
		    "712139": "四湖乡",
		    "712140": "元长乡",
		    "712400": "屏东县",
		    "712434": "屏东市",
		    "712435": "三地门乡",
		    "712436": "雾台乡",
		    "712437": "玛家乡",
		    "712438": "九如乡",
		    "712439": "里港乡",
		    "712440": "高树乡",
		    "712441": "盐埔乡",
		    "712442": "长治乡",
		    "712443": "麟洛乡",
		    "712444": "竹田乡",
		    "712445": "内埔乡",
		    "712446": "万丹乡",
		    "712447": "潮州镇",
		    "712448": "泰武乡",
		    "712449": "来义乡",
		    "712450": "万峦乡",
		    "712451": "崁顶乡",
		    "712452": "新埤乡",
		    "712453": "南州乡",
		    "712454": "林边乡",
		    "712455": "东港镇",
		    "712456": "琉球乡",
		    "712457": "佳冬乡",
		    "712458": "新园乡",
		    "712459": "枋寮乡",
		    "712460": "枋山乡",
		    "712461": "春日乡",
		    "712462": "狮子乡",
		    "712463": "车城乡",
		    "712464": "牡丹乡",
		    "712465": "恒春镇",
		    "712466": "满州乡",
		    "712500": "台东县",
		    "712517": "台东市",
		    "712518": "绿岛乡",
		    "712519": "兰屿乡",
		    "712520": "延平乡",
		    "712521": "卑南乡",
		    "712522": "鹿野乡",
		    "712523": "关山镇",
		    "712524": "海端乡",
		    "712525": "池上乡",
		    "712526": "东河乡",
		    "712527": "成功镇",
		    "712528": "长滨乡",
		    "712529": "金峰乡",
		    "712530": "大武乡",
		    "712531": "达仁乡",
		    "712532": "太麻里乡",
		    "712600": "花莲县",
		    "712615": "花莲市",
		    "712616": "新城乡",
		    "712617": "太鲁阁",
		    "712618": "秀林乡",
		    "712619": "吉安乡",
		    "712620": "寿丰乡",
		    "712621": "凤林镇",
		    "712622": "光复乡",
		    "712623": "丰滨乡",
		    "712624": "瑞穗乡",
		    "712625": "万荣乡",
		    "712626": "玉里镇",
		    "712627": "卓溪乡",
		    "712628": "富里乡",
		    "712700": "澎湖县",
		    "712707": "马公市",
		    "712708": "西屿乡",
		    "712709": "望安乡",
		    "712710": "七美乡",
		    "712711": "白沙乡",
		    "712712": "湖西乡",
		    "712800": "连江县",
		    "712805": "南竿乡",
		    "712806": "北竿乡",
		    "712807": "莒光乡",
		    "712808": "东引乡",
		    "810000": "香港特别行政区",
		    "810100": "香港岛",
		    "810101": "中西区",
		    "810102": "湾仔",
		    "810103": "东区",
		    "810104": "南区",
		    "810200": "九龙",
		    "810201": "九龙城区",
		    "810202": "油尖旺区",
		    "810203": "深水埗区",
		    "810204": "黄大仙区",
		    "810205": "观塘区",
		    "810300": "新界",
		    "810301": "北区",
		    "810302": "大埔区",
		    "810303": "沙田区",
		    "810304": "西贡区",
		    "810305": "元朗区",
		    "810306": "屯门区",
		    "810307": "荃湾区",
		    "810308": "葵青区",
		    "810309": "离岛区",
		    "820000": "澳门特别行政区",
		    "820100": "澳门半岛",
		    "820200": "离岛",
		    "990000": "海外",
		    "990100": "海外"
		}
	
		// id pid/parentId name children
		function tree(list) {
		    var mapped = {}
		    for (var i = 0, item; i < list.length; i++) {
		        item = list[i]
		        if (!item || !item.id) continue
		        mapped[item.id] = item
		    }
	
		    var result = []
		    for (var ii = 0; ii < list.length; ii++) {
		        item = list[ii]
	
		        if (!item) continue
		            /* jshint -W041 */
		        if (item.pid == undefined && item.parentId == undefined) {
		            result.push(item)
		            continue
		        }
		        var parent = mapped[item.pid] || mapped[item.parentId]
		        if (!parent) continue
		        if (!parent.children) parent.children = []
		        parent.children.push(item)
		    }
		    return result
		}
	
		var DICT_FIXED = function() {
		    var fixed = []
		    for (var id in DICT) {
		        var pid = id.slice(2, 6) === '0000' ? undefined :
		            id.slice(4, 6) == '00' ? (id.slice(0, 2) + '0000') :
		            id.slice(0, 4) + '00'
		        fixed.push({
		            id: id,
		            pid: pid,
		            name: DICT[id]
		        })
		    }
		    return tree(fixed)
		}()
	
		module.exports = DICT_FIXED
	
	/***/ },
	/* 19 */
	/***/ function(module, exports, __webpack_require__) {
	
		/*
		    ## Miscellaneous
		*/
		var DICT = __webpack_require__(18)
		module.exports = {
			// Dice
			d4: function() {
				return this.natural(1, 4)
			},
			d6: function() {
				return this.natural(1, 6)
			},
			d8: function() {
				return this.natural(1, 8)
			},
			d12: function() {
				return this.natural(1, 12)
			},
			d20: function() {
				return this.natural(1, 20)
			},
			d100: function() {
				return this.natural(1, 100)
			},
			/*
			    随机生成一个 GUID。
	
			    http://www.broofa.com/2008/09/javascript-uuid-function/
			    [UUID 规范](http://www.ietf.org/rfc/rfc4122.txt)
			        UUIDs (Universally Unique IDentifier)
			        GUIDs (Globally Unique IDentifier)
			        The formal definition of the UUID string representation is provided by the following ABNF [7]:
			            UUID                   = time-low "-" time-mid "-"
			                                   time-high-and-version "-"
			                                   clock-seq-and-reserved
			                                   clock-seq-low "-" node
			            time-low               = 4hexOctet
			            time-mid               = 2hexOctet
			            time-high-and-version  = 2hexOctet
			            clock-seq-and-reserved = hexOctet
			            clock-seq-low          = hexOctet
			            node                   = 6hexOctet
			            hexOctet               = hexDigit hexDigit
			            hexDigit =
			                "0" / "1" / "2" / "3" / "4" / "5" / "6" / "7" / "8" / "9" /
			                "a" / "b" / "c" / "d" / "e" / "f" /
			                "A" / "B" / "C" / "D" / "E" / "F"
			    
			    https://github.com/victorquinn/chancejs/blob/develop/chance.js#L1349
			*/
			guid: function() {
				var pool = "abcdefABCDEF1234567890",
					guid = this.string(pool, 8) + '-' +
					this.string(pool, 4) + '-' +
					this.string(pool, 4) + '-' +
					this.string(pool, 4) + '-' +
					this.string(pool, 12);
				return guid
			},
			uuid: function() {
				return this.guid()
			},
			/*
			    随机生成一个 18 位身份证。
	
			    [身份证](http://baike.baidu.com/view/1697.htm#4)
			        地址码 6 + 出生日期码 8 + 顺序码 3 + 校验码 1
			    [《中华人民共和国行政区划代码》国家标准(GB/T2260)](http://zhidao.baidu.com/question/1954561.html)
			*/
			id: function() {
				var id,
					sum = 0,
					rank = [
						"7", "9", "10", "5", "8", "4", "2", "1", "6", "3", "7", "9", "10", "5", "8", "4", "2"
					],
					last = [
						"1", "0", "X", "9", "8", "7", "6", "5", "4", "3", "2"
					]
	
				id = this.pick(DICT).id +
					this.date('yyyyMMdd') +
					this.string('number', 3)
	
				for (var i = 0; i < id.length; i++) {
					sum += id[i] * rank[i];
				}
				id += last[sum % 11];
	
				return id
			},
	
			/*
			    生成一个全局的自增整数。
			    类似自增主键（auto increment primary key）。
			*/
			increment: function() {
				var key = 0
				return function(step) {
					return key += (+step || 1) // step?
				}
			}(),
			inc: function(step) {
				return this.increment(step)
			}
		}
	
	/***/ },
	/* 20 */
	/***/ function(module, exports, __webpack_require__) {
	
		var Parser = __webpack_require__(21)
		var Handler = __webpack_require__(22)
		module.exports = {
			Parser: Parser,
			Handler: Handler
		}
	
	/***/ },
	/* 21 */
	/***/ function(module, exports) {
	
		// https://github.com/nuysoft/regexp
		// forked from https://github.com/ForbesLindesay/regexp
	
		function parse(n) {
		    if ("string" != typeof n) {
		        var l = new TypeError("The regexp to parse must be represented as a string.");
		        throw l;
		    }
		    return index = 1, cgs = {}, parser.parse(n);
		}
	
		function Token(n) {
		    this.type = n, this.offset = Token.offset(), this.text = Token.text();
		}
	
		function Alternate(n, l) {
		    Token.call(this, "alternate"), this.left = n, this.right = l;
		}
	
		function Match(n) {
		    Token.call(this, "match"), this.body = n.filter(Boolean);
		}
	
		function Group(n, l) {
		    Token.call(this, n), this.body = l;
		}
	
		function CaptureGroup(n) {
		    Group.call(this, "capture-group"), this.index = cgs[this.offset] || (cgs[this.offset] = index++), 
		    this.body = n;
		}
	
		function Quantified(n, l) {
		    Token.call(this, "quantified"), this.body = n, this.quantifier = l;
		}
	
		function Quantifier(n, l) {
		    Token.call(this, "quantifier"), this.min = n, this.max = l, this.greedy = !0;
		}
	
		function CharSet(n, l) {
		    Token.call(this, "charset"), this.invert = n, this.body = l;
		}
	
		function CharacterRange(n, l) {
		    Token.call(this, "range"), this.start = n, this.end = l;
		}
	
		function Literal(n) {
		    Token.call(this, "literal"), this.body = n, this.escaped = this.body != this.text;
		}
	
		function Unicode(n) {
		    Token.call(this, "unicode"), this.code = n.toUpperCase();
		}
	
		function Hex(n) {
		    Token.call(this, "hex"), this.code = n.toUpperCase();
		}
	
		function Octal(n) {
		    Token.call(this, "octal"), this.code = n.toUpperCase();
		}
	
		function BackReference(n) {
		    Token.call(this, "back-reference"), this.code = n.toUpperCase();
		}
	
		function ControlCharacter(n) {
		    Token.call(this, "control-character"), this.code = n.toUpperCase();
		}
	
		var parser = function() {
		    function n(n, l) {
		        function u() {
		            this.constructor = n;
		        }
		        u.prototype = l.prototype, n.prototype = new u();
		    }
		    function l(n, l, u, t, r) {
		        function e(n, l) {
		            function u(n) {
		                function l(n) {
		                    return n.charCodeAt(0).toString(16).toUpperCase();
		                }
		                return n.replace(/\\/g, "\\\\").replace(/"/g, '\\"').replace(/\x08/g, "\\b").replace(/\t/g, "\\t").replace(/\n/g, "\\n").replace(/\f/g, "\\f").replace(/\r/g, "\\r").replace(/[\x00-\x07\x0B\x0E\x0F]/g, function(n) {
		                    return "\\x0" + l(n);
		                }).replace(/[\x10-\x1F\x80-\xFF]/g, function(n) {
		                    return "\\x" + l(n);
		                }).replace(/[\u0180-\u0FFF]/g, function(n) {
		                    return "\\u0" + l(n);
		                }).replace(/[\u1080-\uFFFF]/g, function(n) {
		                    return "\\u" + l(n);
		                });
		            }
		            var t, r;
		            switch (n.length) {
		              case 0:
		                t = "end of input";
		                break;
	
		              case 1:
		                t = n[0];
		                break;
	
		              default:
		                t = n.slice(0, -1).join(", ") + " or " + n[n.length - 1];
		            }
		            return r = l ? '"' + u(l) + '"' : "end of input", "Expected " + t + " but " + r + " found.";
		        }
		        this.expected = n, this.found = l, this.offset = u, this.line = t, this.column = r, 
		        this.name = "SyntaxError", this.message = e(n, l);
		    }
		    function u(n) {
		        function u() {
		            return n.substring(Lt, qt);
		        }
		        function t() {
		            return Lt;
		        }
		        function r(l) {
		            function u(l, u, t) {
		                var r, e;
		                for (r = u; t > r; r++) e = n.charAt(r), "\n" === e ? (l.seenCR || l.line++, l.column = 1, 
		                l.seenCR = !1) : "\r" === e || "\u2028" === e || "\u2029" === e ? (l.line++, l.column = 1, 
		                l.seenCR = !0) : (l.column++, l.seenCR = !1);
		            }
		            return Mt !== l && (Mt > l && (Mt = 0, Dt = {
		                line: 1,
		                column: 1,
		                seenCR: !1
		            }), u(Dt, Mt, l), Mt = l), Dt;
		        }
		        function e(n) {
		            Ht > qt || (qt > Ht && (Ht = qt, Ot = []), Ot.push(n));
		        }
		        function o(n) {
		            var l = 0;
		            for (n.sort(); l < n.length; ) n[l - 1] === n[l] ? n.splice(l, 1) : l++;
		        }
		        function c() {
		            var l, u, t, r, o;
		            return l = qt, u = i(), null !== u ? (t = qt, 124 === n.charCodeAt(qt) ? (r = fl, 
		            qt++) : (r = null, 0 === Wt && e(sl)), null !== r ? (o = c(), null !== o ? (r = [ r, o ], 
		            t = r) : (qt = t, t = il)) : (qt = t, t = il), null === t && (t = al), null !== t ? (Lt = l, 
		            u = hl(u, t), null === u ? (qt = l, l = u) : l = u) : (qt = l, l = il)) : (qt = l, 
		            l = il), l;
		        }
		        function i() {
		            var n, l, u, t, r;
		            if (n = qt, l = f(), null === l && (l = al), null !== l) if (u = qt, Wt++, t = d(), 
		            Wt--, null === t ? u = al : (qt = u, u = il), null !== u) {
		                for (t = [], r = h(), null === r && (r = a()); null !== r; ) t.push(r), r = h(), 
		                null === r && (r = a());
		                null !== t ? (r = s(), null === r && (r = al), null !== r ? (Lt = n, l = dl(l, t, r), 
		                null === l ? (qt = n, n = l) : n = l) : (qt = n, n = il)) : (qt = n, n = il);
		            } else qt = n, n = il; else qt = n, n = il;
		            return n;
		        }
		        function a() {
		            var n;
		            return n = x(), null === n && (n = Q(), null === n && (n = B())), n;
		        }
		        function f() {
		            var l, u;
		            return l = qt, 94 === n.charCodeAt(qt) ? (u = pl, qt++) : (u = null, 0 === Wt && e(vl)), 
		            null !== u && (Lt = l, u = wl()), null === u ? (qt = l, l = u) : l = u, l;
		        }
		        function s() {
		            var l, u;
		            return l = qt, 36 === n.charCodeAt(qt) ? (u = Al, qt++) : (u = null, 0 === Wt && e(Cl)), 
		            null !== u && (Lt = l, u = gl()), null === u ? (qt = l, l = u) : l = u, l;
		        }
		        function h() {
		            var n, l, u;
		            return n = qt, l = a(), null !== l ? (u = d(), null !== u ? (Lt = n, l = bl(l, u), 
		            null === l ? (qt = n, n = l) : n = l) : (qt = n, n = il)) : (qt = n, n = il), n;
		        }
		        function d() {
		            var n, l, u;
		            return Wt++, n = qt, l = p(), null !== l ? (u = k(), null === u && (u = al), null !== u ? (Lt = n, 
		            l = Tl(l, u), null === l ? (qt = n, n = l) : n = l) : (qt = n, n = il)) : (qt = n, 
		            n = il), Wt--, null === n && (l = null, 0 === Wt && e(kl)), n;
		        }
		        function p() {
		            var n;
		            return n = v(), null === n && (n = w(), null === n && (n = A(), null === n && (n = C(), 
		            null === n && (n = g(), null === n && (n = b()))))), n;
		        }
		        function v() {
		            var l, u, t, r, o, c;
		            return l = qt, 123 === n.charCodeAt(qt) ? (u = xl, qt++) : (u = null, 0 === Wt && e(yl)), 
		            null !== u ? (t = T(), null !== t ? (44 === n.charCodeAt(qt) ? (r = ml, qt++) : (r = null, 
		            0 === Wt && e(Rl)), null !== r ? (o = T(), null !== o ? (125 === n.charCodeAt(qt) ? (c = Fl, 
		            qt++) : (c = null, 0 === Wt && e(Ql)), null !== c ? (Lt = l, u = Sl(t, o), null === u ? (qt = l, 
		            l = u) : l = u) : (qt = l, l = il)) : (qt = l, l = il)) : (qt = l, l = il)) : (qt = l, 
		            l = il)) : (qt = l, l = il), l;
		        }
		        function w() {
		            var l, u, t, r;
		            return l = qt, 123 === n.charCodeAt(qt) ? (u = xl, qt++) : (u = null, 0 === Wt && e(yl)), 
		            null !== u ? (t = T(), null !== t ? (n.substr(qt, 2) === Ul ? (r = Ul, qt += 2) : (r = null, 
		            0 === Wt && e(El)), null !== r ? (Lt = l, u = Gl(t), null === u ? (qt = l, l = u) : l = u) : (qt = l, 
		            l = il)) : (qt = l, l = il)) : (qt = l, l = il), l;
		        }
		        function A() {
		            var l, u, t, r;
		            return l = qt, 123 === n.charCodeAt(qt) ? (u = xl, qt++) : (u = null, 0 === Wt && e(yl)), 
		            null !== u ? (t = T(), null !== t ? (125 === n.charCodeAt(qt) ? (r = Fl, qt++) : (r = null, 
		            0 === Wt && e(Ql)), null !== r ? (Lt = l, u = Bl(t), null === u ? (qt = l, l = u) : l = u) : (qt = l, 
		            l = il)) : (qt = l, l = il)) : (qt = l, l = il), l;
		        }
		        function C() {
		            var l, u;
		            return l = qt, 43 === n.charCodeAt(qt) ? (u = jl, qt++) : (u = null, 0 === Wt && e($l)), 
		            null !== u && (Lt = l, u = ql()), null === u ? (qt = l, l = u) : l = u, l;
		        }
		        function g() {
		            var l, u;
		            return l = qt, 42 === n.charCodeAt(qt) ? (u = Ll, qt++) : (u = null, 0 === Wt && e(Ml)), 
		            null !== u && (Lt = l, u = Dl()), null === u ? (qt = l, l = u) : l = u, l;
		        }
		        function b() {
		            var l, u;
		            return l = qt, 63 === n.charCodeAt(qt) ? (u = Hl, qt++) : (u = null, 0 === Wt && e(Ol)), 
		            null !== u && (Lt = l, u = Wl()), null === u ? (qt = l, l = u) : l = u, l;
		        }
		        function k() {
		            var l;
		            return 63 === n.charCodeAt(qt) ? (l = Hl, qt++) : (l = null, 0 === Wt && e(Ol)), 
		            l;
		        }
		        function T() {
		            var l, u, t;
		            if (l = qt, u = [], zl.test(n.charAt(qt)) ? (t = n.charAt(qt), qt++) : (t = null, 
		            0 === Wt && e(Il)), null !== t) for (;null !== t; ) u.push(t), zl.test(n.charAt(qt)) ? (t = n.charAt(qt), 
		            qt++) : (t = null, 0 === Wt && e(Il)); else u = il;
		            return null !== u && (Lt = l, u = Jl(u)), null === u ? (qt = l, l = u) : l = u, 
		            l;
		        }
		        function x() {
		            var l, u, t, r;
		            return l = qt, 40 === n.charCodeAt(qt) ? (u = Kl, qt++) : (u = null, 0 === Wt && e(Nl)), 
		            null !== u ? (t = R(), null === t && (t = F(), null === t && (t = m(), null === t && (t = y()))), 
		            null !== t ? (41 === n.charCodeAt(qt) ? (r = Pl, qt++) : (r = null, 0 === Wt && e(Vl)), 
		            null !== r ? (Lt = l, u = Xl(t), null === u ? (qt = l, l = u) : l = u) : (qt = l, 
		            l = il)) : (qt = l, l = il)) : (qt = l, l = il), l;
		        }
		        function y() {
		            var n, l;
		            return n = qt, l = c(), null !== l && (Lt = n, l = Yl(l)), null === l ? (qt = n, 
		            n = l) : n = l, n;
		        }
		        function m() {
		            var l, u, t;
		            return l = qt, n.substr(qt, 2) === Zl ? (u = Zl, qt += 2) : (u = null, 0 === Wt && e(_l)), 
		            null !== u ? (t = c(), null !== t ? (Lt = l, u = nu(t), null === u ? (qt = l, l = u) : l = u) : (qt = l, 
		            l = il)) : (qt = l, l = il), l;
		        }
		        function R() {
		            var l, u, t;
		            return l = qt, n.substr(qt, 2) === lu ? (u = lu, qt += 2) : (u = null, 0 === Wt && e(uu)), 
		            null !== u ? (t = c(), null !== t ? (Lt = l, u = tu(t), null === u ? (qt = l, l = u) : l = u) : (qt = l, 
		            l = il)) : (qt = l, l = il), l;
		        }
		        function F() {
		            var l, u, t;
		            return l = qt, n.substr(qt, 2) === ru ? (u = ru, qt += 2) : (u = null, 0 === Wt && e(eu)), 
		            null !== u ? (t = c(), null !== t ? (Lt = l, u = ou(t), null === u ? (qt = l, l = u) : l = u) : (qt = l, 
		            l = il)) : (qt = l, l = il), l;
		        }
		        function Q() {
		            var l, u, t, r, o;
		            if (Wt++, l = qt, 91 === n.charCodeAt(qt) ? (u = iu, qt++) : (u = null, 0 === Wt && e(au)), 
		            null !== u) if (94 === n.charCodeAt(qt) ? (t = pl, qt++) : (t = null, 0 === Wt && e(vl)), 
		            null === t && (t = al), null !== t) {
		                for (r = [], o = S(), null === o && (o = U()); null !== o; ) r.push(o), o = S(), 
		                null === o && (o = U());
		                null !== r ? (93 === n.charCodeAt(qt) ? (o = fu, qt++) : (o = null, 0 === Wt && e(su)), 
		                null !== o ? (Lt = l, u = hu(t, r), null === u ? (qt = l, l = u) : l = u) : (qt = l, 
		                l = il)) : (qt = l, l = il);
		            } else qt = l, l = il; else qt = l, l = il;
		            return Wt--, null === l && (u = null, 0 === Wt && e(cu)), l;
		        }
		        function S() {
		            var l, u, t, r;
		            return Wt++, l = qt, u = U(), null !== u ? (45 === n.charCodeAt(qt) ? (t = pu, qt++) : (t = null, 
		            0 === Wt && e(vu)), null !== t ? (r = U(), null !== r ? (Lt = l, u = wu(u, r), null === u ? (qt = l, 
		            l = u) : l = u) : (qt = l, l = il)) : (qt = l, l = il)) : (qt = l, l = il), Wt--, 
		            null === l && (u = null, 0 === Wt && e(du)), l;
		        }
		        function U() {
		            var n, l;
		            return Wt++, n = G(), null === n && (n = E()), Wt--, null === n && (l = null, 0 === Wt && e(Au)), 
		            n;
		        }
		        function E() {
		            var l, u;
		            return l = qt, Cu.test(n.charAt(qt)) ? (u = n.charAt(qt), qt++) : (u = null, 0 === Wt && e(gu)), 
		            null !== u && (Lt = l, u = bu(u)), null === u ? (qt = l, l = u) : l = u, l;
		        }
		        function G() {
		            var n;
		            return n = L(), null === n && (n = Y(), null === n && (n = H(), null === n && (n = O(), 
		            null === n && (n = W(), null === n && (n = z(), null === n && (n = I(), null === n && (n = J(), 
		            null === n && (n = K(), null === n && (n = N(), null === n && (n = P(), null === n && (n = V(), 
		            null === n && (n = X(), null === n && (n = _(), null === n && (n = nl(), null === n && (n = ll(), 
		            null === n && (n = ul(), null === n && (n = tl()))))))))))))))))), n;
		        }
		        function B() {
		            var n;
		            return n = j(), null === n && (n = q(), null === n && (n = $())), n;
		        }
		        function j() {
		            var l, u;
		            return l = qt, 46 === n.charCodeAt(qt) ? (u = ku, qt++) : (u = null, 0 === Wt && e(Tu)), 
		            null !== u && (Lt = l, u = xu()), null === u ? (qt = l, l = u) : l = u, l;
		        }
		        function $() {
		            var l, u;
		            return Wt++, l = qt, mu.test(n.charAt(qt)) ? (u = n.charAt(qt), qt++) : (u = null, 
		            0 === Wt && e(Ru)), null !== u && (Lt = l, u = bu(u)), null === u ? (qt = l, l = u) : l = u, 
		            Wt--, null === l && (u = null, 0 === Wt && e(yu)), l;
		        }
		        function q() {
		            var n;
		            return n = M(), null === n && (n = D(), null === n && (n = Y(), null === n && (n = H(), 
		            null === n && (n = O(), null === n && (n = W(), null === n && (n = z(), null === n && (n = I(), 
		            null === n && (n = J(), null === n && (n = K(), null === n && (n = N(), null === n && (n = P(), 
		            null === n && (n = V(), null === n && (n = X(), null === n && (n = Z(), null === n && (n = _(), 
		            null === n && (n = nl(), null === n && (n = ll(), null === n && (n = ul(), null === n && (n = tl()))))))))))))))))))), 
		            n;
		        }
		        function L() {
		            var l, u;
		            return l = qt, n.substr(qt, 2) === Fu ? (u = Fu, qt += 2) : (u = null, 0 === Wt && e(Qu)), 
		            null !== u && (Lt = l, u = Su()), null === u ? (qt = l, l = u) : l = u, l;
		        }
		        function M() {
		            var l, u;
		            return l = qt, n.substr(qt, 2) === Fu ? (u = Fu, qt += 2) : (u = null, 0 === Wt && e(Qu)), 
		            null !== u && (Lt = l, u = Uu()), null === u ? (qt = l, l = u) : l = u, l;
		        }
		        function D() {
		            var l, u;
		            return l = qt, n.substr(qt, 2) === Eu ? (u = Eu, qt += 2) : (u = null, 0 === Wt && e(Gu)), 
		            null !== u && (Lt = l, u = Bu()), null === u ? (qt = l, l = u) : l = u, l;
		        }
		        function H() {
		            var l, u;
		            return l = qt, n.substr(qt, 2) === ju ? (u = ju, qt += 2) : (u = null, 0 === Wt && e($u)), 
		            null !== u && (Lt = l, u = qu()), null === u ? (qt = l, l = u) : l = u, l;
		        }
		        function O() {
		            var l, u;
		            return l = qt, n.substr(qt, 2) === Lu ? (u = Lu, qt += 2) : (u = null, 0 === Wt && e(Mu)), 
		            null !== u && (Lt = l, u = Du()), null === u ? (qt = l, l = u) : l = u, l;
		        }
		        function W() {
		            var l, u;
		            return l = qt, n.substr(qt, 2) === Hu ? (u = Hu, qt += 2) : (u = null, 0 === Wt && e(Ou)), 
		            null !== u && (Lt = l, u = Wu()), null === u ? (qt = l, l = u) : l = u, l;
		        }
		        function z() {
		            var l, u;
		            return l = qt, n.substr(qt, 2) === zu ? (u = zu, qt += 2) : (u = null, 0 === Wt && e(Iu)), 
		            null !== u && (Lt = l, u = Ju()), null === u ? (qt = l, l = u) : l = u, l;
		        }
		        function I() {
		            var l, u;
		            return l = qt, n.substr(qt, 2) === Ku ? (u = Ku, qt += 2) : (u = null, 0 === Wt && e(Nu)), 
		            null !== u && (Lt = l, u = Pu()), null === u ? (qt = l, l = u) : l = u, l;
		        }
		        function J() {
		            var l, u;
		            return l = qt, n.substr(qt, 2) === Vu ? (u = Vu, qt += 2) : (u = null, 0 === Wt && e(Xu)), 
		            null !== u && (Lt = l, u = Yu()), null === u ? (qt = l, l = u) : l = u, l;
		        }
		        function K() {
		            var l, u;
		            return l = qt, n.substr(qt, 2) === Zu ? (u = Zu, qt += 2) : (u = null, 0 === Wt && e(_u)), 
		            null !== u && (Lt = l, u = nt()), null === u ? (qt = l, l = u) : l = u, l;
		        }
		        function N() {
		            var l, u;
		            return l = qt, n.substr(qt, 2) === lt ? (u = lt, qt += 2) : (u = null, 0 === Wt && e(ut)), 
		            null !== u && (Lt = l, u = tt()), null === u ? (qt = l, l = u) : l = u, l;
		        }
		        function P() {
		            var l, u;
		            return l = qt, n.substr(qt, 2) === rt ? (u = rt, qt += 2) : (u = null, 0 === Wt && e(et)), 
		            null !== u && (Lt = l, u = ot()), null === u ? (qt = l, l = u) : l = u, l;
		        }
		        function V() {
		            var l, u;
		            return l = qt, n.substr(qt, 2) === ct ? (u = ct, qt += 2) : (u = null, 0 === Wt && e(it)), 
		            null !== u && (Lt = l, u = at()), null === u ? (qt = l, l = u) : l = u, l;
		        }
		        function X() {
		            var l, u;
		            return l = qt, n.substr(qt, 2) === ft ? (u = ft, qt += 2) : (u = null, 0 === Wt && e(st)), 
		            null !== u && (Lt = l, u = ht()), null === u ? (qt = l, l = u) : l = u, l;
		        }
		        function Y() {
		            var l, u, t;
		            return l = qt, n.substr(qt, 2) === dt ? (u = dt, qt += 2) : (u = null, 0 === Wt && e(pt)), 
		            null !== u ? (n.length > qt ? (t = n.charAt(qt), qt++) : (t = null, 0 === Wt && e(vt)), 
		            null !== t ? (Lt = l, u = wt(t), null === u ? (qt = l, l = u) : l = u) : (qt = l, 
		            l = il)) : (qt = l, l = il), l;
		        }
		        function Z() {
		            var l, u, t;
		            return l = qt, 92 === n.charCodeAt(qt) ? (u = At, qt++) : (u = null, 0 === Wt && e(Ct)), 
		            null !== u ? (gt.test(n.charAt(qt)) ? (t = n.charAt(qt), qt++) : (t = null, 0 === Wt && e(bt)), 
		            null !== t ? (Lt = l, u = kt(t), null === u ? (qt = l, l = u) : l = u) : (qt = l, 
		            l = il)) : (qt = l, l = il), l;
		        }
		        function _() {
		            var l, u, t, r;
		            if (l = qt, n.substr(qt, 2) === Tt ? (u = Tt, qt += 2) : (u = null, 0 === Wt && e(xt)), 
		            null !== u) {
		                if (t = [], yt.test(n.charAt(qt)) ? (r = n.charAt(qt), qt++) : (r = null, 0 === Wt && e(mt)), 
		                null !== r) for (;null !== r; ) t.push(r), yt.test(n.charAt(qt)) ? (r = n.charAt(qt), 
		                qt++) : (r = null, 0 === Wt && e(mt)); else t = il;
		                null !== t ? (Lt = l, u = Rt(t), null === u ? (qt = l, l = u) : l = u) : (qt = l, 
		                l = il);
		            } else qt = l, l = il;
		            return l;
		        }
		        function nl() {
		            var l, u, t, r;
		            if (l = qt, n.substr(qt, 2) === Ft ? (u = Ft, qt += 2) : (u = null, 0 === Wt && e(Qt)), 
		            null !== u) {
		                if (t = [], St.test(n.charAt(qt)) ? (r = n.charAt(qt), qt++) : (r = null, 0 === Wt && e(Ut)), 
		                null !== r) for (;null !== r; ) t.push(r), St.test(n.charAt(qt)) ? (r = n.charAt(qt), 
		                qt++) : (r = null, 0 === Wt && e(Ut)); else t = il;
		                null !== t ? (Lt = l, u = Et(t), null === u ? (qt = l, l = u) : l = u) : (qt = l, 
		                l = il);
		            } else qt = l, l = il;
		            return l;
		        }
		        function ll() {
		            var l, u, t, r;
		            if (l = qt, n.substr(qt, 2) === Gt ? (u = Gt, qt += 2) : (u = null, 0 === Wt && e(Bt)), 
		            null !== u) {
		                if (t = [], St.test(n.charAt(qt)) ? (r = n.charAt(qt), qt++) : (r = null, 0 === Wt && e(Ut)), 
		                null !== r) for (;null !== r; ) t.push(r), St.test(n.charAt(qt)) ? (r = n.charAt(qt), 
		                qt++) : (r = null, 0 === Wt && e(Ut)); else t = il;
		                null !== t ? (Lt = l, u = jt(t), null === u ? (qt = l, l = u) : l = u) : (qt = l, 
		                l = il);
		            } else qt = l, l = il;
		            return l;
		        }
		        function ul() {
		            var l, u;
		            return l = qt, n.substr(qt, 2) === Tt ? (u = Tt, qt += 2) : (u = null, 0 === Wt && e(xt)), 
		            null !== u && (Lt = l, u = $t()), null === u ? (qt = l, l = u) : l = u, l;
		        }
		        function tl() {
		            var l, u, t;
		            return l = qt, 92 === n.charCodeAt(qt) ? (u = At, qt++) : (u = null, 0 === Wt && e(Ct)), 
		            null !== u ? (n.length > qt ? (t = n.charAt(qt), qt++) : (t = null, 0 === Wt && e(vt)), 
		            null !== t ? (Lt = l, u = bu(t), null === u ? (qt = l, l = u) : l = u) : (qt = l, 
		            l = il)) : (qt = l, l = il), l;
		        }
		        var rl, el = arguments.length > 1 ? arguments[1] : {}, ol = {
		            regexp: c
		        }, cl = c, il = null, al = "", fl = "|", sl = '"|"', hl = function(n, l) {
		            return l ? new Alternate(n, l[1]) : n;
		        }, dl = function(n, l, u) {
		            return new Match([ n ].concat(l).concat([ u ]));
		        }, pl = "^", vl = '"^"', wl = function() {
		            return new Token("start");
		        }, Al = "$", Cl = '"$"', gl = function() {
		            return new Token("end");
		        }, bl = function(n, l) {
		            return new Quantified(n, l);
		        }, kl = "Quantifier", Tl = function(n, l) {
		            return l && (n.greedy = !1), n;
		        }, xl = "{", yl = '"{"', ml = ",", Rl = '","', Fl = "}", Ql = '"}"', Sl = function(n, l) {
		            return new Quantifier(n, l);
		        }, Ul = ",}", El = '",}"', Gl = function(n) {
		            return new Quantifier(n, 1/0);
		        }, Bl = function(n) {
		            return new Quantifier(n, n);
		        }, jl = "+", $l = '"+"', ql = function() {
		            return new Quantifier(1, 1/0);
		        }, Ll = "*", Ml = '"*"', Dl = function() {
		            return new Quantifier(0, 1/0);
		        }, Hl = "?", Ol = '"?"', Wl = function() {
		            return new Quantifier(0, 1);
		        }, zl = /^[0-9]/, Il = "[0-9]", Jl = function(n) {
		            return +n.join("");
		        }, Kl = "(", Nl = '"("', Pl = ")", Vl = '")"', Xl = function(n) {
		            return n;
		        }, Yl = function(n) {
		            return new CaptureGroup(n);
		        }, Zl = "?:", _l = '"?:"', nu = function(n) {
		            return new Group("non-capture-group", n);
		        }, lu = "?=", uu = '"?="', tu = function(n) {
		            return new Group("positive-lookahead", n);
		        }, ru = "?!", eu = '"?!"', ou = function(n) {
		            return new Group("negative-lookahead", n);
		        }, cu = "CharacterSet", iu = "[", au = '"["', fu = "]", su = '"]"', hu = function(n, l) {
		            return new CharSet(!!n, l);
		        }, du = "CharacterRange", pu = "-", vu = '"-"', wu = function(n, l) {
		            return new CharacterRange(n, l);
		        }, Au = "Character", Cu = /^[^\\\]]/, gu = "[^\\\\\\]]", bu = function(n) {
		            return new Literal(n);
		        }, ku = ".", Tu = '"."', xu = function() {
		            return new Token("any-character");
		        }, yu = "Literal", mu = /^[^|\\\/.[()?+*$\^]/, Ru = "[^|\\\\\\/.[()?+*$\\^]", Fu = "\\b", Qu = '"\\\\b"', Su = function() {
		            return new Token("backspace");
		        }, Uu = function() {
		            return new Token("word-boundary");
		        }, Eu = "\\B", Gu = '"\\\\B"', Bu = function() {
		            return new Token("non-word-boundary");
		        }, ju = "\\d", $u = '"\\\\d"', qu = function() {
		            return new Token("digit");
		        }, Lu = "\\D", Mu = '"\\\\D"', Du = function() {
		            return new Token("non-digit");
		        }, Hu = "\\f", Ou = '"\\\\f"', Wu = function() {
		            return new Token("form-feed");
		        }, zu = "\\n", Iu = '"\\\\n"', Ju = function() {
		            return new Token("line-feed");
		        }, Ku = "\\r", Nu = '"\\\\r"', Pu = function() {
		            return new Token("carriage-return");
		        }, Vu = "\\s", Xu = '"\\\\s"', Yu = function() {
		            return new Token("white-space");
		        }, Zu = "\\S", _u = '"\\\\S"', nt = function() {
		            return new Token("non-white-space");
		        }, lt = "\\t", ut = '"\\\\t"', tt = function() {
		            return new Token("tab");
		        }, rt = "\\v", et = '"\\\\v"', ot = function() {
		            return new Token("vertical-tab");
		        }, ct = "\\w", it = '"\\\\w"', at = function() {
		            return new Token("word");
		        }, ft = "\\W", st = '"\\\\W"', ht = function() {
		            return new Token("non-word");
		        }, dt = "\\c", pt = '"\\\\c"', vt = "any character", wt = function(n) {
		            return new ControlCharacter(n);
		        }, At = "\\", Ct = '"\\\\"', gt = /^[1-9]/, bt = "[1-9]", kt = function(n) {
		            return new BackReference(n);
		        }, Tt = "\\0", xt = '"\\\\0"', yt = /^[0-7]/, mt = "[0-7]", Rt = function(n) {
		            return new Octal(n.join(""));
		        }, Ft = "\\x", Qt = '"\\\\x"', St = /^[0-9a-fA-F]/, Ut = "[0-9a-fA-F]", Et = function(n) {
		            return new Hex(n.join(""));
		        }, Gt = "\\u", Bt = '"\\\\u"', jt = function(n) {
		            return new Unicode(n.join(""));
		        }, $t = function() {
		            return new Token("null-character");
		        }, qt = 0, Lt = 0, Mt = 0, Dt = {
		            line: 1,
		            column: 1,
		            seenCR: !1
		        }, Ht = 0, Ot = [], Wt = 0;
		        if ("startRule" in el) {
		            if (!(el.startRule in ol)) throw new Error("Can't start parsing from rule \"" + el.startRule + '".');
		            cl = ol[el.startRule];
		        }
		        if (Token.offset = t, Token.text = u, rl = cl(), null !== rl && qt === n.length) return rl;
		        throw o(Ot), Lt = Math.max(qt, Ht), new l(Ot, Lt < n.length ? n.charAt(Lt) : null, Lt, r(Lt).line, r(Lt).column);
		    }
		    return n(l, Error), {
		        SyntaxError: l,
		        parse: u
		    };
		}(), index = 1, cgs = {};
	
		module.exports = parser
	
	/***/ },
	/* 22 */
	/***/ function(module, exports, __webpack_require__) {
	
		/*
		    ## RegExp Handler
	
		    https://github.com/ForbesLindesay/regexp
		    https://github.com/dmajda/pegjs
		    http://www.regexper.com/
	
		    每个节点的结构
		        {
		            type: '',
		            offset: number,
		            text: '',
		            body: {},
		            escaped: true/false
		        }
	
		    type 可选值
		        alternate             |         选择
		        match                 匹配
		        capture-group         ()        捕获组
		        non-capture-group     (?:...)   非捕获组
		        positive-lookahead    (?=p)     零宽正向先行断言
		        negative-lookahead    (?!p)     零宽负向先行断言
		        quantified            a*        重复节点
		        quantifier            *         量词
		        charset               []        字符集
		        range                 {m, n}    范围
		        literal               a         直接量字符
		        unicode               \uxxxx    Unicode
		        hex                   \x        十六进制
		        octal                 八进制
		        back-reference        \n        反向引用
		        control-character     \cX       控制字符
	
		        // Token
		        start               ^       开头
		        end                 $       结尾
		        any-character       .       任意字符
		        backspace           [\b]    退格直接量
		        word-boundary       \b      单词边界
		        non-word-boundary   \B      非单词边界
		        digit               \d      ASCII 数字，[0-9]
		        non-digit           \D      非 ASCII 数字，[^0-9]
		        form-feed           \f      换页符
		        line-feed           \n      换行符
		        carriage-return     \r      回车符
		        white-space         \s      空白符
		        non-white-space     \S      非空白符
		        tab                 \t      制表符
		        vertical-tab        \v      垂直制表符
		        word                \w      ASCII 字符，[a-zA-Z0-9]
		        non-word            \W      非 ASCII 字符，[^a-zA-Z0-9]
		        null-character      \o      NUL 字符
		 */
	
		var Util = __webpack_require__(3)
		var Random = __webpack_require__(5)
		    /*
		        
		    */
		var Handler = {
		    extend: Util.extend
		}
	
		// http://en.wikipedia.org/wiki/ASCII#ASCII_printable_code_chart
		/*var ASCII_CONTROL_CODE_CHART = {
		    '@': ['\u0000'],
		    A: ['\u0001'],
		    B: ['\u0002'],
		    C: ['\u0003'],
		    D: ['\u0004'],
		    E: ['\u0005'],
		    F: ['\u0006'],
		    G: ['\u0007', '\a'],
		    H: ['\u0008', '\b'],
		    I: ['\u0009', '\t'],
		    J: ['\u000A', '\n'],
		    K: ['\u000B', '\v'],
		    L: ['\u000C', '\f'],
		    M: ['\u000D', '\r'],
		    N: ['\u000E'],
		    O: ['\u000F'],
		    P: ['\u0010'],
		    Q: ['\u0011'],
		    R: ['\u0012'],
		    S: ['\u0013'],
		    T: ['\u0014'],
		    U: ['\u0015'],
		    V: ['\u0016'],
		    W: ['\u0017'],
		    X: ['\u0018'],
		    Y: ['\u0019'],
		    Z: ['\u001A'],
		    '[': ['\u001B', '\e'],
		    '\\': ['\u001C'],
		    ']': ['\u001D'],
		    '^': ['\u001E'],
		    '_': ['\u001F']
		}*/
	
		// ASCII printable code chart
		// var LOWER = 'abcdefghijklmnopqrstuvwxyz'
		// var UPPER = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
		// var NUMBER = '0123456789'
		// var SYMBOL = ' !"#$%&\'()*+,-./' + ':;<=>?@' + '[\\]^_`' + '{|}~'
		var LOWER = ascii(97, 122)
		var UPPER = ascii(65, 90)
		var NUMBER = ascii(48, 57)
		var OTHER = ascii(32, 47) + ascii(58, 64) + ascii(91, 96) + ascii(123, 126) // 排除 95 _ ascii(91, 94) + ascii(96, 96)
		var PRINTABLE = ascii(32, 126)
		var SPACE = ' \f\n\r\t\v\u00A0\u2028\u2029'
		var CHARACTER_CLASSES = {
		    '\\w': LOWER + UPPER + NUMBER + '_', // ascii(95, 95)
		    '\\W': OTHER.replace('_', ''),
		    '\\s': SPACE,
		    '\\S': function() {
		        var result = PRINTABLE
		        for (var i = 0; i < SPACE.length; i++) {
		            result = result.replace(SPACE[i], '')
		        }
		        return result
		    }(),
		    '\\d': NUMBER,
		    '\\D': LOWER + UPPER + OTHER
		}
	
		function ascii(from, to) {
		    var result = ''
		    for (var i = from; i <= to; i++) {
		        result += String.fromCharCode(i)
		    }
		    return result
		}
	
		// var ast = RegExpParser.parse(regexp.source)
		Handler.gen = function(node, result, cache) {
		    cache = cache || {
		        guid: 1
		    }
		    return Handler[node.type] ? Handler[node.type](node, result, cache) :
		        Handler.token(node, result, cache)
		}
	
		Handler.extend({
		    /* jshint unused:false */
		    token: function(node, result, cache) {
		        switch (node.type) {
		            case 'start':
		            case 'end':
		                return ''
		            case 'any-character':
		                return Random.character()
		            case 'backspace':
		                return ''
		            case 'word-boundary': // TODO
		                return ''
		            case 'non-word-boundary': // TODO
		                break
		            case 'digit':
		                return Random.pick(
		                    NUMBER.split('')
		                )
		            case 'non-digit':
		                return Random.pick(
		                    (LOWER + UPPER + OTHER).split('')
		                )
		            case 'form-feed':
		                break
		            case 'line-feed':
		                return node.body || node.text
		            case 'carriage-return':
		                break
		            case 'white-space':
		                return Random.pick(
		                    SPACE.split('')
		                )
		            case 'non-white-space':
		                return Random.pick(
		                    (LOWER + UPPER + NUMBER).split('')
		                )
		            case 'tab':
		                break
		            case 'vertical-tab':
		                break
		            case 'word': // \w [a-zA-Z0-9]
		                return Random.pick(
		                    (LOWER + UPPER + NUMBER).split('')
		                )
		            case 'non-word': // \W [^a-zA-Z0-9]
		                return Random.pick(
		                    OTHER.replace('_', '').split('')
		                )
		            case 'null-character':
		                break
		        }
		        return node.body || node.text
		    },
		    /*
		        {
		            type: 'alternate',
		            offset: 0,
		            text: '',
		            left: {
		                boyd: []
		            },
		            right: {
		                boyd: []
		            }
		        }
		    */
		    alternate: function(node, result, cache) {
		        // node.left/right {}
		        return this.gen(
		            Random.boolean() ? node.left : node.right,
		            result,
		            cache
		        )
		    },
		    /*
		        {
		            type: 'match',
		            offset: 0,
		            text: '',
		            body: []
		        }
		    */
		    match: function(node, result, cache) {
		        result = ''
		            // node.body []
		        for (var i = 0; i < node.body.length; i++) {
		            result += this.gen(node.body[i], result, cache)
		        }
		        return result
		    },
		    // ()
		    'capture-group': function(node, result, cache) {
		        // node.body {}
		        result = this.gen(node.body, result, cache)
		        cache[cache.guid++] = result
		        return result
		    },
		    // (?:...)
		    'non-capture-group': function(node, result, cache) {
		        // node.body {}
		        return this.gen(node.body, result, cache)
		    },
		    // (?=p)
		    'positive-lookahead': function(node, result, cache) {
		        // node.body
		        return this.gen(node.body, result, cache)
		    },
		    // (?!p)
		    'negative-lookahead': function(node, result, cache) {
		        // node.body
		        return ''
		    },
		    /*
		        {
		            type: 'quantified',
		            offset: 3,
		            text: 'c*',
		            body: {
		                type: 'literal',
		                offset: 3,
		                text: 'c',
		                body: 'c',
		                escaped: false
		            },
		            quantifier: {
		                type: 'quantifier',
		                offset: 4,
		                text: '*',
		                min: 0,
		                max: Infinity,
		                greedy: true
		            }
		        }
		    */
		    quantified: function(node, result, cache) {
		        result = ''
		            // node.quantifier {}
		        var count = this.quantifier(node.quantifier);
		        // node.body {}
		        for (var i = 0; i < count; i++) {
		            result += this.gen(node.body, result, cache)
		        }
		        return result
		    },
		    /*
		        quantifier: {
		            type: 'quantifier',
		            offset: 4,
		            text: '*',
		            min: 0,
		            max: Infinity,
		            greedy: true
		        }
		    */
		    quantifier: function(node, result, cache) {
		        var min = Math.max(node.min, 0)
		        var max = isFinite(node.max) ? node.max :
		            min + Random.integer(3, 7)
		        return Random.integer(min, max)
		    },
		    /*
		        
		    */
		    charset: function(node, result, cache) {
		        // node.invert
		        if (node.invert) return this['invert-charset'](node, result, cache)
	
		        // node.body []
		        var literal = Random.pick(node.body)
		        return this.gen(literal, result, cache)
		    },
		    'invert-charset': function(node, result, cache) {
		        var pool = PRINTABLE
		        for (var i = 0, item; i < node.body.length; i++) {
		            item = node.body[i]
		            switch (item.type) {
		                case 'literal':
		                    pool = pool.replace(item.body, '')
		                    break
		                case 'range':
		                    var min = this.gen(item.start, result, cache).charCodeAt()
		                    var max = this.gen(item.end, result, cache).charCodeAt()
		                    for (var ii = min; ii <= max; ii++) {
		                        pool = pool.replace(String.fromCharCode(ii), '')
		                    }
		                    /* falls through */
		                default:
		                    var characters = CHARACTER_CLASSES[item.text]
		                    if (characters) {
		                        for (var iii = 0; iii <= characters.length; iii++) {
		                            pool = pool.replace(characters[iii], '')
		                        }
		                    }
		            }
		        }
		        return Random.pick(pool.split(''))
		    },
		    range: function(node, result, cache) {
		        // node.start, node.end
		        var min = this.gen(node.start, result, cache).charCodeAt()
		        var max = this.gen(node.end, result, cache).charCodeAt()
		        return String.fromCharCode(
		            Random.integer(min, max)
		        )
		    },
		    literal: function(node, result, cache) {
		        return node.escaped ? node.body : node.text
		    },
		    // Unicode \u
		    unicode: function(node, result, cache) {
		        return String.fromCharCode(
		            parseInt(node.code, 16)
		        )
		    },
		    // 十六进制 \xFF
		    hex: function(node, result, cache) {
		        return String.fromCharCode(
		            parseInt(node.code, 16)
		        )
		    },
		    // 八进制 \0
		    octal: function(node, result, cache) {
		        return String.fromCharCode(
		            parseInt(node.code, 8)
		        )
		    },
		    // 反向引用
		    'back-reference': function(node, result, cache) {
		        return cache[node.code] || ''
		    },
		    /*
		        http://en.wikipedia.org/wiki/C0_and_C1_control_codes
		    */
		    CONTROL_CHARACTER_MAP: function() {
		        var CONTROL_CHARACTER = '@ A B C D E F G H I J K L M N O P Q R S T U V W X Y Z [ \\ ] ^ _'.split(' ')
		        var CONTROL_CHARACTER_UNICODE = '\u0000 \u0001 \u0002 \u0003 \u0004 \u0005 \u0006 \u0007 \u0008 \u0009 \u000A \u000B \u000C \u000D \u000E \u000F \u0010 \u0011 \u0012 \u0013 \u0014 \u0015 \u0016 \u0017 \u0018 \u0019 \u001A \u001B \u001C \u001D \u001E \u001F'.split(' ')
		        var map = {}
		        for (var i = 0; i < CONTROL_CHARACTER.length; i++) {
		            map[CONTROL_CHARACTER[i]] = CONTROL_CHARACTER_UNICODE[i]
		        }
		        return map
		    }(),
		    'control-character': function(node, result, cache) {
		        return this.CONTROL_CHARACTER_MAP[node.code]
		    }
		})
	
		module.exports = Handler
	
	/***/ },
	/* 23 */
	/***/ function(module, exports, __webpack_require__) {
	
		module.exports = __webpack_require__(24)
	
	/***/ },
	/* 24 */
	/***/ function(module, exports, __webpack_require__) {
	
		/*
		    ## toJSONSchema
	
		    把 Mock.js 风格的数据模板转换成 JSON Schema。
	
		    > [JSON Schema](http://json-schema.org/)
		 */
		var Constant = __webpack_require__(2)
		var Util = __webpack_require__(3)
		var Parser = __webpack_require__(4)
	
		function toJSONSchema(template, name, path /* Internal Use Only */ ) {
		    // type rule properties items
		    path = path || []
		    var result = {
		        name: typeof name === 'string' ? name.replace(Constant.RE_KEY, '$1') : name,
		        template: template,
		        type: Util.type(template), // 可能不准确，例如 { 'name|1': [{}, {} ...] }
		        rule: Parser.parse(name)
		    }
		    result.path = path.slice(0)
		    result.path.push(name === undefined ? 'ROOT' : result.name)
	
		    switch (result.type) {
		        case 'array':
		            result.items = []
		            Util.each(template, function(value, index) {
		                result.items.push(
		                    toJSONSchema(value, index, result.path)
		                )
		            })
		            break
		        case 'object':
		            result.properties = []
		            Util.each(template, function(value, name) {
		                result.properties.push(
		                    toJSONSchema(value, name, result.path)
		                )
		            })
		            break
		    }
	
		    return result
	
		}
	
		module.exports = toJSONSchema
	
	
	/***/ },
	/* 25 */
	/***/ function(module, exports, __webpack_require__) {
	
		module.exports = __webpack_require__(26)
	
	/***/ },
	/* 26 */
	/***/ function(module, exports, __webpack_require__) {
	
		/*
		    ## valid(template, data)
	
		    校验真实数据 data 是否与数据模板 template 匹配。
		    
		    实现思路：
		    1. 解析规则。
		        先把数据模板 template 解析为更方便机器解析的 JSON-Schame
		        name               属性名 
		        type               属性值类型
		        template           属性值模板
		        properties         对象属性数组
		        items              数组元素数组
		        rule               属性值生成规则
		    2. 递归验证规则。
		        然后用 JSON-Schema 校验真实数据，校验项包括属性名、值类型、值、值生成规则。
	
		    提示信息 
		    https://github.com/fge/json-schema-validator/blob/master/src/main/resources/com/github/fge/jsonschema/validator/validation.properties
		    [JSON-Schama validator](http://json-schema-validator.herokuapp.com/)
		    [Regexp Demo](http://demos.forbeslindesay.co.uk/regexp/)
		*/
		var Util = __webpack_require__(3)
		var toJSONSchema = __webpack_require__(23)
	
		function valid(template, data) {
		    var schema = toJSONSchema(template)
		    var result = Diff.diff(schema, data)
		    for (var i = 0; i < result.length; i++) {
		        // console.log(Assert.message(result[i]))
		    }
		    return result
		}
	
		/*
		    ## name
		        有生成规则：比较解析后的 name
		        无生成规则：直接比较
		    ## type
		        无类型转换：直接比较
		        有类型转换：先试着解析 template，然后再检查？
		    ## value vs. template
		        基本类型
		            无生成规则：直接比较
		            有生成规则：
		                number
		                    min-max.dmin-dmax
		                    min-max.dcount
		                    count.dmin-dmax
		                    count.dcount
		                    +step
		                    整数部分
		                    小数部分
		                boolean 
		                string  
		                    min-max
		                    count
		    ## properties
		        对象
		            有生成规则：检测期望的属性个数，继续递归
		            无生成规则：检测全部的属性个数，继续递归
		    ## items
		        数组
		            有生成规则：
		                `'name|1': [{}, {} ...]`            其中之一，继续递归
		                `'name|+1': [{}, {} ...]`           顺序检测，继续递归
		                `'name|min-max': [{}, {} ...]`      检测个数，继续递归
		                `'name|count': [{}, {} ...]`        检测个数，继续递归
		            无生成规则：检测全部的元素个数，继续递归
		*/
		var Diff = {
		    diff: function diff(schema, data, name /* Internal Use Only */ ) {
		        var result = []
	
		        // 先检测名称 name 和类型 type，如果匹配，才有必要继续检测
		        if (
		            this.name(schema, data, name, result) &&
		            this.type(schema, data, name, result)
		        ) {
		            this.value(schema, data, name, result)
		            this.properties(schema, data, name, result)
		            this.items(schema, data, name, result)
		        }
	
		        return result
		    },
		    /* jshint unused:false */
		    name: function(schema, data, name, result) {
		        var length = result.length
	
		        Assert.equal('name', schema.path, name + '', schema.name + '', result)
	
		        if (result.length !== length) return false
		        return true
		    },
		    type: function(schema, data, name, result) {
		        var length = result.length
	
		        Assert.equal('type', schema.path, Util.type(data), schema.type, result)
	
		        if (result.length !== length) return false
		        return true
		    },
		    value: function(schema, data, name, result) {
		        var length = result.length
	
		        var rule = schema.rule
		        var templateType = Util.type(schema.template)
		        if (templateType === 'object' || templateType === 'array') return
	
		        // 无生成规则
		        if (!schema.rule.parameters) {
		            Assert.equal('value', schema.path, data, schema.template, result)
		            return
		        }
	
		        // 有生成规则
		        switch (templateType) {
		            case 'number':
		                var parts = (data + '').split('.')
		                parts[0] = +parts[0]
	
		                // 整数部分
		                // |min-max
		                if (rule.min !== undefined && rule.max !== undefined) {
		                    Assert.greaterThanOrEqualTo('value', schema.path, parts[0], rule.min, result)
		                        // , 'numeric instance is lower than the required minimum (minimum: {expected}, found: {actual})')
		                    Assert.lessThanOrEqualTo('value', schema.path, parts[0], rule.max, result)
		                }
		                // |count
		                if (rule.min !== undefined && rule.max === undefined) {
		                    Assert.equal('value', schema.path, parts[0], rule.min, result, '[value] ' + name)
		                }
	
		                // 小数部分
		                if (rule.decimal) {
		                    // |dmin-dmax
		                    if (rule.dmin !== undefined && rule.dmax !== undefined) {
		                        Assert.greaterThanOrEqualTo('value', schema.path, parts[1].length, rule.dmin, result)
		                        Assert.lessThanOrEqualTo('value', schema.path, parts[1].length, rule.dmax, result)
		                    }
		                    // |dcount
		                    if (rule.dmin !== undefined && rule.dmax === undefined) {
		                        Assert.equal('value', schema.path, parts[1].length, rule.dmin, result)
		                    }
		                }
	
		                break
	
		            case 'boolean':
		                break
		            case 'string':
		                // 'aaa'.match(/a/g)
		                var actualRepeatCount = data.match(new RegExp(schema.template, 'g'))
		                actualRepeatCount = actualRepeatCount ? actualRepeatCount.length : actualRepeatCount
	
		                // |min-max
		                if (rule.min !== undefined && rule.max !== undefined) {
		                    Assert.greaterThanOrEqualTo('value', schema.path, actualRepeatCount, rule.min, result)
		                    Assert.lessThanOrEqualTo('value', schema.path, actualRepeatCount, rule.max, result)
		                }
		                // |count
		                if (rule.min !== undefined && rule.max === undefined) {
		                    Assert.equal('value', schema.path, actualRepeatCount, rule.min, result)
		                }
		                break
		        }
	
		        if (result.length !== length) return false
		        return true
		    },
		    properties: function(schema, data, name, result) {
		        var length = result.length
	
		        var rule = schema.rule
		        var keys = Util.keys(data)
		        if (!schema.properties) return
	
		        // 无生成规则
		        if (!schema.rule.parameters) {
		            Assert.equal('properties length', schema.path, keys.length, schema.properties.length, result)
		        } else {
		            // 有生成规则
		            // |min-max
		            if (rule.min !== undefined && rule.max !== undefined) {
		                Assert.greaterThanOrEqualTo('properties length', schema.path, keys.length, rule.min, result)
		                Assert.lessThanOrEqualTo('properties length', schema.path, keys.length, rule.max, result)
		            }
		            // |count
		            if (rule.min !== undefined && rule.max === undefined) {
		                Assert.equal('properties length', schema.path, keys.length, rule.min, result)
		            }
		        }
	
		        if (result.length !== length) return false
	
		        for (var i = 0; i < keys.length; i++) {
		            result.push.apply(
		                result,
		                this.diff(
		                    schema.properties[i],
		                    data[keys[i]],
		                    keys[i]
		                )
		            )
		        }
	
		        if (result.length !== length) return false
		        return true
		    },
		    items: function(schema, data, name, result) {
		        var length = result.length
	
		        if (!schema.items) return
	
		        var rule = schema.rule
	
		        // 无生成规则
		        if (!schema.rule.parameters) {
		            Assert.equal('items length', schema.path, data.length, schema.items.length, result)
		        } else {
		            // 有生成规则
		            // |min-max
		            if (rule.min !== undefined && rule.max !== undefined) {
		                Assert.greaterThanOrEqualTo('items', schema.path, data.length, (rule.min * schema.items.length), result,
		                    '[{utype}] array is too short: {path} must have at least {expected} elements but instance has {actual} elements')
		                Assert.lessThanOrEqualTo('items', schema.path, data.length, (rule.max * schema.items.length), result,
		                    '[{utype}] array is too long: {path} must have at most {expected} elements but instance has {actual} elements')
		            }
		            // |count
		            if (rule.min !== undefined && rule.max === undefined) {
		                Assert.equal('items length', schema.path, data.length, (rule.min * schema.items.length), result)
		            }
		        }
	
		        if (result.length !== length) return false
	
		        for (var i = 0; i < data.length; i++) {
		            result.push.apply(
		                result,
		                this.diff(
		                    schema.items[i % schema.items.length],
		                    data[i],
		                    i % schema.items.length
		                )
		            )
		        }
	
		        if (result.length !== length) return false
		        return true
		    }
		}
	
		/*
		    完善、友好的提示信息
		    
		    Equal, not equal to, greater than, less than, greater than or equal to, less than or equal to
		    路径 验证类型 描述 
	
		    Expect path.name is less than or equal to expected, but path.name is actual.
	
		    Expect path.name is less than or equal to expected, but path.name is actual.
		    Expect path.name is greater than or equal to expected, but path.name is actual.
	
		*/
		var Assert = {
		    message: function(item) {
		        return (item.message ||
		                '[{utype}] Expect {path}\'{ltype} is {action} {expected}, but is {actual}')
		            .replace('{utype}', item.type.toUpperCase())
		            .replace('{ltype}', item.type.toLowerCase())
		            .replace('{path}', Util.isArray(item.path) && item.path.join('.') || item.path)
		            .replace('{action}', item.action)
		            .replace('{expected}', item.expected)
		            .replace('{actual}', item.actual)
		    },
		    equal: function(type, path, actual, expected, result, message) {
		        if (actual === expected) return true
		        var item = {
		            path: path,
		            type: type,
		            actual: actual,
		            expected: expected,
		            action: 'equal to',
		            message: message
		        }
		        item.message = Assert.message(item)
		        result.push(item)
		        return false
		    },
		    notEqual: function(type, path, actual, expected, result, message) {
		        if (actual !== expected) return true
		        var item = {
		            path: path,
		            type: type,
		            actual: actual,
		            expected: expected,
		            action: 'not equal to',
		            message: message
		        }
		        item.message = Assert.message(item)
		        result.push(item)
		        return false
		    },
		    greaterThan: function(type, path, actual, expected, result, message) {
		        if (actual > expected) return true
		        var item = {
		            path: path,
		            type: type,
		            actual: actual,
		            expected: expected,
		            action: 'greater than',
		            message: message
		        }
		        item.message = Assert.message(item)
		        result.push(item)
		        return false
		    },
		    lessThan: function(type, path, actual, expected, result, message) {
		        if (actual < expected) return true
		        var item = {
		            path: path,
		            type: type,
		            actual: actual,
		            expected: expected,
		            action: 'less to',
		            message: message
		        }
		        item.message = Assert.message(item)
		        result.push(item)
		        return false
		    },
		    greaterThanOrEqualTo: function(type, path, actual, expected, result, message) {
		        if (actual >= expected) return true
		        var item = {
		            path: path,
		            type: type,
		            actual: actual,
		            expected: expected,
		            action: 'greater than or equal to',
		            message: message
		        }
		        item.message = Assert.message(item)
		        result.push(item)
		        return false
		    },
		    lessThanOrEqualTo: function(type, path, actual, expected, result, message) {
		        if (actual <= expected) return true
		        var item = {
		            path: path,
		            type: type,
		            actual: actual,
		            expected: expected,
		            action: 'less than or equal to',
		            message: message
		        }
		        item.message = Assert.message(item)
		        result.push(item)
		        return false
		    }
		}
	
		valid.Diff = Diff
		valid.Assert = Assert
	
		module.exports = valid
	
	/***/ },
	/* 27 */
	/***/ function(module, exports, __webpack_require__) {
	
		module.exports = __webpack_require__(28)
	
	/***/ },
	/* 28 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* global window, document, location, Event, setTimeout */
		/*
		    ## MockXMLHttpRequest
	
		    期望的功能：
		    1. 完整地覆盖原生 XHR 的行为
		    2. 完整地模拟原生 XHR 的行为
		    3. 在发起请求时，自动检测是否需要拦截
		    4. 如果不必拦截，则执行原生 XHR 的行为
		    5. 如果需要拦截，则执行虚拟 XHR 的行为
		    6. 兼容 XMLHttpRequest 和 ActiveXObject
		        new window.XMLHttpRequest()
		        new window.ActiveXObject("Microsoft.XMLHTTP")
	
		    关键方法的逻辑：
		    * new   此时尚无法确定是否需要拦截，所以创建原生 XHR 对象是必须的。
		    * open  此时可以取到 URL，可以决定是否进行拦截。
		    * send  此时已经确定了请求方式。
	
		    规范：
		    http://xhr.spec.whatwg.org/
		    http://www.w3.org/TR/XMLHttpRequest2/
	
		    参考实现：
		    https://github.com/philikon/MockHttpRequest/blob/master/lib/mock.js
		    https://github.com/trek/FakeXMLHttpRequest/blob/master/fake_xml_http_request.js
		    https://github.com/ilinsky/xmlhttprequest/blob/master/XMLHttpRequest.js
		    https://github.com/firebug/firebug-lite/blob/master/content/lite/xhr.js
		    https://github.com/thx/RAP/blob/master/lab/rap.plugin.xinglie.js
	
		    **需不需要全面重写 XMLHttpRequest？**
		        http://xhr.spec.whatwg.org/#interface-xmlhttprequest
		        关键属性 readyState、status、statusText、response、responseText、responseXML 是 readonly，所以，试图通过修改这些状态，来模拟响应是不可行的。
		        因此，唯一的办法是模拟整个 XMLHttpRequest，就像 jQuery 对事件模型的封装。
	
		    // Event handlers
		    onloadstart         loadstart
		    onprogress          progress
		    onabort             abort
		    onerror             error
		    onload              load
		    ontimeout           timeout
		    onloadend           loadend
		    onreadystatechange  readystatechange
		 */
	
		var Util = __webpack_require__(3)
	
		// 备份原生 XMLHttpRequest
		window._XMLHttpRequest = window.XMLHttpRequest
		window._ActiveXObject = window.ActiveXObject
	
		/*
		    PhantomJS
		    TypeError: '[object EventConstructor]' is not a constructor (evaluating 'new Event("readystatechange")')
	
		    https://github.com/bluerail/twitter-bootstrap-rails-confirm/issues/18
		    https://github.com/ariya/phantomjs/issues/11289
		*/
		try {
		    new window.Event('custom')
		} catch (exception) {
		    window.Event = function(type, bubbles, cancelable, detail) {
		        var event = document.createEvent('CustomEvent') // MUST be 'CustomEvent'
		        event.initCustomEvent(type, bubbles, cancelable, detail)
		        return event
		    }
		}
	
		var XHR_STATES = {
		    // The object has been constructed.
		    UNSENT: 0,
		    // The open() method has been successfully invoked.
		    OPENED: 1,
		    // All redirects (if any) have been followed and all HTTP headers of the response have been received.
		    HEADERS_RECEIVED: 2,
		    // The response's body is being received.
		    LOADING: 3,
		    // The data transfer has been completed or something went wrong during the transfer (e.g. infinite redirects).
		    DONE: 4
		}
	
		var XHR_EVENTS = 'readystatechange loadstart progress abort error load timeout loadend'.split(' ')
		var XHR_REQUEST_PROPERTIES = 'timeout withCredentials'.split(' ')
		var XHR_RESPONSE_PROPERTIES = 'readyState responseURL status statusText responseType response responseText responseXML'.split(' ')
	
		// https://github.com/trek/FakeXMLHttpRequest/blob/master/fake_xml_http_request.js#L32
		var HTTP_STATUS_CODES = {
		    100: "Continue",
		    101: "Switching Protocols",
		    200: "OK",
		    201: "Created",
		    202: "Accepted",
		    203: "Non-Authoritative Information",
		    204: "No Content",
		    205: "Reset Content",
		    206: "Partial Content",
		    300: "Multiple Choice",
		    301: "Moved Permanently",
		    302: "Found",
		    303: "See Other",
		    304: "Not Modified",
		    305: "Use Proxy",
		    307: "Temporary Redirect",
		    400: "Bad Request",
		    401: "Unauthorized",
		    402: "Payment Required",
		    403: "Forbidden",
		    404: "Not Found",
		    405: "Method Not Allowed",
		    406: "Not Acceptable",
		    407: "Proxy Authentication Required",
		    408: "Request Timeout",
		    409: "Conflict",
		    410: "Gone",
		    411: "Length Required",
		    412: "Precondition Failed",
		    413: "Request Entity Too Large",
		    414: "Request-URI Too Long",
		    415: "Unsupported Media Type",
		    416: "Requested Range Not Satisfiable",
		    417: "Expectation Failed",
		    422: "Unprocessable Entity",
		    500: "Internal Server Error",
		    501: "Not Implemented",
		    502: "Bad Gateway",
		    503: "Service Unavailable",
		    504: "Gateway Timeout",
		    505: "HTTP Version Not Supported"
		}
	
		/*
		    MockXMLHttpRequest
		*/
	
		function MockXMLHttpRequest() {
		    // 初始化 custom 对象，用于存储自定义属性
		    this.custom = {
		        events: {},
		        requestHeaders: {},
		        responseHeaders: {}
		    }
		}
	
		MockXMLHttpRequest._settings = {
		    timeout: '10-100',
		    /*
		        timeout: 50,
		        timeout: '10-100',
		     */
		}
	
		MockXMLHttpRequest.setup = function(settings) {
		    Util.extend(MockXMLHttpRequest._settings, settings)
		    return MockXMLHttpRequest._settings
		}
	
		Util.extend(MockXMLHttpRequest, XHR_STATES)
		Util.extend(MockXMLHttpRequest.prototype, XHR_STATES)
	
		// 标记当前对象为 MockXMLHttpRequest
		MockXMLHttpRequest.prototype.mock = true
	
		// 是否拦截 Ajax 请求
		MockXMLHttpRequest.prototype.match = false
	
		// 初始化 Request 相关的属性和方法
		Util.extend(MockXMLHttpRequest.prototype, {
		    // https://xhr.spec.whatwg.org/#the-open()-method
		    // Sets the request method, request URL, and synchronous flag.
		    open: function(method, url, async, username, password) {
		        var that = this
	
		        Util.extend(this.custom, {
		            method: method,
		            url: url,
		            async: typeof async === 'boolean' ? async : true,
		            username: username,
		            password: password,
		            options: {
		                url: url,
		                type: method
		            }
		        })
	
		        this.custom.timeout = function(timeout) {
		            if (typeof timeout === 'number') return timeout
		            if (typeof timeout === 'string' && !~timeout.indexOf('-')) return parseInt(timeout, 10)
		            if (typeof timeout === 'string' && ~timeout.indexOf('-')) {
		                var tmp = timeout.split('-')
		                var min = parseInt(tmp[0], 10)
		                var max = parseInt(tmp[1], 10)
		                return Math.round(Math.random() * (max - min)) + min
		            }
		        }(MockXMLHttpRequest._settings.timeout)
	
		        // 查找与请求参数匹配的数据模板
		        var item = find(this.custom.options)
	
		        function handle(event) {
		            // 同步属性 NativeXMLHttpRequest => MockXMLHttpRequest
		            for (var i = 0; i < XHR_RESPONSE_PROPERTIES.length; i++) {
		                try {
		                    that[XHR_RESPONSE_PROPERTIES[i]] = xhr[XHR_RESPONSE_PROPERTIES[i]]
		                } catch (e) {}
		            }
		            // 触发 MockXMLHttpRequest 上的同名事件
		            that.dispatchEvent(new Event(event.type /*, false, false, that*/ ))
		        }
	
		        // 如果未找到匹配的数据模板，则采用原生 XHR 发送请求。
		        if (!item) {
		            // 创建原生 XHR 对象，调用原生 open()，监听所有原生事件
		            var xhr = createNativeXMLHttpRequest()
		            this.custom.xhr = xhr
	
		            // 初始化所有事件，用于监听原生 XHR 对象的事件
		            for (var i = 0; i < XHR_EVENTS.length; i++) {
		                xhr.addEventListener(XHR_EVENTS[i], handle)
		            }
	
		            // xhr.open()
		            if (username) xhr.open(method, url, async, username, password)
		            else xhr.open(method, url, async)
	
		            // 同步属性 MockXMLHttpRequest => NativeXMLHttpRequest
		            for (var j = 0; j < XHR_REQUEST_PROPERTIES.length; j++) {
		                try {
		                    xhr[XHR_REQUEST_PROPERTIES[j]] = that[XHR_REQUEST_PROPERTIES[j]]
		                } catch (e) {}
		            }
	
		            return
		        }
	
		        // 找到了匹配的数据模板，开始拦截 XHR 请求
		        this.match = true
		        this.custom.template = item
		        this.readyState = MockXMLHttpRequest.OPENED
		        this.dispatchEvent(new Event('readystatechange' /*, false, false, this*/ ))
		    },
		    // https://xhr.spec.whatwg.org/#the-setrequestheader()-method
		    // Combines a header in author request headers.
		    setRequestHeader: function(name, value) {
		        // 原生 XHR
		        if (!this.match) {
		            this.custom.xhr.setRequestHeader(name, value)
		            return
		        }
	
		        // 拦截 XHR
		        var requestHeaders = this.custom.requestHeaders
		        if (requestHeaders[name]) requestHeaders[name] += ',' + value
		        else requestHeaders[name] = value
		    },
		    timeout: 0,
		    withCredentials: false,
		    upload: {},
		    // https://xhr.spec.whatwg.org/#the-send()-method
		    // Initiates the request.
		    send: function send(data) {
		        var that = this
		        this.custom.options.body = data
	
		        // 原生 XHR
		        if (!this.match) {
		            this.custom.xhr.send(data)
		            return
		        }
	
		        // 拦截 XHR
	
		        // X-Requested-With header
		        this.setRequestHeader('X-Requested-With', 'MockXMLHttpRequest')
	
		        // loadstart The fetch initiates.
		        this.dispatchEvent(new Event('loadstart' /*, false, false, this*/ ))
	
		        if (this.custom.async) setTimeout(done, this.custom.timeout) // 异步
		        else done() // 同步
	
		        function done() {
		            that.readyState = MockXMLHttpRequest.HEADERS_RECEIVED
		            that.dispatchEvent(new Event('readystatechange' /*, false, false, that*/ ))
		            that.readyState = MockXMLHttpRequest.LOADING
		            that.dispatchEvent(new Event('readystatechange' /*, false, false, that*/ ))
	
		            that.status = 200
		            that.statusText = HTTP_STATUS_CODES[200]
	
		            // fix #92 #93 by @qddegtya
		            that.response = that.responseText = JSON.stringify(
		                convert(that.custom.template, that.custom.options),
		                null, 4
		            )
	
		            that.readyState = MockXMLHttpRequest.DONE
		            that.dispatchEvent(new Event('readystatechange' /*, false, false, that*/ ))
		            that.dispatchEvent(new Event('load' /*, false, false, that*/ ));
		            that.dispatchEvent(new Event('loadend' /*, false, false, that*/ ));
		        }
		    },
		    // https://xhr.spec.whatwg.org/#the-abort()-method
		    // Cancels any network activity.
		    abort: function abort() {
		        // 原生 XHR
		        if (!this.match) {
		            this.custom.xhr.abort()
		            return
		        }
	
		        // 拦截 XHR
		        this.readyState = MockXMLHttpRequest.UNSENT
		        this.dispatchEvent(new Event('abort', false, false, this))
		        this.dispatchEvent(new Event('error', false, false, this))
		    }
		})
	
		// 初始化 Response 相关的属性和方法
		Util.extend(MockXMLHttpRequest.prototype, {
		    responseURL: '',
		    status: MockXMLHttpRequest.UNSENT,
		    statusText: '',
		    // https://xhr.spec.whatwg.org/#the-getresponseheader()-method
		    getResponseHeader: function(name) {
		        // 原生 XHR
		        if (!this.match) {
		            return this.custom.xhr.getResponseHeader(name)
		        }
	
		        // 拦截 XHR
		        return this.custom.responseHeaders[name.toLowerCase()]
		    },
		    // https://xhr.spec.whatwg.org/#the-getallresponseheaders()-method
		    // http://www.utf8-chartable.de/
		    getAllResponseHeaders: function() {
		        // 原生 XHR
		        if (!this.match) {
		            return this.custom.xhr.getAllResponseHeaders()
		        }
	
		        // 拦截 XHR
		        var responseHeaders = this.custom.responseHeaders
		        var headers = ''
		        for (var h in responseHeaders) {
		            if (!responseHeaders.hasOwnProperty(h)) continue
		            headers += h + ': ' + responseHeaders[h] + '\r\n'
		        }
		        return headers
		    },
		    overrideMimeType: function( /*mime*/ ) {},
		    responseType: '', // '', 'text', 'arraybuffer', 'blob', 'document', 'json'
		    response: null,
		    responseText: '',
		    responseXML: null
		})
	
		// EventTarget
		Util.extend(MockXMLHttpRequest.prototype, {
		    addEventListene: function addEventListene(type, handle) {
		        var events = this.custom.events
		        if (!events[type]) events[type] = []
		        events[type].push(handle)
		    },
		    removeEventListener: function removeEventListener(type, handle) {
		        var handles = this.custom.events[type] || []
		        for (var i = 0; i < handles.length; i++) {
		            if (handles[i] === handle) {
		                handles.splice(i--, 1)
		            }
		        }
		    },
		    dispatchEvent: function dispatchEvent(event) {
		        var handles = this.custom.events[event.type] || []
		        for (var i = 0; i < handles.length; i++) {
		            handles[i].call(this, event)
		        }
	
		        var ontype = 'on' + event.type
		        if (this[ontype]) this[ontype](event)
		    }
		})
	
		// Inspired by jQuery
		function createNativeXMLHttpRequest() {
		    var isLocal = function() {
		        var rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/
		        var rurl = /^([\w.+-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/
		        var ajaxLocation = location.href
		        var ajaxLocParts = rurl.exec(ajaxLocation.toLowerCase()) || []
		        return rlocalProtocol.test(ajaxLocParts[1])
		    }()
	
		    return window.ActiveXObject ?
		        (!isLocal && createStandardXHR() || createActiveXHR()) : createStandardXHR()
	
		    function createStandardXHR() {
		        try {
		            return new window._XMLHttpRequest();
		        } catch (e) {}
		    }
	
		    function createActiveXHR() {
		        try {
		            return new window._ActiveXObject("Microsoft.XMLHTTP");
		        } catch (e) {}
		    }
		}
	
	
		// 查找与请求参数匹配的数据模板：URL，Type
		function find(options) {
	
		    for (var sUrlType in MockXMLHttpRequest.Mock._mocked) {
		        var item = MockXMLHttpRequest.Mock._mocked[sUrlType]
		        if (
		            (!item.rurl || match(item.rurl, options.url)) &&
		            (!item.rtype || match(item.rtype, options.type.toLowerCase()))
		        ) {
		            // console.log('[mock]', options.url, '>', item.rurl)
		            return item
		        }
		    }
	
		    function match(expected, actual) {
		        if (Util.type(expected) === 'string') {
		            return expected === actual
		        }
		        if (Util.type(expected) === 'regexp') {
		            return expected.test(actual)
		        }
		    }
	
		}
	
		// 数据模板 ＝> 响应数据
		function convert(item, options) {
		    return Util.isFunction(item.template) ?
		        item.template(options) : MockXMLHttpRequest.Mock.mock(item.template)
		}
	
		module.exports = MockXMLHttpRequest
	
	/***/ }
	/******/ ])
	});
	;

/***/ },
/* 413 */
/*!******************************************************!*\
  !*** ./test/mock/ajaxMock/SubjectLibMockTemplate.ts ***!
  \******************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var subjectLibActionTypes = __webpack_require__(/*! ../../../actions/SubjectLib/SubjectLibActionTypes */ 364);
	var subjectLibMockTemplateTemp = {};
	subjectLibMockTemplateTemp[subjectLibActionTypes.INIT_SUBJLIB_CURRENTSUBJ] = {
	    status: "success",
	    result: {
	        subjects: [
	            {
	                subjectName: "本草纲目",
	                references: [
	                    {
	                        referenceID: "",
	                        referenceKey: "中医政策",
	                        referenceValue: "国家中医药管理局发布《抗震救灾医疗救治应用中医药技术指导意见》" +
	                            "该指导意见对地震灾害中常见的闭合性骨折、单纯软组织损伤、创伤后并发症（如创伤感染、挤压综合症、褥疮、深静脉血栓）等的中医药治疗提供了指导性技术方法，并就灾后防疫工作中的中医药参与提出了指导性意见和要求。同时，该指导意见提出，在卫生应急救援工作中，要积极利用当地的医药资源，充分发挥民族医药的作用。（国家中医药管理局新闻办供稿）",
	                        referenceValue1: "NULL",
	                        referenceValue2: "NULL",
	                    },
	                    {
	                        referenceID: "",
	                        referenceKey: "中医新闻",
	                        referenceValue: "山西成为七种中药材原料基地" +
	                            "本报讯 日前，从山西省十一届人大常委会第十次会议上传来信息，目前，该省已经成为7个中药品种的重要原料基地。" +
	                            "山西省是“北药”的主产区，独特的生态地理环境和“四荒”地适宜种植多种中药材，中药材资源有1116种，蕴藏量达1．88亿公斤，主要道地药材品种有30个品种，大宗种植品种有近20个。" +
	                            "其药材活性成分含量高、有害污染物低，初加工方式具有悠久历史，其党参、黄芪、连翘等大宗道地药材更是著名。",
	                        referenceValue1: "NULL",
	                        referenceValue2: "NULL",
	                    },
	                    {
	                        referenceID: "",
	                        referenceKey: "趣闻知识",
	                        referenceValue: "NULL",
	                        referenceValue1: "NULL",
	                        referenceValue2: "NULL",
	                    }
	                ]
	            },
	            {
	                subjectName: "百草注",
	                references: [
	                    {
	                        referenceID: "",
	                        referenceKey: "学科要求",
	                        referenceValue: "学科要求-数学"
	                    }
	                ]
	            }
	        ]
	    }
	};
	exports.subjectLibMockTemplate = subjectLibMockTemplateTemp;


/***/ },
/* 414 */
/*!****************************************************!*\
  !*** ./test/mock/ajaxMock/MIAssessMockTemplate.ts ***!
  \****************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var ActionTypes = __webpack_require__(/*! ../../../actions/AssessCenter/MIAssess/MIAssessActionTypes */ 394);
	var MIAssessMockTemplateTemp = {};
	MIAssessMockTemplateTemp[ActionTypes.GET_MIASSESS_QUIZZES] = {
	    status: "success",
	    quizzes: [
	        {
	            questionNo: 1,
	            questionText: "我书面或口头表达时词汇丰富",
	            answerOptions: [
	                {
	                    answerNo: 1,
	                    answerText: "完全符合"
	                },
	                {
	                    answerNo: 2,
	                    answerText: "大致符合"
	                },
	                {
	                    answerNo: 3,
	                    answerText: "部分符合"
	                },
	                {
	                    answerNo: 4,
	                    answerText: "小部分符合"
	                },
	                {
	                    answerNo: 5,
	                    answerText: "全完不符"
	                },
	            ]
	        },
	        {
	            questionNo: 2,
	            questionText: "对科学新知识很有兴趣，喜欢实验各种事物",
	            answerOptions: [
	                {
	                    answerNo: 1,
	                    answerText: "完全符合"
	                },
	                {
	                    answerNo: 2,
	                    answerText: "大致符合"
	                },
	                {
	                    answerNo: 3,
	                    answerText: "部分符合"
	                },
	                {
	                    answerNo: 4,
	                    answerText: "小部分符合"
	                },
	                {
	                    answerNo: 5,
	                    answerText: "全完不符"
	                },
	            ]
	        },
	        {
	            questionNo: 3,
	            questionText: "喜欢实验各种事物",
	            answerOptions: [
	                {
	                    answerNo: 1,
	                    answerText: "完全符合"
	                },
	                {
	                    answerNo: 2,
	                    answerText: "大致符合"
	                },
	                {
	                    answerNo: 3,
	                    answerText: "部分符合"
	                },
	                {
	                    answerNo: 4,
	                    answerText: "小部分符合"
	                },
	                {
	                    answerNo: 5,
	                    answerText: "全完不符"
	                },
	            ]
	        },
	        {
	            questionNo: 4,
	            questionText: "在希腊神话中，蛇魔女梅杜莎看守的金羊皮如果被你所获，你会把它放在~",
	            answerOptions: [
	                {
	                    answerNo: 1,
	                    answerText: "完全符合"
	                },
	                {
	                    answerNo: 2,
	                    answerText: "大致符合"
	                },
	                {
	                    answerNo: 3,
	                    answerText: "部分符合"
	                },
	                {
	                    answerNo: 4,
	                    answerText: "小部分符合"
	                },
	                {
	                    answerNo: 5,
	                    answerText: "全完不符"
	                },
	            ]
	        },
	        {
	            questionNo: 5,
	            questionText: "走进流行的时尚餐厅，奶油螃蟹、清蒸螃蟹、咖喱螃蟹，你最想要吃哪一道？",
	            answerOptions: [
	                {
	                    answerNo: 1,
	                    answerText: "完全符合"
	                },
	                {
	                    answerNo: 2,
	                    answerText: "大致符合"
	                },
	                {
	                    answerNo: 3,
	                    answerText: "部分符合"
	                },
	                {
	                    answerNo: 4,
	                    answerText: "小部分符合"
	                },
	                {
	                    answerNo: 5,
	                    answerText: "全完不符"
	                },
	            ]
	        }
	    ]
	};
	var MIAssessResult = {
	    MIAssessAllTypeScores: [
	        {
	            MITypeName: "",
	            score: ""
	        }
	    ]
	};
	var MIAssessRank = {
	    MIAssessRank: [
	        {
	            MITypeName: "",
	            MITypeID: "",
	            introductions: [
	                {
	                    introductionKey: "",
	                    introductionValue: "",
	                }
	            ]
	        }
	    ]
	};
	//提交MI测试填写的答案
	MIAssessMockTemplateTemp[ActionTypes.SUBMIT_MIASSESS_ANSWERS] = {
	    status: "success",
	    result: {},
	};
	//获取MI测试是否完成的状态
	MIAssessMockTemplateTemp[ActionTypes.GET_MIASSESS_MIASSWSSFINISHSTATE] = {
	    status: "success",
	    result: {
	        isMIAssessFinished: false,
	    }
	};
	//MI测试引导页面的介绍
	MIAssessMockTemplateTemp[ActionTypes.GET_MIASSESS_INTRODUCTION] = {
	    status: 'success',
	    result: {
	        MIIntroduction: {
	            MIIntroduction: "多元智能量表是基于美国哈佛大学心理学家加德纳（Howard Gardner）于1983年提出的多元智能理论，" +
	                "针对中国中学生的特点而制定开发，能够帮助中学生发现自身的优势潜能，了解各项潜能的培训方法，并了解与各项潜能" +
	                "相匹配的职业和专业。\n" +
	                "测验的主要目的是帮助同学们深入了解自己的优势智能，为未来的职业发展提供重要参考。请根据自己的实际情况，判断下列题目" +
	                "描述与你自身特点的复合程度，并从5个选项中（完全符合、大致符合、部分符合、小部分符合、完全不符合）选择一个。"
	        }
	    },
	};
	MIAssessMockTemplateTemp[ActionTypes.GET_MIASSESS_MI_REPORT] = {
	    status: 'success',
	    result: {
	        //没有则不传
	        dimScores: [
	            {
	                dimType: "001",
	                dimName: "逻辑-数理智能",
	                score: "100",
	                totalScore: "100"
	            },
	            {
	                dimType: "002",
	                dimName: "身体-动觉智能",
	                score: "90",
	                totalScore: "100"
	            },
	            {
	                dimType: "003",
	                dimName: "视觉-空间智能",
	                score: "50",
	                totalScore: "100"
	            },
	            {
	                dimType: "004",
	                dimName: "音乐-节奏智能",
	                score: "60",
	                totalScore: "100"
	            },
	            {
	                dimType: "005",
	                dimName: "人际-交往智能",
	                score: "60",
	                totalScore: "100"
	            },
	            {
	                dimType: "006",
	                dimName: "自知-内省智能",
	                score: "70",
	                totalScore: "100"
	            },
	            {
	                dimType: "007",
	                dimName: "自然-观察智能",
	                score: "80",
	                totalScore: "100"
	            },
	            {
	                dimType: "008",
	                dimName: "言语-语言智能",
	                score: "40",
	                totalScore: "100"
	            },
	        ],
	        report: {
	            //优势结果，排名靠前的结果
	            advantage: [
	                {
	                    resultDimType: "",
	                    resultDimName: "逻辑-数理智能",
	                    introductions: [
	                        {
	                            introductionID: "001",
	                            introductionName: "内涵",
	                            introductionValue: "有效地计算、测量、推理、归纳、分类，并进行复杂数学运算的能力"
	                        },
	                        {
	                            introductionID: "002",
	                            introductionName: "优势表现",
	                            introductionValue: "数学逻辑智能强的人，擅长提出问题并执行试验以寻求答案；善于寻找事物的规律及逻辑顺序，" +
	                                "以及在他人的言语或行为中寻找逻辑缺陷；对可被测量、归类、分析的事物比较容易接受。在学校里，他们比较喜欢数学或者科学类" +
	                                "的课程，对科学的发展新发现有兴趣，擅长分析、归纳和解决问题。"
	                        },
	                        {
	                            introductionID: "003",
	                            introductionName: "相关职业",
	                            introductionValue: "作家、演说家、记者、编辑、节目主持人、律师、政治活动家"
	                        },
	                    ]
	                },
	                {
	                    resultDimType: "",
	                    resultDimName: "自然-观察智能",
	                    introductions: [
	                        {
	                            introductionID: "001",
	                            introductionName: "内涵",
	                            introductionValue: "有效地计算、测量、推理、归纳、分类，并进行复杂数学运算的能力"
	                        },
	                        {
	                            introductionID: "002",
	                            introductionName: "优势表现",
	                            introductionValue: "数学逻辑智能强的人，擅长提出问题并执行试验以寻求答案；善于寻找事物的规律及逻辑顺序，" +
	                                "以及在他人的言语或行为中寻找逻辑缺陷；对可被测量、归类、分析的事物比较容易接受。在学校里，他们比较喜欢数学或者科学类" +
	                                "的课程，对科学的发展新发现有兴趣，擅长分析、归纳和解决问题。"
	                        },
	                        {
	                            introductionID: "003",
	                            introductionName: "相关职业",
	                            introductionValue: "作家、演说家、记者、编辑、节目主持人、律师、政治活动家"
	                        },
	                    ]
	                },
	                {
	                    resultDimType: "",
	                    resultDimName: "自知-内省智能",
	                    introductions: [
	                        {
	                            introductionID: "001",
	                            introductionName: "内涵",
	                            introductionValue: "有效地计算、测量、推理、归纳、分类，并进行复杂数学运算的能力"
	                        },
	                        {
	                            introductionID: "002",
	                            introductionName: "优势表现",
	                            introductionValue: "数学逻辑智能强的人，擅长提出问题并执行试验以寻求答案；善于寻找事物的规律及逻辑顺序，" +
	                                "以及在他人的言语或行为中寻找逻辑缺陷；对可被测量、归类、分析的事物比较容易接受。在学校里，他们比较喜欢数学或者科学类" +
	                                "的课程，对科学的发展新发现有兴趣，擅长分析、归纳和解决问题。"
	                        },
	                        {
	                            introductionID: "003",
	                            introductionName: "相关职业",
	                            introductionValue: "作家、演说家、记者、编辑、节目主持人、律师、政治活动家"
	                        },
	                    ]
	                },
	            ],
	            //没有则不传，目前MI多元智能测试需要
	            disadvantage: [
	                {
	                    resultDimType: "",
	                    resultDimName: "言语-语言智能",
	                    introductions: [
	                        {
	                            introductionID: "001",
	                            introductionName: "提高方法",
	                            introductionValue: "写故事、讲故事、做读书笔记、写心得、教别人、制订提纲、列清单、参加朗诵比赛、演讲比赛、担任博物馆讲解员、玩文字游戏等"
	                        }
	                    ]
	                },
	                {
	                    resultDimType: "",
	                    resultDimName: "音乐-节奏智能",
	                    introductions: [
	                        {
	                            introductionID: "001",
	                            introductionName: "提高方法",
	                            introductionValue: "有效地计算写故事、讲故事、做读书笔记、写心得、教别人、制订提纲、列清单、参加朗诵比赛、演讲比赛、担任博物馆讲解员、玩文字游戏等"
	                        }
	                    ]
	                }
	            ]
	        },
	    },
	};
	exports.MIAssessMockTemplate = MIAssessMockTemplateTemp;


/***/ },
/* 415 */
/*!******************************************************!*\
  !*** ./test/mock/ajaxMock/CollegeLibMockTemplate.ts ***!
  \******************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var collegeLibActionTypes = __webpack_require__(/*! ../../../actions/CollegeLib/CollegeLibActionTypes */ 368);
	var postData = {};
	var collegeLibMockTemplateTemp = {};
	collegeLibMockTemplateTemp[collegeLibActionTypes.GET_COLLEGELIB_CONDITIONS] = {
	    status: 'success',
	    result: {
	        province: [
	            {
	                regionName: "植物药",
	                regionID: "01"
	            },
	            {
	                regionName: "动物药",
	                regionID: "02"
	            },
	            {
	                regionName: "矿物药",
	                regionID: "03"
	            }
	        ],
	        majorType: [
	            {
	                majorTypeName: "解毒药",
	                majorTypeID: ""
	            },
	            {
	                majorTypeName: "清热药",
	                majorTypeID: ""
	            },
	            {
	                majorTypeName: "理气药",
	                majorTypeID: ""
	            },
	            {
	                majorTypeName: "活血化瘀药",
	                majorTypeID: ""
	            },
	            {
	                majorTypeName: "解表",
	                majorTypeID: ""
	            },
	            {
	                majorTypeName: "温里药",
	                majorTypeID: ""
	            },
	            {
	                majorTypeName: "祛湿药",
	                majorTypeID: ""
	            },
	        ],
	        collegeLevel: [
	            {
	                collegeLevelName: "",
	                collegeLevelID: "01"
	            },
	            {
	                collegeLevelName: "",
	                collegeLevelID: "02"
	            },
	            {
	                collegeLevelName: "其他",
	                collegeLevelID: "03"
	            },
	        ],
	        collegeProp: [
	            {
	                collegePropName: "解毒药",
	                collegePropID: "01"
	            },
	            {
	                collegePropName: "清热药",
	                collegePropID: "02"
	            },
	            {
	                collegePropName: "解表药",
	                collegePropID: "03"
	            },
	            {
	                collegePropName: "温里药",
	                collegePropID: "04"
	            },
	            {
	                collegePropName: "泻下药",
	                collegePropID: "05"
	            },
	            {
	                collegePropName: "消导药",
	                collegePropID: "06"
	            },
	            {
	                collegePropName: "祛湿药",
	                collegePropID: "07"
	            },
	            {
	                collegePropName: "理气药",
	                collegePropID: "08"
	            },
	            {
	                collegePropName: "补益药",
	                collegePropID: "09"
	            },
	            {
	                collegePropName: "固涩药",
	                collegePropID: "10"
	            },
	            {
	                collegePropName: "开窍药",
	                collegePropID: "11"
	            },
	            {
	                collegePropName: "驱虫药",
	                collegePropID: "12"
	            },
	            {
	                collegePropName: "祛风湿",
	                collegePropID: "13"
	            },
	            {
	                collegePropName: "止咳药",
	                collegePropID: "14"
	            }
	        ]
	    },
	};
	postData = {
	    filter: {
	        keyword: "",
	        regionID: [],
	        majorTypeID: [],
	        collegeLevelID: [],
	        collegePropID: [],
	    }
	};
	collegeLibMockTemplateTemp[collegeLibActionTypes.GET_COLLEGELIB_COLLEGELIST] = {
	    status: 'success',
	    result: {
	        colleges: [
	            {
	                collegeName: "人参",
	                collegeID: "01",
	                logo: "vendor/images/schools/renshen.jpg",
	                belongTo: "植物药",
	                collegeLevel: [
	                    {
	                        collegeLevelName: "安神"
	                    },
	                    {
	                        collegeLevelName: "延年"
	                    }
	                ],
	                masterStationCount: "22",
	                doctorStationCount: "12",
	                keyDisciplineCount: "10",
	                favorite: false,
	                hasAdmissionTeacher: false
	            },
	            {
	                collegeName: "灵芝",
	                collegeID: "02",
	                logo: "vendor/images/schools/lingzhi.jpg",
	                belongTo: "植物药",
	                collegeLevel: [
	                    {
	                        collegeLevelName: "明目"
	                    },
	                    {
	                        collegeLevelName: "补肝"
	                    }
	                ],
	                masterStationCount: "21",
	                doctorStationCount: "10",
	                keyDisciplineCount: "5",
	                favorite: true,
	                hasAdmissionTeacher: false
	            },
	            {
	                collegeName: "灵芝",
	                collegeID: "03",
	                logo: "vendor/images/schools/lingzhi.jpg",
	                belongTo: "植物药",
	                collegeLevel: [
	                    {
	                        collegeLevelName: "明目"
	                    },
	                    {
	                        collegeLevelName: "补肝"
	                    }
	                ],
	                masterStationCount: "21",
	                doctorStationCount: "10",
	                keyDisciplineCount: "5",
	                favorite: true,
	                hasAdmissionTeacher: false
	            },
	        ]
	    },
	};
	postData = {
	    collegeID: ""
	};
	collegeLibMockTemplateTemp[collegeLibActionTypes.GET_COLLEGELIB_COLLEGEDETAIL] = {
	    status: 'success',
	    result: {
	        collegeInfo: {
	            collegeName: "人参",
	            collegeID: "01",
	            logo: "vendor/images/schools/renshen.jpg",
	            collegeLevel: [
	                {
	                    collegeLevelName: "安神",
	                },
	                {
	                    collegeLevelName: "延年"
	                }
	            ],
	            collegeEnglishName: "Panax ginseng C.A. Mey",
	            province: "吉林、辽宁、黑龙江",
	            image: "vendor/images/schools/renshen.jpg",
	            foundationYear: "中药",
	            belongTo: "植物药",
	            totalStudentCount: "播种、分株、扦插",
	            academicianCount: "播种、催芽",
	            keyDisciplineCount: "生晒参、白干参、红参",
	            collegeProp: "美容、药用",
	            masterStationCount: "253个",
	            doctorStationCount: "271个"
	        },
	        introduction: [
	            {
	                introductionID: "intro",
	                introductionType: "3",
	                introductionKey: "药材介绍",
	                introductionValue: "人参（Panax ginseng C. A. Mey）为多年生草本植物，喜阴凉，叶片无气孔和栅栏组织，无法保留水分，温度高于32度叶片会灼伤，郁闭度0.7-0.8。通常3年开花，5-6年结果，花期5-6月，果期6-9月。生长于北纬33度-48度之间的海拔数百米的以红松为主的针阔混交林或落叶阔叶林下，产于中国东北、朝鲜、韩国、日本、俄罗斯东部。人参的别称为黄参、地精、神草、百草之王，是闻名遐迩的“东北三宝”之一。"
	            },
	            {
	                introductionID: "require",
	                introductionType: "3",
	                introductionKey: "功效作用",
	                //todo
	                introductionValue: [
	                    {
	                        majorType: "味甘、微苦、性温、平",
	                        majorName: "大补元气",
	                        requireSubject: "《本草汇言》",
	                        subMajor: "体虚欲脱。。。"
	                    }
	                ]
	            },
	            {
	                introductionID: "scoreLine",
	                introductionType: "3",
	                introductionKey: "药方选录",
	                introductionValue: {
	                    //todo
	                    science: [
	                        {
	                            batch: "治营卫气虚",
	                            collegeAdmissionLines: [
	                                {
	                                    year: "123",
	                                    batchScore: "123",
	                                    admissionScore: "123",
	                                    diffWithBatchScore: "123" //线差
	                                },
	                            ]
	                        },
	                        {
	                            batch: "止血后此药补之",
	                            collegeAdmissionLines: [
	                                {
	                                    year: "",
	                                    batchScore: "",
	                                    admissionScore: "",
	                                    diffWithBatchScore: "" //线差
	                                }
	                            ]
	                        }
	                    ],
	                    art: [
	                        {
	                            batch: "",
	                            collegeAdmissionLines: [
	                                {
	                                    year: "",
	                                    batchScore: "",
	                                    admissionScore: "",
	                                    diffWithBatchScore: "" //线差
	                                },
	                            ]
	                        }
	                    ]
	                }
	            },
	        ],
	    }
	};
	exports.collegeLibMockTemplate = collegeLibMockTemplateTemp;


/***/ },
/* 416 */
/*!**************************************************!*\
  !*** ./test/mock/ajaxMock/JobLibMockTemplate.ts ***!
  \**************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var jobLibActionTypes = __webpack_require__(/*! ../../../actions/JobLib/JobLibActionTypes */ 371);
	var jobLibMockTemplateTemp = {};
	jobLibMockTemplateTemp[jobLibActionTypes.GET_JOBLIB_JOBLIB] = {
	    status: 'success',
	    result: {
	        jobCount: 200,
	        jobCategory: [
	            {
	                jobCategoryID: "10",
	                jobCategoryName: "汤剂"
	            },
	            {
	                jobCategoryID: "11",
	                jobCategoryName: "丸剂"
	            },
	            {
	                jobCategoryID: "12",
	                jobCategoryName: "散剂"
	            },
	            {
	                jobCategoryID: "13",
	                jobCategoryName: "片剂"
	            },
	            {
	                jobCategoryID: "14",
	                jobCategoryName: "酒剂"
	            },
	            {
	                jobCategoryID: "15",
	                jobCategoryName: "冲剂"
	            },
	            {
	                jobCategoryID: "16",
	                jobCategoryName: "糖浆剂"
	            },
	            {
	                jobCategoryID: "15",
	                jobCategoryName: "口服液"
	            },
	            {
	                jobCategoryID: "15",
	                jobCategoryName: "注射液"
	            }
	        ],
	        subJobCategoryMap: {
	            10: [
	                {
	                    subJobCategoryID: "1010",
	                    subJobCategoryName: "荆防败毒散"
	                },
	                {
	                    subJobCategoryID: "1011",
	                    subJobCategoryName: "小青龙汤"
	                },
	                {
	                    subJobCategoryID: "1012",
	                    subJobCategoryName: "孟婆汤"
	                }
	            ],
	            11: [
	                {
	                    subJobCategoryID: "1110",
	                    subJobCategoryName: "大力丸"
	                },
	                {
	                    subJobCategoryID: "1111",
	                    subJobCategoryName: "强肾丸"
	                },
	                {
	                    subJobCategoryID: "1112",
	                    subJobCategoryName: "无敌丸"
	                }
	            ],
	            12: [
	                {
	                    subJobCategoryID: "1210",
	                    subJobCategoryName: "清风散"
	                },
	                {
	                    subJobCategoryID: "1211",
	                    subJobCategoryName: "解毒散"
	                },
	                {
	                    subJobCategoryID: "1212",
	                    subJobCategoryName: "金身散"
	                }
	            ],
	            13: [
	                {
	                    subJobCategoryID: "1210",
	                    subJobCategoryName: "蓝药片"
	                },
	                {
	                    subJobCategoryID: "1211",
	                    subJobCategoryName: "黄药片"
	                },
	                {
	                    subJobCategoryID: "1212",
	                    subJobCategoryName: "绿药片"
	                }
	            ]
	        },
	    },
	};
	var postData = {};
	postData = {
	    subJobCategoryID: "1010"
	};
	jobLibMockTemplateTemp[jobLibActionTypes.GET_JOBLIB_JOBINTRODUCTION] = {
	    status: "success",
	    result: {
	        introduction: [
	            {
	                introductionID: "1",
	                introductionKey: "组成",
	                introductionValue: "荆芥9g，防风9g，羌活9g，独活9g，柴胡9g，甘草3g",
	            },
	            {
	                introductionID: "2",
	                introductionKey: "功效",
	                introductionValue: "发汗散寒，祛风除湿",
	            },
	            {
	                introductionID: "3",
	                introductionKey: "主治",
	                introductionValue: "外感风寒挟湿。症见恶寒发热，头痛，肢体酸痛，无汗，鼻塞声重，咳嗽有痰，或胸膈痞闷，舌苔白，脉浮。",
	            },
	            {
	                introductionID: "4",
	                introductionKey: "运用",
	                introductionValue: "(1)本方常用于治疗普通感冒、流行性感冒、支气管炎、过敏性皮炎、荨麻疹、湿疹及皮肤瘙痒等属于外感风寒挟湿者。(2)若兼有咽喉肿痛里热证，去独活，加银花、连翘、板蓝根等以清热解毒；若用于风毒瘾疹皮肤瘙痒症，可加蝉蜕、苦参以疏风止痒，清热",
	            }
	        ]
	    }
	};
	exports.jobLibMockTemplate = jobLibMockTemplateTemp;


/***/ },
/* 417 */
/*!****************************************************!*\
  !*** ./test/mock/ajaxMock/HomePageMockTemplate.ts ***!
  \****************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var studentActionTypes = __webpack_require__(/*! ../../../actions/HomePage/HomePageActionTypes */ 380);
	// 使用 Mock
	var studentMockTemplateTemp = {};
	var postData = {};
	var getStudentHomePageModuleConfig = {
	    status: "",
	    result: {
	        moduleList: [
	            {
	                moduleID: "",
	                moduleName: ""
	            }
	        ]
	    }
	};
	postData = {
	    userID: "20150101"
	};
	studentMockTemplateTemp[studentActionTypes.READ_STUDENT_USERINFO] = {
	    "status": "success",
	    "result": {
	        "userID": "20150101",
	        headImage: "vendor/images/tests/multipleIntelligence.png",
	        "name": "小明童鞋",
	        "systemID": "201007073",
	        "classID": 1,
	        "className": "高一一班",
	        "gradeID": 1,
	        "gradeName": "高一",
	        "gender": 1,
	        stateMsg: "蹉跎错，消磨过，最是光阴化浮沫",
	        //最后一个为当前学期
	        passedTerms: [
	            {
	                termID: "1",
	                termName: "高一上学期",
	                termYear: "2015"
	            },
	            {
	                termID: "2",
	                termName: "高一下学期",
	                termYear: "2015"
	            },
	            {
	                termID: "3",
	                termName: "高二上学期",
	                termYear: "2016"
	            },
	            {
	                termID: "4",
	                termName: "高二下学期",
	                termYear: "2016"
	            }
	        ],
	    }
	};
	postData = {
	    termID: "1"
	};
	studentMockTemplateTemp[studentActionTypes.GET_STUDENT_RANKSTATE] = {
	    status: 'success',
	    result: {
	        integralScore: 350,
	        rankInClass: 12,
	        rankInSchool: 122
	    },
	};
	studentMockTemplateTemp[studentActionTypes.GET_STUDENT_SUBJECTCHOICESTATE] = {
	    status: 'success',
	    result: {
	        integralScore: 200,
	        subjectChoiceResult: {
	            chosenSubjects: [
	                {
	                    subjectName: "政治"
	                },
	                {
	                    subjectName: "历史"
	                },
	                {
	                    subjectName: "技术"
	                }
	            ],
	        },
	        subjectInterest: [
	            {
	                subjectName: "物理",
	                rank: 1
	            },
	            {
	                subjectName: "生物",
	                rank: 3
	            },
	            {
	                subjectName: "化学",
	                rank: 2
	            },
	            {
	                subjectName: "地理",
	                rank: 5
	            },
	            {
	                subjectName: "历史",
	                rank: 4
	            },
	            {
	                subjectName: "政治",
	                rank: 6
	            },
	            {
	                subjectName: "技术",
	                rank: 7
	            }
	        ],
	        subjectAbility: [
	            {
	                rank: 1,
	                subjectName: "历史",
	                percent: 0.0014814814814814814
	            },
	            {
	                rank: 5,
	                subjectName: "化学",
	                percent: 0.31555555555555553
	            },
	            {
	                rank: 2,
	                subjectName: "生物",
	                percent: 0.38666666666666666
	            },
	            {
	                rank: 4,
	                subjectName: "物理",
	                percent: 0.44296296296296295
	            },
	            {
	                rank: 3,
	                subjectName: "地理",
	                percent: 0.7585185185185185
	            },
	            {
	                rank: 7,
	                subjectName: "政治",
	                percent: 0.802962962962963
	            },
	            {
	                rank: 6,
	                subjectName: "技术",
	                percent: 0.8622222222222222
	            },
	        ],
	        chosenMajors: [
	            {
	                majorMLName: "生物工程",
	                majorMLID: "01"
	            },
	            {
	                majorMLName: "临床医学",
	                majorMLID: "02"
	            },
	            {
	                majorMLName: "机械设计与制造",
	                majorMLID: "03"
	            },
	        ]
	    },
	};
	postData = {
	    termID: "1"
	};
	//测评中心
	studentMockTemplateTemp[studentActionTypes.GET_STUDENT_CAREERSTATE] = {
	    status: 'success',
	    result: {
	        integralScore: 200,
	        assessCenter: {
	            assessInfo: [
	                {
	                    testTypeID: "holland",
	                    testTypeName: "职业兴趣测试",
	                    finished: true
	                },
	                {
	                    testTypeID: "MBTI",
	                    testTypeName: "职业性格测试",
	                    finished: false
	                },
	                {
	                    testTypeID: "multipleIntelligence",
	                    testTypeName: "多元智能",
	                    finished: false
	                },
	                {
	                    testTypeID: "values",
	                    testTypeName: "价值观",
	                    finished: true
	                }
	            ],
	        }
	    },
	};
	postData = {
	    termID: "1"
	};
	// 自我剖析获取
	studentMockTemplateTemp[studentActionTypes.GET_STUDENT_ANALYZEMYSELF] = {
	    status: 'success',
	    result: {
	        selfCharacterContent: "吃饭",
	        selfAdvantageContent: "" // 我的优势与不足
	    },
	};
	//自我剖析保存
	postData = {
	    termID: "1",
	    selfCharacterContent: "吃饭",
	    selfAdvantageContent: "没有来报到" // 我的优势与不足
	};
	studentMockTemplateTemp[studentActionTypes.SET_STUDENT_ANALYZEMYSELF] = {
	    status: 'success',
	};
	postData = {
	    termID: "1"
	};
	// textarea 编辑一次后不能修改 保存时提示   目标设定获取
	studentMockTemplateTemp[studentActionTypes.GET_STUDENT_TARGETSTATE] = {
	    status: 'success',
	    result: {
	        target: {
	            schoolTargetContent: "",
	            qualityTargetContent: "",
	        }
	    },
	};
	//目标设定保存
	postData = {
	    termID: "1",
	    schoolTargetContent: "24353",
	    qualityTargetContent: "435362"
	};
	studentMockTemplateTemp[studentActionTypes.SET_STUDENT_TARGETSTATE] = {
	    status: 'success',
	};
	studentMockTemplateTemp[studentActionTypes.GET_STUDENT_COMPROHENSIVEQUALITYCARDS] = {
	    status: 'success',
	    result: {
	        qualityRecords: [
	            {
	                eventCategoryType: "electiveCourse",
	                rootEventCategoryName: "选修课",
	                rootEventCategoryID: "01",
	                records: [
	                    {
	                        eventID: "01",
	                        eventHolderID: "01",
	                        eventHolderName: "汉语选修课",
	                        eventHolderType: "",
	                        qualityCategoryName: "限定性选修课",
	                        qualityCategoryID: "01",
	                        courseCredit: 3,
	                        examScore: 95,
	                        eventContent: "付出的受伤的通通都是你,自私的残忍的似乎只有我,可惜我并不难过,我仅存的失落，是再不怕寂寞",
	                        admire: {
	                            count: 20,
	                            isAdmired: false,
	                        },
	                        comments: [
	                            {
	                                commentID: "01",
	                                headImage: "vendor/images/tests/multipleIntelligence.png",
	                                userID: "0101",
	                                name: "冬天里的一把火",
	                                date: "09-25 09:30",
	                                commentContent: "你就像那一把火",
	                                admire: {
	                                    count: 20,
	                                    isAdmired: false,
	                                },
	                                subComments: [
	                                    {
	                                        commentID: "02",
	                                        headImage: "vendor/images/tests/holland.png",
	                                        fromUserID: "0102",
	                                        fromUserName: "艳阳天",
	                                        toUserID: "0101",
	                                        toUserName: "冬天里的一把火",
	                                        date: "09-25 09:30",
	                                        commentContent: "你是我的小苹果",
	                                        admire: {
	                                            count: 22,
	                                            isAdmired: true,
	                                        },
	                                    }
	                                ]
	                            }
	                        ],
	                    }
	                ],
	            },
	            {
	                eventCategoryType: "campusActivities",
	                rootEventCategoryName: "校内活动",
	                rootEventCategoryID: "02",
	                records: [
	                    {
	                        eventID: "01",
	                        eventHolderID: "01",
	                        eventHolderName: "校运动会",
	                        eventHolderType: "",
	                        qualityCategoryName: "运动技能与体育特长",
	                        qualityCategoryID: "02",
	                        eventContent: "想见的不见的都失去联络，剩下的多余的都不要再说，得到的已经太多，你安然去生活 ，我安静来存活",
	                        fromDate: "2015-10-01",
	                        toDate: "2015-10-02",
	                        pictures: [
	                            {
	                                pictureUrl: "vendor/images/tests/multipleIntelligence.png"
	                            },
	                            {
	                                pictureUrl: "vendor/images/tests/holland.png"
	                            },
	                            {
	                                pictureUrl: "vendor/images/tests/mbti.png"
	                            },
	                            {
	                                pictureUrl: "vendor/images/tests/values.png"
	                            }
	                        ],
	                        //todo 点赞只显示点赞数量
	                        admire: {
	                            count: 20,
	                            isAdmired: true,
	                        },
	                        //todo 双层 嵌套结构
	                        comments: [
	                            {
	                                commentID: "01",
	                                headImage: "vendor/images/tests/multipleIntelligence.png",
	                                userID: "0101",
	                                name: "冬天里的一把火",
	                                date: "09-25 09:30",
	                                commentContent: "你就像那一把火",
	                                admire: {
	                                    count: 20,
	                                    isAdmired: false,
	                                },
	                                subComments: [
	                                    {
	                                        commentID: "02",
	                                        headImage: "vendor/images/tests/holland.png",
	                                        fromUserID: "0102",
	                                        fromUserName: "艳阳天",
	                                        toUserID: "0101",
	                                        toUserName: "冬天里的一把火",
	                                        date: "09-25 09:30",
	                                        commentContent: "你是我的小苹果",
	                                        admire: {
	                                            count: 22,
	                                            isAdmired: true
	                                        },
	                                    }
	                                ]
	                            }
	                        ],
	                    },
	                    {
	                        eventID: "02",
	                        eventHolderID: "02",
	                        eventHolderName: "校运动会",
	                        eventHolderType: "",
	                        qualityCategoryName: "运动技能与体育特长",
	                        qualityCategoryID: "02",
	                        eventContent: "2333想见的不见的都失去联络，剩下的多余的都不要再说，得到的已经太多，你安然去生活 ，我安静来存活",
	                        fromDate: "2015-10-01",
	                        toDate: "2015-10-02",
	                        pictures: [
	                            {
	                                pictureUrl: "vendor/images/tests/multipleIntelligence.png"
	                            },
	                            {
	                                pictureUrl: "vendor/images/tests/holland.png"
	                            },
	                            {
	                                pictureUrl: "vendor/images/tests/mbti.png"
	                            },
	                            {
	                                pictureUrl: "vendor/images/tests/values.png"
	                            }
	                        ],
	                        //todo 点赞只显示点赞数量
	                        admire: {
	                            count: 20,
	                            isAdmired: true,
	                        },
	                        //todo 双层 嵌套结构
	                        comments: [
	                            {
	                                commentID: "01",
	                                headImage: "vendor/images/tests/multipleIntelligence.png",
	                                userID: "0101",
	                                name: "冬天里的一把火",
	                                date: "09-25 09:30",
	                                commentContent: "你就像那一把火",
	                                admire: {
	                                    count: 20,
	                                    isAdmired: false,
	                                },
	                                subComments: [
	                                    {
	                                        commentID: "02",
	                                        headImage: "vendor/images/tests/holland.png",
	                                        fromUserID: "0102",
	                                        fromUserName: "艳阳天",
	                                        toUserID: "0101",
	                                        toUserName: "冬天里的一把火",
	                                        date: "09-25 09:30",
	                                        commentContent: "你是我的小苹果",
	                                        admire: {
	                                            count: 22,
	                                            isAdmired: true
	                                        },
	                                    }
	                                ]
	                            }
	                        ],
	                    }
	                ],
	            },
	            {
	                eventCategoryType: "offCampusPractice",
	                rootEventCategoryName: "校外实践",
	                rootEventCategoryID: "03",
	                records: []
	            },
	            {
	                eventCategoryType: "studentOrgan",
	                rootEventCategoryName: "学生社团",
	                rootEventCategoryID: "04",
	                records: []
	            },
	            {
	                eventCategoryType: "researchLearning",
	                rootEventCategoryName: "研究性学习",
	                rootEventCategoryID: "05",
	                records: []
	            },
	            {
	                eventCategoryType: "serveAsPosition",
	                rootEventCategoryName: "担任职务",
	                rootEventCategoryID: "06",
	                records: []
	            },
	            {
	                eventCategoryType: "mySpecialty",
	                rootEventCategoryName: "我的特长",
	                rootEventCategoryID: "07",
	                records: []
	            },
	            {
	                eventCategoryType: "honoraryTitle",
	                rootEventCategoryName: "荣誉称号",
	                rootEventCategoryID: "08",
	                records: []
	            }
	        ]
	    },
	};
	//新增选修课
	postData = {
	    eventCategoryType: "1",
	    rootEventCategoryName: "选修课",
	    rootEventCategoryID: 2,
	    courseRecords: [
	        {
	            eventHolderType: "",
	            eventHolderID: "1",
	            eventHolderName: "化学选修课",
	            eventCategoryName: "限定性选修课",
	            eventCategoryID: 2,
	            examScore: 95,
	            eventContent: "",
	            //todo 上传结构
	            pictures: [
	                {
	                    pictureUrl: "/dd/1.jpg"
	                }
	            ]
	        }
	    ]
	};
	//获取新建获活动所需信息
	postData = {
	    eventCategoryType: "1",
	    rootEventCategoryID: 2,
	};
	studentMockTemplateTemp[studentActionTypes.GET_ELECTIVECOURSE_CATEGORY] = {
	    status: "success",
	    result: {
	        activityCategories: [
	            {
	                activityCategoryID: "01",
	                activityCategoryName: "文学"
	            },
	            {
	                activityCategoryID: "02",
	                activityCategoryName: "理学"
	            },
	            {
	                activityCategoryID: "03",
	                activityCategoryName: "工学"
	            },
	        ],
	        activityCategoryMap: {
	            "01": [
	                {
	                    eventHolderID: "01",
	                    eventHolderName: "汉语选修课",
	                    eventHolderType: "",
	                    integralScore: 20,
	                    qualityCategoryID: "01",
	                    qualityCategoryName: "限定性选修课"
	                },
	                {
	                    eventHolderID: "02",
	                    eventHolderName: "文言文选修课",
	                    eventHolderType: "",
	                    integralScore: 20,
	                    qualityCategoryID: "02",
	                    qualityCategoryName: "非限定性选修课"
	                }
	            ]
	        }
	    }
	};
	//新增活动记录
	postData = {
	    eventCategoryType: "1",
	    rootEventCategoryName: "选修课",
	    rootEventCategoryID: 2,
	    activityRecord: {
	        eventHolderType: "",
	        eventHolderID: "1",
	        eventHolderName: "运动会",
	        qualityCategoryName: "体育特长",
	        qualityCategoryID: 2,
	        fromDate: "",
	        toDate: "",
	        eventContent: "",
	        //todo 上传结构
	        pictures: [
	            {
	                pictureUrl: "/dd/1.jpg"
	            }
	        ]
	    }
	};
	//添加
	//修改 只传修改字段
	//上传图片 ajax 路径
	studentMockTemplateTemp[studentActionTypes.GET_STUDENT_LATESTVISITOR] = {
	    status: 'success',
	    result: {
	        latestVisitors: [
	            {
	                headImage: "/1.jpg",
	                name: "x",
	                userID: "1",
	                regionID: "",
	                schoolID: "",
	                className: "高一一班"
	            }
	        ]
	    },
	};
	postData = {
	    studentUserID: ""
	};
	studentMockTemplateTemp[studentActionTypes.GET_STUDENT_IMPRESSION] = {
	    status: 'success',
	    result: {
	        isVisible: false,
	        hasImpression: true,
	        impressions: ["乐于助人", "好好学习", "天天向上"]
	    },
	};
	//获取印象列表
	postData = {
	    schoolID: ""
	};
	studentMockTemplateTemp[studentActionTypes.SCHOOL_PROVIDED_IMPRESSIONS] = {
	    status: 'success',
	    result: {
	        schoolProvidedImpressions: [
	            {
	                impressionContent: "聪明能干",
	                impressionID: "01"
	            },
	            {
	                impressionContent: "乐于助人",
	                impressionID: "02"
	            },
	            {
	                impressionContent: "好好学习",
	                impressionID: "03"
	            },
	            {
	                impressionContent: "天天向上",
	                impressionID: "04"
	            },
	            {
	                impressionContent: "富有爱心",
	                impressionID: "05"
	            },
	            {
	                impressionContent: "一丝不苟",
	                impressionID: "06"
	            },
	            {
	                impressionContent: "长得漂亮",
	                impressionID: "07"
	            }
	        ]
	    }
	};
	//保存对同学的印象
	postData = {
	    impressedUserID: "",
	    impressions: [
	        {
	            impressionID: ""
	        }
	    ]
	};
	studentMockTemplateTemp[studentActionTypes.SET_STUDENT_IMPRESSIONS] = {
	    status: 'success',
	};
	exports.studentMockTemplate = studentMockTemplateTemp;


/***/ },
/* 418 */
/*!***************************************************!*\
  !*** ./test/mock/ajaxMock/TeacherMockTemplate.ts ***!
  \***************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var teacherActionTypes = __webpack_require__(/*! ../../../actions/TeacherPersonalPage/TeacherPersonalPageActionTypes */ 381);
	var teacherMockTemplateTemp = {};
	var postData = {};
	//todo 不同身份用户采用不同ajax
	teacherMockTemplateTemp[teacherActionTypes.READ_TEACHER_USERINFO] = {
	    "status": "success",
	    "result": {
	        "userID": "20150101",
	        "name": "小刘",
	        "systemID": "systemID01",
	        "classID": 1,
	        "className": "高一一班",
	        "gradeID": 1,
	        "gradeName": "高一",
	        "gender": 1,
	        stateMsg: "蹉跎错，消磨过，最是光阴化浮沫",
	        //最后一个为当前学期
	        passedTerms: [
	            {
	                termID: "1",
	                termName: "高一上学期",
	                termYear: "2015"
	            },
	            {
	                termID: "2",
	                termName: "高一下学期",
	                termYear: "2015"
	            },
	            {
	                termID: "3",
	                termName: "高二上学期",
	                termYear: "2016"
	            },
	            {
	                termID: "4",
	                termName: "高二下学期",
	                termYear: "2016"
	            }
	        ],
	    }
	};
	var studentUserInfo = {
	    "name": "小刘",
	    "systemID": "systemID01",
	    "classID": 1,
	    "className": "高一一班",
	    "gradeID": 1,
	    "gradeName": "高一",
	    "userID": "20150101",
	    "gender": 0,
	    stateMsg: "竹杖芒鞋轻胜马，天地苍茫任吾行"
	};
	var adminUserInfo = {
	    name: "",
	    systemID: "",
	    userID: "",
	    gender: -1,
	    stateMsg: "谢天地赠我逆境"
	};
	teacherMockTemplateTemp[teacherActionTypes.GET_TEACHER_CLASSMATELIST] = {
	    status: 'success',
	    result: {
	        students: [
	            {
	                name: "xili3",
	                headImage: "vendor/images/default-headpic.jpg",
	                userID: "123",
	            },
	            {
	                name: "xili4",
	                headImage: "vendor/images/default-headpic.jpg",
	                userID: "124",
	            },
	            {
	                name: "xili5",
	                headImage: "vendor/images/default-headpic.jpg",
	                userID: "125",
	            },
	            {
	                name: "xili6",
	                headImage: "vendor/images/default-headpic.jpg",
	                userID: "126",
	            }
	        ]
	    }
	};
	teacherMockTemplateTemp[teacherActionTypes.GET_TEACHER_RANKSTATE] = {
	    status: 'success',
	    result: {
	        rankState: {
	            classAvgIntegralScore: 500,
	            gradeIntegralRank: 100
	        }
	    }
	};
	teacherMockTemplateTemp[teacherActionTypes.GET_TEACHER_CLASSNOTIFICATION] = {
	    status: 'success',
	    result: {
	        notifications: [
	            {
	                notificationID: "01",
	                notificationContent: "lala",
	                modifiedTime: "2016-10-10 02:10:10"
	            }
	        ]
	    }
	};
	postData = {
	    notificationContent: "haha",
	    fromUserID: "",
	};
	teacherMockTemplateTemp[teacherActionTypes.SET_TEACHER_CLASSNOTIFICATION] = {
	    status: 'success',
	};
	postData = {
	    notificationID: "",
	};
	teacherMockTemplateTemp[teacherActionTypes.DELETE_TEACHER_CLASSNOTIFICATION] = {
	    status: 'success',
	};
	postData = {
	    dataUserID: ""
	};
	teacherMockTemplateTemp[teacherActionTypes.GET_TEACHER_RANKINCLASS] = {
	    status: 'success',
	    result: {
	        rankInClass: [
	            {
	                userID: "u01",
	                name: "xili",
	                integralScore: 200
	            }
	        ]
	    }
	};
	//READ_TEACHER_ACTIVITY => READ_TEACHER_CLASSACTIVITY
	teacherMockTemplateTemp[teacherActionTypes.READ_TEACHER_ACTIVITY] = {
	    status: 'success',
	    result: {
	        classActivityInfoList: [
	            {
	                stuClassActivityID: "",
	                stuClassActivityTheme: "hehe",
	                fromDate: "2016-10-10",
	                toDate: "2016-10-12",
	                stuClassActivityTarget: "kk",
	                stuClassActivityPlan: "kdkd",
	                relatedFiles: [
	                    {
	                        uploadFileName: "",
	                        uploadFileID: "",
	                        uploadFileUrl: ""
	                    }
	                ],
	            }
	        ]
	    }
	};
	//上传请求 限制大小5m，数量，大小
	//
	postData = {
	    classActivity: {
	        teacherUserID: "1",
	        stuClassActivityTheme: "hehe",
	        fromDate: "2016-10-10",
	        toDate: "2016-10-12",
	        stuClassActivityTarget: "kk",
	        stuClassActivityPlan: "kdkd",
	        relatedFiles: [
	            {
	                uploadFileName: "",
	                uploadFileID: "",
	                uploadFileUrl: ""
	            }
	        ],
	    }
	};
	teacherMockTemplateTemp[teacherActionTypes.SAVE_TEACHER_ACTIVITY] = {
	    status: 'success',
	};
	postData = {
	    classActivityID: "01"
	};
	teacherMockTemplateTemp[teacherActionTypes.DELETE_TEACHER_ACTIVITY] = {
	    status: 'success',
	};
	teacherMockTemplateTemp[teacherActionTypes.READ_TEACHER_STUDENTPERFORMANCE_RECORD] = {
	    status: 'success',
	    result: {
	        studentPerformances: [
	            {
	                studentPerformanceID: "01",
	                studentUserID: "u",
	                name: "xiaoli",
	                performanceLevelID: "",
	                performanceLevelName: "",
	                performanceDate: "2016-10-10",
	                performanceTypeID: "",
	                performanceTypeName: "",
	                content: "kaka",
	                teacherUserID: "01",
	                pictures: [
	                    {
	                        pictureUrl: ""
	                    }
	                ]
	            }
	        ]
	    }
	};
	//添加学生表现前 获取表现所需的列表
	postData = {};
	teacherMockTemplateTemp[teacherActionTypes.READ_TEACHER_STUDENTPERFORMANCEOPTIONS] = {
	    status: "success",
	    result: {
	        performanceLevels: [
	            {
	                performanceLevelID: "1",
	                performanceLevelName: "ff",
	            }
	        ],
	        performanceTypes: [
	            {
	                performanceTypeID: "2",
	                performanceTypeName: "gg",
	            }
	        ]
	    }
	};
	postData = {
	    studentPerformance: {
	        studentUserID: "u",
	        name: "xiaoli",
	        performanceLevelID: "",
	        performanceLevelName: "",
	        performanceDate: "2016-10-10",
	        performanceTypeID: "",
	        performanceTypeName: "",
	        content: "kaka",
	        teacherUserID: "01",
	        pictures: [
	            {
	                pictureUrl: ""
	            }
	        ]
	    }
	};
	teacherMockTemplateTemp[teacherActionTypes.SAVE_TEACHER_STUDENTPERFORMANCE_RECORD] = {
	    status: 'success',
	    result: {
	        studentPerformanceID: "01",
	    }
	};
	postData = {
	    studentPerformanceID: "01",
	};
	teacherMockTemplateTemp[teacherActionTypes.DELETE_TEACHER_STUDENTPERFORMANCE_RECORD] = {
	    status: 'success',
	};
	teacherMockTemplateTemp[teacherActionTypes.READ_TEACHER_SPECIALSTUDENT] = {
	    status: 'success',
	    result: {
	        specialStudents: [
	            {
	                name: "xili3",
	                headImage: "vendor/images/default-headpic.jpg",
	                userID: "123",
	            }
	        ]
	    }
	};
	postData = {
	    specialStudents: [
	        {
	            userID: "1",
	        }
	    ]
	};
	teacherMockTemplateTemp[teacherActionTypes.CREATE_TEACHER_SPECIALSTUDENT] = {
	    status: 'success',
	};
	postData = {
	    specialStudents: [
	        {
	            userID: "1",
	        }
	    ]
	};
	teacherMockTemplateTemp[teacherActionTypes.DELETE_TEACHER_SPECIALSTUDENT] = {
	    status: 'success',
	};
	postData = {
	    specialStudentUserID: "1"
	};
	teacherMockTemplateTemp[teacherActionTypes.READ_TEACHER_SPECIALSTUDENT_RECORD] = {
	    status: 'success',
	    result: {
	        specialStudentRecords: [
	            {
	                specialStudentRecordID: "01",
	                recordDate: "2016-10-10",
	                reason: "情况缘由123123",
	                analysis: "个体分析123123",
	                talkRecord: "谈话记录123123",
	                parentCommunication: "家校沟通123123",
	                achievement: "达成效果,我能说不好吗",
	                teacherUserID: "02"
	            },
	            {
	                specialStudentRecordID: "02",
	                recordDate: "2016-10-10",
	                reason: "情况缘由2",
	                analysis: "个体分析2",
	                talkRecord: "谈话记录2",
	                parentCommunication: "家校沟通2",
	                achievement: "达成效果,我能说不好吗",
	                teacherUserID: "03"
	            }
	        ]
	    }
	};
	postData = {
	    specialStudentRecord: {
	        specialStudentRecordID: "01",
	        datetime: "2016-10-10 02:10:10",
	        reason: "haha",
	        analysis: "",
	        talkRecord: "",
	        parentCommunication: "",
	        achievement: "",
	        teacherUserID: ""
	    }
	};
	teacherMockTemplateTemp[teacherActionTypes.SAVE_TEACHER_SPECIALSTUDENT_RECORD] = {
	    status: 'success',
	};
	postData = {
	    specialStudentRecordID: "01",
	};
	teacherMockTemplateTemp[teacherActionTypes.DELETE_TEACHER_SPECIALSTUDENT_RECORD] = {
	    status: 'success',
	};
	postData = {
	    schoolTerm: "",
	    fromUserID: "1"
	};
	teacherMockTemplateTemp[teacherActionTypes.GET_TEACHER_EVALUATESTUDENT_STAR] = {
	    status: 'success',
	    result: {
	        evaluateStudentByScores: [
	            {
	                studentUserID: "1",
	                name: "1",
	                headImage: "vendor/images/default-headpic.jpg",
	                qualityEvaluationFinished: true,
	                qualityEvaluations: [
	                    {
	                        qualityCategoryName: "品德表现",
	                        qualityCategoryID: "1",
	                        evaluationScore: 1
	                    },
	                    {
	                        qualityCategoryName: "创新实践",
	                        qualityCategoryID: "2",
	                        evaluationScore: 2
	                    },
	                    {
	                        qualityCategoryName: "运动健康",
	                        qualityCategoryID: "3",
	                        evaluationScore: 3
	                    },
	                    {
	                        qualityCategoryName: "艺术素养",
	                        qualityCategoryID: "4",
	                        evaluationScore: 4
	                    }
	                ]
	            },
	            {
	                studentUserID: "2",
	                name: "2",
	                headImage: "vendor/images/default-headpic.jpg",
	                qualityEvaluationFinished: false,
	                qualityEvaluations: [
	                    {
	                        qualityCategoryName: "品德表现",
	                        qualityCategoryID: "1",
	                        evaluationScore: 1
	                    },
	                    {
	                        qualityCategoryName: "创新实践",
	                        qualityCategoryID: "2",
	                        evaluationScore: 2
	                    },
	                    {
	                        qualityCategoryName: "运动健康",
	                        qualityCategoryID: "3",
	                        evaluationScore: 3
	                    },
	                    {
	                        qualityCategoryName: "艺术素养",
	                        qualityCategoryID: "4",
	                        evaluationScore: 4
	                    }
	                ]
	            }
	        ]
	    }
	};
	postData = {
	    termID: "",
	    teacherUserID: "02",
	    evaluateStudentUserID: "01",
	    qualityEvaluations: [
	        {
	            qualityCategoryName: "",
	            qualityCategoryID: "",
	            evaluationScore: ""
	        }
	    ]
	};
	teacherMockTemplateTemp[teacherActionTypes.SET_TEACHER_EVALUATESTUDENT_STAR] = {
	    status: 'success',
	};
	postData = {
	    termID: 1,
	    evaluateStudentUserID: "",
	};
	teacherMockTemplateTemp[teacherActionTypes.GET_TEACHER_TERMEVALUATE] = {
	    status: 'success',
	    //todo 有改动
	    result: {
	        termOverallEvaluation: {
	            //termOverallEvaluationID:"",//没有用到 去掉
	            termOverallEvaluationContent: ""
	        },
	        stuTermQualityEvaluations: [
	            {
	                rootQualityCategoryID: "1",
	                rootQualityCategoryName: "品德表现",
	                stuTermQualityEvaluation: [
	                    {
	                        /*evaluationItemID:"1",
	                        evaluationItemContent:"爱祖国",*/
	                        qualityCategoryID: "1",
	                        qualityCategoryName: "品德操守",
	                    },
	                    {
	                        /* evaluationItemID:"2",
	                         evaluationItemContent:"有责任",*/
	                        qualityCategoryID: "2",
	                        qualityCategoryName: "责任义务",
	                    }
	                ]
	            },
	            {
	                rootQualityCategoryID: "2",
	                rootQualityCategoryName: "创新实践",
	                stuTermQualityEvaluation: [
	                    {
	                        /* evaluationItemID:"1",
	                         evaluationItemContent:"爱研究",*/
	                        qualityCategoryID: "1",
	                        qualityCategoryName: "研究性学习成果",
	                    },
	                    {
	                        /*  evaluationItemID:"2",
	                          evaluationItemContent:"能操作",*/
	                        qualityCategoryID: "2",
	                        qualityCategoryName: "实验及技术操作能力",
	                    }
	                ]
	            }
	        ],
	    }
	};
	//使用老师管理学生评语处请求，获取评价学生选项列表，前台需要处理为树形结构
	postData = {
	    teacherUserID: ""
	};
	teacherMockTemplateTemp[teacherActionTypes.GET_TEACHER_STUTERMQUALITYEVALUATIONITEMS] = {
	    status: "",
	    result: {
	        evaluateStudentDict: [
	            {
	                rootQualityCategoryID: "1",
	                rootQualityCategoryName: "品德表现",
	                evaluationItems: [
	                    {
	                        evaluationItemID: "1",
	                        evaluationItemContent: "爱祖国",
	                        qualityCategoryID: "1",
	                        qualityCategoryName: "品德操守",
	                    },
	                    {
	                        evaluationItemID: "2",
	                        evaluationItemContent: "有责任",
	                        qualityCategoryID: "2",
	                        qualityCategoryName: "责任义务",
	                    }
	                ]
	            },
	            {
	                rootQualityCategoryID: "2",
	                rootQualityCategoryName: "创新实践",
	                evaluationItems: [
	                    {
	                        evaluationItemID: "1",
	                        evaluationItemContent: "爱研究",
	                        qualityCategoryID: "1",
	                        qualityCategoryName: "研究性学习成果",
	                    },
	                    {
	                        evaluationItemID: "2",
	                        evaluationItemContent: "能操作",
	                        qualityCategoryID: "2",
	                        qualityCategoryName: "实验及技术操作能力",
	                    }
	                ]
	            }
	        ]
	    }
	};
	//此处为评价学生---综合评价---学期整体评价提交  -actionTypes = SET_TEACHER_TERMEVALUATE
	postData = {
	    studentUserID: "",
	    teacherUserID: "",
	    termID: 1,
	    termOverallEvaluation: {
	        //termOverallEvaluationID:"",//没有用到 去掉
	        termOverallEvaluationContent: ""
	    },
	    stuTermQualityEvaluations: [
	        {
	            rootQualityCategoryID: "1",
	            rootQualityCategoryName: "品德表现",
	            stuTermQualityEvaluation: [
	                {
	                    evaluationItemID: "1",
	                    qualityCategoryID: "1",
	                    qualityCategoryName: "品德操守",
	                }
	            ]
	        },
	        {
	            rootQualityCategoryID: "2",
	            rootQualityCategoryName: "创新实践",
	            stuTermQualityEvaluation: [
	                {
	                    evaluationItemID: "1",
	                    qualityCategoryID: "1",
	                    qualityCategoryName: "研究性学习成果",
	                }
	            ]
	        }
	    ],
	}; //全传
	teacherMockTemplateTemp[teacherActionTypes.SET_TEACHER_TERMEVALUATE] = {
	    status: 'success',
	};
	//月度总结 --  保存评语
	postData = {
	    studentUserID: "1",
	    year: 2015,
	    month: 4,
	    teacherUserID: "",
	    teacherMonthSummaryEvaluation: {
	        evaluationContent: "" //没有评语 传递空字符串
	    }
	};
	teacherMockTemplateTemp[teacherActionTypes.SET_TEACHER_MONTHEVALUATE] = {
	    status: 'success',
	};
	teacherMockTemplateTemp[teacherActionTypes.GET_TEACHER_STUDENTMONTHSUMMARY] = {
	    status: 'success',
	};
	teacherMockTemplateTemp[teacherActionTypes.READ_TEACHER_EVALUATESTUDENTDICT] = {
	    status: 'success',
	    result: {
	        evaluateStudentDict: [
	            {
	                rootQualityCategoryID: "1",
	                rootQualityCategoryName: "品德表现",
	                evaluationItems: [
	                    {
	                        evaluationItemID: "1",
	                        evaluationItemContent: "1爱祖国",
	                        qualityCategoryID: "1",
	                        qualityCategoryName: "品德操守",
	                    },
	                    {
	                        evaluationItemID: "2",
	                        evaluationItemContent: "品德表现爱人民",
	                        qualityCategoryID: "1",
	                        qualityCategoryName: "品德操守",
	                    },
	                    {
	                        evaluationItemID: "3",
	                        evaluationItemContent: "1乐于助人",
	                        qualityCategoryID: "2",
	                        qualityCategoryName: "为人",
	                    }
	                ]
	            },
	            {
	                rootQualityCategoryID: "2",
	                rootQualityCategoryName: "创新实践",
	                evaluationItems: [
	                    {
	                        evaluationItemID: "1",
	                        evaluationItemContent: "研究成果爱钻研",
	                        qualityCategoryID: "1",
	                        qualityCategoryName: "2思想",
	                    },
	                    {
	                        evaluationItemID: "2",
	                        evaluationItemContent: "研究成果爱研究",
	                        qualityCategoryID: "2",
	                        qualityCategoryName: "2实践活动",
	                    }
	                ]
	            },
	            {
	                rootQualityCategoryID: "3",
	                rootQualityCategoryName: "责任义务",
	                evaluationItems: [
	                    {}
	                ]
	            }
	        ]
	    }
	};
	//添加、修改调用同一个，evaluationItemID不同
	postData = {
	    evaluationItemContent: "爱祖国",
	    rootQualityCategoryID: "1",
	    qualityCategoryID: "1",
	    qualityCategoryName: "品德操守",
	    teacherUserID: "",
	    evaluationItemID: ""
	};
	teacherMockTemplateTemp[teacherActionTypes.SAVE_TEACHER_REVIEWWORD] = {
	    status: 'success',
	    result: {
	        evaluationItemID: ""
	    }
	};
	postData = {
	    evaluationItemID: "",
	};
	teacherMockTemplateTemp[teacherActionTypes.DELETE_TEACHER_REVIEWWORD] = {
	    status: 'success',
	};
	teacherMockTemplateTemp[teacherActionTypes.GET_TEACHER_MODULECONFIG] = {
	    status: "success",
	    result: {
	        moduleList: [
	            {
	                moduleID: "classActivity",
	                moduleName: ""
	            },
	            {
	                moduleID: "studentPerformance",
	                moduleName: ""
	            },
	            {
	                moduleID: "classNotification",
	                moduleName: ""
	            },
	            {
	                moduleID: "specialStudent",
	                moduleName: ""
	            },
	            {
	                moduleID: "rankInClass",
	                moduleName: ""
	            },
	            {
	                moduleID: "evaluateStudent",
	                moduleName: ""
	            },
	            {
	                moduleID: "reviewWordsManagement",
	                moduleName: ""
	            }
	        ]
	    }
	};
	exports.teacherMockTemplate = teacherMockTemplateTemp;


/***/ },
/* 419 */
/*!**************************************************!*\
  !*** ./test/mock/ajaxMock/CommonMockTemplate.ts ***!
  \**************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var commonActionTypes = __webpack_require__(/*! ../../../actions/CommonAction/CommonActionTypes */ 399);
	/**
	 * 共用的请求
	 */
	var commonMockTemplateTemp = {};
	var postData = {};
	postData = {
	    targetUserID: "user01"
	};
	commonMockTemplateTemp[commonActionTypes.ADD_COMMON_VISITRECORD] = {
	    status: 'success',
	    result: {}
	};
	postData = {
	    queryUserID: ""
	};
	commonMockTemplateTemp[commonActionTypes.GET_COMMON_OTHERUSERREGIONSCHOOLINFO] = {
	    status: "success",
	    result: {
	        regionID: "1",
	        schoolID: "2",
	    }
	};
	// 通知
	// 2个请求 获取动态 获取userEventSubID后的动态
	postData = {
	    eventNums: "",
	    fromUserEventSubID: "",
	};
	commonMockTemplateTemp[commonActionTypes.GET_COMMON_ACTIVITIES] = {
	    status: 'success',
	    result: {
	        followingEvents: [
	            {
	                userEventSubID: "",
	                eventCategoryType: "electiveCourse",
	                rootEventCategoryName: "校内活动",
	                rootEventCategoryID: 2,
	                eventID: "1",
	                userID: "",
	                name: "",
	                headImage: "",
	                modifiedTime: "",
	                eventHolderID: "1",
	                eventHolderName: "校运动会",
	                eventHolderType: "",
	                qualityCategoryName: "运动技能与体育特长",
	                qualityCategoryID: 2,
	                eventContent: "",
	                fromDate: "2015-10-01",
	                toDate: "2015-10-02",
	                pictures: [
	                    {
	                        pictureUrl: "/img/1.jpg"
	                    }
	                ],
	                admire: {
	                    count: 20,
	                    isAdmired: false,
	                },
	                comments: [
	                    {
	                        commentID: "01",
	                        headImage: "vendor/images/tests/1.png",
	                        userID: "0101",
	                        name: "冬天里的一把火",
	                        date: "09-25 09:30",
	                        commentContent: "你就像那一把火",
	                        admire: {
	                            count: 20,
	                            isAdmired: false,
	                        },
	                        subComments: [
	                            {
	                                commentID: "02",
	                                headImage: "vendor/images/tests/holland.png",
	                                fromUserID: "0102",
	                                fromUserName: "艳阳天",
	                                toUserID: "0101",
	                                toUserName: "冬天里的一把火",
	                                date: "09-25 09:30",
	                                commentContent: "你是我的小苹果",
	                                admire: {
	                                    count: 20,
	                                    isAdmired: false
	                                },
	                            }
	                        ]
	                    }
	                ],
	            }
	        ]
	    }
	};
	postData = {
	    targetUserID: "" //此同学的社交属性，有可能是自己
	};
	commonMockTemplateTemp[commonActionTypes.GET_COMMON_SOCIALINFO] = {
	    status: 'success',
	    result: {
	        followingUserCount: 50,
	        followedUserCount: 100,
	        relationState: "0",
	    }
	};
	// 取消关注 关注
	// 举报动态
	postData = {
	    cancelFollowingUserID: "123",
	};
	commonMockTemplateTemp[commonActionTypes.SET_COMMON_CANCELFOLLOWED] = {
	    status: 'success'
	};
	postData = {
	    followingUserID: "123",
	};
	commonMockTemplateTemp[commonActionTypes.SET_COMMON_BECOMEFOLLOWER] = {
	    status: 'success',
	    result: {
	        relationState: "1" //返回状态信息 有可能是已关注 或者互相关注
	    }
	};
	postData = {
	    eventID: "event1"
	};
	var likeActivity = {
	    status: 'success'
	};
	postData = {
	    commentedEventID: "",
	    commentedUserID: "",
	    replyToComment: "",
	    commentContent: "",
	};
	commonMockTemplateTemp[commonActionTypes.SET_COMMON_COMMENT] = {
	    status: "success",
	    result: {}
	};
	//举报二期
	postData = {
	    eventID: "a01",
	    reasonName: "不和谐",
	    reasonID: "reason01",
	};
	var reportActivity = {
	    status: 'success'
	};
	//通知 假设消息类型固定三种 通知 评论 赞
	commonMockTemplateTemp[commonActionTypes.GET_COMMON_NOTIFICATIONS] = {
	    status: "success",
	    result: {
	        notifications: [
	            {
	                notificationTypeID: "",
	                fromUserInfo: {
	                    name: "",
	                    userID: "",
	                    headImage: ""
	                },
	                notificationTime: "",
	                notificationContent: ""
	            }
	        ]
	    }
	};
	var newMsgOnEvent = {
	    status: "success",
	    result: {
	        eventsHasNewMsg: [
	            {}
	        ]
	    }
	};
	postData = {
	    commentedEventID: "",
	    commentedUserID: "",
	    replyToComment: "",
	    commentContent: "admire",
	};
	commonMockTemplateTemp[commonActionTypes.SET_COMMON_LIKE] = {
	    status: "success",
	    result: {}
	};
	//文件上传
	postData = {
	    uploadFiles: [
	        {
	            moduleID: "",
	            fileType: "",
	            fileName: ""
	        }
	    ]
	};
	var uploadResponse = {
	    status: "success",
	    result: {
	        files: [
	            {
	                fileName: "",
	                fileUrl: ""
	            }
	        ]
	    }
	};
	//籍贯列表
	commonMockTemplateTemp[commonActionTypes.GET_COMMON_NATIVEPLACEINFO] = {
	    nativePlaceProvinces: [
	        {
	            nativePlaceProvinceID: "1",
	            nativePlaceProvinceName: "北京"
	        }
	    ],
	    nativePlaceProvinceCityMap: {
	        1: [
	            {
	                nativePlaceCityID: "",
	                nativePlaceCityName: ""
	            }
	        ]
	    }
	};
	postData = {
	    targetUserID: ""
	};
	//用户基本信息
	commonMockTemplateTemp[commonActionTypes.GET_COMMON_SELFUSERINFO] = {
	    status: "success",
	    result: {
	        "userID": "20150101",
	        "name": "小刘",
	        "systemID": "systemID01",
	        "classID": 1,
	        "className": "高一一班",
	        "gradeID": 1,
	        "gradeName": "高一",
	        "gender": 1,
	        stateMsg: "蹉跎错，消磨过，最是光阴化浮沫",
	        headImage: "",
	        birthDay: "",
	        email: "",
	        nativePlaceProvinceID: "",
	        nativePlaceProvinceName: "",
	        NativePlaceCityID: "",
	        NativePlaceCityName: "",
	        backgroundImage: ""
	    }
	};
	//设置基本信息
	postData = {
	    targetUserID: "20150101",
	    "gender": 1,
	    stateMsg: "蹉跎错，消磨过，最是光阴化浮沫",
	    headImage: "",
	    birthDay: "",
	    email: "",
	    nativePlaceProvinceID: "",
	    NativePlaceCityID: "",
	    backgroundImage: ""
	};
	commonMockTemplateTemp[commonActionTypes.SET_COMMON_SELFUSERINFO] = {
	    status: "success",
	    result: {}
	};
	//设置密码
	postData = {
	    newPwd: ""
	};
	commonMockTemplateTemp[commonActionTypes.SET_COMMON_PASSWORD] = {
	    status: "success",
	    result: {}
	};
	var changePasswordFailResponse = {
	    status: "fail",
	    result: {
	        msg: ""
	    }
	};
	//提交建议
	postData = {
	    adviceContent: ""
	};
	commonMockTemplateTemp[commonActionTypes.SET_COMMON_ADVICE] = {
	    status: "success",
	    result: {}
	};
	//我的粉丝
	var myFans = {
	    status: "success",
	    result: {
	        //关注我的
	        followedUsers: [
	            {
	                headImage: "",
	                name: "明1",
	                userID: "123",
	                className: "高一一班",
	                regionID: "2",
	                schoolID: "123",
	                relationState: 0,
	            }
	        ]
	    }
	};
	//我关注的人
	var myFollowings = {
	    status: "success",
	    result: {
	        //我关注的
	        followingUsers: [
	            {
	                headImage: "",
	                name: "明2",
	                userID: "1231",
	                className: "高一一班",
	                regionID: "2",
	                schoolID: "123",
	                relationState: 1,
	            }
	        ],
	    }
	};
	//获取未读通知和消息数
	var newMsgCountResponse = {
	    status: "success",
	    result: {
	        reminds: [
	            {
	                userInfo: {
	                    name: "习大大",
	                    className: "高三三班",
	                    userID: "u001",
	                },
	                operate: "follow",
	                date: ""
	            }
	        ],
	        notifications: [
	            {
	                notificationID: "n01",
	                notificationContext: "123"
	            }
	        ],
	        events: [
	            {
	                admiredUsers: [
	                    {}
	                ],
	                commentedUsers: [
	                    {}
	                ],
	                event: {
	                    userEventSubID: "",
	                    eventCategoryType: "electiveCourse",
	                    rootEventCategoryName: "校内活动",
	                    rootEventCategoryID: 2,
	                    eventID: "1",
	                    userID: "",
	                    name: "",
	                    headImage: "",
	                    modifiedTime: "",
	                    eventHolderID: "1",
	                    eventHolderName: "校运动会",
	                    eventHolderType: "",
	                    qualityCategoryName: "运动技能与体育特长",
	                    qualityCategoryID: 2,
	                    eventContent: "",
	                    fromDate: "2015-10-01",
	                    toDate: "2015-10-02",
	                    pictures: [
	                        {
	                            pictureUrl: "/img/1.jpg"
	                        }
	                    ],
	                    //点赞只显示点赞数量
	                    admire: {
	                        count: 20,
	                        isAdmired: false,
	                    },
	                    //双层 结构
	                    comments: [
	                        {
	                            commentID: "01",
	                            headImage: "vendor/images/tests/1.png",
	                            userID: "0101",
	                            name: "冬天里的一把火",
	                            date: "09-25 09:30",
	                            commentContent: "你就像那一把火",
	                            admire: {
	                                count: 20,
	                                isAdmired: false,
	                            },
	                            subComments: [
	                                {
	                                    commentID: "02",
	                                    headImage: "vendor/images/tests/holland.png",
	                                    fromUserID: "0102",
	                                    fromUserName: "艳阳天",
	                                    toUserID: "0101",
	                                    toUserName: "冬天里的一把火",
	                                    date: "09-25 09:30",
	                                    commentContent: "你是我的小苹果",
	                                    admire: {
	                                        count: 20,
	                                        isAdmired: false
	                                    },
	                                }
	                            ]
	                        }
	                    ],
	                }
	            }
	        ]
	    }
	};
	//将消息标记为已读, 将新传未读的ID列表传回或者传回列表中最后一条ID 或时间
	postData = {
	    notifications: [
	        {
	            notificationID: "n01"
	        }
	    ],
	    events: [
	        {
	            eventID: "e01"
	        }
	    ]
	};
	var setMsgReadState = {
	    status: "success",
	    result: {}
	};
	exports.commonMockTemplate = commonMockTemplateTemp;


/***/ },
/* 420 */
/*!********************************************************!*\
  !*** ./test/mock/ajaxMock/TermAnalysisMockTemplate.ts ***!
  \********************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var termAnalysisActionTypes = __webpack_require__(/*! actions/TermAnalysis/TermAnalysisActionTypes */ 401);
	var termAnalysisMockTemplateTemp = {};
	var postData = {};
	var getStudentModuleConfig = {
	    status: "",
	    result: {
	        moduleList: [
	            {
	                moduleID: "",
	                moduleName: ""
	            }
	        ]
	    }
	};
	postData = {
	    dataUserID: ""
	};
	termAnalysisMockTemplateTemp[termAnalysisActionTypes.GET_STUDENT_RANKINCLASS] = {
	    status: 'success',
	    result: {
	        rankInClass: [
	            {
	                name: "小明",
	                integralScore: "33",
	                userID: "01"
	            },
	            {
	                name: "小谭",
	                integralScore: "343",
	                userID: "02"
	            },
	            {
	                name: "小猪",
	                integralScore: "390",
	                userID: "03"
	            },
	            {
	                name: "小魏",
	                integralScore: "500",
	                userID: "04"
	            },
	            {
	                name: "小王",
	                integralScore: "390",
	                userID: "05"
	            },
	        ]
	    },
	};
	termAnalysisMockTemplateTemp[termAnalysisActionTypes.GET_STUDENT_INTEGRALSCORERECORD] = {
	    status: 'success',
	    result: {
	        integralScores: [
	            {
	                month: "9",
	                year: "2013",
	                basicIntegralScore: 30,
	                totalIntegralScore: 30
	            },
	            {
	                month: "10",
	                year: "2013",
	                basicIntegralScore: 90,
	                totalIntegralScore: 50
	            },
	            {
	                month: "11",
	                year: "2013",
	                basicIntegralScore: 80,
	                totalIntegralScore: 20
	            },
	            {
	                month: "12",
	                year: "2013",
	                basicIntegralScore: 22,
	                totalIntegralScore: 80
	            },
	            {
	                month: "9",
	                year: "2013",
	                basicIntegralScore: 30,
	                totalIntegralScore: 30
	            },
	            {
	                month: "10",
	                year: "2013",
	                basicIntegralScore: 90,
	                totalIntegralScore: 50
	            },
	            {
	                month: "11",
	                year: "2013",
	                basicIntegralScore: 80,
	                totalIntegralScore: 20
	            },
	            {
	                month: "12",
	                year: "2013",
	                basicIntegralScore: 22,
	                totalIntegralScore: 80
	            },
	            {
	                month: "12",
	                year: "2014",
	                basicIntegralScore: 60,
	                totalIntegralScore: 90
	            },
	            {
	                month: "9",
	                year: "2014",
	                basicIntegralScore: 20,
	                totalIntegralScore: 38
	            },
	            {
	                month: "10",
	                year: "2014",
	                basicIntegralScore: 20,
	                totalIntegralScore: 30
	            },
	            {
	                month: "11",
	                year: "2014",
	                basicIntegralScore: 60,
	                totalIntegralScore: 39
	            },
	            {
	                month: "9",
	                year: "2015",
	                basicIntegralScore: 50,
	                totalIntegralScore: 70
	            },
	        ]
	    },
	};
	postData = {
	    yearMonths: [
	        {
	            month: "",
	            year: ""
	        }
	    ],
	    studentUserID: ""
	};
	termAnalysisMockTemplateTemp[termAnalysisActionTypes.GET_STUDENT_MONTHSUMMARY] = {
	    "status": "success",
	    "result": {
	        "monthSummaryInfos": [
	            {
	                "year": "2016",
	                "month": "1",
	                "summaryTitle": "自我剖析",
	                "schoolMonthThemeInfo": {
	                    "monthTheme": "慧心之希望月",
	                    "content": "1. 很容易看到生活光明、轻松一面，认为生活充满乐趣和有趣的事；2.乐观面对一切事物，以积极心态看待现实生活，有价值感，生活学习不无聊；"
	                },
	                "stuSummaryInfos": [
	                    {
	                        "schoolSummaryTitle": {
	                            "schoolSummaryTitleID": "1",
	                            "summaryTitle": "举例说明自己的现状并打分",
	                            "summaryLimit": "50",
	                            "summaryHint": "如实填写",
	                            "integralScore": "100",
	                        },
	                        "stuSummaryContentInfo": { "summaryContent": "" }
	                    },
	                    {
	                        "schoolSummaryTitle": {
	                            "schoolSummaryTitleID": 2,
	                            "summaryTitle": "改进措施",
	                            "summaryLimit": 25,
	                            "summaryHint": "如实填写1",
	                            "integralScore": 50,
	                        },
	                        "stuSummaryContentInfo": { "summaryContent": "改进措施内容" }
	                    }
	                ],
	                teacherMonthSummaryEvaluation: {
	                    evaluationContent: "" //没有评语 传递空字符串
	                }
	            }
	        ]
	    },
	    "page": null,
	    "code": 0,
	    "errorMessage": null
	};
	postData = {
	    month: 1,
	    year: 2,
	    schoolSummaryTitleID: 1,
	    summaryContent: ""
	};
	termAnalysisMockTemplateTemp[termAnalysisActionTypes.SET_STUDENT_MONTHSUMMARY] = {
	    status: 'success',
	};
	postData = {
	    termID: 1
	};
	termAnalysisMockTemplateTemp[termAnalysisActionTypes.GET_STUDENT_SEMESTERSUMMARY] = {
	    status: 'success',
	    result: {
	        termAnalysisInfos: {
	            "schoolSummaryTitle": {
	                "schoolSummaryTitleID": "1",
	                "summaryTitle": "举例说明自己的现状并打分",
	                "summaryLimit": "50",
	                "summaryHint": "如实填写",
	                "integralScore": "100",
	            },
	            "stuSummaryContentInfo": { "summaryContent": "" }
	        },
	        termQualitySummaryInfos: [
	            {
	                "schoolSummaryTitle": {
	                    "qualityCategoryID": "1",
	                    "qualityCategoryName": "品德操守",
	                    "summaryLimit": "50",
	                    "summaryHint": "如实填写",
	                    "integralScore": "100",
	                },
	                "stuSummaryContentInfo": { "summaryContent": "" }
	            },
	        ]
	    },
	};
	postData = {
	    termID: 1,
	    qualityCategoryID: 1,
	    content: ""
	};
	postData = {
	    termID: 1,
	    schoolSummaryTitleID: 1,
	    content: ""
	};
	termAnalysisMockTemplateTemp[termAnalysisActionTypes.SET_STUDENT_SEMESTERSUMMARY] = {
	    status: 'success',
	    result: {},
	};
	postData = {
	    termID: "",
	    studentUserID: ""
	};
	termAnalysisMockTemplateTemp[termAnalysisActionTypes.GET_STUDENT_TEACHEREVALUATE] = {
	    status: 'success',
	    result: {
	        teacherTermEvaluation: {
	            evaluationContent: "",
	            qualityEvaluationFinished: true,
	            qualityEvaluations: [
	                {
	                    qualityCategoryName: "品德表现",
	                    qualityCategoryID: "01",
	                    evaluationScore: "3"
	                },
	                {
	                    qualityCategoryName: "运动健康",
	                    qualityCategoryID: "02",
	                    evaluationScore: "2"
	                },
	                {
	                    qualityCategoryName: "创新实践",
	                    qualityCategoryID: "03",
	                    evaluationScore: "2.5"
	                },
	                {
	                    qualityCategoryName: "艺术素养",
	                    qualityCategoryID: "04",
	                    evaluationScore: "5"
	                }
	            ]
	        }
	    },
	};
	termAnalysisMockTemplateTemp[termAnalysisActionTypes.GET_STUDENT_SCORE] = {
	    status: 'success',
	    result: {
	        exam: [
	            {
	                examID: 0,
	                examType: "加权后",
	                readonly: true
	            }, {
	                examID: 1,
	                examType: "期中考试",
	                examDate: "2015-10-11"
	            }, {
	                examID: 2,
	                examType: "加权后",
	                examDate: "2015-10-11"
	            }
	        ],
	        usualExamScore: [
	            {
	                examID: 0,
	                examType: "期中考试",
	                examDate: "2015-10-11",
	                examScore: [
	                    {
	                        subject: "物理",
	                        score: 80,
	                        schoolRank: 30,
	                    },
	                    {
	                        subject: "化学",
	                        score: 10,
	                        schoolRank: 20,
	                    },
	                    {
	                        subject: "生物",
	                        score: 80,
	                        schoolRank: 10,
	                    },
	                    {
	                        subject: "地理",
	                        score: 80,
	                        schoolRank: 1,
	                    },
	                    {
	                        subject: "历史",
	                        score: 80,
	                        schoolRank: 8,
	                    },
	                    {
	                        subject: "政治",
	                        score: 80,
	                        schoolRank: 7,
	                    },
	                    {
	                        subject: "技术",
	                        score: 80,
	                        schoolRank: 30,
	                    }, {
	                        subject: "语文",
	                        score: 20,
	                        schoolRank: 9,
	                    }, {
	                        subject: "数学",
	                        score: 40,
	                        schoolRank: 20,
	                    },
	                    {
	                        subject: "英语",
	                        score: 80,
	                        schoolRank: 90,
	                    }
	                ]
	            },
	            {
	                examID: 2,
	                examType: "加权后",
	                examDate: "2015-10-11",
	                examScore: [
	                    {
	                        subject: "物理",
	                        score: 80,
	                        schoolRank: 30,
	                    },
	                    {
	                        subject: "化学",
	                        score: 10,
	                        schoolRank: 20,
	                    },
	                    {
	                        subject: "生物",
	                        score: 80,
	                        schoolRank: 10,
	                    },
	                    {
	                        subject: "地理",
	                        score: 80,
	                        schoolRank: 1,
	                    },
	                    {
	                        subject: "历史",
	                        score: 80,
	                        schoolRank: 8,
	                    },
	                    {
	                        subject: "政治",
	                        score: 80,
	                        schoolRank: 7,
	                    },
	                    {
	                        subject: "技术",
	                        score: 80,
	                        schoolRank: 30,
	                    }, {
	                        subject: "语文",
	                        score: 20,
	                        schoolRank: 9,
	                    }, {
	                        subject: "数学",
	                        score: 40,
	                        schoolRank: 20,
	                    },
	                    {
	                        subject: "英语",
	                        score: 80,
	                        schoolRank: 90,
	                    }
	                ]
	            }
	        ]
	    },
	};
	termAnalysisMockTemplateTemp[termAnalysisActionTypes.GET_STUDENT_COMPREHENSIVEQUALITYRECORD] = {
	    status: 'success',
	    result: {},
	};
	postData = {
	    termID: ""
	};
	termAnalysisMockTemplateTemp[termAnalysisActionTypes.GET_EVALUATE_STUDENT_STAR] = {
	    status: 'success',
	    result: {
	        evaluationToClassmates: [
	            {
	                name: "小明",
	                studentUserID: "01",
	                headImage: "vendor/images/default-headpic.jpg",
	                qualityEvaluationFinished: false,
	                qualityEvaluations: [
	                    {
	                        qualityCategoryName: "品德表现",
	                        qualityCategoryID: "01",
	                        evaluationScore: "3"
	                    },
	                    {
	                        qualityCategoryName: "运动健康",
	                        qualityCategoryID: "02",
	                        evaluationScore: "2"
	                    },
	                    {
	                        qualityCategoryName: "创新实践",
	                        qualityCategoryID: "03",
	                        evaluationScore: "2.5"
	                    },
	                    {
	                        qualityCategoryName: "艺术素养",
	                        qualityCategoryID: "04",
	                        evaluationScore: "5"
	                    }
	                ]
	            },
	            {
	                name: "小花",
	                studentUserID: "02",
	                headImage: "vendor/images/default-headpic.jpg",
	                qualityEvaluationFinished: false,
	                qualityEvaluations: [
	                    {
	                        qualityCategoryName: "品德表现",
	                        qualityCategoryID: "01",
	                        evaluationScore: "3"
	                    },
	                    {
	                        qualityCategoryName: "运动健康",
	                        qualityCategoryID: "02",
	                        evaluationScore: "2"
	                    },
	                    {
	                        qualityCategoryName: "创新实践",
	                        qualityCategoryID: "03",
	                        evaluationScore: "2.5"
	                    },
	                    {
	                        qualityCategoryName: "艺术素养",
	                        qualityCategoryID: "04",
	                        evaluationScore: "5"
	                    }
	                ]
	            },
	            {
	                name: "小谭",
	                studentUserID: "03",
	                headImage: "vendor/images/default-headpic.jpg",
	                qualityEvaluationFinished: true,
	                qualityEvaluations: [
	                    {
	                        qualityCategoryName: "品德表现",
	                        qualityCategoryID: "01",
	                        evaluationScore: "3"
	                    },
	                    {
	                        qualityCategoryName: "运动健康",
	                        qualityCategoryID: "02",
	                        evaluationScore: "2"
	                    },
	                    {
	                        qualityCategoryName: "创新实践",
	                        qualityCategoryID: "03",
	                        evaluationScore: "2.5"
	                    },
	                    {
	                        qualityCategoryName: "艺术素养",
	                        qualityCategoryID: "04",
	                        evaluationScore: "5"
	                    }
	                ]
	            },
	            {
	                name: "小猪",
	                studentUserID: "04",
	                headImage: "vendor/images/default-headpic.jpg",
	                qualityEvaluationFinished: false,
	                qualityEvaluations: [
	                    {
	                        qualityCategoryName: "品德表现",
	                        qualityCategoryID: "01",
	                        evaluationScore: "3"
	                    },
	                    {
	                        qualityCategoryName: "运动健康",
	                        qualityCategoryID: "02",
	                        evaluationScore: "2"
	                    },
	                    {
	                        qualityCategoryName: "创新实践",
	                        qualityCategoryID: "03",
	                        evaluationScore: "2.5"
	                    },
	                    {
	                        qualityCategoryName: "艺术素养",
	                        qualityCategoryID: "04",
	                        evaluationScore: "5"
	                    }
	                ]
	            }
	        ]
	    },
	};
	//我的得分
	postData = {
	    termID: ""
	};
	termAnalysisMockTemplateTemp[termAnalysisActionTypes.GET_EVALUATE_STUDENT_MYSELF_STAR] = {
	    status: "success",
	    evaluationFromClassmates: {
	        qualityEvaluationToClassmatesFinished: true,
	        qualityEvaluations: [
	            {
	                qualityCategoryName: "品德表现",
	                qualityCategoryID: "01",
	                evaluationScore: "3.5"
	            },
	            {
	                qualityCategoryName: "运动健康",
	                qualityCategoryID: "02",
	                evaluationScore: "2"
	            },
	            {
	                qualityCategoryName: "创新实践",
	                qualityCategoryID: "03",
	                evaluationScore: "4.5"
	            },
	            {
	                qualityCategoryName: "艺术素养",
	                qualityCategoryID: "04",
	                evaluationScore: "5"
	            }
	        ]
	    }
	};
	exports.termAnalysisMockTemplate = termAnalysisMockTemplateTemp;


/***/ },
/* 421 */
/*!****************************************************!*\
  !*** ./test/mock/ajaxMock/MajorLibMockTemplate.ts ***!
  \****************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var majorLibActionTypes = __webpack_require__(/*! ../../../actions/MajorLib/MajorLibActionTypes */ 366);
	var postData = {};
	var majorLibMockTemplateTemp = {};
	majorLibMockTemplateTemp[majorLibActionTypes.GET_MAJORLIB_MAJORLIB] = {
	    status: 'success',
	    result: {
	        majorType: [
	            {
	                majorTypeName: "本科专业",
	                majorTypeID: "1",
	            },
	            {
	                majorTypeName: "高职专业",
	                majorTypeID: "2",
	            }
	        ],
	        majorType2CategoryMap: {
	            "1": [
	                {
	                    majorCategoryID: "01",
	                    //majorCategoryName: "哲学"
	                    majorCategoryName: "医案推荐"
	                },
	            ],
	            "2": []
	        },
	        majorCategory2MLMap: {
	            "01": [
	                {
	                    majorMLID: "0101",
	                    majorMLName: "哲学类"
	                }
	            ],
	            "02": [
	                {
	                    majorMLID: "0201",
	                    majorMLName: "经济学类"
	                },
	                {
	                    majorMLID: "0202",
	                    majorMLName: "财政学类"
	                },
	                {
	                    majorMLID: "0203",
	                    majorMLName: "金融学类"
	                },
	                {
	                    majorMLID: "0204",
	                    majorMLName: "经济与贸易类"
	                }
	            ]
	        },
	        majorML2SubMajorMLMap: {
	            "0101": [
	                {
	                    fatherMajorMLID: "0101",
	                    subMajorMLID: "010101",
	                    gender: "男",
	                    subMajorMLName: "清热利湿、化瘀散结治疗肝癌、门静脉高压症",
	                    subMajortitle: "男性患者 65岁",
	                    subMajorSum: "肝癌属肝胆湿热、气血瘀滞证，治以茵陈蒿汤和甘露消毒丹加减，清热利湿、化瘀散结",
	                },
	                //{
	                //    subMajorMLID: "010102",
	                //    gender: "女",
	                //    subMajorMLName: "清化湿热、疏肝和胃治疗十二指肠球部溃疡",
	                //    subMajortitle:"女性患者 38岁",
	                //    subMajorSum:"患妇产后腹痛，涩脉似枕而轻，以龙胆泻肝汤引之",
	                //},
	                {
	                    subMajorMLID: "010102",
	                    gender: "NULL",
	                    subMajorMLName: "NULL",
	                    subMajortitle: "NULL",
	                    subMajorSum: "NULL",
	                },
	                {
	                    subMajorMLID: "010103",
	                    subMajorMLName: "NULL",
	                    subMajorSum: "",
	                },
	                {
	                    subMajorMLID: "010104",
	                    subMajorMLName: "NULL",
	                    subMajorSum: "",
	                }
	            ],
	        }
	    }
	};
	//本科
	postData = {
	    subMajorMLID: "",
	};
	//majorLibMockTemplateTemp[majorLibActionTypes.GET_MAJORLIB_MAJORDETAIL]
	majorLibMockTemplateTemp[majorLibActionTypes.GET_MAJORLIB_MAJORDETAIL] = {
	    status: 'success',
	    result: {
	        subMajorMLID: "010102",
	        introductions: [
	            {
	                introductionID: "",
	                //introductionKey:"授予学位",
	                introductionKey: "患者年龄",
	                //introductionValue:"哲学学士",
	                introductionValue: "65",
	                introductionGender: "男",
	                introductionType: "1",
	            },
	            {
	                introductionID: "",
	                //introductionKey:"修学年限",
	                //introductionValue:"四年",
	                introductionKey: "是否初诊",
	                introductionValue: "是",
	                introductionType: "2",
	            },
	            {
	                introductionID: "",
	                //introductionKey:"专业解读",
	                introductionKey: "提要",
	                introductionValue: "肝癌属肝胆湿热、气血瘀滞证，治以茵陈蒿汤和甘露消毒丹加减，清热利湿、化瘀散结。",
	                introductionType: "3",
	            },
	            {
	                introductionID: "",
	                //introductionKey:"核心教程",
	                introductionKey: "处方",
	                introductionValue: "茵陈 30g，栀子（焦）10g，大黄15g，豆蔻10g，广藿香10g，滑石粉10g（包煎），木通8g，黄芩10g，浙贝母10g，射干10g，丹参15g，赤芍15g，川芎10g，当归10g，桃仁10g，红花10g，莪术8g，甘草6g。4剂，水煎服，一日一剂，分两次温服。。",
	                introductionType: "3",
	            },
	            {
	                introductionID: "",
	                //introductionKey:"专业排名",
	                introductionKey: "按语",
	                introductionValue: "一般说来，胁痛初病在气，由肝郁气滞、气机不畅而致胁痛。气为血帅，气行则血行，故气滞日久，血行不畅，其病变由气滞转为血瘀，或气滞血瘀并见。气滞日久，易于化火伤阴；因饮食所伤，肝胆湿热，所致之胁痛，日久亦可耗伤阴津，皆可致肝阴耗伤，脉络失养，而转为虚证或虚实夹杂证。",
	                introductionType: "4",
	            }
	        ],
	    },
	};
	//高职
	postData = {
	    subMajorMLID: ""
	};
	//  majorLibMockTemplateTemp[majorLibActionTypes.GET_MAJORLIB_MAJORDETAIL] =
	var gao = {
	    status: 'success',
	    result: {
	        subMajorMLID: "010102",
	        introductions: [
	            {
	                introductionID: "",
	                introductionKey: "修学年限",
	                introductionValue: "三年",
	                introductionType: "1",
	            },
	            {
	                introductionID: "",
	                introductionKey: "专业解读",
	                introductionValue: "茶艺专业是为适应我国市场经济建设的需要，有计划地培养茶文化工作者、茶艺工作和茶企业经营管理、茶叶市场营销人才而设置的。",
	                introductionType: "3",
	            },
	            {
	                introductionID: "",
	                introductionKey: "核心课程",
	                introductionValue: "中国茶文化学  中国茶俗  茶道历史   茶艺学  茶艺馆实用英语  茶企业经营与管理  茶叶保健学  茶树栽培  茶叶加工与品评  茶具鉴赏 茶艺冲泡技巧  茶艺表演与编创  消费心理学  茶叶市场营销  职业形象与社交礼仪  文学欣赏  音乐欣赏  美术欣赏  表达与沟通  英语听说（外教授课）  形体训练  古筝等。",
	                introductionType: "3",
	            },
	            {
	                introductionKey: "就业前景",
	                introductionValue: "1、茶艺专业学生可在全国高档茶艺馆从事茶艺师、领班、经理等岗位工作，实习实训期间综合收入不低于1500元/月；",
	                introductionType: "3",
	            }
	        ],
	    }
	};
	exports.majorLibMockTemplate = majorLibMockTemplateTemp;


/***/ },
/* 422 */
/*!**************************************************!*\
  !*** ./test/mock/ajaxMock/SearchMockTemplate.ts ***!
  \**************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var searchActionTypes = __webpack_require__(/*! ../../../actions/Search/SearchActionTypes */ 373);
	var searchMockTemplateTemp = {};
	var postData = {};
	postData = {
	    keyword: "二狗"
	};
	searchMockTemplateTemp[searchActionTypes.GET_SEARCH_PERSONALINFOLIST] = {
	    status: "success",
	    result: {
	        searchResult: [
	            {
	                userID: "004",
	                name: "家浩厉害",
	                headImage: "vendor/images/default-headpic.jpg",
	                classID: "001",
	                className: "二班",
	                grade: "002",
	                gradeName: "高二",
	                gender: "男",
	                stateMsg: "世界上最遥远的距离不是生与死，而是你亲手制造的BUG就在你眼前，你却怎么都找不到她。。。 ",
	                relationState: "2",
	            },
	            {
	                userID: "001",
	                name: "赵老师",
	                headImage: "vendor/images/default-headpic.jpg",
	                classID: "001",
	                className: "一班",
	                grade: "003",
	                gradeName: "高三",
	                gender: "男",
	                stateMsg: "真的勇士，敢于直面惨淡的warning、敢于正视淋漓的error。",
	                relationState: "2",
	            },
	            {
	                userID: "002",
	                name: "卢老师",
	                headImage: "vendor/images/default-headpic.jpg",
	                classID: "002",
	                className: "二班",
	                grade: "002",
	                gradeName: "高二",
	                gender: "男",
	                stateMsg: "千行代码，Bug何处藏。 纵使上线又怎样，朝令改，夕断肠。",
	                relationState: "1",
	            },
	            {
	                userID: "003",
	                name: "成老师",
	                headImage: "vendor/images/default-headpic.jpg",
	                classID: "001",
	                className: "三班",
	                grade: "001",
	                gradeName: "高一",
	                gender: "男",
	                stateMsg: "Keyboard not found … press F1 to continue",
	                relationState: "0",
	            }
	        ]
	    },
	};
	//获取搜索结果筛选项的内容
	searchMockTemplateTemp[searchActionTypes.GET_SEARCH_OPTIONS] = {
	    status: "success",
	    result: {
	        gradeOptions: [
	            { label: '高一', value: '1' },
	            { label: '高二', value: '2' },
	            { label: '高三', value: '3' },
	        ],
	    }
	};
	exports.searchMockTemplate = searchMockTemplateTemp;


/***/ },
/* 423 */
/*!*****************************************************!*\
  !*** ./test/mock/ajaxMock/AdminPageMockTemplate.ts ***!
  \*****************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var adminPageActionTypes = __webpack_require__(/*! ../../../actions/AdminPage/AdminPageActionTypes */ 382);
	var adminPageMockTemplateTemp = {};
	adminPageMockTemplateTemp[adminPageActionTypes.READ_ADMIN_USERINFO] = {
	    "status": "success",
	    "result": {
	        name: "",
	        systemID: "",
	        userID: "",
	        gender: -1,
	        stateMsg: "竹杖芒鞋轻胜马，天地苍茫任吾行"
	    }
	};
	//获取学校结构及学期信息 管理员
	adminPageMockTemplateTemp[adminPageActionTypes.GET_ADMIN_TERMWITHGRADEYEARSTRUCT] = {
	    status: 'success',
	    result: {
	        schoolStruct: {
	            grades: [
	                {
	                    grade: "2015",
	                    gradeName: "高一"
	                },
	                {
	                    grade: "2014",
	                    gradeName: "高二"
	                },
	                {
	                    grade: "2013",
	                    gradeName: "高三"
	                }
	            ],
	            gradeClassMap: {
	                2015: [
	                    { classID: "0101", className: "高一一班" },
	                    { classID: "0102", className: "高一二班" },
	                    { classID: "0103", className: "高一三班" },
	                    { classID: "0104", className: "高一四班" },
	                    { classID: "0105", className: "高一五班" },
	                    { classID: "0106", className: "高一六班" },
	                    { classID: "0107", className: "高一七班" },
	                    { classID: "0108", className: "高一八班" },
	                    { classID: "0109", className: "高一九班" },
	                ],
	                2014: [
	                    { classID: "0201", className: "高二一班" },
	                    { classID: "0202", className: "高二二班" },
	                    { classID: "0203", className: "高二三班" },
	                    { classID: "0204", className: "高二四班" },
	                    { classID: "0205", className: "高二五班" },
	                    { classID: "0206", className: "高二六班" },
	                    { classID: "0207", className: "高二七班" },
	                    { classID: "0208", className: "高二八班" },
	                    { classID: "0209", className: "高二九班" },
	                ],
	                2013: [
	                    { classID: "0301", className: "高三一班" },
	                    { classID: "0302", className: "高三二班" },
	                    { classID: "0303", className: "高三三班" },
	                    { classID: "0304", className: "高三四班" },
	                    { classID: "0305", className: "高三五班" },
	                    { classID: "0306", className: "高三六班" },
	                    { classID: "0307", className: "高三七班" },
	                    { classID: "0308", className: "高三八班" },
	                    { classID: "0309", className: "高三九班" },
	                ]
	            },
	            //学期与年级有关，与班级无关，历史学期
	            gradeTermMap: {
	                2014: [
	                    {
	                        termID: "1",
	                        termName: "2014-15上学期"
	                    },
	                    {
	                        termID: "2",
	                        termName: "2014-15下学期"
	                    },
	                    {
	                        termID: "3",
	                        termName: "2015-16上学期"
	                    },
	                    {
	                        termID: "4",
	                        termName: "2015-16下学期"
	                    }
	                ],
	                2013: [
	                    {
	                        termID: "1",
	                        termName: "2013-14上学期"
	                    },
	                    {
	                        termID: "2",
	                        termName: "2013-14下学期"
	                    },
	                    {
	                        termID: "3",
	                        termName: "2014-15上学期"
	                    },
	                    {
	                        termID: "4",
	                        termName: "2014-15下学期"
	                    }
	                ],
	                2015: [
	                    {
	                        termID: "1",
	                        termName: "2015-16上学期"
	                    },
	                    {
	                        termID: "2",
	                        termName: "2015-16下学期"
	                    },
	                    {
	                        termID: "3",
	                        termName: "2016-17上学期"
	                    },
	                    {
	                        termID: "4",
	                        termName: "2016-17下学期"
	                    }
	                ]
	            }
	        }
	    }
	};
	adminPageMockTemplateTemp[adminPageActionTypes.GET_ADMIN_SCHOOLACCOUNTSTATISTIC] = {
	    status: 'success',
	    result: {
	        schoolAccountStatistic: {
	            studentAccountCount: 93,
	            teacherAccountCount: 22
	        }
	    },
	};
	adminPageMockTemplateTemp[adminPageActionTypes.READ_ADMIN_MANAGERCOUNT] = {
	    status: 'success',
	    result: {
	        teacherAccounts: [
	            {
	                roleID: "SchoolAdmin",
	                roleType: "校级管理员",
	                department: {
	                    school: "10000"
	                },
	                name: "田老师",
	                systemID: "201518",
	                teacherUserID: "150001",
	                gender: "0",
	                tel: "13812345678"
	            },
	            {
	                roleID: "GradeAdmin",
	                roleType: "年级管理员",
	                department: {
	                    school: "10000",
	                    "grades": [
	                        {
	                            "grade": "2015",
	                            "gradeName": "高一",
	                            "classes": [
	                                {
	                                    classID: "0101",
	                                    className: "高一一班"
	                                }
	                            ]
	                        }
	                    ]
	                },
	                name: "田田老师",
	                systemID: "201519",
	                teacherUserID: "150002",
	                gender: "0",
	                tel: "13912345678"
	            }
	        ],
	    },
	};
	var postData = {};
	postData = {
	    accountList: [
	        {
	            roleInfo: [
	                {
	                    roleID: "gradeAdmin",
	                    department: [
	                        {
	                            school: "10000",
	                            grade: "2015"
	                        },
	                        {
	                            school: "10000",
	                            grade: "2016"
	                        }
	                    ]
	                }, {
	                    roleID: "schoolAdmin",
	                    department: [
	                        {
	                            school: "10000"
	                        }
	                    ]
	                }
	            ],
	            pwd: "111111",
	            gender: "0",
	            name: "田田田老师",
	            systemID: "201520",
	            tel: "14012345678"
	        }
	    ]
	};
	adminPageMockTemplateTemp[adminPageActionTypes.CREATE_ADMIN_MANAGERCOUNT] = {
	    status: 'success',
	    result: {
	        accountList: [
	            {
	                systemID: "",
	                userID: ""
	            }
	        ]
	    },
	};
	var CREATE_ADMIN_MANAGERCOUNT_ResponseFail = {
	    status: "fail",
	    errorInfo: {
	        errorMsg: "",
	        errorData: [
	            {
	                operate: "Create",
	                accountList: [
	                    {
	                        name: "田田田老师",
	                        systemID: "201520"
	                    }
	                ]
	            }, {
	                operate: "Remove",
	                accountList: [
	                    {
	                        name: "田田田老师",
	                        systemID: "201520",
	                        teacherUserID: "150001"
	                    }
	                ]
	            }
	        ]
	    }
	};
	postData = {
	    accountList: [
	        {
	            roleInfo: [
	                {
	                    oldRole: {
	                        roleID: "gradeAdmin",
	                        department: [
	                            {
	                                school: "10000",
	                                grade: "2015"
	                            }
	                        ]
	                    },
	                    newRole: {
	                        roleID: "gradeAdmin",
	                        department: [
	                            {
	                                school: "10000",
	                                grade: "2016"
	                            }
	                        ]
	                    }
	                },
	                {
	                    oldRole: {
	                        roleID: "gradeAdmin",
	                        department: [
	                            {
	                                school: "10000",
	                                grade: "2015"
	                            }
	                        ]
	                    },
	                    newRole: {
	                        roleID: "gradeAdmin",
	                        department: [
	                            {
	                                school: "10000",
	                                grade: "2016"
	                            }
	                        ]
	                    }
	                }
	            ],
	            password: "111111",
	            gender: "0",
	            name: "田田田老师",
	            systemID: "201520",
	            tel: "14012345678",
	            teacherUserID: "150001"
	        }
	    ]
	};
	adminPageMockTemplateTemp[adminPageActionTypes.UPDATE_ADMIN_MANAGERCOUNT] = {
	    status: 'success',
	    result: {},
	};
	postData = {
	    accountList: [
	        {
	            teacherUserID: "150001",
	            roleInfo: [
	                {
	                    roleID: "gradeAdmin",
	                    department: [
	                        {
	                            school: "10000",
	                            grade: "2015"
	                        },
	                        {
	                            school: "10000",
	                            grade: "2016"
	                        }
	                    ]
	                }
	            ]
	        }
	    ]
	};
	adminPageMockTemplateTemp[adminPageActionTypes.DELETE_ADMIN_MANAGERCOUNT] = {
	    status: 'success',
	    result: {},
	};
	adminPageMockTemplateTemp[adminPageActionTypes.READ_ADMIN_STUDENTACCOUNT] = {
	    status: 'success',
	    result: {
	        studentAccount: [
	            {
	                systemID: "13457786357",
	                name: "胡彦斌",
	                classID: "0103",
	                className: "高一三班",
	                grade: "2015",
	                gradeName: "高一",
	                userID: "03"
	            },
	            {
	                systemID: "13337786357",
	                name: "张三",
	                classID: "0103",
	                className: "高一三班",
	                grade: "2015",
	                gradeName: "高一",
	                userID: "04"
	            }
	        ]
	    },
	};
	postData = {
	    students: [
	        {
	            systemID: "201518",
	            grade: "1",
	            stuClass: "1",
	            name: "小绿",
	            gender: "1",
	            password: "111111"
	        }
	    ]
	};
	adminPageMockTemplateTemp[adminPageActionTypes.CREATE_ADMIN_STUDENTACCOUNT] = {
	    status: 'success',
	    result: {
	        createdStudentUserIDList: [
	            {
	                studentUserID: "15001"
	            }
	        ]
	    },
	};
	postData = {
	    // 可以更改密码，和名字，
	    students: [
	        {
	            studentUserID: "15001",
	            systemID: "201518",
	            grade: "1",
	            stuClass: "1",
	            name: "小绿",
	            gender: "1",
	            password: "111111"
	        }
	    ]
	};
	adminPageMockTemplateTemp[adminPageActionTypes.UPDATE_ADMIN_STUDENTACCOUNT] = {
	    status: 'success',
	    result: {},
	};
	postData = {
	    studentUserID: "15001",
	};
	adminPageMockTemplateTemp[adminPageActionTypes.DELETE_ADMIN_STUDENTACCOUNT] = {
	    status: 'success',
	    result: {},
	};
	//筛选条件 从其他已有接口获取
	adminPageMockTemplateTemp[adminPageActionTypes.READ_ADMIN_EXAMINFO] = {
	    status: 'success',
	    result: {
	        examInfos: [
	            {
	                examID: "1",
	                examName: "12月月考",
	                termID: "1",
	                termName: "2015-2016第一学期",
	                grade: "2015",
	                gradeName: "高一",
	                recordUploaded: true,
	            }
	        ]
	    },
	};
	//todo 上传成绩 优先级很低 暂时不做
	//成绩删除不做，新建只建名字
	postData = {
	    examInfo: [
	        {
	            examName: "",
	            termID: "",
	            termName: "",
	            grade: "",
	            gradeName: "",
	            recordUploaded: true,
	        }
	    ]
	};
	adminPageMockTemplateTemp[adminPageActionTypes.CREATE_ADMIN_EXAMINFO] = {
	    status: 'success',
	    result: {
	        exams: [
	            {
	                examID: ""
	            }
	        ]
	    },
	};
	postData = {
	    examInfo: [
	        {
	            examID: "",
	            examName: "",
	            termID: "",
	            termName: "",
	            grade: "",
	            gradeName: "",
	            recordUploaded: true,
	        }
	    ]
	};
	adminPageMockTemplateTemp[adminPageActionTypes.UPDATE_ADMIN_EXAMINFO] = {
	    status: 'success',
	    result: {},
	};
	postData = {
	    exams: [
	        {
	            examID: ""
	        }
	    ]
	};
	adminPageMockTemplateTemp[adminPageActionTypes.DELETE_ADMIN_EXAMINFO] = {
	    status: 'success',
	    result: {},
	};
	postData = {
	    uploadFile: {
	        fileName: ""
	    }
	};
	adminPageMockTemplateTemp[adminPageActionTypes.UPLOAD_ADMIN_EXAMSCORE] = {
	    status: 'success',
	    result: {
	        fileUrl: ""
	    },
	};
	//年份列表，从2016 至今年
	postData = {
	    yearMonths: [
	        {
	            year: "",
	            month: ""
	        }
	    ]
	};
	adminPageMockTemplateTemp[adminPageActionTypes.GET_ADMIN_MONTHTHEME] = {
	    status: 'success',
	    result: {
	        monthThemes: [
	            {
	                month: "",
	                year: "",
	                yearName: "",
	                schoolMonthThemeInfo: {
	                    "monthTheme": "慧心之希望月",
	                    "content": "1. 很容易看到生活光明、轻松一面，认为生活充满乐趣和有趣的事；2.乐观面对一切事物，以积极心态看待现实生活，有价值感，生活学习不无聊；"
	                },
	            }
	        ],
	    },
	};
	postData = {
	    month: "",
	    year: "",
	    schoolMonthThemeInfo: {
	        monthTheme: "慧心之希望月",
	        content: "1. 很容易看到生活光明、轻松一面，认为生活充满乐趣和有趣的事；2.乐观面对一切事物，以积极心态看待现实生活，有价值感，生活学习不无聊；"
	    },
	};
	adminPageMockTemplateTemp[adminPageActionTypes.SET_ADMIN_MONTHTHEME] = {
	    status: 'success',
	    result: {},
	};
	//todo
	var qualityCategoryDictResponse = {
	    status: 'success',
	    result: {
	        qualityCategoryDict: [
	            {
	                rootQualityCategoryID: "1",
	                rootQualityCategoryName: "品德表现",
	                evaluationItems: [
	                    {
	                        qualityCategoryID: "1",
	                        qualityCategoryName: "品德操守",
	                    },
	                    {
	                        qualityCategoryID: "2",
	                        qualityCategoryName: "责任义务",
	                    }
	                ]
	            }
	        ],
	    }
	};
	postData = {
	    eventCategoryType: ["Course", "Investigation"]
	};
	//三种合并为一个请求，eventCategoryType 只是请求参数不同 课程库["Course","Investigation"] ，活动和社团["Activity","Club"],特长荣誉 职务["Honor Skill Position"]
	adminPageMockTemplateTemp[adminPageActionTypes.READ_ADMIN_EVENTHOLDER] = {
	    status: 'success',
	    result: {
	        eventLib: [
	            {
	                rootEventCategoryName: "选修课",
	                rootEventCategoryID: "01",
	                eventCategoryType: "Course",
	                //每一种名称是否可以统一为 项目名称
	                eventHolders: [
	                    {
	                        eventHolderID: "1",
	                        eventHolderName: "化学选修课",
	                        positionTypeName: "",
	                        positionTypeID: "",
	                        rootQualityCategoryID: "1",
	                        rootQualityCategoryName: "品德表现",
	                        qualityCategoryID: "2",
	                        qualityCategoryName: "责任义务",
	                    }
	                ],
	            },
	            {
	                rootEventCategoryName: "实验课",
	                rootEventCategoryID: "02",
	                eventCategoryType: "Course",
	                //每一种名称是否可以统一为 项目名称
	                eventHolders: [
	                    {
	                        eventHolderID: "1",
	                        eventHolderName: "化学实验课",
	                        positionTypeName: "",
	                        positionTypeID: "",
	                        rootQualityCategoryID: "1",
	                        rootQualityCategoryName: "品德表现",
	                        qualityCategoryID: "2",
	                        qualityCategoryName: "责任义务",
	                    }
	                ],
	            },
	            {
	                rootEventCategoryName: "研究性学习",
	                rootEventCategoryID: "03",
	                eventCategoryType: "Investigation",
	                //每一种名称是否可以统一为 项目名称
	                eventHolders: [
	                    {
	                        eventHolderID: "1",
	                        eventHolderName: "化学研究",
	                        positionTypeName: "",
	                        positionTypeID: "",
	                        rootQualityCategoryID: "1",
	                        rootQualityCategoryName: "品德表现",
	                        qualityCategoryID: "2",
	                        qualityCategoryName: "责任义务",
	                    }
	                ],
	            }
	        ],
	    },
	};
	postData = {
	    eventHolders: [
	        {
	            eventHolderName: "化学选修课",
	            eventCategoryType: "",
	            positionTypeID: "",
	            rootEventCategoryID: "",
	            rootQualityCategoryID: "1",
	            qualityCategoryID: "2",
	        }
	    ]
	};
	adminPageMockTemplateTemp[adminPageActionTypes.CREATE_ADMIN_EVENTHOLDER] = {
	    status: 'success',
	    result: {
	        eventHolders: [
	            {
	                eventHolderID: ""
	            }
	        ]
	    },
	};
	postData = {
	    eventHolders: [
	        {
	            eventHolderID: "1",
	            eventHolderName: "化学选修课",
	            positionTypeID: "",
	            rootEventCategoryID: "",
	            eventCategoryType: "",
	            rootQualityCategoryID: "1",
	            qualityCategoryID: "2",
	        }
	    ]
	};
	adminPageMockTemplateTemp[adminPageActionTypes.UPDATE_ADMIN_EVENTHOLDER] = {
	    status: 'success',
	    result: {},
	};
	postData = {
	    courses: [
	        {
	            eventHolderID: "1",
	            eventCategoryType: "",
	            rootEventCategoryID: "",
	        }
	    ]
	};
	adminPageMockTemplateTemp[adminPageActionTypes.DELETE_ADMIN_EVENTHOLDER] = {
	    status: 'success',
	    result: {},
	};
	//todo 印象词类别列表在学生处是否有显示 选择时页面
	//todo
	var kkd = {
	    result: {
	        schoolProvidedImpressionTypes: [
	            {
	                impressionTypeID: "",
	                impressionTypeName: ""
	            }
	        ],
	    }
	};
	adminPageMockTemplateTemp[adminPageActionTypes.GET_ADMIN_IMPRESSIONTYPES] = {
	    status: 'success',
	    result: {
	        schoolProvidedImpressionTypes: [
	            {
	                impressionTypeID: "1",
	                impressionTypeName: "德"
	            }, {
	                impressionTypeID: "2",
	                impressionTypeName: "智"
	            }, {
	                impressionTypeID: "3",
	                impressionTypeName: "体"
	            }, {
	                impressionTypeID: "4",
	                impressionTypeName: "美"
	            }, {
	                impressionTypeID: "5",
	                impressionTypeName: "劳"
	            }, {
	                impressionTypeID: "6",
	                impressionTypeName: "其他"
	            }
	        ]
	    },
	};
	adminPageMockTemplateTemp[adminPageActionTypes.READ_ADMIN_IMPRESSIONWORD] = {
	    status: 'success',
	    result: {
	        schoolProvidedImpressions: [
	            {
	                impressionContent: "聪明能干",
	                impressionTypeID: "1",
	                impressionTypeName: "德",
	                impressionID: "01"
	            }, {
	                impressionContent: "乐于助人",
	                impressionTypeID: "2",
	                impressionTypeName: "智",
	                impressionID: "02"
	            }, {
	                impressionContent: "乐于助人",
	                impressionTypeID: "2",
	                impressionTypeName: "智",
	                impressionID: "03"
	            }, {
	                impressionContent: "进风劲草",
	                impressionTypeID: "3",
	                impressionTypeName: "体",
	                impressionID: "04"
	            }, {
	                impressionContent: "技艺非凡",
	                impressionTypeID: "3",
	                impressionTypeName: "体",
	                impressionID: "05"
	            }, {
	                impressionContent: "兰心蕙质",
	                impressionTypeID: "4",
	                impressionTypeName: "美",
	                impressionID: "06"
	            }, {
	                impressionContent: "聪明能干",
	                impressionTypeID: "1",
	                impressionTypeName: "德",
	                impressionID: "01"
	            }, {
	                impressionContent: "乐于助人",
	                impressionTypeID: "2",
	                impressionTypeName: "智",
	                impressionID: "02"
	            }, {
	                impressionContent: "乐于助人",
	                impressionTypeID: "2",
	                impressionTypeName: "智",
	                impressionID: "03"
	            }, {
	                impressionContent: "进风劲草",
	                impressionTypeID: "3",
	                impressionTypeName: "体",
	                impressionID: "04"
	            }, {
	                impressionContent: "技艺非凡",
	                impressionTypeID: "3",
	                impressionTypeName: "体",
	                impressionID: "05"
	            }, {
	                impressionContent: "兰心蕙质",
	                impressionTypeID: "4",
	                impressionTypeName: "美",
	                impressionID: "06"
	            }, {
	                impressionContent: "聪明能干",
	                impressionTypeID: "1",
	                impressionTypeName: "德",
	                impressionID: "01"
	            }, {
	                impressionContent: "乐于助人",
	                impressionTypeID: "2",
	                impressionTypeName: "智",
	                impressionID: "02"
	            }, {
	                impressionContent: "乐于助人",
	                impressionTypeID: "2",
	                impressionTypeName: "智",
	                impressionID: "03"
	            }, {
	                impressionContent: "进风劲草",
	                impressionTypeID: "3",
	                impressionTypeName: "体",
	                impressionID: "04"
	            }, {
	                impressionContent: "技艺非凡",
	                impressionTypeID: "3",
	                impressionTypeName: "体",
	                impressionID: "05"
	            }, {
	                impressionContent: "兰心蕙质",
	                impressionTypeID: "4",
	                impressionTypeName: "美",
	                impressionID: "06"
	            }
	        ]
	    },
	};
	postData = {
	    impressions: [
	        {
	            impressionTypeID: "",
	            impressionContent: "长得漂亮",
	        }
	    ]
	};
	adminPageMockTemplateTemp[adminPageActionTypes.CREATE_ADMIN_IMPRESSIONWORD] = {
	    status: 'success',
	    result: {
	        schoolProvidedImpressions: [
	            {
	                impressionContent: "聪明能干create",
	                impressionTypeID: "",
	                impressionTypeName: "",
	                impressionID: "03"
	            },
	            {
	                impressionContent: "乐于助人create",
	                impressionTypeID: "",
	                impressionTypeName: "",
	                impressionID: "04"
	            }
	        ]
	    },
	};
	postData = {
	    impressions: [
	        {
	            impressionTypeID: "",
	            impressionContent: "长得漂亮",
	        }
	    ]
	};
	adminPageMockTemplateTemp[adminPageActionTypes.UPDATE_ADMIN_IMPRESSIONWORD] = {
	    status: 'success',
	    result: {
	        schoolProvidedImpressions: [
	            {
	                impressionContent: "聪明能干",
	                impressionTypeID: "",
	                impressionTypeName: "",
	                impressionID: "01"
	            },
	            {
	                impressionContent: "乐于助人",
	                impressionTypeID: "",
	                impressionTypeName: "",
	                impressionID: "02"
	            },
	            {
	                impressionContent: "聪明能干create",
	                impressionTypeID: "",
	                impressionTypeName: "",
	                impressionID: "03"
	            },
	            {
	                impressionContent: "乐于助人create",
	                impressionTypeID: "",
	                impressionTypeName: "",
	                impressionID: "04"
	            }
	        ]
	    },
	};
	postData = {
	    impressions: [
	        {
	            impressionID: "04"
	        }
	    ]
	};
	adminPageMockTemplateTemp[adminPageActionTypes.DELETE_ADMIN_IMPRESSIONWORD] = {
	    status: 'success',
	    result: {
	        schoolProvidedImpressions: [
	            {
	                impressionContent: "聪明能干",
	                impressionTypeID: "",
	                impressionTypeName: "",
	                impressionID: "01"
	            },
	            {
	                impressionContent: "乐于助人",
	                impressionTypeID: "",
	                impressionTypeName: "",
	                impressionID: "02"
	            },
	            {
	                impressionContent: "聪明能干create",
	                impressionTypeID: "",
	                impressionTypeName: "",
	                impressionID: "03"
	            }
	        ]
	    },
	};
	//积分管理
	adminPageMockTemplateTemp[adminPageActionTypes.GET_ADMIN_INTEGRALSCOREITEM] = {
	    status: 'success',
	    result: {
	        schoolIntegralScoreItems: [
	            {
	                schoolIntegralScoreItemID: "1",
	                rootIntegralScoreCategoryID: "1",
	                rootIntegralScoreCategoryName: "我的7选3",
	                integralScoreCategoryID: "2",
	                integralScoreCategoryName: "7选3手机完成",
	                condition: "无",
	                score: "100"
	            },
	            {
	                schoolIntegralScoreItemID: "2",
	                rootIntegralScoreCategoryID: "1",
	                rootIntegralScoreCategoryName: "测试中心",
	                integralScoreCategoryID: "2",
	                integralScoreCategoryName: "多元智能测试完成",
	                condition: "无",
	                score: "40"
	            },
	            {
	                schoolIntegralScoreItemID: "3",
	                rootIntegralScoreCategoryID: "1",
	                rootIntegralScoreCategoryName: "测试中心",
	                integralScoreCategoryID: "2",
	                integralScoreCategoryName: "价值观测试完成",
	                condition: "无",
	                score: "40"
	            },
	            {
	                schoolIntegralScoreItemID: "4",
	                rootIntegralScoreCategoryID: "1",
	                rootIntegralScoreCategoryName: "自我剖析与目标设定",
	                integralScoreCategoryID: "2",
	                integralScoreCategoryName: "自我剖析完成",
	                condition: "不少于50字",
	                score: "30"
	            }
	        ]
	    },
	};
	postData = {
	    schoolIntegralScoreItems: [
	        {
	            schoolIntegralScoreItemID: "",
	            score: "",
	        }
	    ]
	};
	adminPageMockTemplateTemp[adminPageActionTypes.SET_ADMIN_INTEGRALSCOREITEM] = {
	    status: 'success',
	    result: {
	        schoolIntegralScoreItems: [
	            {
	                schoolIntegralScoreItemID: "",
	                rootIntegralScoreCategoryID: "",
	                rootIntegralScoreCategoryName: "",
	                integralScoreCategoryID: "",
	                integralScoreCategoryName: "",
	                condition: "",
	                score: ""
	            }
	        ]
	    },
	};
	//统计功能 -- 综合素质活动库统计
	adminPageMockTemplateTemp[adminPageActionTypes.GET_ADMIN_ACTIVITYLIBSTATISTICS] = {
	    status: 'success',
	    result: {
	        eventCategoryStatistics: [
	            {
	                eventCategoryName: "选修课", count: "10"
	            }, {
	                eventCategoryName: "校内活动", count: "23"
	            }, {
	                eventCategoryName: "校外实践", count: "53"
	            }, {
	                eventCategoryName: "学生社团", count: "23"
	            }, {
	                eventCategoryName: "实验课", count: "13"
	            }, {
	                eventCategoryName: "研究性学习", count: "63"
	            }, {
	                eventCategoryName: "特长", count: "73"
	            }, {
	                eventCategoryName: "职务", count: "83"
	            }, {
	                eventCategoryName: "荣誉", count: "93"
	            }
	        ]
	    },
	};
	//统计功能 -- 学生活跃度
	adminPageMockTemplateTemp[adminPageActionTypes.GET_ADMIN_STUDENTACTIVITYSTATISTICS] = {
	    status: 'success',
	    result: {
	        eventHolderStatistics: [{
	                eventCategoryName: "运动会",
	                count: "23"
	            }, {
	                eventCategoryName: "植树节",
	                count: "23"
	            }, {
	                eventCategoryName: "篮球特长",
	                count: "53"
	            }, {
	                eventCategoryName: "参与博物馆",
	                count: "23"
	            }, {
	                eventCategoryName: "围棋协会",
	                count: "13"
	            }, {
	                eventCategoryName: "物理实验课",
	                count: "63"
	            }, {
	                eventCategoryName: "校三好学生",
	                count: "73"
	            }, {
	                eventCategoryName: "拔河比赛",
	                count: "83"
	            }, {
	                eventCategoryName: "乐器选修课",
	                count: "93" }
	        ]
	    },
	};
	//数据量大 这里用多次请求
	postData = {
	    grade: "",
	    classID: "",
	    termID: ""
	};
	//请求结果不要缓存
	adminPageMockTemplateTemp[adminPageActionTypes.READ_ADMIN_STUDENTRECORD] = {
	    status: 'success',
	    result: {
	        studentArchives: [
	            {
	                name: "谭小小",
	                userID: "1",
	                systemID: "3305896587541",
	                gradeName: "高一",
	                grade: "1",
	                className: "高一一班",
	                classID: "1",
	                termName: "2015-16第一学期",
	                termID: "1",
	            }, {
	                name: "谭小小",
	                userID: "1",
	                systemID: "3305896587541",
	                gradeName: "高一",
	                grade: "1",
	                className: "高一一班",
	                classID: "1",
	                termName: "2015-16第一学期",
	                termID: "1",
	            }
	        ]
	    },
	};
	postData = {
	    grade: "",
	    classID: "",
	    termID: "",
	    studentUserID: ""
	};
	//下载学生档案
	adminPageMockTemplateTemp[adminPageActionTypes.DOWNLOAD_ADMIN_STUDENTRECORD] = {
	    status: 'success',
	    result: {
	        studentArchives: [
	            {
	                name: "谭小小",
	                userID: "1",
	                systemID: "3305896587541",
	                gradeName: "高一",
	                grade: "1",
	                className: "高一一班",
	                classID: "1",
	                termName: "2015-16第一学期",
	                termID: "1",
	            }
	        ]
	    },
	};
	//一期不做
	adminPageMockTemplateTemp[adminPageActionTypes.READ_ADMIN_REPORTITEM] = {
	    status: 'success',
	    result: {
	        reportItem: [
	            {
	                itemID: "",
	                content: "",
	                reason: "",
	                type: "",
	                reporterUserID: "",
	                reporterName: "",
	                datetime: "",
	                userBeReportedID: "",
	                userBeReportedName: ""
	            }
	        ]
	    },
	};
	adminPageMockTemplateTemp[adminPageActionTypes.MARK_ADMIN_REPORTITEM] = {
	    status: 'success',
	    result: {},
	};
	adminPageMockTemplateTemp[adminPageActionTypes.ACCEPT_ADMIN_REPORTITEM] = {
	    status: 'success',
	    result: {},
	};
	adminPageMockTemplateTemp[adminPageActionTypes.DELETE_ADMIN_REPORTITEM] = {
	    status: 'success',
	    result: {},
	};
	//校园寻星-获取评选条目
	adminPageMockTemplateTemp[adminPageActionTypes.GET_ADMIN_STAROPTIONS] = {
	    status: 'success',
	    result: {
	        schoolStarOptions: [
	            {
	                label: '品德表现之星',
	                value: 'Apple'
	            }, {
	                label: '校内活动之星',
	                value: 'Pear'
	            }, {
	                label: '选修课之星',
	                value: 'Orange'
	            }, {
	                label: '艺术素养之星',
	                value: '222'
	            }, {
	                label: '运动健康之星',
	                value: '33'
	            }, {
	                label: '校外实践之星',
	                value: '44'
	            }, {
	                label: '社团之星',
	                value: '55'
	            }, {
	                label: '创新实践之星',
	                value: '66'
	            }
	        ]
	    },
	};
	var getSchoolStarInfoResponse = {
	    schoolStars: [
	        {
	            schoolStarID: "",
	            schoolStarName: ""
	        }
	    ],
	    isOpen: true,
	    toDate: "2016-10-10"
	};
	postData = {
	    rankItems: [
	        {
	            rankItemID: "",
	        }
	    ],
	    isOpen: true,
	    toDate: "2016-10-10"
	};
	var setSchoolStarInfoResponse = {
	    status: 'success',
	    result: {},
	};
	exports.adminPageMockTemplate = adminPageMockTemplateTemp;


/***/ },
/* 424 */
/*!********************************************************!*\
  !*** ./test/mock/ajaxMock/AssessCenterMockTemplate.ts ***!
  \********************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var assessCenterActionTypes = __webpack_require__(/*! ../../../actions/AssessCenter/AssessCenterActionTypes */ 406);
	var assessCenterMockTemplateTemp = {};
	//获取MBTI测试的结果
	assessCenterMockTemplateTemp[assessCenterActionTypes.GET_ASSESSCENTER_MBTI_REPORT] = {
	    status: 'success',
	    result: {
	        //没有则不传
	        dimScores: [
	            {
	                dimType: "IE",
	                dimName: "内倾-外倾",
	                //MBTI处需要显示两个维度，如果一个维度只传上面的
	                displayDim: [
	                    //数组中第一个对应0分
	                    {
	                        dimType: "I",
	                        dimName: "内倾",
	                    },
	                    {
	                        dimType: "E",
	                        dimName: "外倾",
	                    }
	                ],
	                score: "7",
	                totalScore: "16"
	            },
	            {
	                dimType: "NS",
	                dimName: "直觉-实感",
	                //MBTI处需要显示两个维度，如果一个维度只传上面的
	                displayDim: [
	                    {
	                        dimType: "N",
	                        dimName: "直觉",
	                    },
	                    {
	                        dimType: "S",
	                        dimName: "实感",
	                    }
	                ],
	                score: "10",
	                totalScore: "16"
	            },
	            {
	                dimType: "FT",
	                dimName: "情感-思考",
	                //MBTI处需要显示两个维度，如果一个维度只传上面的
	                displayDim: [
	                    {
	                        dimType: "F",
	                        dimName: "情感",
	                    },
	                    {
	                        dimType: "T",
	                        dimName: "思考",
	                    }
	                ],
	                score: "10",
	                totalScore: "16"
	            },
	            {
	                dimType: "PJ",
	                dimName: "知觉-判断",
	                //MBTI处需要显示两个维度，如果一个维度只传上面的
	                displayDim: [
	                    {
	                        dimType: "P",
	                        dimName: "知觉",
	                    },
	                    {
	                        dimType: "J",
	                        dimName: "判断",
	                    }
	                ],
	                score: "11",
	                totalScore: "16"
	            }
	        ],
	        report: {
	            //优势结果，排名靠前的结果
	            advantage: [
	                {
	                    resultDimType: "ESFP",
	                    resultDimName: "表演家",
	                    introductions: [
	                        {
	                            introductionID: "001",
	                            introductionName: "个性特征描述",
	                            introductionValue: "你富有人情味，兴趣更多地集中在有关人的领域；你在人际中常常表现出机敏，令人感到轻松，友好；" +
	                                "善于对人进行评估，容易很快了解到他人的优点与缺点；你可能对美有独特的个人感受力，容易表现出品味和艺术鉴赏力。"
	                        },
	                        {
	                            introductionID: "002",
	                            introductionName: "适合的职业",
	                            introductionValue: "公共关系专员，秘书，演员，舞蹈家，销售，运动员，幼儿教师，乘务员，协调员，家庭健康社工等。"
	                        },
	                        {
	                            introductionID: "003",
	                            introductionName: "专业选择建议",
	                            introductionValue: "儿童教育，艺术，市场营销，体育，行政管理，护理，戏剧表演类"
	                        },
	                        {
	                            introductionID: "004",
	                            introductionName: "典型职业",
	                            introductionValue: "表演者"
	                        },
	                    ]
	                }
	            ],
	            //没有则不传，目前MI多元智能测试需要
	            disadvantage: []
	        }
	    }
	};
	//获取测试的结果
	assessCenterMockTemplateTemp[assessCenterActionTypes.GET_ASSESSCENTER_HOLLAND_REPORT] = {
	    status: 'success',
	    result: {
	        //没有则不传
	        dimScores: [
	            {
	                dimType: "I",
	                dimName: "抗挫",
	                score: "65",
	                totalScore: "100"
	            },
	            {
	                dimType: "A",
	                dimName: "人际",
	                score: "58",
	                totalScore: "100"
	            },
	            {
	                dimType: "S",
	                dimName: "头脑",
	                score: "81",
	                totalScore: "100"
	            },
	            {
	                dimType: "E",
	                dimName: "运动",
	                score: "48",
	                totalScore: "100"
	            },
	            {
	                dimType: "C",
	                dimName: "学习",
	                score: "75",
	                totalScore: "100"
	            },
	            {
	                dimType: "R",
	                dimName: "认知",
	                score: "50",
	                totalScore: "100"
	            }
	        ],
	        report: {
	            //优势结果，排名靠前的结果
	            advantage: [
	                {
	                    resultDimType: "A",
	                    resultDimName: "抗挫",
	                    introductions: [
	                        {
	                            introductionID: "001",
	                            introductionName: "特征描述",
	                            introductionValue: "1234567899"
	                        },
	                        {
	                            introductionID: "002",
	                            introductionName: "培养方法",
	                            introductionValue: "6666666666666666。"
	                        }
	                    ]
	                },
	                {
	                    resultDimType: "S",
	                    resultDimName: "学习",
	                    introductions: [
	                        {
	                            introductionID: "001",
	                            introductionName: "特征描述",
	                            introductionValue: "学习能力很强大"
	                        },
	                        {
	                            introductionID: "002",
	                            introductionName: "加强方法",
	                            introductionValue: "666666"
	                        }
	                    ]
	                },
	                {
	                    resultDimType: "I",
	                    resultDimName: "头脑",
	                    introductions: [
	                        {
	                            introductionID: "001",
	                            introductionName: "特征描述",
	                            introductionValue: "I型的人有比较明显的科研倾向，重视科学研究，喜欢对各种现象进行观察、分析和推理，乐于进行系统和创造性"
	                        },
	                        {
	                            introductionID: "002",
	                            introductionName: "加强方法",
	                            introductionValue: "6666666666666666666666666666"
	                        }
	                    ]
	                }
	            ],
	            //没有则不传，目前MI多元智能测试需要
	            disadvantage: []
	        }
	    }
	};
	var postData = {};
	postData = {
	    MIAnswers: [
	        {
	            questionID: "",
	            answerID: ""
	        }
	    ]
	};
	/*
	assessCenterMockTemplateTemp[assessCenterActionTypes.SUBMIT_ASSESSCENTER_MI_ANSWERS] = {
	    status: 'success',
	    result: {},
	};
	*/
	postData = {
	    valueAnswers: [
	        {
	            valueTypeID: "",
	            valueTypeName: "",
	            valueTypeDesc: ""
	        }
	    ]
	};
	assessCenterMockTemplateTemp[assessCenterActionTypes.SUBMIT_ASSESSCENTER_VALUE_ANSWERS] = {
	    status: 'success',
	    result: {},
	};
	var MBTIResultResponse = {
	    status: "success",
	    result: {
	        //没有则不传
	        dimScores: [
	            {
	                dimType: "IE",
	                dimName: "外倾-内倾",
	                //MBTI处需要显示两个维度，如果一个维度只传上面的
	                displayDim: [
	                    {
	                        dimType: "I",
	                        dimName: "内倾",
	                    },
	                    {
	                        dimType: "E",
	                        dimName: "外倾",
	                    }
	                ],
	                score: "",
	                totalScore: ""
	            }
	        ],
	        report: {
	            //优势结果，排名靠前的结果
	            advantage: [
	                {
	                    resultDimType: "ESFP",
	                    resultDimName: "表演家",
	                    introductions: [
	                        {
	                            introductionID: "002",
	                            introductionName: "职业发展建议",
	                            introductionValue: "销售，培训师，金融从业人员"
	                        }
	                    ]
	                }
	            ],
	            //没有则不传，目前MI多元智能测试需要
	            disadvantage: []
	        }
	    }
	};
	var HollandResultResponse = {
	    status: "success",
	    result: {}
	};
	exports.assessCenterMockTemplate = assessCenterMockTemplateTemp;


/***/ },
/* 425 */
/*!*******************************************************!*\
  !*** ./test/mock/ajaxMock/ValueAssessMockTemplate.ts ***!
  \*******************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var ActionTypes = __webpack_require__(/*! ../../../actions/AssessCenter/ValueAssess/ValueAssessActionTypes */ 408);
	var ValueAssessMockTemplateTemp = {};
	ValueAssessMockTemplateTemp[ActionTypes.GET_VALUEASSESS_VALUEASSESSFINISHSTATE] = {
	    status: "success",
	    result: {
	        isMIAssessFinished: false,
	    }
	};
	ValueAssessMockTemplateTemp[ActionTypes.GET_VALUEASSESS_VALUE_INTRODUCTION] = {
	    status: 'success',
	    result: {
	        valueAssessIntroduction: {
	            valueAssessIntroduction: "职业价值观是人们在进行职业选择时所看重的原则、标准和品质，是对职业的一种信念和态度。" +
	                "本问卷以美国心理学家舒伯（Super）的职业价值观分类为基础、针对中国中学生的特点而制定开发，能够帮助中学生了解自己在" +
	                "职业选择时看重的因素，为大学专业选择和职业发展提供参考。\n" +
	                "   下面是人们在职业选择时会考虑到的13种不同的价值观，这些价值观对于不同的人来说，重要性会有所不同。请根据自己的实际情况，判断你在选择职业" +
	                "时对下列价值观的看重程度，并将这4个价值观按照你对它们的看重程度排序（非常重要、比较重要、一般、较不重要）。也许" +
	                "在你看来每个价值观都很重要，单在实际的职业选择中不可能都得到满足。因此，请你按照现实的可能性和你本人的考虑来进行评判。",
	        }
	    },
	};
	ValueAssessMockTemplateTemp[ActionTypes.GET_VALUEASSESS_QUIZZES] = {
	    status: "success",
	    result: {
	        valueAspects: [
	            {
	                aspectName: "利他主义",
	                desc: "工作的目的和价值，在于提供机会为社会大众的幸福和利益尽一份力，为大众谋福利。"
	            },
	            {
	                aspectName: "美的追求",
	                desc: "工作的目的和价值，在于能不断地追求美的东西，得到美感的享受，增加艺术的气氛。"
	            },
	            {
	                aspectName: "智力刺激",
	                desc: "工作的目的和价值，在于能不断进行智力的操作，动脑思考，学习以及探索新事物、解决新问题。"
	            },
	            {
	                aspectName: "成就满足",
	                desc: "工作的目的和价值，在于能看到自己努力工作的具体成果，得到领导同事或社会的赞扬，因此获得精神上的满足。"
	            },
	            {
	                aspectName: "独立自主",
	                desc: "工作的目的和价值，在于能充分发挥自己的独立性和主动性，按自己的方式、步调或想法去做，不受太多限制。"
	            },
	            {
	                aspectName: "社会地位",
	                desc: "haha"
	            },
	            {
	                aspectName: "管理权力",
	                desc: "haha"
	            },
	            {
	                aspectName: "经济报酬",
	                desc: "haha"
	            },
	            {
	                aspectName: "社会交际",
	                desc: "haha"
	            },
	            {
	                aspectName: "安全稳定",
	                desc: "haha"
	            },
	            {
	                aspectName: "舒适环境",
	                desc: "haha"
	            },
	            {
	                aspectName: "人际关系",
	                desc: "haha"
	            },
	            {
	                aspectName: "多样变化",
	                desc: "haha"
	            }
	        ],
	    }
	};
	ValueAssessMockTemplateTemp[ActionTypes.GET_VALUEASSESS_VALUE_REPORT] = {
	    status: 'success',
	    result: {
	        report: {
	            advantage: [
	                {
	                    resultDimName: "美的追求",
	                    resultDimType: "001",
	                    introductions: [
	                        {
	                            introductionID: "001",
	                            introductionName: "内涵",
	                            introductionValue: "工作的目的和价值，在于能不断追求美得东西，得到美得享受，增加艺术的气氛。"
	                        },
	                        {
	                            introductionID: "002",
	                            introductionName: "职业发展建议",
	                            introductionValue: "广告设计，服装设计"
	                        }
	                    ]
	                },
	                {
	                    resultDimName: "智力刺激",
	                    resultDimType: "002",
	                    introductions: [
	                        {
	                            introductionID: "001",
	                            introductionName: "内涵",
	                            introductionValue: "工作的目的和价值，在于能不断进行智力的操作，动脑思考，以及不断探索新事物。"
	                        },
	                        {
	                            introductionID: "002",
	                            introductionName: "职业发展建议",
	                            introductionValue: "金融，教育培训"
	                        }
	                    ]
	                },
	                {
	                    resultDimName: "经济报酬",
	                    resultDimType: "003",
	                    introductions: [
	                        {
	                            introductionID: "001",
	                            introductionName: "内涵",
	                            introductionValue: "工作的目的和价值，在于获得优厚的报酬。工作的目的和价值，在于获得优厚的报酬。"
	                        },
	                        {
	                            introductionID: "002",
	                            introductionName: "职业发展建议",
	                            introductionValue: "销售，培训师，金融从业人员"
	                        }
	                    ]
	                }
	            ]
	        }
	    },
	};
	exports.ValueAssessMockTemplate = ValueAssessMockTemplateTemp;


/***/ },
/* 426 */,
/* 427 */,
/* 428 */,
/* 429 */,
/* 430 */,
/* 431 */,
/* 432 */,
/* 433 */,
/* 434 */,
/* 435 */,
/* 436 */,
/* 437 */,
/* 438 */,
/* 439 */,
/* 440 */,
/* 441 */,
/* 442 */,
/* 443 */,
/* 444 */,
/* 445 */,
/* 446 */,
/* 447 */,
/* 448 */,
/* 449 */,
/* 450 */,
/* 451 */,
/* 452 */,
/* 453 */,
/* 454 */,
/* 455 */,
/* 456 */,
/* 457 */,
/* 458 */,
/* 459 */,
/* 460 */,
/* 461 */,
/* 462 */,
/* 463 */,
/* 464 */,
/* 465 */,
/* 466 */,
/* 467 */,
/* 468 */,
/* 469 */,
/* 470 */,
/* 471 */,
/* 472 */,
/* 473 */,
/* 474 */,
/* 475 */,
/* 476 */,
/* 477 */,
/* 478 */,
/* 479 */,
/* 480 */,
/* 481 */,
/* 482 */,
/* 483 */,
/* 484 */,
/* 485 */,
/* 486 */,
/* 487 */,
/* 488 */,
/* 489 */,
/* 490 */,
/* 491 */,
/* 492 */,
/* 493 */,
/* 494 */,
/* 495 */,
/* 496 */,
/* 497 */,
/* 498 */,
/* 499 */,
/* 500 */,
/* 501 */,
/* 502 */,
/* 503 */,
/* 504 */,
/* 505 */,
/* 506 */,
/* 507 */,
/* 508 */,
/* 509 */,
/* 510 */,
/* 511 */,
/* 512 */,
/* 513 */,
/* 514 */,
/* 515 */,
/* 516 */,
/* 517 */,
/* 518 */,
/* 519 */,
/* 520 */,
/* 521 */,
/* 522 */,
/* 523 */
/*!**********************************!*\
  !*** ./~/echarts/lib/echarts.js ***!
  \**********************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {// Enable DEV mode when using source code without build. which has no __DEV__ variable
	// In build process 'typeof __DEV__' will be replace with 'boolean'
	// So this code will be removed or disabled anyway after built.
	if (typeof __DEV__ === 'undefined') {
	    // In browser
	    if (typeof window !== 'undefined') {
	        window.__DEV__ = true;
	    }
	    // In node
	    else if (typeof global !== 'undefined') {
	        global.__DEV__ = true;
	    }
	}
	
	/*!
	 * ECharts, a javascript interactive chart library.
	 *
	 * Copyright (c) 2015, Baidu Inc.
	 * All rights reserved.
	 *
	 * LICENSE
	 * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt
	 */
	
	/**
	 * @module echarts
	 */
	
	
	    var env = __webpack_require__(/*! zrender/lib/core/env */ 524);
	
	    var GlobalModel = __webpack_require__(/*! ./model/Global */ 525);
	    var ExtensionAPI = __webpack_require__(/*! ./ExtensionAPI */ 547);
	    var CoordinateSystemManager = __webpack_require__(/*! ./CoordinateSystem */ 548);
	    var OptionManager = __webpack_require__(/*! ./model/OptionManager */ 549);
	
	    var ComponentModel = __webpack_require__(/*! ./model/Component */ 541);
	    var SeriesModel = __webpack_require__(/*! ./model/Series */ 550);
	
	    var ComponentView = __webpack_require__(/*! ./view/Component */ 551);
	    var ChartView = __webpack_require__(/*! ./view/Chart */ 564);
	    var graphic = __webpack_require__(/*! ./util/graphic */ 565);
	
	    var zrender = __webpack_require__(/*! zrender */ 603);
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	    var colorTool = __webpack_require__(/*! zrender/lib/tool/color */ 561);
	    var Eventful = __webpack_require__(/*! zrender/lib/mixin/Eventful */ 555);
	    var timsort = __webpack_require__(/*! zrender/lib/core/timsort */ 607);
	
	    var each = zrUtil.each;
	
	    var PRIORITY_PROCESSOR_FILTER = 1000;
	    var PRIORITY_PROCESSOR_STATISTIC = 5000;
	
	
	    var PRIORITY_VISUAL_LAYOUT = 1000;
	    var PRIORITY_VISUAL_GLOBAL = 2000;
	    var PRIORITY_VISUAL_CHART = 3000;
	    var PRIORITY_VISUAL_COMPONENT = 4000;
	    var PRIORITY_VISUAL_BRUSH = 5000;
	
	    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,
	    // where they must not be invoked nestedly, except the only case: invoke
	    // dispatchAction with updateMethod "none" in main process.
	    // This flag is used to carry out this rule.
	    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).
	    var IN_MAIN_PROCESS = '__flag_in_main_process';
	    var HAS_GRADIENT_OR_PATTERN_BG = '_hasGradientOrPatternBg';
	
	    function createRegisterEventWithLowercaseName(method) {
	        return function (eventName, handler, context) {
	            // Event name is all lowercase
	            eventName = eventName && eventName.toLowerCase();
	            Eventful.prototype[method].call(this, eventName, handler, context);
	        };
	    }
	    /**
	     * @module echarts~MessageCenter
	     */
	    function MessageCenter() {
	        Eventful.call(this);
	    }
	    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');
	    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');
	    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');
	    zrUtil.mixin(MessageCenter, Eventful);
	    /**
	     * @module echarts~ECharts
	     */
	    function ECharts (dom, theme, opts) {
	        opts = opts || {};
	
	        // Get theme by name
	        if (typeof theme === 'string') {
	            theme = themeStorage[theme];
	        }
	
	        /**
	         * @type {string}
	         */
	        this.id;
	        /**
	         * Group id
	         * @type {string}
	         */
	        this.group;
	        /**
	         * @type {HTMLDomElement}
	         * @private
	         */
	        this._dom = dom;
	        /**
	         * @type {module:zrender/ZRender}
	         * @private
	         */
	        this._zr = zrender.init(dom, {
	            renderer: opts.renderer || 'canvas',
	            devicePixelRatio: opts.devicePixelRatio
	        });
	
	        /**
	         * @type {Object}
	         * @private
	         */
	        this._theme = zrUtil.clone(theme);
	
	        /**
	         * @type {Array.<module:echarts/view/Chart>}
	         * @private
	         */
	        this._chartsViews = [];
	
	        /**
	         * @type {Object.<string, module:echarts/view/Chart>}
	         * @private
	         */
	        this._chartsMap = {};
	
	        /**
	         * @type {Array.<module:echarts/view/Component>}
	         * @private
	         */
	        this._componentsViews = [];
	
	        /**
	         * @type {Object.<string, module:echarts/view/Component>}
	         * @private
	         */
	        this._componentsMap = {};
	
	        /**
	         * @type {module:echarts/ExtensionAPI}
	         * @private
	         */
	        this._api = new ExtensionAPI(this);
	
	        /**
	         * @type {module:echarts/CoordinateSystem}
	         * @private
	         */
	        this._coordSysMgr = new CoordinateSystemManager();
	
	        Eventful.call(this);
	
	        /**
	         * @type {module:echarts~MessageCenter}
	         * @private
	         */
	        this._messageCenter = new MessageCenter();
	
	        // Init mouse events
	        this._initEvents();
	
	        // In case some people write `window.onresize = chart.resize`
	        this.resize = zrUtil.bind(this.resize, this);
	
	        // Can't dispatch action during rendering procedure
	        this._pendingActions = [];
	        // Sort on demand
	        function prioritySortFunc(a, b) {
	            return a.prio - b.prio;
	        }
	        timsort(visualFuncs, prioritySortFunc);
	        timsort(dataProcessorFuncs, prioritySortFunc);
	    }
	
	    var echartsProto = ECharts.prototype;
	
	    /**
	     * @return {HTMLDomElement}
	     */
	    echartsProto.getDom = function () {
	        return this._dom;
	    };
	
	    /**
	     * @return {module:zrender~ZRender}
	     */
	    echartsProto.getZr = function () {
	        return this._zr;
	    };
	
	    /**
	     * @param {Object} option
	     * @param {boolean} notMerge
	     * @param {boolean} [notRefreshImmediately=false] Useful when setOption frequently.
	     */
	    echartsProto.setOption = function (option, notMerge, notRefreshImmediately) {
	        if (__DEV__) {
	            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');
	        }
	
	        this[IN_MAIN_PROCESS] = true;
	
	        if (!this._model || notMerge) {
	            var optionManager = new OptionManager(this._api);
	            var theme = this._theme;
	            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);
	            ecModel.init(null, null, theme, optionManager);
	        }
	
	        this._model.setOption(option, optionPreprocessorFuncs);
	
	        updateMethods.prepareAndUpdate.call(this);
	
	        this[IN_MAIN_PROCESS] = false;
	
	        this._flushPendingActions();
	
	        !notRefreshImmediately && this._zr.refreshImmediately();
	    };
	
	    /**
	     * @DEPRECATED
	     */
	    echartsProto.setTheme = function () {
	        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');
	    };
	
	    /**
	     * @return {module:echarts/model/Global}
	     */
	    echartsProto.getModel = function () {
	        return this._model;
	    };
	
	    /**
	     * @return {Object}
	     */
	    echartsProto.getOption = function () {
	        return this._model.getOption();
	    };
	
	    /**
	     * @return {number}
	     */
	    echartsProto.getWidth = function () {
	        return this._zr.getWidth();
	    };
	
	    /**
	     * @return {number}
	     */
	    echartsProto.getHeight = function () {
	        return this._zr.getHeight();
	    };
	
	    /**
	     * Get canvas which has all thing rendered
	     * @param {Object} opts
	     * @param {string} [opts.backgroundColor]
	     */
	    echartsProto.getRenderedCanvas = function (opts) {
	        if (!env.canvasSupported) {
	            return;
	        }
	        opts = opts || {};
	        opts.pixelRatio = opts.pixelRatio || 1;
	        opts.backgroundColor = opts.backgroundColor
	            || this._model.get('backgroundColor');
	        var zr = this._zr;
	        var list = zr.storage.getDisplayList();
	        // Stop animations
	        zrUtil.each(list, function (el) {
	            el.stopAnimation(true);
	        });
	        return zr.painter.getRenderedCanvas(opts);
	    };
	    /**
	     * @return {string}
	     * @param {Object} opts
	     * @param {string} [opts.type='png']
	     * @param {string} [opts.pixelRatio=1]
	     * @param {string} [opts.backgroundColor]
	     */
	    echartsProto.getDataURL = function (opts) {
	        opts = opts || {};
	        var excludeComponents = opts.excludeComponents;
	        var ecModel = this._model;
	        var excludesComponentViews = [];
	        var self = this;
	
	        each(excludeComponents, function (componentType) {
	            ecModel.eachComponent({
	                mainType: componentType
	            }, function (component) {
	                var view = self._componentsMap[component.__viewId];
	                if (!view.group.ignore) {
	                    excludesComponentViews.push(view);
	                    view.group.ignore = true;
	                }
	            });
	        });
	
	        var url = this.getRenderedCanvas(opts).toDataURL(
	            'image/' + (opts && opts.type || 'png')
	        );
	
	        each(excludesComponentViews, function (view) {
	            view.group.ignore = false;
	        });
	        return url;
	    };
	
	
	    /**
	     * @return {string}
	     * @param {Object} opts
	     * @param {string} [opts.type='png']
	     * @param {string} [opts.pixelRatio=1]
	     * @param {string} [opts.backgroundColor]
	     */
	    echartsProto.getConnectedDataURL = function (opts) {
	        if (!env.canvasSupported) {
	            return;
	        }
	        var groupId = this.group;
	        var mathMin = Math.min;
	        var mathMax = Math.max;
	        var MAX_NUMBER = Infinity;
	        if (connectedGroups[groupId]) {
	            var left = MAX_NUMBER;
	            var top = MAX_NUMBER;
	            var right = -MAX_NUMBER;
	            var bottom = -MAX_NUMBER;
	            var canvasList = [];
	            var dpr = (opts && opts.pixelRatio) || 1;
	            for (var id in instances) {
	                var chart = instances[id];
	                if (chart.group === groupId) {
	                    var canvas = chart.getRenderedCanvas(
	                        zrUtil.clone(opts)
	                    );
	                    var boundingRect = chart.getDom().getBoundingClientRect();
	                    left = mathMin(boundingRect.left, left);
	                    top = mathMin(boundingRect.top, top);
	                    right = mathMax(boundingRect.right, right);
	                    bottom = mathMax(boundingRect.bottom, bottom);
	                    canvasList.push({
	                        dom: canvas,
	                        left: boundingRect.left,
	                        top: boundingRect.top
	                    });
	                }
	            }
	
	            left *= dpr;
	            top *= dpr;
	            right *= dpr;
	            bottom *= dpr;
	            var width = right - left;
	            var height = bottom - top;
	            var targetCanvas = zrUtil.createCanvas();
	            targetCanvas.width = width;
	            targetCanvas.height = height;
	            var zr = zrender.init(targetCanvas);
	
	            each(canvasList, function (item) {
	                var img = new graphic.Image({
	                    style: {
	                        x: item.left * dpr - left,
	                        y: item.top * dpr - top,
	                        image: item.dom
	                    }
	                });
	                zr.add(img);
	            });
	            zr.refreshImmediately();
	
	            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));
	        }
	        else {
	            return this.getDataURL(opts);
	        }
	    };
	
	    var updateMethods = {
	
	
	        /**
	         * @param {Object} payload
	         * @private
	         */
	        update: function (payload) {
	            // console.time && console.time('update');
	
	            var ecModel = this._model;
	            var api = this._api;
	            var coordSysMgr = this._coordSysMgr;
	            var zr = this._zr;
	            // update before setOption
	            if (!ecModel) {
	                return;
	            }
	
	            // Fixme First time update ?
	            ecModel.restoreData();
	
	            // TODO
	            // Save total ecModel here for undo/redo (after restoring data and before processing data).
	            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.
	
	            // Create new coordinate system each update
	            // In LineView may save the old coordinate system and use it to get the orignal point
	            coordSysMgr.create(this._model, this._api);
	
	            processData.call(this, ecModel, api);
	
	            stackSeriesData.call(this, ecModel);
	
	            coordSysMgr.update(ecModel, api);
	
	            doVisualEncoding.call(this, ecModel, payload);
	
	            doRender.call(this, ecModel, payload);
	
	            // Set background
	            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';
	
	            var painter = zr.painter;
	            // TODO all use clearColor ?
	            if (painter.isSingleCanvas && painter.isSingleCanvas()) {
	                zr.configLayer(0, {
	                    clearColor: backgroundColor
	                });
	            }
	            else {
	                // In IE8
	                if (!env.canvasSupported) {
	                    var colorArr = colorTool.parse(backgroundColor);
	                    backgroundColor = colorTool.stringify(colorArr, 'rgb');
	                    if (colorArr[3] === 0) {
	                        backgroundColor = 'transparent';
	                    }
	                }
	                if (backgroundColor.colorStops || backgroundColor.image) {
	                    // Gradient background
	                    // FIXME Fixed layer？
	                    zr.configLayer(0, {
	                        clearColor: backgroundColor
	                    });
	                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;
	
	                    this._dom.style.background = 'transparent';
	                }
	                else {
	                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {
	                        zr.configLayer(0, {
	                            clearColor: null
	                        });
	                    }
	                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;
	
	                    this._dom.style.background = backgroundColor;
	                }
	            }
	
	            // console.time && console.timeEnd('update');
	        },
	
	        // PENDING
	        /**
	         * @param {Object} payload
	         * @private
	         */
	        updateView: function (payload) {
	            var ecModel = this._model;
	
	            // update before setOption
	            if (!ecModel) {
	                return;
	            }
	
	            ecModel.eachSeries(function (seriesModel) {
	                seriesModel.getData().clearAllVisual();
	            });
	
	            doVisualEncoding.call(this, ecModel, payload);
	
	            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);
	        },
	
	        /**
	         * @param {Object} payload
	         * @private
	         */
	        updateVisual: function (payload) {
	            var ecModel = this._model;
	
	            // update before setOption
	            if (!ecModel) {
	                return;
	            }
	
	            ecModel.eachSeries(function (seriesModel) {
	                seriesModel.getData().clearAllVisual();
	            });
	
	            doVisualEncoding.call(this, ecModel, payload);
	
	            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);
	        },
	
	        /**
	         * @param {Object} payload
	         * @private
	         */
	        updateLayout: function (payload) {
	            var ecModel = this._model;
	
	            // update before setOption
	            if (!ecModel) {
	                return;
	            }
	
	            doLayout.call(this, ecModel, payload);
	
	            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);
	        },
	
	        /**
	         * @param {Object} payload
	         * @private
	         */
	        highlight: function (payload) {
	            toggleHighlight.call(this, 'highlight', payload);
	        },
	
	        /**
	         * @param {Object} payload
	         * @private
	         */
	        downplay: function (payload) {
	            toggleHighlight.call(this, 'downplay', payload);
	        },
	
	        /**
	         * @param {Object} payload
	         * @private
	         */
	        prepareAndUpdate: function (payload) {
	            var ecModel = this._model;
	
	            prepareView.call(this, 'component', ecModel);
	
	            prepareView.call(this, 'chart', ecModel);
	
	            updateMethods.update.call(this, payload);
	        }
	    };
	
	    /**
	     * @param {Object} payload
	     * @private
	     */
	    function toggleHighlight(method, payload) {
	        var ecModel = this._model;
	
	        // dispatchAction before setOption
	        if (!ecModel) {
	            return;
	        }
	
	        ecModel.eachComponent(
	            {mainType: 'series', query: payload},
	            function (seriesModel, index) {
	                var chartView = this._chartsMap[seriesModel.__viewId];
	                if (chartView && chartView.__alive) {
	                    chartView[method](
	                        seriesModel, ecModel, this._api, payload
	                    );
	                }
	            },
	            this
	        );
	    }
	
	    /**
	     * Resize the chart
	     */
	    echartsProto.resize = function () {
	        if (__DEV__) {
	            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');
	        }
	
	        this[IN_MAIN_PROCESS] = true;
	
	        this._zr.resize();
	
	        var optionChanged = this._model && this._model.resetOption('media');
	        updateMethods[optionChanged ? 'prepareAndUpdate' : 'update'].call(this);
	
	        // Resize loading effect
	        this._loadingFX && this._loadingFX.resize();
	
	        this[IN_MAIN_PROCESS] = false;
	
	        this._flushPendingActions();
	    };
	
	    var defaultLoadingEffect = __webpack_require__(/*! ./loading/default */ 615);
	    /**
	     * Show loading effect
	     * @param  {string} [name='default']
	     * @param  {Object} [cfg]
	     */
	    echartsProto.showLoading = function (name, cfg) {
	        if (zrUtil.isObject(name)) {
	            cfg = name;
	            name = 'default';
	        }
	        this.hideLoading();
	        var el = defaultLoadingEffect(this._api, cfg);
	        var zr = this._zr;
	        this._loadingFX = el;
	
	        zr.add(el);
	    };
	
	    /**
	     * Hide loading effect
	     */
	    echartsProto.hideLoading = function () {
	        this._loadingFX && this._zr.remove(this._loadingFX);
	        this._loadingFX = null;
	    };
	
	    /**
	     * @param {Object} eventObj
	     * @return {Object}
	     */
	    echartsProto.makeActionFromEvent = function (eventObj) {
	        var payload = zrUtil.extend({}, eventObj);
	        payload.type = eventActionMap[eventObj.type];
	        return payload;
	    };
	
	    /**
	     * @pubilc
	     * @param {Object} payload
	     * @param {string} [payload.type] Action type
	     * @param {boolean} [silent=false] Whether trigger event.
	     */
	    echartsProto.dispatchAction = function (payload, silent) {
	        var actionWrap = actions[payload.type];
	        if (!actionWrap) {
	            return;
	        }
	
	        var actionInfo = actionWrap.actionInfo;
	        var updateMethod = actionInfo.update || 'update';
	
	        // if (__DEV__) {
	        //     zrUtil.assert(
	        //         !this[IN_MAIN_PROCESS],
	        //         '`dispatchAction` should not be called during main process.'
	        //         + 'unless updateMathod is "none".'
	        //     );
	        // }
	
	        // May dispatchAction in rendering procedure
	        if (this[IN_MAIN_PROCESS]) {
	            this._pendingActions.push(payload);
	            return;
	        }
	
	        this[IN_MAIN_PROCESS] = true;
	
	        var payloads = [payload];
	        var batched = false;
	        // Batch action
	        if (payload.batch) {
	            batched = true;
	            payloads = zrUtil.map(payload.batch, function (item) {
	                item = zrUtil.defaults(zrUtil.extend({}, item), payload);
	                item.batch = null;
	                return item;
	            });
	        }
	
	        var eventObjBatch = [];
	        var eventObj;
	        var isHighlightOrDownplay = payload.type === 'highlight' || payload.type === 'downplay';
	        for (var i = 0; i < payloads.length; i++) {
	            var batchItem = payloads[i];
	            // Action can specify the event by return it.
	            eventObj = actionWrap.action(batchItem, this._model);
	            // Emit event outside
	            eventObj = eventObj || zrUtil.extend({}, batchItem);
	            // Convert type to eventType
	            eventObj.type = actionInfo.event || eventObj.type;
	            eventObjBatch.push(eventObj);
	
	            // Highlight and downplay are special.
	            isHighlightOrDownplay && updateMethods[updateMethod].call(this, batchItem);
	        }
	
	        (updateMethod !== 'none' && !isHighlightOrDownplay)
	            && updateMethods[updateMethod].call(this, payload);
	
	        // Follow the rule of action batch
	        if (batched) {
	            eventObj = {
	                type: actionInfo.event || payload.type,
	                batch: eventObjBatch
	            };
	        }
	        else {
	            eventObj = eventObjBatch[0];
	        }
	
	        this[IN_MAIN_PROCESS] = false;
	
	        !silent && this._messageCenter.trigger(eventObj.type, eventObj);
	
	        this._flushPendingActions();
	
	    };
	
	    echartsProto._flushPendingActions = function () {
	        var pendingActions = this._pendingActions;
	        while (pendingActions.length) {
	            var payload = pendingActions.shift();
	            this.dispatchAction(payload);
	        }
	    };
	
	    /**
	     * Register event
	     * @method
	     */
	    echartsProto.on = createRegisterEventWithLowercaseName('on');
	    echartsProto.off = createRegisterEventWithLowercaseName('off');
	    echartsProto.one = createRegisterEventWithLowercaseName('one');
	
	    /**
	     * @param {string} methodName
	     * @private
	     */
	    function invokeUpdateMethod(methodName, ecModel, payload) {
	        var api = this._api;
	
	        // Update all components
	        each(this._componentsViews, function (component) {
	            var componentModel = component.__model;
	            component[methodName](componentModel, ecModel, api, payload);
	
	            updateZ(componentModel, component);
	        }, this);
	
	        // Upate all charts
	        ecModel.eachSeries(function (seriesModel, idx) {
	            var chart = this._chartsMap[seriesModel.__viewId];
	            chart[methodName](seriesModel, ecModel, api, payload);
	
	            updateZ(seriesModel, chart);
	
	            updateProgressiveAndBlend(seriesModel, chart);
	        }, this);
	
	        // If use hover layer
	        updateHoverLayerStatus(this._zr, ecModel);
	    }
	
	    /**
	     * Prepare view instances of charts and components
	     * @param  {module:echarts/model/Global} ecModel
	     * @private
	     */
	    function prepareView(type, ecModel) {
	        var isComponent = type === 'component';
	        var viewList = isComponent ? this._componentsViews : this._chartsViews;
	        var viewMap = isComponent ? this._componentsMap : this._chartsMap;
	        var zr = this._zr;
	
	        for (var i = 0; i < viewList.length; i++) {
	            viewList[i].__alive = false;
	        }
	
	        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {
	            if (isComponent) {
	                if (componentType === 'series') {
	                    return;
	                }
	            }
	            else {
	                model = componentType;
	            }
	
	            // Consider: id same and type changed.
	            var viewId = model.id + '_' + model.type;
	            var view = viewMap[viewId];
	            if (!view) {
	                var classType = ComponentModel.parseClassType(model.type);
	                var Clazz = isComponent
	                    ? ComponentView.getClass(classType.main, classType.sub)
	                    : ChartView.getClass(classType.sub);
	                if (Clazz) {
	                    view = new Clazz();
	                    view.init(ecModel, this._api);
	                    viewMap[viewId] = view;
	                    viewList.push(view);
	                    zr.add(view.group);
	                }
	                else {
	                    // Error
	                    return;
	                }
	            }
	
	            model.__viewId = viewId;
	            view.__alive = true;
	            view.__id = viewId;
	            view.__model = model;
	        }, this);
	
	        for (var i = 0; i < viewList.length;) {
	            var view = viewList[i];
	            if (!view.__alive) {
	                zr.remove(view.group);
	                view.dispose(ecModel, this._api);
	                viewList.splice(i, 1);
	                delete viewMap[view.__id];
	            }
	            else {
	                i++;
	            }
	        }
	    }
	
	    /**
	     * Processor data in each series
	     *
	     * @param {module:echarts/model/Global} ecModel
	     * @private
	     */
	    function processData(ecModel, api) {
	        each(dataProcessorFuncs, function (process) {
	            process.func(ecModel, api);
	        });
	    }
	
	    /**
	     * @private
	     */
	    function stackSeriesData(ecModel) {
	        var stackedDataMap = {};
	        ecModel.eachSeries(function (series) {
	            var stack = series.get('stack');
	            var data = series.getData();
	            if (stack && data.type === 'list') {
	                var previousStack = stackedDataMap[stack];
	                if (previousStack) {
	                    data.stackedOn = previousStack;
	                }
	                stackedDataMap[stack] = data;
	            }
	        });
	    }
	
	    /**
	     * Layout before each chart render there series, special visual encoding stage
	     *
	     * @param {module:echarts/model/Global} ecModel
	     * @private
	     */
	    function doLayout(ecModel, payload) {
	        var api = this._api;
	        each(visualFuncs, function (visual) {
	            if (visual.isLayout) {
	                visual.func(ecModel, api, payload);
	            }
	        });
	    }
	
	    /**
	     * Encode visual infomation from data after data processing
	     *
	     * @param {module:echarts/model/Global} ecModel
	     * @private
	     */
	    function doVisualEncoding(ecModel, payload) {
	        var api = this._api;
	        ecModel.clearColorPalette();
	        ecModel.eachSeries(function (seriesModel) {
	            seriesModel.clearColorPalette();
	        });
	        each(visualFuncs, function (visual) {
	            visual.func(ecModel, api, payload);
	        });
	    }
	
	    /**
	     * Render each chart and component
	     * @private
	     */
	    function doRender(ecModel, payload) {
	        var api = this._api;
	        // Render all components
	        each(this._componentsViews, function (componentView) {
	            var componentModel = componentView.__model;
	            componentView.render(componentModel, ecModel, api, payload);
	
	            updateZ(componentModel, componentView);
	        }, this);
	
	        each(this._chartsViews, function (chart) {
	            chart.__alive = false;
	        }, this);
	
	        // Render all charts
	        ecModel.eachSeries(function (seriesModel, idx) {
	            var chartView = this._chartsMap[seriesModel.__viewId];
	            chartView.__alive = true;
	            chartView.render(seriesModel, ecModel, api, payload);
	
	            chartView.group.silent = !!seriesModel.get('silent');
	
	            updateZ(seriesModel, chartView);
	
	            updateProgressiveAndBlend(seriesModel, chartView);
	
	        }, this);
	
	        // If use hover layer
	        updateHoverLayerStatus(this._zr, ecModel);
	
	        // Remove groups of unrendered charts
	        each(this._chartsViews, function (chart) {
	            if (!chart.__alive) {
	                chart.remove(ecModel, api);
	            }
	        }, this);
	    }
	
	    var MOUSE_EVENT_NAMES = [
	        'click', 'dblclick', 'mouseover', 'mouseout', 'mousedown', 'mouseup', 'globalout'
	    ];
	    /**
	     * @private
	     */
	    echartsProto._initEvents = function () {
	        each(MOUSE_EVENT_NAMES, function (eveName) {
	            this._zr.on(eveName, function (e) {
	                var ecModel = this.getModel();
	                var el = e.target;
	                if (el && el.dataIndex != null) {
	                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);
	                    var params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};
	                    params.event = e;
	                    params.type = eveName;
	                    this.trigger(eveName, params);
	                }
	                // If element has custom eventData of components
	                else if (el && el.eventData) {
	                    this.trigger(eveName, el.eventData);
	                }
	            }, this);
	        }, this);
	
	        each(eventActionMap, function (actionType, eventType) {
	            this._messageCenter.on(eventType, function (event) {
	                this.trigger(eventType, event);
	            }, this);
	        }, this);
	    };
	
	    /**
	     * @return {boolean}
	     */
	    echartsProto.isDisposed = function () {
	        return this._disposed;
	    };
	
	    /**
	     * Clear
	     */
	    echartsProto.clear = function () {
	        this.setOption({}, true);
	    };
	    /**
	     * Dispose instance
	     */
	    echartsProto.dispose = function () {
	        if (this._disposed) {
	            if (__DEV__) {
	                console.warn('Instance ' + this.id + ' has been disposed');
	            }
	            return;
	        }
	        this._disposed = true;
	
	        var api = this._api;
	        var ecModel = this._model;
	
	        each(this._componentsViews, function (component) {
	            component.dispose(ecModel, api);
	        });
	        each(this._chartsViews, function (chart) {
	            chart.dispose(ecModel, api);
	        });
	
	        // Dispose after all views disposed
	        this._zr.dispose();
	
	        delete instances[this.id];
	    };
	
	    zrUtil.mixin(ECharts, Eventful);
	
	    function updateHoverLayerStatus(zr, ecModel) {
	        var storage = zr.storage;
	        var elCount = 0;
	        storage.traverse(function (el) {
	            if (!el.isGroup) {
	                elCount++;
	            }
	        });
	        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {
	            storage.traverse(function (el) {
	                if (!el.isGroup) {
	                    el.useHoverLayer = true;
	                }
	            });
	        }
	    }
	    /**
	     * Update chart progressive and blend.
	     * @param {module:echarts/model/Series|module:echarts/model/Component} model
	     * @param {module:echarts/view/Component|module:echarts/view/Chart} view
	     */
	    function updateProgressiveAndBlend(seriesModel, chartView) {
	        // Progressive configuration
	        var elCount = 0;
	        chartView.group.traverse(function (el) {
	            if (el.type !== 'group' && !el.ignore) {
	                elCount++;
	            }
	        });
	        var frameDrawNum = +seriesModel.get('progressive');
	        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;
	        if (needProgressive) {
	            chartView.group.traverse(function (el) {
	                // FIXME marker and other components
	                if (!el.isGroup) {
	                    el.progressive = needProgressive ?
	                        Math.floor(elCount++ / frameDrawNum) : -1;
	                    if (needProgressive) {
	                        el.stopAnimation(true);
	                    }
	                }
	            });
	        }
	
	        // Blend configration
	        var blendMode = seriesModel.get('blendMode') || null;
	        if (__DEV__) {
	            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {
	                console.warn('Only canvas support blendMode');
	            }
	        }
	        chartView.group.traverse(function (el) {
	            // FIXME marker and other components
	            if (!el.isGroup) {
	                el.setStyle('blend', blendMode);
	            }
	        });
	    }
	    /**
	     * @param {module:echarts/model/Series|module:echarts/model/Component} model
	     * @param {module:echarts/view/Component|module:echarts/view/Chart} view
	     */
	    function updateZ(model, view) {
	        var z = model.get('z');
	        var zlevel = model.get('zlevel');
	        // Set z and zlevel
	        view.group.traverse(function (el) {
	            if (el.type !== 'group') {
	                z != null && (el.z = z);
	                zlevel != null && (el.zlevel = zlevel);
	            }
	        });
	    }
	    /**
	     * @type {Array.<Function>}
	     * @inner
	     */
	    var actions = [];
	
	    /**
	     * Map eventType to actionType
	     * @type {Object}
	     */
	    var eventActionMap = {};
	
	    /**
	     * Data processor functions of each stage
	     * @type {Array.<Object.<string, Function>>}
	     * @inner
	     */
	    var dataProcessorFuncs = [];
	
	    /**
	     * @type {Array.<Function>}
	     * @inner
	     */
	    var optionPreprocessorFuncs = [];
	
	    /**
	     * Visual encoding functions of each stage
	     * @type {Array.<Object.<string, Function>>}
	     * @inner
	     */
	    var visualFuncs = [];
	    /**
	     * Theme storage
	     * @type {Object.<key, Object>}
	     */
	    var themeStorage = {};
	
	
	    var instances = {};
	    var connectedGroups = {};
	
	    var idBase = new Date() - 0;
	    var groupIdBase = new Date() - 0;
	    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';
	    /**
	     * @alias module:echarts
	     */
	    var echarts = {
	        /**
	         * @type {number}
	         */
	        version: '3.2.2',
	        dependencies: {
	            zrender: '3.1.2'
	        }
	    };
	
	    function enableConnect(chart) {
	
	        var STATUS_PENDING = 0;
	        var STATUS_UPDATING = 1;
	        var STATUS_UPDATED = 2;
	        var STATUS_KEY = '__connectUpdateStatus';
	        function updateConnectedChartsStatus(charts, status) {
	            for (var i = 0; i < charts.length; i++) {
	                var otherChart = charts[i];
	                otherChart[STATUS_KEY] = status;
	            }
	        }
	        zrUtil.each(eventActionMap, function (actionType, eventType) {
	            chart._messageCenter.on(eventType, function (event) {
	                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {
	                    var action = chart.makeActionFromEvent(event);
	                    var otherCharts = [];
	                    for (var id in instances) {
	                        var otherChart = instances[id];
	                        if (otherChart !== chart && otherChart.group === chart.group) {
	                            otherCharts.push(otherChart);
	                        }
	                    }
	                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);
	                    each(otherCharts, function (otherChart) {
	                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {
	                            otherChart.dispatchAction(action);
	                        }
	                    });
	                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);
	                }
	            });
	        });
	
	    }
	    /**
	     * @param {HTMLDomElement} dom
	     * @param {Object} [theme]
	     * @param {Object} opts
	     */
	    echarts.init = function (dom, theme, opts) {
	        if (__DEV__) {
	            // Check version
	            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {
	                throw new Error(
	                    'ZRender ' + zrender.version
	                    + ' is too old for ECharts ' + echarts.version
	                    + '. Current version need ZRender '
	                    + echarts.dependencies.zrender + '+'
	                );
	            }
	            if (!dom) {
	                throw new Error('Initialize failed: invalid dom.');
	            }
	            if (zrUtil.isDom(dom) && dom.nodeName.toUpperCase() !== 'CANVAS' && (!dom.clientWidth || !dom.clientHeight)) {
	                console.warn('Can\'t get dom width or height');
	            }
	        }
	
	        var chart = new ECharts(dom, theme, opts);
	        chart.id = 'ec_' + idBase++;
	        instances[chart.id] = chart;
	
	        dom.setAttribute &&
	            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);
	
	        enableConnect(chart);
	
	        return chart;
	    };
	
	    /**
	     * @return {string|Array.<module:echarts~ECharts>} groupId
	     */
	    echarts.connect = function (groupId) {
	        // Is array of charts
	        if (zrUtil.isArray(groupId)) {
	            var charts = groupId;
	            groupId = null;
	            // If any chart has group
	            zrUtil.each(charts, function (chart) {
	                if (chart.group != null) {
	                    groupId = chart.group;
	                }
	            });
	            groupId = groupId || ('g_' + groupIdBase++);
	            zrUtil.each(charts, function (chart) {
	                chart.group = groupId;
	            });
	        }
	        connectedGroups[groupId] = true;
	        return groupId;
	    };
	
	    /**
	     * @return {string} groupId
	     */
	    echarts.disConnect = function (groupId) {
	        connectedGroups[groupId] = false;
	    };
	
	    /**
	     * Dispose a chart instance
	     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart
	     */
	    echarts.dispose = function (chart) {
	        if (zrUtil.isDom(chart)) {
	            chart = echarts.getInstanceByDom(chart);
	        }
	        else if (typeof chart === 'string') {
	            chart = instances[chart];
	        }
	        if ((chart instanceof ECharts) && !chart.isDisposed()) {
	            chart.dispose();
	        }
	    };
	
	    /**
	     * @param  {HTMLDomElement} dom
	     * @return {echarts~ECharts}
	     */
	    echarts.getInstanceByDom = function (dom) {
	        var key = dom.getAttribute(DOM_ATTRIBUTE_KEY);
	        return instances[key];
	    };
	    /**
	     * @param {string} key
	     * @return {echarts~ECharts}
	     */
	    echarts.getInstanceById = function (key) {
	        return instances[key];
	    };
	
	    /**
	     * Register theme
	     */
	    echarts.registerTheme = function (name, theme) {
	        themeStorage[name] = theme;
	    };
	
	    /**
	     * Register option preprocessor
	     * @param {Function} preprocessorFunc
	     */
	    echarts.registerPreprocessor = function (preprocessorFunc) {
	        optionPreprocessorFuncs.push(preprocessorFunc);
	    };
	
	    /**
	     * @param {number} [priority=1000]
	     * @param {Function} processorFunc
	     */
	    echarts.registerProcessor = function (priority, processorFunc) {
	        if (typeof priority === 'function') {
	            processorFunc = priority;
	            priority = PRIORITY_PROCESSOR_FILTER;
	        }
	        if (__DEV__) {
	            if (isNaN(priority)) {
	                throw new Error('Unkown processor priority');
	            }
	        }
	        dataProcessorFuncs.push({
	            prio: priority,
	            func: processorFunc
	        });
	    };
	
	    /**
	     * Usage:
	     * registerAction('someAction', 'someEvent', function () { ... });
	     * registerAction('someAction', function () { ... });
	     * registerAction(
	     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},
	     *     function () { ... }
	     * );
	     *
	     * @param {(string|Object)} actionInfo
	     * @param {string} actionInfo.type
	     * @param {string} [actionInfo.event]
	     * @param {string} [actionInfo.update]
	     * @param {string} [eventName]
	     * @param {Function} action
	     */
	    echarts.registerAction = function (actionInfo, eventName, action) {
	        if (typeof eventName === 'function') {
	            action = eventName;
	            eventName = '';
	        }
	        var actionType = zrUtil.isObject(actionInfo)
	            ? actionInfo.type
	            : ([actionInfo, actionInfo = {
	                event: eventName
	            }][0]);
	
	        // Event name is all lowercase
	        actionInfo.event = (actionInfo.event || actionType).toLowerCase();
	        eventName = actionInfo.event;
	
	        if (!actions[actionType]) {
	            actions[actionType] = {action: action, actionInfo: actionInfo};
	        }
	        eventActionMap[eventName] = actionType;
	    };
	
	    /**
	     * @param {string} type
	     * @param {*} CoordinateSystem
	     */
	    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {
	        CoordinateSystemManager.register(type, CoordinateSystem);
	    };
	
	    /**
	     * Layout is a special stage of visual encoding
	     * Most visual encoding like color are common for different chart
	     * But each chart has it's own layout algorithm
	     *
	     * @param {string} [priority=1000]
	     * @param {Function} layoutFunc
	     */
	    echarts.registerLayout = function (priority, layoutFunc) {
	        if (typeof priority === 'function') {
	            layoutFunc = priority;
	            priority = PRIORITY_VISUAL_LAYOUT;
	        }
	        if (__DEV__) {
	            if (isNaN(priority)) {
	                throw new Error('Unkown layout priority');
	            }
	        }
	        visualFuncs.push({
	            prio: priority,
	            func: layoutFunc,
	            isLayout: true
	        });
	    };
	
	    /**
	     * @param {string} [priority=3000]
	     * @param {Function} visualFunc
	     */
	    echarts.registerVisual = function (priority, visualFunc) {
	        if (typeof priority === 'function') {
	            visualFunc = priority;
	            priority = PRIORITY_VISUAL_CHART;
	        }
	        if (__DEV__) {
	            if (isNaN(priority)) {
	                throw new Error('Unkown visual priority');
	            }
	        }
	        visualFuncs.push({
	            prio: priority,
	            func: visualFunc
	        });
	    };
	
	    var parseClassType = ComponentModel.parseClassType;
	    /**
	     * @param {Object} opts
	     * @param {string} [superClass]
	     */
	    echarts.extendComponentModel = function (opts, superClass) {
	        var Clazz = ComponentModel;
	        if (superClass) {
	            var classType = parseClassType(superClass);
	            Clazz = ComponentModel.getClass(classType.main, classType.sub, true);
	        }
	        return Clazz.extend(opts);
	    };
	
	    /**
	     * @param {Object} opts
	     * @param {string} [superClass]
	     */
	    echarts.extendComponentView = function (opts, superClass) {
	        var Clazz = ComponentView;
	        if (superClass) {
	            var classType = parseClassType(superClass);
	            Clazz = ComponentView.getClass(classType.main, classType.sub, true);
	        }
	        return Clazz.extend(opts);
	    };
	
	    /**
	     * @param {Object} opts
	     * @param {string} [superClass]
	     */
	    echarts.extendSeriesModel = function (opts, superClass) {
	        var Clazz = SeriesModel;
	        if (superClass) {
	            superClass = 'series.' + superClass.replace('series.', '');
	            var classType = parseClassType(superClass);
	            Clazz = SeriesModel.getClass(classType.main, classType.sub, true);
	        }
	        return Clazz.extend(opts);
	    };
	
	    /**
	     * @param {Object} opts
	     * @param {string} [superClass]
	     */
	    echarts.extendChartView = function (opts, superClass) {
	        var Clazz = ChartView;
	        if (superClass) {
	            superClass.replace('series.', '');
	            var classType = parseClassType(superClass);
	            Clazz = ChartView.getClass(classType.main, true);
	        }
	        return ChartView.extend(opts);
	    };
	
	    /**
	     * ZRender need a canvas context to do measureText.
	     * But in node environment canvas may be created by node-canvas.
	     * So we need to specify how to create a canvas instead of using document.createElement('canvas')
	     *
	     * Be careful of using it in the browser.
	     *
	     * @param {Function} creator
	     * @example
	     *     var Canvas = require('canvas');
	     *     var echarts = require('echarts');
	     *     echarts.setCanvasCreator(function () {
	     *         // Small size is enough.
	     *         return new Canvas(32, 32);
	     *     });
	     */
	    echarts.setCanvasCreator = function (creator) {
	        zrUtil.createCanvas = creator;
	    };
	
	    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, __webpack_require__(/*! ./visual/seriesColor */ 616));
	    echarts.registerPreprocessor(__webpack_require__(/*! ./preprocessor/backwardCompat */ 617));
	
	    // Default action
	    echarts.registerAction({
	        type: 'highlight',
	        event: 'highlight',
	        update: 'highlight'
	    }, zrUtil.noop);
	    echarts.registerAction({
	        type: 'downplay',
	        event: 'downplay',
	        update: 'downplay'
	    }, zrUtil.noop);
	
	
	    // --------
	    // Exports
	    // --------
	    //
	    echarts.List = __webpack_require__(/*! ./data/List */ 619);
	    echarts.Model = __webpack_require__(/*! ./model/Model */ 534);
	
	    echarts.graphic = __webpack_require__(/*! ./util/graphic */ 565);
	    echarts.number = __webpack_require__(/*! ./util/number */ 529);
	    echarts.format = __webpack_require__(/*! ./util/format */ 528);
	    echarts.matrix = __webpack_require__(/*! zrender/lib/core/matrix */ 533);
	    echarts.vector = __webpack_require__(/*! zrender/lib/core/vector */ 532);
	    echarts.color = __webpack_require__(/*! zrender/lib/tool/color */ 561);
	
	    echarts.util = {};
	    each([
	            'map', 'each', 'filter', 'indexOf', 'inherits',
	            'reduce', 'filter', 'bind', 'curry', 'isArray',
	            'isString', 'isObject', 'isFunction', 'extend', 'defaults'
	        ],
	        function (name) {
	            echarts.util[name] = zrUtil[name];
	        }
	    );
	
	    // PRIORITY
	    echarts.PRIORITY = {
	        PROCESSOR: {
	            FILTER: PRIORITY_PROCESSOR_FILTER,
	            STATISTIC: PRIORITY_PROCESSOR_STATISTIC
	        },
	        VISUAL: {
	            LAYOUT: PRIORITY_VISUAL_LAYOUT,
	            GLOBAL: PRIORITY_VISUAL_GLOBAL,
	            CHART: PRIORITY_VISUAL_CHART,
	            COMPONENT: PRIORITY_VISUAL_COMPONENT,
	            BRUSH: PRIORITY_VISUAL_BRUSH
	        }
	    };
	
	    module.exports = echarts;
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 524 */
/*!***********************************!*\
  !*** ./~/zrender/lib/core/env.js ***!
  \***********************************/
/***/ function(module, exports) {

	/**
	 * echarts设备环境识别
	 *
	 * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。
	 * @author firede[firede@firede.us]
	 * @desc thanks zepto.
	 */
	
	    var env = {};
	    if (typeof navigator === 'undefined') {
	        // In node
	        env = {
	            browser: {},
	            os: {},
	            node: true,
	            // Assume canvas is supported
	            canvasSupported: true
	        };
	    }
	    else {
	        env = detect(navigator.userAgent);
	    }
	
	    module.exports = env;
	
	    // Zepto.js
	    // (c) 2010-2013 Thomas Fuchs
	    // Zepto.js may be freely distributed under the MIT license.
	
	    function detect(ua) {
	        var os = {};
	        var browser = {};
	        // var webkit = ua.match(/Web[kK]it[\/]{0,1}([\d.]+)/);
	        // var android = ua.match(/(Android);?[\s\/]+([\d.]+)?/);
	        // var ipad = ua.match(/(iPad).*OS\s([\d_]+)/);
	        // var ipod = ua.match(/(iPod)(.*OS\s([\d_]+))?/);
	        // var iphone = !ipad && ua.match(/(iPhone\sOS)\s([\d_]+)/);
	        // var webos = ua.match(/(webOS|hpwOS)[\s\/]([\d.]+)/);
	        // var touchpad = webos && ua.match(/TouchPad/);
	        // var kindle = ua.match(/Kindle\/([\d.]+)/);
	        // var silk = ua.match(/Silk\/([\d._]+)/);
	        // var blackberry = ua.match(/(BlackBerry).*Version\/([\d.]+)/);
	        // var bb10 = ua.match(/(BB10).*Version\/([\d.]+)/);
	        // var rimtabletos = ua.match(/(RIM\sTablet\sOS)\s([\d.]+)/);
	        // var playbook = ua.match(/PlayBook/);
	        // var chrome = ua.match(/Chrome\/([\d.]+)/) || ua.match(/CriOS\/([\d.]+)/);
	        var firefox = ua.match(/Firefox\/([\d.]+)/);
	        // var safari = webkit && ua.match(/Mobile\//) && !chrome;
	        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;
	        var ie = ua.match(/MSIE\s([\d.]+)/)
	            // IE 11 Trident/7.0; rv:11.0
	            || ua.match(/Trident\/.+?rv:(([\d.]+))/);
	        var edge = ua.match(/Edge\/([\d.]+)/); // IE 12 and 12+
	
	        // Todo: clean this up with a better OS/browser seperation:
	        // - discern (more) between multiple browsers on android
	        // - decide if kindle fire in silk mode is android or not
	        // - Firefox on Android doesn't specify the Android version
	        // - possibly devide in os, device and browser hashes
	
	        // if (browser.webkit = !!webkit) browser.version = webkit[1];
	
	        // if (android) os.android = true, os.version = android[2];
	        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');
	        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');
	        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;
	        // if (webos) os.webos = true, os.version = webos[2];
	        // if (touchpad) os.touchpad = true;
	        // if (blackberry) os.blackberry = true, os.version = blackberry[2];
	        // if (bb10) os.bb10 = true, os.version = bb10[2];
	        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];
	        // if (playbook) browser.playbook = true;
	        // if (kindle) os.kindle = true, os.version = kindle[1];
	        // if (silk) browser.silk = true, browser.version = silk[1];
	        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;
	        // if (chrome) browser.chrome = true, browser.version = chrome[1];
	        if (firefox) browser.firefox = true, browser.version = firefox[1];
	        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;
	        // if (webview) browser.webview = true;
	        if (ie) {
	            browser.ie = true; browser.version = ie[1];
	        }
	        if (ie) {
	            browser.ie = true;
	            browser.version = ie[1];
	        }
	        if (edge) {
	            browser.edge = true;
	            browser.version = edge[1];
	        }
	
	        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||
	        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));
	        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||
	        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\/([\d.]+)/)) ||
	        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));
	
	        return {
	            browser: browser,
	            os: os,
	            node: false,
	            // 原生canvas支持，改极端点了
	            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)
	            canvasSupported : document.createElement('canvas').getContext ? true : false,
	            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>
	            // works on most browsers
	            // IE10/11 does not support touch event, and MS Edge supports them but not by
	            // default, so we dont check navigator.maxTouchPoints for them here.
	            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,
	            // <http://caniuse.com/#search=pointer%20event>.
	            pointerEventsSupported: 'onpointerdown' in window
	                // Firefox supports pointer but not by default,
	                // only MS browsers are reliable on pointer events currently.
	                && (browser.edge || (browser.ie && browser.version >= 10))
	        };
	    }


/***/ },
/* 525 */
/*!***************************************!*\
  !*** ./~/echarts/lib/model/Global.js ***!
  \***************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * ECharts global model
	 *
	 * @module {echarts/model/Global}
	 *
	 */
	
	
	
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	    var modelUtil = __webpack_require__(/*! ../util/model */ 527);
	    var Model = __webpack_require__(/*! ./Model */ 534);
	    var each = zrUtil.each;
	    var filter = zrUtil.filter;
	    var map = zrUtil.map;
	    var isArray = zrUtil.isArray;
	    var indexOf = zrUtil.indexOf;
	    var isObject = zrUtil.isObject;
	
	    var ComponentModel = __webpack_require__(/*! ./Component */ 541);
	
	    var globalDefault = __webpack_require__(/*! ./globalDefault */ 545);
	
	    var OPTION_INNER_KEY = '\0_ec_inner';
	
	    /**
	     * @alias module:echarts/model/Global
	     *
	     * @param {Object} option
	     * @param {module:echarts/model/Model} parentModel
	     * @param {Object} theme
	     */
	    var GlobalModel = Model.extend({
	
	        constructor: GlobalModel,
	
	        init: function (option, parentModel, theme, optionManager) {
	            theme = theme || {};
	
	            this.option = null; // Mark as not initialized.
	
	            /**
	             * @type {module:echarts/model/Model}
	             * @private
	             */
	            this._theme = new Model(theme);
	
	            /**
	             * @type {module:echarts/model/OptionManager}
	             */
	            this._optionManager = optionManager;
	        },
	
	        setOption: function (option, optionPreprocessorFuncs) {
	            zrUtil.assert(
	                !(OPTION_INNER_KEY in option),
	                'please use chart.getOption()'
	            );
	
	            this._optionManager.setOption(option, optionPreprocessorFuncs);
	
	            this.resetOption();
	        },
	
	        /**
	         * @param {string} type null/undefined: reset all.
	         *                      'recreate': force recreate all.
	         *                      'timeline': only reset timeline option
	         *                      'media': only reset media query option
	         * @return {boolean} Whether option changed.
	         */
	        resetOption: function (type) {
	            var optionChanged = false;
	            var optionManager = this._optionManager;
	
	            if (!type || type === 'recreate') {
	                var baseOption = optionManager.mountOption(type === 'recreate');
	
	                if (!this.option || type === 'recreate') {
	                    initBase.call(this, baseOption);
	                }
	                else {
	                    this.restoreData();
	                    this.mergeOption(baseOption);
	                }
	                optionChanged = true;
	            }
	
	            if (type === 'timeline' || type === 'media') {
	                this.restoreData();
	            }
	
	            if (!type || type === 'recreate' || type === 'timeline') {
	                var timelineOption = optionManager.getTimelineOption(this);
	                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);
	            }
	
	            if (!type || type === 'recreate' || type === 'media') {
	                var mediaOptions = optionManager.getMediaOption(this, this._api);
	                if (mediaOptions.length) {
	                    each(mediaOptions, function (mediaOption) {
	                        this.mergeOption(mediaOption, optionChanged = true);
	                    }, this);
	                }
	            }
	
	            return optionChanged;
	        },
	
	        /**
	         * @protected
	         */
	        mergeOption: function (newOption) {
	            var option = this.option;
	            var componentsMap = this._componentsMap;
	            var newCptTypes = [];
	
	            // 如果不存在对应的 component model 则直接 merge
	            each(newOption, function (componentOption, mainType) {
	                if (componentOption == null) {
	                    return;
	                }
	
	                if (!ComponentModel.hasClass(mainType)) {
	                    option[mainType] = option[mainType] == null
	                        ? zrUtil.clone(componentOption)
	                        : zrUtil.merge(option[mainType], componentOption, true);
	                }
	                else {
	                    newCptTypes.push(mainType);
	                }
	            });
	
	            // FIXME OPTION 同步是否要改回原来的
	            ComponentModel.topologicalTravel(
	                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this
	            );
	
	            function visitComponent(mainType, dependencies) {
	                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);
	
	                var mapResult = modelUtil.mappingToExists(
	                    componentsMap[mainType], newCptOptionList
	                );
	
	                makeKeyInfo(mainType, mapResult);
	
	                var dependentModels = getComponentsByTypes(
	                    componentsMap, dependencies
	                );
	
	                option[mainType] = [];
	                componentsMap[mainType] = [];
	
	                each(mapResult, function (resultItem, index) {
	                    var componentModel = resultItem.exist;
	                    var newCptOption = resultItem.option;
	
	                    zrUtil.assert(
	                        isObject(newCptOption) || componentModel,
	                        'Empty component definition'
	                    );
	
	                    // Consider where is no new option and should be merged using {},
	                    // see removeEdgeAndAdd in topologicalTravel and
	                    // ComponentModel.getAllClassMainTypes.
	                    if (!newCptOption) {
	                        componentModel.mergeOption({}, this);
	                        componentModel.optionUpdated({}, false);
	                    }
	                    else {
	                        var ComponentModelClass = ComponentModel.getClass(
	                            mainType, resultItem.keyInfo.subType, true
	                        );
	
	                        if (componentModel && componentModel instanceof ComponentModelClass) {
	                            componentModel.mergeOption(newCptOption, this);
	                            componentModel.optionUpdated(newCptOption, false);
	                        }
	                        else {
	                            // PENDING Global as parent ?
	                            var extraOpt = zrUtil.extend(
	                                {
	                                    dependentModels: dependentModels,
	                                    componentIndex: index
	                                },
	                                resultItem.keyInfo
	                            );
	                            componentModel = new ComponentModelClass(
	                                newCptOption, this, this, extraOpt
	                            );
	                            componentModel.init(newCptOption, this, this, extraOpt);
	                            // Call optionUpdated after init.
	                            // newCptOption has been used as componentModel.option
	                            // and may be merged with theme and default, so pass null
	                            // to avoid confusion.
	                            componentModel.optionUpdated(null, true);
	                        }
	                    }
	
	                    componentsMap[mainType][index] = componentModel;
	                    option[mainType][index] = componentModel.option;
	                }, this);
	
	                // Backup series for filtering.
	                if (mainType === 'series') {
	                    this._seriesIndices = createSeriesIndices(componentsMap.series);
	                }
	            }
	        },
	
	        /**
	         * Get option for output (cloned option and inner info removed)
	         * @public
	         * @return {Object}
	         */
	        getOption: function () {
	            var option = zrUtil.clone(this.option);
	
	            each(option, function (opts, mainType) {
	                if (ComponentModel.hasClass(mainType)) {
	                    var opts = modelUtil.normalizeToArray(opts);
	                    for (var i = opts.length - 1; i >= 0; i--) {
	                        // Remove options with inner id.
	                        if (modelUtil.isIdInner(opts[i])) {
	                            opts.splice(i, 1);
	                        }
	                    }
	                    option[mainType] = opts;
	                }
	            });
	
	            delete option[OPTION_INNER_KEY];
	
	            return option;
	        },
	
	        /**
	         * @return {module:echarts/model/Model}
	         */
	        getTheme: function () {
	            return this._theme;
	        },
	
	        /**
	         * @param {string} mainType
	         * @param {number} [idx=0]
	         * @return {module:echarts/model/Component}
	         */
	        getComponent: function (mainType, idx) {
	            var list = this._componentsMap[mainType];
	            if (list) {
	                return list[idx || 0];
	            }
	        },
	
	        /**
	         * @param {Object} condition
	         * @param {string} condition.mainType
	         * @param {string} [condition.subType] If ignore, only query by mainType
	         * @param {number} [condition.index] Either input index or id or name.
	         * @param {string} [condition.id] Either input index or id or name.
	         * @param {string} [condition.name] Either input index or id or name.
	         * @return {Array.<module:echarts/model/Component>}
	         */
	        queryComponents: function (condition) {
	            var mainType = condition.mainType;
	            if (!mainType) {
	                return [];
	            }
	
	            var index = condition.index;
	            var id = condition.id;
	            var name = condition.name;
	
	            var cpts = this._componentsMap[mainType];
	
	            if (!cpts || !cpts.length) {
	                return [];
	            }
	
	            var result;
	
	            if (index != null) {
	                if (!isArray(index)) {
	                    index = [index];
	                }
	                result = filter(map(index, function (idx) {
	                    return cpts[idx];
	                }), function (val) {
	                    return !!val;
	                });
	            }
	            else if (id != null) {
	                var isIdArray = isArray(id);
	                result = filter(cpts, function (cpt) {
	                    return (isIdArray && indexOf(id, cpt.id) >= 0)
	                        || (!isIdArray && cpt.id === id);
	                });
	            }
	            else if (name != null) {
	                var isNameArray = isArray(name);
	                result = filter(cpts, function (cpt) {
	                    return (isNameArray && indexOf(name, cpt.name) >= 0)
	                        || (!isNameArray && cpt.name === name);
	                });
	            }
	
	            return filterBySubType(result, condition);
	        },
	
	        /**
	         * The interface is different from queryComponents,
	         * which is convenient for inner usage.
	         *
	         * @usage
	         * var result = findComponents(
	         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}
	         * );
	         * var result = findComponents(
	         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}
	         * );
	         * var result = findComponents(
	         *     {mainType: 'series'},
	         *     function (model, index) {...}
	         * );
	         * // result like [component0, componnet1, ...]
	         *
	         * @param {Object} condition
	         * @param {string} condition.mainType Mandatory.
	         * @param {string} [condition.subType] Optional.
	         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},
	         *        where xxx is mainType.
	         *        If query attribute is null/undefined or has no index/id/name,
	         *        do not filtering by query conditions, which is convenient for
	         *        no-payload situations or when target of action is global.
	         * @param {Function} [condition.filter] parameter: component, return boolean.
	         * @return {Array.<module:echarts/model/Component>}
	         */
	        findComponents: function (condition) {
	            var query = condition.query;
	            var mainType = condition.mainType;
	
	            var queryCond = getQueryCond(query);
	            var result = queryCond
	                ? this.queryComponents(queryCond)
	                : this._componentsMap[mainType];
	
	            return doFilter(filterBySubType(result, condition));
	
	            function getQueryCond(q) {
	                var indexAttr = mainType + 'Index';
	                var idAttr = mainType + 'Id';
	                var nameAttr = mainType + 'Name';
	                return q && (
	                        q.hasOwnProperty(indexAttr)
	                        || q.hasOwnProperty(idAttr)
	                        || q.hasOwnProperty(nameAttr)
	                    )
	                    ? {
	                        mainType: mainType,
	                        // subType will be filtered finally.
	                        index: q[indexAttr],
	                        id: q[idAttr],
	                        name: q[nameAttr]
	                    }
	                    : null;
	            }
	
	            function doFilter(res) {
	                return condition.filter
	                     ? filter(res, condition.filter)
	                     : res;
	            }
	        },
	
	        /**
	         * @usage
	         * eachComponent('legend', function (legendModel, index) {
	         *     ...
	         * });
	         * eachComponent(function (componentType, model, index) {
	         *     // componentType does not include subType
	         *     // (componentType is 'xxx' but not 'xxx.aa')
	         * });
	         * eachComponent(
	         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},
	         *     function (model, index) {...}
	         * );
	         * eachComponent(
	         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},
	         *     function (model, index) {...}
	         * );
	         *
	         * @param {string|Object=} mainType When mainType is object, the definition
	         *                                  is the same as the method 'findComponents'.
	         * @param {Function} cb
	         * @param {*} context
	         */
	        eachComponent: function (mainType, cb, context) {
	            var componentsMap = this._componentsMap;
	
	            if (typeof mainType === 'function') {
	                context = cb;
	                cb = mainType;
	                each(componentsMap, function (components, componentType) {
	                    each(components, function (component, index) {
	                        cb.call(context, componentType, component, index);
	                    });
	                });
	            }
	            else if (zrUtil.isString(mainType)) {
	                each(componentsMap[mainType], cb, context);
	            }
	            else if (isObject(mainType)) {
	                var queryResult = this.findComponents(mainType);
	                each(queryResult, cb, context);
	            }
	        },
	
	        /**
	         * @param {string} name
	         * @return {Array.<module:echarts/model/Series>}
	         */
	        getSeriesByName: function (name) {
	            var series = this._componentsMap.series;
	            return filter(series, function (oneSeries) {
	                return oneSeries.name === name;
	            });
	        },
	
	        /**
	         * @param {number} seriesIndex
	         * @return {module:echarts/model/Series}
	         */
	        getSeriesByIndex: function (seriesIndex) {
	            return this._componentsMap.series[seriesIndex];
	        },
	
	        /**
	         * @param {string} subType
	         * @return {Array.<module:echarts/model/Series>}
	         */
	        getSeriesByType: function (subType) {
	            var series = this._componentsMap.series;
	            return filter(series, function (oneSeries) {
	                return oneSeries.subType === subType;
	            });
	        },
	
	        /**
	         * @return {Array.<module:echarts/model/Series>}
	         */
	        getSeries: function () {
	            return this._componentsMap.series.slice();
	        },
	
	        /**
	         * After filtering, series may be different
	         * frome raw series.
	         *
	         * @param {Function} cb
	         * @param {*} context
	         */
	        eachSeries: function (cb, context) {
	            assertSeriesInitialized(this);
	            each(this._seriesIndices, function (rawSeriesIndex) {
	                var series = this._componentsMap.series[rawSeriesIndex];
	                cb.call(context, series, rawSeriesIndex);
	            }, this);
	        },
	
	        /**
	         * Iterate raw series before filtered.
	         *
	         * @param {Function} cb
	         * @param {*} context
	         */
	        eachRawSeries: function (cb, context) {
	            each(this._componentsMap.series, cb, context);
	        },
	
	        /**
	         * After filtering, series may be different.
	         * frome raw series.
	         *
	         * @parma {string} subType
	         * @param {Function} cb
	         * @param {*} context
	         */
	        eachSeriesByType: function (subType, cb, context) {
	            assertSeriesInitialized(this);
	            each(this._seriesIndices, function (rawSeriesIndex) {
	                var series = this._componentsMap.series[rawSeriesIndex];
	                if (series.subType === subType) {
	                    cb.call(context, series, rawSeriesIndex);
	                }
	            }, this);
	        },
	
	        /**
	         * Iterate raw series before filtered of given type.
	         *
	         * @parma {string} subType
	         * @param {Function} cb
	         * @param {*} context
	         */
	        eachRawSeriesByType: function (subType, cb, context) {
	            return each(this.getSeriesByType(subType), cb, context);
	        },
	
	        /**
	         * @param {module:echarts/model/Series} seriesModel
	         */
	        isSeriesFiltered: function (seriesModel) {
	            assertSeriesInitialized(this);
	            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;
	        },
	
	        /**
	         * @param {Function} cb
	         * @param {*} context
	         */
	        filterSeries: function (cb, context) {
	            assertSeriesInitialized(this);
	            var filteredSeries = filter(
	                this._componentsMap.series, cb, context
	            );
	            this._seriesIndices = createSeriesIndices(filteredSeries);
	        },
	
	        restoreData: function () {
	            var componentsMap = this._componentsMap;
	
	            this._seriesIndices = createSeriesIndices(componentsMap.series);
	
	            var componentTypes = [];
	            each(componentsMap, function (components, componentType) {
	                componentTypes.push(componentType);
	            });
	
	            ComponentModel.topologicalTravel(
	                componentTypes,
	                ComponentModel.getAllClassMainTypes(),
	                function (componentType, dependencies) {
	                    each(componentsMap[componentType], function (component) {
	                        component.restoreData();
	                    });
	                }
	            );
	        }
	
	    });
	
	    /**
	     * @inner
	     */
	    function mergeTheme(option, theme) {
	        for (var name in theme) {
	            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理
	            if (!ComponentModel.hasClass(name)) {
	                if (typeof theme[name] === 'object') {
	                    option[name] = !option[name]
	                        ? zrUtil.clone(theme[name])
	                        : zrUtil.merge(option[name], theme[name], false);
	                }
	                else {
	                    if (option[name] == null) {
	                        option[name] = theme[name];
	                    }
	                }
	            }
	        }
	    }
	
	    function initBase(baseOption) {
	        baseOption = baseOption;
	
	        // Using OPTION_INNER_KEY to mark that this option can not be used outside,
	        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.
	        this.option = {};
	        this.option[OPTION_INNER_KEY] = 1;
	
	        /**
	         * @type {Object.<string, Array.<module:echarts/model/Model>>}
	         * @private
	         */
	        this._componentsMap = {};
	
	        /**
	         * Mapping between filtered series list and raw series list.
	         * key: filtered series indices, value: raw series indices.
	         * @type {Array.<nubmer>}
	         * @private
	         */
	        this._seriesIndices = null;
	
	        mergeTheme(baseOption, this._theme.option);
	
	        // TODO Needs clone when merging to the unexisted property
	        zrUtil.merge(baseOption, globalDefault, false);
	
	        this.mergeOption(baseOption);
	    }
	
	    /**
	     * @inner
	     * @param {Array.<string>|string} types model types
	     * @return {Object} key: {string} type, value: {Array.<Object>} models
	     */
	    function getComponentsByTypes(componentsMap, types) {
	        if (!zrUtil.isArray(types)) {
	            types = types ? [types] : [];
	        }
	
	        var ret = {};
	        each(types, function (type) {
	            ret[type] = (componentsMap[type] || []).slice();
	        });
	
	        return ret;
	    }
	
	    /**
	     * @inner
	     */
	    function makeKeyInfo(mainType, mapResult) {
	        // We use this id to hash component models and view instances
	        // in echarts. id can be specified by user, or auto generated.
	
	        // The id generation rule ensures new view instance are able
	        // to mapped to old instance when setOption are called in
	        // no-merge mode. So we generate model id by name and plus
	        // type in view id.
	
	        // name can be duplicated among components, which is convenient
	        // to specify multi components (like series) by one name.
	
	        // Ensure that each id is distinct.
	        var idMap = {};
	
	        each(mapResult, function (item, index) {
	            var existCpt = item.exist;
	            existCpt && (idMap[existCpt.id] = item);
	        });
	
	        each(mapResult, function (item, index) {
	            var opt = item.option;
	
	            zrUtil.assert(
	                !opt || opt.id == null || !idMap[opt.id] || idMap[opt.id] === item,
	                'id duplicates: ' + (opt && opt.id)
	            );
	
	            opt && opt.id != null && (idMap[opt.id] = item);
	
	            // Complete subType
	            if (isObject(opt)) {
	                var subType = determineSubType(mainType, opt, item.exist);
	                item.keyInfo = {mainType: mainType, subType: subType};
	            }
	        });
	
	        // Make name and id.
	        each(mapResult, function (item, index) {
	            var existCpt = item.exist;
	            var opt = item.option;
	            var keyInfo = item.keyInfo;
	
	            if (!isObject(opt)) {
	                return;
	            }
	
	            // name can be overwitten. Consider case: axis.name = '20km'.
	            // But id generated by name will not be changed, which affect
	            // only in that case: setOption with 'not merge mode' and view
	            // instance will be recreated, which can be accepted.
	            keyInfo.name = opt.name != null
	                ? opt.name + ''
	                : existCpt
	                ? existCpt.name
	                : '\0-';
	
	            if (existCpt) {
	                keyInfo.id = existCpt.id;
	            }
	            else if (opt.id != null) {
	                keyInfo.id = opt.id + '';
	            }
	            else {
	                // Consider this situatoin:
	                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]
	                //  optionB [{..}, {name: 'a'}, {name: 'a'}]
	                // Series with the same name between optionA and optionB
	                // should be mapped.
	                var idNum = 0;
	                do {
	                    keyInfo.id = '\0' + keyInfo.name + '\0' + idNum++;
	                }
	                while (idMap[keyInfo.id]);
	            }
	
	            idMap[keyInfo.id] = item;
	        });
	    }
	
	    /**
	     * @inner
	     */
	    function determineSubType(mainType, newCptOption, existComponent) {
	        var subType = newCptOption.type
	            ? newCptOption.type
	            : existComponent
	            ? existComponent.subType
	            // Use determineSubType only when there is no existComponent.
	            : ComponentModel.determineSubType(mainType, newCptOption);
	
	        // tooltip, markline, markpoint may always has no subType
	        return subType;
	    }
	
	    /**
	     * @inner
	     */
	    function createSeriesIndices(seriesModels) {
	        return map(seriesModels, function (series) {
	            return series.componentIndex;
	        }) || [];
	    }
	
	    /**
	     * @inner
	     */
	    function filterBySubType(components, condition) {
	        // Using hasOwnProperty for restrict. Consider
	        // subType is undefined in user payload.
	        return condition.hasOwnProperty('subType')
	            ? filter(components, function (cpt) {
	                return cpt.subType === condition.subType;
	            })
	            : components;
	    }
	
	    /**
	     * @inner
	     */
	    function assertSeriesInitialized(ecModel) {
	        // Components that use _seriesIndices should depends on series component,
	        // which make sure that their initialization is after series.
	        if (__DEV__) {
	            if (!ecModel._seriesIndices) {
	                throw new Error('Series has not been initialized yet.');
	            }
	        }
	    }
	
	    zrUtil.mixin(GlobalModel, __webpack_require__(/*! ./mixin/colorPalette */ 546));
	
	    module.exports = GlobalModel;


/***/ },
/* 526 */
/*!************************************!*\
  !*** ./~/zrender/lib/core/util.js ***!
  \************************************/
/***/ function(module, exports) {

	/**
	 * @module zrender/core/util
	 */
	
	
	    // 用于处理merge时无法遍历Date等对象的问题
	    var BUILTIN_OBJECT = {
	        '[object Function]': 1,
	        '[object RegExp]': 1,
	        '[object Date]': 1,
	        '[object Error]': 1,
	        '[object CanvasGradient]': 1,
	        '[object CanvasPattern]': 1,
	        // In node-canvas Image can be Canvas.Image
	        '[object Image]': 1
	    };
	
	    var objToString = Object.prototype.toString;
	
	    var arrayProto = Array.prototype;
	    var nativeForEach = arrayProto.forEach;
	    var nativeFilter = arrayProto.filter;
	    var nativeSlice = arrayProto.slice;
	    var nativeMap = arrayProto.map;
	    var nativeReduce = arrayProto.reduce;
	
	    /**
	     * @param {*} source
	     * @return {*} 拷贝后的新对象
	     */
	    function clone(source) {
	        if (typeof source == 'object' && source !== null) {
	            var result = source;
	            if (source instanceof Array) {
	                result = [];
	                for (var i = 0, len = source.length; i < len; i++) {
	                    result[i] = clone(source[i]);
	                }
	            }
	            else if (
	                !isBuildInObject(source)
	                // 是否为 dom 对象
	                && !isDom(source)
	            ) {
	                result = {};
	                for (var key in source) {
	                    if (source.hasOwnProperty(key)) {
	                        result[key] = clone(source[key]);
	                    }
	                }
	            }
	
	            return result;
	        }
	
	        return source;
	    }
	
	    /**
	     * @memberOf module:zrender/core/util
	     * @param {*} target
	     * @param {*} source
	     * @param {boolean} [overwrite=false]
	     */
	    function merge(target, source, overwrite) {
	        // We should escapse that source is string
	        // and enter for ... in ...
	        if (!isObject(source) || !isObject(target)) {
	            return overwrite ? clone(source) : target;
	        }
	
	        for (var key in source) {
	            if (source.hasOwnProperty(key)) {
	                var targetProp = target[key];
	                var sourceProp = source[key];
	
	                if (isObject(sourceProp)
	                    && isObject(targetProp)
	                    && !isArray(sourceProp)
	                    && !isArray(targetProp)
	                    && !isDom(sourceProp)
	                    && !isDom(targetProp)
	                    && !isBuildInObject(sourceProp)
	                    && !isBuildInObject(targetProp)
	                ) {
	                    // 如果需要递归覆盖，就递归调用merge
	                    merge(targetProp, sourceProp, overwrite);
	                }
	                else if (overwrite || !(key in target)) {
	                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况
	                    // NOTE，在 target[key] 不存在的时候也是直接覆盖
	                    target[key] = clone(source[key], true);
	                }
	            }
	        }
	
	        return target;
	    }
	
	    /**
	     * @param {Array} targetAndSources The first item is target, and the rests are source.
	     * @param {boolean} [overwrite=false]
	     * @return {*} target
	     */
	    function mergeAll(targetAndSources, overwrite) {
	        var result = targetAndSources[0];
	        for (var i = 1, len = targetAndSources.length; i < len; i++) {
	            result = merge(result, targetAndSources[i], overwrite);
	        }
	        return result;
	    }
	
	    /**
	     * @param {*} target
	     * @param {*} source
	     * @memberOf module:zrender/core/util
	     */
	    function extend(target, source) {
	        for (var key in source) {
	            if (source.hasOwnProperty(key)) {
	                target[key] = source[key];
	            }
	        }
	        return target;
	    }
	
	    /**
	     * @param {*} target
	     * @param {*} source
	     * @param {boolen} [overlay=false]
	     * @memberOf module:zrender/core/util
	     */
	    function defaults(target, source, overlay) {
	        for (var key in source) {
	            if (source.hasOwnProperty(key)
	                && (overlay ? source[key] != null : target[key] == null)
	            ) {
	                target[key] = source[key];
	            }
	        }
	        return target;
	    }
	
	    function createCanvas() {
	        return document.createElement('canvas');
	    }
	    // FIXME
	    var _ctx;
	    function getContext() {
	        if (!_ctx) {
	            // Use util.createCanvas instead of createCanvas
	            // because createCanvas may be overwritten in different environment
	            _ctx = util.createCanvas().getContext('2d');
	        }
	        return _ctx;
	    }
	
	    /**
	     * 查询数组中元素的index
	     * @memberOf module:zrender/core/util
	     */
	    function indexOf(array, value) {
	        if (array) {
	            if (array.indexOf) {
	                return array.indexOf(value);
	            }
	            for (var i = 0, len = array.length; i < len; i++) {
	                if (array[i] === value) {
	                    return i;
	                }
	            }
	        }
	        return -1;
	    }
	
	    /**
	     * 构造类继承关系
	     *
	     * @memberOf module:zrender/core/util
	     * @param {Function} clazz 源类
	     * @param {Function} baseClazz 基类
	     */
	    function inherits(clazz, baseClazz) {
	        var clazzPrototype = clazz.prototype;
	        function F() {}
	        F.prototype = baseClazz.prototype;
	        clazz.prototype = new F();
	
	        for (var prop in clazzPrototype) {
	            clazz.prototype[prop] = clazzPrototype[prop];
	        }
	        clazz.prototype.constructor = clazz;
	        clazz.superClass = baseClazz;
	    }
	
	    /**
	     * @memberOf module:zrender/core/util
	     * @param {Object|Function} target
	     * @param {Object|Function} sorce
	     * @param {boolean} overlay
	     */
	    function mixin(target, source, overlay) {
	        target = 'prototype' in target ? target.prototype : target;
	        source = 'prototype' in source ? source.prototype : source;
	
	        defaults(target, source, overlay);
	    }
	
	    /**
	     * @param {Array|TypedArray} data
	     */
	    function isArrayLike(data) {
	        if (! data) {
	            return;
	        }
	        if (typeof data == 'string') {
	            return false;
	        }
	        return typeof data.length == 'number';
	    }
	
	    /**
	     * 数组或对象遍历
	     * @memberOf module:zrender/core/util
	     * @param {Object|Array} obj
	     * @param {Function} cb
	     * @param {*} [context]
	     */
	    function each(obj, cb, context) {
	        if (!(obj && cb)) {
	            return;
	        }
	        if (obj.forEach && obj.forEach === nativeForEach) {
	            obj.forEach(cb, context);
	        }
	        else if (obj.length === +obj.length) {
	            for (var i = 0, len = obj.length; i < len; i++) {
	                cb.call(context, obj[i], i, obj);
	            }
	        }
	        else {
	            for (var key in obj) {
	                if (obj.hasOwnProperty(key)) {
	                    cb.call(context, obj[key], key, obj);
	                }
	            }
	        }
	    }
	
	    /**
	     * 数组映射
	     * @memberOf module:zrender/core/util
	     * @param {Array} obj
	     * @param {Function} cb
	     * @param {*} [context]
	     * @return {Array}
	     */
	    function map(obj, cb, context) {
	        if (!(obj && cb)) {
	            return;
	        }
	        if (obj.map && obj.map === nativeMap) {
	            return obj.map(cb, context);
	        }
	        else {
	            var result = [];
	            for (var i = 0, len = obj.length; i < len; i++) {
	                result.push(cb.call(context, obj[i], i, obj));
	            }
	            return result;
	        }
	    }
	
	    /**
	     * @memberOf module:zrender/core/util
	     * @param {Array} obj
	     * @param {Function} cb
	     * @param {Object} [memo]
	     * @param {*} [context]
	     * @return {Array}
	     */
	    function reduce(obj, cb, memo, context) {
	        if (!(obj && cb)) {
	            return;
	        }
	        if (obj.reduce && obj.reduce === nativeReduce) {
	            return obj.reduce(cb, memo, context);
	        }
	        else {
	            for (var i = 0, len = obj.length; i < len; i++) {
	                memo = cb.call(context, memo, obj[i], i, obj);
	            }
	            return memo;
	        }
	    }
	
	    /**
	     * 数组过滤
	     * @memberOf module:zrender/core/util
	     * @param {Array} obj
	     * @param {Function} cb
	     * @param {*} [context]
	     * @return {Array}
	     */
	    function filter(obj, cb, context) {
	        if (!(obj && cb)) {
	            return;
	        }
	        if (obj.filter && obj.filter === nativeFilter) {
	            return obj.filter(cb, context);
	        }
	        else {
	            var result = [];
	            for (var i = 0, len = obj.length; i < len; i++) {
	                if (cb.call(context, obj[i], i, obj)) {
	                    result.push(obj[i]);
	                }
	            }
	            return result;
	        }
	    }
	
	    /**
	     * 数组项查找
	     * @memberOf module:zrender/core/util
	     * @param {Array} obj
	     * @param {Function} cb
	     * @param {*} [context]
	     * @return {Array}
	     */
	    function find(obj, cb, context) {
	        if (!(obj && cb)) {
	            return;
	        }
	        for (var i = 0, len = obj.length; i < len; i++) {
	            if (cb.call(context, obj[i], i, obj)) {
	                return obj[i];
	            }
	        }
	    }
	
	    /**
	     * @memberOf module:zrender/core/util
	     * @param {Function} func
	     * @param {*} context
	     * @return {Function}
	     */
	    function bind(func, context) {
	        var args = nativeSlice.call(arguments, 2);
	        return function () {
	            return func.apply(context, args.concat(nativeSlice.call(arguments)));
	        };
	    }
	
	    /**
	     * @memberOf module:zrender/core/util
	     * @param {Function} func
	     * @return {Function}
	     */
	    function curry(func) {
	        var args = nativeSlice.call(arguments, 1);
	        return function () {
	            return func.apply(this, args.concat(nativeSlice.call(arguments)));
	        };
	    }
	
	    /**
	     * @memberOf module:zrender/core/util
	     * @param {*} value
	     * @return {boolean}
	     */
	    function isArray(value) {
	        return objToString.call(value) === '[object Array]';
	    }
	
	    /**
	     * @memberOf module:zrender/core/util
	     * @param {*} value
	     * @return {boolean}
	     */
	    function isFunction(value) {
	        return typeof value === 'function';
	    }
	
	    /**
	     * @memberOf module:zrender/core/util
	     * @param {*} value
	     * @return {boolean}
	     */
	    function isString(value) {
	        return objToString.call(value) === '[object String]';
	    }
	
	    /**
	     * @memberOf module:zrender/core/util
	     * @param {*} value
	     * @return {boolean}
	     */
	    function isObject(value) {
	        // Avoid a V8 JIT bug in Chrome 19-20.
	        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.
	        var type = typeof value;
	        return type === 'function' || (!!value && type == 'object');
	    }
	
	    /**
	     * @memberOf module:zrender/core/util
	     * @param {*} value
	     * @return {boolean}
	     */
	    function isBuildInObject(value) {
	        return !!BUILTIN_OBJECT[objToString.call(value)];
	    }
	
	    /**
	     * @memberOf module:zrender/core/util
	     * @param {*} value
	     * @return {boolean}
	     */
	    function isDom(value) {
	        return value && value.nodeType === 1
	               && typeof(value.nodeName) == 'string';
	    }
	
	    /**
	     * If value1 is not null, then return value1, otherwise judget rest of values.
	     * @memberOf module:zrender/core/util
	     * @return {*} Final value
	     */
	    function retrieve(values) {
	        for (var i = 0, len = arguments.length; i < len; i++) {
	            if (arguments[i] != null) {
	                return arguments[i];
	            }
	        }
	    }
	
	    /**
	     * @memberOf module:zrender/core/util
	     * @param {Array} arr
	     * @param {number} startIndex
	     * @param {number} endIndex
	     * @return {Array}
	     */
	    function slice() {
	        return Function.call.apply(nativeSlice, arguments);
	    }
	
	    /**
	     * @memberOf module:zrender/core/util
	     * @param {boolean} condition
	     * @param {string} message
	     */
	    function assert(condition, message) {
	        if (!condition) {
	            throw new Error(message);
	        }
	    }
	
	    var util = {
	        inherits: inherits,
	        mixin: mixin,
	        clone: clone,
	        merge: merge,
	        mergeAll: mergeAll,
	        extend: extend,
	        defaults: defaults,
	        getContext: getContext,
	        createCanvas: createCanvas,
	        indexOf: indexOf,
	        slice: slice,
	        find: find,
	        isArrayLike: isArrayLike,
	        each: each,
	        map: map,
	        reduce: reduce,
	        filter: filter,
	        bind: bind,
	        curry: curry,
	        isArray: isArray,
	        isString: isString,
	        isObject: isObject,
	        isFunction: isFunction,
	        isBuildInObject: isBuildInObject,
	        isDom: isDom,
	        retrieve: retrieve,
	        assert: assert,
	        noop: function () {}
	    };
	    module.exports = util;
	


/***/ },
/* 527 */
/*!*************************************!*\
  !*** ./~/echarts/lib/util/model.js ***!
  \*************************************/
/***/ function(module, exports, __webpack_require__) {

	
	
	    var formatUtil = __webpack_require__(/*! ./format */ 528);
	    var nubmerUtil = __webpack_require__(/*! ./number */ 529);
	    var Model = __webpack_require__(/*! ../model/Model */ 534);
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	
	    var AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle'];
	
	    var modelUtil = {};
	
	    /**
	     * Create "each" method to iterate names.
	     *
	     * @pubilc
	     * @param  {Array.<string>} names
	     * @param  {Array.<string>=} attrs
	     * @return {Function}
	     */
	    modelUtil.createNameEach = function (names, attrs) {
	        names = names.slice();
	        var capitalNames = zrUtil.map(names, modelUtil.capitalFirst);
	        attrs = (attrs || []).slice();
	        var capitalAttrs = zrUtil.map(attrs, modelUtil.capitalFirst);
	
	        return function (callback, context) {
	            zrUtil.each(names, function (name, index) {
	                var nameObj = {name: name, capital: capitalNames[index]};
	
	                for (var j = 0; j < attrs.length; j++) {
	                    nameObj[attrs[j]] = name + capitalAttrs[j];
	                }
	
	                callback.call(context, nameObj);
	            });
	        };
	    };
	
	    /**
	     * @public
	     */
	    modelUtil.capitalFirst = function (str) {
	        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;
	    };
	
	    /**
	     * Iterate each dimension name.
	     *
	     * @public
	     * @param {Function} callback The parameter is like:
	     *                            {
	     *                                name: 'angle',
	     *                                capital: 'Angle',
	     *                                axis: 'angleAxis',
	     *                                axisIndex: 'angleAixs',
	     *                                index: 'angleIndex'
	     *                            }
	     * @param {Object} context
	     */
	    modelUtil.eachAxisDim = modelUtil.createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index']);
	
	    /**
	     * If value is not array, then translate it to array.
	     * @param  {*} value
	     * @return {Array} [value] or value
	     */
	    modelUtil.normalizeToArray = function (value) {
	        return value instanceof Array
	            ? value
	            : value == null
	            ? []
	            : [value];
	    };
	
	    /**
	     * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.
	     * dataZoomModels and 'links' make up one or more graphics.
	     * This function finds the graphic where the source dataZoomModel is in.
	     *
	     * @public
	     * @param {Function} forEachNode Node iterator.
	     * @param {Function} forEachEdgeType edgeType iterator
	     * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.
	     * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}
	     */
	    modelUtil.createLinkedNodesFinder = function (forEachNode, forEachEdgeType, edgeIdGetter) {
	
	        return function (sourceNode) {
	            var result = {
	                nodes: [],
	                records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).
	            };
	
	            forEachEdgeType(function (edgeType) {
	                result.records[edgeType.name] = {};
	            });
	
	            if (!sourceNode) {
	                return result;
	            }
	
	            absorb(sourceNode, result);
	
	            var existsLink;
	            do {
	                existsLink = false;
	                forEachNode(processSingleNode);
	            }
	            while (existsLink);
	
	            function processSingleNode(node) {
	                if (!isNodeAbsorded(node, result) && isLinked(node, result)) {
	                    absorb(node, result);
	                    existsLink = true;
	                }
	            }
	
	            return result;
	        };
	
	        function isNodeAbsorded(node, result) {
	            return zrUtil.indexOf(result.nodes, node) >= 0;
	        }
	
	        function isLinked(node, result) {
	            var hasLink = false;
	            forEachEdgeType(function (edgeType) {
	                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {
	                    result.records[edgeType.name][edgeId] && (hasLink = true);
	                });
	            });
	            return hasLink;
	        }
	
	        function absorb(node, result) {
	            result.nodes.push(node);
	            forEachEdgeType(function (edgeType) {
	                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {
	                    result.records[edgeType.name][edgeId] = true;
	                });
	            });
	        }
	    };
	
	    /**
	     * Sync default option between normal and emphasis like `position` and `show`
	     * In case some one will write code like
	     *     label: {
	     *         normal: {
	     *             show: false,
	     *             position: 'outside',
	     *             textStyle: {
	     *                 fontSize: 18
	     *             }
	     *         },
	     *         emphasis: {
	     *             show: true
	     *         }
	     *     }
	     * @param {Object} opt
	     * @param {Array.<string>} subOpts
	     */
	     modelUtil.defaultEmphasis = function (opt, subOpts) {
	        if (opt) {
	            var emphasisOpt = opt.emphasis = opt.emphasis || {};
	            var normalOpt = opt.normal = opt.normal || {};
	
	            // Default emphasis option from normal
	            zrUtil.each(subOpts, function (subOptName) {
	                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);
	                if (val != null) {
	                    emphasisOpt[subOptName] = val;
	                }
	            });
	        }
	    };
	
	    modelUtil.LABEL_OPTIONS = ['position', 'show', 'textStyle', 'distance', 'formatter'];
	
	    /**
	     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]
	     * This helper method retieves value from data.
	     * @param {string|number|Date|Array|Object} dataItem
	     * @return {number|string|Date|Array.<number|string|Date>}
	     */
	    modelUtil.getDataItemValue = function (dataItem) {
	        // Performance sensitive.
	        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);
	    };
	
	    /**
	     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]
	     * This helper method determine if dataItem has extra option besides value
	     * @param {string|number|Date|Array|Object} dataItem
	     */
	    modelUtil.isDataItemOption = function (dataItem) {
	        return zrUtil.isObject(dataItem)
	            && !(dataItem instanceof Array);
	            // // markLine data can be array
	            // && !(dataItem[0] && zrUtil.isObject(dataItem[0]) && !(dataItem[0] instanceof Array));
	    };
	
	    /**
	     * This helper method convert value in data.
	     * @param {string|number|Date} value
	     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.
	     */
	    modelUtil.converDataValue = function (value, dimInfo) {
	        // Performance sensitive.
	        var dimType = dimInfo && dimInfo.type;
	        if (dimType === 'ordinal') {
	            return value;
	        }
	
	        if (dimType === 'time' && !isFinite(value) && value != null && value !== '-') {
	            value = +nubmerUtil.parseDate(value);
	        }
	
	        // dimType defaults 'number'.
	        // If dimType is not ordinal and value is null or undefined or NaN or '-',
	        // parse to NaN.
	        return (value == null || value === '')
	            ? NaN : +value; // If string (like '-'), using '+' parse to NaN
	    };
	
	    /**
	     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.
	     * @param {module:echarts/data/List} data
	     * @param {Object} opt
	     * @param {string} [opt.seriesIndex]
	     * @param {Object} [opt.name]
	     * @param {Object} [opt.mainType]
	     * @param {Object} [opt.subType]
	     */
	    modelUtil.createDataFormatModel = function (data, opt) {
	        var model = new Model();
	        zrUtil.mixin(model, modelUtil.dataFormatMixin);
	        model.seriesIndex = opt.seriesIndex;
	        model.name = opt.name || '';
	        model.mainType = opt.mainType;
	        model.subType = opt.subType;
	
	        model.getData = function () {
	            return data;
	        };
	        return model;
	    };
	
	    // PENDING A little ugly
	    modelUtil.dataFormatMixin = {
	        /**
	         * Get params for formatter
	         * @param {number} dataIndex
	         * @param {string} [dataType]
	         * @return {Object}
	         */
	        getDataParams: function (dataIndex, dataType) {
	            var data = this.getData(dataType);
	
	            var seriesIndex = this.seriesIndex;
	            var seriesName = this.name;
	
	            var rawValue = this.getRawValue(dataIndex, dataType);
	            var rawDataIndex = data.getRawIndex(dataIndex);
	            var name = data.getName(dataIndex, true);
	            var itemOpt = data.getRawDataItem(dataIndex);
	
	            return {
	                componentType: this.mainType,
	                componentSubType: this.subType,
	                seriesType: this.mainType === 'series' ? this.subType : null,
	                seriesIndex: seriesIndex,
	                seriesName: seriesName,
	                name: name,
	                dataIndex: rawDataIndex,
	                data: itemOpt,
	                dataType: dataType,
	                value: rawValue,
	                color: data.getItemVisual(dataIndex, 'color'),
	
	                // Param name list for mapping `a`, `b`, `c`, `d`, `e`
	                $vars: ['seriesName', 'name', 'value']
	            };
	        },
	
	        /**
	         * Format label
	         * @param {number} dataIndex
	         * @param {string} [status='normal'] 'normal' or 'emphasis'
	         * @param {string} [dataType]
	         * @param {number} [dimIndex]
	         * @return {string}
	         */
	        getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {
	            status = status || 'normal';
	            var data = this.getData(dataType);
	            var itemModel = data.getItemModel(dataIndex);
	
	            var params = this.getDataParams(dataIndex, dataType);
	            if (dimIndex != null && (params.value instanceof Array)) {
	                params.value = params.value[dimIndex];
	            }
	
	            var formatter = itemModel.get(['label', status, 'formatter']);
	
	            if (typeof formatter === 'function') {
	                params.status = status;
	                return formatter(params);
	            }
	            else if (typeof formatter === 'string') {
	                return formatUtil.formatTpl(formatter, params);
	            }
	        },
	
	        /**
	         * Get raw value in option
	         * @param {number} idx
	         * @param {string} [dataType]
	         * @return {Object}
	         */
	        getRawValue: function (idx, dataType) {
	            var data = this.getData(dataType);
	            var dataItem = data.getRawDataItem(idx);
	            if (dataItem != null) {
	                return (zrUtil.isObject(dataItem) && !(dataItem instanceof Array))
	                    ? dataItem.value : dataItem;
	            }
	        },
	
	        /**
	         * Should be implemented.
	         * @param {number} dataIndex
	         * @param {boolean} [multipleSeries=false]
	         * @param {number} [dataType]
	         * @return {string} tooltip string
	         */
	        formatTooltip: zrUtil.noop
	    };
	
	    /**
	     * Mapping to exists for merge.
	     *
	     * @public
	     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists
	     * @param {Object|Array.<Object>} newCptOptions
	     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],
	     *                          which order is the same as exists.
	     */
	    modelUtil.mappingToExists = function (exists, newCptOptions) {
	        // Mapping by the order by original option (but not order of
	        // new option) in merge mode. Because we should ensure
	        // some specified index (like xAxisIndex) is consistent with
	        // original option, which is easy to understand, espatially in
	        // media query. And in most case, merge option is used to
	        // update partial option but not be expected to change order.
	        newCptOptions = (newCptOptions || []).slice();
	
	        var result = zrUtil.map(exists || [], function (obj, index) {
	            return {exist: obj};
	        });
	
	        // Mapping by id or name if specified.
	        zrUtil.each(newCptOptions, function (cptOption, index) {
	            if (!zrUtil.isObject(cptOption)) {
	                return;
	            }
	
	            for (var i = 0; i < result.length; i++) {
	                var exist = result[i].exist;
	                if (!result[i].option // Consider name: two map to one.
	                    && (
	                        // id has highest priority.
	                        (cptOption.id != null && exist.id === cptOption.id + '')
	                        || (cptOption.name != null
	                            && !modelUtil.isIdInner(cptOption)
	                            && !modelUtil.isIdInner(exist)
	                            && exist.name === cptOption.name + ''
	                        )
	                    )
	                ) {
	                    result[i].option = cptOption;
	                    newCptOptions[index] = null;
	                    break;
	                }
	            }
	        });
	
	        // Otherwise mapping by index.
	        zrUtil.each(newCptOptions, function (cptOption, index) {
	            if (!zrUtil.isObject(cptOption)) {
	                return;
	            }
	
	            var i = 0;
	            for (; i < result.length; i++) {
	                var exist = result[i].exist;
	                if (!result[i].option
	                    && !modelUtil.isIdInner(exist)
	                    // Caution:
	                    // Do not overwrite id. But name can be overwritten,
	                    // because axis use name as 'show label text'.
	                    // 'exist' always has id and name and we dont
	                    // need to check it.
	                    && cptOption.id == null
	                ) {
	                    result[i].option = cptOption;
	                    break;
	                }
	            }
	
	            if (i >= result.length) {
	                result.push({option: cptOption});
	            }
	        });
	
	        return result;
	    };
	
	    /**
	     * @public
	     * @param {Object} cptOption
	     * @return {boolean}
	     */
	    modelUtil.isIdInner = function (cptOption) {
	        return zrUtil.isObject(cptOption)
	            && cptOption.id
	            && (cptOption.id + '').indexOf('\0_ec_\0') === 0;
	    };
	
	    /**
	     * A helper for removing duplicate items between batchA and batchB,
	     * and in themselves, and categorize by series.
	     *
	     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]
	     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]
	     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]
	     */
	    modelUtil.compressBatches = function (batchA, batchB) {
	        var mapA = {};
	        var mapB = {};
	
	        makeMap(batchA || [], mapA);
	        makeMap(batchB || [], mapB, mapA);
	
	        return [mapToArray(mapA), mapToArray(mapB)];
	
	        function makeMap(sourceBatch, map, otherMap) {
	            for (var i = 0, len = sourceBatch.length; i < len; i++) {
	                var seriesId = sourceBatch[i].seriesId;
	                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);
	                var otherDataIndices = otherMap && otherMap[seriesId];
	
	                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {
	                    var dataIndex = dataIndices[j];
	
	                    if (otherDataIndices && otherDataIndices[dataIndex]) {
	                        otherDataIndices[dataIndex] = null;
	                    }
	                    else {
	                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;
	                    }
	                }
	            }
	        }
	
	        function mapToArray(map, isData) {
	            var result = [];
	            for (var i in map) {
	                if (map.hasOwnProperty(i) && map[i] != null) {
	                    if (isData) {
	                        result.push(+i);
	                    }
	                    else {
	                        var dataIndices = mapToArray(map[i], true);
	                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});
	                    }
	                }
	            }
	            return result;
	        }
	    };
	
	    module.exports = modelUtil;


/***/ },
/* 528 */
/*!**************************************!*\
  !*** ./~/echarts/lib/util/format.js ***!
  \**************************************/
/***/ function(module, exports, __webpack_require__) {

	
	
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	    var numberUtil = __webpack_require__(/*! ./number */ 529);
	    var textContain = __webpack_require__(/*! zrender/lib/contain/text */ 530);
	
	    /**
	     * 每三位默认加,格式化
	     * @type {string|number} x
	     */
	    function addCommas(x) {
	        if (isNaN(x)) {
	            return '-';
	        }
	        x = (x + '').split('.');
	        return x[0].replace(/(\d{1,3})(?=(?:\d{3})+(?!\d))/g,'$1,')
	               + (x.length > 1 ? ('.' + x[1]) : '');
	    }
	
	    /**
	     * @param {string} str
	     * @return {string} str
	     */
	    function toCamelCase(str) {
	        return str.toLowerCase().replace(/-(.)/g, function(match, group1) {
	            return group1.toUpperCase();
	        });
	    }
	
	    /**
	     * Normalize css liked array configuration
	     * e.g.
	     *  3 => [3, 3, 3, 3]
	     *  [4, 2] => [4, 2, 4, 2]
	     *  [4, 3, 2] => [4, 3, 2, 3]
	     * @param {number|Array.<number>} val
	     */
	    function normalizeCssArray(val) {
	        var len = val.length;
	        if (typeof (val) === 'number') {
	            return [val, val, val, val];
	        }
	        else if (len === 2) {
	            // vertical | horizontal
	            return [val[0], val[1], val[0], val[1]];
	        }
	        else if (len === 3) {
	            // top | horizontal | bottom
	            return [val[0], val[1], val[2], val[1]];
	        }
	        return val;
	    }
	
	    function encodeHTML(source) {
	        return String(source)
	            .replace(/&/g, '&amp;')
	            .replace(/</g, '&lt;')
	            .replace(/>/g, '&gt;')
	            .replace(/"/g, '&quot;')
	            .replace(/'/g, '&#39;');
	    }
	
	    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];
	
	    function wrapVar(varName, seriesIdx) {
	        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';
	    }
	    /**
	     * Template formatter
	     * @param  {string} tpl
	     * @param  {Array.<Object>|Object} paramsList
	     * @return {string}
	     */
	    function formatTpl(tpl, paramsList) {
	        if (!zrUtil.isArray(paramsList)) {
	            paramsList = [paramsList];
	        }
	        var seriesLen = paramsList.length;
	        if (!seriesLen) {
	            return '';
	        }
	
	        var $vars = paramsList[0].$vars || [];
	        for (var i = 0; i < $vars.length; i++) {
	            var alias = TPL_VAR_ALIAS[i];
	            tpl = tpl.replace(wrapVar(alias),  wrapVar(alias, 0));
	        }
	        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {
	            for (var k = 0; k < $vars.length; k++) {
	                tpl = tpl.replace(
	                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),
	                    paramsList[seriesIdx][$vars[k]]
	                );
	            }
	        }
	
	        return tpl;
	    }
	
	    /**
	     * ISO Date format
	     * @param {string} tpl
	     * @param {number} value
	     * @inner
	     */
	    function formatTime(tpl, value) {
	        if (tpl === 'week'
	            || tpl === 'month'
	            || tpl === 'quarter'
	            || tpl === 'half-year'
	            || tpl === 'year'
	        ) {
	            tpl = 'MM-dd\nyyyy';
	        }
	
	        var date = numberUtil.parseDate(value);
	        var y = date.getFullYear();
	        var M = date.getMonth() + 1;
	        var d = date.getDate();
	        var h = date.getHours();
	        var m = date.getMinutes();
	        var s = date.getSeconds();
	
	        tpl = tpl.replace('MM', s2d(M))
	            .toLowerCase()
	            .replace('yyyy', y)
	            .replace('yy', y % 100)
	            .replace('dd', s2d(d))
	            .replace('d', d)
	            .replace('hh', s2d(h))
	            .replace('h', h)
	            .replace('mm', s2d(m))
	            .replace('m', m)
	            .replace('ss', s2d(s))
	            .replace('s', s);
	
	        return tpl;
	    }
	
	    /**
	     * @param {string} str
	     * @return {string}
	     * @inner
	     */
	    function s2d(str) {
	        return str < 10 ? ('0' + str) : str;
	    }
	
	    module.exports = {
	
	        normalizeCssArray: normalizeCssArray,
	
	        addCommas: addCommas,
	
	        toCamelCase: toCamelCase,
	
	        encodeHTML: encodeHTML,
	
	        formatTpl: formatTpl,
	
	        formatTime: formatTime,
	
	        truncateText: textContain.truncateText
	    };


/***/ },
/* 529 */
/*!**************************************!*\
  !*** ./~/echarts/lib/util/number.js ***!
  \**************************************/
/***/ function(module, exports) {

	/**
	 * 数值处理模块
	 * @module echarts/util/number
	 */
	
	
	
	    var number = {};
	
	    var RADIAN_EPSILON = 1e-4;
	
	    function _trim(str) {
	        return str.replace(/^\s+/, '').replace(/\s+$/, '');
	    }
	
	    /**
	     * Linear mapping a value from domain to range
	     * @memberOf module:echarts/util/number
	     * @param  {(number|Array.<number>)} val
	     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]
	     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]
	     * @param  {boolean} clamp
	     * @return {(number|Array.<number>}
	     */
	    number.linearMap = function (val, domain, range, clamp) {
	        var subDomain = domain[1] - domain[0];
	        var subRange = range[1] - range[0];
	
	        if (subDomain === 0) {
	            return subRange === 0
	                ? range[0]
	                : (range[0] + range[1]) / 2;
	        }
	
	        // Avoid accuracy problem in edge, such as
	        // 146.39 - 62.83 === 83.55999999999999.
	        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError
	        // It is a little verbose for efficiency considering this method
	        // is a hotspot.
	        if (clamp) {
	            if (subDomain > 0) {
	                if (val <= domain[0]) {
	                    return range[0];
	                }
	                else if (val >= domain[1]) {
	                    return range[1];
	                }
	            }
	            else {
	                if (val >= domain[0]) {
	                    return range[0];
	                }
	                else if (val <= domain[1]) {
	                    return range[1];
	                }
	            }
	        }
	        else {
	            if (val === domain[0]) {
	                return range[0];
	            }
	            if (val === domain[1]) {
	                return range[1];
	            }
	        }
	
	        return (val - domain[0]) / subDomain * subRange + range[0];
	    };
	
	    /**
	     * Convert a percent string to absolute number.
	     * Returns NaN if percent is not a valid string or number
	     * @memberOf module:echarts/util/number
	     * @param {string|number} percent
	     * @param {number} all
	     * @return {number}
	     */
	    number.parsePercent = function(percent, all) {
	        switch (percent) {
	            case 'center':
	            case 'middle':
	                percent = '50%';
	                break;
	            case 'left':
	            case 'top':
	                percent = '0%';
	                break;
	            case 'right':
	            case 'bottom':
	                percent = '100%';
	                break;
	        }
	        if (typeof percent === 'string') {
	            if (_trim(percent).match(/%$/)) {
	                return parseFloat(percent) / 100 * all;
	            }
	
	            return parseFloat(percent);
	        }
	
	        return percent == null ? NaN : +percent;
	    };
	
	    /**
	     * Fix rounding error of float numbers
	     * @param {number} x
	     * @return {number}
	     */
	    number.round = function (x) {
	        // PENDING
	        return +(+x).toFixed(10);
	    };
	
	    number.asc = function (arr) {
	        arr.sort(function (a, b) {
	            return a - b;
	        });
	        return arr;
	    };
	
	    /**
	     * Get precision
	     * @param {number} val
	     */
	    number.getPrecision = function (val) {
	        val = +val;
	        if (isNaN(val)) {
	            return 0;
	        }
	        // It is much faster than methods converting number to string as follows
	        //      var tmp = val.toString();
	        //      return tmp.length - 1 - tmp.indexOf('.');
	        // especially when precision is low
	        var e = 1;
	        var count = 0;
	        while (Math.round(val * e) / e !== val) {
	            e *= 10;
	            count++;
	        }
	        return count;
	    };
	
	    /**
	     * @param {Array.<number>} dataExtent
	     * @param {Array.<number>} pixelExtent
	     * @return {number}  precision
	     */
	    number.getPixelPrecision = function (dataExtent, pixelExtent) {
	        var log = Math.log;
	        var LN10 = Math.LN10;
	        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);
	        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);
	        return Math.max(
	            -dataQuantity + sizeQuantity,
	            0
	        );
	    };
	
	    // Number.MAX_SAFE_INTEGER, ie do not support.
	    number.MAX_SAFE_INTEGER = 9007199254740991;
	
	    /**
	     * To 0 - 2 * PI, considering negative radian.
	     * @param {number} radian
	     * @return {number}
	     */
	    number.remRadian = function (radian) {
	        var pi2 = Math.PI * 2;
	        return (radian % pi2 + pi2) % pi2;
	    };
	
	    /**
	     * @param {type} radian
	     * @return {boolean}
	     */
	    number.isRadianAroundZero = function (val) {
	        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;
	    };
	
	    /**
	     * @param {string|Date|number} value
	     * @return {number} timestamp
	     */
	    number.parseDate = function (value) {
	        return value instanceof Date
	            ? value
	            : new Date(
	                typeof value === 'string'
	                    // FIXME Date.parse('1970-01-01') is UTC, Date.parse('1970/01/01') is local
	                    ? (new Date(value.replace(/-/g, '/')) - new Date('1970/01/01'))
	                    : Math.round(value)
	            );
	    };
	
	    /**
	     * Quantity of a number. e.g. 0.1, 1, 10, 100
	     * @param  {number} val
	     * @return {number}
	     */
	    number.quantity = function (val) {
	        return Math.pow(10, Math.floor(Math.log(val) / Math.LN10));
	    };
	
	    // "Nice Numbers for Graph Labels" of Graphic Gems
	    /**
	     * find a “nice” number approximately equal to x. Round the number if round = true, take ceiling if round = false
	     * The primary observation is that the “nicest” numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.
	     * @param  {number} val
	     * @param  {boolean} round
	     * @return {number}
	     */
	    number.nice = function (val, round) {
	        var exp10 = number.quantity(val);
	        var f = val / exp10; // between 1 and 10
	        var nf;
	        if (round) {
	            if (f < 1.5) { nf = 1; }
	            else if (f < 2.5) { nf = 2; }
	            else if (f < 4) { nf = 3; }
	            else if (f < 7) { nf = 5; }
	            else { nf = 10; }
	        }
	        else {
	            if (f < 1) { nf = 1; }
	            else if (f < 2) { nf = 2; }
	            else if (f < 3) { nf = 3; }
	            else if (f < 5) { nf = 5; }
	            else { nf = 10; }
	        }
	        return nf * exp10;
	    };
	
	    module.exports = number;


/***/ },
/* 530 */
/*!***************************************!*\
  !*** ./~/zrender/lib/contain/text.js ***!
  \***************************************/
/***/ function(module, exports, __webpack_require__) {

	
	
	    var textWidthCache = {};
	    var textWidthCacheCounter = 0;
	    var TEXT_CACHE_MAX = 5000;
	
	    var util = __webpack_require__(/*! ../core/util */ 526);
	    var BoundingRect = __webpack_require__(/*! ../core/BoundingRect */ 531);
	    var retrieve = util.retrieve;
	
	    function getTextWidth(text, textFont) {
	        var key = text + ':' + textFont;
	        if (textWidthCache[key]) {
	            return textWidthCache[key];
	        }
	
	        var textLines = (text + '').split('\n');
	        var width = 0;
	
	        for (var i = 0, l = textLines.length; i < l; i++) {
	            // measureText 可以被覆盖以兼容不支持 Canvas 的环境
	            width = Math.max(textContain.measureText(textLines[i], textFont).width, width);
	        }
	
	        if (textWidthCacheCounter > TEXT_CACHE_MAX) {
	            textWidthCacheCounter = 0;
	            textWidthCache = {};
	        }
	        textWidthCacheCounter++;
	        textWidthCache[key] = width;
	
	        return width;
	    }
	
	    function getTextRect(text, textFont, textAlign, textBaseline) {
	        var textLineLen = ((text || '') + '').split('\n').length;
	
	        var width = getTextWidth(text, textFont);
	        // FIXME 高度计算比较粗暴
	        var lineHeight = getTextWidth('国', textFont);
	        var height = textLineLen * lineHeight;
	
	        var rect = new BoundingRect(0, 0, width, height);
	        // Text has a special line height property
	        rect.lineHeight = lineHeight;
	
	        switch (textBaseline) {
	            case 'bottom':
	            case 'alphabetic':
	                rect.y -= lineHeight;
	                break;
	            case 'middle':
	                rect.y -= lineHeight / 2;
	                break;
	            // case 'hanging':
	            // case 'top':
	        }
	
	        // FIXME Right to left language
	        switch (textAlign) {
	            case 'end':
	            case 'right':
	                rect.x -= rect.width;
	                break;
	            case 'center':
	                rect.x -= rect.width / 2;
	                break;
	            // case 'start':
	            // case 'left':
	        }
	
	        return rect;
	    }
	
	    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {
	
	        var x = rect.x;
	        var y = rect.y;
	
	        var height = rect.height;
	        var width = rect.width;
	
	        var textHeight = textRect.height;
	
	        var halfHeight = height / 2 - textHeight / 2;
	
	        var textAlign = 'left';
	
	        switch (textPosition) {
	            case 'left':
	                x -= distance;
	                y += halfHeight;
	                textAlign = 'right';
	                break;
	            case 'right':
	                x += distance + width;
	                y += halfHeight;
	                textAlign = 'left';
	                break;
	            case 'top':
	                x += width / 2;
	                y -= distance + textHeight;
	                textAlign = 'center';
	                break;
	            case 'bottom':
	                x += width / 2;
	                y += height + distance;
	                textAlign = 'center';
	                break;
	            case 'inside':
	                x += width / 2;
	                y += halfHeight;
	                textAlign = 'center';
	                break;
	            case 'insideLeft':
	                x += distance;
	                y += halfHeight;
	                textAlign = 'left';
	                break;
	            case 'insideRight':
	                x += width - distance;
	                y += halfHeight;
	                textAlign = 'right';
	                break;
	            case 'insideTop':
	                x += width / 2;
	                y += distance;
	                textAlign = 'center';
	                break;
	            case 'insideBottom':
	                x += width / 2;
	                y += height - textHeight - distance;
	                textAlign = 'center';
	                break;
	            case 'insideTopLeft':
	                x += distance;
	                y += distance;
	                textAlign = 'left';
	                break;
	            case 'insideTopRight':
	                x += width - distance;
	                y += distance;
	                textAlign = 'right';
	                break;
	            case 'insideBottomLeft':
	                x += distance;
	                y += height - textHeight - distance;
	                break;
	            case 'insideBottomRight':
	                x += width - distance;
	                y += height - textHeight - distance;
	                textAlign = 'right';
	                break;
	        }
	
	        return {
	            x: x,
	            y: y,
	            textAlign: textAlign,
	            textBaseline: 'top'
	        };
	    }
	
	    /**
	     * Show ellipsis if overflow.
	     *
	     * @param  {string} text
	     * @param  {string} containerWidth
	     * @param  {string} textFont
	     * @param  {number} [ellipsis='...']
	     * @param  {Object} [options]
	     * @param  {number} [options.maxIterations=3]
	     * @param  {number} [options.minChar=0] If truncate result are less
	     *                  then minChar, ellipsis will not show, which is
	     *                  better for user hint in some cases.
	     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.
	     * @return {string}
	     */
	    function truncateText(text, containerWidth, textFont, ellipsis, options) {
	        if (!containerWidth) {
	            return '';
	        }
	
	        options = options || {};
	
	        ellipsis = retrieve(ellipsis, '...');
	        var maxIterations = retrieve(options.maxIterations, 2);
	        var minChar = retrieve(options.minChar, 0);
	        // FIXME
	        // Other languages?
	        var cnCharWidth = getTextWidth('国', textFont);
	        // FIXME
	        // Consider proportional font?
	        var ascCharWidth = getTextWidth('a', textFont);
	        var placeholder = retrieve(options.placeholder, '');
	
	        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.
	        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.
	        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.
	        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {
	            contentWidth -= ascCharWidth;
	        }
	
	        var ellipsisWidth = getTextWidth(ellipsis);
	        if (ellipsisWidth > contentWidth) {
	            ellipsis = '';
	            ellipsisWidth = 0;
	        }
	
	        contentWidth = containerWidth - ellipsisWidth;
	
	        var textLines = (text + '').split('\n');
	
	        for (var i = 0, len = textLines.length; i < len; i++) {
	            var textLine = textLines[i];
	            var lineWidth = getTextWidth(textLine, textFont);
	
	            if (lineWidth <= containerWidth) {
	                continue;
	            }
	
	            for (var j = 0;; j++) {
	                if (lineWidth <= contentWidth || j >= maxIterations) {
	                    textLine += ellipsis;
	                    break;
	                }
	
	                var subLength = j === 0
	                    ? estimateLength(textLine, contentWidth, ascCharWidth, cnCharWidth)
	                    : lineWidth > 0
	                    ? Math.floor(textLine.length * contentWidth / lineWidth)
	                    : 0;
	
	                textLine = textLine.substr(0, subLength);
	                lineWidth = getTextWidth(textLine, textFont);
	            }
	
	            if (textLine === '') {
	                textLine = placeholder;
	            }
	
	            textLines[i] = textLine;
	        }
	
	        return textLines.join('\n');
	    }
	
	    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {
	        var width = 0;
	        var i = 0;
	        for (var len = text.length; i < len && width < contentWidth; i++) {
	            var charCode = text.charCodeAt(i);
	            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;
	        }
	        return i;
	    }
	
	    var textContain = {
	
	        getWidth: getTextWidth,
	
	        getBoundingRect: getTextRect,
	
	        adjustTextPositionOnRect: adjustTextPositionOnRect,
	
	        truncateText: truncateText,
	
	        measureText: function (text, textFont) {
	            var ctx = util.getContext();
	            ctx.font = textFont || '12px sans-serif';
	            return ctx.measureText(text);
	        }
	    };
	
	    module.exports = textContain;


/***/ },
/* 531 */
/*!********************************************!*\
  !*** ./~/zrender/lib/core/BoundingRect.js ***!
  \********************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	/**
	 * @module echarts/core/BoundingRect
	 */
	
	
	    var vec2 = __webpack_require__(/*! ./vector */ 532);
	    var matrix = __webpack_require__(/*! ./matrix */ 533);
	
	    var v2ApplyTransform = vec2.applyTransform;
	    var mathMin = Math.min;
	    var mathAbs = Math.abs;
	    var mathMax = Math.max;
	    /**
	     * @alias module:echarts/core/BoundingRect
	     */
	    function BoundingRect(x, y, width, height) {
	        /**
	         * @type {number}
	         */
	        this.x = x;
	        /**
	         * @type {number}
	         */
	        this.y = y;
	        /**
	         * @type {number}
	         */
	        this.width = width;
	        /**
	         * @type {number}
	         */
	        this.height = height;
	    }
	
	    BoundingRect.prototype = {
	
	        constructor: BoundingRect,
	
	        /**
	         * @param {module:echarts/core/BoundingRect} other
	         */
	        union: function (other) {
	            var x = mathMin(other.x, this.x);
	            var y = mathMin(other.y, this.y);
	
	            this.width = mathMax(
	                    other.x + other.width,
	                    this.x + this.width
	                ) - x;
	            this.height = mathMax(
	                    other.y + other.height,
	                    this.y + this.height
	                ) - y;
	            this.x = x;
	            this.y = y;
	        },
	
	        /**
	         * @param {Array.<number>} m
	         * @methods
	         */
	        applyTransform: (function () {
	            var min = [];
	            var max = [];
	            return function (m) {
	                // In case usage like this
	                // el.getBoundingRect().applyTransform(el.transform)
	                // And element has no transform
	                if (!m) {
	                    return;
	                }
	                min[0] = this.x;
	                min[1] = this.y;
	                max[0] = this.x + this.width;
	                max[1] = this.y + this.height;
	
	                v2ApplyTransform(min, min, m);
	                v2ApplyTransform(max, max, m);
	
	                this.x = mathMin(min[0], max[0]);
	                this.y = mathMin(min[1], max[1]);
	                this.width = mathAbs(max[0] - min[0]);
	                this.height = mathAbs(max[1] - min[1]);
	            };
	        })(),
	
	        /**
	         * Calculate matrix of transforming from self to target rect
	         * @param  {module:zrender/core/BoundingRect} b
	         * @return {Array.<number>}
	         */
	        calculateTransform: function (b) {
	            var a = this;
	            var sx = b.width / a.width;
	            var sy = b.height / a.height;
	
	            var m = matrix.create();
	
	            // 矩阵右乘
	            matrix.translate(m, m, [-a.x, -a.y]);
	            matrix.scale(m, m, [sx, sy]);
	            matrix.translate(m, m, [b.x, b.y]);
	
	            return m;
	        },
	
	        /**
	         * @param {(module:echarts/core/BoundingRect|Object)} b
	         * @return {boolean}
	         */
	        intersect: function (b) {
	            var a = this;
	            var ax0 = a.x;
	            var ax1 = a.x + a.width;
	            var ay0 = a.y;
	            var ay1 = a.y + a.height;
	
	            var bx0 = b.x;
	            var bx1 = b.x + b.width;
	            var by0 = b.y;
	            var by1 = b.y + b.height;
	
	            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);
	        },
	
	        contain: function (x, y) {
	            var rect = this;
	            return x >= rect.x
	                && x <= (rect.x + rect.width)
	                && y >= rect.y
	                && y <= (rect.y + rect.height);
	        },
	
	        /**
	         * @return {module:echarts/core/BoundingRect}
	         */
	        clone: function () {
	            return new BoundingRect(this.x, this.y, this.width, this.height);
	        },
	
	        /**
	         * Copy from another rect
	         */
	        copy: function (other) {
	            this.x = other.x;
	            this.y = other.y;
	            this.width = other.width;
	            this.height = other.height;
	        }
	    };
	
	    module.exports = BoundingRect;


/***/ },
/* 532 */
/*!**************************************!*\
  !*** ./~/zrender/lib/core/vector.js ***!
  \**************************************/
/***/ function(module, exports) {

	
	    var ArrayCtor = typeof Float32Array === 'undefined'
	        ? Array
	        : Float32Array;
	
	    /**
	     * @typedef {Float32Array|Array.<number>} Vector2
	     */
	    /**
	     * 二维向量类
	     * @exports zrender/tool/vector
	     */
	    var vector = {
	        /**
	         * 创建一个向量
	         * @param {number} [x=0]
	         * @param {number} [y=0]
	         * @return {Vector2}
	         */
	        create: function (x, y) {
	            var out = new ArrayCtor(2);
	            if (x == null) {
	                x = 0;
	            }
	            if (y == null) {
	                y = 0;
	            }
	            out[0] = x;
	            out[1] = y;
	            return out;
	        },
	
	        /**
	         * 复制向量数据
	         * @param {Vector2} out
	         * @param {Vector2} v
	         * @return {Vector2}
	         */
	        copy: function (out, v) {
	            out[0] = v[0];
	            out[1] = v[1];
	            return out;
	        },
	
	        /**
	         * 克隆一个向量
	         * @param {Vector2} v
	         * @return {Vector2}
	         */
	        clone: function (v) {
	            var out = new ArrayCtor(2);
	            out[0] = v[0];
	            out[1] = v[1];
	            return out;
	        },
	
	        /**
	         * 设置向量的两个项
	         * @param {Vector2} out
	         * @param {number} a
	         * @param {number} b
	         * @return {Vector2} 结果
	         */
	        set: function (out, a, b) {
	            out[0] = a;
	            out[1] = b;
	            return out;
	        },
	
	        /**
	         * 向量相加
	         * @param {Vector2} out
	         * @param {Vector2} v1
	         * @param {Vector2} v2
	         */
	        add: function (out, v1, v2) {
	            out[0] = v1[0] + v2[0];
	            out[1] = v1[1] + v2[1];
	            return out;
	        },
	
	        /**
	         * 向量缩放后相加
	         * @param {Vector2} out
	         * @param {Vector2} v1
	         * @param {Vector2} v2
	         * @param {number} a
	         */
	        scaleAndAdd: function (out, v1, v2, a) {
	            out[0] = v1[0] + v2[0] * a;
	            out[1] = v1[1] + v2[1] * a;
	            return out;
	        },
	
	        /**
	         * 向量相减
	         * @param {Vector2} out
	         * @param {Vector2} v1
	         * @param {Vector2} v2
	         */
	        sub: function (out, v1, v2) {
	            out[0] = v1[0] - v2[0];
	            out[1] = v1[1] - v2[1];
	            return out;
	        },
	
	        /**
	         * 向量长度
	         * @param {Vector2} v
	         * @return {number}
	         */
	        len: function (v) {
	            return Math.sqrt(this.lenSquare(v));
	        },
	
	        /**
	         * 向量长度平方
	         * @param {Vector2} v
	         * @return {number}
	         */
	        lenSquare: function (v) {
	            return v[0] * v[0] + v[1] * v[1];
	        },
	
	        /**
	         * 向量乘法
	         * @param {Vector2} out
	         * @param {Vector2} v1
	         * @param {Vector2} v2
	         */
	        mul: function (out, v1, v2) {
	            out[0] = v1[0] * v2[0];
	            out[1] = v1[1] * v2[1];
	            return out;
	        },
	
	        /**
	         * 向量除法
	         * @param {Vector2} out
	         * @param {Vector2} v1
	         * @param {Vector2} v2
	         */
	        div: function (out, v1, v2) {
	            out[0] = v1[0] / v2[0];
	            out[1] = v1[1] / v2[1];
	            return out;
	        },
	
	        /**
	         * 向量点乘
	         * @param {Vector2} v1
	         * @param {Vector2} v2
	         * @return {number}
	         */
	        dot: function (v1, v2) {
	            return v1[0] * v2[0] + v1[1] * v2[1];
	        },
	
	        /**
	         * 向量缩放
	         * @param {Vector2} out
	         * @param {Vector2} v
	         * @param {number} s
	         */
	        scale: function (out, v, s) {
	            out[0] = v[0] * s;
	            out[1] = v[1] * s;
	            return out;
	        },
	
	        /**
	         * 向量归一化
	         * @param {Vector2} out
	         * @param {Vector2} v
	         */
	        normalize: function (out, v) {
	            var d = vector.len(v);
	            if (d === 0) {
	                out[0] = 0;
	                out[1] = 0;
	            }
	            else {
	                out[0] = v[0] / d;
	                out[1] = v[1] / d;
	            }
	            return out;
	        },
	
	        /**
	         * 计算向量间距离
	         * @param {Vector2} v1
	         * @param {Vector2} v2
	         * @return {number}
	         */
	        distance: function (v1, v2) {
	            return Math.sqrt(
	                (v1[0] - v2[0]) * (v1[0] - v2[0])
	                + (v1[1] - v2[1]) * (v1[1] - v2[1])
	            );
	        },
	
	        /**
	         * 向量距离平方
	         * @param {Vector2} v1
	         * @param {Vector2} v2
	         * @return {number}
	         */
	        distanceSquare: function (v1, v2) {
	            return (v1[0] - v2[0]) * (v1[0] - v2[0])
	                + (v1[1] - v2[1]) * (v1[1] - v2[1]);
	        },
	
	        /**
	         * 求负向量
	         * @param {Vector2} out
	         * @param {Vector2} v
	         */
	        negate: function (out, v) {
	            out[0] = -v[0];
	            out[1] = -v[1];
	            return out;
	        },
	
	        /**
	         * 插值两个点
	         * @param {Vector2} out
	         * @param {Vector2} v1
	         * @param {Vector2} v2
	         * @param {number} t
	         */
	        lerp: function (out, v1, v2, t) {
	            out[0] = v1[0] + t * (v2[0] - v1[0]);
	            out[1] = v1[1] + t * (v2[1] - v1[1]);
	            return out;
	        },
	
	        /**
	         * 矩阵左乘向量
	         * @param {Vector2} out
	         * @param {Vector2} v
	         * @param {Vector2} m
	         */
	        applyTransform: function (out, v, m) {
	            var x = v[0];
	            var y = v[1];
	            out[0] = m[0] * x + m[2] * y + m[4];
	            out[1] = m[1] * x + m[3] * y + m[5];
	            return out;
	        },
	        /**
	         * 求两个向量最小值
	         * @param  {Vector2} out
	         * @param  {Vector2} v1
	         * @param  {Vector2} v2
	         */
	        min: function (out, v1, v2) {
	            out[0] = Math.min(v1[0], v2[0]);
	            out[1] = Math.min(v1[1], v2[1]);
	            return out;
	        },
	        /**
	         * 求两个向量最大值
	         * @param  {Vector2} out
	         * @param  {Vector2} v1
	         * @param  {Vector2} v2
	         */
	        max: function (out, v1, v2) {
	            out[0] = Math.max(v1[0], v2[0]);
	            out[1] = Math.max(v1[1], v2[1]);
	            return out;
	        }
	    };
	
	    vector.length = vector.len;
	    vector.lengthSquare = vector.lenSquare;
	    vector.dist = vector.distance;
	    vector.distSquare = vector.distanceSquare;
	
	    module.exports = vector;
	


/***/ },
/* 533 */
/*!**************************************!*\
  !*** ./~/zrender/lib/core/matrix.js ***!
  \**************************************/
/***/ function(module, exports) {

	
	    var ArrayCtor = typeof Float32Array === 'undefined'
	        ? Array
	        : Float32Array;
	    /**
	     * 3x2矩阵操作类
	     * @exports zrender/tool/matrix
	     */
	    var matrix = {
	        /**
	         * 创建一个单位矩阵
	         * @return {Float32Array|Array.<number>}
	         */
	        create : function() {
	            var out = new ArrayCtor(6);
	            matrix.identity(out);
	
	            return out;
	        },
	        /**
	         * 设置矩阵为单位矩阵
	         * @param {Float32Array|Array.<number>} out
	         */
	        identity : function(out) {
	            out[0] = 1;
	            out[1] = 0;
	            out[2] = 0;
	            out[3] = 1;
	            out[4] = 0;
	            out[5] = 0;
	            return out;
	        },
	        /**
	         * 复制矩阵
	         * @param {Float32Array|Array.<number>} out
	         * @param {Float32Array|Array.<number>} m
	         */
	        copy: function(out, m) {
	            out[0] = m[0];
	            out[1] = m[1];
	            out[2] = m[2];
	            out[3] = m[3];
	            out[4] = m[4];
	            out[5] = m[5];
	            return out;
	        },
	        /**
	         * 矩阵相乘
	         * @param {Float32Array|Array.<number>} out
	         * @param {Float32Array|Array.<number>} m1
	         * @param {Float32Array|Array.<number>} m2
	         */
	        mul : function (out, m1, m2) {
	            // Consider matrix.mul(m, m2, m);
	            // where out is the same as m2.
	            // So use temp variable to escape error.
	            var out0 = m1[0] * m2[0] + m1[2] * m2[1];
	            var out1 = m1[1] * m2[0] + m1[3] * m2[1];
	            var out2 = m1[0] * m2[2] + m1[2] * m2[3];
	            var out3 = m1[1] * m2[2] + m1[3] * m2[3];
	            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];
	            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];
	            out[0] = out0;
	            out[1] = out1;
	            out[2] = out2;
	            out[3] = out3;
	            out[4] = out4;
	            out[5] = out5;
	            return out;
	        },
	        /**
	         * 平移变换
	         * @param {Float32Array|Array.<number>} out
	         * @param {Float32Array|Array.<number>} a
	         * @param {Float32Array|Array.<number>} v
	         */
	        translate : function(out, a, v) {
	            out[0] = a[0];
	            out[1] = a[1];
	            out[2] = a[2];
	            out[3] = a[3];
	            out[4] = a[4] + v[0];
	            out[5] = a[5] + v[1];
	            return out;
	        },
	        /**
	         * 旋转变换
	         * @param {Float32Array|Array.<number>} out
	         * @param {Float32Array|Array.<number>} a
	         * @param {number} rad
	         */
	        rotate : function(out, a, rad) {
	            var aa = a[0];
	            var ac = a[2];
	            var atx = a[4];
	            var ab = a[1];
	            var ad = a[3];
	            var aty = a[5];
	            var st = Math.sin(rad);
	            var ct = Math.cos(rad);
	
	            out[0] = aa * ct + ab * st;
	            out[1] = -aa * st + ab * ct;
	            out[2] = ac * ct + ad * st;
	            out[3] = -ac * st + ct * ad;
	            out[4] = ct * atx + st * aty;
	            out[5] = ct * aty - st * atx;
	            return out;
	        },
	        /**
	         * 缩放变换
	         * @param {Float32Array|Array.<number>} out
	         * @param {Float32Array|Array.<number>} a
	         * @param {Float32Array|Array.<number>} v
	         */
	        scale : function(out, a, v) {
	            var vx = v[0];
	            var vy = v[1];
	            out[0] = a[0] * vx;
	            out[1] = a[1] * vy;
	            out[2] = a[2] * vx;
	            out[3] = a[3] * vy;
	            out[4] = a[4] * vx;
	            out[5] = a[5] * vy;
	            return out;
	        },
	        /**
	         * 求逆矩阵
	         * @param {Float32Array|Array.<number>} out
	         * @param {Float32Array|Array.<number>} a
	         */
	        invert : function(out, a) {
	
	            var aa = a[0];
	            var ac = a[2];
	            var atx = a[4];
	            var ab = a[1];
	            var ad = a[3];
	            var aty = a[5];
	
	            var det = aa * ad - ab * ac;
	            if (!det) {
	                return null;
	            }
	            det = 1.0 / det;
	
	            out[0] = ad * det;
	            out[1] = -ab * det;
	            out[2] = -ac * det;
	            out[3] = aa * det;
	            out[4] = (ac * aty - ad * atx) * det;
	            out[5] = (ab * atx - aa * aty) * det;
	            return out;
	        }
	    };
	
	    module.exports = matrix;
	


/***/ },
/* 534 */
/*!**************************************!*\
  !*** ./~/echarts/lib/model/Model.js ***!
  \**************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * @module echarts/model/Model
	 */
	
	
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	    var clazzUtil = __webpack_require__(/*! ../util/clazz */ 535);
	
	    /**
	     * @alias module:echarts/model/Model
	     * @constructor
	     * @param {Object} option
	     * @param {module:echarts/model/Model} [parentModel]
	     * @param {module:echarts/model/Global} [ecModel]
	     */
	    function Model(option, parentModel, ecModel) {
	        /**
	         * @type {module:echarts/model/Model}
	         * @readOnly
	         */
	        this.parentModel = parentModel;
	
	        /**
	         * @type {module:echarts/model/Global}
	         * @readOnly
	         */
	        this.ecModel = ecModel;
	
	        /**
	         * @type {Object}
	         * @protected
	         */
	        this.option = option;
	
	        // Simple optimization
	        // if (this.init) {
	        //     if (arguments.length <= 4) {
	        //         this.init(option, parentModel, ecModel, extraOpt);
	        //     }
	        //     else {
	        //         this.init.apply(this, arguments);
	        //     }
	        // }
	    }
	
	    Model.prototype = {
	
	        constructor: Model,
	
	        /**
	         * Model 的初始化函数
	         * @param {Object} option
	         */
	        init: null,
	
	        /**
	         * 从新的 Option merge
	         */
	        mergeOption: function (option) {
	            zrUtil.merge(this.option, option, true);
	        },
	
	        /**
	         * @param {string} path
	         * @param {boolean} [ignoreParent=false]
	         * @return {*}
	         */
	        get: function (path, ignoreParent) {
	            if (!path) {
	                return this.option;
	            }
	
	            if (typeof path === 'string') {
	                path = path.split('.');
	            }
	
	            var obj = this.option;
	            var parentModel = this.parentModel;
	            for (var i = 0; i < path.length; i++) {
	                // Ignore empty
	                if (!path[i]) {
	                    continue;
	                }
	                // obj could be number/string/... (like 0)
	                obj = (obj && typeof obj === 'object') ? obj[path[i]] : null;
	                if (obj == null) {
	                    break;
	                }
	            }
	            if (obj == null && parentModel && !ignoreParent) {
	                obj = parentModel.get(path);
	            }
	            return obj;
	        },
	
	        /**
	         * @param {string} key
	         * @param {boolean} [ignoreParent=false]
	         * @return {*}
	         */
	        getShallow: function (key, ignoreParent) {
	            var option = this.option;
	            var val = option && option[key];
	            var parentModel = this.parentModel;
	            if (val == null && parentModel && !ignoreParent) {
	                val = parentModel.getShallow(key);
	            }
	            return val;
	        },
	
	        /**
	         * @param {string} path
	         * @param {module:echarts/model/Model} [parentModel]
	         * @return {module:echarts/model/Model}
	         */
	        getModel: function (path, parentModel) {
	            var obj = this.get(path, true);
	            var thisParentModel = this.parentModel;
	            var model = new Model(
	                obj, parentModel || (thisParentModel && thisParentModel.getModel(path)),
	                this.ecModel
	            );
	            return model;
	        },
	
	        /**
	         * If model has option
	         */
	        isEmpty: function () {
	            return this.option == null;
	        },
	
	        restoreData: function () {},
	
	        // Pending
	        clone: function () {
	            var Ctor = this.constructor;
	            return new Ctor(zrUtil.clone(this.option));
	        },
	
	        setReadOnly: function (properties) {
	            clazzUtil.setReadOnly(this, properties);
	        }
	    };
	
	    // Enable Model.extend.
	    clazzUtil.enableClassExtend(Model);
	
	    var mixin = zrUtil.mixin;
	    mixin(Model, __webpack_require__(/*! ./mixin/lineStyle */ 536));
	    mixin(Model, __webpack_require__(/*! ./mixin/areaStyle */ 538));
	    mixin(Model, __webpack_require__(/*! ./mixin/textStyle */ 539));
	    mixin(Model, __webpack_require__(/*! ./mixin/itemStyle */ 540));
	
	    module.exports = Model;


/***/ },
/* 535 */
/*!*************************************!*\
  !*** ./~/echarts/lib/util/clazz.js ***!
  \*************************************/
/***/ function(module, exports, __webpack_require__) {

	
	
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	
	    var clazz = {};
	
	    var TYPE_DELIMITER = '.';
	    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';
	    /**
	     * @public
	     */
	    var parseClassType = clazz.parseClassType = function (componentType) {
	        var ret = {main: '', sub: ''};
	        if (componentType) {
	            componentType = componentType.split(TYPE_DELIMITER);
	            ret.main = componentType[0] || '';
	            ret.sub = componentType[1] || '';
	        }
	        return ret;
	    };
	    /**
	     * @public
	     */
	    clazz.enableClassExtend = function (RootClass) {
	
	        RootClass.$constructor = RootClass;
	        RootClass.extend = function (proto) {
	            var superClass = this;
	            var ExtendedClass = function () {
	                if (!proto.$constructor) {
	                    superClass.apply(this, arguments);
	                }
	                else {
	                    proto.$constructor.apply(this, arguments);
	                }
	            };
	
	            zrUtil.extend(ExtendedClass.prototype, proto);
	
	            ExtendedClass.extend = this.extend;
	            ExtendedClass.superCall = superCall;
	            ExtendedClass.superApply = superApply;
	            zrUtil.inherits(ExtendedClass, this);
	            ExtendedClass.superClass = superClass;
	
	            return ExtendedClass;
	        };
	    };
	
	    // superCall should have class info, which can not be fetch from 'this'.
	    // Consider this case:
	    // class A has method f,
	    // class B inherits class A, overrides method f, f call superApply('f'),
	    // class C inherits class B, do not overrides method f,
	    // then when method of class C is called, dead loop occured.
	    function superCall(context, methodName) {
	        var args = zrUtil.slice(arguments, 2);
	        return this.superClass.prototype[methodName].apply(context, args);
	    }
	
	    function superApply(context, methodName, args) {
	        return this.superClass.prototype[methodName].apply(context, args);
	    }
	
	    /**
	     * @param {Object} entity
	     * @param {Object} options
	     * @param {boolean} [options.registerWhenExtend]
	     * @public
	     */
	    clazz.enableClassManagement = function (entity, options) {
	        options = options || {};
	
	        /**
	         * Component model classes
	         * key: componentType,
	         * value:
	         *     componentClass, when componentType is 'xxx'
	         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'
	         * @type {Object}
	         */
	        var storage = {};
	
	        entity.registerClass = function (Clazz, componentType) {
	            if (componentType) {
	                componentType = parseClassType(componentType);
	
	                if (!componentType.sub) {
	                    if (__DEV__) {
	                        if (storage[componentType.main]) {
	                            console.warn(componentType.main + ' exists.');
	                        }
	                    }
	                    storage[componentType.main] = Clazz;
	                }
	                else if (componentType.sub !== IS_CONTAINER) {
	                    var container = makeContainer(componentType);
	                    container[componentType.sub] = Clazz;
	                }
	            }
	            return Clazz;
	        };
	
	        entity.getClass = function (componentTypeMain, subType, throwWhenNotFound) {
	            var Clazz = storage[componentTypeMain];
	
	            if (Clazz && Clazz[IS_CONTAINER]) {
	                Clazz = subType ? Clazz[subType] : null;
	            }
	
	            if (throwWhenNotFound && !Clazz) {
	                throw new Error(
	                    'Component ' + componentTypeMain + '.' + (subType || '') + ' not exists. Load it first.'
	                );
	            }
	
	            return Clazz;
	        };
	
	        entity.getClassesByMainType = function (componentType) {
	            componentType = parseClassType(componentType);
	
	            var result = [];
	            var obj = storage[componentType.main];
	
	            if (obj && obj[IS_CONTAINER]) {
	                zrUtil.each(obj, function (o, type) {
	                    type !== IS_CONTAINER && result.push(o);
	                });
	            }
	            else {
	                result.push(obj);
	            }
	
	            return result;
	        };
	
	        entity.hasClass = function (componentType) {
	            // Just consider componentType.main.
	            componentType = parseClassType(componentType);
	            return !!storage[componentType.main];
	        };
	
	        /**
	         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']
	         */
	        entity.getAllClassMainTypes = function () {
	            var types = [];
	            zrUtil.each(storage, function (obj, type) {
	                types.push(type);
	            });
	            return types;
	        };
	
	        /**
	         * If a main type is container and has sub types
	         * @param  {string}  mainType
	         * @return {boolean}
	         */
	        entity.hasSubTypes = function (componentType) {
	            componentType = parseClassType(componentType);
	            var obj = storage[componentType.main];
	            return obj && obj[IS_CONTAINER];
	        };
	
	        entity.parseClassType = parseClassType;
	
	        function makeContainer(componentType) {
	            var container = storage[componentType.main];
	            if (!container || !container[IS_CONTAINER]) {
	                container = storage[componentType.main] = {};
	                container[IS_CONTAINER] = true;
	            }
	            return container;
	        }
	
	        if (options.registerWhenExtend) {
	            var originalExtend = entity.extend;
	            if (originalExtend) {
	                entity.extend = function (proto) {
	                    var ExtendedClass = originalExtend.call(this, proto);
	                    return entity.registerClass(ExtendedClass, proto.type);
	                };
	            }
	        }
	
	        return entity;
	    };
	
	    /**
	     * @param {string|Array.<string>} properties
	     */
	    clazz.setReadOnly = function (obj, properties) {
	        // FIXME It seems broken in IE8 simulation of IE11
	        // if (!zrUtil.isArray(properties)) {
	        //     properties = properties != null ? [properties] : [];
	        // }
	        // zrUtil.each(properties, function (prop) {
	        //     var value = obj[prop];
	
	        //     Object.defineProperty
	        //         && Object.defineProperty(obj, prop, {
	        //             value: value, writable: false
	        //         });
	        //     zrUtil.isArray(obj[prop])
	        //         && Object.freeze
	        //         && Object.freeze(obj[prop]);
	        // });
	    };
	
	    module.exports = clazz;


/***/ },
/* 536 */
/*!************************************************!*\
  !*** ./~/echarts/lib/model/mixin/lineStyle.js ***!
  \************************************************/
/***/ function(module, exports, __webpack_require__) {

	
	    var getLineStyle = __webpack_require__(/*! ./makeStyleMapper */ 537)(
	        [
	            ['lineWidth', 'width'],
	            ['stroke', 'color'],
	            ['opacity'],
	            ['shadowBlur'],
	            ['shadowOffsetX'],
	            ['shadowOffsetY'],
	            ['shadowColor']
	        ]
	    );
	    module.exports = {
	        getLineStyle: function (excludes) {
	            var style = getLineStyle.call(this, excludes);
	            var lineDash = this.getLineDash();
	            lineDash && (style.lineDash = lineDash);
	            return style;
	        },
	
	        getLineDash: function () {
	            var lineType = this.get('type');
	            return (lineType === 'solid' || lineType == null) ? null
	                : (lineType === 'dashed' ? [5, 5] : [1, 1]);
	        }
	    };


/***/ },
/* 537 */
/*!******************************************************!*\
  !*** ./~/echarts/lib/model/mixin/makeStyleMapper.js ***!
  \******************************************************/
/***/ function(module, exports, __webpack_require__) {

	// TODO Parse shadow style
	// TODO Only shallow path support
	
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	
	    module.exports = function (properties) {
	        // Normalize
	        for (var i = 0; i < properties.length; i++) {
	            if (!properties[i][1]) {
	               properties[i][1] = properties[i][0];
	            }
	        }
	        return function (excludes) {
	            var style = {};
	            for (var i = 0; i < properties.length; i++) {
	                var propName = properties[i][1];
	                if (excludes && zrUtil.indexOf(excludes, propName) >= 0) {
	                    continue;
	                }
	                var val = this.getShallow(propName);
	                if (val != null) {
	                    style[properties[i][0]] = val;
	                }
	            }
	            return style;
	        };
	    };


/***/ },
/* 538 */
/*!************************************************!*\
  !*** ./~/echarts/lib/model/mixin/areaStyle.js ***!
  \************************************************/
/***/ function(module, exports, __webpack_require__) {

	
	    module.exports = {
	        getAreaStyle: __webpack_require__(/*! ./makeStyleMapper */ 537)(
	            [
	                ['fill', 'color'],
	                ['shadowBlur'],
	                ['shadowOffsetX'],
	                ['shadowOffsetY'],
	                ['opacity'],
	                ['shadowColor']
	            ]
	        )
	    };


/***/ },
/* 539 */
/*!************************************************!*\
  !*** ./~/echarts/lib/model/mixin/textStyle.js ***!
  \************************************************/
/***/ function(module, exports, __webpack_require__) {

	
	
	    var textContain = __webpack_require__(/*! zrender/lib/contain/text */ 530);
	
	    function getShallow(model, path) {
	        return model && model.getShallow(path);
	    }
	
	    module.exports = {
	        /**
	         * Get color property or get color from option.textStyle.color
	         * @return {string}
	         */
	        getTextColor: function () {
	            var ecModel = this.ecModel;
	            return this.getShallow('color')
	                || (ecModel && ecModel.get('textStyle.color'));
	        },
	
	        /**
	         * Create font string from fontStyle, fontWeight, fontSize, fontFamily
	         * @return {string}
	         */
	        getFont: function () {
	            var ecModel = this.ecModel;
	            var gTextStyleModel = ecModel && ecModel.getModel('textStyle');
	            return [
	                // FIXME in node-canvas fontWeight is before fontStyle
	                this.getShallow('fontStyle') || getShallow(gTextStyleModel, 'fontStyle'),
	                this.getShallow('fontWeight') || getShallow(gTextStyleModel, 'fontWeight'),
	                (this.getShallow('fontSize') || getShallow(gTextStyleModel, 'fontSize') || 12) + 'px',
	                this.getShallow('fontFamily') || getShallow(gTextStyleModel, 'fontFamily') || 'sans-serif'
	            ].join(' ');
	        },
	
	        getTextRect: function (text) {
	            var textStyle = this.get('textStyle') || {};
	            return textContain.getBoundingRect(
	                text,
	                this.getFont(),
	                textStyle.align,
	                textStyle.baseline
	            );
	        },
	
	        truncateText: function (text, containerWidth, ellipsis, options) {
	            return textContain.truncateText(
	                text, containerWidth, this.getFont(), ellipsis, options
	            );
	        }
	    };


/***/ },
/* 540 */
/*!************************************************!*\
  !*** ./~/echarts/lib/model/mixin/itemStyle.js ***!
  \************************************************/
/***/ function(module, exports, __webpack_require__) {

	
	    var getItemStyle = __webpack_require__(/*! ./makeStyleMapper */ 537)(
	        [
	            ['fill', 'color'],
	            ['stroke', 'borderColor'],
	            ['lineWidth', 'borderWidth'],
	            ['opacity'],
	            ['shadowBlur'],
	            ['shadowOffsetX'],
	            ['shadowOffsetY'],
	            ['shadowColor']
	        ]
	    );
	    module.exports = {
	        getItemStyle: function (excludes) {
	            var style = getItemStyle.call(this, excludes);
	            var lineDash = this.getBorderLineDash();
	            lineDash && (style.lineDash = lineDash);
	            return style;
	        },
	
	        getBorderLineDash: function () {
	            var lineType = this.get('borderType');
	            return (lineType === 'solid' || lineType == null) ? null
	                : (lineType === 'dashed' ? [5, 5] : [1, 1]);
	        }
	    };


/***/ },
/* 541 */
/*!******************************************!*\
  !*** ./~/echarts/lib/model/Component.js ***!
  \******************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Component model
	 *
	 * @module echarts/model/Component
	 */
	
	
	    var Model = __webpack_require__(/*! ./Model */ 534);
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	    var arrayPush = Array.prototype.push;
	    var componentUtil = __webpack_require__(/*! ../util/component */ 542);
	    var clazzUtil = __webpack_require__(/*! ../util/clazz */ 535);
	    var layout = __webpack_require__(/*! ../util/layout */ 543);
	
	    /**
	     * @alias module:echarts/model/Component
	     * @constructor
	     * @param {Object} option
	     * @param {module:echarts/model/Model} parentModel
	     * @param {module:echarts/model/Model} ecModel
	     */
	    var ComponentModel = Model.extend({
	
	        type: 'component',
	
	        /**
	         * @readOnly
	         * @type {string}
	         */
	        id: '',
	
	        /**
	         * @readOnly
	         */
	        name: '',
	
	        /**
	         * @readOnly
	         * @type {string}
	         */
	        mainType: '',
	
	        /**
	         * @readOnly
	         * @type {string}
	         */
	        subType: '',
	
	        /**
	         * @readOnly
	         * @type {number}
	         */
	        componentIndex: 0,
	
	        /**
	         * @type {Object}
	         * @protected
	         */
	        defaultOption: null,
	
	        /**
	         * @type {module:echarts/model/Global}
	         * @readOnly
	         */
	        ecModel: null,
	
	        /**
	         * key: componentType
	         * value:  Component model list, can not be null.
	         * @type {Object.<string, Array.<module:echarts/model/Model>>}
	         * @readOnly
	         */
	        dependentModels: [],
	
	        /**
	         * @type {string}
	         * @readOnly
	         */
	        uid: null,
	
	        /**
	         * Support merge layout params.
	         * Only support 'box' now (left/right/top/bottom/width/height).
	         * @type {string|Object} Object can be {ignoreSize: true}
	         * @readOnly
	         */
	        layoutMode: null,
	
	        $constructor: function (option, parentModel, ecModel, extraOpt) {
	            Model.call(this, option, parentModel, ecModel, extraOpt);
	
	            // Set dependentModels, componentIndex, name, id, mainType, subType.
	            zrUtil.extend(this, extraOpt);
	
	            this.uid = componentUtil.getUID('componentModel');
	        },
	
	
	        init: function (option, parentModel, ecModel, extraOpt) {
	            this.mergeDefaultAndTheme(option, ecModel);
	        },
	
	        mergeDefaultAndTheme: function (option, ecModel) {
	            var layoutMode = this.layoutMode;
	            var inputPositionParams = layoutMode
	                ? layout.getLayoutParams(option) : {};
	
	            var themeModel = ecModel.getTheme();
	            zrUtil.merge(option, themeModel.get(this.mainType));
	            zrUtil.merge(option, this.getDefaultOption());
	
	            if (layoutMode) {
	                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);
	            }
	        },
	
	        mergeOption: function (option) {
	            zrUtil.merge(this.option, option, true);
	
	            var layoutMode = this.layoutMode;
	            if (layoutMode) {
	                layout.mergeLayoutParam(this.option, option, layoutMode);
	            }
	        },
	
	        // Hooker after init or mergeOption
	        optionUpdated: function (newCptOption, isInit) {},
	
	        getDefaultOption: function () {
	            if (!this.hasOwnProperty('__defaultOption')) {
	                var optList = [];
	                var Class = this.constructor;
	                while (Class) {
	                    var opt = Class.prototype.defaultOption;
	                    opt && optList.push(opt);
	                    Class = Class.superClass;
	                }
	
	                var defaultOption = {};
	                for (var i = optList.length - 1; i >= 0; i--) {
	                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);
	                }
	                this.__defaultOption = defaultOption;
	            }
	            return this.__defaultOption;
	        }
	
	    });
	
	    // Reset ComponentModel.extend, add preConstruct.
	    // clazzUtil.enableClassExtend(
	    //     ComponentModel,
	    //     function (option, parentModel, ecModel, extraOpt) {
	    //         // Set dependentModels, componentIndex, name, id, mainType, subType.
	    //         zrUtil.extend(this, extraOpt);
	
	    //         this.uid = componentUtil.getUID('componentModel');
	
	    //         // this.setReadOnly([
	    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',
	    //         //     'dependentModels', 'componentIndex'
	    //         // ]);
	    //     }
	    // );
	
	    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.
	    clazzUtil.enableClassManagement(
	        ComponentModel, {registerWhenExtend: true}
	    );
	    componentUtil.enableSubTypeDefaulter(ComponentModel);
	
	    // Add capability of ComponentModel.topologicalTravel.
	    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);
	
	    function getDependencies(componentType) {
	        var deps = [];
	        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {
	            arrayPush.apply(deps, Clazz.prototype.dependencies || []);
	        });
	        // Ensure main type
	        return zrUtil.map(deps, function (type) {
	            return clazzUtil.parseClassType(type).main;
	        });
	    }
	
	    zrUtil.mixin(ComponentModel, __webpack_require__(/*! ./mixin/boxLayout */ 544));
	
	    module.exports = ComponentModel;


/***/ },
/* 542 */
/*!*****************************************!*\
  !*** ./~/echarts/lib/util/component.js ***!
  \*****************************************/
/***/ function(module, exports, __webpack_require__) {

	
	
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	    var clazz = __webpack_require__(/*! ./clazz */ 535);
	
	    var parseClassType = clazz.parseClassType;
	
	    var base = 0;
	
	    var componentUtil = {};
	
	    var DELIMITER = '_';
	
	    /**
	     * @public
	     * @param {string} type
	     * @return {string}
	     */
	    componentUtil.getUID = function (type) {
	        // Considering the case of crossing js context,
	        // use Math.random to make id as unique as possible.
	        return [(type || ''), base++, Math.random()].join(DELIMITER);
	    };
	
	    /**
	     * @inner
	     */
	    componentUtil.enableSubTypeDefaulter = function (entity) {
	
	        var subTypeDefaulters = {};
	
	        entity.registerSubTypeDefaulter = function (componentType, defaulter) {
	            componentType = parseClassType(componentType);
	            subTypeDefaulters[componentType.main] = defaulter;
	        };
	
	        entity.determineSubType = function (componentType, option) {
	            var type = option.type;
	            if (!type) {
	                var componentTypeMain = parseClassType(componentType).main;
	                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {
	                    type = subTypeDefaulters[componentTypeMain](option);
	                }
	            }
	            return type;
	        };
	
	        return entity;
	    };
	
	    /**
	     * Topological travel on Activity Network (Activity On Vertices).
	     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].
	     *
	     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.
	     *
	     * If there is circle dependencey, Error will be thrown.
	     *
	     */
	    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {
	
	        /**
	         * @public
	         * @param {Array.<string>} targetNameList Target Component type list.
	         *                                           Can be ['aa', 'bb', 'aa.xx']
	         * @param {Array.<string>} fullNameList By which we can build dependency graph.
	         * @param {Function} callback Params: componentType, dependencies.
	         * @param {Object} context Scope of callback.
	         */
	        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {
	            if (!targetNameList.length) {
	                return;
	            }
	
	            var result = makeDepndencyGraph(fullNameList);
	            var graph = result.graph;
	            var stack = result.noEntryList;
	
	            var targetNameSet = {};
	            zrUtil.each(targetNameList, function (name) {
	                targetNameSet[name] = true;
	            });
	
	            while (stack.length) {
	                var currComponentType = stack.pop();
	                var currVertex = graph[currComponentType];
	                var isInTargetNameSet = !!targetNameSet[currComponentType];
	                if (isInTargetNameSet) {
	                    callback.call(context, currComponentType, currVertex.originalDeps.slice());
	                    delete targetNameSet[currComponentType];
	                }
	                zrUtil.each(
	                    currVertex.successor,
	                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge
	                );
	            }
	
	            zrUtil.each(targetNameSet, function () {
	                throw new Error('Circle dependency may exists');
	            });
	
	            function removeEdge(succComponentType) {
	                graph[succComponentType].entryCount--;
	                if (graph[succComponentType].entryCount === 0) {
	                    stack.push(succComponentType);
	                }
	            }
	
	            // Consider this case: legend depends on series, and we call
	            // chart.setOption({series: [...]}), where only series is in option.
	            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will
	            // not be called, but only sereis.mergeOption is called. Thus legend
	            // have no chance to update its local record about series (like which
	            // name of series is available in legend).
	            function removeEdgeAndAdd(succComponentType) {
	                targetNameSet[succComponentType] = true;
	                removeEdge(succComponentType);
	            }
	        };
	
	        /**
	         * DepndencyGraph: {Object}
	         * key: conponentType,
	         * value: {
	         *     successor: [conponentTypes...],
	         *     originalDeps: [conponentTypes...],
	         *     entryCount: {number}
	         * }
	         */
	        function makeDepndencyGraph(fullNameList) {
	            var graph = {};
	            var noEntryList = [];
	
	            zrUtil.each(fullNameList, function (name) {
	
	                var thisItem = createDependencyGraphItem(graph, name);
	                var originalDeps = thisItem.originalDeps = dependencyGetter(name);
	
	                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);
	                thisItem.entryCount = availableDeps.length;
	                if (thisItem.entryCount === 0) {
	                    noEntryList.push(name);
	                }
	
	                zrUtil.each(availableDeps, function (dependentName) {
	                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {
	                        thisItem.predecessor.push(dependentName);
	                    }
	                    var thatItem = createDependencyGraphItem(graph, dependentName);
	                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {
	                        thatItem.successor.push(name);
	                    }
	                });
	            });
	
	            return {graph: graph, noEntryList: noEntryList};
	        }
	
	        function createDependencyGraphItem(graph, name) {
	            if (!graph[name]) {
	                graph[name] = {predecessor: [], successor: []};
	            }
	            return graph[name];
	        }
	
	        function getAvailableDependencies(originalDeps, fullNameList) {
	            var availableDeps = [];
	            zrUtil.each(originalDeps, function (dep) {
	                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);
	            });
	            return availableDeps;
	        }
	    };
	
	    module.exports = componentUtil;


/***/ },
/* 543 */
/*!**************************************!*\
  !*** ./~/echarts/lib/util/layout.js ***!
  \**************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// Layout helpers for each component positioning
	
	
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	    var BoundingRect = __webpack_require__(/*! zrender/lib/core/BoundingRect */ 531);
	    var numberUtil = __webpack_require__(/*! ./number */ 529);
	    var formatUtil = __webpack_require__(/*! ./format */ 528);
	    var parsePercent = numberUtil.parsePercent;
	    var each = zrUtil.each;
	
	    var layout = {};
	
	    var LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];
	
	    function boxLayout(orient, group, gap, maxWidth, maxHeight) {
	        var x = 0;
	        var y = 0;
	        if (maxWidth == null) {
	            maxWidth = Infinity;
	        }
	        if (maxHeight == null) {
	            maxHeight = Infinity;
	        }
	        var currentLineMaxSize = 0;
	        group.eachChild(function (child, idx) {
	            var position = child.position;
	            var rect = child.getBoundingRect();
	            var nextChild = group.childAt(idx + 1);
	            var nextChildRect = nextChild && nextChild.getBoundingRect();
	            var nextX;
	            var nextY;
	            if (orient === 'horizontal') {
	                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);
	                nextX = x + moveX;
	                // Wrap when width exceeds maxWidth or meet a `newline` group
	                if (nextX > maxWidth || child.newline) {
	                    x = 0;
	                    nextX = moveX;
	                    y += currentLineMaxSize + gap;
	                    currentLineMaxSize = rect.height;
	                }
	                else {
	                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);
	                }
	            }
	            else {
	                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);
	                nextY = y + moveY;
	                // Wrap when width exceeds maxHeight or meet a `newline` group
	                if (nextY > maxHeight || child.newline) {
	                    x += currentLineMaxSize + gap;
	                    y = 0;
	                    nextY = moveY;
	                    currentLineMaxSize = rect.width;
	                }
	                else {
	                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);
	                }
	            }
	
	            if (child.newline) {
	                return;
	            }
	
	            position[0] = x;
	            position[1] = y;
	
	            orient === 'horizontal'
	                ? (x = nextX + gap)
	                : (y = nextY + gap);
	        });
	    }
	
	    /**
	     * VBox or HBox layouting
	     * @param {string} orient
	     * @param {module:zrender/container/Group} group
	     * @param {number} gap
	     * @param {number} [width=Infinity]
	     * @param {number} [height=Infinity]
	     */
	    layout.box = boxLayout;
	
	    /**
	     * VBox layouting
	     * @param {module:zrender/container/Group} group
	     * @param {number} gap
	     * @param {number} [width=Infinity]
	     * @param {number} [height=Infinity]
	     */
	    layout.vbox = zrUtil.curry(boxLayout, 'vertical');
	
	    /**
	     * HBox layouting
	     * @param {module:zrender/container/Group} group
	     * @param {number} gap
	     * @param {number} [width=Infinity]
	     * @param {number} [height=Infinity]
	     */
	    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');
	
	    /**
	     * If x or x2 is not specified or 'center' 'left' 'right',
	     * the width would be as long as possible.
	     * If y or y2 is not specified or 'middle' 'top' 'bottom',
	     * the height would be as long as possible.
	     *
	     * @param {Object} positionInfo
	     * @param {number|string} [positionInfo.x]
	     * @param {number|string} [positionInfo.y]
	     * @param {number|string} [positionInfo.x2]
	     * @param {number|string} [positionInfo.y2]
	     * @param {Object} containerRect
	     * @param {string|number} margin
	     * @return {Object} {width, height}
	     */
	    layout.getAvailableSize = function (positionInfo, containerRect, margin) {
	        var containerWidth = containerRect.width;
	        var containerHeight = containerRect.height;
	
	        var x = parsePercent(positionInfo.x, containerWidth);
	        var y = parsePercent(positionInfo.y, containerHeight);
	        var x2 = parsePercent(positionInfo.x2, containerWidth);
	        var y2 = parsePercent(positionInfo.y2, containerHeight);
	
	        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);
	        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);
	        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);
	        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);
	
	        margin = formatUtil.normalizeCssArray(margin || 0);
	
	        return {
	            width: Math.max(x2 - x - margin[1] - margin[3], 0),
	            height: Math.max(y2 - y - margin[0] - margin[2], 0)
	        };
	    };
	
	    /**
	     * Parse position info.
	     *
	     * @param {Object} positionInfo
	     * @param {number|string} [positionInfo.left]
	     * @param {number|string} [positionInfo.top]
	     * @param {number|string} [positionInfo.right]
	     * @param {number|string} [positionInfo.bottom]
	     * @param {number|string} [positionInfo.width]
	     * @param {number|string} [positionInfo.height]
	     * @param {number|string} [positionInfo.aspect] Aspect is width / height
	     * @param {Object} containerRect
	     * @param {string|number} [margin]
	     *
	     * @return {module:zrender/core/BoundingRect}
	     */
	    layout.getLayoutRect = function (
	        positionInfo, containerRect, margin
	    ) {
	        margin = formatUtil.normalizeCssArray(margin || 0);
	
	        var containerWidth = containerRect.width;
	        var containerHeight = containerRect.height;
	
	        var left = parsePercent(positionInfo.left, containerWidth);
	        var top = parsePercent(positionInfo.top, containerHeight);
	        var right = parsePercent(positionInfo.right, containerWidth);
	        var bottom = parsePercent(positionInfo.bottom, containerHeight);
	        var width = parsePercent(positionInfo.width, containerWidth);
	        var height = parsePercent(positionInfo.height, containerHeight);
	
	        var verticalMargin = margin[2] + margin[0];
	        var horizontalMargin = margin[1] + margin[3];
	        var aspect = positionInfo.aspect;
	
	        // If width is not specified, calculate width from left and right
	        if (isNaN(width)) {
	            width = containerWidth - right - horizontalMargin - left;
	        }
	        if (isNaN(height)) {
	            height = containerHeight - bottom - verticalMargin - top;
	        }
	
	        // If width and height are not given
	        // 1. Graph should not exceeds the container
	        // 2. Aspect must be keeped
	        // 3. Graph should take the space as more as possible
	        if (isNaN(width) && isNaN(height)) {
	            if (aspect > containerWidth / containerHeight) {
	                width = containerWidth * 0.8;
	            }
	            else {
	                height = containerHeight * 0.8;
	            }
	        }
	
	        if (aspect != null) {
	            // Calculate width or height with given aspect
	            if (isNaN(width)) {
	                width = aspect * height;
	            }
	            if (isNaN(height)) {
	                height = width / aspect;
	            }
	        }
	
	        // If left is not specified, calculate left from right and width
	        if (isNaN(left)) {
	            left = containerWidth - right - width - horizontalMargin;
	        }
	        if (isNaN(top)) {
	            top = containerHeight - bottom - height - verticalMargin;
	        }
	
	        // Align left and top
	        switch (positionInfo.left || positionInfo.right) {
	            case 'center':
	                left = containerWidth / 2 - width / 2 - margin[3];
	                break;
	            case 'right':
	                left = containerWidth - width - horizontalMargin;
	                break;
	        }
	        switch (positionInfo.top || positionInfo.bottom) {
	            case 'middle':
	            case 'center':
	                top = containerHeight / 2 - height / 2 - margin[0];
	                break;
	            case 'bottom':
	                top = containerHeight - height - verticalMargin;
	                break;
	        }
	        // If something is wrong and left, top, width, height are calculated as NaN
	        left = left || 0;
	        top = top || 0;
	        if (isNaN(width)) {
	            // Width may be NaN if only one value is given except width
	            width = containerWidth - left - (right || 0);
	        }
	        if (isNaN(height)) {
	            // Height may be NaN if only one value is given except height
	            height = containerHeight - top - (bottom || 0);
	        }
	
	        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);
	        rect.margin = margin;
	        return rect;
	    };
	
	    /**
	     * Position group of component in viewport
	     *  Group position is specified by either
	     *  {left, top}, {right, bottom}
	     *  If all properties exists, right and bottom will be igonred.
	     *
	     * @param {module:zrender/container/Group} group
	     * @param {Object} positionInfo
	     * @param {number|string} [positionInfo.left]
	     * @param {number|string} [positionInfo.top]
	     * @param {number|string} [positionInfo.right]
	     * @param {number|string} [positionInfo.bottom]
	     * @param {Object} containerRect
	     * @param {string|number} margin
	     */
	    layout.positionGroup = function (
	        group, positionInfo, containerRect, margin
	    ) {
	        var groupRect = group.getBoundingRect();
	
	        positionInfo = zrUtil.extend(zrUtil.clone(positionInfo), {
	            width: groupRect.width,
	            height: groupRect.height
	        });
	
	        positionInfo = layout.getLayoutRect(
	            positionInfo, containerRect, margin
	        );
	
	        group.attr('position', [
	            positionInfo.x - groupRect.x,
	            positionInfo.y - groupRect.y
	        ]);
	    };
	
	    /**
	     * Consider Case:
	     * When defulat option has {left: 0, width: 100}, and we set {right: 0}
	     * through setOption or media query, using normal zrUtil.merge will cause
	     * {right: 0} does not take effect.
	     *
	     * @example
	     * ComponentModel.extend({
	     *     init: function () {
	     *         ...
	     *         var inputPositionParams = layout.getLayoutParams(option);
	     *         this.mergeOption(inputPositionParams);
	     *     },
	     *     mergeOption: function (newOption) {
	     *         newOption && zrUtil.merge(thisOption, newOption, true);
	     *         layout.mergeLayoutParam(thisOption, newOption);
	     *     }
	     * });
	     *
	     * @param {Object} targetOption
	     * @param {Object} newOption
	     * @param {Object|string} [opt]
	     * @param {boolean} [opt.ignoreSize=false] Some component must has width and height.
	     */
	    layout.mergeLayoutParam = function (targetOption, newOption, opt) {
	        !zrUtil.isObject(opt) && (opt = {});
	        var hNames = ['width', 'left', 'right']; // Order by priority.
	        var vNames = ['height', 'top', 'bottom']; // Order by priority.
	        var hResult = merge(hNames);
	        var vResult = merge(vNames);
	
	        copy(hNames, targetOption, hResult);
	        copy(vNames, targetOption, vResult);
	
	        function merge(names) {
	            var newParams = {};
	            var newValueCount = 0;
	            var merged = {};
	            var mergedValueCount = 0;
	            var enoughParamNumber = opt.ignoreSize ? 1 : 2;
	
	            each(names, function (name) {
	                merged[name] = targetOption[name];
	            });
	            each(names, function (name) {
	                // Consider case: newOption.width is null, which is
	                // set by user for removing width setting.
	                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);
	                hasValue(newParams, name) && newValueCount++;
	                hasValue(merged, name) && mergedValueCount++;
	            });
	
	            // Case: newOption: {width: ..., right: ...},
	            // or targetOption: {right: ...} and newOption: {width: ...},
	            // There is no conflict when merged only has params count
	            // little than enoughParamNumber.
	            if (mergedValueCount === enoughParamNumber || !newValueCount) {
	                return merged;
	            }
	            // Case: newOption: {width: ..., right: ...},
	            // Than we can make sure user only want those two, and ignore
	            // all origin params in targetOption.
	            else if (newValueCount >= enoughParamNumber) {
	                return newParams;
	            }
	            else {
	                // Chose another param from targetOption by priority.
	                // When 'ignoreSize', enoughParamNumber is 1 and those will not happen.
	                for (var i = 0; i < names.length; i++) {
	                    var name = names[i];
	                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {
	                        newParams[name] = targetOption[name];
	                        break;
	                    }
	                }
	                return newParams;
	            }
	        }
	
	        function hasProp(obj, name) {
	            return obj.hasOwnProperty(name);
	        }
	
	        function hasValue(obj, name) {
	            return obj[name] != null && obj[name] !== 'auto';
	        }
	
	        function copy(names, target, source) {
	            each(names, function (name) {
	                target[name] = source[name];
	            });
	        }
	    };
	
	    /**
	     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.
	     * @param {Object} source
	     * @return {Object} Result contains those props.
	     */
	    layout.getLayoutParams = function (source) {
	        return layout.copyLayoutParams({}, source);
	    };
	
	    /**
	     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.
	     * @param {Object} source
	     * @return {Object} Result contains those props.
	     */
	    layout.copyLayoutParams = function (target, source) {
	        source && target && each(LOCATION_PARAMS, function (name) {
	            source.hasOwnProperty(name) && (target[name] = source[name]);
	        });
	        return target;
	    };
	
	    module.exports = layout;


/***/ },
/* 544 */
/*!************************************************!*\
  !*** ./~/echarts/lib/model/mixin/boxLayout.js ***!
  \************************************************/
/***/ function(module, exports) {

	
	
	    module.exports = {
	        getBoxLayoutParams: function () {
	            return {
	                left: this.get('left'),
	                top: this.get('top'),
	                right: this.get('right'),
	                bottom: this.get('bottom'),
	                width: this.get('width'),
	                height: this.get('height')
	            };
	        }
	    };


/***/ },
/* 545 */
/*!**********************************************!*\
  !*** ./~/echarts/lib/model/globalDefault.js ***!
  \**********************************************/
/***/ function(module, exports) {

	
	    var platform = '';
	    // Navigator not exists in node
	    if (typeof navigator !== 'undefined') {
	        platform = navigator.platform || '';
	    }
	    module.exports = {
	        // 全图默认背景
	        // backgroundColor: 'rgba(0,0,0,0)',
	
	        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization
	        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],
	        // 浅色
	        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],
	        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],
	        // 深色
	        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],
	
	        // 默认需要 Grid 配置项
	        grid: {},
	        // 主题，主题
	        textStyle: {
	            // color: '#000',
	            // decoration: 'none',
	            // PENDING
	            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',
	            // fontFamily: 'Arial, Verdana, sans-serif',
	            fontSize: 12,
	            fontStyle: 'normal',
	            fontWeight: 'normal'
	        },
	
	        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/
	        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation
	        // Default is source-over
	        blendMode: null,
	
	        animation: true,
	        animationDuration: 1000,
	        animationDurationUpdate: 300,
	        animationEasing: 'exponentialOut',
	        animationEasingUpdate: 'cubicOut',
	
	        animationThreshold: 2000,
	        // Configuration for progressive/incremental rendering
	        progressiveThreshold: 3000,
	        progressive: 400,
	
	        // Threshold of if use single hover layer to optimize.
	        hoverLayerThreshold: 3000
	    };


/***/ },
/* 546 */
/*!***************************************************!*\
  !*** ./~/echarts/lib/model/mixin/colorPalette.js ***!
  \***************************************************/
/***/ function(module, exports) {

	
	    module.exports = {
	        clearColorPalette: function () {
	            this._colorIdx = 0;
	            this._colorNameMap = {};
	        },
	
	        getColorFromPalette: function (name, scope) {
	            scope = scope || this;
	            var colorIdx = scope._colorIdx || 0;
	            var colorNameMap = scope._colorNameMap || (scope._colorNameMap = {});
	            if (colorNameMap[name]) {
	                return colorNameMap[name];
	            }
	            var colorPalette = this.get('color', true) || [];
	            if (!colorPalette.length) {
	                return;
	            }
	
	            var color = colorPalette[colorIdx];
	            if (name) {
	                colorNameMap[name] = color;
	            }
	            scope._colorIdx = (colorIdx + 1) % colorPalette.length;
	
	            return color;
	        }
	    };


/***/ },
/* 547 */
/*!***************************************!*\
  !*** ./~/echarts/lib/ExtensionAPI.js ***!
  \***************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	
	    var echartsAPIList = [
	        'getDom', 'getZr', 'getWidth', 'getHeight', 'dispatchAction', 'isDisposed',
	        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption'
	    ];
	
	    function ExtensionAPI(chartInstance) {
	        zrUtil.each(echartsAPIList, function (name) {
	            this[name] = zrUtil.bind(chartInstance[name], chartInstance);
	        }, this);
	    }
	
	    module.exports = ExtensionAPI;


/***/ },
/* 548 */
/*!*******************************************!*\
  !*** ./~/echarts/lib/CoordinateSystem.js ***!
  \*******************************************/
/***/ function(module, exports) {

	'use strict';
	
	
	    var coordinateSystemCreators = {};
	
	    function CoordinateSystemManager() {
	
	        this._coordinateSystems = [];
	    }
	
	    CoordinateSystemManager.prototype = {
	
	        constructor: CoordinateSystemManager,
	
	        create: function (ecModel, api) {
	            var coordinateSystems = [];
	            for (var type in coordinateSystemCreators) {
	                var list = coordinateSystemCreators[type].create(ecModel, api);
	                list && (coordinateSystems = coordinateSystems.concat(list));
	            }
	
	            this._coordinateSystems = coordinateSystems;
	        },
	
	        update: function (ecModel, api) {
	            var coordinateSystems = this._coordinateSystems;
	            for (var i = 0; i < coordinateSystems.length; i++) {
	                // FIXME MUST have
	                coordinateSystems[i].update && coordinateSystems[i].update(ecModel, api);
	            }
	        }
	    };
	
	    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {
	        coordinateSystemCreators[type] = coordinateSystemCreator;
	    };
	
	    CoordinateSystemManager.get = function (type) {
	        return coordinateSystemCreators[type];
	    };
	
	    module.exports = CoordinateSystemManager;


/***/ },
/* 549 */
/*!**********************************************!*\
  !*** ./~/echarts/lib/model/OptionManager.js ***!
  \**********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * ECharts option manager
	 *
	 * @module {echarts/model/OptionManager}
	 */
	
	
	
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	    var modelUtil = __webpack_require__(/*! ../util/model */ 527);
	    var ComponentModel = __webpack_require__(/*! ./Component */ 541);
	    var each = zrUtil.each;
	    var clone = zrUtil.clone;
	    var map = zrUtil.map;
	    var merge = zrUtil.merge;
	
	    var QUERY_REG = /^(min|max)?(.+)$/;
	
	    /**
	     * TERM EXPLANATIONS:
	     *
	     * [option]:
	     *
	     *     An object that contains definitions of components. For example:
	     *     var option = {
	     *         title: {...},
	     *         legend: {...},
	     *         visualMap: {...},
	     *         series: [
	     *             {data: [...]},
	     *             {data: [...]},
	     *             ...
	     *         ]
	     *     };
	     *
	     * [rawOption]:
	     *
	     *     An object input to echarts.setOption. 'rawOption' may be an
	     *     'option', or may be an object contains multi-options. For example:
	     *     var option = {
	     *         baseOption: {
	     *             title: {...},
	     *             legend: {...},
	     *             series: [
	     *                 {data: [...]},
	     *                 {data: [...]},
	     *                 ...
	     *             ]
	     *         },
	     *         timeline: {...},
	     *         options: [
	     *             {title: {...}, series: {data: [...]}},
	     *             {title: {...}, series: {data: [...]}},
	     *             ...
	     *         ],
	     *         media: [
	     *             {
	     *                 query: {maxWidth: 320},
	     *                 option: {series: {x: 20}, visualMap: {show: false}}
	     *             },
	     *             {
	     *                 query: {minWidth: 320, maxWidth: 720},
	     *                 option: {series: {x: 500}, visualMap: {show: true}}
	     *             },
	     *             {
	     *                 option: {series: {x: 1200}, visualMap: {show: true}}
	     *             }
	     *         ]
	     *     };
	     *
	     * @alias module:echarts/model/OptionManager
	     * @param {module:echarts/ExtensionAPI} api
	     */
	    function OptionManager(api) {
	
	        /**
	         * @private
	         * @type {module:echarts/ExtensionAPI}
	         */
	        this._api = api;
	
	        /**
	         * @private
	         * @type {Array.<number>}
	         */
	        this._timelineOptions = [];
	
	        /**
	         * @private
	         * @type {Array.<Object>}
	         */
	        this._mediaList = [];
	
	        /**
	         * @private
	         * @type {Object}
	         */
	        this._mediaDefault;
	
	        /**
	         * -1, means default.
	         * empty means no media.
	         * @private
	         * @type {Array.<number>}
	         */
	        this._currentMediaIndices = [];
	
	        /**
	         * @private
	         * @type {Object}
	         */
	        this._optionBackup;
	
	        /**
	         * @private
	         * @type {Object}
	         */
	        this._newBaseOption;
	    }
	
	    // timeline.notMerge is not supported in ec3. Firstly there is rearly
	    // case that notMerge is needed. Secondly supporting 'notMerge' requires
	    // rawOption cloned and backuped when timeline changed, which does no
	    // good to performance. What's more, that both timeline and setOption
	    // method supply 'notMerge' brings complex and some problems.
	    // Consider this case:
	    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);
	    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);
	
	    OptionManager.prototype = {
	
	        constructor: OptionManager,
	
	        /**
	         * @public
	         * @param {Object} rawOption Raw option.
	         * @param {module:echarts/model/Global} ecModel
	         * @param {Array.<Function>} optionPreprocessorFuncs
	         * @return {Object} Init option
	         */
	        setOption: function (rawOption, optionPreprocessorFuncs) {
	            rawOption = clone(rawOption, true);
	
	            // FIXME
	            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。
	
	            var oldOptionBackup = this._optionBackup;
	            var newParsedOption = parseRawOption.call(
	                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup
	            );
	            this._newBaseOption = newParsedOption.baseOption;
	
	            // For setOption at second time (using merge mode);
	            if (oldOptionBackup) {
	                // Only baseOption can be merged.
	                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);
	
	                // For simplicity, timeline options and media options do not support merge,
	                // that is, if you `setOption` twice and both has timeline options, the latter
	                // timeline opitons will not be merged to the formers, but just substitude them.
	                if (newParsedOption.timelineOptions.length) {
	                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;
	                }
	                if (newParsedOption.mediaList.length) {
	                    oldOptionBackup.mediaList = newParsedOption.mediaList;
	                }
	                if (newParsedOption.mediaDefault) {
	                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;
	                }
	            }
	            else {
	                this._optionBackup = newParsedOption;
	            }
	        },
	
	        /**
	         * @param {boolean} isRecreate
	         * @return {Object}
	         */
	        mountOption: function (isRecreate) {
	            var optionBackup = this._optionBackup;
	
	            // TODO
	            // 如果没有reset功能则不clone。
	
	            this._timelineOptions = map(optionBackup.timelineOptions, clone);
	            this._mediaList = map(optionBackup.mediaList, clone);
	            this._mediaDefault = clone(optionBackup.mediaDefault);
	            this._currentMediaIndices = [];
	
	            return clone(isRecreate
	                // this._optionBackup.baseOption, which is created at the first `setOption`
	                // called, and is merged into every new option by inner method `mergeOption`
	                // each time `setOption` called, can be only used in `isRecreate`, because
	                // its reliability is under suspicion. In other cases option merge is
	                // proformed by `model.mergeOption`.
	                ? optionBackup.baseOption : this._newBaseOption
	            );
	        },
	
	        /**
	         * @param {module:echarts/model/Global} ecModel
	         * @return {Object}
	         */
	        getTimelineOption: function (ecModel) {
	            var option;
	            var timelineOptions = this._timelineOptions;
	
	            if (timelineOptions.length) {
	                // getTimelineOption can only be called after ecModel inited,
	                // so we can get currentIndex from timelineModel.
	                var timelineModel = ecModel.getComponent('timeline');
	                if (timelineModel) {
	                    option = clone(
	                        timelineOptions[timelineModel.getCurrentIndex()],
	                        true
	                    );
	                }
	            }
	
	            return option;
	        },
	
	        /**
	         * @param {module:echarts/model/Global} ecModel
	         * @return {Array.<Object>}
	         */
	        getMediaOption: function (ecModel) {
	            var ecWidth = this._api.getWidth();
	            var ecHeight = this._api.getHeight();
	            var mediaList = this._mediaList;
	            var mediaDefault = this._mediaDefault;
	            var indices = [];
	            var result = [];
	
	            // No media defined.
	            if (!mediaList.length && !mediaDefault) {
	                return result;
	            }
	
	            // Multi media may be applied, the latter defined media has higher priority.
	            for (var i = 0, len = mediaList.length; i < len; i++) {
	                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {
	                    indices.push(i);
	                }
	            }
	
	            // FIXME
	            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。
	            if (!indices.length && mediaDefault) {
	                indices = [-1];
	            }
	
	            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {
	                result = map(indices, function (index) {
	                    return clone(
	                        index === -1 ? mediaDefault.option : mediaList[index].option
	                    );
	                });
	            }
	            // Otherwise return nothing.
	
	            this._currentMediaIndices = indices;
	
	            return result;
	        }
	    };
	
	    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {
	        var timelineOptions = [];
	        var mediaList = [];
	        var mediaDefault;
	        var baseOption;
	
	        // Compatible with ec2.
	        var timelineOpt = rawOption.timeline;
	
	        if (rawOption.baseOption) {
	            baseOption = rawOption.baseOption;
	        }
	
	        // For timeline
	        if (timelineOpt || rawOption.options) {
	            baseOption = baseOption || {};
	            timelineOptions = (rawOption.options || []).slice();
	        }
	
	        // For media query
	        if (rawOption.media) {
	            baseOption = baseOption || {};
	            var media = rawOption.media;
	            each(media, function (singleMedia) {
	                if (singleMedia && singleMedia.option) {
	                    if (singleMedia.query) {
	                        mediaList.push(singleMedia);
	                    }
	                    else if (!mediaDefault) {
	                        // Use the first media default.
	                        mediaDefault = singleMedia;
	                    }
	                }
	            });
	        }
	
	        // For normal option
	        if (!baseOption) {
	            baseOption = rawOption;
	        }
	
	        // Set timelineOpt to baseOption in ec3,
	        // which is convenient for merge option.
	        if (!baseOption.timeline) {
	            baseOption.timeline = timelineOpt;
	        }
	
	        // Preprocess.
	        each([baseOption].concat(timelineOptions)
	            .concat(zrUtil.map(mediaList, function (media) {
	                return media.option;
	            })),
	            function (option) {
	                each(optionPreprocessorFuncs, function (preProcess) {
	                    preProcess(option, isNew);
	                });
	            }
	        );
	
	        return {
	            baseOption: baseOption,
	            timelineOptions: timelineOptions,
	            mediaDefault: mediaDefault,
	            mediaList: mediaList
	        };
	    }
	
	    /**
	     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>
	     * Support: width, height, aspectRatio
	     * Can use max or min as prefix.
	     */
	    function applyMediaQuery(query, ecWidth, ecHeight) {
	        var realMap = {
	            width: ecWidth,
	            height: ecHeight,
	            aspectratio: ecWidth / ecHeight // lowser case for convenientce.
	        };
	
	        var applicatable = true;
	
	        zrUtil.each(query, function (value, attr) {
	            var matched = attr.match(QUERY_REG);
	
	            if (!matched || !matched[1] || !matched[2]) {
	                return;
	            }
	
	            var operator = matched[1];
	            var realAttr = matched[2].toLowerCase();
	
	            if (!compare(realMap[realAttr], value, operator)) {
	                applicatable = false;
	            }
	        });
	
	        return applicatable;
	    }
	
	    function compare(real, expect, operator) {
	        if (operator === 'min') {
	            return real >= expect;
	        }
	        else if (operator === 'max') {
	            return real <= expect;
	        }
	        else { // Equals
	            return real === expect;
	        }
	    }
	
	    function indicesEquals(indices1, indices2) {
	        // indices is always order by asc and has only finite number.
	        return indices1.join(',') === indices2.join(',');
	    }
	
	    /**
	     * Consider case:
	     * `chart.setOption(opt1);`
	     * Then user do some interaction like dataZoom, dataView changing.
	     * `chart.setOption(opt2);`
	     * Then user press 'reset button' in toolbox.
	     *
	     * After doing that all of the interaction effects should be reset, the
	     * chart should be the same as the result of invoke
	     * `chart.setOption(opt1); chart.setOption(opt2);`.
	     *
	     * Although it is not able ensure that
	     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to
	     * `chart.setOption(merge(opt1, opt2));` exactly,
	     * this might be the only simple way to implement that feature.
	     *
	     * MEMO: We've considered some other approaches:
	     * 1. Each model handle its self restoration but not uniform treatment.
	     *     (Too complex in logic and error-prone)
	     * 2. Use a shadow ecModel. (Performace expensive)
	     */
	    function mergeOption(oldOption, newOption) {
	        newOption = newOption || {};
	
	        each(newOption, function (newCptOpt, mainType) {
	            if (newCptOpt == null) {
	                return;
	            }
	
	            var oldCptOpt = oldOption[mainType];
	
	            if (!ComponentModel.hasClass(mainType)) {
	                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);
	            }
	            else {
	                newCptOpt = modelUtil.normalizeToArray(newCptOpt);
	                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);
	
	                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);
	
	                oldOption[mainType] = map(mapResult, function (item) {
	                    return (item.option && item.exist)
	                        ? merge(item.exist, item.option, true)
	                        : (item.exist || item.option);
	                });
	            }
	        });
	    }
	
	    module.exports = OptionManager;


/***/ },
/* 550 */
/*!***************************************!*\
  !*** ./~/echarts/lib/model/Series.js ***!
  \***************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	    var formatUtil = __webpack_require__(/*! ../util/format */ 528);
	    var modelUtil = __webpack_require__(/*! ../util/model */ 527);
	    var ComponentModel = __webpack_require__(/*! ./Component */ 541);
	    var colorPaletteMixin = __webpack_require__(/*! ./mixin/colorPalette */ 546);
	    var env = __webpack_require__(/*! zrender/lib/core/env */ 524);
	
	    var encodeHTML = formatUtil.encodeHTML;
	    var addCommas = formatUtil.addCommas;
	
	    var SeriesModel = ComponentModel.extend({
	
	        type: 'series.__base__',
	
	        /**
	         * @readOnly
	         */
	        seriesIndex: 0,
	
	        // coodinateSystem will be injected in the echarts/CoordinateSystem
	        coordinateSystem: null,
	
	        /**
	         * @type {Object}
	         * @protected
	         */
	        defaultOption: null,
	
	        /**
	         * Data provided for legend
	         * @type {Function}
	         */
	        // PENDING
	        legendDataProvider: null,
	
	        /**
	         * Access path of color for visual
	         */
	        visualColorAccessPath: 'itemStyle.normal.color',
	
	        init: function (option, parentModel, ecModel, extraOpt) {
	
	            /**
	             * @type {number}
	             * @readOnly
	             */
	            this.seriesIndex = this.componentIndex;
	
	            this.mergeDefaultAndTheme(option, ecModel);
	
	            /**
	             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}
	             * @private
	             */
	            this._dataBeforeProcessed = this.getInitialData(option, ecModel);
	
	            // If we reverse the order (make this._data firstly, and then make
	            // this._dataBeforeProcessed by cloneShallow), cloneShallow will
	            // cause this._data.graph.data !== this._data when using
	            // module:echarts/data/Graph or module:echarts/data/Tree.
	            // See module:echarts/data/helper/linkList
	            this._data = this._dataBeforeProcessed.cloneShallow();
	        },
	
	        /**
	         * Util for merge default and theme to option
	         * @param  {Object} option
	         * @param  {module:echarts/model/Global} ecModel
	         */
	        mergeDefaultAndTheme: function (option, ecModel) {
	            zrUtil.merge(
	                option,
	                ecModel.getTheme().get(this.subType)
	            );
	            zrUtil.merge(option, this.getDefaultOption());
	
	            // Default label emphasis `position` and `show`
	            // FIXME Set label in mergeOption
	            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);
	
	            this.fillDataTextStyle(option.data);
	        },
	
	        mergeOption: function (newSeriesOption, ecModel) {
	            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);
	            this.fillDataTextStyle(newSeriesOption.data);
	
	            var data = this.getInitialData(newSeriesOption, ecModel);
	            // TODO Merge data?
	            if (data) {
	                this._data = data;
	                this._dataBeforeProcessed = data.cloneShallow();
	            }
	        },
	
	        fillDataTextStyle: function (data) {
	            // Default data label emphasis `position` and `show`
	            // FIXME Tree structure data ?
	            // FIXME Performance ?
	            if (data) {
	                for (var i = 0; i < data.length; i++) {
	                    if (data[i] && data[i].label) {
	                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);
	                    }
	                }
	            }
	        },
	
	        /**
	         * Init a data structure from data related option in series
	         * Must be overwritten
	         */
	        getInitialData: function () {},
	
	        /**
	         * @param {string} [dataType]
	         * @return {module:echarts/data/List}
	         */
	        getData: function (dataType) {
	            return dataType == null ? this._data : this._data.getLinkedData(dataType);
	        },
	
	        /**
	         * @param {module:echarts/data/List} data
	         */
	        setData: function (data) {
	            this._data = data;
	        },
	
	        /**
	         * Get data before processed
	         * @return {module:echarts/data/List}
	         */
	        getRawData: function () {
	            return this._dataBeforeProcessed;
	        },
	
	        /**
	         * Coord dimension to data dimension.
	         *
	         * By default the result is the same as dimensions of series data.
	         * But in some series data dimensions are different from coord dimensions (i.e.
	         * candlestick and boxplot). Override this method to handle those cases.
	         *
	         * Coord dimension to data dimension can be one-to-many
	         *
	         * @param {string} coordDim
	         * @return {Array.<string>} dimensions on the axis.
	         */
	        coordDimToDataDim: function (coordDim) {
	            return [coordDim];
	        },
	
	        /**
	         * Convert data dimension to coord dimension.
	         *
	         * @param {string|number} dataDim
	         * @return {string}
	         */
	        dataDimToCoordDim: function (dataDim) {
	            return dataDim;
	        },
	
	        /**
	         * Get base axis if has coordinate system and has axis.
	         * By default use coordSys.getBaseAxis();
	         * Can be overrided for some chart.
	         * @return {type} description
	         */
	        getBaseAxis: function () {
	            var coordSys = this.coordinateSystem;
	            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();
	        },
	
	        // FIXME
	        /**
	         * Default tooltip formatter
	         *
	         * @param {number} dataIndex
	         * @param {boolean} [multipleSeries=false]
	         * @param {number} [dataType]
	         */
	        formatTooltip: function (dataIndex, multipleSeries, dataType) {
	            function formatArrayValue(value) {
	                return zrUtil.map(value, function (val, idx) {
	                    var dimInfo = data.getDimensionInfo(idx);
	                    var dimType = dimInfo && dimInfo.type;
	                    if (dimType === 'ordinal') {
	                        return val;
	                    }
	                    else if (dimType === 'time') {
	                        return multipleSeries ? '' : formatUtil.formatTime('yyyy/mm/dd hh:mm:ss', val);
	                    }
	                    else {
	                        return addCommas(val);
	                    }
	                }).filter(function (val) {
	                    return !!val;
	                }).join(', ');
	            }
	
	            var data = this._data;
	
	            var value = this.getRawValue(dataIndex);
	            var formattedValue = zrUtil.isArray(value)
	                ? formatArrayValue(value) : addCommas(value);
	            var name = data.getName(dataIndex);
	            var color = data.getItemVisual(dataIndex, 'color');
	            var colorEl = '<span style="display:inline-block;margin-right:5px;'
	                + 'border-radius:10px;width:9px;height:9px;background-color:' + color + '"></span>';
	
	            var seriesName = this.name;
	            // FIXME
	            if (seriesName === '\0-') {
	                // Not show '-'
	                seriesName = '';
	            }
	            return !multipleSeries
	                ? ((seriesName && encodeHTML(seriesName) + '<br />') + colorEl
	                    + (name
	                        ? encodeHTML(name) + ' : ' + formattedValue
	                        : formattedValue)
	                  )
	                : (colorEl + encodeHTML(this.name) + ' : ' + formattedValue);
	        },
	
	        /**
	         * @return {boolean}
	         */
	        ifEnableAnimation: function () {
	            if (env.node) {
	                return false;
	            }
	
	            var animationEnabled = this.getShallow('animation');
	            if (animationEnabled) {
	                if (this.getData().count() > this.getShallow('animationThreshold')) {
	                    animationEnabled = false;
	                }
	            }
	            return animationEnabled;
	        },
	
	        restoreData: function () {
	            this._data = this._dataBeforeProcessed.cloneShallow();
	        },
	
	        getColorFromPalette: function (name, scope) {
	            var ecModel = this.ecModel;
	            // PENDING
	            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);
	            if (!color) {
	                color = ecModel.getColorFromPalette(name, scope);
	            }
	            return color;
	        },
	
	        getAxisTooltipDataIndex: null
	    });
	
	    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);
	    zrUtil.mixin(SeriesModel, colorPaletteMixin);
	
	    module.exports = SeriesModel;


/***/ },
/* 551 */
/*!*****************************************!*\
  !*** ./~/echarts/lib/view/Component.js ***!
  \*****************************************/
/***/ function(module, exports, __webpack_require__) {

	
	
	    var Group = __webpack_require__(/*! zrender/lib/container/Group */ 552);
	    var componentUtil = __webpack_require__(/*! ../util/component */ 542);
	    var clazzUtil = __webpack_require__(/*! ../util/clazz */ 535);
	
	    var Component = function () {
	        /**
	         * @type {module:zrender/container/Group}
	         * @readOnly
	         */
	        this.group = new Group();
	
	        /**
	         * @type {string}
	         * @readOnly
	         */
	        this.uid = componentUtil.getUID('viewComponent');
	    };
	
	    Component.prototype = {
	
	        constructor: Component,
	
	        init: function (ecModel, api) {},
	
	        render: function (componentModel, ecModel, api, payload) {},
	
	        dispose: function () {}
	    };
	
	    var componentProto = Component.prototype;
	    componentProto.updateView
	        = componentProto.updateLayout
	        = componentProto.updateVisual
	        = function (seriesModel, ecModel, api, payload) {
	            // Do nothing;
	        };
	    // Enable Component.extend.
	    clazzUtil.enableClassExtend(Component);
	
	    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.
	    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});
	
	    module.exports = Component;


/***/ },
/* 552 */
/*!******************************************!*\
  !*** ./~/zrender/lib/container/Group.js ***!
  \******************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上
	 * @module zrender/graphic/Group
	 * @example
	 *     var Group = require('zrender/lib/container/Group');
	 *     var Circle = require('zrender/lib/graphic/shape/Circle');
	 *     var g = new Group();
	 *     g.position[0] = 100;
	 *     g.position[1] = 100;
	 *     g.add(new Circle({
	 *         style: {
	 *             x: 100,
	 *             y: 100,
	 *             r: 20,
	 *         }
	 *     }));
	 *     zr.add(g);
	 */
	
	
	    var zrUtil = __webpack_require__(/*! ../core/util */ 526);
	    var Element = __webpack_require__(/*! ../Element */ 553);
	    var BoundingRect = __webpack_require__(/*! ../core/BoundingRect */ 531);
	
	    /**
	     * @alias module:zrender/graphic/Group
	     * @constructor
	     * @extends module:zrender/mixin/Transformable
	     * @extends module:zrender/mixin/Eventful
	     */
	    var Group = function (opts) {
	
	        opts = opts || {};
	
	        Element.call(this, opts);
	
	        for (var key in opts) {
	            this[key] = opts[key];
	        }
	
	        this._children = [];
	
	        this.__storage = null;
	
	        this.__dirty = true;
	    };
	
	    Group.prototype = {
	
	        constructor: Group,
	
	        isGroup: true,
	
	        /**
	         * @type {string}
	         */
	        type: 'group',
	
	        /**
	         * 所有子孙元素是否响应鼠标事件
	         * @name module:/zrender/container/Group#silent
	         * @type {boolean}
	         * @default false
	         */
	        silent: false,
	
	        /**
	         * @return {Array.<module:zrender/Element>}
	         */
	        children: function () {
	            return this._children.slice();
	        },
	
	        /**
	         * 获取指定 index 的儿子节点
	         * @param  {number} idx
	         * @return {module:zrender/Element}
	         */
	        childAt: function (idx) {
	            return this._children[idx];
	        },
	
	        /**
	         * 获取指定名字的儿子节点
	         * @param  {string} name
	         * @return {module:zrender/Element}
	         */
	        childOfName: function (name) {
	            var children = this._children;
	            for (var i = 0; i < children.length; i++) {
	                if (children[i].name === name) {
	                    return children[i];
	                }
	             }
	        },
	
	        /**
	         * @return {number}
	         */
	        childCount: function () {
	            return this._children.length;
	        },
	
	        /**
	         * 添加子节点到最后
	         * @param {module:zrender/Element} child
	         */
	        add: function (child) {
	            if (child && child !== this && child.parent !== this) {
	
	                this._children.push(child);
	
	                this._doAdd(child);
	            }
	
	            return this;
	        },
	
	        /**
	         * 添加子节点在 nextSibling 之前
	         * @param {module:zrender/Element} child
	         * @param {module:zrender/Element} nextSibling
	         */
	        addBefore: function (child, nextSibling) {
	            if (child && child !== this && child.parent !== this
	                && nextSibling && nextSibling.parent === this) {
	
	                var children = this._children;
	                var idx = children.indexOf(nextSibling);
	
	                if (idx >= 0) {
	                    children.splice(idx, 0, child);
	                    this._doAdd(child);
	                }
	            }
	
	            return this;
	        },
	
	        _doAdd: function (child) {
	            if (child.parent) {
	                child.parent.remove(child);
	            }
	
	            child.parent = this;
	
	            var storage = this.__storage;
	            var zr = this.__zr;
	            if (storage && storage !== child.__storage) {
	
	                storage.addToMap(child);
	
	                if (child instanceof Group) {
	                    child.addChildrenToStorage(storage);
	                }
	            }
	
	            zr && zr.refresh();
	        },
	
	        /**
	         * 移除子节点
	         * @param {module:zrender/Element} child
	         */
	        remove: function (child) {
	            var zr = this.__zr;
	            var storage = this.__storage;
	            var children = this._children;
	
	            var idx = zrUtil.indexOf(children, child);
	            if (idx < 0) {
	                return this;
	            }
	            children.splice(idx, 1);
	
	            child.parent = null;
	
	            if (storage) {
	
	                storage.delFromMap(child.id);
	
	                if (child instanceof Group) {
	                    child.delChildrenFromStorage(storage);
	                }
	            }
	
	            zr && zr.refresh();
	
	            return this;
	        },
	
	        /**
	         * 移除所有子节点
	         */
	        removeAll: function () {
	            var children = this._children;
	            var storage = this.__storage;
	            var child;
	            var i;
	            for (i = 0; i < children.length; i++) {
	                child = children[i];
	                if (storage) {
	                    storage.delFromMap(child.id);
	                    if (child instanceof Group) {
	                        child.delChildrenFromStorage(storage);
	                    }
	                }
	                child.parent = null;
	            }
	            children.length = 0;
	
	            return this;
	        },
	
	        /**
	         * 遍历所有子节点
	         * @param  {Function} cb
	         * @param  {}   context
	         */
	        eachChild: function (cb, context) {
	            var children = this._children;
	            for (var i = 0; i < children.length; i++) {
	                var child = children[i];
	                cb.call(context, child, i);
	            }
	            return this;
	        },
	
	        /**
	         * 深度优先遍历所有子孙节点
	         * @param  {Function} cb
	         * @param  {}   context
	         */
	        traverse: function (cb, context) {
	            for (var i = 0; i < this._children.length; i++) {
	                var child = this._children[i];
	                cb.call(context, child);
	
	                if (child.type === 'group') {
	                    child.traverse(cb, context);
	                }
	            }
	            return this;
	        },
	
	        addChildrenToStorage: function (storage) {
	            for (var i = 0; i < this._children.length; i++) {
	                var child = this._children[i];
	                storage.addToMap(child);
	                if (child instanceof Group) {
	                    child.addChildrenToStorage(storage);
	                }
	            }
	        },
	
	        delChildrenFromStorage: function (storage) {
	            for (var i = 0; i < this._children.length; i++) {
	                var child = this._children[i];
	                storage.delFromMap(child.id);
	                if (child instanceof Group) {
	                    child.delChildrenFromStorage(storage);
	                }
	            }
	        },
	
	        dirty: function () {
	            this.__dirty = true;
	            this.__zr && this.__zr.refresh();
	            return this;
	        },
	
	        /**
	         * @return {module:zrender/core/BoundingRect}
	         */
	        getBoundingRect: function (includeChildren) {
	            // TODO Caching
	            // TODO Transform
	            var rect = null;
	            var tmpRect = new BoundingRect(0, 0, 0, 0);
	            var children = includeChildren || this._children;
	            var tmpMat = [];
	
	            for (var i = 0; i < children.length; i++) {
	                var child = children[i];
	                if (child.ignore || child.invisible) {
	                    continue;
	                }
	
	                var childRect = child.getBoundingRect();
	                var transform = child.getLocalTransform(tmpMat);
	                if (transform) {
	                    tmpRect.copy(childRect);
	                    tmpRect.applyTransform(transform);
	                    rect = rect || tmpRect.clone();
	                    rect.union(tmpRect);
	                }
	                else {
	                    rect = rect || childRect.clone();
	                    rect.union(childRect);
	                }
	            }
	            return rect || tmpRect;
	        }
	    };
	
	    zrUtil.inherits(Group, Element);
	
	    module.exports = Group;


/***/ },
/* 553 */
/*!**********************************!*\
  !*** ./~/zrender/lib/Element.js ***!
  \**********************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	/**
	 * @module zrender/Element
	 */
	
	
	    var guid = __webpack_require__(/*! ./core/guid */ 554);
	    var Eventful = __webpack_require__(/*! ./mixin/Eventful */ 555);
	    var Transformable = __webpack_require__(/*! ./mixin/Transformable */ 556);
	    var Animatable = __webpack_require__(/*! ./mixin/Animatable */ 557);
	    var zrUtil = __webpack_require__(/*! ./core/util */ 526);
	
	    /**
	     * @alias module:zrender/Element
	     * @constructor
	     * @extends {module:zrender/mixin/Animatable}
	     * @extends {module:zrender/mixin/Transformable}
	     * @extends {module:zrender/mixin/Eventful}
	     */
	    var Element = function (opts) {
	
	        Transformable.call(this, opts);
	        Eventful.call(this, opts);
	        Animatable.call(this, opts);
	
	        /**
	         * 画布元素ID
	         * @type {string}
	         */
	        this.id = opts.id || guid();
	    };
	
	    Element.prototype = {
	
	        /**
	         * 元素类型
	         * Element type
	         * @type {string}
	         */
	        type: 'element',
	
	        /**
	         * 元素名字
	         * Element name
	         * @type {string}
	         */
	        name: '',
	
	        /**
	         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值
	         * ZRender instance will be assigned when element is associated with zrender
	         * @name module:/zrender/Element#__zr
	         * @type {module:zrender/ZRender}
	         */
	        __zr: null,
	
	        /**
	         * 图形是否忽略，为true时忽略图形的绘制以及事件触发
	         * If ignore drawing and events of the element object
	         * @name module:/zrender/Element#ignore
	         * @type {boolean}
	         * @default false
	         */
	        ignore: false,
	
	        /**
	         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪
	         * 该路径会继承被裁减对象的变换
	         * @type {module:zrender/graphic/Path}
	         * @see http://www.w3.org/TR/2dcontext/#clipping-region
	         * @readOnly
	         */
	        clipPath: null,
	
	        /**
	         * Drift element
	         * @param  {number} dx dx on the global space
	         * @param  {number} dy dy on the global space
	         */
	        drift: function (dx, dy) {
	            switch (this.draggable) {
	                case 'horizontal':
	                    dy = 0;
	                    break;
	                case 'vertical':
	                    dx = 0;
	                    break;
	            }
	
	            var m = this.transform;
	            if (!m) {
	                m = this.transform = [1, 0, 0, 1, 0, 0];
	            }
	            m[4] += dx;
	            m[5] += dy;
	
	            this.decomposeTransform();
	            this.dirty(false);
	        },
	
	        /**
	         * Hook before update
	         */
	        beforeUpdate: function () {},
	        /**
	         * Hook after update
	         */
	        afterUpdate: function () {},
	        /**
	         * Update each frame
	         */
	        update: function () {
	            this.updateTransform();
	        },
	
	        /**
	         * @param  {Function} cb
	         * @param  {}   context
	         */
	        traverse: function (cb, context) {},
	
	        /**
	         * @protected
	         */
	        attrKV: function (key, value) {
	            if (key === 'position' || key === 'scale' || key === 'origin') {
	                // Copy the array
	                if (value) {
	                    var target = this[key];
	                    if (!target) {
	                        target = this[key] = [];
	                    }
	                    target[0] = value[0];
	                    target[1] = value[1];
	                }
	            }
	            else {
	                this[key] = value;
	            }
	        },
	
	        /**
	         * Hide the element
	         */
	        hide: function () {
	            this.ignore = true;
	            this.__zr && this.__zr.refresh();
	        },
	
	        /**
	         * Show the element
	         */
	        show: function () {
	            this.ignore = false;
	            this.__zr && this.__zr.refresh();
	        },
	
	        /**
	         * @param {string|Object} key
	         * @param {*} value
	         */
	        attr: function (key, value) {
	            if (typeof key === 'string') {
	                this.attrKV(key, value);
	            }
	            else if (zrUtil.isObject(key)) {
	                for (var name in key) {
	                    if (key.hasOwnProperty(name)) {
	                        this.attrKV(name, key[name]);
	                    }
	                }
	            }
	
	            this.dirty(false);
	
	            return this;
	        },
	
	        /**
	         * @param {module:zrender/graphic/Path} clipPath
	         */
	        setClipPath: function (clipPath) {
	            var zr = this.__zr;
	            if (zr) {
	                clipPath.addSelfToZr(zr);
	            }
	
	            // Remove previous clip path
	            if (this.clipPath && this.clipPath !== clipPath) {
	                this.removeClipPath();
	            }
	
	            this.clipPath = clipPath;
	            clipPath.__zr = zr;
	            clipPath.__clipTarget = this;
	
	            this.dirty(false);
	        },
	
	        /**
	         */
	        removeClipPath: function () {
	            var clipPath = this.clipPath;
	            if (clipPath) {
	                if (clipPath.__zr) {
	                    clipPath.removeSelfFromZr(clipPath.__zr);
	                }
	
	                clipPath.__zr = null;
	                clipPath.__clipTarget = null;
	                this.clipPath = null;
	
	                this.dirty(false);
	            }
	        },
	
	        /**
	         * Add self from zrender instance.
	         * Not recursively because it will be invoked when element added to storage.
	         * @param {module:zrender/ZRender} zr
	         */
	        addSelfToZr: function (zr) {
	            this.__zr = zr;
	            // 添加动画
	            var animators = this.animators;
	            if (animators) {
	                for (var i = 0; i < animators.length; i++) {
	                    zr.animation.addAnimator(animators[i]);
	                }
	            }
	
	            if (this.clipPath) {
	                this.clipPath.addSelfToZr(zr);
	            }
	        },
	
	        /**
	         * Remove self from zrender instance.
	         * Not recursively because it will be invoked when element added to storage.
	         * @param {module:zrender/ZRender} zr
	         */
	        removeSelfFromZr: function (zr) {
	            this.__zr = null;
	            // 移除动画
	            var animators = this.animators;
	            if (animators) {
	                for (var i = 0; i < animators.length; i++) {
	                    zr.animation.removeAnimator(animators[i]);
	                }
	            }
	
	            if (this.clipPath) {
	                this.clipPath.removeSelfFromZr(zr);
	            }
	        }
	    };
	
	    zrUtil.mixin(Element, Animatable);
	    zrUtil.mixin(Element, Transformable);
	    zrUtil.mixin(Element, Eventful);
	
	    module.exports = Element;


/***/ },
/* 554 */
/*!************************************!*\
  !*** ./~/zrender/lib/core/guid.js ***!
  \************************************/
/***/ function(module, exports) {

	/**
	 * zrender: 生成唯一id
	 *
	 * @author errorrik (errorrik@gmail.com)
	 */
	
	
	    var idStart = 0x0907;
	
	    module.exports = function () {
	        return idStart++;
	    };
	


/***/ },
/* 555 */
/*!*****************************************!*\
  !*** ./~/zrender/lib/mixin/Eventful.js ***!
  \*****************************************/
/***/ function(module, exports) {

	/**
	 * 事件扩展
	 * @module zrender/mixin/Eventful
	 * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)
	 *         pissang (https://www.github.com/pissang)
	 */
	
	
	    var arrySlice = Array.prototype.slice;
	
	    /**
	     * 事件分发器
	     * @alias module:zrender/mixin/Eventful
	     * @constructor
	     */
	    var Eventful = function () {
	        this._$handlers = {};
	    };
	
	    Eventful.prototype = {
	
	        constructor: Eventful,
	
	        /**
	         * 单次触发绑定，trigger后销毁
	         *
	         * @param {string} event 事件名
	         * @param {Function} handler 响应函数
	         * @param {Object} context
	         */
	        one: function (event, handler, context) {
	            var _h = this._$handlers;
	
	            if (!handler || !event) {
	                return this;
	            }
	
	            if (!_h[event]) {
	                _h[event] = [];
	            }
	
	            for (var i = 0; i < _h[event].length; i++) {
	                if (_h[event][i].h === handler) {
	                    return this;
	                }
	            }
	
	            _h[event].push({
	                h: handler,
	                one: true,
	                ctx: context || this
	            });
	
	            return this;
	        },
	
	        /**
	         * 绑定事件
	         * @param {string} event 事件名
	         * @param {Function} handler 事件处理函数
	         * @param {Object} [context]
	         */
	        on: function (event, handler, context) {
	            var _h = this._$handlers;
	
	            if (!handler || !event) {
	                return this;
	            }
	
	            if (!_h[event]) {
	                _h[event] = [];
	            }
	
	            for (var i = 0; i < _h[event].length; i++) {
	                if (_h[event][i].h === handler) {
	                    return this;
	                }
	            }
	
	            _h[event].push({
	                h: handler,
	                one: false,
	                ctx: context || this
	            });
	
	            return this;
	        },
	
	        /**
	         * 是否绑定了事件
	         * @param  {string}  event
	         * @return {boolean}
	         */
	        isSilent: function (event) {
	            var _h = this._$handlers;
	            return _h[event] && _h[event].length;
	        },
	
	        /**
	         * 解绑事件
	         * @param {string} event 事件名
	         * @param {Function} [handler] 事件处理函数
	         */
	        off: function (event, handler) {
	            var _h = this._$handlers;
	
	            if (!event) {
	                this._$handlers = {};
	                return this;
	            }
	
	            if (handler) {
	                if (_h[event]) {
	                    var newList = [];
	                    for (var i = 0, l = _h[event].length; i < l; i++) {
	                        if (_h[event][i]['h'] != handler) {
	                            newList.push(_h[event][i]);
	                        }
	                    }
	                    _h[event] = newList;
	                }
	
	                if (_h[event] && _h[event].length === 0) {
	                    delete _h[event];
	                }
	            }
	            else {
	                delete _h[event];
	            }
	
	            return this;
	        },
	
	        /**
	         * 事件分发
	         *
	         * @param {string} type 事件类型
	         */
	        trigger: function (type) {
	            if (this._$handlers[type]) {
	                var args = arguments;
	                var argLen = args.length;
	
	                if (argLen > 3) {
	                    args = arrySlice.call(args, 1);
	                }
	
	                var _h = this._$handlers[type];
	                var len = _h.length;
	                for (var i = 0; i < len;) {
	                    // Optimize advise from backbone
	                    switch (argLen) {
	                        case 1:
	                            _h[i]['h'].call(_h[i]['ctx']);
	                            break;
	                        case 2:
	                            _h[i]['h'].call(_h[i]['ctx'], args[1]);
	                            break;
	                        case 3:
	                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);
	                            break;
	                        default:
	                            // have more than 2 given arguments
	                            _h[i]['h'].apply(_h[i]['ctx'], args);
	                            break;
	                    }
	
	                    if (_h[i]['one']) {
	                        _h.splice(i, 1);
	                        len--;
	                    }
	                    else {
	                        i++;
	                    }
	                }
	            }
	
	            return this;
	        },
	
	        /**
	         * 带有context的事件分发, 最后一个参数是事件回调的context
	         * @param {string} type 事件类型
	         */
	        triggerWithContext: function (type) {
	            if (this._$handlers[type]) {
	                var args = arguments;
	                var argLen = args.length;
	
	                if (argLen > 4) {
	                    args = arrySlice.call(args, 1, args.length - 1);
	                }
	                var ctx = args[args.length - 1];
	
	                var _h = this._$handlers[type];
	                var len = _h.length;
	                for (var i = 0; i < len;) {
	                    // Optimize advise from backbone
	                    switch (argLen) {
	                        case 1:
	                            _h[i]['h'].call(ctx);
	                            break;
	                        case 2:
	                            _h[i]['h'].call(ctx, args[1]);
	                            break;
	                        case 3:
	                            _h[i]['h'].call(ctx, args[1], args[2]);
	                            break;
	                        default:
	                            // have more than 2 given arguments
	                            _h[i]['h'].apply(ctx, args);
	                            break;
	                    }
	
	                    if (_h[i]['one']) {
	                        _h.splice(i, 1);
	                        len--;
	                    }
	                    else {
	                        i++;
	                    }
	                }
	            }
	
	            return this;
	        }
	    };
	
	    // 对象可以通过 onxxxx 绑定事件
	    /**
	     * @event module:zrender/mixin/Eventful#onclick
	     * @type {Function}
	     * @default null
	     */
	    /**
	     * @event module:zrender/mixin/Eventful#onmouseover
	     * @type {Function}
	     * @default null
	     */
	    /**
	     * @event module:zrender/mixin/Eventful#onmouseout
	     * @type {Function}
	     * @default null
	     */
	    /**
	     * @event module:zrender/mixin/Eventful#onmousemove
	     * @type {Function}
	     * @default null
	     */
	    /**
	     * @event module:zrender/mixin/Eventful#onmousewheel
	     * @type {Function}
	     * @default null
	     */
	    /**
	     * @event module:zrender/mixin/Eventful#onmousedown
	     * @type {Function}
	     * @default null
	     */
	    /**
	     * @event module:zrender/mixin/Eventful#onmouseup
	     * @type {Function}
	     * @default null
	     */
	    /**
	     * @event module:zrender/mixin/Eventful#ondragstart
	     * @type {Function}
	     * @default null
	     */
	    /**
	     * @event module:zrender/mixin/Eventful#ondragend
	     * @type {Function}
	     * @default null
	     */
	    /**
	     * @event module:zrender/mixin/Eventful#ondragenter
	     * @type {Function}
	     * @default null
	     */
	    /**
	     * @event module:zrender/mixin/Eventful#ondragleave
	     * @type {Function}
	     * @default null
	     */
	    /**
	     * @event module:zrender/mixin/Eventful#ondragover
	     * @type {Function}
	     * @default null
	     */
	    /**
	     * @event module:zrender/mixin/Eventful#ondrop
	     * @type {Function}
	     * @default null
	     */
	
	    module.exports = Eventful;
	


/***/ },
/* 556 */
/*!**********************************************!*\
  !*** ./~/zrender/lib/mixin/Transformable.js ***!
  \**********************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	/**
	 * 提供变换扩展
	 * @module zrender/mixin/Transformable
	 * @author pissang (https://www.github.com/pissang)
	 */
	
	
	    var matrix = __webpack_require__(/*! ../core/matrix */ 533);
	    var vector = __webpack_require__(/*! ../core/vector */ 532);
	    var mIdentity = matrix.identity;
	
	    var EPSILON = 5e-5;
	
	    function isNotAroundZero(val) {
	        return val > EPSILON || val < -EPSILON;
	    }
	
	    /**
	     * @alias module:zrender/mixin/Transformable
	     * @constructor
	     */
	    var Transformable = function (opts) {
	        opts = opts || {};
	        // If there are no given position, rotation, scale
	        if (!opts.position) {
	            /**
	             * 平移
	             * @type {Array.<number>}
	             * @default [0, 0]
	             */
	            this.position = [0, 0];
	        }
	        if (opts.rotation == null) {
	            /**
	             * 旋转
	             * @type {Array.<number>}
	             * @default 0
	             */
	            this.rotation = 0;
	        }
	        if (!opts.scale) {
	            /**
	             * 缩放
	             * @type {Array.<number>}
	             * @default [1, 1]
	             */
	            this.scale = [1, 1];
	        }
	        /**
	         * 旋转和缩放的原点
	         * @type {Array.<number>}
	         * @default null
	         */
	        this.origin = this.origin || null;
	    };
	
	    var transformableProto = Transformable.prototype;
	    transformableProto.transform = null;
	
	    /**
	     * 判断是否需要有坐标变换
	     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵
	     */
	    transformableProto.needLocalTransform = function () {
	        return isNotAroundZero(this.rotation)
	            || isNotAroundZero(this.position[0])
	            || isNotAroundZero(this.position[1])
	            || isNotAroundZero(this.scale[0] - 1)
	            || isNotAroundZero(this.scale[1] - 1);
	    };
	
	    transformableProto.updateTransform = function () {
	        var parent = this.parent;
	        var parentHasTransform = parent && parent.transform;
	        var needLocalTransform = this.needLocalTransform();
	
	        var m = this.transform;
	        if (!(needLocalTransform || parentHasTransform)) {
	            m && mIdentity(m);
	            return;
	        }
	
	        m = m || matrix.create();
	
	        if (needLocalTransform) {
	            this.getLocalTransform(m);
	        }
	        else {
	            mIdentity(m);
	        }
	
	        // 应用父节点变换
	        if (parentHasTransform) {
	            if (needLocalTransform) {
	                matrix.mul(m, parent.transform, m);
	            }
	            else {
	                matrix.copy(m, parent.transform);
	            }
	        }
	        // 保存这个变换矩阵
	        this.transform = m;
	
	        this.invTransform = this.invTransform || matrix.create();
	        matrix.invert(this.invTransform, m);
	    };
	
	    transformableProto.getLocalTransform = function (m) {
	        m = m || [];
	        mIdentity(m);
	
	        var origin = this.origin;
	
	        var scale = this.scale;
	        var rotation = this.rotation;
	        var position = this.position;
	        if (origin) {
	            // Translate to origin
	            m[4] -= origin[0];
	            m[5] -= origin[1];
	        }
	        matrix.scale(m, m, scale);
	        if (rotation) {
	            matrix.rotate(m, m, rotation);
	        }
	        if (origin) {
	            // Translate back from origin
	            m[4] += origin[0];
	            m[5] += origin[1];
	        }
	
	        m[4] += position[0];
	        m[5] += position[1];
	
	        return m;
	    };
	    /**
	     * 将自己的transform应用到context上
	     * @param {Context2D} ctx
	     */
	    transformableProto.setTransform = function (ctx) {
	        var m = this.transform;
	        if (m) {
	            ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);
	        }
	    };
	
	    transformableProto.restoreTransform = function (ctx) {
	        var m = this.invTransform;
	        if (m) {
	            ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);
	        }
	    }
	
	    var tmpTransform = [];
	
	    /**
	     * 分解`transform`矩阵到`position`, `rotation`, `scale`
	     */
	    transformableProto.decomposeTransform = function () {
	        if (!this.transform) {
	            return;
	        }
	        var parent = this.parent;
	        var m = this.transform;
	        if (parent && parent.transform) {
	            // Get local transform and decompose them to position, scale, rotation
	            matrix.mul(tmpTransform, parent.invTransform, m);
	            m = tmpTransform;
	        }
	        var sx = m[0] * m[0] + m[1] * m[1];
	        var sy = m[2] * m[2] + m[3] * m[3];
	        var position = this.position;
	        var scale = this.scale;
	        if (isNotAroundZero(sx - 1)) {
	            sx = Math.sqrt(sx);
	        }
	        if (isNotAroundZero(sy - 1)) {
	            sy = Math.sqrt(sy);
	        }
	        if (m[0] < 0) {
	            sx = -sx;
	        }
	        if (m[3] < 0) {
	            sy = -sy;
	        }
	        position[0] = m[4];
	        position[1] = m[5];
	        scale[0] = sx;
	        scale[1] = sy;
	        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);
	    };
	
	    /**
	     * Get global scale
	     * @return {Array.<number>}
	     */
	    transformableProto.getGlobalScale = function () {
	        var m = this.transform;
	        if (!m) {
	            return [1, 1];
	        }
	        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);
	        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);
	        if (m[0] < 0) {
	            sx = -sx;
	        }
	        if (m[3] < 0) {
	            sy = -sy;
	        }
	        return [sx, sy];
	    };
	    /**
	     * 变换坐标位置到 shape 的局部坐标空间
	     * @method
	     * @param {number} x
	     * @param {number} y
	     * @return {Array.<number>}
	     */
	    transformableProto.transformCoordToLocal = function (x, y) {
	        var v2 = [x, y];
	        var invTransform = this.invTransform;
	        if (invTransform) {
	            vector.applyTransform(v2, v2, invTransform);
	        }
	        return v2;
	    };
	
	    /**
	     * 变换局部坐标位置到全局坐标空间
	     * @method
	     * @param {number} x
	     * @param {number} y
	     * @return {Array.<number>}
	     */
	    transformableProto.transformCoordToGlobal = function (x, y) {
	        var v2 = [x, y];
	        var transform = this.transform;
	        if (transform) {
	            vector.applyTransform(v2, v2, transform);
	        }
	        return v2;
	    };
	
	    module.exports = Transformable;
	


/***/ },
/* 557 */
/*!*******************************************!*\
  !*** ./~/zrender/lib/mixin/Animatable.js ***!
  \*******************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	/**
	 * @module zrender/mixin/Animatable
	 */
	
	
	    var Animator = __webpack_require__(/*! ../animation/Animator */ 558);
	    var util = __webpack_require__(/*! ../core/util */ 526);
	    var isString = util.isString;
	    var isFunction = util.isFunction;
	    var isObject = util.isObject;
	    var log = __webpack_require__(/*! ../core/log */ 562);
	
	    /**
	     * @alias modue:zrender/mixin/Animatable
	     * @constructor
	     */
	    var Animatable = function () {
	
	        /**
	         * @type {Array.<module:zrender/animation/Animator>}
	         * @readOnly
	         */
	        this.animators = [];
	    };
	
	    Animatable.prototype = {
	
	        constructor: Animatable,
	
	        /**
	         * 动画
	         *
	         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性
	         * @param {boolean} [loop] 动画是否循环
	         * @return {module:zrender/animation/Animator}
	         * @example:
	         *     el.animate('style', false)
	         *         .when(1000, {x: 10} )
	         *         .done(function(){ // Animation done })
	         *         .start()
	         */
	        animate: function (path, loop) {
	            var target;
	            var animatingShape = false;
	            var el = this;
	            var zr = this.__zr;
	            if (path) {
	                var pathSplitted = path.split('.');
	                var prop = el;
	                // If animating shape
	                animatingShape = pathSplitted[0] === 'shape';
	                for (var i = 0, l = pathSplitted.length; i < l; i++) {
	                    if (!prop) {
	                        continue;
	                    }
	                    prop = prop[pathSplitted[i]];
	                }
	                if (prop) {
	                    target = prop;
	                }
	            }
	            else {
	                target = el;
	            }
	
	            if (!target) {
	                log(
	                    'Property "'
	                    + path
	                    + '" is not existed in element '
	                    + el.id
	                );
	                return;
	            }
	
	            var animators = el.animators;
	
	            var animator = new Animator(target, loop);
	
	            animator.during(function (target) {
	                el.dirty(animatingShape);
	            })
	            .done(function () {
	                // FIXME Animator will not be removed if use `Animator#stop` to stop animation
	                animators.splice(util.indexOf(animators, animator), 1);
	            });
	
	            animators.push(animator);
	
	            // If animate after added to the zrender
	            if (zr) {
	                zr.animation.addAnimator(animator);
	            }
	
	            return animator;
	        },
	
	        /**
	         * 停止动画
	         * @param {boolean} forwardToLast If move to last frame before stop
	         */
	        stopAnimation: function (forwardToLast) {
	            var animators = this.animators;
	            var len = animators.length;
	            for (var i = 0; i < len; i++) {
	                animators[i].stop(forwardToLast);
	            }
	            animators.length = 0;
	
	            return this;
	        },
	
	        /**
	         * @param {Object} target
	         * @param {number} [time=500] Time in ms
	         * @param {string} [easing='linear']
	         * @param {number} [delay=0]
	         * @param {Function} [callback]
	         *
	         * @example
	         *  // Animate position
	         *  el.animateTo({
	         *      position: [10, 10]
	         *  }, function () { // done })
	         *
	         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing
	         *  el.animateTo({
	         *      shape: {
	         *          width: 500
	         *      },
	         *      style: {
	         *          fill: 'red'
	         *      }
	         *      position: [10, 10]
	         *  }, 100, 100, 'cubicOut', function () { // done })
	         */
	         // TODO Return animation key
	        animateTo: function (target, time, delay, easing, callback) {
	            // animateTo(target, time, easing, callback);
	            if (isString(delay)) {
	                callback = easing;
	                easing = delay;
	                delay = 0;
	            }
	            // animateTo(target, time, delay, callback);
	            else if (isFunction(easing)) {
	                callback = easing;
	                easing = 'linear';
	                delay = 0;
	            }
	            // animateTo(target, time, callback);
	            else if (isFunction(delay)) {
	                callback = delay;
	                delay = 0;
	            }
	            // animateTo(target, callback)
	            else if (isFunction(time)) {
	                callback = time;
	                time = 500;
	            }
	            // animateTo(target)
	            else if (!time) {
	                time = 500;
	            }
	            // Stop all previous animations
	            this.stopAnimation();
	            this._animateToShallow('', this, target, time, delay, easing, callback);
	
	            // Animators may be removed immediately after start
	            // if there is nothing to animate
	            var animators = this.animators.slice();
	            var count = animators.length;
	            function done() {
	                count--;
	                if (!count) {
	                    callback && callback();
	                }
	            }
	
	            // No animators. This should be checked before animators[i].start(),
	            // because 'done' may be executed immediately if no need to animate.
	            if (!count) {
	                callback && callback();
	            }
	            // Start after all animators created
	            // Incase any animator is done immediately when all animation properties are not changed
	            for (var i = 0; i < animators.length; i++) {
	                animators[i]
	                    .done(done)
	                    .start(easing);
	            }
	        },
	
	        /**
	         * @private
	         * @param {string} path=''
	         * @param {Object} source=this
	         * @param {Object} target
	         * @param {number} [time=500]
	         * @param {number} [delay=0]
	         *
	         * @example
	         *  // Animate position
	         *  el._animateToShallow({
	         *      position: [10, 10]
	         *  })
	         *
	         *  // Animate shape, style and position in 100ms, delayed 100ms
	         *  el._animateToShallow({
	         *      shape: {
	         *          width: 500
	         *      },
	         *      style: {
	         *          fill: 'red'
	         *      }
	         *      position: [10, 10]
	         *  }, 100, 100)
	         */
	        _animateToShallow: function (path, source, target, time, delay) {
	            var objShallow = {};
	            var propertyCount = 0;
	            for (var name in target) {
	                if (source[name] != null) {
	                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {
	                        this._animateToShallow(
	                            path ? path + '.' + name : name,
	                            source[name],
	                            target[name],
	                            time,
	                            delay
	                        );
	                    }
	                    else {
	                        objShallow[name] = target[name];
	                        propertyCount++;
	                    }
	                }
	                else if (target[name] != null) {
	                    // Attr directly if not has property
	                    // FIXME, if some property not needed for element ?
	                    if (!path) {
	                        this.attr(name, target[name]);
	                    }
	                    else {  // Shape or style
	                        var props = {};
	                        props[path] = {};
	                        props[path][name] = target[name];
	                        this.attr(props);
	                    }
	                }
	            }
	
	            if (propertyCount > 0) {
	                this.animate(path, false)
	                    .when(time == null ? 500 : time, objShallow)
	                    .delay(delay || 0);
	            }
	
	            return this;
	        }
	    };
	
	    module.exports = Animatable;


/***/ },
/* 558 */
/*!*********************************************!*\
  !*** ./~/zrender/lib/animation/Animator.js ***!
  \*********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * @module echarts/animation/Animator
	 */
	
	
	    var Clip = __webpack_require__(/*! ./Clip */ 559);
	    var color = __webpack_require__(/*! ../tool/color */ 561);
	    var util = __webpack_require__(/*! ../core/util */ 526);
	    var isArrayLike = util.isArrayLike;
	
	    var arraySlice = Array.prototype.slice;
	
	    function defaultGetter(target, key) {
	        return target[key];
	    }
	
	    function defaultSetter(target, key, value) {
	        target[key] = value;
	    }
	
	    /**
	     * @param  {number} p0
	     * @param  {number} p1
	     * @param  {number} percent
	     * @return {number}
	     */
	    function interpolateNumber(p0, p1, percent) {
	        return (p1 - p0) * percent + p0;
	    }
	
	    /**
	     * @param  {string} p0
	     * @param  {string} p1
	     * @param  {number} percent
	     * @return {string}
	     */
	    function interpolateString(p0, p1, percent) {
	        return percent > 0.5 ? p1 : p0;
	    }
	
	    /**
	     * @param  {Array} p0
	     * @param  {Array} p1
	     * @param  {number} percent
	     * @param  {Array} out
	     * @param  {number} arrDim
	     */
	    function interpolateArray(p0, p1, percent, out, arrDim) {
	        var len = p0.length;
	        if (arrDim == 1) {
	            for (var i = 0; i < len; i++) {
	                out[i] = interpolateNumber(p0[i], p1[i], percent);
	            }
	        }
	        else {
	            var len2 = p0[0].length;
	            for (var i = 0; i < len; i++) {
	                for (var j = 0; j < len2; j++) {
	                    out[i][j] = interpolateNumber(
	                        p0[i][j], p1[i][j], percent
	                    );
	                }
	            }
	        }
	    }
	
	    // arr0 is source array, arr1 is target array.
	    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1
	    function fillArr(arr0, arr1, arrDim) {
	        var arr0Len = arr0.length;
	        var arr1Len = arr1.length;
	        if (arr0Len !== arr1Len) {
	            // FIXME Not work for TypedArray
	            var isPreviousLarger = arr0Len > arr1Len;
	            if (isPreviousLarger) {
	                // Cut the previous
	                arr0.length = arr1Len;
	            }
	            else {
	                // Fill the previous
	                for (var i = arr0Len; i < arr1Len; i++) {
	                    arr0.push(
	                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])
	                    );
	                }
	            }
	        }
	        // Handling NaN value
	        var len2 = arr0[0] && arr0[0].length;
	        for (var i = 0; i < arr0.length; i++) {
	            if (arrDim === 1) {
	                if (isNaN(arr0[i])) {
	                    arr0[i] = arr1[i];
	                }
	            }
	            else {
	                for (var j = 0; j < len2; j++) {
	                    if (isNaN(arr0[i][j])) {
	                        arr0[i][j] = arr1[i][j];
	                    }
	                }
	            }
	        }
	    }
	
	    /**
	     * @param  {Array} arr0
	     * @param  {Array} arr1
	     * @param  {number} arrDim
	     * @return {boolean}
	     */
	    function isArraySame(arr0, arr1, arrDim) {
	        if (arr0 === arr1) {
	            return true;
	        }
	        var len = arr0.length;
	        if (len !== arr1.length) {
	            return false;
	        }
	        if (arrDim === 1) {
	            for (var i = 0; i < len; i++) {
	                if (arr0[i] !== arr1[i]) {
	                    return false;
	                }
	            }
	        }
	        else {
	            var len2 = arr0[0].length;
	            for (var i = 0; i < len; i++) {
	                for (var j = 0; j < len2; j++) {
	                    if (arr0[i][j] !== arr1[i][j]) {
	                        return false;
	                    }
	                }
	            }
	        }
	        return true;
	    }
	
	    /**
	     * Catmull Rom interpolate array
	     * @param  {Array} p0
	     * @param  {Array} p1
	     * @param  {Array} p2
	     * @param  {Array} p3
	     * @param  {number} t
	     * @param  {number} t2
	     * @param  {number} t3
	     * @param  {Array} out
	     * @param  {number} arrDim
	     */
	    function catmullRomInterpolateArray(
	        p0, p1, p2, p3, t, t2, t3, out, arrDim
	    ) {
	        var len = p0.length;
	        if (arrDim == 1) {
	            for (var i = 0; i < len; i++) {
	                out[i] = catmullRomInterpolate(
	                    p0[i], p1[i], p2[i], p3[i], t, t2, t3
	                );
	            }
	        }
	        else {
	            var len2 = p0[0].length;
	            for (var i = 0; i < len; i++) {
	                for (var j = 0; j < len2; j++) {
	                    out[i][j] = catmullRomInterpolate(
	                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],
	                        t, t2, t3
	                    );
	                }
	            }
	        }
	    }
	
	    /**
	     * Catmull Rom interpolate number
	     * @param  {number} p0
	     * @param  {number} p1
	     * @param  {number} p2
	     * @param  {number} p3
	     * @param  {number} t
	     * @param  {number} t2
	     * @param  {number} t3
	     * @return {number}
	     */
	    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {
	        var v0 = (p2 - p0) * 0.5;
	        var v1 = (p3 - p1) * 0.5;
	        return (2 * (p1 - p2) + v0 + v1) * t3
	                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2
	                + v0 * t + p1;
	    }
	
	    function cloneValue(value) {
	        if (isArrayLike(value)) {
	            var len = value.length;
	            if (isArrayLike(value[0])) {
	                var ret = [];
	                for (var i = 0; i < len; i++) {
	                    ret.push(arraySlice.call(value[i]));
	                }
	                return ret;
	            }
	
	            return arraySlice.call(value);
	        }
	
	        return value;
	    }
	
	    function rgba2String(rgba) {
	        rgba[0] = Math.floor(rgba[0]);
	        rgba[1] = Math.floor(rgba[1]);
	        rgba[2] = Math.floor(rgba[2]);
	
	        return 'rgba(' + rgba.join(',') + ')';
	    }
	
	    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {
	        var getter = animator._getter;
	        var setter = animator._setter;
	        var useSpline = easing === 'spline';
	
	        var trackLen = keyframes.length;
	        if (!trackLen) {
	            return;
	        }
	        // Guess data type
	        var firstVal = keyframes[0].value;
	        var isValueArray = isArrayLike(firstVal);
	        var isValueColor = false;
	        var isValueString = false;
	
	        // For vertices morphing
	        var arrDim = (
	                isValueArray
	                && isArrayLike(firstVal[0])
	            )
	            ? 2 : 1;
	        var trackMaxTime;
	        // Sort keyframe as ascending
	        keyframes.sort(function(a, b) {
	            return a.time - b.time;
	        });
	
	        trackMaxTime = keyframes[trackLen - 1].time;
	        // Percents of each keyframe
	        var kfPercents = [];
	        // Value of each keyframe
	        var kfValues = [];
	        var prevValue = keyframes[0].value;
	        var isAllValueEqual = true;
	        for (var i = 0; i < trackLen; i++) {
	            kfPercents.push(keyframes[i].time / trackMaxTime);
	            // Assume value is a color when it is a string
	            var value = keyframes[i].value;
	
	            // Check if value is equal, deep check if value is array
	            if (!((isValueArray && isArraySame(value, prevValue, arrDim))
	                || (!isValueArray && value === prevValue))) {
	                isAllValueEqual = false;
	            }
	            prevValue = value;
	
	            // Try converting a string to a color array
	            if (typeof value == 'string') {
	                var colorArray = color.parse(value);
	                if (colorArray) {
	                    value = colorArray;
	                    isValueColor = true;
	                }
	                else {
	                    isValueString = true;
	                }
	            }
	            kfValues.push(value);
	        }
	        if (isAllValueEqual) {
	            return;
	        }
	
	        var lastValue = kfValues[trackLen - 1];
	        // Polyfill array and NaN value
	        for (var i = 0; i < trackLen - 1; i++) {
	            if (isValueArray) {
	                fillArr(kfValues[i], lastValue, arrDim);
	            }
	            else {
	                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {
	                    kfValues[i] = lastValue;
	                }
	            }
	        }
	        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);
	
	        // Cache the key of last frame to speed up when
	        // animation playback is sequency
	        var lastFrame = 0;
	        var lastFramePercent = 0;
	        var start;
	        var w;
	        var p0;
	        var p1;
	        var p2;
	        var p3;
	
	        if (isValueColor) {
	            var rgba = [0, 0, 0, 0];
	        }
	
	        var onframe = function (target, percent) {
	            // Find the range keyframes
	            // kf1-----kf2---------current--------kf3
	            // find kf2 and kf3 and do interpolation
	            var frame;
	            if (percent < lastFramePercent) {
	                // Start from next key
	                // PENDING start from lastFrame ?
	                start = Math.min(lastFrame + 1, trackLen - 1);
	                for (frame = start; frame >= 0; frame--) {
	                    if (kfPercents[frame] <= percent) {
	                        break;
	                    }
	                }
	                // PENDING really need to do this ?
	                frame = Math.min(frame, trackLen - 2);
	            }
	            else {
	                for (frame = lastFrame; frame < trackLen; frame++) {
	                    if (kfPercents[frame] > percent) {
	                        break;
	                    }
	                }
	                frame = Math.min(frame - 1, trackLen - 2);
	            }
	            lastFrame = frame;
	            lastFramePercent = percent;
	
	            var range = (kfPercents[frame + 1] - kfPercents[frame]);
	            if (range === 0) {
	                return;
	            }
	            else {
	                w = (percent - kfPercents[frame]) / range;
	            }
	            if (useSpline) {
	                p1 = kfValues[frame];
	                p0 = kfValues[frame === 0 ? frame : frame - 1];
	                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];
	                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];
	                if (isValueArray) {
	                    catmullRomInterpolateArray(
	                        p0, p1, p2, p3, w, w * w, w * w * w,
	                        getter(target, propName),
	                        arrDim
	                    );
	                }
	                else {
	                    var value;
	                    if (isValueColor) {
	                        value = catmullRomInterpolateArray(
	                            p0, p1, p2, p3, w, w * w, w * w * w,
	                            rgba, 1
	                        );
	                        value = rgba2String(rgba);
	                    }
	                    else if (isValueString) {
	                        // String is step(0.5)
	                        return interpolateString(p1, p2, w);
	                    }
	                    else {
	                        value = catmullRomInterpolate(
	                            p0, p1, p2, p3, w, w * w, w * w * w
	                        );
	                    }
	                    setter(
	                        target,
	                        propName,
	                        value
	                    );
	                }
	            }
	            else {
	                if (isValueArray) {
	                    interpolateArray(
	                        kfValues[frame], kfValues[frame + 1], w,
	                        getter(target, propName),
	                        arrDim
	                    );
	                }
	                else {
	                    var value;
	                    if (isValueColor) {
	                        interpolateArray(
	                            kfValues[frame], kfValues[frame + 1], w,
	                            rgba, 1
	                        );
	                        value = rgba2String(rgba);
	                    }
	                    else if (isValueString) {
	                        // String is step(0.5)
	                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);
	                    }
	                    else {
	                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);
	                    }
	                    setter(
	                        target,
	                        propName,
	                        value
	                    );
	                }
	            }
	        };
	
	        var clip = new Clip({
	            target: animator._target,
	            life: trackMaxTime,
	            loop: animator._loop,
	            delay: animator._delay,
	            onframe: onframe,
	            ondestroy: oneTrackDone
	        });
	
	        if (easing && easing !== 'spline') {
	            clip.easing = easing;
	        }
	
	        return clip;
	    }
	
	    /**
	     * @alias module:zrender/animation/Animator
	     * @constructor
	     * @param {Object} target
	     * @param {boolean} loop
	     * @param {Function} getter
	     * @param {Function} setter
	     */
	    var Animator = function(target, loop, getter, setter) {
	        this._tracks = {};
	        this._target = target;
	
	        this._loop = loop || false;
	
	        this._getter = getter || defaultGetter;
	        this._setter = setter || defaultSetter;
	
	        this._clipCount = 0;
	
	        this._delay = 0;
	
	        this._doneList = [];
	
	        this._onframeList = [];
	
	        this._clipList = [];
	    };
	
	    Animator.prototype = {
	        /**
	         * 设置动画关键帧
	         * @param  {number} time 关键帧时间，单位是ms
	         * @param  {Object} props 关键帧的属性值，key-value表示
	         * @return {module:zrender/animation/Animator}
	         */
	        when: function(time /* ms */, props) {
	            var tracks = this._tracks;
	            for (var propName in props) {
	                if (!tracks[propName]) {
	                    tracks[propName] = [];
	                    // Invalid value
	                    var value = this._getter(this._target, propName);
	                    if (value == null) {
	                        // zrLog('Invalid property ' + propName);
	                        continue;
	                    }
	                    // If time is 0
	                    //  Then props is given initialize value
	                    // Else
	                    //  Initialize value from current prop value
	                    if (time !== 0) {
	                        tracks[propName].push({
	                            time: 0,
	                            value: cloneValue(value)
	                        });
	                    }
	                }
	                tracks[propName].push({
	                    time: time,
	                    value: props[propName]
	                });
	            }
	            return this;
	        },
	        /**
	         * 添加动画每一帧的回调函数
	         * @param  {Function} callback
	         * @return {module:zrender/animation/Animator}
	         */
	        during: function (callback) {
	            this._onframeList.push(callback);
	            return this;
	        },
	
	        _doneCallback: function () {
	            // Clear all tracks
	            this._tracks = {};
	            // Clear all clips
	            this._clipList.length = 0;
	
	            var doneList = this._doneList;
	            var len = doneList.length;
	            for (var i = 0; i < len; i++) {
	                doneList[i].call(this);
	            }
	        },
	        /**
	         * 开始执行动画
	         * @param  {string|Function} easing
	         *         动画缓动函数，详见{@link module:zrender/animation/easing}
	         * @return {module:zrender/animation/Animator}
	         */
	        start: function (easing) {
	
	            var self = this;
	            var clipCount = 0;
	
	            var oneTrackDone = function() {
	                clipCount--;
	                if (!clipCount) {
	                    self._doneCallback();
	                }
	            };
	
	            var lastClip;
	            for (var propName in this._tracks) {
	                var clip = createTrackClip(
	                    this, easing, oneTrackDone,
	                    this._tracks[propName], propName
	                );
	                if (clip) {
	                    this._clipList.push(clip);
	                    clipCount++;
	
	                    // If start after added to animation
	                    if (this.animation) {
	                        this.animation.addClip(clip);
	                    }
	
	                    lastClip = clip;
	                }
	            }
	
	            // Add during callback on the last clip
	            if (lastClip) {
	                var oldOnFrame = lastClip.onframe;
	                lastClip.onframe = function (target, percent) {
	                    oldOnFrame(target, percent);
	
	                    for (var i = 0; i < self._onframeList.length; i++) {
	                        self._onframeList[i](target, percent);
	                    }
	                };
	            }
	
	            if (!clipCount) {
	                this._doneCallback();
	            }
	            return this;
	        },
	        /**
	         * 停止动画
	         * @param {boolean} forwardToLast If move to last frame before stop
	         */
	        stop: function (forwardToLast) {
	            var clipList = this._clipList;
	            var animation = this.animation;
	            for (var i = 0; i < clipList.length; i++) {
	                var clip = clipList[i];
	                if (forwardToLast) {
	                    // Move to last frame before stop
	                    clip.onframe(this._target, 1);
	                }
	                animation && animation.removeClip(clip);
	            }
	            clipList.length = 0;
	        },
	        /**
	         * 设置动画延迟开始的时间
	         * @param  {number} time 单位ms
	         * @return {module:zrender/animation/Animator}
	         */
	        delay: function (time) {
	            this._delay = time;
	            return this;
	        },
	        /**
	         * 添加动画结束的回调
	         * @param  {Function} cb
	         * @return {module:zrender/animation/Animator}
	         */
	        done: function(cb) {
	            if (cb) {
	                this._doneList.push(cb);
	            }
	            return this;
	        },
	
	        /**
	         * @return {Array.<module:zrender/animation/Clip>}
	         */
	        getClips: function () {
	            return this._clipList;
	        }
	    };
	
	    module.exports = Animator;


/***/ },
/* 559 */
/*!*****************************************!*\
  !*** ./~/zrender/lib/animation/Clip.js ***!
  \*****************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * 动画主控制器
	 * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件
	 * @config life(1000) 动画时长
	 * @config delay(0) 动画延迟时间
	 * @config loop(true)
	 * @config gap(0) 循环的间隔时间
	 * @config onframe
	 * @config easing(optional)
	 * @config ondestroy(optional)
	 * @config onrestart(optional)
	 *
	 * TODO pause
	 */
	
	
	    var easingFuncs = __webpack_require__(/*! ./easing */ 560);
	
	    function Clip(options) {
	
	        this._target = options.target;
	
	        // 生命周期
	        this._life = options.life || 1000;
	        // 延时
	        this._delay = options.delay || 0;
	        // 开始时间
	        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒
	        this._initialized = false;
	
	        // 是否循环
	        this.loop = options.loop == null ? false : options.loop;
	
	        this.gap = options.gap || 0;
	
	        this.easing = options.easing || 'Linear';
	
	        this.onframe = options.onframe;
	        this.ondestroy = options.ondestroy;
	        this.onrestart = options.onrestart;
	    }
	
	    Clip.prototype = {
	
	        constructor: Clip,
	
	        step: function (time) {
	            // Set startTime on first step, or _startTime may has milleseconds different between clips
	            // PENDING
	            if (!this._initialized) {
	                this._startTime = new Date().getTime() + this._delay;
	                this._initialized = true;
	            }
	
	            var percent = (time - this._startTime) / this._life;
	
	            // 还没开始
	            if (percent < 0) {
	                return;
	            }
	
	            percent = Math.min(percent, 1);
	
	            var easing = this.easing;
	            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;
	            var schedule = typeof easingFunc === 'function'
	                ? easingFunc(percent)
	                : percent;
	
	            this.fire('frame', schedule);
	
	            // 结束
	            if (percent == 1) {
	                if (this.loop) {
	                    this.restart();
	                    // 重新开始周期
	                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件
	                    return 'restart';
	                }
	
	                // 动画完成将这个控制器标识为待删除
	                // 在Animation.update中进行批量删除
	                this._needsRemove = true;
	                return 'destroy';
	            }
	
	            return null;
	        },
	
	        restart: function() {
	            var time = new Date().getTime();
	            var remainder = (time - this._startTime) % this._life;
	            this._startTime = new Date().getTime() - remainder + this.gap;
	
	            this._needsRemove = false;
	        },
	
	        fire: function(eventType, arg) {
	            eventType = 'on' + eventType;
	            if (this[eventType]) {
	                this[eventType](this._target, arg);
	            }
	        }
	    };
	
	    module.exports = Clip;
	


/***/ },
/* 560 */
/*!*******************************************!*\
  !*** ./~/zrender/lib/animation/easing.js ***!
  \*******************************************/
/***/ function(module, exports) {

	/**
	 * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js
	 * @see http://sole.github.io/tween.js/examples/03_graphs.html
	 * @exports zrender/animation/easing
	 */
	
	    var easing = {
	        /**
	        * @param {number} k
	        * @return {number}
	        */
	        linear: function (k) {
	            return k;
	        },
	
	        /**
	        * @param {number} k
	        * @return {number}
	        */
	        quadraticIn: function (k) {
	            return k * k;
	        },
	        /**
	        * @param {number} k
	        * @return {number}
	        */
	        quadraticOut: function (k) {
	            return k * (2 - k);
	        },
	        /**
	        * @param {number} k
	        * @return {number}
	        */
	        quadraticInOut: function (k) {
	            if ((k *= 2) < 1) {
	                return 0.5 * k * k;
	            }
	            return -0.5 * (--k * (k - 2) - 1);
	        },
	
	        // 三次方的缓动（t^3）
	        /**
	        * @param {number} k
	        * @return {number}
	        */
	        cubicIn: function (k) {
	            return k * k * k;
	        },
	        /**
	        * @param {number} k
	        * @return {number}
	        */
	        cubicOut: function (k) {
	            return --k * k * k + 1;
	        },
	        /**
	        * @param {number} k
	        * @return {number}
	        */
	        cubicInOut: function (k) {
	            if ((k *= 2) < 1) {
	                return 0.5 * k * k * k;
	            }
	            return 0.5 * ((k -= 2) * k * k + 2);
	        },
	
	        // 四次方的缓动（t^4）
	        /**
	        * @param {number} k
	        * @return {number}
	        */
	        quarticIn: function (k) {
	            return k * k * k * k;
	        },
	        /**
	        * @param {number} k
	        * @return {number}
	        */
	        quarticOut: function (k) {
	            return 1 - (--k * k * k * k);
	        },
	        /**
	        * @param {number} k
	        * @return {number}
	        */
	        quarticInOut: function (k) {
	            if ((k *= 2) < 1) {
	                return 0.5 * k * k * k * k;
	            }
	            return -0.5 * ((k -= 2) * k * k * k - 2);
	        },
	
	        // 五次方的缓动（t^5）
	        /**
	        * @param {number} k
	        * @return {number}
	        */
	        quinticIn: function (k) {
	            return k * k * k * k * k;
	        },
	        /**
	        * @param {number} k
	        * @return {number}
	        */
	        quinticOut: function (k) {
	            return --k * k * k * k * k + 1;
	        },
	        /**
	        * @param {number} k
	        * @return {number}
	        */
	        quinticInOut: function (k) {
	            if ((k *= 2) < 1) {
	                return 0.5 * k * k * k * k * k;
	            }
	            return 0.5 * ((k -= 2) * k * k * k * k + 2);
	        },
	
	        // 正弦曲线的缓动（sin(t)）
	        /**
	        * @param {number} k
	        * @return {number}
	        */
	        sinusoidalIn: function (k) {
	            return 1 - Math.cos(k * Math.PI / 2);
	        },
	        /**
	        * @param {number} k
	        * @return {number}
	        */
	        sinusoidalOut: function (k) {
	            return Math.sin(k * Math.PI / 2);
	        },
	        /**
	        * @param {number} k
	        * @return {number}
	        */
	        sinusoidalInOut: function (k) {
	            return 0.5 * (1 - Math.cos(Math.PI * k));
	        },
	
	        // 指数曲线的缓动（2^t）
	        /**
	        * @param {number} k
	        * @return {number}
	        */
	        exponentialIn: function (k) {
	            return k === 0 ? 0 : Math.pow(1024, k - 1);
	        },
	        /**
	        * @param {number} k
	        * @return {number}
	        */
	        exponentialOut: function (k) {
	            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);
	        },
	        /**
	        * @param {number} k
	        * @return {number}
	        */
	        exponentialInOut: function (k) {
	            if (k === 0) {
	                return 0;
	            }
	            if (k === 1) {
	                return 1;
	            }
	            if ((k *= 2) < 1) {
	                return 0.5 * Math.pow(1024, k - 1);
	            }
	            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);
	        },
	
	        // 圆形曲线的缓动（sqrt(1-t^2)）
	        /**
	        * @param {number} k
	        * @return {number}
	        */
	        circularIn: function (k) {
	            return 1 - Math.sqrt(1 - k * k);
	        },
	        /**
	        * @param {number} k
	        * @return {number}
	        */
	        circularOut: function (k) {
	            return Math.sqrt(1 - (--k * k));
	        },
	        /**
	        * @param {number} k
	        * @return {number}
	        */
	        circularInOut: function (k) {
	            if ((k *= 2) < 1) {
	                return -0.5 * (Math.sqrt(1 - k * k) - 1);
	            }
	            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);
	        },
	
	        // 创建类似于弹簧在停止前来回振荡的动画
	        /**
	        * @param {number} k
	        * @return {number}
	        */
	        elasticIn: function (k) {
	            var s;
	            var a = 0.1;
	            var p = 0.4;
	            if (k === 0) {
	                return 0;
	            }
	            if (k === 1) {
	                return 1;
	            }
	            if (!a || a < 1) {
	                a = 1; s = p / 4;
	            }
	            else {
	                s = p * Math.asin(1 / a) / (2 * Math.PI);
	            }
	            return -(a * Math.pow(2, 10 * (k -= 1)) *
	                        Math.sin((k - s) * (2 * Math.PI) / p));
	        },
	        /**
	        * @param {number} k
	        * @return {number}
	        */
	        elasticOut: function (k) {
	            var s;
	            var a = 0.1;
	            var p = 0.4;
	            if (k === 0) {
	                return 0;
	            }
	            if (k === 1) {
	                return 1;
	            }
	            if (!a || a < 1) {
	                a = 1; s = p / 4;
	            }
	            else {
	                s = p * Math.asin(1 / a) / (2 * Math.PI);
	            }
	            return (a * Math.pow(2, -10 * k) *
	                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);
	        },
	        /**
	        * @param {number} k
	        * @return {number}
	        */
	        elasticInOut: function (k) {
	            var s;
	            var a = 0.1;
	            var p = 0.4;
	            if (k === 0) {
	                return 0;
	            }
	            if (k === 1) {
	                return 1;
	            }
	            if (!a || a < 1) {
	                a = 1; s = p / 4;
	            }
	            else {
	                s = p * Math.asin(1 / a) / (2 * Math.PI);
	            }
	            if ((k *= 2) < 1) {
	                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))
	                    * Math.sin((k - s) * (2 * Math.PI) / p));
	            }
	            return a * Math.pow(2, -10 * (k -= 1))
	                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;
	
	        },
	
	        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动
	        /**
	        * @param {number} k
	        * @return {number}
	        */
	        backIn: function (k) {
	            var s = 1.70158;
	            return k * k * ((s + 1) * k - s);
	        },
	        /**
	        * @param {number} k
	        * @return {number}
	        */
	        backOut: function (k) {
	            var s = 1.70158;
	            return --k * k * ((s + 1) * k + s) + 1;
	        },
	        /**
	        * @param {number} k
	        * @return {number}
	        */
	        backInOut: function (k) {
	            var s = 1.70158 * 1.525;
	            if ((k *= 2) < 1) {
	                return 0.5 * (k * k * ((s + 1) * k - s));
	            }
	            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);
	        },
	
	        // 创建弹跳效果
	        /**
	        * @param {number} k
	        * @return {number}
	        */
	        bounceIn: function (k) {
	            return 1 - easing.bounceOut(1 - k);
	        },
	        /**
	        * @param {number} k
	        * @return {number}
	        */
	        bounceOut: function (k) {
	            if (k < (1 / 2.75)) {
	                return 7.5625 * k * k;
	            }
	            else if (k < (2 / 2.75)) {
	                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;
	            }
	            else if (k < (2.5 / 2.75)) {
	                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;
	            }
	            else {
	                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;
	            }
	        },
	        /**
	        * @param {number} k
	        * @return {number}
	        */
	        bounceInOut: function (k) {
	            if (k < 0.5) {
	                return easing.bounceIn(k * 2) * 0.5;
	            }
	            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;
	        }
	    };
	
	    module.exports = easing;
	
	


/***/ },
/* 561 */
/*!*************************************!*\
  !*** ./~/zrender/lib/tool/color.js ***!
  \*************************************/
/***/ function(module, exports) {

	/**
	 * @module zrender/tool/color
	 */
	
	
	    var kCSSColorTable = {
	        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],
	        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],
	        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],
	        'beige': [245,245,220,1], 'bisque': [255,228,196,1],
	        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],
	        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],
	        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],
	        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],
	        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],
	        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],
	        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],
	        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],
	        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],
	        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],
	        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],
	        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],
	        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],
	        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],
	        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],
	        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],
	        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],
	        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],
	        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],
	        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],
	        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],
	        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],
	        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],
	        'gray': [128,128,128,1], 'green': [0,128,0,1],
	        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],
	        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],
	        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],
	        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],
	        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],
	        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],
	        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],
	        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],
	        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],
	        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],
	        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],
	        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],
	        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],
	        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],
	        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],
	        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],
	        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],
	        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],
	        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],
	        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],
	        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],
	        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],
	        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],
	        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],
	        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],
	        'orange': [255,165,0,1], 'orangered': [255,69,0,1],
	        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],
	        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],
	        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],
	        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],
	        'pink': [255,192,203,1], 'plum': [221,160,221,1],
	        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],
	        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],
	        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],
	        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],
	        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],
	        'sienna': [160,82,45,1], 'silver': [192,192,192,1],
	        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],
	        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],
	        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],
	        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],
	        'teal': [0,128,128,1], 'thistle': [216,191,216,1],
	        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],
	        'violet': [238,130,238,1], 'wheat': [245,222,179,1],
	        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],
	        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]
	    };
	
	    function clampCssByte(i) {  // Clamp to integer 0 .. 255.
	        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).
	        return i < 0 ? 0 : i > 255 ? 255 : i;
	    }
	
	    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.
	        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).
	        return i < 0 ? 0 : i > 360 ? 360 : i;
	    }
	
	    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.
	        return f < 0 ? 0 : f > 1 ? 1 : f;
	    }
	
	    function parseCssInt(str) {  // int or percentage.
	        if (str.length && str.charAt(str.length - 1) === '%') {
	            return clampCssByte(parseFloat(str) / 100 * 255);
	        }
	        return clampCssByte(parseInt(str, 10));
	    }
	
	    function parseCssFloat(str) {  // float or percentage.
	        if (str.length && str.charAt(str.length - 1) === '%') {
	            return clampCssFloat(parseFloat(str) / 100);
	        }
	        return clampCssFloat(parseFloat(str));
	    }
	
	    function cssHueToRgb(m1, m2, h) {
	        if (h < 0) {
	            h += 1;
	        }
	        else if (h > 1) {
	            h -= 1;
	        }
	
	        if (h * 6 < 1) {
	            return m1 + (m2 - m1) * h * 6;
	        }
	        if (h * 2 < 1) {
	            return m2;
	        }
	        if (h * 3 < 2) {
	            return m1 + (m2 - m1) * (2/3 - h) * 6;
	        }
	        return m1;
	    }
	
	    function lerp(a, b, p) {
	        return a + (b - a) * p;
	    }
	
	    /**
	     * @param {string} colorStr
	     * @return {Array.<number>}
	     * @memberOf module:zrender/util/color
	     */
	    function parse(colorStr) {
	        if (!colorStr) {
	            return;
	        }
	        // colorStr may be not string
	        colorStr = colorStr + '';
	        // Remove all whitespace, not compliant, but should just be more accepting.
	        var str = colorStr.replace(/ /g, '').toLowerCase();
	
	        // Color keywords (and transparent) lookup.
	        if (str in kCSSColorTable) {
	            return kCSSColorTable[str].slice();  // dup.
	        }
	
	        // #abc and #abc123 syntax.
	        if (str.charAt(0) === '#') {
	            if (str.length === 4) {
	                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.
	                if (!(iv >= 0 && iv <= 0xfff)) {
	                    return;  // Covers NaN.
	                }
	                return [
	                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),
	                    (iv & 0xf0) | ((iv & 0xf0) >> 4),
	                    (iv & 0xf) | ((iv & 0xf) << 4),
	                    1
	                ];
	            }
	            else if (str.length === 7) {
	                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.
	                if (!(iv >= 0 && iv <= 0xffffff)) {
	                    return;  // Covers NaN.
	                }
	                return [
	                    (iv & 0xff0000) >> 16,
	                    (iv & 0xff00) >> 8,
	                    iv & 0xff,
	                    1
	                ];
	            }
	
	            return;
	        }
	        var op = str.indexOf('('), ep = str.indexOf(')');
	        if (op !== -1 && ep + 1 === str.length) {
	            var fname = str.substr(0, op);
	            var params = str.substr(op + 1, ep - (op + 1)).split(',');
	            var alpha = 1;  // To allow case fallthrough.
	            switch (fname) {
	                case 'rgba':
	                    if (params.length !== 4) {
	                        return;
	                    }
	                    alpha = parseCssFloat(params.pop()); // jshint ignore:line
	                // Fall through.
	                case 'rgb':
	                    if (params.length !== 3) {
	                        return;
	                    }
	                    return [
	                        parseCssInt(params[0]),
	                        parseCssInt(params[1]),
	                        parseCssInt(params[2]),
	                        alpha
	                    ];
	                case 'hsla':
	                    if (params.length !== 4) {
	                        return;
	                    }
	                    params[3] = parseCssFloat(params[3]);
	                    return hsla2rgba(params);
	                case 'hsl':
	                    if (params.length !== 3) {
	                        return;
	                    }
	                    return hsla2rgba(params);
	                default:
	                    return;
	            }
	        }
	
	        return;
	    }
	
	    /**
	     * @param {Array.<number>} hsla
	     * @return {Array.<number>} rgba
	     */
	    function hsla2rgba(hsla) {
	        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1
	        // NOTE(deanm): According to the CSS spec s/l should only be
	        // percentages, but we don't bother and let float or percentage.
	        var s = parseCssFloat(hsla[1]);
	        var l = parseCssFloat(hsla[2]);
	        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;
	        var m1 = l * 2 - m2;
	
	        var rgba = [
	            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),
	            clampCssByte(cssHueToRgb(m1, m2, h) * 255),
	            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255)
	        ];
	
	        if (hsla.length === 4) {
	            rgba[3] = hsla[3];
	        }
	
	        return rgba;
	    }
	
	    /**
	     * @param {Array.<number>} rgba
	     * @return {Array.<number>} hsla
	     */
	    function rgba2hsla(rgba) {
	        if (!rgba) {
	            return;
	        }
	
	        // RGB from 0 to 255
	        var R = rgba[0] / 255;
	        var G = rgba[1] / 255;
	        var B = rgba[2] / 255;
	
	        var vMin = Math.min(R, G, B); // Min. value of RGB
	        var vMax = Math.max(R, G, B); // Max. value of RGB
	        var delta = vMax - vMin; // Delta RGB value
	
	        var L = (vMax + vMin) / 2;
	        var H;
	        var S;
	        // HSL results from 0 to 1
	        if (delta === 0) {
	            H = 0;
	            S = 0;
	        }
	        else {
	            if (L < 0.5) {
	                S = delta / (vMax + vMin);
	            }
	            else {
	                S = delta / (2 - vMax - vMin);
	            }
	
	            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;
	            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;
	            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;
	
	            if (R === vMax) {
	                H = deltaB - deltaG;
	            }
	            else if (G === vMax) {
	                H = (1 / 3) + deltaR - deltaB;
	            }
	            else if (B === vMax) {
	                H = (2 / 3) + deltaG - deltaR;
	            }
	
	            if (H < 0) {
	                H += 1;
	            }
	
	            if (H > 1) {
	                H -= 1;
	            }
	        }
	
	        var hsla = [H * 360, S, L];
	
	        if (rgba[3] != null) {
	            hsla.push(rgba[3]);
	        }
	
	        return hsla;
	    }
	
	    /**
	     * @param {string} color
	     * @param {number} level
	     * @return {string}
	     * @memberOf module:zrender/util/color
	     */
	    function lift(color, level) {
	        var colorArr = parse(color);
	        if (colorArr) {
	            for (var i = 0; i < 3; i++) {
	                if (level < 0) {
	                    colorArr[i] = colorArr[i] * (1 - level) | 0;
	                }
	                else {
	                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;
	                }
	            }
	            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');
	        }
	    }
	
	    /**
	     * @param {string} color
	     * @return {string}
	     * @memberOf module:zrender/util/color
	     */
	    function toHex(color, level) {
	        var colorArr = parse(color);
	        if (colorArr) {
	            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);
	        }
	    }
	
	    /**
	     * Map value to color. Faster than mapToColor methods because color is represented by rgba array
	     * @param {number} normalizedValue A float between 0 and 1.
	     * @param {Array.<Array.<number>>} colors List of rgba color array
	     * @param {Array.<number>} [out] Mapped gba color array
	     * @return {Array.<number>}
	     */
	    function fastMapToColor(normalizedValue, colors, out) {
	        if (!(colors && colors.length)
	            || !(normalizedValue >= 0 && normalizedValue <= 1)
	        ) {
	            return;
	        }
	        out = out || [0, 0, 0, 0];
	        var value = normalizedValue * (colors.length - 1);
	        var leftIndex = Math.floor(value);
	        var rightIndex = Math.ceil(value);
	        var leftColor = colors[leftIndex];
	        var rightColor = colors[rightIndex];
	        var dv = value - leftIndex;
	        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));
	        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));
	        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));
	        out[3] = clampCssByte(lerp(leftColor[3], rightColor[3], dv));
	        return out;
	    }
	    /**
	     * @param {number} normalizedValue A float between 0 and 1.
	     * @param {Array.<string>} colors Color list.
	     * @param {boolean=} fullOutput Default false.
	     * @return {(string|Object)} Result color. If fullOutput,
	     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},
	     * @memberOf module:zrender/util/color
	     */
	    function mapToColor(normalizedValue, colors, fullOutput) {
	        if (!(colors && colors.length)
	            || !(normalizedValue >= 0 && normalizedValue <= 1)
	        ) {
	            return;
	        }
	
	        var value = normalizedValue * (colors.length - 1);
	        var leftIndex = Math.floor(value);
	        var rightIndex = Math.ceil(value);
	        var leftColor = parse(colors[leftIndex]);
	        var rightColor = parse(colors[rightIndex]);
	        var dv = value - leftIndex;
	
	        var color = stringify(
	            [
	                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),
	                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),
	                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),
	                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))
	            ],
	            'rgba'
	        );
	
	        return fullOutput
	            ? {
	                color: color,
	                leftIndex: leftIndex,
	                rightIndex: rightIndex,
	                value: value
	            }
	            : color;
	    }
	
	    /**
	     * @param {string} color
	     * @param {number=} h 0 ~ 360, ignore when null.
	     * @param {number=} s 0 ~ 1, ignore when null.
	     * @param {number=} l 0 ~ 1, ignore when null.
	     * @return {string} Color string in rgba format.
	     * @memberOf module:zrender/util/color
	     */
	    function modifyHSL(color, h, s, l) {
	        color = parse(color);
	
	        if (color) {
	            color = rgba2hsla(color);
	            h != null && (color[0] = clampCssAngle(h));
	            s != null && (color[1] = parseCssFloat(s));
	            l != null && (color[2] = parseCssFloat(l));
	
	            return stringify(hsla2rgba(color), 'rgba');
	        }
	    }
	
	    /**
	     * @param {string} color
	     * @param {number=} alpha 0 ~ 1
	     * @return {string} Color string in rgba format.
	     * @memberOf module:zrender/util/color
	     */
	    function modifyAlpha(color, alpha) {
	        color = parse(color);
	
	        if (color && alpha != null) {
	            color[3] = clampCssFloat(alpha);
	            return stringify(color, 'rgba');
	        }
	    }
	
	    /**
	     * @param {Array.<string>} colors Color list.
	     * @param {string} type 'rgba', 'hsva', ...
	     * @return {string} Result color.
	     */
	    function stringify(arrColor, type) {
	        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];
	        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {
	            colorStr += ',' + arrColor[3];
	        }
	        return type + '(' + colorStr + ')';
	    }
	
	    module.exports = {
	        parse: parse,
	        lift: lift,
	        toHex: toHex,
	        fastMapToColor: fastMapToColor,
	        mapToColor: mapToColor,
	        modifyHSL: modifyHSL,
	        modifyAlpha: modifyAlpha,
	        stringify: stringify
	    };
	
	


/***/ },
/* 562 */
/*!***********************************!*\
  !*** ./~/zrender/lib/core/log.js ***!
  \***********************************/
/***/ function(module, exports, __webpack_require__) {

	
	        var config = __webpack_require__(/*! ../config */ 563);
	
	        /**
	         * @exports zrender/tool/log
	         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)
	         */
	        module.exports = function() {
	            if (config.debugMode === 0) {
	                return;
	            }
	            else if (config.debugMode == 1) {
	                for (var k in arguments) {
	                    throw new Error(arguments[k]);
	                }
	            }
	            else if (config.debugMode > 1) {
	                for (var k in arguments) {
	                    console.log(arguments[k]);
	                }
	            }
	        };
	
	        /* for debug
	        return function(mes) {
	            document.getElementById('wrong-message').innerHTML =
	                mes + ' ' + (new Date() - 0)
	                + '<br/>' 
	                + document.getElementById('wrong-message').innerHTML;
	        };
	        */
	    


/***/ },
/* 563 */
/*!*********************************!*\
  !*** ./~/zrender/lib/config.js ***!
  \*********************************/
/***/ function(module, exports) {

	
	    var dpr = 1;
	    // If in browser environment
	    if (typeof window !== 'undefined') {
	        dpr = Math.max(window.devicePixelRatio || 1, 1);
	    }
	    /**
	     * config默认配置项
	     * @exports zrender/config
	     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)
	     */
	    var config = {
	        /**
	         * debug日志选项：catchBrushException为true下有效
	         * 0 : 不生成debug数据，发布用
	         * 1 : 异常抛出，调试用
	         * 2 : 控制台输出，调试用
	         */
	        debugMode: 0,
	
	        // retina 屏幕优化
	        devicePixelRatio: dpr
	    };
	    module.exports = config;
	
	


/***/ },
/* 564 */
/*!*************************************!*\
  !*** ./~/echarts/lib/view/Chart.js ***!
  \*************************************/
/***/ function(module, exports, __webpack_require__) {

	
	
	    var Group = __webpack_require__(/*! zrender/lib/container/Group */ 552);
	    var componentUtil = __webpack_require__(/*! ../util/component */ 542);
	    var clazzUtil = __webpack_require__(/*! ../util/clazz */ 535);
	
	    function Chart() {
	
	        /**
	         * @type {module:zrender/container/Group}
	         * @readOnly
	         */
	        this.group = new Group();
	
	        /**
	         * @type {string}
	         * @readOnly
	         */
	        this.uid = componentUtil.getUID('viewChart');
	    }
	
	    Chart.prototype = {
	
	        type: 'chart',
	
	        /**
	         * Init the chart
	         * @param  {module:echarts/model/Global} ecModel
	         * @param  {module:echarts/ExtensionAPI} api
	         */
	        init: function (ecModel, api) {},
	
	        /**
	         * Render the chart
	         * @param  {module:echarts/model/Series} seriesModel
	         * @param  {module:echarts/model/Global} ecModel
	         * @param  {module:echarts/ExtensionAPI} api
	         * @param  {Object} payload
	         */
	        render: function (seriesModel, ecModel, api, payload) {},
	
	        /**
	         * Highlight series or specified data item
	         * @param  {module:echarts/model/Series} seriesModel
	         * @param  {module:echarts/model/Global} ecModel
	         * @param  {module:echarts/ExtensionAPI} api
	         * @param  {Object} payload
	         */
	        highlight: function (seriesModel, ecModel, api, payload) {
	            toggleHighlight(seriesModel.getData(), payload, 'emphasis');
	        },
	
	        /**
	         * Downplay series or specified data item
	         * @param  {module:echarts/model/Series} seriesModel
	         * @param  {module:echarts/model/Global} ecModel
	         * @param  {module:echarts/ExtensionAPI} api
	         * @param  {Object} payload
	         */
	        downplay: function (seriesModel, ecModel, api, payload) {
	            toggleHighlight(seriesModel.getData(), payload, 'normal');
	        },
	
	        /**
	         * Remove self
	         * @param  {module:echarts/model/Global} ecModel
	         * @param  {module:echarts/ExtensionAPI} api
	         */
	        remove: function (ecModel, api) {
	            this.group.removeAll();
	        },
	
	        /**
	         * Dispose self
	         * @param  {module:echarts/model/Global} ecModel
	         * @param  {module:echarts/ExtensionAPI} api
	         */
	        dispose: function () {}
	    };
	
	    var chartProto = Chart.prototype;
	    chartProto.updateView
	        = chartProto.updateLayout
	        = chartProto.updateVisual
	        = function (seriesModel, ecModel, api, payload) {
	            this.render(seriesModel, ecModel, api, payload);
	        };
	
	    /**
	     * Set state of single element
	     * @param  {module:zrender/Element} el
	     * @param  {string} state
	     */
	    function elSetState(el, state) {
	        if (el) {
	            el.trigger(state);
	            if (el.type === 'group') {
	                for (var i = 0; i < el.childCount(); i++) {
	                    elSetState(el.childAt(i), state);
	                }
	            }
	        }
	    }
	    /**
	     * @param  {module:echarts/data/List} data
	     * @param  {Object} payload
	     * @param  {string} state 'normal'|'emphasis'
	     * @inner
	     */
	    function toggleHighlight(data, payload, state) {
	        var dataIndex = payload && payload.dataIndex;
	        var name = payload && payload.name;
	
	        if (dataIndex != null) {
	            var dataIndices = dataIndex instanceof Array ? dataIndex : [dataIndex];
	            for (var i = 0, len = dataIndices.length; i < len; i++) {
	                elSetState(data.getItemGraphicEl(dataIndices[i]), state);
	            }
	        }
	        else if (name) {
	            var names = name instanceof Array ? name : [name];
	            for (var i = 0, len = names.length; i < len; i++) {
	                var dataIndex = data.indexOfName(names[i]);
	                elSetState(data.getItemGraphicEl(dataIndex), state);
	            }
	        }
	        else {
	            data.eachItemGraphicEl(function (el) {
	                elSetState(el, state);
	            });
	        }
	    }
	
	    // Enable Chart.extend.
	    clazzUtil.enableClassExtend(Chart);
	
	    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.
	    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});
	
	    module.exports = Chart;


/***/ },
/* 565 */
/*!***************************************!*\
  !*** ./~/echarts/lib/util/graphic.js ***!
  \***************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	
	    var pathTool = __webpack_require__(/*! zrender/lib/tool/path */ 566);
	    var round = Math.round;
	    var Path = __webpack_require__(/*! zrender/lib/graphic/Path */ 567);
	    var colorTool = __webpack_require__(/*! zrender/lib/tool/color */ 561);
	    var matrix = __webpack_require__(/*! zrender/lib/core/matrix */ 533);
	    var vector = __webpack_require__(/*! zrender/lib/core/vector */ 532);
	    var Gradient = __webpack_require__(/*! zrender/lib/graphic/Gradient */ 583);
	
	    var graphic = {};
	
	    graphic.Group = __webpack_require__(/*! zrender/lib/container/Group */ 552);
	
	    graphic.Image = __webpack_require__(/*! zrender/lib/graphic/Image */ 584);
	
	    graphic.Text = __webpack_require__(/*! zrender/lib/graphic/Text */ 586);
	
	    graphic.Circle = __webpack_require__(/*! zrender/lib/graphic/shape/Circle */ 587);
	
	    graphic.Sector = __webpack_require__(/*! zrender/lib/graphic/shape/Sector */ 588);
	
	    graphic.Ring = __webpack_require__(/*! zrender/lib/graphic/shape/Ring */ 589);
	
	    graphic.Polygon = __webpack_require__(/*! zrender/lib/graphic/shape/Polygon */ 590);
	
	    graphic.Polyline = __webpack_require__(/*! zrender/lib/graphic/shape/Polyline */ 594);
	
	    graphic.Rect = __webpack_require__(/*! zrender/lib/graphic/shape/Rect */ 595);
	
	    graphic.Line = __webpack_require__(/*! zrender/lib/graphic/shape/Line */ 597);
	
	    graphic.BezierCurve = __webpack_require__(/*! zrender/lib/graphic/shape/BezierCurve */ 598);
	
	    graphic.Arc = __webpack_require__(/*! zrender/lib/graphic/shape/Arc */ 599);
	
	    graphic.CompoundPath = __webpack_require__(/*! zrender/lib/graphic/CompoundPath */ 600);
	
	    graphic.LinearGradient = __webpack_require__(/*! zrender/lib/graphic/LinearGradient */ 601);
	
	    graphic.RadialGradient = __webpack_require__(/*! zrender/lib/graphic/RadialGradient */ 602);
	
	    graphic.BoundingRect = __webpack_require__(/*! zrender/lib/core/BoundingRect */ 531);
	
	    /**
	     * Extend shape with parameters
	     */
	    graphic.extendShape = function (opts) {
	        return Path.extend(opts);
	    };
	
	    /**
	     * Extend path
	     */
	    graphic.extendPath = function (pathData, opts) {
	        return pathTool.extendFromString(pathData, opts);
	    };
	
	    /**
	     * Create a path element from path data string
	     * @param {string} pathData
	     * @param {Object} opts
	     * @param {module:zrender/core/BoundingRect} rect
	     * @param {string} [layout=cover] 'center' or 'cover'
	     */
	    graphic.makePath = function (pathData, opts, rect, layout) {
	        var path = pathTool.createFromString(pathData, opts);
	        var boundingRect = path.getBoundingRect();
	        if (rect) {
	            var aspect = boundingRect.width / boundingRect.height;
	
	            if (layout === 'center') {
	                // Set rect to center, keep width / height ratio.
	                var width = rect.height * aspect;
	                var height;
	                if (width <= rect.width) {
	                    height = rect.height;
	                }
	                else {
	                    width = rect.width;
	                    height = width / aspect;
	                }
	                var cx = rect.x + rect.width / 2;
	                var cy = rect.y + rect.height / 2;
	
	                rect.x = cx - width / 2;
	                rect.y = cy - height / 2;
	                rect.width = width;
	                rect.height = height;
	            }
	
	            this.resizePath(path, rect);
	        }
	        return path;
	    };
	
	    graphic.mergePath = pathTool.mergePath,
	
	    /**
	     * Resize a path to fit the rect
	     * @param {module:zrender/graphic/Path} path
	     * @param {Object} rect
	     */
	    graphic.resizePath = function (path, rect) {
	        if (!path.applyTransform) {
	            return;
	        }
	
	        var pathRect = path.getBoundingRect();
	
	        var m = pathRect.calculateTransform(rect);
	
	        path.applyTransform(m);
	    };
	
	    /**
	     * Sub pixel optimize line for canvas
	     *
	     * @param {Object} param
	     * @param {Object} [param.shape]
	     * @param {number} [param.shape.x1]
	     * @param {number} [param.shape.y1]
	     * @param {number} [param.shape.x2]
	     * @param {number} [param.shape.y2]
	     * @param {Object} [param.style]
	     * @param {number} [param.style.lineWidth]
	     * @return {Object} Modified param
	     */
	    graphic.subPixelOptimizeLine = function (param) {
	        var subPixelOptimize = graphic.subPixelOptimize;
	        var shape = param.shape;
	        var lineWidth = param.style.lineWidth;
	
	        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {
	            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);
	        }
	        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {
	            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);
	        }
	        return param;
	    };
	
	    /**
	     * Sub pixel optimize rect for canvas
	     *
	     * @param {Object} param
	     * @param {Object} [param.shape]
	     * @param {number} [param.shape.x]
	     * @param {number} [param.shape.y]
	     * @param {number} [param.shape.width]
	     * @param {number} [param.shape.height]
	     * @param {Object} [param.style]
	     * @param {number} [param.style.lineWidth]
	     * @return {Object} Modified param
	     */
	    graphic.subPixelOptimizeRect = function (param) {
	        var subPixelOptimize = graphic.subPixelOptimize;
	        var shape = param.shape;
	        var lineWidth = param.style.lineWidth;
	        var originX = shape.x;
	        var originY = shape.y;
	        var originWidth = shape.width;
	        var originHeight = shape.height;
	        shape.x = subPixelOptimize(shape.x, lineWidth, true);
	        shape.y = subPixelOptimize(shape.y, lineWidth, true);
	        shape.width = Math.max(
	            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,
	            originWidth === 0 ? 0 : 1
	        );
	        shape.height = Math.max(
	            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,
	            originHeight === 0 ? 0 : 1
	        );
	        return param;
	    };
	
	    /**
	     * Sub pixel optimize for canvas
	     *
	     * @param {number} position Coordinate, such as x, y
	     * @param {number} lineWidth Should be nonnegative integer.
	     * @param {boolean=} positiveOrNegative Default false (negative).
	     * @return {number} Optimized position.
	     */
	    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {
	        // Assure that (position + lineWidth / 2) is near integer edge,
	        // otherwise line will be fuzzy in canvas.
	        var doubledPosition = round(position * 2);
	        return (doubledPosition + round(lineWidth)) % 2 === 0
	            ? doubledPosition / 2
	            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;
	    };
	
	    function hasFillOrStroke(fillOrStroke) {
	        return fillOrStroke != null && fillOrStroke != 'none';
	    }
	
	    function liftColor(color) {
	        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;
	    }
	
	    /**
	     * @private
	     */
	    function cacheElementStl(el) {
	        if (el.__hoverStlDirty) {
	            var stroke = el.style.stroke;
	            var fill = el.style.fill;
	
	            // Create hoverStyle on mouseover
	            var hoverStyle = el.__hoverStl;
	            hoverStyle.fill = hoverStyle.fill
	                || (hasFillOrStroke(fill) ? liftColor(fill) : null);
	            hoverStyle.stroke = hoverStyle.stroke
	                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);
	
	            var normalStyle = {};
	            for (var name in hoverStyle) {
	                if (hoverStyle.hasOwnProperty(name)) {
	                    normalStyle[name] = el.style[name];
	                }
	            }
	
	            el.__normalStl = normalStyle;
	
	            el.__hoverStlDirty = false;
	        }
	    }
	
	    /**
	     * @private
	     */
	    function doSingleEnterHover(el) {
	        if (el.__isHover) {
	            return;
	        }
	
	        cacheElementStl(el);
	
	        if (el.useHoverLayer) {
	            el.__zr && el.__zr.addHover(el, el.__hoverStl);
	        }
	        else {
	            el.setStyle(el.__hoverStl);
	            el.z2 += 1;
	        }
	
	        el.__isHover = true;
	    }
	
	    /**
	     * @inner
	     */
	    function doSingleLeaveHover(el) {
	        if (!el.__isHover) {
	            return;
	        }
	
	        var normalStl = el.__normalStl;
	        if (el.useHoverLayer) {
	            el.__zr && el.__zr.removeHover(el);
	        }
	        else {
	            normalStl && el.setStyle(normalStl);
	            el.z2 -= 1;
	        }
	
	        el.__isHover = false;
	    }
	
	    /**
	     * @inner
	     */
	    function doEnterHover(el) {
	        el.type === 'group'
	            ? el.traverse(function (child) {
	                if (child.type !== 'group') {
	                    doSingleEnterHover(child);
	                }
	            })
	            : doSingleEnterHover(el);
	    }
	
	    function doLeaveHover(el) {
	        el.type === 'group'
	            ? el.traverse(function (child) {
	                if (child.type !== 'group') {
	                    doSingleLeaveHover(child);
	                }
	            })
	            : doSingleLeaveHover(el);
	    }
	
	    /**
	     * @inner
	     */
	    function setElementHoverStl(el, hoverStl) {
	        // If element has sepcified hoverStyle, then use it instead of given hoverStyle
	        // Often used when item group has a label element and it's hoverStyle is different
	        el.__hoverStl = el.hoverStyle || hoverStl || {};
	        el.__hoverStlDirty = true;
	
	        if (el.__isHover) {
	            cacheElementStl(el);
	        }
	    }
	
	    /**
	     * @inner
	     */
	    function onElementMouseOver() {
	        // Only if element is not in emphasis status
	        !this.__isEmphasis && doEnterHover(this);
	    }
	
	    /**
	     * @inner
	     */
	    function onElementMouseOut() {
	        // Only if element is not in emphasis status
	        !this.__isEmphasis && doLeaveHover(this);
	    }
	
	    /**
	     * @inner
	     */
	    function enterEmphasis() {
	        this.__isEmphasis = true;
	        doEnterHover(this);
	    }
	
	    /**
	     * @inner
	     */
	    function leaveEmphasis() {
	        this.__isEmphasis = false;
	        doLeaveHover(this);
	    }
	
	    /**
	     * Set hover style of element
	     * @param {module:zrender/Element} el
	     * @param {Object} [hoverStyle]
	     */
	    graphic.setHoverStyle = function (el, hoverStyle) {
	        el.type === 'group'
	            ? el.traverse(function (child) {
	                if (child.type !== 'group') {
	                    setElementHoverStl(child, hoverStyle);
	                }
	            })
	            : setElementHoverStl(el, hoverStyle);
	        // Remove previous bound handlers
	        el.on('mouseover', onElementMouseOver)
	          .on('mouseout', onElementMouseOut);
	
	        // Emphasis, normal can be triggered manually
	        el.on('emphasis', enterEmphasis)
	          .on('normal', leaveEmphasis);
	    };
	
	    /**
	     * Set text option in the style
	     * @param {Object} textStyle
	     * @param {module:echarts/model/Model} labelModel
	     * @param {string} color
	     */
	    graphic.setText = function (textStyle, labelModel, color) {
	        var labelPosition = labelModel.getShallow('position') || 'inside';
	        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;
	        var textStyleModel = labelModel.getModel('textStyle');
	        zrUtil.extend(textStyle, {
	            textDistance: labelModel.getShallow('distance') || 5,
	            textFont: textStyleModel.getFont(),
	            textPosition: labelPosition,
	            textFill: textStyleModel.getTextColor() || labelColor
	        });
	    };
	
	    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {
	        if (typeof dataIndex === 'function') {
	            cb = dataIndex;
	            dataIndex = null;
	        }
	        var animationEnabled = animatableModel
	            && (
	                animatableModel.ifEnableAnimation
	                ? animatableModel.ifEnableAnimation()
	                // Directly use animation property
	                : animatableModel.getShallow('animation')
	            );
	
	        if (animationEnabled) {
	            var postfix = isUpdate ? 'Update' : '';
	            var duration = animatableModel
	                && animatableModel.getShallow('animationDuration' + postfix);
	            var animationEasing = animatableModel
	                && animatableModel.getShallow('animationEasing' + postfix);
	            var animationDelay = animatableModel
	                && animatableModel.getShallow('animationDelay' + postfix);
	            if (typeof animationDelay === 'function') {
	                animationDelay = animationDelay(dataIndex);
	            }
	            duration > 0
	                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)
	                : (el.attr(props), cb && cb());
	        }
	        else {
	            el.attr(props);
	            cb && cb();
	        }
	    }
	    /**
	     * Update graphic element properties with or without animation according to the configuration in series
	     * @param {module:zrender/Element} el
	     * @param {Object} props
	     * @param {module:echarts/model/Model} [animatableModel]
	     * @param {number} [dataIndex]
	     * @param {Function} [cb]
	     * @example
	     *     graphic.updateProps(el, {
	     *         position: [100, 100]
	     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });
	     *     // Or
	     *     graphic.updateProps(el, {
	     *         position: [100, 100]
	     *     }, seriesModel, function () { console.log('Animation done!'); });
	     */
	    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {
	        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);
	    };
	
	    /**
	     * Init graphic element properties with or without animation according to the configuration in series
	     * @param {module:zrender/Element} el
	     * @param {Object} props
	     * @param {module:echarts/model/Model} [animatableModel]
	     * @param {number} [dataIndex]
	     * @param {Function} cb
	     */
	    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {
	        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);
	    };
	
	    /**
	     * Get transform matrix of target (param target),
	     * in coordinate of its ancestor (param ancestor)
	     *
	     * @param {module:zrender/mixin/Transformable} target
	     * @param {module:zrender/mixin/Transformable} [ancestor]
	     */
	    graphic.getTransform = function (target, ancestor) {
	        var mat = matrix.identity([]);
	
	        while (target && target !== ancestor) {
	            matrix.mul(mat, target.getLocalTransform(), mat);
	            target = target.parent;
	        }
	
	        return mat;
	    };
	
	    /**
	     * Apply transform to an vertex.
	     * @param {Array.<number>} vertex [x, y]
	     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]
	     * @param {boolean=} invert Whether use invert matrix.
	     * @return {Array.<number>} [x, y]
	     */
	    graphic.applyTransform = function (vertex, transform, invert) {
	        if (invert) {
	            transform = matrix.invert([], transform);
	        }
	        return vector.applyTransform([], vertex, transform);
	    };
	
	    /**
	     * @param {string} direction 'left' 'right' 'top' 'bottom'
	     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]
	     * @param {boolean=} invert Whether use invert matrix.
	     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'
	     */
	    graphic.transformDirection = function (direction, transform, invert) {
	
	        // Pick a base, ensure that transform result will not be (0, 0).
	        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)
	            ? 1 : Math.abs(2 * transform[4] / transform[0]);
	        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)
	            ? 1 : Math.abs(2 * transform[4] / transform[2]);
	
	        var vertex = [
	            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,
	            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0
	        ];
	
	        vertex = graphic.applyTransform(vertex, transform, invert);
	
	        return Math.abs(vertex[0]) > Math.abs(vertex[1])
	            ? (vertex[0] > 0 ? 'right' : 'left')
	            : (vertex[1] > 0 ? 'bottom' : 'top');
	    };
	
	    /**
	     * Apply group transition animation from g1 to g2
	     */
	    graphic.groupTransition = function (g1, g2, animatableModel, cb) {
	        if (!g1 || !g2) {
	            return;
	        }
	
	        function getElMap(g) {
	            var elMap = {};
	            g.traverse(function (el) {
	                if (!el.isGroup && el.anid) {
	                    elMap[el.anid] = el;
	                }
	            });
	            return elMap;
	        }
	        function getAnimatableProps(el) {
	            var obj = {
	                position: vector.clone(el.position),
	                rotation: el.rotation
	            };
	            if (el.shape) {
	                obj.shape = zrUtil.extend({}, el.shape);
	            }
	            return obj;
	        }
	        var elMap1 = getElMap(g1);
	
	        g2.traverse(function (el) {
	            if (!el.isGroup && el.anid) {
	                var oldEl = elMap1[el.anid];
	                if (oldEl) {
	                    var newProp = getAnimatableProps(el);
	                    el.attr(getAnimatableProps(oldEl));
	                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);
	                }
	                // else {
	                //     if (el.previousProps) {
	                //         graphic.updateProps
	                //     }
	                // }
	            }
	        });
	    };
	
	    module.exports = graphic;


/***/ },
/* 566 */
/*!************************************!*\
  !*** ./~/zrender/lib/tool/path.js ***!
  \************************************/
/***/ function(module, exports, __webpack_require__) {

	
	
	    var Path = __webpack_require__(/*! ../graphic/Path */ 567);
	    var PathProxy = __webpack_require__(/*! ../core/PathProxy */ 571);
	    var transformPath = __webpack_require__(/*! ./transformPath */ 582);
	    var matrix = __webpack_require__(/*! ../core/matrix */ 533);
	
	    // command chars
	    var cc = [
	        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',
	        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'
	    ];
	
	    var mathSqrt = Math.sqrt;
	    var mathSin = Math.sin;
	    var mathCos = Math.cos;
	    var PI = Math.PI;
	
	    var vMag = function(v) {
	        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);
	    };
	    var vRatio = function(u, v) {
	        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));
	    };
	    var vAngle = function(u, v) {
	        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)
	                * Math.acos(vRatio(u, v));
	    };
	
	    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {
	        var psi = psiDeg * (PI / 180.0);
	        var xp = mathCos(psi) * (x1 - x2) / 2.0
	                 + mathSin(psi) * (y1 - y2) / 2.0;
	        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0
	                 + mathCos(psi) * (y1 - y2) / 2.0;
	
	        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);
	
	        if (lambda > 1) {
	            rx *= mathSqrt(lambda);
	            ry *= mathSqrt(lambda);
	        }
	
	        var f = (fa === fs ? -1 : 1)
	            * mathSqrt((((rx * rx) * (ry * ry))
	                    - ((rx * rx) * (yp * yp))
	                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)
	                    + (ry * ry) * (xp * xp))
	                ) || 0;
	
	        var cxp = f * rx * yp / ry;
	        var cyp = f * -ry * xp / rx;
	
	        var cx = (x1 + x2) / 2.0
	                 + mathCos(psi) * cxp
	                 - mathSin(psi) * cyp;
	        var cy = (y1 + y2) / 2.0
	                + mathSin(psi) * cxp
	                + mathCos(psi) * cyp;
	
	        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);
	        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];
	        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];
	        var dTheta = vAngle(u, v);
	
	        if (vRatio(u, v) <= -1) {
	            dTheta = PI;
	        }
	        if (vRatio(u, v) >= 1) {
	            dTheta = 0;
	        }
	        if (fs === 0 && dTheta > 0) {
	            dTheta = dTheta - 2 * PI;
	        }
	        if (fs === 1 && dTheta < 0) {
	            dTheta = dTheta + 2 * PI;
	        }
	
	        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);
	    }
	
	    function createPathProxyFromString(data) {
	        if (!data) {
	            return [];
	        }
	
	        // command string
	        var cs = data.replace(/-/g, ' -')
	            .replace(/  /g, ' ')
	            .replace(/ /g, ',')
	            .replace(/,,/g, ',');
	
	        var n;
	        // create pipes so that we can split the data
	        for (n = 0; n < cc.length; n++) {
	            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);
	        }
	
	        // create array
	        var arr = cs.split('|');
	        // init context point
	        var cpx = 0;
	        var cpy = 0;
	
	        var path = new PathProxy();
	        var CMD = PathProxy.CMD;
	
	        var prevCmd;
	        for (n = 1; n < arr.length; n++) {
	            var str = arr[n];
	            var c = str.charAt(0);
	            var off = 0;
	            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');
	            var cmd;
	
	            if (p.length > 0 && p[0] === '') {
	                p.shift();
	            }
	
	            for (var i = 0; i < p.length; i++) {
	                p[i] = parseFloat(p[i]);
	            }
	            while (off < p.length && !isNaN(p[off])) {
	                if (isNaN(p[0])) {
	                    break;
	                }
	                var ctlPtx;
	                var ctlPty;
	
	                var rx;
	                var ry;
	                var psi;
	                var fa;
	                var fs;
	
	                var x1 = cpx;
	                var y1 = cpy;
	
	                // convert l, H, h, V, and v to L
	                switch (c) {
	                    case 'l':
	                        cpx += p[off++];
	                        cpy += p[off++];
	                        cmd = CMD.L;
	                        path.addData(cmd, cpx, cpy);
	                        break;
	                    case 'L':
	                        cpx = p[off++];
	                        cpy = p[off++];
	                        cmd = CMD.L;
	                        path.addData(cmd, cpx, cpy);
	                        break;
	                    case 'm':
	                        cpx += p[off++];
	                        cpy += p[off++];
	                        cmd = CMD.M;
	                        path.addData(cmd, cpx, cpy);
	                        c = 'l';
	                        break;
	                    case 'M':
	                        cpx = p[off++];
	                        cpy = p[off++];
	                        cmd = CMD.M;
	                        path.addData(cmd, cpx, cpy);
	                        c = 'L';
	                        break;
	                    case 'h':
	                        cpx += p[off++];
	                        cmd = CMD.L;
	                        path.addData(cmd, cpx, cpy);
	                        break;
	                    case 'H':
	                        cpx = p[off++];
	                        cmd = CMD.L;
	                        path.addData(cmd, cpx, cpy);
	                        break;
	                    case 'v':
	                        cpy += p[off++];
	                        cmd = CMD.L;
	                        path.addData(cmd, cpx, cpy);
	                        break;
	                    case 'V':
	                        cpy = p[off++];
	                        cmd = CMD.L;
	                        path.addData(cmd, cpx, cpy);
	                        break;
	                    case 'C':
	                        cmd = CMD.C;
	                        path.addData(
	                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]
	                        );
	                        cpx = p[off - 2];
	                        cpy = p[off - 1];
	                        break;
	                    case 'c':
	                        cmd = CMD.C;
	                        path.addData(
	                            cmd,
	                            p[off++] + cpx, p[off++] + cpy,
	                            p[off++] + cpx, p[off++] + cpy,
	                            p[off++] + cpx, p[off++] + cpy
	                        );
	                        cpx += p[off - 2];
	                        cpy += p[off - 1];
	                        break;
	                    case 'S':
	                        ctlPtx = cpx;
	                        ctlPty = cpy;
	                        var len = path.len();
	                        var pathData = path.data;
	                        if (prevCmd === CMD.C) {
	                            ctlPtx += cpx - pathData[len - 4];
	                            ctlPty += cpy - pathData[len - 3];
	                        }
	                        cmd = CMD.C;
	                        x1 = p[off++];
	                        y1 = p[off++];
	                        cpx = p[off++];
	                        cpy = p[off++];
	                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);
	                        break;
	                    case 's':
	                        ctlPtx = cpx;
	                        ctlPty = cpy;
	                        var len = path.len();
	                        var pathData = path.data;
	                        if (prevCmd === CMD.C) {
	                            ctlPtx += cpx - pathData[len - 4];
	                            ctlPty += cpy - pathData[len - 3];
	                        }
	                        cmd = CMD.C;
	                        x1 = cpx + p[off++];
	                        y1 = cpy + p[off++];
	                        cpx += p[off++];
	                        cpy += p[off++];
	                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);
	                        break;
	                    case 'Q':
	                        x1 = p[off++];
	                        y1 = p[off++];
	                        cpx = p[off++];
	                        cpy = p[off++];
	                        cmd = CMD.Q;
	                        path.addData(cmd, x1, y1, cpx, cpy);
	                        break;
	                    case 'q':
	                        x1 = p[off++] + cpx;
	                        y1 = p[off++] + cpy;
	                        cpx += p[off++];
	                        cpy += p[off++];
	                        cmd = CMD.Q;
	                        path.addData(cmd, x1, y1, cpx, cpy);
	                        break;
	                    case 'T':
	                        ctlPtx = cpx;
	                        ctlPty = cpy;
	                        var len = path.len();
	                        var pathData = path.data;
	                        if (prevCmd === CMD.Q) {
	                            ctlPtx += cpx - pathData[len - 4];
	                            ctlPty += cpy - pathData[len - 3];
	                        }
	                        cpx = p[off++];
	                        cpy = p[off++];
	                        cmd = CMD.Q;
	                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);
	                        break;
	                    case 't':
	                        ctlPtx = cpx;
	                        ctlPty = cpy;
	                        var len = path.len();
	                        var pathData = path.data;
	                        if (prevCmd === CMD.Q) {
	                            ctlPtx += cpx - pathData[len - 4];
	                            ctlPty += cpy - pathData[len - 3];
	                        }
	                        cpx += p[off++];
	                        cpy += p[off++];
	                        cmd = CMD.Q;
	                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);
	                        break;
	                    case 'A':
	                        rx = p[off++];
	                        ry = p[off++];
	                        psi = p[off++];
	                        fa = p[off++];
	                        fs = p[off++];
	
	                        x1 = cpx, y1 = cpy;
	                        cpx = p[off++];
	                        cpy = p[off++];
	                        cmd = CMD.A;
	                        processArc(
	                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path
	                        );
	                        break;
	                    case 'a':
	                        rx = p[off++];
	                        ry = p[off++];
	                        psi = p[off++];
	                        fa = p[off++];
	                        fs = p[off++];
	
	                        x1 = cpx, y1 = cpy;
	                        cpx += p[off++];
	                        cpy += p[off++];
	                        cmd = CMD.A;
	                        processArc(
	                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path
	                        );
	                        break;
	                }
	            }
	
	            if (c === 'z' || c === 'Z') {
	                cmd = CMD.Z;
	                path.addData(cmd);
	            }
	
	            prevCmd = cmd;
	        }
	
	        path.toStatic();
	
	        return path;
	    }
	
	    // TODO Optimize double memory cost problem
	    function createPathOptions(str, opts) {
	        var pathProxy = createPathProxyFromString(str);
	        var transform;
	        opts = opts || {};
	        opts.buildPath = function (path) {
	            path.setData(pathProxy.data);
	            transform && transformPath(path, transform);
	            // Svg and vml renderer don't have context
	            var ctx = path.getContext();
	            if (ctx) {
	                path.rebuildPath(ctx);
	            }
	        };
	
	        opts.applyTransform = function (m) {
	            if (!transform) {
	                transform = matrix.create();
	            }
	            matrix.mul(transform, m, transform);
	        };
	
	        return opts;
	    }
	
	    module.exports = {
	        /**
	         * Create a Path object from path string data
	         * http://www.w3.org/TR/SVG/paths.html#PathData
	         * @param  {Object} opts Other options
	         */
	        createFromString: function (str, opts) {
	            return new Path(createPathOptions(str, opts));
	        },
	
	        /**
	         * Create a Path class from path string data
	         * @param  {string} str
	         * @param  {Object} opts Other options
	         */
	        extendFromString: function (str, opts) {
	            return Path.extend(createPathOptions(str, opts));
	        },
	
	        /**
	         * Merge multiple paths
	         */
	        // TODO Apply transform
	        // TODO stroke dash
	        // TODO Optimize double memory cost problem
	        mergePath: function (pathEls, opts) {
	            var pathList = [];
	            var len = pathEls.length;
	            for (var i = 0; i < len; i++) {
	                var pathEl = pathEls[i];
	                if (pathEl.__dirty) {
	                    pathEl.buildPath(pathEl.path, pathEl.shape, true);
	                }
	                pathList.push(pathEl.path);
	            }
	
	            var pathBundle = new Path(opts);
	            pathBundle.buildPath = function (path) {
	                path.appendPath(pathList);
	                // Svg and vml renderer don't have context
	                var ctx = path.getContext();
	                if (ctx) {
	                    path.rebuildPath(ctx);
	                }
	            };
	
	            return pathBundle;
	        }
	    };


/***/ },
/* 567 */
/*!***************************************!*\
  !*** ./~/zrender/lib/graphic/Path.js ***!
  \***************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Path element
	 * @module zrender/graphic/Path
	 */
	
	
	
	    var Displayable = __webpack_require__(/*! ./Displayable */ 568);
	    var zrUtil = __webpack_require__(/*! ../core/util */ 526);
	    var PathProxy = __webpack_require__(/*! ../core/PathProxy */ 571);
	    var pathContain = __webpack_require__(/*! ../contain/path */ 574);
	
	    var Pattern = __webpack_require__(/*! ./Pattern */ 581);
	    var getCanvasPattern = Pattern.prototype.getCanvasPattern;
	
	    var abs = Math.abs;
	
	    /**
	     * @alias module:zrender/graphic/Path
	     * @extends module:zrender/graphic/Displayable
	     * @constructor
	     * @param {Object} opts
	     */
	    function Path(opts) {
	        Displayable.call(this, opts);
	
	        /**
	         * @type {module:zrender/core/PathProxy}
	         * @readOnly
	         */
	        this.path = new PathProxy();
	    }
	
	    Path.prototype = {
	
	        constructor: Path,
	
	        type: 'path',
	
	        __dirtyPath: true,
	
	        strokeContainThreshold: 5,
	
	        brush: function (ctx, prevEl) {
	            var style = this.style;
	            var path = this.path;
	            var hasStroke = style.hasStroke();
	            var hasFill = style.hasFill();
	            var fill = style.fill;
	            var stroke = style.stroke;
	            var hasFillGradient = hasFill && !!(fill.colorStops);
	            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);
	            var hasFillPattern = hasFill && !!(fill.image);
	            var hasStrokePattern = hasStroke && !!(stroke.image);
	
	            style.bind(ctx, this, prevEl);
	            this.setTransform(ctx);
	
	            if (this.__dirty) {
	                var rect = this.getBoundingRect();
	                // Update gradient because bounding rect may changed
	                if (hasFillGradient) {
	                    this._fillGradient = style.getGradient(ctx, fill, rect);
	                }
	                if (hasStrokeGradient) {
	                    this._strokeGradient = style.getGradient(ctx, stroke, rect);
	                }
	            }
	            // Use the gradient or pattern
	            if (hasFillGradient) {
	                // PENDING If may have affect the state
	                ctx.fillStyle = this._fillGradient;
	            }
	            else if (hasFillPattern) {
	                ctx.fillStyle = getCanvasPattern.call(fill, ctx);
	            }
	            if (hasStrokeGradient) {
	                ctx.strokeStyle = this._strokeGradient;
	            }
	            else if (hasStrokePattern) {
	                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);
	            }
	
	            var lineDash = style.lineDash;
	            var lineDashOffset = style.lineDashOffset;
	
	            var ctxLineDash = !!ctx.setLineDash;
	
	            // Update path sx, sy
	            var scale = this.getGlobalScale();
	            path.setScale(scale[0], scale[1]);
	
	            // Proxy context
	            // Rebuild path in following 2 cases
	            // 1. Path is dirty
	            // 2. Path needs javascript implemented lineDash stroking.
	            //    In this case, lineDash information will not be saved in PathProxy
	            if (this.__dirtyPath || (
	                lineDash && !ctxLineDash && hasStroke
	            )) {
	                path = this.path.beginPath(ctx);
	
	                // Setting line dash before build path
	                if (lineDash && !ctxLineDash) {
	                    path.setLineDash(lineDash);
	                    path.setLineDashOffset(lineDashOffset);
	                }
	
	                this.buildPath(path, this.shape, false);
	
	                // Clear path dirty flag
	                this.__dirtyPath = false;
	            }
	            else {
	                // Replay path building
	                ctx.beginPath();
	                this.path.rebuildPath(ctx);
	            }
	
	            hasFill && path.fill(ctx);
	
	            if (lineDash && ctxLineDash) {
	                ctx.setLineDash(lineDash);
	                ctx.lineDashOffset = lineDashOffset;
	            }
	
	            hasStroke && path.stroke(ctx);
	
	            if (lineDash && ctxLineDash) {
	                // PENDING
	                // Remove lineDash
	                ctx.setLineDash([]);
	            }
	
	
	            this.restoreTransform(ctx);
	
	            // Draw rect text
	            if (style.text || style.text === 0) {
	                // var rect = this.getBoundingRect();
	                this.drawRectText(ctx, this.getBoundingRect());
	            }
	        },
	
	        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath
	        // Like in circle
	        buildPath: function (ctx, shapeCfg, inBundle) {},
	
	        getBoundingRect: function () {
	            var rect = this._rect;
	            var style = this.style;
	            var needsUpdateRect = !rect;
	            if (needsUpdateRect) {
	                var path = this.path;
	                if (this.__dirtyPath) {
	                    path.beginPath();
	                    this.buildPath(path, this.shape, false);
	                }
	                rect = path.getBoundingRect();
	            }
	            this._rect = rect;
	
	            if (style.hasStroke()) {
	                // Needs update rect with stroke lineWidth when
	                // 1. Element changes scale or lineWidth
	                // 2. Shape is changed
	                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());
	                if (this.__dirty || needsUpdateRect) {
	                    rectWithStroke.copy(rect);
	                    // FIXME Must after updateTransform
	                    var w = style.lineWidth;
	                    // PENDING, Min line width is needed when line is horizontal or vertical
	                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;
	
	                    // Only add extra hover lineWidth when there are no fill
	                    if (!style.hasFill()) {
	                        w = Math.max(w, this.strokeContainThreshold || 4);
	                    }
	                    // Consider line width
	                    // Line scale can't be 0;
	                    if (lineScale > 1e-10) {
	                        rectWithStroke.width += w / lineScale;
	                        rectWithStroke.height += w / lineScale;
	                        rectWithStroke.x -= w / lineScale / 2;
	                        rectWithStroke.y -= w / lineScale / 2;
	                    }
	                }
	
	                // Return rect with stroke
	                return rectWithStroke;
	            }
	
	            return rect;
	        },
	
	        contain: function (x, y) {
	            var localPos = this.transformCoordToLocal(x, y);
	            var rect = this.getBoundingRect();
	            var style = this.style;
	            x = localPos[0];
	            y = localPos[1];
	
	            if (rect.contain(x, y)) {
	                var pathData = this.path.data;
	                if (style.hasStroke()) {
	                    var lineWidth = style.lineWidth;
	                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;
	                    // Line scale can't be 0;
	                    if (lineScale > 1e-10) {
	                        // Only add extra hover lineWidth when there are no fill
	                        if (!style.hasFill()) {
	                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);
	                        }
	                        if (pathContain.containStroke(
	                            pathData, lineWidth / lineScale, x, y
	                        )) {
	                            return true;
	                        }
	                    }
	                }
	                if (style.hasFill()) {
	                    return pathContain.contain(pathData, x, y);
	                }
	            }
	            return false;
	        },
	
	        /**
	         * @param  {boolean} dirtyPath
	         */
	        dirty: function (dirtyPath) {
	            if (dirtyPath == null) {
	                dirtyPath = true;
	            }
	            // Only mark dirty, not mark clean
	            if (dirtyPath) {
	                this.__dirtyPath = dirtyPath;
	                this._rect = null;
	            }
	
	            this.__dirty = true;
	
	            this.__zr && this.__zr.refresh();
	
	            // Used as a clipping path
	            if (this.__clipTarget) {
	                this.__clipTarget.dirty();
	            }
	        },
	
	        /**
	         * Alias for animate('shape')
	         * @param {boolean} loop
	         */
	        animateShape: function (loop) {
	            return this.animate('shape', loop);
	        },
	
	        // Overwrite attrKV
	        attrKV: function (key, value) {
	            // FIXME
	            if (key === 'shape') {
	                this.setShape(value);
	                this.__dirtyPath = true;
	                this._rect = null;
	            }
	            else {
	                Displayable.prototype.attrKV.call(this, key, value);
	            }
	        },
	
	        /**
	         * @param {Object|string} key
	         * @param {*} value
	         */
	        setShape: function (key, value) {
	            var shape = this.shape;
	            // Path from string may not have shape
	            if (shape) {
	                if (zrUtil.isObject(key)) {
	                    for (var name in key) {
	                        shape[name] = key[name];
	                    }
	                }
	                else {
	                    shape[key] = value;
	                }
	                this.dirty(true);
	            }
	            return this;
	        },
	
	        getLineScale: function () {
	            var m = this.transform;
	            // Get the line scale.
	            // Determinant of `m` means how much the area is enlarged by the
	            // transformation. So its square root can be used as a scale factor
	            // for width.
	            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10
	                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))
	                : 1;
	        }
	    };
	
	    /**
	     * 扩展一个 Path element, 比如星形，圆等。
	     * Extend a path element
	     * @param {Object} props
	     * @param {string} props.type Path type
	     * @param {Function} props.init Initialize
	     * @param {Function} props.buildPath Overwrite buildPath method
	     * @param {Object} [props.style] Extended default style config
	     * @param {Object} [props.shape] Extended default shape config
	     */
	    Path.extend = function (defaults) {
	        var Sub = function (opts) {
	            Path.call(this, opts);
	
	            if (defaults.style) {
	                // Extend default style
	                this.style.extendFrom(defaults.style, false);
	            }
	
	            // Extend default shape
	            var defaultShape = defaults.shape;
	            if (defaultShape) {
	                this.shape = this.shape || {};
	                var thisShape = this.shape;
	                for (var name in defaultShape) {
	                    if (
	                        ! thisShape.hasOwnProperty(name)
	                        && defaultShape.hasOwnProperty(name)
	                    ) {
	                        thisShape[name] = defaultShape[name];
	                    }
	                }
	            }
	
	            defaults.init && defaults.init.call(this, opts);
	        };
	
	        zrUtil.inherits(Sub, Path);
	
	        // FIXME 不能 extend position, rotation 等引用对象
	        for (var name in defaults) {
	            // Extending prototype values and methods
	            if (name !== 'style' && name !== 'shape') {
	                Sub.prototype[name] = defaults[name];
	            }
	        }
	
	        return Sub;
	    };
	
	    zrUtil.inherits(Path, Displayable);
	
	    module.exports = Path;


/***/ },
/* 568 */
/*!**********************************************!*\
  !*** ./~/zrender/lib/graphic/Displayable.js ***!
  \**********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * 可绘制的图形基类
	 * Base class of all displayable graphic objects
	 * @module zrender/graphic/Displayable
	 */
	
	
	
	    var zrUtil = __webpack_require__(/*! ../core/util */ 526);
	
	    var Style = __webpack_require__(/*! ./Style */ 569);
	
	    var Element = __webpack_require__(/*! ../Element */ 553);
	    var RectText = __webpack_require__(/*! ./mixin/RectText */ 570);
	    // var Stateful = require('./mixin/Stateful');
	
	    /**
	     * @alias module:zrender/graphic/Displayable
	     * @extends module:zrender/Element
	     * @extends module:zrender/graphic/mixin/RectText
	     */
	    function Displayable(opts) {
	
	        opts = opts || {};
	
	        Element.call(this, opts);
	
	        // Extend properties
	        for (var name in opts) {
	            if (
	                opts.hasOwnProperty(name) &&
	                name !== 'style'
	            ) {
	                this[name] = opts[name];
	            }
	        }
	
	        /**
	         * @type {module:zrender/graphic/Style}
	         */
	        this.style = new Style(opts.style);
	
	        this._rect = null;
	        // Shapes for cascade clipping.
	        this.__clipPaths = [];
	
	        // FIXME Stateful must be mixined after style is setted
	        // Stateful.call(this, opts);
	    }
	
	    Displayable.prototype = {
	
	        constructor: Displayable,
	
	        type: 'displayable',
	
	        /**
	         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制
	         * Dirty flag. From which painter will determine if this displayable object needs brush
	         * @name module:zrender/graphic/Displayable#__dirty
	         * @type {boolean}
	         */
	        __dirty: true,
	
	        /**
	         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件
	         * If ignore drawing of the displayable object. Mouse event will still be triggered
	         * @name module:/zrender/graphic/Displayable#invisible
	         * @type {boolean}
	         * @default false
	         */
	        invisible: false,
	
	        /**
	         * @name module:/zrender/graphic/Displayable#z
	         * @type {number}
	         * @default 0
	         */
	        z: 0,
	
	        /**
	         * @name module:/zrender/graphic/Displayable#z
	         * @type {number}
	         * @default 0
	         */
	        z2: 0,
	
	        /**
	         * z层level，决定绘画在哪层canvas中
	         * @name module:/zrender/graphic/Displayable#zlevel
	         * @type {number}
	         * @default 0
	         */
	        zlevel: 0,
	
	        /**
	         * 是否可拖拽
	         * @name module:/zrender/graphic/Displayable#draggable
	         * @type {boolean}
	         * @default false
	         */
	        draggable: false,
	
	        /**
	         * 是否正在拖拽
	         * @name module:/zrender/graphic/Displayable#draggable
	         * @type {boolean}
	         * @default false
	         */
	        dragging: false,
	
	        /**
	         * 是否相应鼠标事件
	         * @name module:/zrender/graphic/Displayable#silent
	         * @type {boolean}
	         * @default false
	         */
	        silent: false,
	
	        /**
	         * If enable culling
	         * @type {boolean}
	         * @default false
	         */
	        culling: false,
	
	        /**
	         * Mouse cursor when hovered
	         * @name module:/zrender/graphic/Displayable#cursor
	         * @type {string}
	         */
	        cursor: 'pointer',
	
	        /**
	         * If hover area is bounding rect
	         * @name module:/zrender/graphic/Displayable#rectHover
	         * @type {string}
	         */
	        rectHover: false,
	
	        /**
	         * Render the element progressively when the value >= 0,
	         * usefull for large data.
	         * @type {number}
	         */
	        progressive: -1,
	
	        beforeBrush: function (ctx) {},
	
	        afterBrush: function (ctx) {},
	
	        /**
	         * 图形绘制方法
	         * @param {Canvas2DRenderingContext} ctx
	         */
	        // Interface
	        brush: function (ctx, prevEl) {},
	
	        /**
	         * 获取最小包围盒
	         * @return {module:zrender/core/BoundingRect}
	         */
	        // Interface
	        getBoundingRect: function () {},
	
	        /**
	         * 判断坐标 x, y 是否在图形上
	         * If displayable element contain coord x, y
	         * @param  {number} x
	         * @param  {number} y
	         * @return {boolean}
	         */
	        contain: function (x, y) {
	            return this.rectContain(x, y);
	        },
	
	        /**
	         * @param  {Function} cb
	         * @param  {}   context
	         */
	        traverse: function (cb, context) {
	            cb.call(context, this);
	        },
	
	        /**
	         * 判断坐标 x, y 是否在图形的包围盒上
	         * If bounding rect of element contain coord x, y
	         * @param  {number} x
	         * @param  {number} y
	         * @return {boolean}
	         */
	        rectContain: function (x, y) {
	            var coord = this.transformCoordToLocal(x, y);
	            var rect = this.getBoundingRect();
	            return rect.contain(coord[0], coord[1]);
	        },
	
	        /**
	         * 标记图形元素为脏，并且在下一帧重绘
	         * Mark displayable element dirty and refresh next frame
	         */
	        dirty: function () {
	            this.__dirty = true;
	
	            this._rect = null;
	
	            this.__zr && this.__zr.refresh();
	        },
	
	        /**
	         * 图形是否会触发事件
	         * If displayable object binded any event
	         * @return {boolean}
	         */
	        // TODO, 通过 bind 绑定的事件
	        // isSilent: function () {
	        //     return !(
	        //         this.hoverable || this.draggable
	        //         || this.onmousemove || this.onmouseover || this.onmouseout
	        //         || this.onmousedown || this.onmouseup || this.onclick
	        //         || this.ondragenter || this.ondragover || this.ondragleave
	        //         || this.ondrop
	        //     );
	        // },
	        /**
	         * Alias for animate('style')
	         * @param {boolean} loop
	         */
	        animateStyle: function (loop) {
	            return this.animate('style', loop);
	        },
	
	        attrKV: function (key, value) {
	            if (key !== 'style') {
	                Element.prototype.attrKV.call(this, key, value);
	            }
	            else {
	                this.style.set(value);
	            }
	        },
	
	        /**
	         * @param {Object|string} key
	         * @param {*} value
	         */
	        setStyle: function (key, value) {
	            this.style.set(key, value);
	            this.dirty(false);
	            return this;
	        },
	
	        /**
	         * Use given style object
	         * @param  {Object} obj
	         */
	        useStyle: function (obj) {
	            this.style = new Style(obj);
	            this.dirty(false);
	            return this;
	        }
	    };
	
	    zrUtil.inherits(Displayable, Element);
	
	    zrUtil.mixin(Displayable, RectText);
	    // zrUtil.mixin(Displayable, Stateful);
	
	    module.exports = Displayable;


/***/ },
/* 569 */
/*!****************************************!*\
  !*** ./~/zrender/lib/graphic/Style.js ***!
  \****************************************/
/***/ function(module, exports) {

	/**
	 * @module zrender/graphic/Style
	 */
	
	
	    var STYLE_COMMON_PROPS = [
	        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],
	        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]
	    ];
	
	    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);
	    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);
	
	    var Style = function (opts) {
	        this.extendFrom(opts);
	    };
	
	    function createLinearGradient(ctx, obj, rect) {
	        // var size =
	        var x = obj.x;
	        var x2 = obj.x2;
	        var y = obj.y;
	        var y2 = obj.y2;
	
	        if (!obj.global) {
	            x = x * rect.width + rect.x;
	            x2 = x2 * rect.width + rect.x;
	            y = y * rect.height + rect.y;
	            y2 = y2 * rect.height + rect.y;
	        }
	
	        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);
	
	        return canvasGradient;
	    }
	
	    function createRadialGradient(ctx, obj, rect) {
	        var width = rect.width;
	        var height = rect.height;
	        var min = Math.min(width, height);
	
	        var x = obj.x;
	        var y = obj.y;
	        var r = obj.r;
	        if (!obj.global) {
	            x = x * width + rect.x;
	            y = y * height + rect.y;
	            r = r * min;
	        }
	
	        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);
	
	        return canvasGradient;
	    }
	
	
	    Style.prototype = {
	
	        constructor: Style,
	
	        /**
	         * @type {string}
	         */
	        fill: '#000000',
	
	        /**
	         * @type {string}
	         */
	        stroke: null,
	
	        /**
	         * @type {number}
	         */
	        opacity: 1,
	
	        /**
	         * @type {Array.<number>}
	         */
	        lineDash: null,
	
	        /**
	         * @type {number}
	         */
	        lineDashOffset: 0,
	
	        /**
	         * @type {number}
	         */
	        shadowBlur: 0,
	
	        /**
	         * @type {number}
	         */
	        shadowOffsetX: 0,
	
	        /**
	         * @type {number}
	         */
	        shadowOffsetY: 0,
	
	        /**
	         * @type {number}
	         */
	        lineWidth: 1,
	
	        /**
	         * If stroke ignore scale
	         * @type {Boolean}
	         */
	        strokeNoScale: false,
	
	        // Bounding rect text configuration
	        // Not affected by element transform
	        /**
	         * @type {string}
	         */
	        text: null,
	
	        /**
	         * @type {string}
	         */
	        textFill: '#000',
	
	        /**
	         * @type {string}
	         */
	        textStroke: null,
	
	        /**
	         * 'inside', 'left', 'right', 'top', 'bottom'
	         * [x, y]
	         * @type {string|Array.<number>}
	         * @default 'inside'
	         */
	        textPosition: 'inside',
	
	        /**
	         * @type {string}
	         */
	        textBaseline: null,
	
	        /**
	         * @type {string}
	         */
	        textAlign: null,
	
	        /**
	         * @type {string}
	         */
	        textVerticalAlign: null,
	
	        /**
	         * @type {number}
	         */
	        textDistance: 5,
	
	        /**
	         * @type {number}
	         */
	        textShadowBlur: 0,
	
	        /**
	         * @type {number}
	         */
	        textShadowOffsetX: 0,
	
	        /**
	         * @type {number}
	         */
	        textShadowOffsetY: 0,
	
	        /**
	         * @type {string}
	         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation
	         */
	        blend: null,
	
	        /**
	         * @param {CanvasRenderingContext2D} ctx
	         */
	        bind: function (ctx, el, prevEl) {
	            var style = this;
	            var prevStyle = prevEl && prevEl.style;
	            var firstDraw = !prevStyle;
	
	            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {
	                var prop = STYLE_COMMON_PROPS[i];
	                var styleName = prop[0];
	
	                if (firstDraw || style[styleName] !== prevStyle[styleName]) {
	                    // FIXME Invalid property value will cause style leak from previous element.
	                    ctx[styleName] = style[styleName] || prop[1];
	                }
	            }
	
	            if ((firstDraw || style.fill !== prevStyle.fill)) {
	                ctx.fillStyle = style.fill;
	            }
	            if ((firstDraw || style.stroke !== prevStyle.stroke)) {
	                ctx.strokeStyle = style.stroke;
	            }
	            if ((firstDraw || style.opacity !== prevStyle.opacity)) {
	                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;
	            }
	
	            if ((firstDraw || style.blend !== prevStyle.blend)) {
	                ctx.globalCompositeOperation = style.blend || 'source-over';
	            }
	            if (this.hasStroke()) {
	                var lineWidth = style.lineWidth;
	                ctx.lineWidth = lineWidth / (
	                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1
	                );
	            }
	        },
	
	        hasFill: function () {
	            var fill = this.fill;
	            return fill != null && fill !== 'none';
	        },
	
	        hasStroke: function () {
	            var stroke = this.stroke;
	            return stroke != null && stroke !== 'none' && this.lineWidth > 0;
	        },
	
	        /**
	         * Extend from other style
	         * @param {zrender/graphic/Style} otherStyle
	         * @param {boolean} overwrite
	         */
	        extendFrom: function (otherStyle, overwrite) {
	            if (otherStyle) {
	                var target = this;
	                for (var name in otherStyle) {
	                    if (otherStyle.hasOwnProperty(name)
	                        && (overwrite || ! target.hasOwnProperty(name))
	                    ) {
	                        target[name] = otherStyle[name];
	                    }
	                }
	            }
	        },
	
	        /**
	         * Batch setting style with a given object
	         * @param {Object|string} obj
	         * @param {*} [obj]
	         */
	        set: function (obj, value) {
	            if (typeof obj === 'string') {
	                this[obj] = value;
	            }
	            else {
	                this.extendFrom(obj, true);
	            }
	        },
	
	        /**
	         * Clone
	         * @return {zrender/graphic/Style} [description]
	         */
	        clone: function () {
	            var newStyle = new this.constructor();
	            newStyle.extendFrom(this, true);
	            return newStyle;
	        },
	
	        getGradient: function (ctx, obj, rect) {
	            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;
	            var canvasGradient = method(ctx, obj, rect);
	            var colorStops = obj.colorStops;
	            for (var i = 0; i < colorStops.length; i++) {
	                canvasGradient.addColorStop(
	                    colorStops[i].offset, colorStops[i].color
	                );
	            }
	            return canvasGradient;
	        }
	    };
	
	    var styleProto = Style.prototype;
	    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {
	        var prop = STYLE_COMMON_PROPS[i];
	        if (!(prop[0] in styleProto)) {
	            styleProto[prop[0]] = prop[1];
	        }
	    }
	
	    // Provide for others
	    Style.getGradient = styleProto.getGradient;
	
	    module.exports = Style;


/***/ },
/* 570 */
/*!*************************************************!*\
  !*** ./~/zrender/lib/graphic/mixin/RectText.js ***!
  \*************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Mixin for drawing text in a element bounding rect
	 * @module zrender/mixin/RectText
	 */
	
	
	
	    var textContain = __webpack_require__(/*! ../../contain/text */ 530);
	    var BoundingRect = __webpack_require__(/*! ../../core/BoundingRect */ 531);
	
	    var tmpRect = new BoundingRect();
	
	    var RectText = function () {};
	
	    function parsePercent(value, maxValue) {
	        if (typeof value === 'string') {
	            if (value.lastIndexOf('%') >= 0) {
	                return parseFloat(value) / 100 * maxValue;
	            }
	            return parseFloat(value);
	        }
	        return value;
	    }
	
	    function setTransform(ctx, m) {
	        ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);
	    }
	
	    RectText.prototype = {
	
	        constructor: RectText,
	
	        /**
	         * Draw text in a rect with specified position.
	         * @param  {CanvasRenderingContext} ctx
	         * @param  {Object} rect Displayable rect
	         * @return {Object} textRect Alternative precalculated text bounding rect
	         */
	        drawRectText: function (ctx, rect, textRect) {
	            var style = this.style;
	            var text = style.text;
	            // Convert to string
	            text != null && (text += '');
	            if (!text) {
	                return;
	            }
	
	            // FIXME
	            ctx.save();
	
	            var x;
	            var y;
	            var textPosition = style.textPosition;
	            var distance = style.textDistance;
	            var align = style.textAlign;
	            var font = style.textFont || style.font;
	            var baseline = style.textBaseline;
	            var verticalAlign = style.textVerticalAlign;
	
	            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);
	
	            // Transform rect to view space
	            var transform = this.transform;
	            if (transform) {
	                tmpRect.copy(rect);
	                tmpRect.applyTransform(transform);
	                rect = tmpRect;
	            }
	
	            // Text position represented by coord
	            if (textPosition instanceof Array) {
	                // Percent
	                x = rect.x + parsePercent(textPosition[0], rect.width);
	                y = rect.y + parsePercent(textPosition[1], rect.height);
	                align = align || 'left';
	                baseline = baseline || 'top';
	
	                if (verticalAlign) {
	                    switch (verticalAlign) {
	                        case 'middle':
	                            y -= textRect.height / 2 - textRect.lineHeight / 2;
	                            break;
	                        case 'bottom':
	                            y -= textRect.height - textRect.lineHeight / 2;
	                            break;
	                        default:
	                            y += textRect.lineHeight / 2;
	                    }
	                    // Force bseline to be middle
	                    baseline = 'middle';
	                }
	            }
	            else {
	                var res = textContain.adjustTextPositionOnRect(
	                    textPosition, rect, textRect, distance
	                );
	                x = res.x;
	                y = res.y;
	                // Default align and baseline when has textPosition
	                align = align || res.textAlign;
	                baseline = baseline || res.textBaseline;
	            }
	
	            // Use canvas default left textAlign. Giving invalid value will cause state not change
	            ctx.textAlign = align || 'left';
	            // Use canvas default alphabetic baseline
	            ctx.textBaseline = baseline || 'alphabetic';
	
	            var textFill = style.textFill;
	            var textStroke = style.textStroke;
	            textFill && (ctx.fillStyle = textFill);
	            textStroke && (ctx.strokeStyle = textStroke);
	            ctx.font = font;
	
	            // Text shadow
	            // Always set shadowBlur and shadowOffset to avoid leak from displayable
	            ctx.shadowBlur = style.textShadowBlur;
	            ctx.shadowColor = style.textShadowColor || 'transparent';
	            ctx.shadowOffsetX = style.textShadowOffsetX;
	            ctx.shadowOffsetY = style.textShadowOffsetY;
	
	            var textLines = text.split('\n');
	            for (var i = 0; i < textLines.length; i++) {
	                textFill && ctx.fillText(textLines[i], x, y);
	                textStroke && ctx.strokeText(textLines[i], x, y);
	                y += textRect.lineHeight;
	            }
	
	            ctx.restore();
	        }
	    };
	
	    module.exports = RectText;


/***/ },
/* 571 */
/*!*****************************************!*\
  !*** ./~/zrender/lib/core/PathProxy.js ***!
  \*****************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	/**
	 * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中
	 * 可以用于 isInsidePath 判断以及获取boundingRect
	 *
	 * @module zrender/core/PathProxy
	 * @author Yi Shen (http://www.github.com/pissang)
	 */
	
	 // TODO getTotalLength, getPointAtLength
	
	
	    var curve = __webpack_require__(/*! ./curve */ 572);
	    var vec2 = __webpack_require__(/*! ./vector */ 532);
	    var bbox = __webpack_require__(/*! ./bbox */ 573);
	    var BoundingRect = __webpack_require__(/*! ./BoundingRect */ 531);
	    var dpr = __webpack_require__(/*! ../config */ 563).devicePixelRatio;
	
	    var CMD = {
	        M: 1,
	        L: 2,
	        C: 3,
	        Q: 4,
	        A: 5,
	        Z: 6,
	        // Rect
	        R: 7
	    };
	
	    var min = [];
	    var max = [];
	    var min2 = [];
	    var max2 = [];
	    var mathMin = Math.min;
	    var mathMax = Math.max;
	    var mathCos = Math.cos;
	    var mathSin = Math.sin;
	    var mathSqrt = Math.sqrt;
	    var mathAbs = Math.abs;
	
	    var hasTypedArray = typeof Float32Array != 'undefined';
	
	    /**
	     * @alias module:zrender/core/PathProxy
	     * @constructor
	     */
	    var PathProxy = function () {
	
	        /**
	         * Path data. Stored as flat array
	         * @type {Array.<Object>}
	         */
	        this.data = [];
	
	        this._len = 0;
	
	        this._ctx = null;
	
	        this._xi = 0;
	        this._yi = 0;
	
	        this._x0 = 0;
	        this._y0 = 0;
	
	        // Unit x, Unit y. Provide for avoiding drawing that too short line segment
	        this._ux = 0;
	        this._uy = 0;
	    };
	
	    /**
	     * 快速计算Path包围盒（并不是最小包围盒）
	     * @return {Object}
	     */
	    PathProxy.prototype = {
	
	        constructor: PathProxy,
	
	        _lineDash: null,
	
	        _dashOffset: 0,
	
	        _dashIdx: 0,
	
	        _dashSum: 0,
	
	        /**
	         * @readOnly
	         */
	        setScale: function (sx, sy) {
	            this._ux = mathAbs(1 / dpr / sx) || 0;
	            this._uy = mathAbs(1 / dpr / sy) || 0;
	        },
	
	        getContext: function () {
	            return this._ctx;
	        },
	
	        /**
	         * @param  {CanvasRenderingContext2D} ctx
	         * @return {module:zrender/core/PathProxy}
	         */
	        beginPath: function (ctx) {
	            this._ctx = ctx;
	
	            ctx && ctx.beginPath();
	
	            // Reset
	            this._len = 0;
	
	            if (this._lineDash) {
	                this._lineDash = null;
	
	                this._dashOffset = 0;
	            }
	
	            return this;
	        },
	
	        /**
	         * @param  {number} x
	         * @param  {number} y
	         * @return {module:zrender/core/PathProxy}
	         */
	        moveTo: function (x, y) {
	            this.addData(CMD.M, x, y);
	            this._ctx && this._ctx.moveTo(x, y);
	
	            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用
	            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。
	            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要
	            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持
	            this._x0 = x;
	            this._y0 = y;
	
	            this._xi = x;
	            this._yi = y;
	
	            return this;
	        },
	
	        /**
	         * @param  {number} x
	         * @param  {number} y
	         * @return {module:zrender/core/PathProxy}
	         */
	        lineTo: function (x, y) {
	            var exceedUnit = mathAbs(x - this._xi) > this._ux
	                || mathAbs(y - this._yi) > this._uy
	                // Force draw the first segment
	                || this._len < 5;
	
	            this.addData(CMD.L, x, y);
	
	            if (this._ctx && exceedUnit) {
	                this._needsDash() ? this._dashedLineTo(x, y)
	                    : this._ctx.lineTo(x, y);
	            }
	            if (exceedUnit) {
	                this._xi = x;
	                this._yi = y;
	            }
	
	            return this;
	        },
	
	        /**
	         * @param  {number} x1
	         * @param  {number} y1
	         * @param  {number} x2
	         * @param  {number} y2
	         * @param  {number} x3
	         * @param  {number} y3
	         * @return {module:zrender/core/PathProxy}
	         */
	        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {
	            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);
	            if (this._ctx) {
	                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)
	                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);
	            }
	            this._xi = x3;
	            this._yi = y3;
	            return this;
	        },
	
	        /**
	         * @param  {number} x1
	         * @param  {number} y1
	         * @param  {number} x2
	         * @param  {number} y2
	         * @return {module:zrender/core/PathProxy}
	         */
	        quadraticCurveTo: function (x1, y1, x2, y2) {
	            this.addData(CMD.Q, x1, y1, x2, y2);
	            if (this._ctx) {
	                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)
	                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);
	            }
	            this._xi = x2;
	            this._yi = y2;
	            return this;
	        },
	
	        /**
	         * @param  {number} cx
	         * @param  {number} cy
	         * @param  {number} r
	         * @param  {number} startAngle
	         * @param  {number} endAngle
	         * @param  {boolean} anticlockwise
	         * @return {module:zrender/core/PathProxy}
	         */
	        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {
	            this.addData(
	                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1
	            );
	            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);
	
	            this._xi = mathCos(endAngle) * r + cx;
	            this._xi = mathSin(endAngle) * r + cx;
	            return this;
	        },
	
	        // TODO
	        arcTo: function (x1, y1, x2, y2, radius) {
	            if (this._ctx) {
	                this._ctx.arcTo(x1, y1, x2, y2, radius);
	            }
	            return this;
	        },
	
	        // TODO
	        rect: function (x, y, w, h) {
	            this._ctx && this._ctx.rect(x, y, w, h);
	            this.addData(CMD.R, x, y, w, h);
	            return this;
	        },
	
	        /**
	         * @return {module:zrender/core/PathProxy}
	         */
	        closePath: function () {
	            this.addData(CMD.Z);
	
	            var ctx = this._ctx;
	            var x0 = this._x0;
	            var y0 = this._y0;
	            if (ctx) {
	                this._needsDash() && this._dashedLineTo(x0, y0);
	                ctx.closePath();
	            }
	
	            this._xi = x0;
	            this._yi = y0;
	            return this;
	        },
	
	        /**
	         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。
	         * stroke 同样
	         * @param {CanvasRenderingContext2D} ctx
	         * @return {module:zrender/core/PathProxy}
	         */
	        fill: function (ctx) {
	            ctx && ctx.fill();
	            this.toStatic();
	        },
	
	        /**
	         * @param {CanvasRenderingContext2D} ctx
	         * @return {module:zrender/core/PathProxy}
	         */
	        stroke: function (ctx) {
	            ctx && ctx.stroke();
	            this.toStatic();
	        },
	
	        /**
	         * 必须在其它绘制命令前调用
	         * Must be invoked before all other path drawing methods
	         * @return {module:zrender/core/PathProxy}
	         */
	        setLineDash: function (lineDash) {
	            if (lineDash instanceof Array) {
	                this._lineDash = lineDash;
	
	                this._dashIdx = 0;
	
	                var lineDashSum = 0;
	                for (var i = 0; i < lineDash.length; i++) {
	                    lineDashSum += lineDash[i];
	                }
	                this._dashSum = lineDashSum;
	            }
	            return this;
	        },
	
	        /**
	         * 必须在其它绘制命令前调用
	         * Must be invoked before all other path drawing methods
	         * @return {module:zrender/core/PathProxy}
	         */
	        setLineDashOffset: function (offset) {
	            this._dashOffset = offset;
	            return this;
	        },
	
	        /**
	         *
	         * @return {boolean}
	         */
	        len: function () {
	            return this._len;
	        },
	
	        /**
	         * 直接设置 Path 数据
	         */
	        setData: function (data) {
	
	            var len = data.length;
	
	            if (! (this.data && this.data.length == len) && hasTypedArray) {
	                this.data = new Float32Array(len);
	            }
	
	            for (var i = 0; i < len; i++) {
	                this.data[i] = data[i];
	            }
	
	            this._len = len;
	        },
	
	        /**
	         * 添加子路径
	         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path
	         */
	        appendPath: function (path) {
	            if (!(path instanceof Array)) {
	                path = [path];
	            }
	            var len = path.length;
	            var appendSize = 0;
	            var offset = this._len;
	            for (var i = 0; i < len; i++) {
	                appendSize += path[i].len();
	            }
	            if (hasTypedArray && (this.data instanceof Float32Array)) {
	                this.data = new Float32Array(offset + appendSize);
	            }
	            for (var i = 0; i < len; i++) {
	                var appendPathData = path[i].data;
	                for (var k = 0; k < appendPathData.length; k++) {
	                    this.data[offset++] = appendPathData[k];
	                }
	            }
	            this._len = offset;
	        },
	
	        /**
	         * 填充 Path 数据。
	         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。
	         */
	        addData: function (cmd) {
	            var data = this.data;
	            if (this._len + arguments.length > data.length) {
	                // 因为之前的数组已经转换成静态的 Float32Array
	                // 所以不够用时需要扩展一个新的动态数组
	                this._expandData();
	                data = this.data;
	            }
	            for (var i = 0; i < arguments.length; i++) {
	                data[this._len++] = arguments[i];
	            }
	
	            this._prevCmd = cmd;
	        },
	
	        _expandData: function () {
	            // Only if data is Float32Array
	            if (!(this.data instanceof Array)) {
	                var newData = [];
	                for (var i = 0; i < this._len; i++) {
	                    newData[i] = this.data[i];
	                }
	                this.data = newData;
	            }
	        },
	
	        /**
	         * If needs js implemented dashed line
	         * @return {boolean}
	         * @private
	         */
	        _needsDash: function () {
	            return this._lineDash;
	        },
	
	        _dashedLineTo: function (x1, y1) {
	            var dashSum = this._dashSum;
	            var offset = this._dashOffset;
	            var lineDash = this._lineDash;
	            var ctx = this._ctx;
	
	            var x0 = this._xi;
	            var y0 = this._yi;
	            var dx = x1 - x0;
	            var dy = y1 - y0;
	            var dist = mathSqrt(dx * dx + dy * dy);
	            var x = x0;
	            var y = y0;
	            var dash;
	            var nDash = lineDash.length;
	            var idx;
	            dx /= dist;
	            dy /= dist;
	
	            if (offset < 0) {
	                // Convert to positive offset
	                offset = dashSum + offset;
	            }
	            offset %= dashSum;
	            x -= offset * dx;
	            y -= offset * dy;
	
	            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)
	            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {
	                idx = this._dashIdx;
	                dash = lineDash[idx];
	                x += dx * dash;
	                y += dy * dash;
	                this._dashIdx = (idx + 1) % nDash;
	                // Skip positive offset
	                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {
	                    continue;
	                }
	                ctx[idx % 2 ? 'moveTo' : 'lineTo'](
	                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),
	                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)
	                );
	            }
	            // Offset for next lineTo
	            dx = x - x1;
	            dy = y - y1;
	            this._dashOffset = -mathSqrt(dx * dx + dy * dy);
	        },
	
	        // Not accurate dashed line to
	        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {
	            var dashSum = this._dashSum;
	            var offset = this._dashOffset;
	            var lineDash = this._lineDash;
	            var ctx = this._ctx;
	
	            var x0 = this._xi;
	            var y0 = this._yi;
	            var t;
	            var dx;
	            var dy;
	            var cubicAt = curve.cubicAt;
	            var bezierLen = 0;
	            var idx = this._dashIdx;
	            var nDash = lineDash.length;
	
	            var x;
	            var y;
	
	            var tmpLen = 0;
	
	            if (offset < 0) {
	                // Convert to positive offset
	                offset = dashSum + offset;
	            }
	            offset %= dashSum;
	            // Bezier approx length
	            for (t = 0; t < 1; t += 0.1) {
	                dx = cubicAt(x0, x1, x2, x3, t + 0.1)
	                    - cubicAt(x0, x1, x2, x3, t);
	                dy = cubicAt(y0, y1, y2, y3, t + 0.1)
	                    - cubicAt(y0, y1, y2, y3, t);
	                bezierLen += mathSqrt(dx * dx + dy * dy);
	            }
	
	            // Find idx after add offset
	            for (; idx < nDash; idx++) {
	                tmpLen += lineDash[idx];
	                if (tmpLen > offset) {
	                    break;
	                }
	            }
	            t = (tmpLen - offset) / bezierLen;
	
	            while (t <= 1) {
	
	                x = cubicAt(x0, x1, x2, x3, t);
	                y = cubicAt(y0, y1, y2, y3, t);
	
	                // Use line to approximate dashed bezier
	                // Bad result if dash is long
	                idx % 2 ? ctx.moveTo(x, y)
	                    : ctx.lineTo(x, y);
	
	                t += lineDash[idx] / bezierLen;
	
	                idx = (idx + 1) % nDash;
	            }
	
	            // Finish the last segment and calculate the new offset
	            (idx % 2 !== 0) && ctx.lineTo(x3, y3);
	            dx = x3 - x;
	            dy = y3 - y;
	            this._dashOffset = -mathSqrt(dx * dx + dy * dy);
	        },
	
	        _dashedQuadraticTo: function (x1, y1, x2, y2) {
	            // Convert quadratic to cubic using degree elevation
	            var x3 = x2;
	            var y3 = y2;
	            x2 = (x2 + 2 * x1) / 3;
	            y2 = (y2 + 2 * y1) / 3;
	            x1 = (this._xi + 2 * x1) / 3;
	            y1 = (this._yi + 2 * y1) / 3;
	
	            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);
	        },
	
	        /**
	         * 转成静态的 Float32Array 减少堆内存占用
	         * Convert dynamic array to static Float32Array
	         */
	        toStatic: function () {
	            var data = this.data;
	            if (data instanceof Array) {
	                data.length = this._len;
	                if (hasTypedArray) {
	                    this.data = new Float32Array(data);
	                }
	            }
	        },
	
	        /**
	         * @return {module:zrender/core/BoundingRect}
	         */
	        getBoundingRect: function () {
	            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;
	            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;
	
	            var data = this.data;
	            var xi = 0;
	            var yi = 0;
	            var x0 = 0;
	            var y0 = 0;
	
	            for (var i = 0; i < data.length;) {
	                var cmd = data[i++];
	
	                if (i == 1) {
	                    // 如果第一个命令是 L, C, Q
	                    // 则 previous point 同绘制命令的第一个 point
	                    //
	                    // 第一个命令为 Arc 的情况下会在后面特殊处理
	                    xi = data[i];
	                    yi = data[i + 1];
	
	                    x0 = xi;
	                    y0 = yi;
	                }
	
	                switch (cmd) {
	                    case CMD.M:
	                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点
	                        // 在 closePath 的时候使用
	                        x0 = data[i++];
	                        y0 = data[i++];
	                        xi = x0;
	                        yi = y0;
	                        min2[0] = x0;
	                        min2[1] = y0;
	                        max2[0] = x0;
	                        max2[1] = y0;
	                        break;
	                    case CMD.L:
	                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);
	                        xi = data[i++];
	                        yi = data[i++];
	                        break;
	                    case CMD.C:
	                        bbox.fromCubic(
	                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],
	                            min2, max2
	                        );
	                        xi = data[i++];
	                        yi = data[i++];
	                        break;
	                    case CMD.Q:
	                        bbox.fromQuadratic(
	                            xi, yi, data[i++], data[i++], data[i], data[i + 1],
	                            min2, max2
	                        );
	                        xi = data[i++];
	                        yi = data[i++];
	                        break;
	                    case CMD.A:
	                        // TODO Arc 判断的开销比较大
	                        var cx = data[i++];
	                        var cy = data[i++];
	                        var rx = data[i++];
	                        var ry = data[i++];
	                        var startAngle = data[i++];
	                        var endAngle = data[i++] + startAngle;
	                        // TODO Arc 旋转
	                        var psi = data[i++];
	                        var anticlockwise = 1 - data[i++];
	
	                        if (i == 1) {
	                            // 直接使用 arc 命令
	                            // 第一个命令起点还未定义
	                            x0 = mathCos(startAngle) * rx + cx;
	                            y0 = mathSin(startAngle) * ry + cy;
	                        }
	
	                        bbox.fromArc(
	                            cx, cy, rx, ry, startAngle, endAngle,
	                            anticlockwise, min2, max2
	                        );
	
	                        xi = mathCos(endAngle) * rx + cx;
	                        yi = mathSin(endAngle) * ry + cy;
	                        break;
	                    case CMD.R:
	                        x0 = xi = data[i++];
	                        y0 = yi = data[i++];
	                        var width = data[i++];
	                        var height = data[i++];
	                        // Use fromLine
	                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);
	                        break;
	                    case CMD.Z:
	                        xi = x0;
	                        yi = y0;
	                        break;
	                }
	
	                // Union
	                vec2.min(min, min, min2);
	                vec2.max(max, max, max2);
	            }
	
	            // No data
	            if (i === 0) {
	                min[0] = min[1] = max[0] = max[1] = 0;
	            }
	
	            return new BoundingRect(
	                min[0], min[1], max[0] - min[0], max[1] - min[1]
	            );
	        },
	
	        /**
	         * Rebuild path from current data
	         * Rebuild path will not consider javascript implemented line dash.
	         * @param {CanvasRenderingContext} ctx
	         */
	        rebuildPath: function (ctx) {
	            var d = this.data;
	            var x0, y0;
	            var xi, yi;
	            var x, y;
	            var ux = this._ux;
	            var uy = this._uy;
	            var len = this._len;
	            for (var i = 0; i < len;) {
	                var cmd = d[i++];
	
	                if (i == 1) {
	                    // 如果第一个命令是 L, C, Q
	                    // 则 previous point 同绘制命令的第一个 point
	                    //
	                    // 第一个命令为 Arc 的情况下会在后面特殊处理
	                    xi = d[i];
	                    yi = d[i + 1];
	
	                    x0 = xi;
	                    y0 = yi;
	                }
	                switch (cmd) {
	                    case CMD.M:
	                        x0 = xi = d[i++];
	                        y0 = yi = d[i++];
	                        ctx.moveTo(xi, yi);
	                        break;
	                    case CMD.L:
	                        x = d[i++];
	                        y = d[i++];
	                        // Not draw too small seg between
	                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {
	                            ctx.lineTo(x, y);
	                            xi = x;
	                            yi = y;
	                        }
	                        break;
	                    case CMD.C:
	                        ctx.bezierCurveTo(
	                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]
	                        );
	                        xi = d[i - 2];
	                        yi = d[i - 1];
	                        break;
	                    case CMD.Q:
	                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);
	                        xi = d[i - 2];
	                        yi = d[i - 1];
	                        break;
	                    case CMD.A:
	                        var cx = d[i++];
	                        var cy = d[i++];
	                        var rx = d[i++];
	                        var ry = d[i++];
	                        var theta = d[i++];
	                        var dTheta = d[i++];
	                        var psi = d[i++];
	                        var fs = d[i++];
	                        var r = (rx > ry) ? rx : ry;
	                        var scaleX = (rx > ry) ? 1 : rx / ry;
	                        var scaleY = (rx > ry) ? ry / rx : 1;
	                        var isEllipse = Math.abs(rx - ry) > 1e-3;
	                        var endAngle = theta + dTheta;
	                        if (isEllipse) {
	                            ctx.translate(cx, cy);
	                            ctx.rotate(psi);
	                            ctx.scale(scaleX, scaleY);
	                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);
	                            ctx.scale(1 / scaleX, 1 / scaleY);
	                            ctx.rotate(-psi);
	                            ctx.translate(-cx, -cy);
	                        }
	                        else {
	                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);
	                        }
	
	                        if (i == 1) {
	                            // 直接使用 arc 命令
	                            // 第一个命令起点还未定义
	                            x0 = mathCos(theta) * rx + cx;
	                            y0 = mathSin(theta) * ry + cy;
	                        }
	                        xi = mathCos(endAngle) * rx + cx;
	                        yi = mathSin(endAngle) * ry + cy;
	                        break;
	                    case CMD.R:
	                        x0 = xi = d[i];
	                        y0 = yi = d[i + 1];
	                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);
	                        break;
	                    case CMD.Z:
	                        ctx.closePath();
	                        xi = x0;
	                        yi = y0;
	                }
	            }
	        }
	    };
	
	    PathProxy.CMD = CMD;
	
	    module.exports = PathProxy;


/***/ },
/* 572 */
/*!*************************************!*\
  !*** ./~/zrender/lib/core/curve.js ***!
  \*************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	/**
	 * 曲线辅助模块
	 * @module zrender/core/curve
	 * @author pissang(https://www.github.com/pissang)
	 */
	
	
	    var vec2 = __webpack_require__(/*! ./vector */ 532);
	    var v2Create = vec2.create;
	    var v2DistSquare = vec2.distSquare;
	    var mathPow = Math.pow;
	    var mathSqrt = Math.sqrt;
	
	    var EPSILON = 1e-8;
	    var EPSILON_NUMERIC = 1e-4;
	
	    var THREE_SQRT = mathSqrt(3);
	    var ONE_THIRD = 1 / 3;
	
	    // 临时变量
	    var _v0 = v2Create();
	    var _v1 = v2Create();
	    var _v2 = v2Create();
	    // var _v3 = vec2.create();
	
	    function isAroundZero(val) {
	        return val > -EPSILON && val < EPSILON;
	    }
	    function isNotAroundZero(val) {
	        return val > EPSILON || val < -EPSILON;
	    }
	    /**
	     * 计算三次贝塞尔值
	     * @memberOf module:zrender/core/curve
	     * @param  {number} p0
	     * @param  {number} p1
	     * @param  {number} p2
	     * @param  {number} p3
	     * @param  {number} t
	     * @return {number}
	     */
	    function cubicAt(p0, p1, p2, p3, t) {
	        var onet = 1 - t;
	        return onet * onet * (onet * p0 + 3 * t * p1)
	             + t * t * (t * p3 + 3 * onet * p2);
	    }
	
	    /**
	     * 计算三次贝塞尔导数值
	     * @memberOf module:zrender/core/curve
	     * @param  {number} p0
	     * @param  {number} p1
	     * @param  {number} p2
	     * @param  {number} p3
	     * @param  {number} t
	     * @return {number}
	     */
	    function cubicDerivativeAt(p0, p1, p2, p3, t) {
	        var onet = 1 - t;
	        return 3 * (
	            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet
	            + (p3 - p2) * t * t
	        );
	    }
	
	    /**
	     * 计算三次贝塞尔方程根，使用盛金公式
	     * @memberOf module:zrender/core/curve
	     * @param  {number} p0
	     * @param  {number} p1
	     * @param  {number} p2
	     * @param  {number} p3
	     * @param  {number} val
	     * @param  {Array.<number>} roots
	     * @return {number} 有效根数目
	     */
	    function cubicRootAt(p0, p1, p2, p3, val, roots) {
	        // Evaluate roots of cubic functions
	        var a = p3 + 3 * (p1 - p2) - p0;
	        var b = 3 * (p2 - p1 * 2 + p0);
	        var c = 3 * (p1  - p0);
	        var d = p0 - val;
	
	        var A = b * b - 3 * a * c;
	        var B = b * c - 9 * a * d;
	        var C = c * c - 3 * b * d;
	
	        var n = 0;
	
	        if (isAroundZero(A) && isAroundZero(B)) {
	            if (isAroundZero(b)) {
	                roots[0] = 0;
	            }
	            else {
	                var t1 = -c / b;  //t1, t2, t3, b is not zero
	                if (t1 >= 0 && t1 <= 1) {
	                    roots[n++] = t1;
	                }
	            }
	        }
	        else {
	            var disc = B * B - 4 * A * C;
	
	            if (isAroundZero(disc)) {
	                var K = B / A;
	                var t1 = -b / a + K;  // t1, a is not zero
	                var t2 = -K / 2;  // t2, t3
	                if (t1 >= 0 && t1 <= 1) {
	                    roots[n++] = t1;
	                }
	                if (t2 >= 0 && t2 <= 1) {
	                    roots[n++] = t2;
	                }
	            }
	            else if (disc > 0) {
	                var discSqrt = mathSqrt(disc);
	                var Y1 = A * b + 1.5 * a * (-B + discSqrt);
	                var Y2 = A * b + 1.5 * a * (-B - discSqrt);
	                if (Y1 < 0) {
	                    Y1 = -mathPow(-Y1, ONE_THIRD);
	                }
	                else {
	                    Y1 = mathPow(Y1, ONE_THIRD);
	                }
	                if (Y2 < 0) {
	                    Y2 = -mathPow(-Y2, ONE_THIRD);
	                }
	                else {
	                    Y2 = mathPow(Y2, ONE_THIRD);
	                }
	                var t1 = (-b - (Y1 + Y2)) / (3 * a);
	                if (t1 >= 0 && t1 <= 1) {
	                    roots[n++] = t1;
	                }
	            }
	            else {
	                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));
	                var theta = Math.acos(T) / 3;
	                var ASqrt = mathSqrt(A);
	                var tmp = Math.cos(theta);
	
	                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);
	                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);
	                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);
	                if (t1 >= 0 && t1 <= 1) {
	                    roots[n++] = t1;
	                }
	                if (t2 >= 0 && t2 <= 1) {
	                    roots[n++] = t2;
	                }
	                if (t3 >= 0 && t3 <= 1) {
	                    roots[n++] = t3;
	                }
	            }
	        }
	        return n;
	    }
	
	    /**
	     * 计算三次贝塞尔方程极限值的位置
	     * @memberOf module:zrender/core/curve
	     * @param  {number} p0
	     * @param  {number} p1
	     * @param  {number} p2
	     * @param  {number} p3
	     * @param  {Array.<number>} extrema
	     * @return {number} 有效数目
	     */
	    function cubicExtrema(p0, p1, p2, p3, extrema) {
	        var b = 6 * p2 - 12 * p1 + 6 * p0;
	        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;
	        var c = 3 * p1 - 3 * p0;
	
	        var n = 0;
	        if (isAroundZero(a)) {
	            if (isNotAroundZero(b)) {
	                var t1 = -c / b;
	                if (t1 >= 0 && t1 <=1) {
	                    extrema[n++] = t1;
	                }
	            }
	        }
	        else {
	            var disc = b * b - 4 * a * c;
	            if (isAroundZero(disc)) {
	                extrema[0] = -b / (2 * a);
	            }
	            else if (disc > 0) {
	                var discSqrt = mathSqrt(disc);
	                var t1 = (-b + discSqrt) / (2 * a);
	                var t2 = (-b - discSqrt) / (2 * a);
	                if (t1 >= 0 && t1 <= 1) {
	                    extrema[n++] = t1;
	                }
	                if (t2 >= 0 && t2 <= 1) {
	                    extrema[n++] = t2;
	                }
	            }
	        }
	        return n;
	    }
	
	    /**
	     * 细分三次贝塞尔曲线
	     * @memberOf module:zrender/core/curve
	     * @param  {number} p0
	     * @param  {number} p1
	     * @param  {number} p2
	     * @param  {number} p3
	     * @param  {number} t
	     * @param  {Array.<number>} out
	     */
	    function cubicSubdivide(p0, p1, p2, p3, t, out) {
	        var p01 = (p1 - p0) * t + p0;
	        var p12 = (p2 - p1) * t + p1;
	        var p23 = (p3 - p2) * t + p2;
	
	        var p012 = (p12 - p01) * t + p01;
	        var p123 = (p23 - p12) * t + p12;
	
	        var p0123 = (p123 - p012) * t + p012;
	        // Seg0
	        out[0] = p0;
	        out[1] = p01;
	        out[2] = p012;
	        out[3] = p0123;
	        // Seg1
	        out[4] = p0123;
	        out[5] = p123;
	        out[6] = p23;
	        out[7] = p3;
	    }
	
	    /**
	     * 投射点到三次贝塞尔曲线上，返回投射距离。
	     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。
	     * @param {number} x0
	     * @param {number} y0
	     * @param {number} x1
	     * @param {number} y1
	     * @param {number} x2
	     * @param {number} y2
	     * @param {number} x3
	     * @param {number} y3
	     * @param {number} x
	     * @param {number} y
	     * @param {Array.<number>} [out] 投射点
	     * @return {number}
	     */
	    function cubicProjectPoint(
	        x0, y0, x1, y1, x2, y2, x3, y3,
	        x, y, out
	    ) {
	        // http://pomax.github.io/bezierinfo/#projections
	        var t;
	        var interval = 0.005;
	        var d = Infinity;
	        var prev;
	        var next;
	        var d1;
	        var d2;
	
	        _v0[0] = x;
	        _v0[1] = y;
	
	        // 先粗略估计一下可能的最小距离的 t 值
	        // PENDING
	        for (var _t = 0; _t < 1; _t += 0.05) {
	            _v1[0] = cubicAt(x0, x1, x2, x3, _t);
	            _v1[1] = cubicAt(y0, y1, y2, y3, _t);
	            d1 = v2DistSquare(_v0, _v1);
	            if (d1 < d) {
	                t = _t;
	                d = d1;
	            }
	        }
	        d = Infinity;
	
	        // At most 32 iteration
	        for (var i = 0; i < 32; i++) {
	            if (interval < EPSILON_NUMERIC) {
	                break;
	            }
	            prev = t - interval;
	            next = t + interval;
	            // t - interval
	            _v1[0] = cubicAt(x0, x1, x2, x3, prev);
	            _v1[1] = cubicAt(y0, y1, y2, y3, prev);
	
	            d1 = v2DistSquare(_v1, _v0);
	
	            if (prev >= 0 && d1 < d) {
	                t = prev;
	                d = d1;
	            }
	            else {
	                // t + interval
	                _v2[0] = cubicAt(x0, x1, x2, x3, next);
	                _v2[1] = cubicAt(y0, y1, y2, y3, next);
	                d2 = v2DistSquare(_v2, _v0);
	
	                if (next <= 1 && d2 < d) {
	                    t = next;
	                    d = d2;
	                }
	                else {
	                    interval *= 0.5;
	                }
	            }
	        }
	        // t
	        if (out) {
	            out[0] = cubicAt(x0, x1, x2, x3, t);
	            out[1] = cubicAt(y0, y1, y2, y3, t);
	        }
	        // console.log(interval, i);
	        return mathSqrt(d);
	    }
	
	    /**
	     * 计算二次方贝塞尔值
	     * @param  {number} p0
	     * @param  {number} p1
	     * @param  {number} p2
	     * @param  {number} t
	     * @return {number}
	     */
	    function quadraticAt(p0, p1, p2, t) {
	        var onet = 1 - t;
	        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;
	    }
	
	    /**
	     * 计算二次方贝塞尔导数值
	     * @param  {number} p0
	     * @param  {number} p1
	     * @param  {number} p2
	     * @param  {number} t
	     * @return {number}
	     */
	    function quadraticDerivativeAt(p0, p1, p2, t) {
	        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));
	    }
	
	    /**
	     * 计算二次方贝塞尔方程根
	     * @param  {number} p0
	     * @param  {number} p1
	     * @param  {number} p2
	     * @param  {number} t
	     * @param  {Array.<number>} roots
	     * @return {number} 有效根数目
	     */
	    function quadraticRootAt(p0, p1, p2, val, roots) {
	        var a = p0 - 2 * p1 + p2;
	        var b = 2 * (p1 - p0);
	        var c = p0 - val;
	
	        var n = 0;
	        if (isAroundZero(a)) {
	            if (isNotAroundZero(b)) {
	                var t1 = -c / b;
	                if (t1 >= 0 && t1 <= 1) {
	                    roots[n++] = t1;
	                }
	            }
	        }
	        else {
	            var disc = b * b - 4 * a * c;
	            if (isAroundZero(disc)) {
	                var t1 = -b / (2 * a);
	                if (t1 >= 0 && t1 <= 1) {
	                    roots[n++] = t1;
	                }
	            }
	            else if (disc > 0) {
	                var discSqrt = mathSqrt(disc);
	                var t1 = (-b + discSqrt) / (2 * a);
	                var t2 = (-b - discSqrt) / (2 * a);
	                if (t1 >= 0 && t1 <= 1) {
	                    roots[n++] = t1;
	                }
	                if (t2 >= 0 && t2 <= 1) {
	                    roots[n++] = t2;
	                }
	            }
	        }
	        return n;
	    }
	
	    /**
	     * 计算二次贝塞尔方程极限值
	     * @memberOf module:zrender/core/curve
	     * @param  {number} p0
	     * @param  {number} p1
	     * @param  {number} p2
	     * @return {number}
	     */
	    function quadraticExtremum(p0, p1, p2) {
	        var divider = p0 + p2 - 2 * p1;
	        if (divider === 0) {
	            // p1 is center of p0 and p2
	            return 0.5;
	        }
	        else {
	            return (p0 - p1) / divider;
	        }
	    }
	
	    /**
	     * 细分二次贝塞尔曲线
	     * @memberOf module:zrender/core/curve
	     * @param  {number} p0
	     * @param  {number} p1
	     * @param  {number} p2
	     * @param  {number} t
	     * @param  {Array.<number>} out
	     */
	    function quadraticSubdivide(p0, p1, p2, t, out) {
	        var p01 = (p1 - p0) * t + p0;
	        var p12 = (p2 - p1) * t + p1;
	        var p012 = (p12 - p01) * t + p01;
	
	        // Seg0
	        out[0] = p0;
	        out[1] = p01;
	        out[2] = p012;
	
	        // Seg1
	        out[3] = p012;
	        out[4] = p12;
	        out[5] = p2;
	    }
	
	    /**
	     * 投射点到二次贝塞尔曲线上，返回投射距离。
	     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。
	     * @param {number} x0
	     * @param {number} y0
	     * @param {number} x1
	     * @param {number} y1
	     * @param {number} x2
	     * @param {number} y2
	     * @param {number} x
	     * @param {number} y
	     * @param {Array.<number>} out 投射点
	     * @return {number}
	     */
	    function quadraticProjectPoint(
	        x0, y0, x1, y1, x2, y2,
	        x, y, out
	    ) {
	        // http://pomax.github.io/bezierinfo/#projections
	        var t;
	        var interval = 0.005;
	        var d = Infinity;
	
	        _v0[0] = x;
	        _v0[1] = y;
	
	        // 先粗略估计一下可能的最小距离的 t 值
	        // PENDING
	        for (var _t = 0; _t < 1; _t += 0.05) {
	            _v1[0] = quadraticAt(x0, x1, x2, _t);
	            _v1[1] = quadraticAt(y0, y1, y2, _t);
	            var d1 = v2DistSquare(_v0, _v1);
	            if (d1 < d) {
	                t = _t;
	                d = d1;
	            }
	        }
	        d = Infinity;
	
	        // At most 32 iteration
	        for (var i = 0; i < 32; i++) {
	            if (interval < EPSILON_NUMERIC) {
	                break;
	            }
	            var prev = t - interval;
	            var next = t + interval;
	            // t - interval
	            _v1[0] = quadraticAt(x0, x1, x2, prev);
	            _v1[1] = quadraticAt(y0, y1, y2, prev);
	
	            var d1 = v2DistSquare(_v1, _v0);
	
	            if (prev >= 0 && d1 < d) {
	                t = prev;
	                d = d1;
	            }
	            else {
	                // t + interval
	                _v2[0] = quadraticAt(x0, x1, x2, next);
	                _v2[1] = quadraticAt(y0, y1, y2, next);
	                var d2 = v2DistSquare(_v2, _v0);
	                if (next <= 1 && d2 < d) {
	                    t = next;
	                    d = d2;
	                }
	                else {
	                    interval *= 0.5;
	                }
	            }
	        }
	        // t
	        if (out) {
	            out[0] = quadraticAt(x0, x1, x2, t);
	            out[1] = quadraticAt(y0, y1, y2, t);
	        }
	        // console.log(interval, i);
	        return mathSqrt(d);
	    }
	
	    module.exports = {
	
	        cubicAt: cubicAt,
	
	        cubicDerivativeAt: cubicDerivativeAt,
	
	        cubicRootAt: cubicRootAt,
	
	        cubicExtrema: cubicExtrema,
	
	        cubicSubdivide: cubicSubdivide,
	
	        cubicProjectPoint: cubicProjectPoint,
	
	        quadraticAt: quadraticAt,
	
	        quadraticDerivativeAt: quadraticDerivativeAt,
	
	        quadraticRootAt: quadraticRootAt,
	
	        quadraticExtremum: quadraticExtremum,
	
	        quadraticSubdivide: quadraticSubdivide,
	
	        quadraticProjectPoint: quadraticProjectPoint
	    };


/***/ },
/* 573 */
/*!************************************!*\
  !*** ./~/zrender/lib/core/bbox.js ***!
  \************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * @author Yi Shen(https://github.com/pissang)
	 */
	
	
	    var vec2 = __webpack_require__(/*! ./vector */ 532);
	    var curve = __webpack_require__(/*! ./curve */ 572);
	
	    var bbox = {};
	    var mathMin = Math.min;
	    var mathMax = Math.max;
	    var mathSin = Math.sin;
	    var mathCos = Math.cos;
	
	    var start = vec2.create();
	    var end = vec2.create();
	    var extremity = vec2.create();
	
	    var PI2 = Math.PI * 2;
	    /**
	     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中
	     * @module zrender/core/bbox
	     * @param {Array<Object>} points 顶点数组
	     * @param {number} min
	     * @param {number} max
	     */
	    bbox.fromPoints = function(points, min, max) {
	        if (points.length === 0) {
	            return;
	        }
	        var p = points[0];
	        var left = p[0];
	        var right = p[0];
	        var top = p[1];
	        var bottom = p[1];
	        var i;
	
	        for (i = 1; i < points.length; i++) {
	            p = points[i];
	            left = mathMin(left, p[0]);
	            right = mathMax(right, p[0]);
	            top = mathMin(top, p[1]);
	            bottom = mathMax(bottom, p[1]);
	        }
	
	        min[0] = left;
	        min[1] = top;
	        max[0] = right;
	        max[1] = bottom;
	    };
	
	    /**
	     * @memberOf module:zrender/core/bbox
	     * @param {number} x0
	     * @param {number} y0
	     * @param {number} x1
	     * @param {number} y1
	     * @param {Array.<number>} min
	     * @param {Array.<number>} max
	     */
	    bbox.fromLine = function (x0, y0, x1, y1, min, max) {
	        min[0] = mathMin(x0, x1);
	        min[1] = mathMin(y0, y1);
	        max[0] = mathMax(x0, x1);
	        max[1] = mathMax(y0, y1);
	    };
	
	    var xDim = [];
	    var yDim = [];
	    /**
	     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中
	     * @memberOf module:zrender/core/bbox
	     * @param {number} x0
	     * @param {number} y0
	     * @param {number} x1
	     * @param {number} y1
	     * @param {number} x2
	     * @param {number} y2
	     * @param {number} x3
	     * @param {number} y3
	     * @param {Array.<number>} min
	     * @param {Array.<number>} max
	     */
	    bbox.fromCubic = function(
	        x0, y0, x1, y1, x2, y2, x3, y3, min, max
	    ) {
	        var cubicExtrema = curve.cubicExtrema;
	        var cubicAt = curve.cubicAt;
	        var i;
	        var n = cubicExtrema(x0, x1, x2, x3, xDim);
	        min[0] = Infinity;
	        min[1] = Infinity;
	        max[0] = -Infinity;
	        max[1] = -Infinity;
	
	        for (i = 0; i < n; i++) {
	            var x = cubicAt(x0, x1, x2, x3, xDim[i]);
	            min[0] = mathMin(x, min[0]);
	            max[0] = mathMax(x, max[0]);
	        }
	        n = cubicExtrema(y0, y1, y2, y3, yDim);
	        for (i = 0; i < n; i++) {
	            var y = cubicAt(y0, y1, y2, y3, yDim[i]);
	            min[1] = mathMin(y, min[1]);
	            max[1] = mathMax(y, max[1]);
	        }
	
	        min[0] = mathMin(x0, min[0]);
	        max[0] = mathMax(x0, max[0]);
	        min[0] = mathMin(x3, min[0]);
	        max[0] = mathMax(x3, max[0]);
	
	        min[1] = mathMin(y0, min[1]);
	        max[1] = mathMax(y0, max[1]);
	        min[1] = mathMin(y3, min[1]);
	        max[1] = mathMax(y3, max[1]);
	    };
	
	    /**
	     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中
	     * @memberOf module:zrender/core/bbox
	     * @param {number} x0
	     * @param {number} y0
	     * @param {number} x1
	     * @param {number} y1
	     * @param {number} x2
	     * @param {number} y2
	     * @param {Array.<number>} min
	     * @param {Array.<number>} max
	     */
	    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {
	        var quadraticExtremum = curve.quadraticExtremum;
	        var quadraticAt = curve.quadraticAt;
	        // Find extremities, where derivative in x dim or y dim is zero
	        var tx =
	            mathMax(
	                mathMin(quadraticExtremum(x0, x1, x2), 1), 0
	            );
	        var ty =
	            mathMax(
	                mathMin(quadraticExtremum(y0, y1, y2), 1), 0
	            );
	
	        var x = quadraticAt(x0, x1, x2, tx);
	        var y = quadraticAt(y0, y1, y2, ty);
	
	        min[0] = mathMin(x0, x2, x);
	        min[1] = mathMin(y0, y2, y);
	        max[0] = mathMax(x0, x2, x);
	        max[1] = mathMax(y0, y2, y);
	    };
	
	    /**
	     * 从圆弧中计算出最小包围盒，写入`min`和`max`中
	     * @method
	     * @memberOf module:zrender/core/bbox
	     * @param {number} x
	     * @param {number} y
	     * @param {number} rx
	     * @param {number} ry
	     * @param {number} startAngle
	     * @param {number} endAngle
	     * @param {number} anticlockwise
	     * @param {Array.<number>} min
	     * @param {Array.<number>} max
	     */
	    bbox.fromArc = function (
	        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max
	    ) {
	        var vec2Min = vec2.min;
	        var vec2Max = vec2.max;
	
	        var diff = Math.abs(startAngle - endAngle);
	
	
	        if (diff % PI2 < 1e-4 && diff > 1e-4) {
	            // Is a circle
	            min[0] = x - rx;
	            min[1] = y - ry;
	            max[0] = x + rx;
	            max[1] = y + ry;
	            return;
	        }
	
	        start[0] = mathCos(startAngle) * rx + x;
	        start[1] = mathSin(startAngle) * ry + y;
	
	        end[0] = mathCos(endAngle) * rx + x;
	        end[1] = mathSin(endAngle) * ry + y;
	
	        vec2Min(min, start, end);
	        vec2Max(max, start, end);
	
	        // Thresh to [0, Math.PI * 2]
	        startAngle = startAngle % (PI2);
	        if (startAngle < 0) {
	            startAngle = startAngle + PI2;
	        }
	        endAngle = endAngle % (PI2);
	        if (endAngle < 0) {
	            endAngle = endAngle + PI2;
	        }
	
	        if (startAngle > endAngle && !anticlockwise) {
	            endAngle += PI2;
	        }
	        else if (startAngle < endAngle && anticlockwise) {
	            startAngle += PI2;
	        }
	        if (anticlockwise) {
	            var tmp = endAngle;
	            endAngle = startAngle;
	            startAngle = tmp;
	        }
	
	        // var number = 0;
	        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;
	        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {
	            if (angle > startAngle) {
	                extremity[0] = mathCos(angle) * rx + x;
	                extremity[1] = mathSin(angle) * ry + y;
	
	                vec2Min(min, extremity, min);
	                vec2Max(max, extremity, max);
	            }
	        }
	    };
	
	    module.exports = bbox;
	


/***/ },
/* 574 */
/*!***************************************!*\
  !*** ./~/zrender/lib/contain/path.js ***!
  \***************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	
	    var CMD = __webpack_require__(/*! ../core/PathProxy */ 571).CMD;
	    var line = __webpack_require__(/*! ./line */ 575);
	    var cubic = __webpack_require__(/*! ./cubic */ 576);
	    var quadratic = __webpack_require__(/*! ./quadratic */ 577);
	    var arc = __webpack_require__(/*! ./arc */ 578);
	    var normalizeRadian = __webpack_require__(/*! ./util */ 579).normalizeRadian;
	    var curve = __webpack_require__(/*! ../core/curve */ 572);
	
	    var windingLine = __webpack_require__(/*! ./windingLine */ 580);
	
	    var containStroke = line.containStroke;
	
	    var PI2 = Math.PI * 2;
	
	    var EPSILON = 1e-4;
	
	    function isAroundEqual(a, b) {
	        return Math.abs(a - b) < EPSILON;
	    }
	
	    // 临时数组
	    var roots = [-1, -1, -1];
	    var extrema = [-1, -1];
	
	    function swapExtrema() {
	        var tmp = extrema[0];
	        extrema[0] = extrema[1];
	        extrema[1] = tmp;
	    }
	
	    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {
	        // Quick reject
	        if (
	            (y > y0 && y > y1 && y > y2 && y > y3)
	            || (y < y0 && y < y1 && y < y2 && y < y3)
	        ) {
	            return 0;
	        }
	        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);
	        if (nRoots === 0) {
	            return 0;
	        }
	        else {
	            var w = 0;
	            var nExtrema = -1;
	            var y0_, y1_;
	            for (var i = 0; i < nRoots; i++) {
	                var t = roots[i];
	
	                // Avoid winding error when intersection point is the connect point of two line of polygon
	                var unit = (t === 0 || t === 1) ? 0.5 : 1;
	
	                var x_ = curve.cubicAt(x0, x1, x2, x3, t);
	                if (x_ < x) { // Quick reject
	                    continue;
	                }
	                if (nExtrema < 0) {
	                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);
	                    if (extrema[1] < extrema[0] && nExtrema > 1) {
	                        swapExtrema();
	                    }
	                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);
	                    if (nExtrema > 1) {
	                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);
	                    }
	                }
	                if (nExtrema == 2) {
	                    // 分成三段单调函数
	                    if (t < extrema[0]) {
	                        w += y0_ < y0 ? unit : -unit;
	                    }
	                    else if (t < extrema[1]) {
	                        w += y1_ < y0_ ? unit : -unit;
	                    }
	                    else {
	                        w += y3 < y1_ ? unit : -unit;
	                    }
	                }
	                else {
	                    // 分成两段单调函数
	                    if (t < extrema[0]) {
	                        w += y0_ < y0 ? unit : -unit;
	                    }
	                    else {
	                        w += y3 < y0_ ? unit : -unit;
	                    }
	                }
	            }
	            return w;
	        }
	    }
	
	    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {
	        // Quick reject
	        if (
	            (y > y0 && y > y1 && y > y2)
	            || (y < y0 && y < y1 && y < y2)
	        ) {
	            return 0;
	        }
	        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);
	        if (nRoots === 0) {
	            return 0;
	        }
	        else {
	            var t = curve.quadraticExtremum(y0, y1, y2);
	            if (t >= 0 && t <= 1) {
	                var w = 0;
	                var y_ = curve.quadraticAt(y0, y1, y2, t);
	                for (var i = 0; i < nRoots; i++) {
	                    // Remove one endpoint.
	                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;
	
	                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);
	                    if (x_ < x) {   // Quick reject
	                        continue;
	                    }
	                    if (roots[i] < t) {
	                        w += y_ < y0 ? unit : -unit;
	                    }
	                    else {
	                        w += y2 < y_ ? unit : -unit;
	                    }
	                }
	                return w;
	            }
	            else {
	                // Remove one endpoint.
	                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;
	
	                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);
	                if (x_ < x) {   // Quick reject
	                    return 0;
	                }
	                return y2 < y0 ? unit : -unit;
	            }
	        }
	    }
	
	    // TODO
	    // Arc 旋转
	    function windingArc(
	        cx, cy, r, startAngle, endAngle, anticlockwise, x, y
	    ) {
	        y -= cy;
	        if (y > r || y < -r) {
	            return 0;
	        }
	        var tmp = Math.sqrt(r * r - y * y);
	        roots[0] = -tmp;
	        roots[1] = tmp;
	
	        var diff = Math.abs(startAngle - endAngle);
	        if (diff < 1e-4) {
	            return 0;
	        }
	        if (diff % PI2 < 1e-4) {
	            // Is a circle
	            startAngle = 0;
	            endAngle = PI2;
	            var dir = anticlockwise ? 1 : -1;
	            if (x >= roots[0] + cx && x <= roots[1] + cx) {
	                return dir;
	            } else {
	                return 0;
	            }
	        }
	
	        if (anticlockwise) {
	            var tmp = startAngle;
	            startAngle = normalizeRadian(endAngle);
	            endAngle = normalizeRadian(tmp);
	        }
	        else {
	            startAngle = normalizeRadian(startAngle);
	            endAngle = normalizeRadian(endAngle);
	        }
	        if (startAngle > endAngle) {
	            endAngle += PI2;
	        }
	
	        var w = 0;
	        for (var i = 0; i < 2; i++) {
	            var x_ = roots[i];
	            if (x_ + cx > x) {
	                var angle = Math.atan2(y, x_);
	                var dir = anticlockwise ? 1 : -1;
	                if (angle < 0) {
	                    angle = PI2 + angle;
	                }
	                if (
	                    (angle >= startAngle && angle <= endAngle)
	                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)
	                ) {
	                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {
	                        dir = -dir;
	                    }
	                    w += dir;
	                }
	            }
	        }
	        return w;
	    }
	
	    function containPath(data, lineWidth, isStroke, x, y) {
	        var w = 0;
	        var xi = 0;
	        var yi = 0;
	        var x0 = 0;
	        var y0 = 0;
	
	        for (var i = 0; i < data.length;) {
	            var cmd = data[i++];
	            // Begin a new subpath
	            if (cmd === CMD.M && i > 1) {
	                // Close previous subpath
	                if (!isStroke) {
	                    w += windingLine(xi, yi, x0, y0, x, y);
	                }
	                // 如果被任何一个 subpath 包含
	                // if (w !== 0) {
	                //     return true;
	                // }
	            }
	
	            if (i == 1) {
	                // 如果第一个命令是 L, C, Q
	                // 则 previous point 同绘制命令的第一个 point
	                //
	                // 第一个命令为 Arc 的情况下会在后面特殊处理
	                xi = data[i];
	                yi = data[i + 1];
	
	                x0 = xi;
	                y0 = yi;
	            }
	
	            switch (cmd) {
	                case CMD.M:
	                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点
	                    // 在 closePath 的时候使用
	                    x0 = data[i++];
	                    y0 = data[i++];
	                    xi = x0;
	                    yi = y0;
	                    break;
	                case CMD.L:
	                    if (isStroke) {
	                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {
	                            return true;
	                        }
	                    }
	                    else {
	                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN
	                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;
	                    }
	                    xi = data[i++];
	                    yi = data[i++];
	                    break;
	                case CMD.C:
	                    if (isStroke) {
	                        if (cubic.containStroke(xi, yi,
	                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],
	                            lineWidth, x, y
	                        )) {
	                            return true;
	                        }
	                    }
	                    else {
	                        w += windingCubic(
	                            xi, yi,
	                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],
	                            x, y
	                        ) || 0;
	                    }
	                    xi = data[i++];
	                    yi = data[i++];
	                    break;
	                case CMD.Q:
	                    if (isStroke) {
	                        if (quadratic.containStroke(xi, yi,
	                            data[i++], data[i++], data[i], data[i + 1],
	                            lineWidth, x, y
	                        )) {
	                            return true;
	                        }
	                    }
	                    else {
	                        w += windingQuadratic(
	                            xi, yi,
	                            data[i++], data[i++], data[i], data[i + 1],
	                            x, y
	                        ) || 0;
	                    }
	                    xi = data[i++];
	                    yi = data[i++];
	                    break;
	                case CMD.A:
	                    // TODO Arc 判断的开销比较大
	                    var cx = data[i++];
	                    var cy = data[i++];
	                    var rx = data[i++];
	                    var ry = data[i++];
	                    var theta = data[i++];
	                    var dTheta = data[i++];
	                    // TODO Arc 旋转
	                    var psi = data[i++];
	                    var anticlockwise = 1 - data[i++];
	                    var x1 = Math.cos(theta) * rx + cx;
	                    var y1 = Math.sin(theta) * ry + cy;
	                    // 不是直接使用 arc 命令
	                    if (i > 1) {
	                        w += windingLine(xi, yi, x1, y1, x, y);
	                    }
	                    else {
	                        // 第一个命令起点还未定义
	                        x0 = x1;
	                        y0 = y1;
	                    }
	                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放
	                    var _x = (x - cx) * ry / rx + cx;
	                    if (isStroke) {
	                        if (arc.containStroke(
	                            cx, cy, ry, theta, theta + dTheta, anticlockwise,
	                            lineWidth, _x, y
	                        )) {
	                            return true;
	                        }
	                    }
	                    else {
	                        w += windingArc(
	                            cx, cy, ry, theta, theta + dTheta, anticlockwise,
	                            _x, y
	                        );
	                    }
	                    xi = Math.cos(theta + dTheta) * rx + cx;
	                    yi = Math.sin(theta + dTheta) * ry + cy;
	                    break;
	                case CMD.R:
	                    x0 = xi = data[i++];
	                    y0 = yi = data[i++];
	                    var width = data[i++];
	                    var height = data[i++];
	                    var x1 = x0 + width;
	                    var y1 = y0 + height;
	                    if (isStroke) {
	                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)
	                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)
	                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)
	                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)
	                        ) {
	                            return true;
	                        }
	                    }
	                    else {
	                        // FIXME Clockwise ?
	                        w += windingLine(x1, y0, x1, y1, x, y);
	                        w += windingLine(x0, y1, x0, y0, x, y);
	                    }
	                    break;
	                case CMD.Z:
	                    if (isStroke) {
	                        if (containStroke(
	                            xi, yi, x0, y0, lineWidth, x, y
	                        )) {
	                            return true;
	                        }
	                    }
	                    else {
	                        // Close a subpath
	                        w += windingLine(xi, yi, x0, y0, x, y);
	                        // 如果被任何一个 subpath 包含
	                        // FIXME subpaths may overlap
	                        // if (w !== 0) {
	                        //     return true;
	                        // }
	                    }
	                    xi = x0;
	                    yi = y0;
	                    break;
	            }
	        }
	        if (!isStroke && !isAroundEqual(yi, y0)) {
	            w += windingLine(xi, yi, x0, y0, x, y) || 0;
	        }
	        return w !== 0;
	    }
	
	    module.exports = {
	        contain: function (pathData, x, y) {
	            return containPath(pathData, 0, false, x, y);
	        },
	
	        containStroke: function (pathData, lineWidth, x, y) {
	            return containPath(pathData, lineWidth, true, x, y);
	        }
	    };


/***/ },
/* 575 */
/*!***************************************!*\
  !*** ./~/zrender/lib/contain/line.js ***!
  \***************************************/
/***/ function(module, exports) {

	
	    module.exports = {
	        /**
	         * 线段包含判断
	         * @param  {number}  x0
	         * @param  {number}  y0
	         * @param  {number}  x1
	         * @param  {number}  y1
	         * @param  {number}  lineWidth
	         * @param  {number}  x
	         * @param  {number}  y
	         * @return {boolean}
	         */
	        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {
	            if (lineWidth === 0) {
	                return false;
	            }
	            var _l = lineWidth;
	            var _a = 0;
	            var _b = x0;
	            // Quick reject
	            if (
	                (y > y0 + _l && y > y1 + _l)
	                || (y < y0 - _l && y < y1 - _l)
	                || (x > x0 + _l && x > x1 + _l)
	                || (x < x0 - _l && x < x1 - _l)
	            ) {
	                return false;
	            }
	
	            if (x0 !== x1) {
	                _a = (y0 - y1) / (x0 - x1);
	                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;
	            }
	            else {
	                return Math.abs(x - x0) <= _l / 2;
	            }
	            var tmp = _a * x - y + _b;
	            var _s = tmp * tmp / (_a * _a + 1);
	            return _s <= _l / 2 * _l / 2;
	        }
	    };


/***/ },
/* 576 */
/*!****************************************!*\
  !*** ./~/zrender/lib/contain/cubic.js ***!
  \****************************************/
/***/ function(module, exports, __webpack_require__) {

	
	
	    var curve = __webpack_require__(/*! ../core/curve */ 572);
	
	    module.exports = {
	        /**
	         * 三次贝塞尔曲线描边包含判断
	         * @param  {number}  x0
	         * @param  {number}  y0
	         * @param  {number}  x1
	         * @param  {number}  y1
	         * @param  {number}  x2
	         * @param  {number}  y2
	         * @param  {number}  x3
	         * @param  {number}  y3
	         * @param  {number}  lineWidth
	         * @param  {number}  x
	         * @param  {number}  y
	         * @return {boolean}
	         */
	        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {
	            if (lineWidth === 0) {
	                return false;
	            }
	            var _l = lineWidth;
	            // Quick reject
	            if (
	                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)
	                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)
	                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)
	                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)
	            ) {
	                return false;
	            }
	            var d = curve.cubicProjectPoint(
	                x0, y0, x1, y1, x2, y2, x3, y3,
	                x, y, null
	            );
	            return d <= _l / 2;
	        }
	    };


/***/ },
/* 577 */
/*!********************************************!*\
  !*** ./~/zrender/lib/contain/quadratic.js ***!
  \********************************************/
/***/ function(module, exports, __webpack_require__) {

	
	
	    var curve = __webpack_require__(/*! ../core/curve */ 572);
	
	    module.exports = {
	        /**
	         * 二次贝塞尔曲线描边包含判断
	         * @param  {number}  x0
	         * @param  {number}  y0
	         * @param  {number}  x1
	         * @param  {number}  y1
	         * @param  {number}  x2
	         * @param  {number}  y2
	         * @param  {number}  lineWidth
	         * @param  {number}  x
	         * @param  {number}  y
	         * @return {boolean}
	         */
	        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {
	            if (lineWidth === 0) {
	                return false;
	            }
	            var _l = lineWidth;
	            // Quick reject
	            if (
	                (y > y0 + _l && y > y1 + _l && y > y2 + _l)
	                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)
	                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)
	                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)
	            ) {
	                return false;
	            }
	            var d = curve.quadraticProjectPoint(
	                x0, y0, x1, y1, x2, y2,
	                x, y, null
	            );
	            return d <= _l / 2;
	        }
	    };


/***/ },
/* 578 */
/*!**************************************!*\
  !*** ./~/zrender/lib/contain/arc.js ***!
  \**************************************/
/***/ function(module, exports, __webpack_require__) {

	
	
	    var normalizeRadian = __webpack_require__(/*! ./util */ 579).normalizeRadian;
	    var PI2 = Math.PI * 2;
	
	    module.exports = {
	        /**
	         * 圆弧描边包含判断
	         * @param  {number}  cx
	         * @param  {number}  cy
	         * @param  {number}  r
	         * @param  {number}  startAngle
	         * @param  {number}  endAngle
	         * @param  {boolean}  anticlockwise
	         * @param  {number} lineWidth
	         * @param  {number}  x
	         * @param  {number}  y
	         * @return {Boolean}
	         */
	        containStroke: function (
	            cx, cy, r, startAngle, endAngle, anticlockwise,
	            lineWidth, x, y
	        ) {
	
	            if (lineWidth === 0) {
	                return false;
	            }
	            var _l = lineWidth;
	
	            x -= cx;
	            y -= cy;
	            var d = Math.sqrt(x * x + y * y);
	
	            if ((d - _l > r) || (d + _l < r)) {
	                return false;
	            }
	            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {
	                // Is a circle
	                return true;
	            }
	            if (anticlockwise) {
	                var tmp = startAngle;
	                startAngle = normalizeRadian(endAngle);
	                endAngle = normalizeRadian(tmp);
	            } else {
	                startAngle = normalizeRadian(startAngle);
	                endAngle = normalizeRadian(endAngle);
	            }
	            if (startAngle > endAngle) {
	                endAngle += PI2;
	            }
	
	            var angle = Math.atan2(y, x);
	            if (angle < 0) {
	                angle += PI2;
	            }
	            return (angle >= startAngle && angle <= endAngle)
	                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);
	        }
	    };


/***/ },
/* 579 */
/*!***************************************!*\
  !*** ./~/zrender/lib/contain/util.js ***!
  \***************************************/
/***/ function(module, exports) {

	
	
	    var PI2 = Math.PI * 2;
	    module.exports = {
	        normalizeRadian: function(angle) {
	            angle %= PI2;
	            if (angle < 0) {
	                angle += PI2;
	            }
	            return angle;
	        }
	    };


/***/ },
/* 580 */
/*!**********************************************!*\
  !*** ./~/zrender/lib/contain/windingLine.js ***!
  \**********************************************/
/***/ function(module, exports) {

	
	    module.exports = function windingLine(x0, y0, x1, y1, x, y) {
	        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {
	            return 0;
	        }
	        // Ignore horizontal line
	        if (y1 === y0) {
	            return 0;
	        }
	        var dir = y1 < y0 ? 1 : -1;
	        var t = (y - y0) / (y1 - y0);
	
	        // Avoid winding error when intersection point is the connect point of two line of polygon
	        if (t === 1 || t === 0) {
	            dir = y1 < y0 ? 0.5 : -0.5;
	        }
	
	        var x_ = t * (x1 - x0) + x0;
	
	        return x_ > x ? dir : 0;
	    };


/***/ },
/* 581 */
/*!******************************************!*\
  !*** ./~/zrender/lib/graphic/Pattern.js ***!
  \******************************************/
/***/ function(module, exports) {

	
	
	    var Pattern = function (image, repeat) {
	        this.image = image;
	        this.repeat = repeat;
	
	        // Can be cloned
	        this.type = 'pattern';
	    };
	
	    Pattern.prototype.getCanvasPattern = function (ctx) {
	
	        return this._canvasPattern
	            || (this._canvasPattern = ctx.createPattern(this.image, this.repeat));
	    };
	
	    module.exports = Pattern;


/***/ },
/* 582 */
/*!*********************************************!*\
  !*** ./~/zrender/lib/tool/transformPath.js ***!
  \*********************************************/
/***/ function(module, exports, __webpack_require__) {

	
	
	    var CMD = __webpack_require__(/*! ../core/PathProxy */ 571).CMD;
	    var vec2 = __webpack_require__(/*! ../core/vector */ 532);
	    var v2ApplyTransform = vec2.applyTransform;
	
	    var points = [[], [], []];
	    var mathSqrt = Math.sqrt;
	    var mathAtan2 = Math.atan2;
	    function transformPath(path, m) {
	        var data = path.data;
	        var cmd;
	        var nPoint;
	        var i;
	        var j;
	        var k;
	        var p;
	
	        var M = CMD.M;
	        var C = CMD.C;
	        var L = CMD.L;
	        var R = CMD.R;
	        var A = CMD.A;
	        var Q = CMD.Q;
	
	        for (i = 0, j = 0; i < data.length;) {
	            cmd = data[i++];
	            j = i;
	            nPoint = 0;
	
	            switch (cmd) {
	                case M:
	                    nPoint = 1;
	                    break;
	                case L:
	                    nPoint = 1;
	                    break;
	                case C:
	                    nPoint = 3;
	                    break;
	                case Q:
	                    nPoint = 2;
	                    break;
	                case A:
	                    var x = m[4];
	                    var y = m[5];
	                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);
	                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);
	                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);
	                    // cx
	                    data[i++] += x;
	                    // cy
	                    data[i++] += y;
	                    // Scale rx and ry
	                    // FIXME Assume psi is 0 here
	                    data[i++] *= sx;
	                    data[i++] *= sy;
	
	                    // Start angle
	                    data[i++] += angle;
	                    // end angle
	                    data[i++] += angle;
	                    // FIXME psi
	                    i += 2;
	                    j = i;
	                    break;
	                case R:
	                    // x0, y0
	                    p[0] = data[i++];
	                    p[1] = data[i++];
	                    v2ApplyTransform(p, p, m);
	                    data[j++] = p[0];
	                    data[j++] = p[1];
	                    // x1, y1
	                    p[0] += data[i++];
	                    p[1] += data[i++];
	                    v2ApplyTransform(p, p, m);
	                    data[j++] = p[0];
	                    data[j++] = p[1];
	            }
	
	            for (k = 0; k < nPoint; k++) {
	                var p = points[k];
	                p[0] = data[i++];
	                p[1] = data[i++];
	
	                v2ApplyTransform(p, p, m);
	                // Write back
	                data[j++] = p[0];
	                data[j++] = p[1];
	            }
	        }
	    }
	
	    module.exports = transformPath;


/***/ },
/* 583 */
/*!*******************************************!*\
  !*** ./~/zrender/lib/graphic/Gradient.js ***!
  \*******************************************/
/***/ function(module, exports) {

	
	
	    /**
	     * @param {Array.<Object>} colorStops
	     */
	    var Gradient = function (colorStops) {
	
	        this.colorStops = colorStops || [];
	    };
	
	    Gradient.prototype = {
	
	        constructor: Gradient,
	
	        addColorStop: function (offset, color) {
	            this.colorStops.push({
	
	                offset: offset,
	
	                color: color
	            });
	        }
	    };
	
	    module.exports = Gradient;


/***/ },
/* 584 */
/*!****************************************!*\
  !*** ./~/zrender/lib/graphic/Image.js ***!
  \****************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Image element
	 * @module zrender/graphic/Image
	 */
	
	
	
	    var Displayable = __webpack_require__(/*! ./Displayable */ 568);
	    var BoundingRect = __webpack_require__(/*! ../core/BoundingRect */ 531);
	    var zrUtil = __webpack_require__(/*! ../core/util */ 526);
	
	    var LRU = __webpack_require__(/*! ../core/LRU */ 585);
	    var globalImageCache = new LRU(50);
	    /**
	     * @alias zrender/graphic/Image
	     * @extends module:zrender/graphic/Displayable
	     * @constructor
	     * @param {Object} opts
	     */
	    function ZImage(opts) {
	        Displayable.call(this, opts);
	    }
	
	    ZImage.prototype = {
	
	        constructor: ZImage,
	
	        type: 'image',
	
	        brush: function (ctx, prevEl) {
	            var style = this.style;
	            var src = style.image;
	            var image;
	
	            // Must bind each time
	            style.bind(ctx, this, prevEl);
	
	            // style.image is a url string
	            if (typeof src === 'string') {
	                image = this._image;
	            }
	            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas
	            else {
	                image = src;
	            }
	            // FIXME Case create many images with src
	            if (!image && src) {
	                // Try get from global image cache
	                var cachedImgObj = globalImageCache.get(src);
	                if (!cachedImgObj) {
	                    // Create a new image
	                    image = new Image();
	                    image.onload = function () {
	                        image.onload = null;
	                        for (var i = 0; i < cachedImgObj.pending.length; i++) {
	                            cachedImgObj.pending[i].dirty();
	                        }
	                    };
	                    cachedImgObj = {
	                        image: image,
	                        pending: [this]
	                    };
	                    image.src = src;
	                    globalImageCache.put(src, cachedImgObj);
	                    this._image = image;
	                    return;
	                }
	                else {
	                    image = cachedImgObj.image;
	                    this._image = image;
	                    // Image is not complete finish, add to pending list
	                    if (!image.width || !image.height) {
	                        cachedImgObj.pending.push(this);
	                        return;
	                    }
	                }
	            }
	
	            if (image) {
	                // 图片已经加载完成
	                // if (image.nodeName.toUpperCase() == 'IMG') {
	                //     if (!image.complete) {
	                //         return;
	                //     }
	                // }
	                // Else is canvas
	
	                var width = style.width || image.width;
	                var height = style.height || image.height;
	                var x = style.x || 0;
	                var y = style.y || 0;
	                // 图片加载失败
	                if (!image.width || !image.height) {
	                    return;
	                }
	
	                // 设置transform
	                this.setTransform(ctx);
	
	
	                if (style.sWidth && style.sHeight) {
	                    var sx = style.sx || 0;
	                    var sy = style.sy || 0;
	                    ctx.drawImage(
	                        image,
	                        sx, sy, style.sWidth, style.sHeight,
	                        x, y, width, height
	                    );
	                }
	                else if (style.sx && style.sy) {
	                    var sx = style.sx;
	                    var sy = style.sy;
	                    var sWidth = width - sx;
	                    var sHeight = height - sy;
	                    ctx.drawImage(
	                        image,
	                        sx, sy, sWidth, sHeight,
	                        x, y, width, height
	                    );
	                }
	                else {
	                    ctx.drawImage(image, x, y, width, height);
	                }
	
	                // 如果没设置宽和高的话自动根据图片宽高设置
	                if (style.width == null) {
	                    style.width = width;
	                }
	                if (style.height == null) {
	                    style.height = height;
	                }
	
	                this.restoreTransform(ctx);
	
	                // Draw rect text
	                if (style.text != null) {
	                    this.drawRectText(ctx, this.getBoundingRect());
	                }
	
	            }
	        },
	
	        getBoundingRect: function () {
	            var style = this.style;
	            if (! this._rect) {
	                this._rect = new BoundingRect(
	                    style.x || 0, style.y || 0, style.width || 0, style.height || 0
	                );
	            }
	            return this._rect;
	        }
	    };
	
	    zrUtil.inherits(ZImage, Displayable);
	
	    module.exports = ZImage;


/***/ },
/* 585 */
/*!***********************************!*\
  !*** ./~/zrender/lib/core/LRU.js ***!
  \***********************************/
/***/ function(module, exports) {

	// Simple LRU cache use doubly linked list
	// @module zrender/core/LRU
	
	
	    /**
	     * Simple double linked list. Compared with array, it has O(1) remove operation.
	     * @constructor
	     */
	    var LinkedList = function() {
	
	        /**
	         * @type {module:zrender/core/LRU~Entry}
	         */
	        this.head = null;
	
	        /**
	         * @type {module:zrender/core/LRU~Entry}
	         */
	        this.tail = null;
	
	        this._len = 0;
	    };
	
	    var linkedListProto = LinkedList.prototype;
	    /**
	     * Insert a new value at the tail
	     * @param  {} val
	     * @return {module:zrender/core/LRU~Entry}
	     */
	    linkedListProto.insert = function(val) {
	        var entry = new Entry(val);
	        this.insertEntry(entry);
	        return entry;
	    };
	
	    /**
	     * Insert an entry at the tail
	     * @param  {module:zrender/core/LRU~Entry} entry
	     */
	    linkedListProto.insertEntry = function(entry) {
	        if (!this.head) {
	            this.head = this.tail = entry;
	        }
	        else {
	            this.tail.next = entry;
	            entry.prev = this.tail;
	            this.tail = entry;
	        }
	        this._len++;
	    };
	
	    /**
	     * Remove entry.
	     * @param  {module:zrender/core/LRU~Entry} entry
	     */
	    linkedListProto.remove = function(entry) {
	        var prev = entry.prev;
	        var next = entry.next;
	        if (prev) {
	            prev.next = next;
	        }
	        else {
	            // Is head
	            this.head = next;
	        }
	        if (next) {
	            next.prev = prev;
	        }
	        else {
	            // Is tail
	            this.tail = prev;
	        }
	        entry.next = entry.prev = null;
	        this._len--;
	    };
	
	    /**
	     * @return {number}
	     */
	    linkedListProto.len = function() {
	        return this._len;
	    };
	
	    /**
	     * @constructor
	     * @param {} val
	     */
	    var Entry = function(val) {
	        /**
	         * @type {}
	         */
	        this.value = val;
	
	        /**
	         * @type {module:zrender/core/LRU~Entry}
	         */
	        this.next;
	
	        /**
	         * @type {module:zrender/core/LRU~Entry}
	         */
	        this.prev;
	    };
	
	    /**
	     * LRU Cache
	     * @constructor
	     * @alias module:zrender/core/LRU
	     */
	    var LRU = function(maxSize) {
	
	        this._list = new LinkedList();
	
	        this._map = {};
	
	        this._maxSize = maxSize || 10;
	    };
	
	    var LRUProto = LRU.prototype;
	
	    /**
	     * @param  {string} key
	     * @param  {} value
	     */
	    LRUProto.put = function(key, value) {
	        var list = this._list;
	        var map = this._map;
	        if (map[key] == null) {
	            var len = list.len();
	            if (len >= this._maxSize && len > 0) {
	                // Remove the least recently used
	                var leastUsedEntry = list.head;
	                list.remove(leastUsedEntry);
	                delete map[leastUsedEntry.key];
	            }
	
	            var entry = list.insert(value);
	            entry.key = key;
	            map[key] = entry;
	        }
	    };
	
	    /**
	     * @param  {string} key
	     * @return {}
	     */
	    LRUProto.get = function(key) {
	        var entry = this._map[key];
	        var list = this._list;
	        if (entry != null) {
	            // Put the latest used entry in the tail
	            if (entry !== list.tail) {
	                list.remove(entry);
	                list.insertEntry(entry);
	            }
	
	            return entry.value;
	        }
	    };
	
	    /**
	     * Clear the cache
	     */
	    LRUProto.clear = function() {
	        this._list.clear();
	        this._map = {};
	    };
	
	    module.exports = LRU;


/***/ },
/* 586 */
/*!***************************************!*\
  !*** ./~/zrender/lib/graphic/Text.js ***!
  \***************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Text element
	 * @module zrender/graphic/Text
	 *
	 * TODO Wrapping
	 *
	 * Text not support gradient
	 */
	
	
	
	    var Displayable = __webpack_require__(/*! ./Displayable */ 568);
	    var zrUtil = __webpack_require__(/*! ../core/util */ 526);
	    var textContain = __webpack_require__(/*! ../contain/text */ 530);
	
	    /**
	     * @alias zrender/graphic/Text
	     * @extends module:zrender/graphic/Displayable
	     * @constructor
	     * @param {Object} opts
	     */
	    var Text = function (opts) {
	        Displayable.call(this, opts);
	    };
	
	    Text.prototype = {
	
	        constructor: Text,
	
	        type: 'text',
	
	        brush: function (ctx, prevEl) {
	            var style = this.style;
	            var x = style.x || 0;
	            var y = style.y || 0;
	            // Convert to string
	            var text = style.text;
	
	            // Convert to string
	            text != null && (text += '');
	
	            // Always bind style
	            style.bind(ctx, this, prevEl);
	
	            if (text) {
	
	                this.setTransform(ctx);
	
	                var textBaseline;
	                var textAlign = style.textAlign;
	                var font = style.textFont || style.font;
	                if (style.textVerticalAlign) {
	                    var rect = textContain.getBoundingRect(
	                        text, font, style.textAlign, 'top'
	                    );
	                    // Ignore textBaseline
	                    textBaseline = 'middle';
	                    switch (style.textVerticalAlign) {
	                        case 'middle':
	                            y -= rect.height / 2 - rect.lineHeight / 2;
	                            break;
	                        case 'bottom':
	                            y -= rect.height - rect.lineHeight / 2;
	                            break;
	                        default:
	                            y += rect.lineHeight / 2;
	                    }
	                }
	                else {
	                    textBaseline = style.textBaseline;
	                }
	
	                ctx.font = font;
	                ctx.textAlign = textAlign || 'left';
	                // Use canvas default left textAlign. Giving invalid value will cause state not change
	                if (ctx.textAlign !== textAlign) {
	                    ctx.textAlign = 'left';
	                }
	                ctx.textBaseline = textBaseline || 'alphabetic';
	                // Use canvas default alphabetic baseline
	                if (ctx.textBaseline !== textBaseline) {
	                    ctx.textBaseline = 'alphabetic';
	                }
	
	                var lineHeight = textContain.measureText('国', ctx.font).width;
	
	                var textLines = text.split('\n');
	                for (var i = 0; i < textLines.length; i++) {
	                    style.hasFill() && ctx.fillText(textLines[i], x, y);
	                    style.hasStroke() && ctx.strokeText(textLines[i], x, y);
	                    y += lineHeight;
	                }
	
	                this.restoreTransform(ctx);
	            }
	        },
	
	        getBoundingRect: function () {
	            if (!this._rect) {
	                var style = this.style;
	                var textVerticalAlign = style.textVerticalAlign;
	                var rect = textContain.getBoundingRect(
	                    style.text + '', style.textFont || style.font, style.textAlign,
	                    textVerticalAlign ? 'top' : style.textBaseline
	                );
	                switch (textVerticalAlign) {
	                    case 'middle':
	                        rect.y -= rect.height / 2;
	                        break;
	                    case 'bottom':
	                        rect.y -= rect.height;
	                        break;
	                }
	                rect.x += style.x || 0;
	                rect.y += style.y || 0;
	                this._rect = rect;
	            }
	            return this._rect;
	        }
	    };
	
	    zrUtil.inherits(Text, Displayable);
	
	    module.exports = Text;


/***/ },
/* 587 */
/*!***********************************************!*\
  !*** ./~/zrender/lib/graphic/shape/Circle.js ***!
  \***********************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	/**
	 * 圆形
	 * @module zrender/shape/Circle
	 */
	
	
	
	    module.exports = __webpack_require__(/*! ../Path */ 567).extend({
	
	        type: 'circle',
	
	        shape: {
	            cx: 0,
	            cy: 0,
	            r: 0
	        },
	
	
	        buildPath : function (ctx, shape, inBundle) {
	            // Better stroking in ShapeBundle
	            // Always do it may have performence issue ( fill may be 2x more cost)
	            if (inBundle) {
	                ctx.moveTo(shape.cx + shape.r, shape.cy);
	            }
	            // Better stroking in ShapeBundle
	            // ctx.moveTo(shape.cx + shape.r, shape.cy);
	            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);
	        }
	    });
	


/***/ },
/* 588 */
/*!***********************************************!*\
  !*** ./~/zrender/lib/graphic/shape/Sector.js ***!
  \***********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * 扇形
	 * @module zrender/graphic/shape/Sector
	 */
	
	// FIXME clockwise seems wrong
	
	
	    module.exports = __webpack_require__(/*! ../Path */ 567).extend({
	
	        type: 'sector',
	
	        shape: {
	
	            cx: 0,
	
	            cy: 0,
	
	            r0: 0,
	
	            r: 0,
	
	            startAngle: 0,
	
	            endAngle: Math.PI * 2,
	
	            clockwise: true
	        },
	
	        buildPath: function (ctx, shape) {
	
	            var x = shape.cx;
	            var y = shape.cy;
	            var r0 = Math.max(shape.r0 || 0, 0);
	            var r = Math.max(shape.r, 0);
	            var startAngle = shape.startAngle;
	            var endAngle = shape.endAngle;
	            var clockwise = shape.clockwise;
	
	            var unitX = Math.cos(startAngle);
	            var unitY = Math.sin(startAngle);
	
	            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);
	
	            ctx.lineTo(unitX * r + x, unitY * r + y);
	
	            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);
	
	            ctx.lineTo(
	                Math.cos(endAngle) * r0 + x,
	                Math.sin(endAngle) * r0 + y
	            );
	
	            if (r0 !== 0) {
	                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);
	            }
	
	            ctx.closePath();
	        }
	    });
	


/***/ },
/* 589 */
/*!*********************************************!*\
  !*** ./~/zrender/lib/graphic/shape/Ring.js ***!
  \*********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * 圆环
	 * @module zrender/graphic/shape/Ring
	 */
	
	
	    module.exports = __webpack_require__(/*! ../Path */ 567).extend({
	
	        type: 'ring',
	
	        shape: {
	            cx: 0,
	            cy: 0,
	            r: 0,
	            r0: 0
	        },
	
	        buildPath: function (ctx, shape) {
	            var x = shape.cx;
	            var y = shape.cy;
	            var PI2 = Math.PI * 2;
	            ctx.moveTo(x + shape.r, y);
	            ctx.arc(x, y, shape.r, 0, PI2, false);
	            ctx.moveTo(x + shape.r0, y);
	            ctx.arc(x, y, shape.r0, 0, PI2, true);
	        }
	    });
	


/***/ },
/* 590 */
/*!************************************************!*\
  !*** ./~/zrender/lib/graphic/shape/Polygon.js ***!
  \************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * 多边形
	 * @module zrender/shape/Polygon
	 */
	
	
	    var polyHelper = __webpack_require__(/*! ../helper/poly */ 591);
	
	    module.exports = __webpack_require__(/*! ../Path */ 567).extend({
	        
	        type: 'polygon',
	
	        shape: {
	            points: null,
	
	            smooth: false,
	
	            smoothConstraint: null
	        },
	
	        buildPath: function (ctx, shape) {
	            polyHelper.buildPath(ctx, shape, true);
	        }
	    });


/***/ },
/* 591 */
/*!**********************************************!*\
  !*** ./~/zrender/lib/graphic/helper/poly.js ***!
  \**********************************************/
/***/ function(module, exports, __webpack_require__) {

	
	
	    var smoothSpline = __webpack_require__(/*! ./smoothSpline */ 592);
	    var smoothBezier = __webpack_require__(/*! ./smoothBezier */ 593);
	
	    module.exports = {
	        buildPath: function (ctx, shape, closePath) {
	            var points = shape.points;
	            var smooth = shape.smooth;
	            if (points && points.length >= 2) {
	                if (smooth && smooth !== 'spline') {
	                    var controlPoints = smoothBezier(
	                        points, smooth, closePath, shape.smoothConstraint
	                    );
	
	                    ctx.moveTo(points[0][0], points[0][1]);
	                    var len = points.length;
	                    for (var i = 0; i < (closePath ? len : len - 1); i++) {
	                        var cp1 = controlPoints[i * 2];
	                        var cp2 = controlPoints[i * 2 + 1];
	                        var p = points[(i + 1) % len];
	                        ctx.bezierCurveTo(
	                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]
	                        );
	                    }
	                }
	                else {
	                    if (smooth === 'spline') {
	                        points = smoothSpline(points, closePath);
	                    }
	
	                    ctx.moveTo(points[0][0], points[0][1]);
	                    for (var i = 1, l = points.length; i < l; i++) {
	                        ctx.lineTo(points[i][0], points[i][1]);
	                    }
	                }
	
	                closePath && ctx.closePath();
	            }
	        }
	    };


/***/ },
/* 592 */
/*!******************************************************!*\
  !*** ./~/zrender/lib/graphic/helper/smoothSpline.js ***!
  \******************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Catmull-Rom spline 插值折线
	 * @module zrender/shape/util/smoothSpline
	 * @author pissang (https://www.github.com/pissang)
	 *         Kener (@Kener-林峰, kener.linfeng@gmail.com)
	 *         errorrik (errorrik@gmail.com)
	 */
	
	    var vec2 = __webpack_require__(/*! ../../core/vector */ 532);
	
	    /**
	     * @inner
	     */
	    function interpolate(p0, p1, p2, p3, t, t2, t3) {
	        var v0 = (p2 - p0) * 0.5;
	        var v1 = (p3 - p1) * 0.5;
	        return (2 * (p1 - p2) + v0 + v1) * t3
	                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2
	                + v0 * t + p1;
	    }
	
	    /**
	     * @alias module:zrender/shape/util/smoothSpline
	     * @param {Array} points 线段顶点数组
	     * @param {boolean} isLoop
	     * @return {Array}
	     */
	    module.exports = function (points, isLoop) {
	        var len = points.length;
	        var ret = [];
	
	        var distance = 0;
	        for (var i = 1; i < len; i++) {
	            distance += vec2.distance(points[i - 1], points[i]);
	        }
	
	        var segs = distance / 2;
	        segs = segs < len ? len : segs;
	        for (var i = 0; i < segs; i++) {
	            var pos = i / (segs - 1) * (isLoop ? len : len - 1);
	            var idx = Math.floor(pos);
	
	            var w = pos - idx;
	
	            var p0;
	            var p1 = points[idx % len];
	            var p2;
	            var p3;
	            if (!isLoop) {
	                p0 = points[idx === 0 ? idx : idx - 1];
	                p2 = points[idx > len - 2 ? len - 1 : idx + 1];
	                p3 = points[idx > len - 3 ? len - 1 : idx + 2];
	            }
	            else {
	                p0 = points[(idx - 1 + len) % len];
	                p2 = points[(idx + 1) % len];
	                p3 = points[(idx + 2) % len];
	            }
	
	            var w2 = w * w;
	            var w3 = w * w2;
	
	            ret.push([
	                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),
	                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)
	            ]);
	        }
	        return ret;
	    };
	


/***/ },
/* 593 */
/*!******************************************************!*\
  !*** ./~/zrender/lib/graphic/helper/smoothBezier.js ***!
  \******************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * 贝塞尔平滑曲线
	 * @module zrender/shape/util/smoothBezier
	 * @author pissang (https://www.github.com/pissang)
	 *         Kener (@Kener-林峰, kener.linfeng@gmail.com)
	 *         errorrik (errorrik@gmail.com)
	 */
	
	
	    var vec2 = __webpack_require__(/*! ../../core/vector */ 532);
	    var v2Min = vec2.min;
	    var v2Max = vec2.max;
	    var v2Scale = vec2.scale;
	    var v2Distance = vec2.distance;
	    var v2Add = vec2.add;
	
	    /**
	     * 贝塞尔平滑曲线
	     * @alias module:zrender/shape/util/smoothBezier
	     * @param {Array} points 线段顶点数组
	     * @param {number} smooth 平滑等级, 0-1
	     * @param {boolean} isLoop
	     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内
	     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与
	     *                           整个折线的包围盒做一个并集用来约束控制点。
	     * @param {Array} 计算出来的控制点数组
	     */
	    module.exports = function (points, smooth, isLoop, constraint) {
	        var cps = [];
	
	        var v = [];
	        var v1 = [];
	        var v2 = [];
	        var prevPoint;
	        var nextPoint;
	
	        var min, max;
	        if (constraint) {
	            min = [Infinity, Infinity];
	            max = [-Infinity, -Infinity];
	            for (var i = 0, len = points.length; i < len; i++) {
	                v2Min(min, min, points[i]);
	                v2Max(max, max, points[i]);
	            }
	            // 与指定的包围盒做并集
	            v2Min(min, min, constraint[0]);
	            v2Max(max, max, constraint[1]);
	        }
	
	        for (var i = 0, len = points.length; i < len; i++) {
	            var point = points[i];
	
	            if (isLoop) {
	                prevPoint = points[i ? i - 1 : len - 1];
	                nextPoint = points[(i + 1) % len];
	            }
	            else {
	                if (i === 0 || i === len - 1) {
	                    cps.push(vec2.clone(points[i]));
	                    continue;
	                }
	                else {
	                    prevPoint = points[i - 1];
	                    nextPoint = points[i + 1];
	                }
	            }
	
	            vec2.sub(v, nextPoint, prevPoint);
	
	            // use degree to scale the handle length
	            v2Scale(v, v, smooth);
	
	            var d0 = v2Distance(point, prevPoint);
	            var d1 = v2Distance(point, nextPoint);
	            var sum = d0 + d1;
	            if (sum !== 0) {
	                d0 /= sum;
	                d1 /= sum;
	            }
	
	            v2Scale(v1, v, -d0);
	            v2Scale(v2, v, d1);
	            var cp0 = v2Add([], point, v1);
	            var cp1 = v2Add([], point, v2);
	            if (constraint) {
	                v2Max(cp0, cp0, min);
	                v2Min(cp0, cp0, max);
	                v2Max(cp1, cp1, min);
	                v2Min(cp1, cp1, max);
	            }
	            cps.push(cp0);
	            cps.push(cp1);
	        }
	
	        if (isLoop) {
	            cps.push(cps.shift());
	        }
	
	        return cps;
	    };
	


/***/ },
/* 594 */
/*!*************************************************!*\
  !*** ./~/zrender/lib/graphic/shape/Polyline.js ***!
  \*************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * @module zrender/graphic/shape/Polyline
	 */
	
	
	    var polyHelper = __webpack_require__(/*! ../helper/poly */ 591);
	
	    module.exports = __webpack_require__(/*! ../Path */ 567).extend({
	        
	        type: 'polyline',
	
	        shape: {
	            points: null,
	
	            smooth: false,
	
	            smoothConstraint: null
	        },
	
	        style: {
	            stroke: '#000',
	
	            fill: null
	        },
	
	        buildPath: function (ctx, shape) {
	            polyHelper.buildPath(ctx, shape, false);
	        }
	    });


/***/ },
/* 595 */
/*!*********************************************!*\
  !*** ./~/zrender/lib/graphic/shape/Rect.js ***!
  \*********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * 矩形
	 * @module zrender/graphic/shape/Rect
	 */
	
	
	    var roundRectHelper = __webpack_require__(/*! ../helper/roundRect */ 596);
	
	    module.exports = __webpack_require__(/*! ../Path */ 567).extend({
	
	        type: 'rect',
	
	        shape: {
	            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4
	            // r缩写为1         相当于 [1, 1, 1, 1]
	            // r缩写为[1]       相当于 [1, 1, 1, 1]
	            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]
	            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]
	            r: 0,
	
	            x: 0,
	            y: 0,
	            width: 0,
	            height: 0
	        },
	
	        buildPath: function (ctx, shape) {
	            var x = shape.x;
	            var y = shape.y;
	            var width = shape.width;
	            var height = shape.height;
	            if (!shape.r) {
	                ctx.rect(x, y, width, height);
	            }
	            else {
	                roundRectHelper.buildPath(ctx, shape);
	            }
	            ctx.closePath();
	            return;
	        }
	    });
	


/***/ },
/* 596 */
/*!***************************************************!*\
  !*** ./~/zrender/lib/graphic/helper/roundRect.js ***!
  \***************************************************/
/***/ function(module, exports) {

	
	
	    module.exports = {
	        buildPath: function (ctx, shape) {
	            var x = shape.x;
	            var y = shape.y;
	            var width = shape.width;
	            var height = shape.height;
	            var r = shape.r;
	            var r1;
	            var r2;
	            var r3;
	            var r4;
	
	            // Convert width and height to positive for better borderRadius
	            if (width < 0) {
	                x = x + width;
	                width = -width;
	            }
	            if (height < 0) {
	                y = y + height;
	                height = -height;
	            }
	
	            if (typeof r === 'number') {
	                r1 = r2 = r3 = r4 = r;
	            }
	            else if (r instanceof Array) {
	                if (r.length === 1) {
	                    r1 = r2 = r3 = r4 = r[0];
	                }
	                else if (r.length === 2) {
	                    r1 = r3 = r[0];
	                    r2 = r4 = r[1];
	                }
	                else if (r.length === 3) {
	                    r1 = r[0];
	                    r2 = r4 = r[1];
	                    r3 = r[2];
	                }
	                else {
	                    r1 = r[0];
	                    r2 = r[1];
	                    r3 = r[2];
	                    r4 = r[3];
	                }
	            }
	            else {
	                r1 = r2 = r3 = r4 = 0;
	            }
	
	            var total;
	            if (r1 + r2 > width) {
	                total = r1 + r2;
	                r1 *= width / total;
	                r2 *= width / total;
	            }
	            if (r3 + r4 > width) {
	                total = r3 + r4;
	                r3 *= width / total;
	                r4 *= width / total;
	            }
	            if (r2 + r3 > height) {
	                total = r2 + r3;
	                r2 *= height / total;
	                r3 *= height / total;
	            }
	            if (r1 + r4 > height) {
	                total = r1 + r4;
	                r1 *= height / total;
	                r4 *= height / total;
	            }
	            ctx.moveTo(x + r1, y);
	            ctx.lineTo(x + width - r2, y);
	            r2 !== 0 && ctx.quadraticCurveTo(
	                x + width, y, x + width, y + r2
	            );
	            ctx.lineTo(x + width, y + height - r3);
	            r3 !== 0 && ctx.quadraticCurveTo(
	                x + width, y + height, x + width - r3, y + height
	            );
	            ctx.lineTo(x + r4, y + height);
	            r4 !== 0 && ctx.quadraticCurveTo(
	                x, y + height, x, y + height - r4
	            );
	            ctx.lineTo(x, y + r1);
	            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);
	        }
	    };


/***/ },
/* 597 */
/*!*********************************************!*\
  !*** ./~/zrender/lib/graphic/shape/Line.js ***!
  \*********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * 直线
	 * @module zrender/graphic/shape/Line
	 */
	
	    module.exports = __webpack_require__(/*! ../Path */ 567).extend({
	
	        type: 'line',
	
	        shape: {
	            // Start point
	            x1: 0,
	            y1: 0,
	            // End point
	            x2: 0,
	            y2: 0,
	
	            percent: 1
	        },
	
	        style: {
	            stroke: '#000',
	            fill: null
	        },
	
	        buildPath: function (ctx, shape) {
	            var x1 = shape.x1;
	            var y1 = shape.y1;
	            var x2 = shape.x2;
	            var y2 = shape.y2;
	            var percent = shape.percent;
	
	            if (percent === 0) {
	                return;
	            }
	
	            ctx.moveTo(x1, y1);
	
	            if (percent < 1) {
	                x2 = x1 * (1 - percent) + x2 * percent;
	                y2 = y1 * (1 - percent) + y2 * percent;
	            }
	            ctx.lineTo(x2, y2);
	        },
	
	        /**
	         * Get point at percent
	         * @param  {number} percent
	         * @return {Array.<number>}
	         */
	        pointAt: function (p) {
	            var shape = this.shape;
	            return [
	                shape.x1 * (1 - p) + shape.x2 * p,
	                shape.y1 * (1 - p) + shape.y2 * p
	            ];
	        }
	    });
	


/***/ },
/* 598 */
/*!****************************************************!*\
  !*** ./~/zrender/lib/graphic/shape/BezierCurve.js ***!
  \****************************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	/**
	 * 贝塞尔曲线
	 * @module zrender/shape/BezierCurve
	 */
	
	
	    var curveTool = __webpack_require__(/*! ../../core/curve */ 572);
	    var vec2 = __webpack_require__(/*! ../../core/vector */ 532);
	    var quadraticSubdivide = curveTool.quadraticSubdivide;
	    var cubicSubdivide = curveTool.cubicSubdivide;
	    var quadraticAt = curveTool.quadraticAt;
	    var cubicAt = curveTool.cubicAt;
	    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;
	    var cubicDerivativeAt = curveTool.cubicDerivativeAt;
	
	    var out = [];
	
	    function someVectorAt(shape, t, isTangent) {
	        var cpx2 = shape.cpx2;
	        var cpy2 = shape.cpy2;
	        if (cpx2 === null || cpy2 === null) {
	            return [
	                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),
	                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)
	            ];
	        }
	        else {
	            return [
	                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),
	                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)
	            ];
	        }
	    }
	    module.exports = __webpack_require__(/*! ../Path */ 567).extend({
	
	        type: 'bezier-curve',
	
	        shape: {
	            x1: 0,
	            y1: 0,
	            x2: 0,
	            y2: 0,
	            cpx1: 0,
	            cpy1: 0,
	            // cpx2: 0,
	            // cpy2: 0
	
	            // Curve show percent, for animating
	            percent: 1
	        },
	
	        style: {
	            stroke: '#000',
	            fill: null
	        },
	
	        buildPath: function (ctx, shape) {
	            var x1 = shape.x1;
	            var y1 = shape.y1;
	            var x2 = shape.x2;
	            var y2 = shape.y2;
	            var cpx1 = shape.cpx1;
	            var cpy1 = shape.cpy1;
	            var cpx2 = shape.cpx2;
	            var cpy2 = shape.cpy2;
	            var percent = shape.percent;
	            if (percent === 0) {
	                return;
	            }
	
	            ctx.moveTo(x1, y1);
	
	            if (cpx2 == null || cpy2 == null) {
	                if (percent < 1) {
	                    quadraticSubdivide(
	                        x1, cpx1, x2, percent, out
	                    );
	                    cpx1 = out[1];
	                    x2 = out[2];
	                    quadraticSubdivide(
	                        y1, cpy1, y2, percent, out
	                    );
	                    cpy1 = out[1];
	                    y2 = out[2];
	                }
	
	                ctx.quadraticCurveTo(
	                    cpx1, cpy1,
	                    x2, y2
	                );
	            }
	            else {
	                if (percent < 1) {
	                    cubicSubdivide(
	                        x1, cpx1, cpx2, x2, percent, out
	                    );
	                    cpx1 = out[1];
	                    cpx2 = out[2];
	                    x2 = out[3];
	                    cubicSubdivide(
	                        y1, cpy1, cpy2, y2, percent, out
	                    );
	                    cpy1 = out[1];
	                    cpy2 = out[2];
	                    y2 = out[3];
	                }
	                ctx.bezierCurveTo(
	                    cpx1, cpy1,
	                    cpx2, cpy2,
	                    x2, y2
	                );
	            }
	        },
	
	        /**
	         * Get point at percent
	         * @param  {number} t
	         * @return {Array.<number>}
	         */
	        pointAt: function (t) {
	            return someVectorAt(this.shape, t, false);
	        },
	
	        /**
	         * Get tangent at percent
	         * @param  {number} t
	         * @return {Array.<number>}
	         */
	        tangentAt: function (t) {
	            var p = someVectorAt(this.shape, t, true);
	            return vec2.normalize(p, p);
	        }
	    });
	


/***/ },
/* 599 */
/*!********************************************!*\
  !*** ./~/zrender/lib/graphic/shape/Arc.js ***!
  \********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * 圆弧
	 * @module zrender/graphic/shape/Arc
	 */
	 
	
	    module.exports = __webpack_require__(/*! ../Path */ 567).extend({
	
	        type: 'arc',
	
	        shape: {
	
	            cx: 0,
	
	            cy: 0,
	
	            r: 0,
	
	            startAngle: 0,
	
	            endAngle: Math.PI * 2,
	
	            clockwise: true
	        },
	
	        style: {
	
	            stroke: '#000',
	
	            fill: null
	        },
	
	        buildPath: function (ctx, shape) {
	
	            var x = shape.cx;
	            var y = shape.cy;
	            var r = Math.max(shape.r, 0);
	            var startAngle = shape.startAngle;
	            var endAngle = shape.endAngle;
	            var clockwise = shape.clockwise;
	
	            var unitX = Math.cos(startAngle);
	            var unitY = Math.sin(startAngle);
	
	            ctx.moveTo(unitX * r + x, unitY * r + y);
	            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);
	        }
	    });


/***/ },
/* 600 */
/*!***********************************************!*\
  !*** ./~/zrender/lib/graphic/CompoundPath.js ***!
  \***********************************************/
/***/ function(module, exports, __webpack_require__) {

	// CompoundPath to improve performance
	
	
	    var Path = __webpack_require__(/*! ./Path */ 567);
	    module.exports = Path.extend({
	
	        type: 'compound',
	
	        shape: {
	
	            paths: null
	        },
	
	        _updatePathDirty: function () {
	            var dirtyPath = this.__dirtyPath;
	            var paths = this.shape.paths;
	            for (var i = 0; i < paths.length; i++) {
	                // Mark as dirty if any subpath is dirty
	                dirtyPath = dirtyPath || paths[i].__dirtyPath;
	            }
	            this.__dirtyPath = dirtyPath;
	            this.__dirty = this.__dirty || dirtyPath;
	        },
	
	        beforeBrush: function () {
	            this._updatePathDirty();
	            var paths = this.shape.paths || [];
	            var scale = this.getGlobalScale();
	            // Update path scale
	            for (var i = 0; i < paths.length; i++) {
	                paths[i].path.setScale(scale[0], scale[1]);
	            }
	        },
	
	        buildPath: function (ctx, shape) {
	            var paths = shape.paths || [];
	            for (var i = 0; i < paths.length; i++) {
	                paths[i].buildPath(ctx, paths[i].shape, true);
	            }
	        },
	
	        afterBrush: function () {
	            var paths = this.shape.paths;
	            for (var i = 0; i < paths.length; i++) {
	                paths[i].__dirtyPath = false;
	            }
	        },
	
	        getBoundingRect: function () {
	            this._updatePathDirty();
	            return Path.prototype.getBoundingRect.call(this);
	        }
	    });


/***/ },
/* 601 */
/*!*************************************************!*\
  !*** ./~/zrender/lib/graphic/LinearGradient.js ***!
  \*************************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	
	    var zrUtil = __webpack_require__(/*! ../core/util */ 526);
	
	    var Gradient = __webpack_require__(/*! ./Gradient */ 583);
	
	    /**
	     * x, y, x2, y2 are all percent from 0 to 1
	     * @param {number} [x=0]
	     * @param {number} [y=0]
	     * @param {number} [x2=1]
	     * @param {number} [y2=0]
	     * @param {Array.<Object>} colorStops
	     * @param {boolean} [globalCoord=false]
	     */
	    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {
	        this.x = x == null ? 0 : x;
	
	        this.y = y == null ? 0 : y;
	
	        this.x2 = x2 == null ? 1 : x2;
	
	        this.y2 = y2 == null ? 0 : y2;
	
	        // Can be cloned
	        this.type = 'linear';
	
	        // If use global coord
	        this.global = globalCoord || false;
	
	        Gradient.call(this, colorStops);
	    };
	
	    LinearGradient.prototype = {
	
	        constructor: LinearGradient
	    };
	
	    zrUtil.inherits(LinearGradient, Gradient);
	
	    module.exports = LinearGradient;


/***/ },
/* 602 */
/*!*************************************************!*\
  !*** ./~/zrender/lib/graphic/RadialGradient.js ***!
  \*************************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	
	    var zrUtil = __webpack_require__(/*! ../core/util */ 526);
	
	    var Gradient = __webpack_require__(/*! ./Gradient */ 583);
	
	    /**
	     * x, y, r are all percent from 0 to 1
	     * @param {number} [x=0.5]
	     * @param {number} [y=0.5]
	     * @param {number} [r=0.5]
	     * @param {Array.<Object>} [colorStops]
	     * @param {boolean} [globalCoord=false]
	     */
	    var RadialGradient = function (x, y, r, colorStops, globalCoord) {
	        this.x = x == null ? 0.5 : x;
	
	        this.y = y == null ? 0.5 : y;
	
	        this.r = r == null ? 0.5 : r;
	
	        // Can be cloned
	        this.type = 'radial';
	
	        // If use global coord
	        this.global = globalCoord || false;
	
	        Gradient.call(this, colorStops);
	    };
	
	    RadialGradient.prototype = {
	
	        constructor: RadialGradient
	    };
	
	    zrUtil.inherits(RadialGradient, Gradient);
	
	    module.exports = RadialGradient;


/***/ },
/* 603 */
/*!**********************************!*\
  !*** ./~/zrender/lib/zrender.js ***!
  \**********************************/
/***/ function(module, exports, __webpack_require__) {

	/*!
	 * ZRender, a high performance 2d drawing library.
	 *
	 * Copyright (c) 2013, Baidu Inc.
	 * All rights reserved.
	 *
	 * LICENSE
	 * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt
	 */
	// Global defines
	
	    var guid = __webpack_require__(/*! ./core/guid */ 554);
	    var env = __webpack_require__(/*! ./core/env */ 524);
	
	    var Handler = __webpack_require__(/*! ./Handler */ 604);
	    var Storage = __webpack_require__(/*! ./Storage */ 606);
	    var Animation = __webpack_require__(/*! ./animation/Animation */ 608);
	    var HandlerProxy = __webpack_require__(/*! ./dom/HandlerProxy */ 611);
	
	    var useVML = !env.canvasSupported;
	
	    var painterCtors = {
	        canvas: __webpack_require__(/*! ./Painter */ 613)
	    };
	
	    var instances = {};    // ZRender实例map索引
	
	    var zrender = {};
	    /**
	     * @type {string}
	     */
	    zrender.version = '3.1.2';
	
	    /**
	     * Initializing a zrender instance
	     * @param {HTMLElement} dom
	     * @param {Object} opts
	     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'
	     * @param {number} [opts.devicePixelRatio]
	     * @return {module:zrender/ZRender}
	     */
	    zrender.init = function(dom, opts) {
	        var zr = new ZRender(guid(), dom, opts);
	        instances[zr.id] = zr;
	        return zr;
	    };
	
	    /**
	     * Dispose zrender instance
	     * @param {module:zrender/ZRender} zr
	     */
	    zrender.dispose = function (zr) {
	        if (zr) {
	            zr.dispose();
	        }
	        else {
	            for (var key in instances) {
	                instances[key].dispose();
	            }
	            instances = {};
	        }
	
	        return zrender;
	    };
	
	    /**
	     * Get zrender instance by id
	     * @param {string} id zrender instance id
	     * @return {module:zrender/ZRender}
	     */
	    zrender.getInstance = function (id) {
	        return instances[id];
	    };
	
	    zrender.registerPainter = function (name, Ctor) {
	        painterCtors[name] = Ctor;
	    };
	
	    function delInstance(id) {
	        delete instances[id];
	    }
	
	    /**
	     * @module zrender/ZRender
	     */
	    /**
	     * @constructor
	     * @alias module:zrender/ZRender
	     * @param {string} id
	     * @param {HTMLDomElement} dom
	     * @param {Object} opts
	     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'
	     * @param {number} [opts.devicePixelRatio]
	     */
	    var ZRender = function(id, dom, opts) {
	
	        opts = opts || {};
	
	        /**
	         * @type {HTMLDomElement}
	         */
	        this.dom = dom;
	
	        /**
	         * @type {string}
	         */
	        this.id = id;
	
	        var self = this;
	        var storage = new Storage();
	
	        var rendererType = opts.renderer;
	        if (useVML) {
	            if (!painterCtors.vml) {
	                throw new Error('You need to require \'zrender/vml/vml\' to support IE8');
	            }
	            rendererType = 'vml';
	        }
	        else if (!rendererType || !painterCtors[rendererType]) {
	            rendererType = 'canvas';
	        }
	        var painter = new painterCtors[rendererType](dom, storage, opts);
	
	        this.storage = storage;
	        this.painter = painter;
	
	        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;
	        this.handler = new Handler(storage, painter, handerProxy);
	
	        /**
	         * @type {module:zrender/animation/Animation}
	         */
	        this.animation = new Animation({
	            stage: {
	                update: function () {
	                    if (self._needsRefresh) {
	                        self.refreshImmediately();
	                    }
	                    if (self._needsRefreshHover) {
	                        self.refreshHoverImmediately();
	                    }
	                }
	            }
	        });
	        this.animation.start();
	
	        /**
	         * @type {boolean}
	         * @private
	         */
	        this._needsRefresh;
	
	        // 修改 storage.delFromMap, 每次删除元素之前删除动画
	        // FIXME 有点ugly
	        var oldDelFromMap = storage.delFromMap;
	        var oldAddToMap = storage.addToMap;
	
	        storage.delFromMap = function (elId) {
	            var el = storage.get(elId);
	
	            oldDelFromMap.call(storage, elId);
	
	            el && el.removeSelfFromZr(self);
	        };
	
	        storage.addToMap = function (el) {
	            oldAddToMap.call(storage, el);
	
	            el.addSelfToZr(self);
	        };
	    };
	
	    ZRender.prototype = {
	
	        constructor: ZRender,
	        /**
	         * 获取实例唯一标识
	         * @return {string}
	         */
	        getId: function () {
	            return this.id;
	        },
	
	        /**
	         * 添加元素
	         * @param  {module:zrender/Element} el
	         */
	        add: function (el) {
	            this.storage.addRoot(el);
	            this._needsRefresh = true;
	        },
	
	        /**
	         * 删除元素
	         * @param  {module:zrender/Element} el
	         */
	        remove: function (el) {
	            this.storage.delRoot(el);
	            this._needsRefresh = true;
	        },
	
	        /**
	         * Change configuration of layer
	         * @param {string} zLevel
	         * @param {Object} config
	         * @param {string} [config.clearColor=0] Clear color
	         * @param {string} [config.motionBlur=false] If enable motion blur
	         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer
	        */
	        configLayer: function (zLevel, config) {
	            this.painter.configLayer(zLevel, config);
	            this._needsRefresh = true;
	        },
	
	        /**
	         * Repaint the canvas immediately
	         */
	        refreshImmediately: function () {
	            // Clear needsRefresh ahead to avoid something wrong happens in refresh
	            // Or it will cause zrender refreshes again and again.
	            this._needsRefresh = false;
	            this.painter.refresh();
	            /**
	             * Avoid trigger zr.refresh in Element#beforeUpdate hook
	             */
	            this._needsRefresh = false;
	        },
	
	        /**
	         * Mark and repaint the canvas in the next frame of browser
	         */
	        refresh: function() {
	            this._needsRefresh = true;
	        },
	
	        /**
	         * Add element to hover layer
	         * @param  {module:zrender/Element} el
	         * @param {Object} style
	         */
	        addHover: function (el, style) {
	            if (this.painter.addHover) {
	                this.painter.addHover(el, style);
	                this.refreshHover();
	            }
	        },
	
	        /**
	         * Add element from hover layer
	         * @param  {module:zrender/Element} el
	         */
	        removeHover: function (el) {
	            if (this.painter.removeHover) {
	                this.painter.removeHover(el);
	                this.refreshHover();
	            }
	        },
	
	        /**
	         * Clear all hover elements in hover layer
	         * @param  {module:zrender/Element} el
	         */
	        clearHover: function () {
	            if (this.painter.clearHover) {
	                this.painter.clearHover();
	                this.refreshHover();
	            }
	        },
	
	        /**
	         * Refresh hover in next frame
	         */
	        refreshHover: function () {
	            this._needsRefreshHover = true;
	        },
	
	        /**
	         * Refresh hover immediately
	         */
	        refreshHoverImmediately: function () {
	            this._needsRefreshHover = false;
	            this.painter.refreshHover && this.painter.refreshHover();
	        },
	
	        /**
	         * Resize the canvas.
	         * Should be invoked when container size is changed
	         */
	        resize: function() {
	            this.painter.resize();
	            this.handler.resize();
	        },
	
	        /**
	         * Stop and clear all animation immediately
	         */
	        clearAnimation: function () {
	            this.animation.clear();
	        },
	
	        /**
	         * Get container width
	         */
	        getWidth: function() {
	            return this.painter.getWidth();
	        },
	
	        /**
	         * Get container height
	         */
	        getHeight: function() {
	            return this.painter.getHeight();
	        },
	
	        /**
	         * Export the canvas as Base64 URL
	         * @param {string} type
	         * @param {string} [backgroundColor='#fff']
	         * @return {string} Base64 URL
	         */
	        // toDataURL: function(type, backgroundColor) {
	        //     return this.painter.getRenderedCanvas({
	        //         backgroundColor: backgroundColor
	        //     }).toDataURL(type);
	        // },
	
	        /**
	         * Converting a path to image.
	         * It has much better performance of drawing image rather than drawing a vector path.
	         * @param {module:zrender/graphic/Path} e
	         * @param {number} width
	         * @param {number} height
	         */
	        pathToImage: function(e, width, height) {
	            var id = guid();
	            return this.painter.pathToImage(id, e, width, height);
	        },
	
	        /**
	         * Set default cursor
	         * @param {string} [cursorStyle='default'] 例如 crosshair
	         */
	        setCursorStyle: function (cursorStyle) {
	            this.handler.setCursorStyle(cursorStyle);
	        },
	
	        /**
	         * Bind event
	         *
	         * @param {string} eventName Event name
	         * @param {Function} eventHandler Handler function
	         * @param {Object} [context] Context object
	         */
	        on: function(eventName, eventHandler, context) {
	            this.handler.on(eventName, eventHandler, context);
	        },
	
	        /**
	         * Unbind event
	         * @param {string} eventName Event name
	         * @param {Function} [eventHandler] Handler function
	         */
	        off: function(eventName, eventHandler) {
	            this.handler.off(eventName, eventHandler);
	        },
	
	        /**
	         * Trigger event manually
	         *
	         * @param {string} eventName Event name
	         * @param {event=} event Event object
	         */
	        trigger: function (eventName, event) {
	            this.handler.trigger(eventName, event);
	        },
	
	
	        /**
	         * Clear all objects and the canvas.
	         */
	        clear: function () {
	            this.storage.delRoot();
	            this.painter.clear();
	        },
	
	        /**
	         * Dispose self.
	         */
	        dispose: function () {
	            this.animation.stop();
	
	            this.clear();
	            this.storage.dispose();
	            this.painter.dispose();
	            this.handler.dispose();
	
	            this.animation =
	            this.storage =
	            this.painter =
	            this.handler = null;
	
	            delInstance(this.id);
	        }
	    };
	
	    module.exports = zrender;
	


/***/ },
/* 604 */
/*!**********************************!*\
  !*** ./~/zrender/lib/Handler.js ***!
  \**********************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	/**
	 * Handler
	 * @module zrender/Handler
	 * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)
	 *         errorrik (errorrik@gmail.com)
	 *         pissang (shenyi.914@gmail.com)
	 */
	
	
	    var util = __webpack_require__(/*! ./core/util */ 526);
	    var Draggable = __webpack_require__(/*! ./mixin/Draggable */ 605);
	
	    var Eventful = __webpack_require__(/*! ./mixin/Eventful */ 555);
	
	    function makeEventPacket(eveType, target, event) {
	        return {
	            type: eveType,
	            event: event,
	            target: target,
	            cancelBubble: false,
	            offsetX: event.zrX,
	            offsetY: event.zrY,
	            gestureEvent: event.gestureEvent,
	            pinchX: event.pinchX,
	            pinchY: event.pinchY,
	            pinchScale: event.pinchScale,
	            wheelDelta: event.zrDelta
	        };
	    }
	
	    function EmptyProxy () {}
	    EmptyProxy.prototype.dispose = function () {};
	
	    var handlerNames = [
	        'click', 'dblclick', 'mousewheel', 'mouseout',
	        'mouseup', 'mousedown', 'mousemove'
	    ];
	    /**
	     * @alias module:zrender/Handler
	     * @constructor
	     * @extends module:zrender/mixin/Eventful
	     * @param {HTMLElement} root Main HTML element for painting.
	     * @param {module:zrender/Storage} storage Storage instance.
	     * @param {module:zrender/Painter} painter Painter instance.
	     */
	    var Handler = function(storage, painter, proxy) {
	        Eventful.call(this);
	
	        this.storage = storage;
	
	        this.painter = painter;
	
	        proxy = proxy || new EmptyProxy();
	        /**
	         * Proxy of event. can be Dom, WebGLSurface, etc.
	         */
	        this.proxy = proxy;
	
	        // Attach handler
	        proxy.handler = this;
	
	        /**
	         * @private
	         * @type {boolean}
	         */
	        this._hovered;
	
	        /**
	         * @private
	         * @type {Date}
	         */
	        this._lastTouchMoment;
	
	        /**
	         * @private
	         * @type {number}
	         */
	        this._lastX;
	
	        /**
	         * @private
	         * @type {number}
	         */
	        this._lastY;
	
	
	        Draggable.call(this);
	
	        util.each(handlerNames, function (name) {
	            proxy.on && proxy.on(name, this[name], this);
	        }, this);
	    };
	
	    Handler.prototype = {
	
	        constructor: Handler,
	
	        mousemove: function (event) {
	            var x = event.zrX;
	            var y = event.zrY;
	
	            var hovered = this.findHover(x, y, null);
	            var lastHovered = this._hovered;
	            var proxy = this.proxy;
	
	            this._hovered = hovered;
	
	            proxy.setCursor && proxy.setCursor(hovered ? hovered.cursor : 'default');
	
	            // Mouse out on previous hovered element
	            if (lastHovered && hovered !== lastHovered && lastHovered.__zr) {
	                this.dispatchToElement(lastHovered, 'mouseout', event);
	            }
	
	            // Mouse moving on one element
	            this.dispatchToElement(hovered, 'mousemove', event);
	
	            // Mouse over on a new element
	            if (hovered && hovered !== lastHovered) {
	                this.dispatchToElement(hovered, 'mouseover', event);
	            }
	        },
	
	        mouseout: function (event) {
	            this.dispatchToElement(this._hovered, 'mouseout', event);
	
	            this.trigger('globalout', {
	                event: event
	            });
	        },
	
	        /**
	         * Resize
	         */
	        resize: function (event) {
	            this._hovered = null;
	        },
	
	        /**
	         * Dispatch event
	         * @param {string} eventName
	         * @param {event=} eventArgs
	         */
	        dispatch: function (eventName, eventArgs) {
	            var handler = this[eventName];
	            handler && handler.call(this, eventArgs);
	        },
	
	        /**
	         * Dispose
	         */
	        dispose: function () {
	
	            this.proxy.dispose();
	
	            this.storage =
	            this.proxy =
	            this.painter = null;
	        },
	
	        /**
	         * 设置默认的cursor style
	         * @param {string} [cursorStyle='default'] 例如 crosshair
	         */
	        setCursorStyle: function (cursorStyle) {
	            var proxy = this.proxy;
	            proxy.setCursor && proxy.setCursor(cursorStyle);
	        },
	
	        /**
	         * 事件分发代理
	         *
	         * @private
	         * @param {Object} targetEl 目标图形元素
	         * @param {string} eventName 事件名称
	         * @param {Object} event 事件对象
	         */
	        dispatchToElement: function (targetEl, eventName, event) {
	            var eventHandler = 'on' + eventName;
	            var eventPacket = makeEventPacket(eventName, targetEl, event);
	
	            var el = targetEl;
	
	            while (el) {
	                el[eventHandler]
	                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));
	
	                el.trigger(eventName, eventPacket);
	
	                el = el.parent;
	
	                if (eventPacket.cancelBubble) {
	                    break;
	                }
	            }
	
	            if (!eventPacket.cancelBubble) {
	                // 冒泡到顶级 zrender 对象
	                this.trigger(eventName, eventPacket);
	                // 分发事件到用户自定义层
	                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在
	                this.painter && this.painter.eachOtherLayer(function (layer) {
	                    if (typeof(layer[eventHandler]) == 'function') {
	                        layer[eventHandler].call(layer, eventPacket);
	                    }
	                    if (layer.trigger) {
	                        layer.trigger(eventName, eventPacket);
	                    }
	                });
	            }
	        },
	
	        /**
	         * @private
	         * @param {number} x
	         * @param {number} y
	         * @param {module:zrender/graphic/Displayable} exclude
	         * @method
	         */
	        findHover: function(x, y, exclude) {
	            var list = this.storage.getDisplayList();
	            for (var i = list.length - 1; i >= 0 ; i--) {
	                if (!list[i].silent
	                 && list[i] !== exclude
	                 // getDisplayList may include ignored item in VML mode
	                 && !list[i].ignore
	                 && isHover(list[i], x, y)) {
	                    return list[i];
	                }
	            }
	        }
	    };
	
	    // Common handlers
	    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick'], function (name) {
	        Handler.prototype[name] = function (event) {
	            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover
	            var hovered = this.findHover(event.zrX, event.zrY, null);
	
	            if (name === 'mousedown') {
	                this._downel = hovered;
	                // In case click triggered before mouseup
	                this._upel = hovered;
	            }
	            else if (name === 'mosueup') {
	                this._upel = hovered;
	            }
	            else if (name === 'click') {
	                if (this._downel !== this._upel) {
	                    return;
	                }
	            }
	
	            this.dispatchToElement(hovered, name, event);
	        };
	    });
	
	    function isHover(displayable, x, y) {
	        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {
	            var el = displayable;
	            while (el) {
	                // If ancestor is silent or clipped by ancestor
	                if (el.silent || (el.clipPath && !el.clipPath.contain(x, y)))  {
	                    return false;
	                }
	                el = el.parent;
	            }
	            return true;
	        }
	
	        return false;
	    }
	
	    util.mixin(Handler, Eventful);
	    util.mixin(Handler, Draggable);
	
	    module.exports = Handler;


/***/ },
/* 605 */
/*!******************************************!*\
  !*** ./~/zrender/lib/mixin/Draggable.js ***!
  \******************************************/
/***/ function(module, exports) {

	// TODO Draggable for group
	// FIXME Draggable on element which has parent rotation or scale
	
	    function Draggable() {
	
	        this.on('mousedown', this._dragStart, this);
	        this.on('mousemove', this._drag, this);
	        this.on('mouseup', this._dragEnd, this);
	        this.on('globalout', this._dragEnd, this);
	        // this._dropTarget = null;
	        // this._draggingTarget = null;
	
	        // this._x = 0;
	        // this._y = 0;
	    }
	
	    Draggable.prototype = {
	
	        constructor: Draggable,
	
	        _dragStart: function (e) {
	            var draggingTarget = e.target;
	            if (draggingTarget && draggingTarget.draggable) {
	                this._draggingTarget = draggingTarget;
	                draggingTarget.dragging = true;
	                this._x = e.offsetX;
	                this._y = e.offsetY;
	
	                this.dispatchToElement(draggingTarget, 'dragstart', e.event);
	            }
	        },
	
	        _drag: function (e) {
	            var draggingTarget = this._draggingTarget;
	            if (draggingTarget) {
	
	                var x = e.offsetX;
	                var y = e.offsetY;
	
	                var dx = x - this._x;
	                var dy = y - this._y;
	                this._x = x;
	                this._y = y;
	
	                draggingTarget.drift(dx, dy, e);
	                this.dispatchToElement(draggingTarget, 'drag', e.event);
	
	                var dropTarget = this.findHover(x, y, draggingTarget);
	                var lastDropTarget = this._dropTarget;
	                this._dropTarget = dropTarget;
	
	                if (draggingTarget !== dropTarget) {
	                    if (lastDropTarget && dropTarget !== lastDropTarget) {
	                        this.dispatchToElement(lastDropTarget, 'dragleave', e.event);
	                    }
	                    if (dropTarget && dropTarget !== lastDropTarget) {
	                        this.dispatchToElement(dropTarget, 'dragenter', e.event);
	                    }
	                }
	            }
	        },
	
	        _dragEnd: function (e) {
	            var draggingTarget = this._draggingTarget;
	
	            if (draggingTarget) {
	                draggingTarget.dragging = false;
	            }
	
	            this.dispatchToElement(draggingTarget, 'dragend', e.event);
	
	            if (this._dropTarget) {
	                this.dispatchToElement(this._dropTarget, 'drop', e.event);
	            }
	
	            this._draggingTarget = null;
	            this._dropTarget = null;
	        }
	
	    };
	
	    module.exports = Draggable;


/***/ },
/* 606 */
/*!**********************************!*\
  !*** ./~/zrender/lib/Storage.js ***!
  \**********************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	/**
	 * Storage内容仓库模块
	 * @module zrender/Storage
	 * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)
	 * @author errorrik (errorrik@gmail.com)
	 * @author pissang (https://github.com/pissang/)
	 */
	
	
	    var util = __webpack_require__(/*! ./core/util */ 526);
	    var env = __webpack_require__(/*! ./core/env */ 524);
	
	    var Group = __webpack_require__(/*! ./container/Group */ 552);
	
	    // Use timsort because in most case elements are partially sorted
	    // https://jsfiddle.net/pissang/jr4x7mdm/8/
	    var timsort = __webpack_require__(/*! ./core/timsort */ 607);
	
	    function shapeCompareFunc(a, b) {
	        if (a.zlevel === b.zlevel) {
	            if (a.z === b.z) {
	                // if (a.z2 === b.z2) {
	                //     // FIXME Slow has renderidx compare
	                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement
	                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012
	                //     return a.__renderidx - b.__renderidx;
	                // }
	                return a.z2 - b.z2;
	            }
	            return a.z - b.z;
	        }
	        return a.zlevel - b.zlevel;
	    }
	    /**
	     * 内容仓库 (M)
	     * @alias module:zrender/Storage
	     * @constructor
	     */
	    var Storage = function () {
	        // 所有常规形状，id索引的map
	        this._elements = {};
	
	        this._roots = [];
	
	        this._displayList = [];
	
	        this._displayListLen = 0;
	    };
	
	    Storage.prototype = {
	
	        constructor: Storage,
	
	        /**
	         * @param  {Function} cb
	         *
	         */
	        traverse: function (cb, context) {
	            for (var i = 0; i < this._roots.length; i++) {
	                this._roots[i].traverse(cb, context);
	            }
	        },
	
	        /**
	         * 返回所有图形的绘制队列
	         * @param {boolean} [update=false] 是否在返回前更新该数组
	         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效
	         *
	         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}
	         * @return {Array.<module:zrender/graphic/Displayable>}
	         */
	        getDisplayList: function (update, includeIgnore) {
	            includeIgnore = includeIgnore || false;
	            if (update) {
	                this.updateDisplayList(includeIgnore);
	            }
	            return this._displayList;
	        },
	
	        /**
	         * 更新图形的绘制队列。
	         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，
	         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列
	         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组
	         */
	        updateDisplayList: function (includeIgnore) {
	            this._displayListLen = 0;
	            var roots = this._roots;
	            var displayList = this._displayList;
	            for (var i = 0, len = roots.length; i < len; i++) {
	                this._updateAndAddDisplayable(roots[i], null, includeIgnore);
	            }
	            displayList.length = this._displayListLen;
	
	            // for (var i = 0, len = displayList.length; i < len; i++) {
	            //     displayList[i].__renderidx = i;
	            // }
	
	            // displayList.sort(shapeCompareFunc);
	            env.canvasSupported && timsort(displayList, shapeCompareFunc);
	        },
	
	        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {
	
	            if (el.ignore && !includeIgnore) {
	                return;
	            }
	
	            el.beforeUpdate();
	
	            if (el.__dirty) {
	
	                el.update();
	
	            }
	
	            el.afterUpdate();
	
	            var clipPath = el.clipPath;
	            if (clipPath) {
	                // clipPath 的变换是基于 group 的变换
	                clipPath.parent = el;
	                clipPath.updateTransform();
	
	                // FIXME 效率影响
	                if (clipPaths) {
	                    clipPaths = clipPaths.slice();
	                    clipPaths.push(clipPath);
	                }
	                else {
	                    clipPaths = [clipPath];
	                }
	            }
	
	            if (el.isGroup) {
	                var children = el._children;
	
	                for (var i = 0; i < children.length; i++) {
	                    var child = children[i];
	
	                    // Force to mark as dirty if group is dirty
	                    // FIXME __dirtyPath ?
	                    if (el.__dirty) {
	                        child.__dirty = true;
	                    }
	
	                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);
	                }
	
	                // Mark group clean here
	                el.__dirty = false;
	
	            }
	            else {
	                el.__clipPaths = clipPaths;
	
	                this._displayList[this._displayListLen++] = el;
	            }
	        },
	
	        /**
	         * 添加图形(Shape)或者组(Group)到根节点
	         * @param {module:zrender/Element} el
	         */
	        addRoot: function (el) {
	            // Element has been added
	            if (this._elements[el.id]) {
	                return;
	            }
	
	            if (el instanceof Group) {
	                el.addChildrenToStorage(this);
	            }
	
	            this.addToMap(el);
	            this._roots.push(el);
	        },
	
	        /**
	         * 删除指定的图形(Shape)或者组(Group)
	         * @param {string|Array.<string>} [elId] 如果为空清空整个Storage
	         */
	        delRoot: function (elId) {
	            if (elId == null) {
	                // 不指定elId清空
	                for (var i = 0; i < this._roots.length; i++) {
	                    var root = this._roots[i];
	                    if (root instanceof Group) {
	                        root.delChildrenFromStorage(this);
	                    }
	                }
	
	                this._elements = {};
	                this._roots = [];
	                this._displayList = [];
	                this._displayListLen = 0;
	
	                return;
	            }
	
	            if (elId instanceof Array) {
	                for (var i = 0, l = elId.length; i < l; i++) {
	                    this.delRoot(elId[i]);
	                }
	                return;
	            }
	
	            var el;
	            if (typeof(elId) == 'string') {
	                el = this._elements[elId];
	            }
	            else {
	                el = elId;
	            }
	
	            var idx = util.indexOf(this._roots, el);
	            if (idx >= 0) {
	                this.delFromMap(el.id);
	                this._roots.splice(idx, 1);
	                if (el instanceof Group) {
	                    el.delChildrenFromStorage(this);
	                }
	            }
	        },
	
	        addToMap: function (el) {
	            if (el instanceof Group) {
	                el.__storage = this;
	            }
	            el.dirty();
	
	            this._elements[el.id] = el;
	
	            return this;
	        },
	
	        get: function (elId) {
	            return this._elements[elId];
	        },
	
	        delFromMap: function (elId) {
	            var elements = this._elements;
	            var el = elements[elId];
	            if (el) {
	                delete elements[elId];
	                if (el instanceof Group) {
	                    el.__storage = null;
	                }
	            }
	
	            return this;
	        },
	
	        /**
	         * 清空并且释放Storage
	         */
	        dispose: function () {
	            this._elements =
	            this._renderList =
	            this._roots = null;
	        },
	
	        displayableSortFunc: shapeCompareFunc
	    };
	
	    module.exports = Storage;
	


/***/ },
/* 607 */
/*!***************************************!*\
  !*** ./~/zrender/lib/core/timsort.js ***!
  \***************************************/
/***/ function(module, exports) {

	// https://github.com/mziccard/node-timsort
	
	    var DEFAULT_MIN_MERGE = 32;
	
	    var DEFAULT_MIN_GALLOPING = 7;
	
	    var DEFAULT_TMP_STORAGE_LENGTH = 256;
	
	    function minRunLength(n) {
	        var r = 0;
	
	        while (n >= DEFAULT_MIN_MERGE) {
	            r |= n & 1;
	            n >>= 1;
	        }
	
	        return n + r;
	    }
	
	    function makeAscendingRun(array, lo, hi, compare) {
	        var runHi = lo + 1;
	
	        if (runHi === hi) {
	            return 1;
	        }
	
	        if (compare(array[runHi++], array[lo]) < 0) {
	            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {
	                runHi++;
	            }
	
	            reverseRun(array, lo, runHi);
	        }
	        else {
	            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {
	                runHi++;
	            }
	        }
	
	        return runHi - lo;
	    }
	
	    function reverseRun(array, lo, hi) {
	        hi--;
	
	        while (lo < hi) {
	            var t = array[lo];
	            array[lo++] = array[hi];
	            array[hi--] = t;
	        }
	    }
	
	    function binaryInsertionSort(array, lo, hi, start, compare) {
	        if (start === lo) {
	            start++;
	        }
	
	        for (; start < hi; start++) {
	            var pivot = array[start];
	
	            var left = lo;
	            var right = start;
	            var mid;
	
	            while (left < right) {
	                mid = left + right >>> 1;
	
	                if (compare(pivot, array[mid]) < 0) {
	                    right = mid;
	                }
	                else {
	                    left = mid + 1;
	                }
	            }
	
	            var n = start - left;
	
	            switch (n) {
	                case 3:
	                    array[left + 3] = array[left + 2];
	
	                case 2:
	                    array[left + 2] = array[left + 1];
	
	                case 1:
	                    array[left + 1] = array[left];
	                    break;
	                default:
	                    while (n > 0) {
	                        array[left + n] = array[left + n - 1];
	                        n--;
	                    }
	            }
	
	            array[left] = pivot;
	        }
	    }
	
	    function gallopLeft(value, array, start, length, hint, compare) {
	        var lastOffset = 0;
	        var maxOffset = 0;
	        var offset = 1;
	
	        if (compare(value, array[start + hint]) > 0) {
	            maxOffset = length - hint;
	
	            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {
	                lastOffset = offset;
	                offset = (offset << 1) + 1;
	
	                if (offset <= 0) {
	                    offset = maxOffset;
	                }
	            }
	
	            if (offset > maxOffset) {
	                offset = maxOffset;
	            }
	
	            lastOffset += hint;
	            offset += hint;
	        }
	        else {
	            maxOffset = hint + 1;
	            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {
	                lastOffset = offset;
	                offset = (offset << 1) + 1;
	
	                if (offset <= 0) {
	                    offset = maxOffset;
	                }
	            }
	            if (offset > maxOffset) {
	                offset = maxOffset;
	            }
	
	            var tmp = lastOffset;
	            lastOffset = hint - offset;
	            offset = hint - tmp;
	        }
	
	        lastOffset++;
	        while (lastOffset < offset) {
	            var m = lastOffset + (offset - lastOffset >>> 1);
	
	            if (compare(value, array[start + m]) > 0) {
	                lastOffset = m + 1;
	            }
	            else {
	                offset = m;
	            }
	        }
	        return offset;
	    }
	
	    function gallopRight(value, array, start, length, hint, compare) {
	        var lastOffset = 0;
	        var maxOffset = 0;
	        var offset = 1;
	
	        if (compare(value, array[start + hint]) < 0) {
	            maxOffset = hint + 1;
	
	            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {
	                lastOffset = offset;
	                offset = (offset << 1) + 1;
	
	                if (offset <= 0) {
	                    offset = maxOffset;
	                }
	            }
	
	            if (offset > maxOffset) {
	                offset = maxOffset;
	            }
	
	            var tmp = lastOffset;
	            lastOffset = hint - offset;
	            offset = hint - tmp;
	        }
	        else {
	            maxOffset = length - hint;
	
	            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {
	                lastOffset = offset;
	                offset = (offset << 1) + 1;
	
	                if (offset <= 0) {
	                    offset = maxOffset;
	                }
	            }
	
	            if (offset > maxOffset) {
	                offset = maxOffset;
	            }
	
	            lastOffset += hint;
	            offset += hint;
	        }
	
	        lastOffset++;
	
	        while (lastOffset < offset) {
	            var m = lastOffset + (offset - lastOffset >>> 1);
	
	            if (compare(value, array[start + m]) < 0) {
	                offset = m;
	            }
	            else {
	                lastOffset = m + 1;
	            }
	        }
	
	        return offset;
	    }
	
	    function TimSort(array, compare) {
	        var minGallop = DEFAULT_MIN_GALLOPING;
	        var length = 0;
	        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;
	        var stackLength = 0;
	        var runStart;
	        var runLength;
	        var stackSize = 0;
	
	        length = array.length;
	
	        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {
	            tmpStorageLength = length >>> 1;
	        }
	
	        var tmp = [];
	
	        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;
	
	        runStart = [];
	        runLength = [];
	
	        function pushRun(_runStart, _runLength) {
	            runStart[stackSize] = _runStart;
	            runLength[stackSize] = _runLength;
	            stackSize += 1;
	        }
	
	        function mergeRuns() {
	            while (stackSize > 1) {
	                var n = stackSize - 2;
	
	                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {
	                    if (runLength[n - 1] < runLength[n + 1]) {
	                        n--;
	                    }
	                }
	                else if (runLength[n] > runLength[n + 1]) {
	                    break;
	                }
	                mergeAt(n);
	            }
	        }
	
	        function forceMergeRuns() {
	            while (stackSize > 1) {
	                var n = stackSize - 2;
	
	                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {
	                    n--;
	                }
	
	                mergeAt(n);
	            }
	        }
	
	        function mergeAt(i) {
	            var start1 = runStart[i];
	            var length1 = runLength[i];
	            var start2 = runStart[i + 1];
	            var length2 = runLength[i + 1];
	
	            runLength[i] = length1 + length2;
	
	            if (i === stackSize - 3) {
	                runStart[i + 1] = runStart[i + 2];
	                runLength[i + 1] = runLength[i + 2];
	            }
	
	            stackSize--;
	
	            var k = gallopRight(array[start2], array, start1, length1, 0, compare);
	            start1 += k;
	            length1 -= k;
	
	            if (length1 === 0) {
	                return;
	            }
	
	            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);
	
	            if (length2 === 0) {
	                return;
	            }
	
	            if (length1 <= length2) {
	                mergeLow(start1, length1, start2, length2);
	            }
	            else {
	                mergeHigh(start1, length1, start2, length2);
	            }
	        }
	
	        function mergeLow(start1, length1, start2, length2) {
	            var i = 0;
	
	            for (i = 0; i < length1; i++) {
	                tmp[i] = array[start1 + i];
	            }
	
	            var cursor1 = 0;
	            var cursor2 = start2;
	            var dest = start1;
	
	            array[dest++] = array[cursor2++];
	
	            if (--length2 === 0) {
	                for (i = 0; i < length1; i++) {
	                    array[dest + i] = tmp[cursor1 + i];
	                }
	                return;
	            }
	
	            if (length1 === 1) {
	                for (i = 0; i < length2; i++) {
	                    array[dest + i] = array[cursor2 + i];
	                }
	                array[dest + length2] = tmp[cursor1];
	                return;
	            }
	
	            var _minGallop = minGallop;
	            var count1, count2, exit;
	
	            while (1) {
	                count1 = 0;
	                count2 = 0;
	                exit = false;
	
	                do {
	                    if (compare(array[cursor2], tmp[cursor1]) < 0) {
	                        array[dest++] = array[cursor2++];
	                        count2++;
	                        count1 = 0;
	
	                        if (--length2 === 0) {
	                            exit = true;
	                            break;
	                        }
	                    }
	                    else {
	                        array[dest++] = tmp[cursor1++];
	                        count1++;
	                        count2 = 0;
	                        if (--length1 === 1) {
	                            exit = true;
	                            break;
	                        }
	                    }
	                } while ((count1 | count2) < _minGallop);
	
	                if (exit) {
	                    break;
	                }
	
	                do {
	                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);
	
	                    if (count1 !== 0) {
	                        for (i = 0; i < count1; i++) {
	                            array[dest + i] = tmp[cursor1 + i];
	                        }
	
	                        dest += count1;
	                        cursor1 += count1;
	                        length1 -= count1;
	                        if (length1 <= 1) {
	                            exit = true;
	                            break;
	                        }
	                    }
	
	                    array[dest++] = array[cursor2++];
	
	                    if (--length2 === 0) {
	                        exit = true;
	                        break;
	                    }
	
	                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);
	
	                    if (count2 !== 0) {
	                        for (i = 0; i < count2; i++) {
	                            array[dest + i] = array[cursor2 + i];
	                        }
	
	                        dest += count2;
	                        cursor2 += count2;
	                        length2 -= count2;
	
	                        if (length2 === 0) {
	                            exit = true;
	                            break;
	                        }
	                    }
	                    array[dest++] = tmp[cursor1++];
	
	                    if (--length1 === 1) {
	                        exit = true;
	                        break;
	                    }
	
	                    _minGallop--;
	                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);
	
	                if (exit) {
	                    break;
	                }
	
	                if (_minGallop < 0) {
	                    _minGallop = 0;
	                }
	
	                _minGallop += 2;
	            }
	
	            minGallop = _minGallop;
	
	            minGallop < 1 && (minGallop = 1);
	
	            if (length1 === 1) {
	                for (i = 0; i < length2; i++) {
	                    array[dest + i] = array[cursor2 + i];
	                }
	                array[dest + length2] = tmp[cursor1];
	            }
	            else if (length1 === 0) {
	                throw new Error();
	                // throw new Error('mergeLow preconditions were not respected');
	            }
	            else {
	                for (i = 0; i < length1; i++) {
	                    array[dest + i] = tmp[cursor1 + i];
	                }
	            }
	        }
	
	        function mergeHigh (start1, length1, start2, length2) {
	            var i = 0;
	
	            for (i = 0; i < length2; i++) {
	                tmp[i] = array[start2 + i];
	            }
	
	            var cursor1 = start1 + length1 - 1;
	            var cursor2 = length2 - 1;
	            var dest = start2 + length2 - 1;
	            var customCursor = 0;
	            var customDest = 0;
	
	            array[dest--] = array[cursor1--];
	
	            if (--length1 === 0) {
	                customCursor = dest - (length2 - 1);
	
	                for (i = 0; i < length2; i++) {
	                    array[customCursor + i] = tmp[i];
	                }
	
	                return;
	            }
	
	            if (length2 === 1) {
	                dest -= length1;
	                cursor1 -= length1;
	                customDest = dest + 1;
	                customCursor = cursor1 + 1;
	
	                for (i = length1 - 1; i >= 0; i--) {
	                    array[customDest + i] = array[customCursor + i];
	                }
	
	                array[dest] = tmp[cursor2];
	                return;
	            }
	
	            var _minGallop = minGallop;
	
	            while (true) {
	                var count1 = 0;
	                var count2 = 0;
	                var exit = false;
	
	                do {
	                    if (compare(tmp[cursor2], array[cursor1]) < 0) {
	                        array[dest--] = array[cursor1--];
	                        count1++;
	                        count2 = 0;
	                        if (--length1 === 0) {
	                            exit = true;
	                            break;
	                        }
	                    }
	                    else {
	                        array[dest--] = tmp[cursor2--];
	                        count2++;
	                        count1 = 0;
	                        if (--length2 === 1) {
	                            exit = true;
	                            break;
	                        }
	                    }
	                } while ((count1 | count2) < _minGallop);
	
	                if (exit) {
	                    break;
	                }
	
	                do {
	                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);
	
	                    if (count1 !== 0) {
	                        dest -= count1;
	                        cursor1 -= count1;
	                        length1 -= count1;
	                        customDest = dest + 1;
	                        customCursor = cursor1 + 1;
	
	                        for (i = count1 - 1; i >= 0; i--) {
	                            array[customDest + i] = array[customCursor + i];
	                        }
	
	                        if (length1 === 0) {
	                            exit = true;
	                            break;
	                        }
	                    }
	
	                    array[dest--] = tmp[cursor2--];
	
	                    if (--length2 === 1) {
	                        exit = true;
	                        break;
	                    }
	
	                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);
	
	                    if (count2 !== 0) {
	                        dest -= count2;
	                        cursor2 -= count2;
	                        length2 -= count2;
	                        customDest = dest + 1;
	                        customCursor = cursor2 + 1;
	
	                        for (i = 0; i < count2; i++) {
	                            array[customDest + i] = tmp[customCursor + i];
	                        }
	
	                        if (length2 <= 1) {
	                            exit = true;
	                            break;
	                        }
	                    }
	
	                    array[dest--] = array[cursor1--];
	
	                    if (--length1 === 0) {
	                        exit = true;
	                        break;
	                    }
	
	                    _minGallop--;
	                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);
	
	                if (exit) {
	                    break;
	                }
	
	                if (_minGallop < 0) {
	                    _minGallop = 0;
	                }
	
	                _minGallop += 2;
	            }
	
	            minGallop = _minGallop;
	
	            if (minGallop < 1) {
	                minGallop = 1;
	            }
	
	            if (length2 === 1) {
	                dest -= length1;
	                cursor1 -= length1;
	                customDest = dest + 1;
	                customCursor = cursor1 + 1;
	
	                for (i = length1 - 1; i >= 0; i--) {
	                    array[customDest + i] = array[customCursor + i];
	                }
	
	                array[dest] = tmp[cursor2];
	            }
	            else if (length2 === 0) {
	                throw new Error();
	                // throw new Error('mergeHigh preconditions were not respected');
	            }
	            else {
	                customCursor = dest - (length2 - 1);
	                for (i = 0; i < length2; i++) {
	                    array[customCursor + i] = tmp[i];
	                }
	            }
	        }
	
	        this.mergeRuns = mergeRuns;
	        this.forceMergeRuns = forceMergeRuns;
	        this.pushRun = pushRun;
	    }
	
	    function sort(array, compare, lo, hi) {
	        if (!lo) {
	            lo = 0;
	        }
	        if (!hi) {
	            hi = array.length;
	        }
	
	        var remaining = hi - lo;
	
	        if (remaining < 2) {
	            return;
	        }
	
	        var runLength = 0;
	
	        if (remaining < DEFAULT_MIN_MERGE) {
	            runLength = makeAscendingRun(array, lo, hi, compare);
	            binaryInsertionSort(array, lo, hi, lo + runLength, compare);
	            return;
	        }
	
	        var ts = new TimSort(array, compare);
	
	        var minRun = minRunLength(remaining);
	
	        do {
	            runLength = makeAscendingRun(array, lo, hi, compare);
	            if (runLength < minRun) {
	                var force = remaining;
	                if (force > minRun) {
	                    force = minRun;
	                }
	
	                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);
	                runLength = force;
	            }
	
	            ts.pushRun(lo, runLength);
	            ts.mergeRuns();
	
	            remaining -= runLength;
	            lo += runLength;
	        } while (remaining !== 0);
	
	        ts.forceMergeRuns();
	    }
	
	    module.exports = sort;


/***/ },
/* 608 */
/*!**********************************************!*\
  !*** ./~/zrender/lib/animation/Animation.js ***!
  \**********************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	/**
	 * 动画主类, 调度和管理所有动画控制器
	 *
	 * @module zrender/animation/Animation
	 * @author pissang(https://github.com/pissang)
	 */
	// TODO Additive animation
	// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/
	// https://developer.apple.com/videos/wwdc2014/#236
	
	
	    var util = __webpack_require__(/*! ../core/util */ 526);
	    var Dispatcher = __webpack_require__(/*! ../core/event */ 609).Dispatcher;
	
	    var requestAnimationFrame = __webpack_require__(/*! ./requestAnimationFrame */ 610);
	
	    var Animator = __webpack_require__(/*! ./Animator */ 558);
	    /**
	     * @typedef {Object} IZRenderStage
	     * @property {Function} update
	     */
	
	    /**
	     * @alias module:zrender/animation/Animation
	     * @constructor
	     * @param {Object} [options]
	     * @param {Function} [options.onframe]
	     * @param {IZRenderStage} [options.stage]
	     * @example
	     *     var animation = new Animation();
	     *     var obj = {
	     *         x: 100,
	     *         y: 100
	     *     };
	     *     animation.animate(node.position)
	     *         .when(1000, {
	     *             x: 500,
	     *             y: 500
	     *         })
	     *         .when(2000, {
	     *             x: 100,
	     *             y: 100
	     *         })
	     *         .start('spline');
	     */
	    var Animation = function (options) {
	
	        options = options || {};
	
	        this.stage = options.stage || {};
	
	        this.onframe = options.onframe || function() {};
	
	        // private properties
	        this._clips = [];
	
	        this._running = false;
	
	        this._time = 0;
	
	        Dispatcher.call(this);
	    };
	
	    Animation.prototype = {
	
	        constructor: Animation,
	        /**
	         * 添加 clip
	         * @param {module:zrender/animation/Clip} clip
	         */
	        addClip: function (clip) {
	            this._clips.push(clip);
	        },
	        /**
	         * 添加 animator
	         * @param {module:zrender/animation/Animator} animator
	         */
	        addAnimator: function (animator) {
	            animator.animation = this;
	            var clips = animator.getClips();
	            for (var i = 0; i < clips.length; i++) {
	                this.addClip(clips[i]);
	            }
	        },
	        /**
	         * 删除动画片段
	         * @param {module:zrender/animation/Clip} clip
	         */
	        removeClip: function(clip) {
	            var idx = util.indexOf(this._clips, clip);
	            if (idx >= 0) {
	                this._clips.splice(idx, 1);
	            }
	        },
	
	        /**
	         * 删除动画片段
	         * @param {module:zrender/animation/Animator} animator
	         */
	        removeAnimator: function (animator) {
	            var clips = animator.getClips();
	            for (var i = 0; i < clips.length; i++) {
	                this.removeClip(clips[i]);
	            }
	            animator.animation = null;
	        },
	
	        _update: function() {
	
	            var time = new Date().getTime();
	            var delta = time - this._time;
	            var clips = this._clips;
	            var len = clips.length;
	
	            var deferredEvents = [];
	            var deferredClips = [];
	            for (var i = 0; i < len; i++) {
	                var clip = clips[i];
	                var e = clip.step(time);
	                // Throw out the events need to be called after
	                // stage.update, like destroy
	                if (e) {
	                    deferredEvents.push(e);
	                    deferredClips.push(clip);
	                }
	            }
	
	            // Remove the finished clip
	            for (var i = 0; i < len;) {
	                if (clips[i]._needsRemove) {
	                    clips[i] = clips[len - 1];
	                    clips.pop();
	                    len--;
	                }
	                else {
	                    i++;
	                }
	            }
	
	            len = deferredEvents.length;
	            for (var i = 0; i < len; i++) {
	                deferredClips[i].fire(deferredEvents[i]);
	            }
	
	            this._time = time;
	
	            this.onframe(delta);
	
	            this.trigger('frame', delta);
	
	            if (this.stage.update) {
	                this.stage.update();
	            }
	        },
	        /**
	         * 开始运行动画
	         */
	        start: function () {
	            var self = this;
	
	            this._running = true;
	
	            function step() {
	                if (self._running) {
	
	                    requestAnimationFrame(step);
	
	                    self._update();
	                }
	            }
	
	            this._time = new Date().getTime();
	            requestAnimationFrame(step);
	        },
	        /**
	         * 停止运行动画
	         */
	        stop: function () {
	            this._running = false;
	        },
	        /**
	         * 清除所有动画片段
	         */
	        clear: function () {
	            this._clips = [];
	        },
	        /**
	         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画
	         * @param  {Object} target
	         * @param  {Object} options
	         * @param  {boolean} [options.loop=false] 是否循环播放动画
	         * @param  {Function} [options.getter=null]
	         *         如果指定getter函数，会通过getter函数取属性值
	         * @param  {Function} [options.setter=null]
	         *         如果指定setter函数，会通过setter函数设置属性值
	         * @return {module:zrender/animation/Animation~Animator}
	         */
	        animate: function (target, options) {
	            options = options || {};
	            var animator = new Animator(
	                target,
	                options.loop,
	                options.getter,
	                options.setter
	            );
	
	            return animator;
	        }
	    };
	
	    util.mixin(Animation, Dispatcher);
	
	    module.exports = Animation;
	


/***/ },
/* 609 */
/*!*************************************!*\
  !*** ./~/zrender/lib/core/event.js ***!
  \*************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	/**
	 * 事件辅助类
	 * @module zrender/core/event
	 * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)
	 */
	
	
	    var Eventful = __webpack_require__(/*! ../mixin/Eventful */ 555);
	
	    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;
	
	    function getBoundingClientRect(el) {
	        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect
	        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};
	    }
	
	    function clientToLocal(el, e, out) {
	        // clientX/clientY is according to view port.
	        var box = getBoundingClientRect(el);
	        out = out || {};
	        out.zrX = e.clientX - box.left;
	        out.zrY = e.clientY - box.top;
	        return out;
	    }
	
	    /**
	     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标
	     */
	    function normalizeEvent(el, e) {
	
	        e = e || window.event;
	
	        if (e.zrX != null) {
	            return e;
	        }
	
	        var eventType = e.type;
	        var isTouch = eventType && eventType.indexOf('touch') >= 0;
	
	        if (!isTouch) {
	            clientToLocal(el, e, e);
	            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;
	        }
	        else {
	            var touch = eventType != 'touchend'
	                ? e.targetTouches[0]
	                : e.changedTouches[0];
	            touch && clientToLocal(el, touch, e);
	        }
	
	        return e;
	    }
	
	    function addEventListener(el, name, handler) {
	        if (isDomLevel2) {
	            el.addEventListener(name, handler);
	        }
	        else {
	            el.attachEvent('on' + name, handler);
	        }
	    }
	
	    function removeEventListener(el, name, handler) {
	        if (isDomLevel2) {
	            el.removeEventListener(name, handler);
	        }
	        else {
	            el.detachEvent('on' + name, handler);
	        }
	    }
	
	    /**
	     * 停止冒泡和阻止默认行为
	     * @memberOf module:zrender/core/event
	     * @method
	     * @param {Event} e : event对象
	     */
	    var stop = isDomLevel2
	        ? function (e) {
	            e.preventDefault();
	            e.stopPropagation();
	            e.cancelBubble = true;
	        }
	        : function (e) {
	            e.returnValue = false;
	            e.cancelBubble = true;
	        };
	
	    module.exports = {
	        clientToLocal: clientToLocal,
	        normalizeEvent: normalizeEvent,
	        addEventListener: addEventListener,
	        removeEventListener: removeEventListener,
	
	        stop: stop,
	        // 做向上兼容
	        Dispatcher: Eventful
	    };
	


/***/ },
/* 610 */
/*!**********************************************************!*\
  !*** ./~/zrender/lib/animation/requestAnimationFrame.js ***!
  \**********************************************************/
/***/ function(module, exports) {

	
	
	    module.exports = (typeof window !== 'undefined' &&
	                                    (window.requestAnimationFrame
	                                    || window.msRequestAnimationFrame
	                                    || window.mozRequestAnimationFrame
	                                    || window.webkitRequestAnimationFrame))
	                                || function (func) {
	                                    setTimeout(func, 16);
	                                };
	


/***/ },
/* 611 */
/*!*******************************************!*\
  !*** ./~/zrender/lib/dom/HandlerProxy.js ***!
  \*******************************************/
/***/ function(module, exports, __webpack_require__) {

	
	
	    var eventTool = __webpack_require__(/*! ../core/event */ 609);
	    var zrUtil = __webpack_require__(/*! ../core/util */ 526);
	    var Eventful = __webpack_require__(/*! ../mixin/Eventful */ 555);
	    var env = __webpack_require__(/*! ../core/env */ 524);
	    var GestureMgr = __webpack_require__(/*! ../core/GestureMgr */ 612);
	
	    var addEventListener = eventTool.addEventListener;
	    var removeEventListener = eventTool.removeEventListener;
	    var normalizeEvent = eventTool.normalizeEvent;
	
	    var TOUCH_CLICK_DELAY = 300;
	
	    var mouseHandlerNames = [
	        'click', 'dblclick', 'mousewheel', 'mouseout',
	        'mouseup', 'mousedown', 'mousemove'
	    ];
	
	    var touchHandlerNames = [
	        'touchstart', 'touchend', 'touchmove'
	    ];
	
	    function eventNameFix(name) {
	        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;
	    }
	
	    function processGesture(proxy, event, stage) {
	        var gestureMgr = proxy._gestureMgr;
	
	        stage === 'start' && gestureMgr.clear();
	
	        var gestureInfo = gestureMgr.recognize(
	            event,
	            proxy.handler.findHover(event.zrX, event.zrY, null),
	            proxy.dom
	        );
	
	        stage === 'end' && gestureMgr.clear();
	
	        if (gestureInfo) {
	            // eventTool.stop(event);
	            var type = gestureInfo.type;
	            event.gestureEvent = type;
	
	            proxy.handler.dispatchToElement(gestureInfo.target, type, gestureInfo.event);
	        }
	    }
	
	    /**
	     * Prevent mouse event from being dispatched after Touch Events action
	     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>
	     * 1. Mobile browsers dispatch mouse events 300ms after touchend.
	     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms
	     * Result: Blocking Mouse Events for 700ms.
	     */
	    function setTouchTimer(instance) {
	        instance._touching = true;
	        clearTimeout(instance._touchTimer);
	        instance._touchTimer = setTimeout(function () {
	            instance._touching = false;
	        }, 700);
	    }
	
	    function useTouchEvent() {
	        return env.touchEventsSupported;
	    }
	
	    var domHandlers = {
	        /**
	         * Mouse move handler
	         * @inner
	         * @param {Event} event
	         */
	        mousemove: function (event) {
	            event = normalizeEvent(this.dom, event);
	
	            this.trigger('mousemove', event);
	        },
	
	        /**
	         * Mouse out handler
	         * @inner
	         * @param {Event} event
	         */
	        mouseout: function (event) {
	            event = normalizeEvent(this.dom, event);
	
	            var element = event.toElement || event.relatedTarget;
	            if (element != this.dom) {
	                while (element && element.nodeType != 9) {
	                    // 忽略包含在root中的dom引起的mouseOut
	                    if (element === this.dom) {
	                        return;
	                    }
	
	                    element = element.parentNode;
	                }
	            }
	
	            this.trigger('mouseout', event);
	        },
	
	        /**
	         * Touch开始响应函数
	         * @inner
	         * @param {Event} event
	         */
	        touchstart: function (event) {
	            // Default mouse behaviour should not be disabled here.
	            // For example, page may needs to be slided.
	
	            event = normalizeEvent(this.dom, event);
	
	            this._lastTouchMoment = new Date();
	
	            processGesture(this, event, 'start');
	
	            // 平板补充一次findHover
	            // this._mobileFindFixed(event);
	            // Trigger mousemove and mousedown
	            domHandlers.mousemove.call(this, event);
	
	            domHandlers.mousedown.call(this, event);
	
	            setTouchTimer(this);
	        },
	
	        /**
	         * Touch移动响应函数
	         * @inner
	         * @param {Event} event
	         */
	        touchmove: function (event) {
	
	            event = normalizeEvent(this.dom, event);
	
	            processGesture(this, event, 'change');
	
	            // Mouse move should always be triggered no matter whether
	            // there is gestrue event, because mouse move and pinch may
	            // be used at the same time.
	            domHandlers.mousemove.call(this, event);
	
	            setTouchTimer(this);
	        },
	
	        /**
	         * Touch结束响应函数
	         * @inner
	         * @param {Event} event
	         */
	        touchend: function (event) {
	
	            event = normalizeEvent(this.dom, event);
	
	            processGesture(this, event, 'end');
	
	            domHandlers.mouseup.call(this, event);
	
	            // click event should always be triggered no matter whether
	            // there is gestrue event. System click can not be prevented.
	            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {
	                domHandlers.click.call(this, event);
	            }
	
	            setTouchTimer(this);
	        }
	    };
	
	    // Common handlers
	    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick'], function (name) {
	        domHandlers[name] = function (event) {
	            event = normalizeEvent(this.dom, event);
	            this.trigger(name, event);
	        };
	    });
	
	    /**
	     * 为控制类实例初始化dom 事件处理函数
	     *
	     * @inner
	     * @param {module:zrender/Handler} instance 控制类实例
	     */
	    function initDomHandler(instance) {
	        for (var i = 0; i < touchHandlerNames.length; i++) {
	            var name = touchHandlerNames[i];
	            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);
	        }
	
	        for (var i = 0; i < mouseHandlerNames.length; i++) {
	            var name = mouseHandlerNames[i];
	            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);
	        }
	
	        function makeMouseHandler(fn, instance) {
	            return function () {
	                if (instance._touching) {
	                    return;
	                }
	                return fn.apply(instance, arguments);
	            };
	        }
	    }
	
	
	    function HandlerDomProxy(dom) {
	        Eventful.call(this);
	
	        this.dom = dom;
	
	        /**
	         * @private
	         * @type {boolean}
	         */
	        this._touching = false;
	
	        /**
	         * @private
	         * @type {number}
	         */
	        this._touchTimer;
	
	        /**
	         * @private
	         * @type {module:zrender/core/GestureMgr}
	         */
	        this._gestureMgr = new GestureMgr();
	
	        this._handlers = {};
	
	        initDomHandler(this);
	
	        if (useTouchEvent()) {
	            mountHandlers(touchHandlerNames, this);
	
	            // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.
	            // addEventListener(root, 'mouseout', this._mouseoutHandler);
	        }
	
	        // Considering some devices that both enable touch and mouse event (like MS Surface
	        // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise
	        // mouse event can not be handle in those devices.
	        mountHandlers(mouseHandlerNames, this);
	
	        function mountHandlers(handlerNames, instance) {
	            zrUtil.each(handlerNames, function (name) {
	                addEventListener(dom, eventNameFix(name), instance._handlers[name]);
	            }, instance);
	        }
	    }
	
	    var handlerDomProxyProto = HandlerDomProxy.prototype;
	    handlerDomProxyProto.dispose = function () {
	        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);
	
	        for (var i = 0; i < handlerNames.length; i++) {
	            var name = handlerNames[i];
	            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);
	        }
	    };
	
	    handlerDomProxyProto.setCursor = function (cursorStyle) {
	        this.dom.style.cursor = cursorStyle || 'default';
	    };
	
	    zrUtil.mixin(HandlerDomProxy, Eventful);
	
	    module.exports = HandlerDomProxy;


/***/ },
/* 612 */
/*!******************************************!*\
  !*** ./~/zrender/lib/core/GestureMgr.js ***!
  \******************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	/**
	 * Only implements needed gestures for mobile.
	 */
	
	
	    var eventUtil = __webpack_require__(/*! ./event */ 609);
	
	    var GestureMgr = function () {
	
	        /**
	         * @private
	         * @type {Array.<Object>}
	         */
	        this._track = [];
	    };
	
	    GestureMgr.prototype = {
	
	        constructor: GestureMgr,
	
	        recognize: function (event, target, root) {
	            this._doTrack(event, target, root);
	            return this._recognize(event);
	        },
	
	        clear: function () {
	            this._track.length = 0;
	            return this;
	        },
	
	        _doTrack: function (event, target, root) {
	            var touches = event.touches;
	
	            if (!touches) {
	                return;
	            }
	
	            var trackItem = {
	                points: [],
	                touches: [],
	                target: target,
	                event: event
	            };
	
	            for (var i = 0, len = touches.length; i < len; i++) {
	                var touch = touches[i];
	                var pos = eventUtil.clientToLocal(root, touch);
	                trackItem.points.push([pos.zrX, pos.zrY]);
	                trackItem.touches.push(touch);
	            }
	
	            this._track.push(trackItem);
	        },
	
	        _recognize: function (event) {
	            for (var eventName in recognizers) {
	                if (recognizers.hasOwnProperty(eventName)) {
	                    var gestureInfo = recognizers[eventName](this._track, event);
	                    if (gestureInfo) {
	                        return gestureInfo;
	                    }
	                }
	            }
	        }
	    };
	
	    function dist(pointPair) {
	        var dx = pointPair[1][0] - pointPair[0][0];
	        var dy = pointPair[1][1] - pointPair[0][1];
	
	        return Math.sqrt(dx * dx + dy * dy);
	    }
	
	    function center(pointPair) {
	        return [
	            (pointPair[0][0] + pointPair[1][0]) / 2,
	            (pointPair[0][1] + pointPair[1][1]) / 2
	        ];
	    }
	
	    var recognizers = {
	
	        pinch: function (track, event) {
	            var trackLen = track.length;
	
	            if (!trackLen) {
	                return;
	            }
	
	            var pinchEnd = (track[trackLen - 1] || {}).points;
	            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;
	
	            if (pinchPre
	                && pinchPre.length > 1
	                && pinchEnd
	                && pinchEnd.length > 1
	            ) {
	                var pinchScale = dist(pinchEnd) / dist(pinchPre);
	                !isFinite(pinchScale) && (pinchScale = 1);
	
	                event.pinchScale = pinchScale;
	
	                var pinchCenter = center(pinchEnd);
	                event.pinchX = pinchCenter[0];
	                event.pinchY = pinchCenter[1];
	
	                return {
	                    type: 'pinch',
	                    target: track[0].target,
	                    event: event
	                };
	            }
	        }
	
	        // Only pinch currently.
	    };
	
	    module.exports = GestureMgr;
	


/***/ },
/* 613 */
/*!**********************************!*\
  !*** ./~/zrender/lib/Painter.js ***!
  \**********************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	/**
	 * Default canvas painter
	 * @module zrender/Painter
	 * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)
	 *         errorrik (errorrik@gmail.com)
	 *         pissang (https://www.github.com/pissang)
	 */
	 
	
	    var config = __webpack_require__(/*! ./config */ 563);
	    var util = __webpack_require__(/*! ./core/util */ 526);
	    var log = __webpack_require__(/*! ./core/log */ 562);
	    var BoundingRect = __webpack_require__(/*! ./core/BoundingRect */ 531);
	    var timsort = __webpack_require__(/*! ./core/timsort */ 607);
	
	    var Layer = __webpack_require__(/*! ./Layer */ 614);
	
	    var requestAnimationFrame = __webpack_require__(/*! ./animation/requestAnimationFrame */ 610);
	
	    // PENDIGN
	    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.
	    //
	    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.
	    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;
	
	    function parseInt10(val) {
	        return parseInt(val, 10);
	    }
	
	    function isLayerValid(layer) {
	        if (!layer) {
	            return false;
	        }
	
	        if (layer.isBuildin) {
	            return true;
	        }
	
	        if (typeof(layer.resize) !== 'function'
	            || typeof(layer.refresh) !== 'function'
	        ) {
	            return false;
	        }
	
	        return true;
	    }
	
	    function preProcessLayer(layer) {
	        layer.__unusedCount++;
	    }
	
	    function postProcessLayer(layer) {
	        if (layer.__unusedCount == 1) {
	            layer.clear();
	        }
	    }
	
	    var tmpRect = new BoundingRect(0, 0, 0, 0);
	    var viewRect = new BoundingRect(0, 0, 0, 0);
	    function isDisplayableCulled(el, width, height) {
	        tmpRect.copy(el.getBoundingRect());
	        if (el.transform) {
	            tmpRect.applyTransform(el.transform);
	        }
	        viewRect.width = width;
	        viewRect.height = height;
	        return !tmpRect.intersect(viewRect);
	    }
	
	    function isClipPathChanged(clipPaths, prevClipPaths) {
	        if (clipPaths == prevClipPaths) { // Can both be null or undefined
	            return false;
	        }
	
	        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {
	            return true;
	        }
	        for (var i = 0; i < clipPaths.length; i++) {
	            if (clipPaths[i] !== prevClipPaths[i]) {
	                return true;
	            }
	        }
	    }
	
	    function doClip(clipPaths, ctx) {
	        for (var i = 0; i < clipPaths.length; i++) {
	            var clipPath = clipPaths[i];
	            var m;
	            if (clipPath.transform) {
	                m = clipPath.transform;
	                ctx.transform(
	                    m[0], m[1],
	                    m[2], m[3],
	                    m[4], m[5]
	                );
	            }
	            var path = clipPath.path;
	            path.beginPath(ctx);
	            clipPath.buildPath(path, clipPath.shape);
	            ctx.clip();
	            // Transform back
	            if (clipPath.transform) {
	                m = clipPath.invTransform;
	                ctx.transform(
	                    m[0], m[1],
	                    m[2], m[3],
	                    m[4], m[5]
	                );
	            }
	        }
	    }
	
	    function createRoot(width, height) {
	        var domRoot = document.createElement('div');
	        var domRootStyle = domRoot.style;
	
	        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬
	        domRootStyle.position = 'relative';
	        domRootStyle.overflow = 'hidden';
	        domRootStyle.width = width + 'px';
	        domRootStyle.height = height + 'px';
	        return domRoot;
	    }
	
	    /**
	     * @alias module:zrender/Painter
	     * @constructor
	     * @param {HTMLElement} root 绘图容器
	     * @param {module:zrender/Storage} storage
	     * @param {Ojbect} opts
	     */
	    var Painter = function (root, storage, opts) {
	        // In node environment using node-canvas
	        var singleCanvas = !root.nodeName // In node ?
	            || root.nodeName.toUpperCase() === 'CANVAS';
	
	        opts = opts || {};
	
	        /**
	         * @type {number}
	         */
	        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;
	        /**
	         * @type {boolean}
	         * @private
	         */
	        this._singleCanvas = singleCanvas;
	        /**
	         * 绘图容器
	         * @type {HTMLElement}
	         */
	        this.root = root;
	
	        var rootStyle = root.style;
	
	        if (rootStyle) {
	            rootStyle['-webkit-tap-highlight-color'] = 'transparent';
	            rootStyle['-webkit-user-select'] =
	            rootStyle['user-select'] =
	            rootStyle['-webkit-touch-callout'] = 'none';
	
	            root.innerHTML = '';
	        }
	
	        /**
	         * @type {module:zrender/Storage}
	         */
	        this.storage = storage;
	
	        /**
	         * @type {Array.<number>}
	         * @private
	         */
	        var zlevelList = this._zlevelList = [];
	
	        /**
	         * @type {Object.<string, module:zrender/Layer>}
	         * @private
	         */
	        var layers = this._layers = {};
	
	        /**
	         * @type {Object.<string, Object>}
	         * @type {private}
	         */
	        this._layerConfig = {};
	
	        if (!singleCanvas) {
	            this._width = this._getWidth();
	            this._height = this._getHeight();
	
	            var domRoot = this._domRoot = createRoot(
	                this._width, this._height
	            );
	            root.appendChild(domRoot);
	        }
	        else {
	            // Use canvas width and height directly
	            var width = root.width;
	            var height = root.height;
	            this._width = width;
	            this._height = height;
	
	            // Create layer if only one given canvas
	            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height
	            var mainLayer = new Layer(root, this, 1);
	            mainLayer.initContext();
	            // FIXME Use canvas width and height
	            // mainLayer.resize(width, height);
	            layers[0] = mainLayer;
	            zlevelList.push(0);
	        }
	
	        this.pathToImage = this._createPathToImage();
	
	        // Layers for progressive rendering
	        this._progressiveLayers = [];
	
	        /**
	         * @type {module:zrender/Layer}
	         * @private
	         */
	        this._hoverlayer;
	
	        this._hoverElements = [];
	    };
	
	    Painter.prototype = {
	
	        constructor: Painter,
	
	        /**
	         * If painter use a single canvas
	         * @return {boolean}
	         */
	        isSingleCanvas: function () {
	            return this._singleCanvas;
	        },
	        /**
	         * @return {HTMLDivElement}
	         */
	        getViewportRoot: function () {
	            return this._singleCanvas ? this._layers[0].dom : this._domRoot;
	        },
	
	        /**
	         * 刷新
	         * @param {boolean} [paintAll=false] 强制绘制所有displayable
	         */
	        refresh: function (paintAll) {
	
	            var list = this.storage.getDisplayList(true);
	
	            var zlevelList = this._zlevelList;
	
	            this._paintList(list, paintAll);
	
	            // Paint custum layers
	            for (var i = 0; i < zlevelList.length; i++) {
	                var z = zlevelList[i];
	                var layer = this._layers[z];
	                if (!layer.isBuildin && layer.refresh) {
	                    layer.refresh();
	                }
	            }
	
	            this.refreshHover();
	
	            if (this._progressiveLayers.length) {
	                this._startProgessive();
	            }
	
	            return this;
	        },
	
	        addHover: function (el, hoverStyle) {
	            if (el.__hoverMir) {
	                return;
	            }
	            var elMirror = new el.constructor({
	                style: el.style,
	                shape: el.shape
	            });
	            elMirror.__from = el;
	            el.__hoverMir = elMirror;
	            elMirror.setStyle(hoverStyle);
	            this._hoverElements.push(elMirror);
	        },
	
	        removeHover: function (el) {
	            var elMirror = el.__hoverMir;
	            var hoverElements = this._hoverElements;
	            var idx = util.indexOf(hoverElements, elMirror);
	            if (idx >= 0) {
	                hoverElements.splice(idx, 1);
	            }
	            el.__hoverMir = null;
	        },
	
	        clearHover: function (el) {
	            var hoverElements = this._hoverElements;
	            for (var i = 0; i < hoverElements.length; i++) {
	                var from = hoverElements[i].__from;
	                if (from) {
	                    from.__hoverMir = null;
	                }
	            }
	            hoverElements.length = 0;
	        },
	
	        refreshHover: function () {
	            var hoverElements = this._hoverElements;
	            var len = hoverElements.length;
	            var hoverLayer = this._hoverlayer;
	            hoverLayer && hoverLayer.clear();
	
	            if (!len) {
	                return;
	            }
	            timsort(hoverElements, this.storage.displayableSortFunc);
	
	            // Use a extream large zlevel
	            // FIXME?
	            if (!hoverLayer) {
	                hoverLayer = this._hoverlayer = this.getLayer(1e5);
	            }
	
	            var scope = {};
	            hoverLayer.ctx.save();
	            for (var i = 0; i < len;) {
	                var el = hoverElements[i];
	                var originalEl = el.__from;
	                // Original el is removed
	                // PENDING
	                if (!(originalEl && originalEl.__zr)) {
	                    hoverElements.splice(i, 1);
	                    originalEl.__hoverMir = null;
	                    len--;
	                    continue;
	                }
	                i++;
	
	                // Use transform
	                // FIXME style and shape ?
	                if (!originalEl.invisible) {
	                    el.transform = originalEl.transform;
	                    el.invTransform = originalEl.invTransform;
	                    el.__clipPaths = originalEl.__clipPaths;
	                    // el.
	                    this._doPaintEl(el, hoverLayer, true, scope);
	                }
	            }
	            hoverLayer.ctx.restore();
	        },
	
	        _startProgessive: function () {
	            var self = this;
	
	            if (!self._furtherProgressive) {
	                return;
	            }
	
	            // Use a token to stop progress steps triggered by
	            // previous zr.refresh calling.
	            var token = self._progressiveToken = +new Date();
	
	            self._progress++;
	            requestAnimationFrame(step);
	
	            function step() {
	                // In case refreshed or disposed
	                if (token === self._progressiveToken && self.storage) {
	
	                    self._doPaintList(self.storage.getDisplayList());
	
	                    if (self._furtherProgressive) {
	                        self._progress++;
	                        requestAnimationFrame(step);
	                    }
	                    else {
	                        self._progressiveToken = -1;
	                    }
	                }
	            }
	        },
	
	        _clearProgressive: function () {
	            this._progressiveToken = -1;
	            this._progress = 0;
	            util.each(this._progressiveLayers, function (layer) {
	                layer.__dirty && layer.clear();
	            });
	        },
	
	        _paintList: function (list, paintAll) {
	
	            if (paintAll == null) {
	                paintAll = false;
	            }
	
	            this._updateLayerStatus(list);
	
	            this._clearProgressive();
	
	            this.eachBuildinLayer(preProcessLayer);
	
	            this._doPaintList(list, paintAll);
	
	            this.eachBuildinLayer(postProcessLayer);
	        },
	
	        _doPaintList: function (list, paintAll) {
	            var currentLayer;
	            var currentZLevel;
	            var ctx;
	
	            // var invTransform = [];
	            var scope;
	
	            var progressiveLayerIdx = 0;
	            var currentProgressiveLayer;
	
	            var width = this._width;
	            var height = this._height;
	            var layerProgress;
	            var frame = this._progress;
	            function flushProgressiveLayer(layer) {
	                ctx.save();
	                ctx.globalAlpha = 1;
	                ctx.shadowBlur = 0;
	                // Avoid layer don't clear in next progressive frame
	                currentLayer.__dirty = true;
	                ctx.drawImage(layer.dom, 0, 0, width, height);
	                ctx.restore();
	
	                currentLayer.ctx.restore();
	            }
	
	            for (var i = 0, l = list.length; i < l; i++) {
	                var el = list[i];
	                var elZLevel = this._singleCanvas ? 0 : el.zlevel;
	
	                var elFrame = el.__frame;
	
	                // Flush at current context
	                // PENDING
	                if (elFrame < 0 && currentProgressiveLayer) {
	                    flushProgressiveLayer(currentProgressiveLayer);
	                    currentProgressiveLayer = null;
	                }
	
	                // Change draw layer
	                if (currentZLevel !== elZLevel) {
	                    if (ctx) {
	                        ctx.restore();
	                    }
	
	                    // Reset scope
	                    scope = {};
	
	                    // Only 0 zlevel if only has one canvas
	                    currentZLevel = elZLevel;
	                    currentLayer = this.getLayer(currentZLevel);
	
	                    if (!currentLayer.isBuildin) {
	                        log(
	                            'ZLevel ' + currentZLevel
	                            + ' has been used by unkown layer ' + currentLayer.id
	                        );
	                    }
	
	                    ctx = currentLayer.ctx;
	                    ctx.save();
	
	                    // Reset the count
	                    currentLayer.__unusedCount = 0;
	
	                    if (currentLayer.__dirty || paintAll) {
	                        currentLayer.clear();
	                    }
	                }
	
	                if (!(currentLayer.__dirty || paintAll)) {
	                    continue;
	                }
	                if (elFrame >= 0) {
	                    // Progressive layer changed
	                    if (!currentProgressiveLayer) {
	                        currentProgressiveLayer = this._progressiveLayers[
	                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)
	                        ];
	
	                        currentProgressiveLayer.ctx.save();
	                        currentProgressiveLayer.renderScope = {};
	
	                        if (currentProgressiveLayer
	                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)
	                        ) {
	                            // flushProgressiveLayer(currentProgressiveLayer);
	                            // Quick jump all progressive elements
	                            // All progressive element are not dirty, jump over and flush directly
	                            i = currentProgressiveLayer.__nextIdxNotProg - 1;
	                            // currentProgressiveLayer = null;
	                            continue;
	                        }
	
	                        layerProgress = currentProgressiveLayer.__progress;
	
	                        if (!currentProgressiveLayer.__dirty) {
	                            // Keep rendering
	                            frame = layerProgress;
	                        }
	
	                        currentProgressiveLayer.__progress = frame + 1;
	                    }
	
	                    if (elFrame === frame) {
	                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);
	                    }
	                }
	                else {
	                    this._doPaintEl(el, currentLayer, paintAll, scope);
	                }
	
	                el.__dirty = false;
	            }
	
	            if (currentProgressiveLayer) {
	                flushProgressiveLayer(currentProgressiveLayer);
	            }
	
	            // Restore the lastLayer ctx
	            ctx && ctx.restore();
	            // If still has clipping state
	            // if (scope.prevElClipPaths) {
	            //     ctx.restore();
	            // }
	
	            this._furtherProgressive = false;
	            util.each(this._progressiveLayers, function (layer) {
	                if (layer.__maxProgress >= layer.__progress) {
	                    this._furtherProgressive = true;
	                }
	            }, this);
	        },
	
	        _doPaintEl: function (el, currentLayer, forcePaint, scope) {
	            var ctx = currentLayer.ctx;
	
	            if (
	                (currentLayer.__dirty || forcePaint)
	                // Ignore invisible element
	                && !el.invisible
	                // Ignore transparent element
	                && el.style.opacity !== 0
	                // Ignore scale 0 element, in some environment like node-canvas
	                // Draw a scale 0 element can cause all following draw wrong
	                && el.scale[0] && el.scale[1]
	                // Ignore culled element
	                && !(el.culling && isDisplayableCulled(el, this._width, this._height))
	            ) {
	
	                var clipPaths = el.__clipPaths;
	
	                // Optimize when clipping on group with several elements
	                if (scope.prevClipLayer !== currentLayer
	                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)
	                ) {
	                    // If has previous clipping state, restore from it
	                    if (scope.prevElClipPaths) {
	                        scope.prevClipLayer.ctx.restore();
	                        scope.prevClipLayer = scope.prevElClipPaths = null;
	
	                        // Reset prevEl since context has been restored
	                        scope.prevEl = null;
	                    }
	                    // New clipping state
	                    if (clipPaths) {
	                        ctx.save();
	                        doClip(clipPaths, ctx);
	                        scope.prevClipLayer = currentLayer;
	                        scope.prevElClipPaths = clipPaths;
	                    }
	                }
	                el.beforeBrush && el.beforeBrush(ctx);
	
	                el.brush(ctx, scope.prevEl || null);
	                scope.prevEl = el;
	
	                el.afterBrush && el.afterBrush(ctx);
	            }
	        },
	
	        /**
	         * 获取 zlevel 所在层，如果不存在则会创建一个新的层
	         * @param {number} zlevel
	         * @return {module:zrender/Layer}
	         */
	        getLayer: function (zlevel) {
	            if (this._singleCanvas) {
	                return this._layers[0];
	            }
	
	            var layer = this._layers[zlevel];
	            if (!layer) {
	                // Create a new layer
	                layer = new Layer('zr_' + zlevel, this, this.dpr);
	                layer.isBuildin = true;
	
	                if (this._layerConfig[zlevel]) {
	                    util.merge(layer, this._layerConfig[zlevel], true);
	                }
	
	                this.insertLayer(zlevel, layer);
	
	                // Context is created after dom inserted to document
	                // Or excanvas will get 0px clientWidth and clientHeight
	                layer.initContext();
	            }
	
	            return layer;
	        },
	
	        insertLayer: function (zlevel, layer) {
	
	            var layersMap = this._layers;
	            var zlevelList = this._zlevelList;
	            var len = zlevelList.length;
	            var prevLayer = null;
	            var i = -1;
	            var domRoot = this._domRoot;
	
	            if (layersMap[zlevel]) {
	                log('ZLevel ' + zlevel + ' has been used already');
	                return;
	            }
	            // Check if is a valid layer
	            if (!isLayerValid(layer)) {
	                log('Layer of zlevel ' + zlevel + ' is not valid');
	                return;
	            }
	
	            if (len > 0 && zlevel > zlevelList[0]) {
	                for (i = 0; i < len - 1; i++) {
	                    if (
	                        zlevelList[i] < zlevel
	                        && zlevelList[i + 1] > zlevel
	                    ) {
	                        break;
	                    }
	                }
	                prevLayer = layersMap[zlevelList[i]];
	            }
	            zlevelList.splice(i + 1, 0, zlevel);
	
	            if (prevLayer) {
	                var prevDom = prevLayer.dom;
	                if (prevDom.nextSibling) {
	                    domRoot.insertBefore(
	                        layer.dom,
	                        prevDom.nextSibling
	                    );
	                }
	                else {
	                    domRoot.appendChild(layer.dom);
	                }
	            }
	            else {
	                if (domRoot.firstChild) {
	                    domRoot.insertBefore(layer.dom, domRoot.firstChild);
	                }
	                else {
	                    domRoot.appendChild(layer.dom);
	                }
	            }
	
	            layersMap[zlevel] = layer;
	        },
	
	        // Iterate each layer
	        eachLayer: function (cb, context) {
	            var zlevelList = this._zlevelList;
	            var z;
	            var i;
	            for (i = 0; i < zlevelList.length; i++) {
	                z = zlevelList[i];
	                cb.call(context, this._layers[z], z);
	            }
	        },
	
	        // Iterate each buildin layer
	        eachBuildinLayer: function (cb, context) {
	            var zlevelList = this._zlevelList;
	            var layer;
	            var z;
	            var i;
	            for (i = 0; i < zlevelList.length; i++) {
	                z = zlevelList[i];
	                layer = this._layers[z];
	                if (layer.isBuildin) {
	                    cb.call(context, layer, z);
	                }
	            }
	        },
	
	        // Iterate each other layer except buildin layer
	        eachOtherLayer: function (cb, context) {
	            var zlevelList = this._zlevelList;
	            var layer;
	            var z;
	            var i;
	            for (i = 0; i < zlevelList.length; i++) {
	                z = zlevelList[i];
	                layer = this._layers[z];
	                if (! layer.isBuildin) {
	                    cb.call(context, layer, z);
	                }
	            }
	        },
	
	        /**
	         * 获取所有已创建的层
	         * @param {Array.<module:zrender/Layer>} [prevLayer]
	         */
	        getLayers: function () {
	            return this._layers;
	        },
	
	        _updateLayerStatus: function (list) {
	
	            var layers = this._layers;
	            var progressiveLayers = this._progressiveLayers;
	
	            var elCountsLastFrame = {};
	            var progressiveElCountsLastFrame = {};
	
	            this.eachBuildinLayer(function (layer, z) {
	                elCountsLastFrame[z] = layer.elCount;
	                layer.elCount = 0;
	                layer.__dirty = false;
	            });
	
	            util.each(progressiveLayers, function (layer, idx) {
	                progressiveElCountsLastFrame[idx] = layer.elCount;
	                layer.elCount = 0;
	                layer.__dirty = false;
	            });
	
	            var progressiveLayerCount = 0;
	            var currentProgressiveLayer;
	            var lastProgressiveKey;
	            var frameCount = 0;
	            for (var i = 0, l = list.length; i < l; i++) {
	                var el = list[i];
	                var zlevel = this._singleCanvas ? 0 : el.zlevel;
	                var layer = layers[zlevel];
	                var elProgress = el.progressive;
	                if (layer) {
	                    layer.elCount++;
	                    layer.__dirty = layer.__dirty || el.__dirty;
	                }
	
	                /////// Update progressive
	                if (elProgress >= 0) {
	                    // Fix wrong progressive sequence problem.
	                    if (lastProgressiveKey !== elProgress) {
	                        lastProgressiveKey = elProgress;
	                        frameCount++;
	                    }
	                    var elFrame = el.__frame = frameCount - 1;
	                    if (!currentProgressiveLayer) {
	                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);
	                        currentProgressiveLayer = progressiveLayers[idx];
	                        if (!currentProgressiveLayer) {
	                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(
	                                'progressive', this, this.dpr
	                            );
	                            currentProgressiveLayer.initContext();
	                        }
	                        currentProgressiveLayer.__maxProgress = 0;
	                    }
	                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;
	                    currentProgressiveLayer.elCount++;
	
	                    currentProgressiveLayer.__maxProgress = Math.max(
	                        currentProgressiveLayer.__maxProgress, elFrame
	                    );
	
	                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {
	                        // Should keep rendering this  layer because progressive rendering is not finished yet
	                        layer.__dirty = true;
	                    }
	                }
	                else {
	                    el.__frame = -1;
	
	                    if (currentProgressiveLayer) {
	                        currentProgressiveLayer.__nextIdxNotProg = i;
	                        progressiveLayerCount++;
	                        currentProgressiveLayer = null;
	                    }
	                }
	            }
	
	            if (currentProgressiveLayer) {
	                progressiveLayerCount++;
	                currentProgressiveLayer.__nextIdxNotProg = i;
	            }
	
	            // 层中的元素数量有发生变化
	            this.eachBuildinLayer(function (layer, z) {
	                if (elCountsLastFrame[z] !== layer.elCount) {
	                    layer.__dirty = true;
	                }
	            });
	
	            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);
	            util.each(progressiveLayers, function (layer, idx) {
	                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {
	                    el.__dirty = true;
	                }
	                if (layer.__dirty) {
	                    layer.__progress = 0;
	                }
	            });
	        },
	
	        /**
	         * 清除hover层外所有内容
	         */
	        clear: function () {
	            this.eachBuildinLayer(this._clearLayer);
	            return this;
	        },
	
	        _clearLayer: function (layer) {
	            layer.clear();
	        },
	
	        /**
	         * 修改指定zlevel的绘制参数
	         *
	         * @param {string} zlevel
	         * @param {Object} config 配置对象
	         * @param {string} [config.clearColor=0] 每次清空画布的颜色
	         * @param {string} [config.motionBlur=false] 是否开启动态模糊
	         * @param {number} [config.lastFrameAlpha=0.7]
	         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显
	         */
	        configLayer: function (zlevel, config) {
	            if (config) {
	                var layerConfig = this._layerConfig;
	                if (!layerConfig[zlevel]) {
	                    layerConfig[zlevel] = config;
	                }
	                else {
	                    util.merge(layerConfig[zlevel], config, true);
	                }
	
	                var layer = this._layers[zlevel];
	
	                if (layer) {
	                    util.merge(layer, layerConfig[zlevel], true);
	                }
	            }
	        },
	
	        /**
	         * 删除指定层
	         * @param {number} zlevel 层所在的zlevel
	         */
	        delLayer: function (zlevel) {
	            var layers = this._layers;
	            var zlevelList = this._zlevelList;
	            var layer = layers[zlevel];
	            if (!layer) {
	                return;
	            }
	            layer.dom.parentNode.removeChild(layer.dom);
	            delete layers[zlevel];
	
	            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);
	        },
	
	        /**
	         * 区域大小变化后重绘
	         */
	        resize: function (width, height) {
	            var domRoot = this._domRoot;
	            // FIXME Why ?
	            domRoot.style.display = 'none';
	
	            width = width || this._getWidth();
	            height = height || this._getHeight();
	
	            domRoot.style.display = '';
	
	            // 优化没有实际改变的resize
	            if (this._width != width || height != this._height) {
	                domRoot.style.width = width + 'px';
	                domRoot.style.height = height + 'px';
	
	                for (var id in this._layers) {
	                    this._layers[id].resize(width, height);
	                }
	
	                this.refresh(true);
	            }
	
	            this._width = width;
	            this._height = height;
	
	            return this;
	        },
	
	        /**
	         * 清除单独的一个层
	         * @param {number} zlevel
	         */
	        clearLayer: function (zlevel) {
	            var layer = this._layers[zlevel];
	            if (layer) {
	                layer.clear();
	            }
	        },
	
	        /**
	         * 释放
	         */
	        dispose: function () {
	            this.root.innerHTML = '';
	
	            this.root =
	            this.storage =
	
	            this._domRoot =
	            this._layers = null;
	        },
	
	        /**
	         * Get canvas which has all thing rendered
	         * @param {Object} opts
	         * @param {string} [opts.backgroundColor]
	         */
	        getRenderedCanvas: function (opts) {
	            opts = opts || {};
	            if (this._singleCanvas) {
	                return this._layers[0].dom;
	            }
	
	            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);
	            imageLayer.initContext();
	
	            imageLayer.clearColor = opts.backgroundColor;
	            imageLayer.clear();
	
	            var displayList = this.storage.getDisplayList(true);
	
	            var scope = {};
	            for (var i = 0; i < displayList.length; i++) {
	                var el = displayList[i];
	                this._doPaintEl(el, imageLayer, true, scope);
	            }
	
	            return imageLayer.dom;
	        },
	        /**
	         * 获取绘图区域宽度
	         */
	        getWidth: function () {
	            return this._width;
	        },
	
	        /**
	         * 获取绘图区域高度
	         */
	        getHeight: function () {
	            return this._height;
	        },
	
	        _getWidth: function () {
	            var root = this.root;
	            var stl = document.defaultView.getComputedStyle(root);
	
	            // FIXME Better way to get the width and height when element has not been append to the document
	            return ((root.clientWidth || parseInt10(stl.width) || parseInt10(root.style.width))
	                    - (parseInt10(stl.paddingLeft) || 0)
	                    - (parseInt10(stl.paddingRight) || 0)) | 0;
	        },
	
	        _getHeight: function () {
	            var root = this.root;
	            var stl = document.defaultView.getComputedStyle(root);
	
	            return ((root.clientHeight || parseInt10(stl.height) || parseInt10(root.style.height))
	                    - (parseInt10(stl.paddingTop) || 0)
	                    - (parseInt10(stl.paddingBottom) || 0)) | 0;
	        },
	
	        _pathToImage: function (id, path, width, height, dpr) {
	            var canvas = document.createElement('canvas');
	            var ctx = canvas.getContext('2d');
	
	            canvas.width = width * dpr;
	            canvas.height = height * dpr;
	
	            ctx.clearRect(0, 0, width * dpr, height * dpr);
	
	            var pathTransform = {
	                position: path.position,
	                rotation: path.rotation,
	                scale: path.scale
	            };
	            path.position = [0, 0, 0];
	            path.rotation = 0;
	            path.scale = [1, 1];
	            if (path) {
	                path.brush(ctx);
	            }
	
	            var ImageShape = __webpack_require__(/*! ./graphic/Image */ 584);
	            var imgShape = new ImageShape({
	                id: id,
	                style: {
	                    x: 0,
	                    y: 0,
	                    image: canvas
	                }
	            });
	
	            if (pathTransform.position != null) {
	                imgShape.position = path.position = pathTransform.position;
	            }
	
	            if (pathTransform.rotation != null) {
	                imgShape.rotation = path.rotation = pathTransform.rotation;
	            }
	
	            if (pathTransform.scale != null) {
	                imgShape.scale = path.scale = pathTransform.scale;
	            }
	
	            return imgShape;
	        },
	
	        _createPathToImage: function () {
	            var me = this;
	
	            return function (id, e, width, height) {
	                return me._pathToImage(
	                    id, e, width, height, me.dpr
	                );
	            };
	        }
	    };
	
	    module.exports = Painter;
	


/***/ },
/* 614 */
/*!********************************!*\
  !*** ./~/zrender/lib/Layer.js ***!
  \********************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * @module zrender/Layer
	 * @author pissang(https://www.github.com/pissang)
	 */
	
	
	    var util = __webpack_require__(/*! ./core/util */ 526);
	    var config = __webpack_require__(/*! ./config */ 563);
	    var Style = __webpack_require__(/*! ./graphic/Style */ 569);
	    var Pattern = __webpack_require__(/*! ./graphic/Pattern */ 581);
	
	    function returnFalse() {
	        return false;
	    }
	
	    /**
	     * 创建dom
	     *
	     * @inner
	     * @param {string} id dom id 待用
	     * @param {string} type dom type，such as canvas, div etc.
	     * @param {Painter} painter painter instance
	     * @param {number} number
	     */
	    function createDom(id, type, painter, dpr) {
	        var newDom = document.createElement(type);
	        var width = painter.getWidth();
	        var height = painter.getHeight();
	
	        var newDomStyle = newDom.style;
	        // 没append呢，请原谅我这样写，清晰~
	        newDomStyle.position = 'absolute';
	        newDomStyle.left = 0;
	        newDomStyle.top = 0;
	        newDomStyle.width = width + 'px';
	        newDomStyle.height = height + 'px';
	        newDom.width = width * dpr;
	        newDom.height = height * dpr;
	
	        // id不作为索引用，避免可能造成的重名，定义为私有属性
	        newDom.setAttribute('data-zr-dom-id', id);
	        return newDom;
	    }
	
	    /**
	     * @alias module:zrender/Layer
	     * @constructor
	     * @extends module:zrender/mixin/Transformable
	     * @param {string} id
	     * @param {module:zrender/Painter} painter
	     * @param {number} [dpr]
	     */
	    var Layer = function(id, painter, dpr) {
	        var dom;
	        dpr = dpr || config.devicePixelRatio;
	        if (typeof id === 'string') {
	            dom = createDom(id, 'canvas', painter, dpr);
	        }
	        // Not using isDom because in node it will return false
	        else if (util.isObject(id)) {
	            dom = id;
	            id = dom.id;
	        }
	        this.id = id;
	        this.dom = dom;
	
	        var domStyle = dom.style;
	        if (domStyle) { // Not in node
	            dom.onselectstart = returnFalse; // 避免页面选中的尴尬
	            domStyle['-webkit-user-select'] = 'none';
	            domStyle['user-select'] = 'none';
	            domStyle['-webkit-touch-callout'] = 'none';
	            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';
	        }
	
	        this.domBack = null;
	        this.ctxBack = null;
	
	        this.painter = painter;
	
	        this.config = null;
	
	        // Configs
	        /**
	         * 每次清空画布的颜色
	         * @type {string}
	         * @default 0
	         */
	        this.clearColor = 0;
	        /**
	         * 是否开启动态模糊
	         * @type {boolean}
	         * @default false
	         */
	        this.motionBlur = false;
	        /**
	         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显
	         * @type {number}
	         * @default 0.7
	         */
	        this.lastFrameAlpha = 0.7;
	
	        /**
	         * Layer dpr
	         * @type {number}
	         */
	        this.dpr = dpr;
	    };
	
	    Layer.prototype = {
	
	        constructor: Layer,
	
	        elCount: 0,
	
	        __dirty: true,
	
	        initContext: function () {
	            this.ctx = this.dom.getContext('2d');
	
	            var dpr = this.dpr;
	            if (dpr != 1) {
	                this.ctx.scale(dpr, dpr);
	            }
	        },
	
	        createBackBuffer: function () {
	            var dpr = this.dpr;
	
	            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);
	            this.ctxBack = this.domBack.getContext('2d');
	
	            if (dpr != 1) {
	                this.ctxBack.scale(dpr, dpr);
	            }
	        },
	
	        /**
	         * @param  {number} width
	         * @param  {number} height
	         */
	        resize: function (width, height) {
	            var dpr = this.dpr;
	
	            var dom = this.dom;
	            var domStyle = dom.style;
	            var domBack = this.domBack;
	
	            domStyle.width = width + 'px';
	            domStyle.height = height + 'px';
	
	            dom.width = width * dpr;
	            dom.height = height * dpr;
	
	            if (dpr != 1) {
	                this.ctx.scale(dpr, dpr);
	            }
	
	            if (domBack) {
	                domBack.width = width * dpr;
	                domBack.height = height * dpr;
	
	                if (dpr != 1) {
	                    this.ctxBack.scale(dpr, dpr);
	                }
	            }
	        },
	
	        /**
	         * 清空该层画布
	         * @param {boolean} clearAll Clear all with out motion blur
	         */
	        clear: function (clearAll) {
	            var dom = this.dom;
	            var ctx = this.ctx;
	            var width = dom.width;
	            var height = dom.height;
	
	            var clearColor = this.clearColor;
	            var haveMotionBLur = this.motionBlur && !clearAll;
	            var lastFrameAlpha = this.lastFrameAlpha;
	
	            var dpr = this.dpr;
	
	            if (haveMotionBLur) {
	                if (!this.domBack) {
	                    this.createBackBuffer();
	                }
	
	                this.ctxBack.globalCompositeOperation = 'copy';
	                this.ctxBack.drawImage(
	                    dom, 0, 0,
	                    width / dpr,
	                    height / dpr
	                );
	            }
	
	            ctx.clearRect(0, 0, width / dpr, height / dpr);
	            if (clearColor) {
	                var clearColorGradientOrPattern;
	                // Gradient
	                if (clearColor.colorStops) {
	                    // Cache canvas gradient
	                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {
	                        x: 0,
	                        y: 0,
	                        width: width / dpr,
	                        height: height / dpr
	                    });
	
	                    clearColor.__canvasGradient = clearColorGradientOrPattern;
	                }
	                // Pattern
	                else if (clearColor.image) {
	                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);
	                }
	                ctx.save();
	                ctx.fillStyle = clearColorGradientOrPattern || clearColor;
	                ctx.fillRect(0, 0, width / dpr, height / dpr);
	                ctx.restore();
	            }
	
	            if (haveMotionBLur) {
	                var domBack = this.domBack;
	                ctx.save();
	                ctx.globalAlpha = lastFrameAlpha;
	                ctx.drawImage(domBack, 0, 0, width / dpr, height / dpr);
	                ctx.restore();
	            }
	        }
	    };
	
	    module.exports = Layer;


/***/ },
/* 615 */
/*!******************************************!*\
  !*** ./~/echarts/lib/loading/default.js ***!
  \******************************************/
/***/ function(module, exports, __webpack_require__) {

	
	
	    var graphic = __webpack_require__(/*! ../util/graphic */ 565);
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	    var PI = Math.PI;
	    /**
	     * @param {module:echarts/ExtensionAPI} api
	     * @param {Object} [opts]
	     * @param {string} [opts.text]
	     * @param {string} [opts.color]
	     * @param {string} [opts.textColor]
	     * @return {module:zrender/Element}
	     */
	    module.exports = function (api, opts) {
	        opts = opts || {};
	        zrUtil.defaults(opts, {
	            text: 'loading',
	            color: '#c23531',
	            textColor: '#000',
	            maskColor: 'rgba(255, 255, 255, 0.8)',
	            zlevel: 0
	        });
	        var mask = new graphic.Rect({
	            style: {
	                fill: opts.maskColor
	            },
	            zlevel: opts.zlevel,
	            z: 10000
	        });
	        var arc = new graphic.Arc({
	            shape: {
	                startAngle: -PI / 2,
	                endAngle: -PI / 2 + 0.1,
	                r: 10
	            },
	            style: {
	                stroke: opts.color,
	                lineCap: 'round',
	                lineWidth: 5
	            },
	            zlevel: opts.zlevel,
	            z: 10001
	        });
	        var labelRect = new graphic.Rect({
	            style: {
	                fill: 'none',
	                text: opts.text,
	                textPosition: 'right',
	                textDistance: 10,
	                textFill: opts.textColor
	            },
	            zlevel: opts.zlevel,
	            z: 10001
	        });
	
	        arc.animateShape(true)
	            .when(1000, {
	                endAngle: PI * 3 / 2
	            })
	            .start('circularInOut');
	        arc.animateShape(true)
	            .when(1000, {
	                startAngle: PI * 3 / 2
	            })
	            .delay(300)
	            .start('circularInOut');
	
	        var group = new graphic.Group();
	        group.add(arc);
	        group.add(labelRect);
	        group.add(mask);
	        // Inject resize
	        group.resize = function () {
	            var cx = api.getWidth() / 2;
	            var cy = api.getHeight() / 2;
	            arc.setShape({
	                cx: cx,
	                cy: cy
	            });
	            var r = arc.shape.r;
	            labelRect.setShape({
	                x: cx - r,
	                y: cy - r,
	                width: r * 2,
	                height: r * 2
	            });
	
	            mask.setShape({
	                x: 0,
	                y: 0,
	                width: api.getWidth(),
	                height: api.getHeight()
	            });
	        };
	        group.resize();
	        return group;
	    };


/***/ },
/* 616 */
/*!*********************************************!*\
  !*** ./~/echarts/lib/visual/seriesColor.js ***!
  \*********************************************/
/***/ function(module, exports, __webpack_require__) {

	
	    var Gradient = __webpack_require__(/*! zrender/lib/graphic/Gradient */ 583);
	    module.exports = function (ecModel) {
	        function encodeColor(seriesModel) {
	            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');
	            var data = seriesModel.getData();
	            var color = seriesModel.get(colorAccessPath) // Set in itemStyle
	                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color
	
	            // FIXME Set color function or use the platte color
	            data.setVisual('color', color);
	
	            // Only visible series has each data be visual encoded
	            if (!ecModel.isSeriesFiltered(seriesModel)) {
	                if (typeof color === 'function' && !(color instanceof Gradient)) {
	                    data.each(function (idx) {
	                        data.setItemVisual(
	                            idx, 'color', color(seriesModel.getDataParams(idx))
	                        );
	                    });
	                }
	
	                // itemStyle in each data item
	                data.each(function (idx) {
	                    var itemModel = data.getItemModel(idx);
	                    var color = itemModel.get(colorAccessPath, true);
	                    if (color != null) {
	                        data.setItemVisual(idx, 'color', color);
	                    }
	                });
	            }
	        }
	        ecModel.eachRawSeries(encodeColor);
	    };


/***/ },
/* 617 */
/*!******************************************************!*\
  !*** ./~/echarts/lib/preprocessor/backwardCompat.js ***!
  \******************************************************/
/***/ function(module, exports, __webpack_require__) {

	// Compatitable with 2.0
	
	
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	    var compatStyle = __webpack_require__(/*! ./helper/compatStyle */ 618);
	
	    function get(opt, path) {
	        path = path.split(',');
	        var obj = opt;
	        for (var i = 0; i < path.length; i++) {
	            obj = obj && obj[path[i]];
	            if (obj == null) {
	                break;
	            }
	        }
	        return obj;
	    }
	
	    function set(opt, path, val, overwrite) {
	        path = path.split(',');
	        var obj = opt;
	        var key;
	        for (var i = 0; i < path.length - 1; i++) {
	            key = path[i];
	            if (obj[key] == null) {
	                obj[key] = {};
	            }
	            obj = obj[key];
	        }
	        if (overwrite || obj[path[i]] == null) {
	            obj[path[i]] = val;
	        }
	    }
	
	    function compatLayoutProperties(option) {
	        each(LAYOUT_PROPERTIES, function (prop) {
	            if (prop[0] in option && !(prop[1] in option)) {
	                option[prop[1]] = option[prop[0]];
	            }
	        });
	    }
	
	    var LAYOUT_PROPERTIES = [
	        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']
	    ];
	
	    var COMPATITABLE_COMPONENTS = [
	        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'
	    ];
	
	    var COMPATITABLE_SERIES = [
	        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',
	        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',
	        'pie', 'radar', 'sankey', 'scatter', 'treemap'
	    ];
	
	    var each = zrUtil.each;
	
	    module.exports = function (option) {
	        each(option.series, function (seriesOpt) {
	            if (!zrUtil.isObject(seriesOpt)) {
	                return;
	            }
	
	            var seriesType = seriesOpt.type;
	
	            compatStyle(seriesOpt);
	
	            if (seriesType === 'pie' || seriesType === 'gauge') {
	                if (seriesOpt.clockWise != null) {
	                    seriesOpt.clockwise = seriesOpt.clockWise;
	                }
	            }
	            if (seriesType === 'gauge') {
	                var pointerColor = get(seriesOpt, 'pointer.color');
	                pointerColor != null
	                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);
	            }
	
	            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {
	                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {
	                    compatLayoutProperties(seriesOpt);
	                    break;
	                }
	            }
	        });
	
	        // dataRange has changed to visualMap
	        if (option.dataRange) {
	            option.visualMap = option.dataRange;
	        }
	
	        each(COMPATITABLE_COMPONENTS, function (componentName) {
	            var options = option[componentName];
	            if (options) {
	                if (!zrUtil.isArray(options)) {
	                    options = [options];
	                }
	                each(options, function (option) {
	                    compatLayoutProperties(option);
	                });
	            }
	        });
	    };


/***/ },
/* 618 */
/*!**********************************************************!*\
  !*** ./~/echarts/lib/preprocessor/helper/compatStyle.js ***!
  \**********************************************************/
/***/ function(module, exports, __webpack_require__) {

	
	
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	
	    var POSSIBLE_STYLES = [
	        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',
	        'chordStyle', 'label', 'labelLine'
	    ];
	
	    function compatItemStyle(opt) {
	        var itemStyleOpt = opt && opt.itemStyle;
	        if (itemStyleOpt) {
	            zrUtil.each(POSSIBLE_STYLES, function (styleName) {
	                var normalItemStyleOpt = itemStyleOpt.normal;
	                var emphasisItemStyleOpt = itemStyleOpt.emphasis;
	                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {
	                    opt[styleName] = opt[styleName] || {};
	                    if (!opt[styleName].normal) {
	                        opt[styleName].normal = normalItemStyleOpt[styleName];
	                    }
	                    else {
	                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);
	                    }
	                    normalItemStyleOpt[styleName] = null;
	                }
	                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {
	                    opt[styleName] = opt[styleName] || {};
	                    if (!opt[styleName].emphasis) {
	                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];
	                    }
	                    else {
	                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);
	                    }
	                    emphasisItemStyleOpt[styleName] = null;
	                }
	            });
	        }
	    }
	
	    module.exports = function (seriesOpt) {
	        if (!seriesOpt) {
	            return;
	        }
	        compatItemStyle(seriesOpt);
	        compatItemStyle(seriesOpt.markPoint);
	        compatItemStyle(seriesOpt.markLine);
	        var data = seriesOpt.data;
	        if (data) {
	            for (var i = 0; i < data.length; i++) {
	                compatItemStyle(data[i]);
	            }
	            // mark point data
	            var markPoint = seriesOpt.markPoint;
	            if (markPoint && markPoint.data) {
	                var mpData = markPoint.data;
	                for (var i = 0; i < mpData.length; i++) {
	                    compatItemStyle(mpData[i]);
	                }
	            }
	            // mark line data
	            var markLine = seriesOpt.markLine;
	            if (markLine && markLine.data) {
	                var mlData = markLine.data;
	                for (var i = 0; i < mlData.length; i++) {
	                    if (zrUtil.isArray(mlData[i])) {
	                        compatItemStyle(mlData[i][0]);
	                        compatItemStyle(mlData[i][1]);
	                    }
	                    else {
	                        compatItemStyle(mlData[i]);
	                    }
	                }
	            }
	        }
	    };


/***/ },
/* 619 */
/*!************************************!*\
  !*** ./~/echarts/lib/data/List.js ***!
  \************************************/
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {/**
	 * List for data storage
	 * @module echarts/data/List
	 */
	
	
	    var UNDEFINED = 'undefined';
	    var globalObj = typeof window === 'undefined' ? global : window;
	    var Float64Array = typeof globalObj.Float64Array === UNDEFINED
	        ? Array : globalObj.Float64Array;
	    var Int32Array = typeof globalObj.Int32Array === UNDEFINED
	        ? Array : globalObj.Int32Array;
	
	    var dataCtors = {
	        'float': Float64Array,
	        'int': Int32Array,
	        // Ordinal data type can be string or int
	        'ordinal': Array,
	        'number': Array,
	        'time': Array
	    };
	
	    var Model = __webpack_require__(/*! ../model/Model */ 534);
	    var DataDiffer = __webpack_require__(/*! ./DataDiffer */ 620);
	
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	    var modelUtil = __webpack_require__(/*! ../util/model */ 527);
	    var isObject = zrUtil.isObject;
	
	    var TRANSFERABLE_PROPERTIES = [
	        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'
	    ];
	
	    var transferProperties = function (a, b) {
	        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {
	            if (b.hasOwnProperty(propName)) {
	                a[propName] = b[propName];
	            }
	        });
	
	        a.__wrappedMethods = b.__wrappedMethods;
	    };
	
	    /**
	     * @constructor
	     * @alias module:echarts/data/List
	     *
	     * @param {Array.<string>} dimensions
	     *        Dimensions should be concrete names like x, y, z, lng, lat, angle, radius
	     * @param {module:echarts/model/Model} hostModel
	     */
	    var List = function (dimensions, hostModel) {
	
	        dimensions = dimensions || ['x', 'y'];
	
	        var dimensionInfos = {};
	        var dimensionNames = [];
	        for (var i = 0; i < dimensions.length; i++) {
	            var dimensionName;
	            var dimensionInfo = {};
	            if (typeof dimensions[i] === 'string') {
	                dimensionName = dimensions[i];
	                dimensionInfo = {
	                    name: dimensionName,
	                    stackable: false,
	                    // Type can be 'float', 'int', 'number'
	                    // Default is number, Precision of float may not enough
	                    type: 'number'
	                };
	            }
	            else {
	                dimensionInfo = dimensions[i];
	                dimensionName = dimensionInfo.name;
	                dimensionInfo.type = dimensionInfo.type || 'number';
	            }
	            dimensionNames.push(dimensionName);
	            dimensionInfos[dimensionName] = dimensionInfo;
	        }
	        /**
	         * @readOnly
	         * @type {Array.<string>}
	         */
	        this.dimensions = dimensionNames;
	
	        /**
	         * Infomation of each data dimension, like data type.
	         * @type {Object}
	         */
	        this._dimensionInfos = dimensionInfos;
	
	        /**
	         * @type {module:echarts/model/Model}
	         */
	        this.hostModel = hostModel;
	
	        /**
	         * @type {module:echarts/model/Model}
	         */
	        this.dataType;
	
	        /**
	         * Indices stores the indices of data subset after filtered.
	         * This data subset will be used in chart.
	         * @type {Array.<number>}
	         * @readOnly
	         */
	        this.indices = [];
	
	        /**
	         * Data storage
	         * @type {Object.<key, TypedArray|Array>}
	         * @private
	         */
	        this._storage = {};
	
	        /**
	         * @type {Array.<string>}
	         */
	        this._nameList = [];
	        /**
	         * @type {Array.<string>}
	         */
	        this._idList = [];
	        /**
	         * Models of data option is stored sparse for optimizing memory cost
	         * @type {Array.<module:echarts/model/Model>}
	         * @private
	         */
	        this._optionModels = [];
	
	        /**
	         * @param {module:echarts/data/List}
	         */
	        this.stackedOn = null;
	
	        /**
	         * Global visual properties after visual coding
	         * @type {Object}
	         * @private
	         */
	        this._visual = {};
	
	        /**
	         * Globel layout properties.
	         * @type {Object}
	         * @private
	         */
	        this._layout = {};
	
	        /**
	         * Item visual properties after visual coding
	         * @type {Array.<Object>}
	         * @private
	         */
	        this._itemVisuals = [];
	
	        /**
	         * Item layout properties after layout
	         * @type {Array.<Object>}
	         * @private
	         */
	        this._itemLayouts = [];
	
	        /**
	         * Graphic elemnents
	         * @type {Array.<module:zrender/Element>}
	         * @private
	         */
	        this._graphicEls = [];
	
	        /**
	         * @type {Array.<Array|Object>}
	         * @private
	         */
	        this._rawData;
	
	        /**
	         * @type {Object}
	         * @private
	         */
	        this._extent;
	    };
	
	    var listProto = List.prototype;
	
	    listProto.type = 'list';
	    /**
	     * If each data item has it's own option
	     * @type {boolean}
	     */
	    listProto.hasItemOption = true;
	
	    /**
	     * Get dimension name
	     * @param {string|number} dim
	     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius
	     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'
	     * @return {string} Concrete dim name.
	     */
	    listProto.getDimension = function (dim) {
	        if (!isNaN(dim)) {
	            dim = this.dimensions[dim] || dim;
	        }
	        return dim;
	    };
	    /**
	     * Get type and stackable info of particular dimension
	     * @param {string|number} dim
	     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius
	     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'
	     */
	    listProto.getDimensionInfo = function (dim) {
	        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);
	    };
	
	    /**
	     * Initialize from data
	     * @param {Array.<Object|number|Array>} data
	     * @param {Array.<string>} [nameList]
	     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number
	     */
	    listProto.initData = function (data, nameList, dimValueGetter) {
	        data = data || [];
	
	        if (__DEV__) {
	            if (!zrUtil.isArray(data)) {
	                throw new Error('Invalid data.');
	            }
	        }
	
	        this._rawData = data;
	
	        // Clear
	        var storage = this._storage = {};
	        var indices = this.indices = [];
	
	        var dimensions = this.dimensions;
	        var size = data.length;
	        var dimensionInfoMap = this._dimensionInfos;
	
	        var idList = [];
	        var nameRepeatCount = {};
	
	        nameList = nameList || [];
	
	        // Init storage
	        for (var i = 0; i < dimensions.length; i++) {
	            var dimInfo = dimensionInfoMap[dimensions[i]];
	            var DataCtor = dataCtors[dimInfo.type];
	            storage[dimensions[i]] = new DataCtor(size);
	        }
	
	        var self = this;
	        if (!dimValueGetter) {
	            self.hasItemOption = false;
	        }
	        // Default dim value getter
	        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {
	            var value = modelUtil.getDataItemValue(dataItem);
	            // If any dataItem is like { value: 10 }
	            if (modelUtil.isDataItemOption(dataItem)) {
	                self.hasItemOption = true;
	            }
	            return modelUtil.converDataValue(
	                (value instanceof Array)
	                    ? value[dimIndex]
	                    // If value is a single number or something else not array.
	                    : value,
	                dimensionInfoMap[dimName]
	            );
	        };
	
	        for (var idx = 0; idx < data.length; idx++) {
	            var dataItem = data[idx];
	            // Each data item is value
	            // [1, 2]
	            // 2
	            // Bar chart, line chart which uses category axis
	            // only gives the 'y' value. 'x' value is the indices of cateogry
	            // Use a tempValue to normalize the value to be a (x, y) value
	
	            // Store the data by dimensions
	            for (var k = 0; k < dimensions.length; k++) {
	                var dim = dimensions[k];
	                var dimStorage = storage[dim];
	                // PENDING NULL is empty or zero
	                dimStorage[idx] = dimValueGetter(dataItem, dim, idx, k);
	            }
	
	            indices.push(idx);
	        }
	
	        // Use the name in option and create id
	        for (var i = 0; i < data.length; i++) {
	            if (!nameList[i]) {
	                if (data[i] && data[i].name != null) {
	                    nameList[i] = data[i].name;
	                }
	            }
	            var name = nameList[i] || '';
	            // Try using the id in option
	            var id = data[i] && data[i].id;
	
	            if (!id && name) {
	                // Use name as id and add counter to avoid same name
	                nameRepeatCount[name] = nameRepeatCount[name] || 0;
	                id = name;
	                if (nameRepeatCount[name] > 0) {
	                    id += '__ec__' + nameRepeatCount[name];
	                }
	                nameRepeatCount[name]++;
	            }
	            id && (idList[i] = id);
	        }
	
	        this._nameList = nameList;
	        this._idList = idList;
	    };
	
	    /**
	     * @return {number}
	     */
	    listProto.count = function () {
	        return this.indices.length;
	    };
	
	    /**
	     * Get value. Return NaN if idx is out of range.
	     * @param {string} dim Dim must be concrete name.
	     * @param {number} idx
	     * @param {boolean} stack
	     * @return {number}
	     */
	    listProto.get = function (dim, idx, stack) {
	        var storage = this._storage;
	        var dataIndex = this.indices[idx];
	
	        // If value not exists
	        if (dataIndex == null) {
	            return NaN;
	        }
	
	        var value = storage[dim] && storage[dim][dataIndex];
	        // FIXME ordinal data type is not stackable
	        if (stack) {
	            var dimensionInfo = this._dimensionInfos[dim];
	            if (dimensionInfo && dimensionInfo.stackable) {
	                var stackedOn = this.stackedOn;
	                while (stackedOn) {
	                    // Get no stacked data of stacked on
	                    var stackedValue = stackedOn.get(dim, idx);
	                    // Considering positive stack, negative stack and empty data
	                    if ((value >= 0 && stackedValue > 0)  // Positive stack
	                        || (value <= 0 && stackedValue < 0) // Negative stack
	                    ) {
	                        value += stackedValue;
	                    }
	                    stackedOn = stackedOn.stackedOn;
	                }
	            }
	        }
	        return value;
	    };
	
	    /**
	     * Get value for multi dimensions.
	     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.
	     * @param {number} idx
	     * @param {boolean} stack
	     * @return {number}
	     */
	    listProto.getValues = function (dimensions, idx, stack) {
	        var values = [];
	
	        if (!zrUtil.isArray(dimensions)) {
	            stack = idx;
	            idx = dimensions;
	            dimensions = this.dimensions;
	        }
	
	        for (var i = 0, len = dimensions.length; i < len; i++) {
	            values.push(this.get(dimensions[i], idx, stack));
	        }
	
	        return values;
	    };
	
	    /**
	     * If value is NaN. Inlcuding '-'
	     * @param {string} dim
	     * @param {number} idx
	     * @return {number}
	     */
	    listProto.hasValue = function (idx) {
	        var dimensions = this.dimensions;
	        var dimensionInfos = this._dimensionInfos;
	        for (var i = 0, len = dimensions.length; i < len; i++) {
	            if (
	                // Ordinal type can be string or number
	                dimensionInfos[dimensions[i]].type !== 'ordinal'
	                && isNaN(this.get(dimensions[i], idx))
	            ) {
	                return false;
	            }
	        }
	        return true;
	    };
	
	    /**
	     * Get extent of data in one dimension
	     * @param {string} dim
	     * @param {boolean} stack
	     */
	    listProto.getDataExtent = function (dim, stack) {
	        dim = this.getDimension(dim);
	        var dimData = this._storage[dim];
	        var dimInfo = this.getDimensionInfo(dim);
	        stack = (dimInfo && dimInfo.stackable) && stack;
	        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];
	        var value;
	        if (dimExtent) {
	            return dimExtent;
	        }
	        // var dimInfo = this._dimensionInfos[dim];
	        if (dimData) {
	            var min = Infinity;
	            var max = -Infinity;
	            // var isOrdinal = dimInfo.type === 'ordinal';
	            for (var i = 0, len = this.count(); i < len; i++) {
	                value = this.get(dim, i, stack);
	                // FIXME
	                // if (isOrdinal && typeof value === 'string') {
	                //     value = zrUtil.indexOf(dimData, value);
	                // }
	                value < min && (min = value);
	                value > max && (max = value);
	            }
	            return (this._extent[dim + !!stack] = [min, max]);
	        }
	        else {
	            return [Infinity, -Infinity];
	        }
	    };
	
	    /**
	     * Get sum of data in one dimension
	     * @param {string} dim
	     * @param {boolean} stack
	     */
	    listProto.getSum = function (dim, stack) {
	        var dimData = this._storage[dim];
	        var sum = 0;
	        if (dimData) {
	            for (var i = 0, len = this.count(); i < len; i++) {
	                var value = this.get(dim, i, stack);
	                if (!isNaN(value)) {
	                    sum += value;
	                }
	            }
	        }
	        return sum;
	    };
	
	    /**
	     * Retreive the index with given value
	     * @param {number} idx
	     * @param {number} value
	     * @return {number}
	     */
	    // FIXME Precision of float value
	    listProto.indexOf = function (dim, value) {
	        var storage = this._storage;
	        var dimData = storage[dim];
	        var indices = this.indices;
	
	        if (dimData) {
	            for (var i = 0, len = indices.length; i < len; i++) {
	                var rawIndex = indices[i];
	                if (dimData[rawIndex] === value) {
	                    return i;
	                }
	            }
	        }
	        return -1;
	    };
	
	    /**
	     * Retreive the index with given name
	     * @param {number} idx
	     * @param {number} name
	     * @return {number}
	     */
	    listProto.indexOfName = function (name) {
	        var indices = this.indices;
	        var nameList = this._nameList;
	
	        for (var i = 0, len = indices.length; i < len; i++) {
	            var rawIndex = indices[i];
	            if (nameList[rawIndex] === name) {
	                return i;
	            }
	        }
	
	        return -1;
	    };
	
	    /**
	     * Retreive the index with given raw data index
	     * @param {number} idx
	     * @param {number} name
	     * @return {number}
	     */
	    listProto.indexOfRawIndex = function (rawIndex) {
	        // Indices are ascending
	        var indices = this.indices;
	        var left = 0;
	        var right = indices.length - 1;
	        while (left <= right) {
	            var mid = (left + right) / 2 | 0;
	            if (indices[mid] < rawIndex) {
	                left = mid + 1;
	            }
	            else if (indices[mid] > rawIndex) {
	                right = mid - 1;
	            }
	            else {
	                return mid;
	            }
	        }
	        return -1;
	    };
	
	    /**
	     * Retreive the index of nearest value
	     * @param {string} dim
	     * @param {number} value
	     * @param {boolean} stack If given value is after stacked
	     * @param {number} [maxDistance=Infinity]
	     * @return {number}
	     */
	    listProto.indexOfNearest = function (dim, value, stack, maxDistance) {
	        var storage = this._storage;
	        var dimData = storage[dim];
	
	        if (maxDistance == null) {
	            maxDistance = Infinity;
	        }
	
	        var nearestIdx = -1;
	        if (dimData) {
	            var minDist = Number.MAX_VALUE;
	            for (var i = 0, len = this.count(); i < len; i++) {
	                var diff = value - this.get(dim, i, stack);
	                var dist = Math.abs(diff);
	                if (
	                    diff <= maxDistance
	                    && (dist < minDist
	                        // For the case of two data are same on xAxis, which has sequence data.
	                        // Show the nearest index
	                        // https://github.com/ecomfe/echarts/issues/2869
	                        || (dist === minDist && diff > 0)
	                    )
	                ) {
	                    minDist = dist;
	                    nearestIdx = i;
	                }
	            }
	        }
	        return nearestIdx;
	    };
	
	    /**
	     * Get raw data index
	     * @param {number} idx
	     * @return {number}
	     */
	    listProto.getRawIndex = function (idx) {
	        var rawIdx = this.indices[idx];
	        return rawIdx == null ? -1 : rawIdx;
	    };
	
	    /**
	     * Get raw data item
	     * @param {number} idx
	     * @return {number}
	     */
	    listProto.getRawDataItem = function (idx) {
	        return this._rawData[this.getRawIndex(idx)];
	    };
	
	    /**
	     * @param {number} idx
	     * @param {boolean} [notDefaultIdx=false]
	     * @return {string}
	     */
	    listProto.getName = function (idx) {
	        return this._nameList[this.indices[idx]] || '';
	    };
	
	    /**
	     * @param {number} idx
	     * @param {boolean} [notDefaultIdx=false]
	     * @return {string}
	     */
	    listProto.getId = function (idx) {
	        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');
	    };
	
	
	    function normalizeDimensions(dimensions) {
	        if (!zrUtil.isArray(dimensions)) {
	            dimensions = [dimensions];
	        }
	        return dimensions;
	    }
	
	    /**
	     * Data iteration
	     * @param {string|Array.<string>}
	     * @param {Function} cb
	     * @param {boolean} [stack=false]
	     * @param {*} [context=this]
	     *
	     * @example
	     *  list.each('x', function (x, idx) {});
	     *  list.each(['x', 'y'], function (x, y, idx) {});
	     *  list.each(function (idx) {})
	     */
	    listProto.each = function (dims, cb, stack, context) {
	        if (typeof dims === 'function') {
	            context = stack;
	            stack = cb;
	            cb = dims;
	            dims = [];
	        }
	
	        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);
	
	        var value = [];
	        var dimSize = dims.length;
	        var indices = this.indices;
	
	        context = context || this;
	
	        for (var i = 0; i < indices.length; i++) {
	            // Simple optimization
	            switch (dimSize) {
	                case 0:
	                    cb.call(context, i);
	                    break;
	                case 1:
	                    cb.call(context, this.get(dims[0], i, stack), i);
	                    break;
	                case 2:
	                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);
	                    break;
	                default:
	                    for (var k = 0; k < dimSize; k++) {
	                        value[k] = this.get(dims[k], i, stack);
	                    }
	                    // Index
	                    value[k] = i;
	                    cb.apply(context, value);
	            }
	        }
	    };
	
	    /**
	     * Data filter
	     * @param {string|Array.<string>}
	     * @param {Function} cb
	     * @param {boolean} [stack=false]
	     * @param {*} [context=this]
	     */
	    listProto.filterSelf = function (dimensions, cb, stack, context) {
	        if (typeof dimensions === 'function') {
	            context = stack;
	            stack = cb;
	            cb = dimensions;
	            dimensions = [];
	        }
	
	        dimensions = zrUtil.map(
	            normalizeDimensions(dimensions), this.getDimension, this
	        );
	
	        var newIndices = [];
	        var value = [];
	        var dimSize = dimensions.length;
	        var indices = this.indices;
	
	        context = context || this;
	
	        for (var i = 0; i < indices.length; i++) {
	            var keep;
	            // Simple optimization
	            if (dimSize === 1) {
	                keep = cb.call(
	                    context, this.get(dimensions[0], i, stack), i
	                );
	            }
	            else {
	                for (var k = 0; k < dimSize; k++) {
	                    value[k] = this.get(dimensions[k], i, stack);
	                }
	                value[k] = i;
	                keep = cb.apply(context, value);
	            }
	            if (keep) {
	                newIndices.push(indices[i]);
	            }
	        }
	
	        this.indices = newIndices;
	
	        // Reset data extent
	        this._extent = {};
	
	        return this;
	    };
	
	    /**
	     * Data mapping to a plain array
	     * @param {string|Array.<string>} [dimensions]
	     * @param {Function} cb
	     * @param {boolean} [stack=false]
	     * @param {*} [context=this]
	     * @return {Array}
	     */
	    listProto.mapArray = function (dimensions, cb, stack, context) {
	        if (typeof dimensions === 'function') {
	            context = stack;
	            stack = cb;
	            cb = dimensions;
	            dimensions = [];
	        }
	
	        var result = [];
	        this.each(dimensions, function () {
	            result.push(cb && cb.apply(this, arguments));
	        }, stack, context);
	        return result;
	    };
	
	    function cloneListForMapAndSample(original, excludeDimensions) {
	        var allDimensions = original.dimensions;
	        var list = new List(
	            zrUtil.map(allDimensions, original.getDimensionInfo, original),
	            original.hostModel
	        );
	        // FIXME If needs stackedOn, value may already been stacked
	        transferProperties(list, original);
	
	        var storage = list._storage = {};
	        var originalStorage = original._storage;
	        // Init storage
	        for (var i = 0; i < allDimensions.length; i++) {
	            var dim = allDimensions[i];
	            var dimStore = originalStorage[dim];
	            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {
	                storage[dim] = new dimStore.constructor(
	                    originalStorage[dim].length
	                );
	            }
	            else {
	                // Direct reference for other dimensions
	                storage[dim] = originalStorage[dim];
	            }
	        }
	        return list;
	    }
	
	    /**
	     * Data mapping to a new List with given dimensions
	     * @param {string|Array.<string>} dimensions
	     * @param {Function} cb
	     * @param {boolean} [stack=false]
	     * @param {*} [context=this]
	     * @return {Array}
	     */
	    listProto.map = function (dimensions, cb, stack, context) {
	        dimensions = zrUtil.map(
	            normalizeDimensions(dimensions), this.getDimension, this
	        );
	
	        var list = cloneListForMapAndSample(this, dimensions);
	        // Following properties are all immutable.
	        // So we can reference to the same value
	        var indices = list.indices = this.indices;
	
	        var storage = list._storage;
	
	        var tmpRetValue = [];
	        this.each(dimensions, function () {
	            var idx = arguments[arguments.length - 1];
	            var retValue = cb && cb.apply(this, arguments);
	            if (retValue != null) {
	                // a number
	                if (typeof retValue === 'number') {
	                    tmpRetValue[0] = retValue;
	                    retValue = tmpRetValue;
	                }
	                for (var i = 0; i < retValue.length; i++) {
	                    var dim = dimensions[i];
	                    var dimStore = storage[dim];
	                    var rawIdx = indices[idx];
	                    if (dimStore) {
	                        dimStore[rawIdx] = retValue[i];
	                    }
	                }
	            }
	        }, stack, context);
	
	        return list;
	    };
	
	    /**
	     * Large data down sampling on given dimension
	     * @param {string} dimension
	     * @param {number} rate
	     * @param {Function} sampleValue
	     * @param {Function} sampleIndex Sample index for name and id
	     */
	    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {
	        var list = cloneListForMapAndSample(this, [dimension]);
	        var storage = this._storage;
	        var targetStorage = list._storage;
	
	        var originalIndices = this.indices;
	        var indices = list.indices = [];
	
	        var frameValues = [];
	        var frameIndices = [];
	        var frameSize = Math.floor(1 / rate);
	
	        var dimStore = targetStorage[dimension];
	        var len = this.count();
	        // Copy data from original data
	        for (var i = 0; i < storage[dimension].length; i++) {
	            targetStorage[dimension][i] = storage[dimension][i];
	        }
	        for (var i = 0; i < len; i += frameSize) {
	            // Last frame
	            if (frameSize > len - i) {
	                frameSize = len - i;
	                frameValues.length = frameSize;
	            }
	            for (var k = 0; k < frameSize; k++) {
	                var idx = originalIndices[i + k];
	                frameValues[k] = dimStore[idx];
	                frameIndices[k] = idx;
	            }
	            var value = sampleValue(frameValues);
	            var idx = frameIndices[sampleIndex(frameValues, value) || 0];
	            // Only write value on the filtered data
	            dimStore[idx] = value;
	            indices.push(idx);
	        }
	
	        return list;
	    };
	
	    /**
	     * Get model of one data item.
	     *
	     * @param {number} idx
	     */
	    // FIXME Model proxy ?
	    listProto.getItemModel = function (idx) {
	        var hostModel = this.hostModel;
	        idx = this.indices[idx];
	        return new Model(this._rawData[idx], hostModel, hostModel && hostModel.ecModel);
	    };
	
	    /**
	     * Create a data differ
	     * @param {module:echarts/data/List} otherList
	     * @return {module:echarts/data/DataDiffer}
	     */
	    listProto.diff = function (otherList) {
	        var idList = this._idList;
	        var otherIdList = otherList && otherList._idList;
	        return new DataDiffer(
	            otherList ? otherList.indices : [], this.indices, function (idx) {
	                return otherIdList[idx] || (idx + '');
	            }, function (idx) {
	                return idList[idx] || (idx + '');
	            }
	        );
	    };
	    /**
	     * Get visual property.
	     * @param {string} key
	     */
	    listProto.getVisual = function (key) {
	        var visual = this._visual;
	        return visual && visual[key];
	    };
	
	    /**
	     * Set visual property
	     * @param {string|Object} key
	     * @param {*} [value]
	     *
	     * @example
	     *  setVisual('color', color);
	     *  setVisual({
	     *      'color': color
	     *  });
	     */
	    listProto.setVisual = function (key, val) {
	        if (isObject(key)) {
	            for (var name in key) {
	                if (key.hasOwnProperty(name)) {
	                    this.setVisual(name, key[name]);
	                }
	            }
	            return;
	        }
	        this._visual = this._visual || {};
	        this._visual[key] = val;
	    };
	
	    /**
	     * Set layout property.
	     * @param {string} key
	     * @param {*} [val]
	     */
	    listProto.setLayout = function (key, val) {
	        if (isObject(key)) {
	            for (var name in key) {
	                if (key.hasOwnProperty(name)) {
	                    this.setLayout(name, key[name]);
	                }
	            }
	            return;
	        }
	        this._layout[key] = val;
	    };
	
	    /**
	     * Get layout property.
	     * @param  {string} key.
	     * @return {*}
	     */
	    listProto.getLayout = function (key) {
	        return this._layout[key];
	    };
	
	    /**
	     * Get layout of single data item
	     * @param {number} idx
	     */
	    listProto.getItemLayout = function (idx) {
	        return this._itemLayouts[idx];
	    };
	
	    /**
	     * Set layout of single data item
	     * @param {number} idx
	     * @param {Object} layout
	     * @param {boolean=} [merge=false]
	     */
	    listProto.setItemLayout = function (idx, layout, merge) {
	        this._itemLayouts[idx] = merge
	            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)
	            : layout;
	    };
	
	    /**
	     * Clear all layout of single data item
	     */
	    listProto.clearItemLayouts = function () {
	        this._itemLayouts.length = 0;
	    };
	
	    /**
	     * Get visual property of single data item
	     * @param {number} idx
	     * @param {string} key
	     * @param {boolean} ignoreParent
	     */
	    listProto.getItemVisual = function (idx, key, ignoreParent) {
	        var itemVisual = this._itemVisuals[idx];
	        var val = itemVisual && itemVisual[key];
	        if (val == null && !ignoreParent) {
	            // Use global visual property
	            return this.getVisual(key);
	        }
	        return val;
	    };
	
	    /**
	     * Set visual property of single data item
	     *
	     * @param {number} idx
	     * @param {string|Object} key
	     * @param {*} [value]
	     *
	     * @example
	     *  setItemVisual(0, 'color', color);
	     *  setItemVisual(0, {
	     *      'color': color
	     *  });
	     */
	    listProto.setItemVisual = function (idx, key, value) {
	        var itemVisual = this._itemVisuals[idx] || {};
	        this._itemVisuals[idx] = itemVisual;
	
	        if (isObject(key)) {
	            for (var name in key) {
	                if (key.hasOwnProperty(name)) {
	                    itemVisual[name] = key[name];
	                }
	            }
	            return;
	        }
	        itemVisual[key] = value;
	    };
	
	    /**
	     * Clear itemVisuals and list visual.
	     */
	    listProto.clearAllVisual = function () {
	        this._visual = {};
	        this._itemVisuals = [];
	    };
	
	    var setItemDataAndSeriesIndex = function (child) {
	        child.seriesIndex = this.seriesIndex;
	        child.dataIndex = this.dataIndex;
	        child.dataType = this.dataType;
	    };
	    /**
	     * Set graphic element relative to data. It can be set as null
	     * @param {number} idx
	     * @param {module:zrender/Element} [el]
	     */
	    listProto.setItemGraphicEl = function (idx, el) {
	        var hostModel = this.hostModel;
	
	        if (el) {
	            // Add data index and series index for indexing the data by element
	            // Useful in tooltip
	            el.dataIndex = idx;
	            el.dataType = this.dataType;
	            el.seriesIndex = hostModel && hostModel.seriesIndex;
	            if (el.type === 'group') {
	                el.traverse(setItemDataAndSeriesIndex, el);
	            }
	        }
	
	        this._graphicEls[idx] = el;
	    };
	
	    /**
	     * @param {number} idx
	     * @return {module:zrender/Element}
	     */
	    listProto.getItemGraphicEl = function (idx) {
	        return this._graphicEls[idx];
	    };
	
	    /**
	     * @param {Function} cb
	     * @param {*} context
	     */
	    listProto.eachItemGraphicEl = function (cb, context) {
	        zrUtil.each(this._graphicEls, function (el, idx) {
	            if (el) {
	                cb && cb.call(context, el, idx);
	            }
	        });
	    };
	
	    /**
	     * Shallow clone a new list except visual and layout properties, and graph elements.
	     * New list only change the indices.
	     */
	    listProto.cloneShallow = function () {
	        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);
	        var list = new List(dimensionInfoList, this.hostModel);
	
	        // FIXME
	        list._storage = this._storage;
	
	        transferProperties(list, this);
	
	
	        // Clone will not change the data extent and indices
	        list.indices = this.indices.slice();
	
	        if (this._extent) {
	            list._extent = zrUtil.extend({}, this._extent);
	        }
	
	        return list;
	    };
	
	    /**
	     * Wrap some method to add more feature
	     * @param {string} methodName
	     * @param {Function} injectFunction
	     */
	    listProto.wrapMethod = function (methodName, injectFunction) {
	        var originalMethod = this[methodName];
	        if (typeof originalMethod !== 'function') {
	            return;
	        }
	        this.__wrappedMethods = this.__wrappedMethods || [];
	        this.__wrappedMethods.push(methodName);
	        this[methodName] = function () {
	            var res = originalMethod.apply(this, arguments);
	            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));
	        };
	    };
	
	    // Methods that create a new list based on this list should be listed here.
	    // Notice that those method should `RETURN` the new list.
	    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];
	    // Methods that change indices of this list should be listed here.
	    listProto.CHANGABLE_METHODS = ['filterSelf'];
	
	    module.exports = List;
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 620 */
/*!******************************************!*\
  !*** ./~/echarts/lib/data/DataDiffer.js ***!
  \******************************************/
/***/ function(module, exports) {

	'use strict';
	
	
	    function defaultKeyGetter(item) {
	        return item;
	    }
	
	    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {
	        this._old = oldArr;
	        this._new = newArr;
	
	        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;
	        this._newKeyGetter = newKeyGetter || defaultKeyGetter;
	    }
	
	    DataDiffer.prototype = {
	
	        constructor: DataDiffer,
	
	        /**
	         * Callback function when add a data
	         */
	        add: function (func) {
	            this._add = func;
	            return this;
	        },
	
	        /**
	         * Callback function when update a data
	         */
	        update: function (func) {
	            this._update = func;
	            return this;
	        },
	
	        /**
	         * Callback function when remove a data
	         */
	        remove: function (func) {
	            this._remove = func;
	            return this;
	        },
	
	        execute: function () {
	            var oldArr = this._old;
	            var newArr = this._new;
	            var oldKeyGetter = this._oldKeyGetter;
	            var newKeyGetter = this._newKeyGetter;
	
	            var oldDataIndexMap = {};
	            var newDataIndexMap = {};
	            var oldDataKeyArr = [];
	            var newDataKeyArr = [];
	            var i;
	
	            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);
	            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);
	
	            // Travel by inverted order to make sure order consistency
	            // when duplicate keys exists (consider newDataIndex.pop() below).
	            // For performance consideration, these code below do not look neat.
	            for (i = 0; i < oldArr.length; i++) {
	                var key = oldDataKeyArr[i];
	                var idx = newDataIndexMap[key];
	
	                // idx can never be empty array here. see 'set null' logic below.
	                if (idx != null) {
	                    // Consider there is duplicate key (for example, use dataItem.name as key).
	                    // We should make sure every item in newArr and oldArr can be visited.
	                    var len = idx.length;
	                    if (len) {
	                        len === 1 && (newDataIndexMap[key] = null);
	                        idx = idx.unshift();
	                    }
	                    else {
	                        newDataIndexMap[key] = null;
	                    }
	                    this._update && this._update(idx, i);
	                }
	                else {
	                    this._remove && this._remove(i);
	                }
	            }
	
	            for (var i = 0; i < newDataKeyArr.length; i++) {
	                var key = newDataKeyArr[i];
	                if (newDataIndexMap.hasOwnProperty(key)) {
	                    var idx = newDataIndexMap[key];
	                    if (idx == null) {
	                        continue;
	                    }
	                    // idx can never be empty array here. see 'set null' logic above.
	                    if (!idx.length) {
	                        this._add && this._add(idx);
	                    }
	                    else {
	                        for (var j = 0, len = idx.length; j < len; j++) {
	                            this._add && this._add(idx[j]);
	                        }
	                    }
	                }
	            }
	        }
	    };
	
	    function initIndexMap(arr, map, keyArr, keyGetter) {
	        for (var i = 0; i < arr.length; i++) {
	            var key = keyGetter(arr[i], i);
	            var existence = map[key];
	            if (existence == null) {
	                keyArr.push(key);
	                map[key] = i;
	            }
	            else {
	                if (!existence.length) {
	                    map[key] = existence = [existence];
	                }
	                existence.push(i);
	            }
	        }
	    }
	
	    module.exports = DataDiffer;


/***/ },
/* 621 */
/*!************************************!*\
  !*** ./~/echarts/lib/chart/bar.js ***!
  \************************************/
/***/ function(module, exports, __webpack_require__) {

	
	
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	
	    __webpack_require__(/*! ../coord/cartesian/Grid */ 622);
	
	    __webpack_require__(/*! ./bar/BarSeries */ 639);
	    __webpack_require__(/*! ./bar/BarView */ 642);
	
	    var barLayoutGrid = __webpack_require__(/*! ../layout/barGrid */ 644);
	    var echarts = __webpack_require__(/*! ../echarts */ 523);
	
	    echarts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar'));
	    // Visual coding for legend
	    echarts.registerVisual(function (ecModel) {
	        ecModel.eachSeriesByType('bar', function (seriesModel) {
	            var data = seriesModel.getData();
	            data.setVisual('legendSymbol', 'roundRect');
	        });
	    });
	
	    // In case developer forget to include grid component
	    __webpack_require__(/*! ../component/grid */ 645);


/***/ },
/* 622 */
/*!***********************************************!*\
  !*** ./~/echarts/lib/coord/cartesian/Grid.js ***!
  \***********************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Grid is a region which contains at most 4 cartesian systems
	 *
	 * TODO Default cartesian
	 */
	var factory = exports;
	
	    var layout = __webpack_require__(/*! ../../util/layout */ 543);
	    var axisHelper = __webpack_require__(/*! ../../coord/axisHelper */ 623);
	
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	    var Cartesian2D = __webpack_require__(/*! ./Cartesian2D */ 629);
	    var Axis2D = __webpack_require__(/*! ./Axis2D */ 631);
	
	    var each = zrUtil.each;
	
	    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;
	    var niceScaleExtent = axisHelper.niceScaleExtent;
	
	    // 依赖 GridModel, AxisModel 做预处理
	    __webpack_require__(/*! ./GridModel */ 634);
	
	    /**
	     * Check if the axis is used in the specified grid
	     * @inner
	     */
	    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {
	        return ecModel.getComponent('grid', axisModel.get('gridIndex')) === gridModel;
	    }
	
	    function getLabelUnionRect(axis) {
	        var axisModel = axis.model;
	        var labels = axisModel.getFormattedLabels();
	        var rect;
	        var step = 1;
	        var labelCount = labels.length;
	        if (labelCount > 40) {
	            // Simple optimization for large amount of labels
	            step = Math.ceil(labelCount / 40);
	        }
	        for (var i = 0; i < labelCount; i += step) {
	            if (!axis.isLabelIgnored(i)) {
	                var singleRect = axisModel.getTextRect(labels[i]);
	                // FIXME consider label rotate
	                rect ? rect.union(singleRect) : (rect = singleRect);
	            }
	        }
	        return rect;
	    }
	
	    function Grid(gridModel, ecModel, api) {
	        /**
	         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}
	         * @private
	         */
	        this._coordsMap = {};
	
	        /**
	         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}
	         * @private
	         */
	        this._coordsList = [];
	
	        /**
	         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}
	         * @private
	         */
	        this._axesMap = {};
	
	        /**
	         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}
	         * @private
	         */
	        this._axesList = [];
	
	        this._initCartesian(gridModel, ecModel, api);
	
	        this._model = gridModel;
	    }
	
	    var gridProto = Grid.prototype;
	
	    gridProto.type = 'grid';
	
	    gridProto.getRect = function () {
	        return this._rect;
	    };
	
	    gridProto.update = function (ecModel, api) {
	
	        var axesMap = this._axesMap;
	
	        this._updateScale(ecModel, this._model);
	
	        function ifAxisCanNotOnZero(otherAxisDim) {
	            var axes = axesMap[otherAxisDim];
	            for (var idx in axes) {
	                var axis = axes[idx];
	                if (axis && (axis.type === 'category' || !ifAxisCrossZero(axis))) {
	                    return true;
	                }
	            }
	            return false;
	        }
	
	        each(axesMap.x, function (xAxis) {
	            niceScaleExtent(xAxis, xAxis.model);
	        });
	        each(axesMap.y, function (yAxis) {
	            niceScaleExtent(yAxis, yAxis.model);
	        });
	        // Fix configuration
	        each(axesMap.x, function (xAxis) {
	            // onZero can not be enabled in these two situations
	            // 1. When any other axis is a category axis
	            // 2. When any other axis not across 0 point
	            if (ifAxisCanNotOnZero('y')) {
	                xAxis.onZero = false;
	            }
	        });
	        each(axesMap.y, function (yAxis) {
	            if (ifAxisCanNotOnZero('x')) {
	                yAxis.onZero = false;
	            }
	        });
	
	        // Resize again if containLabel is enabled
	        // FIXME It may cause getting wrong grid size in data processing stage
	        this.resize(this._model, api);
	    };
	
	    /**
	     * Resize the grid
	     * @param {module:echarts/coord/cartesian/GridModel} gridModel
	     * @param {module:echarts/ExtensionAPI} api
	     */
	    gridProto.resize = function (gridModel, api) {
	
	        var gridRect = layout.getLayoutRect(
	            gridModel.getBoxLayoutParams(), {
	                width: api.getWidth(),
	                height: api.getHeight()
	            });
	
	        this._rect = gridRect;
	
	        var axesList = this._axesList;
	
	        adjustAxes();
	
	        // Minus label size
	        if (gridModel.get('containLabel')) {
	            each(axesList, function (axis) {
	                if (!axis.model.get('axisLabel.inside')) {
	                    var labelUnionRect = getLabelUnionRect(axis);
	                    if (labelUnionRect) {
	                        var dim = axis.isHorizontal() ? 'height' : 'width';
	                        var margin = axis.model.get('axisLabel.margin');
	                        gridRect[dim] -= labelUnionRect[dim] + margin;
	                        if (axis.position === 'top') {
	                            gridRect.y += labelUnionRect.height + margin;
	                        }
	                        else if (axis.position === 'left')  {
	                            gridRect.x += labelUnionRect.width + margin;
	                        }
	                    }
	                }
	            });
	
	            adjustAxes();
	        }
	
	        function adjustAxes() {
	            each(axesList, function (axis) {
	                var isHorizontal = axis.isHorizontal();
	                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];
	                var idx = axis.inverse ? 1 : 0;
	                axis.setExtent(extent[idx], extent[1 - idx]);
	                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);
	            });
	        }
	    };
	
	    /**
	     * @param {string} axisType
	     * @param {ndumber} [axisIndex]
	     */
	    gridProto.getAxis = function (axisType, axisIndex) {
	        var axesMapOnDim = this._axesMap[axisType];
	        if (axesMapOnDim != null) {
	            if (axisIndex == null) {
	                // Find first axis
	                for (var name in axesMapOnDim) {
	                    return axesMapOnDim[name];
	                }
	            }
	            return axesMapOnDim[axisIndex];
	        }
	    };
	
	    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {
	        if (xAxisIndex != null && yAxisIndex != null) {
	            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;
	            return this._coordsMap[key];
	        }
	        else {
	            // When only xAxisIndex or yAxisIndex given, find its first cartesian.
	            for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {
	                if (coordList[i].getAxis('x').index === xAxisIndex
	                    || coordList[i].getAxis('y').index === yAxisIndex
	                ) {
	                    return coordList[i];
	                }
	            }
	        }
	    };
	
	    /**
	     * Initialize cartesian coordinate systems
	     * @private
	     */
	    gridProto._initCartesian = function (gridModel, ecModel, api) {
	        var axisPositionUsed = {
	            left: false,
	            right: false,
	            top: false,
	            bottom: false
	        };
	
	        var axesMap = {
	            x: {},
	            y: {}
	        };
	        var axesCount = {
	            x: 0,
	            y: 0
	        };
	
	        /// Create axis
	        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);
	        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);
	
	        if (!axesCount.x || !axesCount.y) {
	            // Roll back when there no either x or y axis
	            this._axesMap = {};
	            this._axesList = [];
	            return;
	        }
	
	        this._axesMap = axesMap;
	
	        /// Create cartesian2d
	        each(axesMap.x, function (xAxis, xAxisIndex) {
	            each(axesMap.y, function (yAxis, yAxisIndex) {
	                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;
	                var cartesian = new Cartesian2D(key);
	
	                cartesian.grid = this;
	
	                this._coordsMap[key] = cartesian;
	                this._coordsList.push(cartesian);
	
	                cartesian.addAxis(xAxis);
	                cartesian.addAxis(yAxis);
	            }, this);
	        }, this);
	
	        function createAxisCreator(axisType) {
	            return function (axisModel, idx) {
	                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {
	                    return;
	                }
	
	                var axisPosition = axisModel.get('position');
	                if (axisType === 'x') {
	                    // Fix position
	                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {
	                        // Default bottom of X
	                        axisPosition = 'bottom';
	                        if (axisPositionUsed[axisPosition]) {
	                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';
	                        }
	                    }
	                }
	                else {
	                    // Fix position
	                    if (axisPosition !== 'left' && axisPosition !== 'right') {
	                        // Default left of Y
	                        axisPosition = 'left';
	                        if (axisPositionUsed[axisPosition]) {
	                            axisPosition = axisPosition === 'left' ? 'right' : 'left';
	                        }
	                    }
	                }
	                axisPositionUsed[axisPosition] = true;
	
	                var axis = new Axis2D(
	                    axisType, axisHelper.createScaleByModel(axisModel),
	                    [0, 0],
	                    axisModel.get('type'),
	                    axisPosition
	                );
	
	                var isCategory = axis.type === 'category';
	                axis.onBand = isCategory && axisModel.get('boundaryGap');
	                axis.inverse = axisModel.get('inverse');
	
	                axis.onZero = axisModel.get('axisLine.onZero');
	
	                // Inject axis into axisModel
	                axisModel.axis = axis;
	
	                // Inject axisModel into axis
	                axis.model = axisModel;
	
	                // Inject grid info axis
	                axis.grid = this;
	
	                // Index of axis, can be used as key
	                axis.index = idx;
	
	                this._axesList.push(axis);
	
	                axesMap[axisType][idx] = axis;
	                axesCount[axisType]++;
	            };
	        }
	    };
	
	    /**
	     * Update cartesian properties from series
	     * @param  {module:echarts/model/Option} option
	     * @private
	     */
	    gridProto._updateScale = function (ecModel, gridModel) {
	        // Reset scale
	        zrUtil.each(this._axesList, function (axis) {
	            axis.scale.setExtent(Infinity, -Infinity);
	        });
	        ecModel.eachSeries(function (seriesModel) {
	            if (seriesModel.get('coordinateSystem') === 'cartesian2d') {
	                var xAxisIndex = seriesModel.get('xAxisIndex');
	                var yAxisIndex = seriesModel.get('yAxisIndex');
	
	                var xAxisModel = ecModel.getComponent('xAxis', xAxisIndex);
	                var yAxisModel = ecModel.getComponent('yAxis', yAxisIndex);
	
	                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)
	                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)
	                 ) {
	                    return;
	                }
	
	                var cartesian = this.getCartesian(xAxisIndex, yAxisIndex);
	                var data = seriesModel.getData();
	                var xAxis = cartesian.getAxis('x');
	                var yAxis = cartesian.getAxis('y');
	
	                if (data.type === 'list') {
	                    unionExtent(data, xAxis, seriesModel);
	                    unionExtent(data, yAxis, seriesModel);
	                }
	            }
	        }, this);
	
	        function unionExtent(data, axis, seriesModel) {
	            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {
	                axis.scale.unionExtent(data.getDataExtent(
	                    dim, axis.scale.type !== 'ordinal'
	                ));
	            });
	        }
	    };
	
	    /**
	     * @inner
	     */
	    function updateAxisTransfrom(axis, coordBase) {
	        var axisExtent = axis.getExtent();
	        var axisExtentSum = axisExtent[0] + axisExtent[1];
	
	        // Fast transform
	        axis.toGlobalCoord = axis.dim === 'x'
	            ? function (coord) {
	                return coord + coordBase;
	            }
	            : function (coord) {
	                return axisExtentSum - coord + coordBase;
	            };
	        axis.toLocalCoord = axis.dim === 'x'
	            ? function (coord) {
	                return coord - coordBase;
	            }
	            : function (coord) {
	                return axisExtentSum - coord + coordBase;
	            };
	    }
	
	    Grid.create = function (ecModel, api) {
	        var grids = [];
	        ecModel.eachComponent('grid', function (gridModel, idx) {
	            var grid = new Grid(gridModel, ecModel, api);
	            grid.name = 'grid_' + idx;
	            grid.resize(gridModel, api);
	
	            gridModel.coordinateSystem = grid;
	
	            grids.push(grid);
	        });
	
	        // Inject the coordinateSystems into seriesModel
	        ecModel.eachSeries(function (seriesModel) {
	            if (seriesModel.get('coordinateSystem') !== 'cartesian2d') {
	                return;
	            }
	            var xAxisIndex = seriesModel.get('xAxisIndex');
	            var yAxisIndex = seriesModel.get('yAxisIndex');
	            var xAxisModel = ecModel.getComponent('xAxis', xAxisIndex);
	
	            if (__DEV__) {
	                var yAxisModel = ecModel.getComponent('yAxis', yAxisIndex);
	                if (xAxisModel.get('gridIndex') !== yAxisModel.get('gridIndex')) {
	                    throw new Error('xAxis and yAxis must use the same grid');
	                }
	            }
	            var grid = grids[xAxisModel.get('gridIndex')];
	            seriesModel.coordinateSystem = grid.getCartesian(xAxisIndex, yAxisIndex);
	        });
	
	        return grids;
	    };
	
	    // For deciding which dimensions to use when creating list data
	    Grid.dimensions = Cartesian2D.prototype.dimensions;
	
	    __webpack_require__(/*! ../../CoordinateSystem */ 548).register('cartesian2d', Grid);
	
	    module.exports = Grid;


/***/ },
/* 623 */
/*!*******************************************!*\
  !*** ./~/echarts/lib/coord/axisHelper.js ***!
  \*******************************************/
/***/ function(module, exports, __webpack_require__) {

	
	
	    var OrdinalScale = __webpack_require__(/*! ../scale/Ordinal */ 624);
	    var IntervalScale = __webpack_require__(/*! ../scale/Interval */ 626);
	    __webpack_require__(/*! ../scale/Time */ 627);
	    __webpack_require__(/*! ../scale/Log */ 628);
	    var Scale = __webpack_require__(/*! ../scale/Scale */ 625);
	
	    var numberUtil = __webpack_require__(/*! ../util/number */ 529);
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	    var textContain = __webpack_require__(/*! zrender/lib/contain/text */ 530);
	    var axisHelper = {};
	
	    /**
	     * Get axis scale extent before niced.
	     */
	    axisHelper.getScaleExtent = function (axis, model) {
	        var scale = axis.scale;
	        var originalExtent = scale.getExtent();
	        var span = originalExtent[1] - originalExtent[0];
	        if (scale.type === 'ordinal') {
	            // If series has no data, scale extent may be wrong
	            if (!isFinite(span)) {
	                return [0, 0];
	            }
	            else {
	                return originalExtent;
	            }
	        }
	        var min = model.getMin ? model.getMin() : model.get('min');
	        var max = model.getMax ? model.getMax() : model.get('max');
	        var crossZero = model.getNeedCrossZero
	            ? model.getNeedCrossZero() : !model.get('scale');
	        var boundaryGap = model.get('boundaryGap');
	        if (!zrUtil.isArray(boundaryGap)) {
	            boundaryGap = [boundaryGap || 0, boundaryGap || 0];
	        }
	        boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);
	        boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);
	        var fixMin = true;
	        var fixMax = true;
	        // Add boundary gap
	        if (min == null) {
	            min = originalExtent[0] - boundaryGap[0] * span;
	            fixMin = false;
	        }
	        if (max == null) {
	            max = originalExtent[1] + boundaryGap[1] * span;
	            fixMax = false;
	        }
	        if (min === 'dataMin') {
	            min = originalExtent[0];
	        }
	        if (max === 'dataMax') {
	            max = originalExtent[1];
	        }
	        // Evaluate if axis needs cross zero
	        if (crossZero) {
	            // Axis is over zero and min is not set
	            if (min > 0 && max > 0 && !fixMin) {
	                min = 0;
	            }
	            // Axis is under zero and max is not set
	            if (min < 0 && max < 0 && !fixMax) {
	                max = 0;
	            }
	        }
	        return [min, max];
	    };
	
	    axisHelper.niceScaleExtent = function (axis, model) {
	        var scale = axis.scale;
	        var extent = axisHelper.getScaleExtent(axis, model);
	        var fixMin = (model.getMin ? model.getMin() : model.get('min')) != null;
	        var fixMax = (model.getMax ? model.getMax() : model.get('max')) != null;
	        var splitNumber = model.get('splitNumber');
	        scale.setExtent(extent[0], extent[1]);
	        scale.niceExtent(splitNumber, fixMin, fixMax);
	
	        // Use minInterval to constraint the calculated interval.
	        // If calculated interval is less than minInterval. increase the interval quantity until
	        // it is larger than minInterval.
	        // For example:
	        //  minInterval is 1, calculated interval is 0.2, so increase it to be 1. In this way we can get
	        //  an integer axis.
	        var minInterval = model.get('minInterval');
	        if (isFinite(minInterval) && !fixMin && !fixMax && scale.type === 'interval') {
	            var interval = scale.getInterval();
	            var intervalScale = Math.max(Math.abs(interval), minInterval) / interval;
	            // while (interval < minInterval) {
	            //     var quantity = numberUtil.quantity(interval);
	            //     interval = quantity * 10;
	            //     scaleQuantity *= 10;
	            // }
	            extent = scale.getExtent();
	            scale.setExtent(intervalScale * extent[0], extent[1] * intervalScale);
	            scale.niceExtent(splitNumber);
	        }
	
	        // If some one specified the min, max. And the default calculated interval
	        // is not good enough. He can specify the interval. It is often appeared
	        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard
	        // to be 60.
	        // FIXME
	        var interval = model.get('interval');
	        if (interval != null) {
	            scale.setInterval && scale.setInterval(interval);
	        }
	    };
	
	    /**
	     * @param {module:echarts/model/Model} model
	     * @param {string} [axisType] Default retrieve from model.type
	     * @return {module:echarts/scale/*}
	     */
	    axisHelper.createScaleByModel = function(model, axisType) {
	        axisType = axisType || model.get('type');
	        if (axisType) {
	            switch (axisType) {
	                // Buildin scale
	                case 'category':
	                    return new OrdinalScale(
	                        model.getCategories(), [Infinity, -Infinity]
	                    );
	                case 'value':
	                    return new IntervalScale();
	                // Extended scale, like time and log
	                default:
	                    return (Scale.getClass(axisType) || IntervalScale).create(model);
	            }
	        }
	    };
	
	    /**
	     * Check if the axis corss 0
	     */
	    axisHelper.ifAxisCrossZero = function (axis) {
	        var dataExtent = axis.scale.getExtent();
	        var min = dataExtent[0];
	        var max = dataExtent[1];
	        return !((min > 0 && max > 0) || (min < 0 && max < 0));
	    };
	
	    /**
	     * @param {Array.<number>} tickCoords In axis self coordinate.
	     * @param {Array.<string>} labels
	     * @param {string} font
	     * @param {boolean} isAxisHorizontal
	     * @return {number}
	     */
	    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {
	        // FIXME
	        // 不同角的axis和label，不只是horizontal和vertical.
	
	        var textSpaceTakenRect;
	        var autoLabelInterval = 0;
	        var accumulatedLabelInterval = 0;
	
	        var step = 1;
	        if (labels.length > 40) {
	            // Simple optimization for large amount of labels
	            step = Math.floor(labels.length / 40);
	        }
	
	        for (var i = 0; i < tickCoords.length; i += step) {
	            var tickCoord = tickCoords[i];
	            var rect = textContain.getBoundingRect(
	                labels[i], font, 'center', 'top'
	            );
	            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;
	            // FIXME Magic number 1.5
	            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;
	            if (!textSpaceTakenRect) {
	                textSpaceTakenRect = rect.clone();
	            }
	            // There is no space for current label;
	            else if (textSpaceTakenRect.intersect(rect)) {
	                accumulatedLabelInterval++;
	                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);
	            }
	            else {
	                textSpaceTakenRect.union(rect);
	                // Reset
	                accumulatedLabelInterval = 0;
	            }
	        }
	        if (autoLabelInterval === 0 && step > 1) {
	            return step;
	        }
	        return (autoLabelInterval + 1) * step - 1;
	    };
	
	    /**
	     * @param {Object} axis
	     * @param {Function} labelFormatter
	     * @return {Array.<string>}
	     */
	    axisHelper.getFormattedLabels = function (axis, labelFormatter) {
	        var scale = axis.scale;
	        var labels = scale.getTicksLabels();
	        var ticks = scale.getTicks();
	        if (typeof labelFormatter === 'string') {
	            labelFormatter = (function (tpl) {
	                return function (val) {
	                    return tpl.replace('{value}', val);
	                };
	            })(labelFormatter);
	            return zrUtil.map(labels, labelFormatter);
	        }
	        else if (typeof labelFormatter === 'function') {
	            return zrUtil.map(ticks, function (tick, idx) {
	                return labelFormatter(
	                    axis.type === 'category' ? scale.getLabel(tick) : tick,
	                    idx
	                );
	            }, this);
	        }
	        else {
	            return labels;
	        }
	    };
	
	    module.exports = axisHelper;


/***/ },
/* 624 */
/*!****************************************!*\
  !*** ./~/echarts/lib/scale/Ordinal.js ***!
  \****************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Linear continuous scale
	 * @module echarts/coord/scale/Ordinal
	 *
	 * http://en.wikipedia.org/wiki/Level_of_measurement
	 */
	
	// FIXME only one data
	
	
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	    var Scale = __webpack_require__(/*! ./Scale */ 625);
	
	    var scaleProto = Scale.prototype;
	
	    var OrdinalScale = Scale.extend({
	
	        type: 'ordinal',
	
	        init: function (data, extent) {
	            this._data = data;
	            this._extent = extent || [0, data.length - 1];
	        },
	
	        parse: function (val) {
	            return typeof val === 'string'
	                ? zrUtil.indexOf(this._data, val)
	                // val might be float.
	                : Math.round(val);
	        },
	
	        contain: function (rank) {
	            rank = this.parse(rank);
	            return scaleProto.contain.call(this, rank)
	                && this._data[rank] != null;
	        },
	
	        /**
	         * Normalize given rank or name to linear [0, 1]
	         * @param {number|string} [val]
	         * @return {number}
	         */
	        normalize: function (val) {
	            return scaleProto.normalize.call(this, this.parse(val));
	        },
	
	        scale: function (val) {
	            return Math.round(scaleProto.scale.call(this, val));
	        },
	
	        /**
	         * @return {Array}
	         */
	        getTicks: function () {
	            var ticks = [];
	            var extent = this._extent;
	            var rank = extent[0];
	
	            while (rank <= extent[1]) {
	                ticks.push(rank);
	                rank++;
	            }
	
	            return ticks;
	        },
	
	        /**
	         * Get item on rank n
	         * @param {number} n
	         * @return {string}
	         */
	        getLabel: function (n) {
	            return this._data[n];
	        },
	
	        /**
	         * @return {number}
	         */
	        count: function () {
	            return this._extent[1] - this._extent[0] + 1;
	        },
	
	        niceTicks: zrUtil.noop,
	        niceExtent: zrUtil.noop
	    });
	
	    /**
	     * @return {module:echarts/scale/Time}
	     */
	    OrdinalScale.create = function () {
	        return new OrdinalScale();
	    };
	
	    module.exports = OrdinalScale;


/***/ },
/* 625 */
/*!**************************************!*\
  !*** ./~/echarts/lib/scale/Scale.js ***!
  \**************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * // Scale class management
	 * @module echarts/scale/Scale
	 */
	
	
	    var clazzUtil = __webpack_require__(/*! ../util/clazz */ 535);
	
	    function Scale() {
	        /**
	         * Extent
	         * @type {Array.<number>}
	         * @protected
	         */
	        this._extent = [Infinity, -Infinity];
	
	        /**
	         * Step is calculated in adjustExtent
	         * @type {Array.<number>}
	         * @protected
	         */
	        this._interval = 0;
	
	        this.init && this.init.apply(this, arguments);
	    }
	
	    var scaleProto = Scale.prototype;
	
	    /**
	     * Parse input val to valid inner number.
	     * @param {*} val
	     * @return {number}
	     */
	    scaleProto.parse = function (val) {
	        // Notice: This would be a trap here, If the implementation
	        // of this method depends on extent, and this method is used
	        // before extent set (like in dataZoom), it would be wrong.
	        // Nevertheless, parse does not depend on extent generally.
	        return val;
	    };
	
	    scaleProto.contain = function (val) {
	        var extent = this._extent;
	        return val >= extent[0] && val <= extent[1];
	    };
	
	    /**
	     * Normalize value to linear [0, 1], return 0.5 if extent span is 0
	     * @param {number} val
	     * @return {number}
	     */
	    scaleProto.normalize = function (val) {
	        var extent = this._extent;
	        if (extent[1] === extent[0]) {
	            return 0.5;
	        }
	        return (val - extent[0]) / (extent[1] - extent[0]);
	    };
	
	    /**
	     * Scale normalized value
	     * @param {number} val
	     * @return {number}
	     */
	    scaleProto.scale = function (val) {
	        var extent = this._extent;
	        return val * (extent[1] - extent[0]) + extent[0];
	    };
	
	    /**
	     * Set extent from data
	     * @param {Array.<number>} other
	     */
	    scaleProto.unionExtent = function (other) {
	        var extent = this._extent;
	        other[0] < extent[0] && (extent[0] = other[0]);
	        other[1] > extent[1] && (extent[1] = other[1]);
	        // not setExtent because in log axis it may transformed to power
	        // this.setExtent(extent[0], extent[1]);
	    };
	
	    /**
	     * Get extent
	     * @return {Array.<number>}
	     */
	    scaleProto.getExtent = function () {
	        return this._extent.slice();
	    };
	
	    /**
	     * Set extent
	     * @param {number} start
	     * @param {number} end
	     */
	    scaleProto.setExtent = function (start, end) {
	        var thisExtent = this._extent;
	        if (!isNaN(start)) {
	            thisExtent[0] = start;
	        }
	        if (!isNaN(end)) {
	            thisExtent[1] = end;
	        }
	    };
	
	    /**
	     * @return {Array.<string>}
	     */
	    scaleProto.getTicksLabels = function () {
	        var labels = [];
	        var ticks = this.getTicks();
	        for (var i = 0; i < ticks.length; i++) {
	            labels.push(this.getLabel(ticks[i]));
	        }
	        return labels;
	    };
	
	    clazzUtil.enableClassExtend(Scale);
	    clazzUtil.enableClassManagement(Scale, {
	        registerWhenExtend: true
	    });
	
	    module.exports = Scale;


/***/ },
/* 626 */
/*!*****************************************!*\
  !*** ./~/echarts/lib/scale/Interval.js ***!
  \*****************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Interval scale
	 * @module echarts/scale/Interval
	 */
	
	
	
	    var numberUtil = __webpack_require__(/*! ../util/number */ 529);
	    var formatUtil = __webpack_require__(/*! ../util/format */ 528);
	    var Scale = __webpack_require__(/*! ./Scale */ 625);
	
	    var mathFloor = Math.floor;
	    var mathCeil = Math.ceil;
	    /**
	     * @alias module:echarts/coord/scale/Interval
	     * @constructor
	     */
	    var IntervalScale = Scale.extend({
	
	        type: 'interval',
	
	        _interval: 0,
	
	        setExtent: function (start, end) {
	            var thisExtent = this._extent;
	            //start,end may be a Number like '25',so...
	            if (!isNaN(start)) {
	                thisExtent[0] = parseFloat(start);
	            }
	            if (!isNaN(end)) {
	                thisExtent[1] = parseFloat(end);
	            }
	        },
	
	        unionExtent: function (other) {
	            var extent = this._extent;
	            other[0] < extent[0] && (extent[0] = other[0]);
	            other[1] > extent[1] && (extent[1] = other[1]);
	
	            // unionExtent may called by it's sub classes
	            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);
	        },
	        /**
	         * Get interval
	         */
	        getInterval: function () {
	            if (!this._interval) {
	                this.niceTicks();
	            }
	            return this._interval;
	        },
	
	        /**
	         * Set interval
	         */
	        setInterval: function (interval) {
	            this._interval = interval;
	            // Dropped auto calculated niceExtent and use user setted extent
	            // We assume user wan't to set both interval, min, max to get a better result
	            this._niceExtent = this._extent.slice();
	        },
	
	        /**
	         * @return {Array.<number>}
	         */
	        getTicks: function () {
	            if (!this._interval) {
	                this.niceTicks();
	            }
	            var interval = this._interval;
	            var extent = this._extent;
	            var ticks = [];
	
	            // Consider this case: using dataZoom toolbox, zoom and zoom.
	            var safeLimit = 10000;
	
	            if (interval) {
	                var niceExtent = this._niceExtent;
	                if (extent[0] < niceExtent[0]) {
	                    ticks.push(extent[0]);
	                }
	                var tick = niceExtent[0];
	                while (tick <= niceExtent[1]) {
	                    ticks.push(tick);
	                    // Avoid rounding error
	                    tick = numberUtil.round(tick + interval);
	                    if (ticks.length > safeLimit) {
	                        return [];
	                    }
	                }
	                if (extent[1] > niceExtent[1]) {
	                    ticks.push(extent[1]);
	                }
	            }
	
	            return ticks;
	        },
	
	        /**
	         * @return {Array.<string>}
	         */
	        getTicksLabels: function () {
	            var labels = [];
	            var ticks = this.getTicks();
	            for (var i = 0; i < ticks.length; i++) {
	                labels.push(this.getLabel(ticks[i]));
	            }
	            return labels;
	        },
	
	        /**
	         * @param {number} n
	         * @return {number}
	         */
	        getLabel: function (data) {
	            return formatUtil.addCommas(data);
	        },
	
	        /**
	         * Update interval and extent of intervals for nice ticks
	         *
	         * @param {number} [splitNumber = 5] Desired number of ticks
	         */
	        niceTicks: function (splitNumber) {
	            splitNumber = splitNumber || 5;
	            var extent = this._extent;
	            var span = extent[1] - extent[0];
	            if (!isFinite(span)) {
	                return;
	            }
	            // User may set axis min 0 and data are all negative
	            // FIXME If it needs to reverse ?
	            if (span < 0) {
	                span = -span;
	                extent.reverse();
	            }
	
	            // From "Nice Numbers for Graph Labels" of Graphic Gems
	            // var niceSpan = numberUtil.nice(span, false);
	            var step = numberUtil.nice(span / splitNumber, true);
	
	            // Niced extent inside original extent
	            var niceExtent = [
	                numberUtil.round(mathCeil(extent[0] / step) * step),
	                numberUtil.round(mathFloor(extent[1] / step) * step)
	            ];
	
	            this._interval = step;
	            this._niceExtent = niceExtent;
	        },
	
	        /**
	         * Nice extent.
	         * @param {number} [splitNumber = 5] Given approx tick number
	         * @param {boolean} [fixMin=false]
	         * @param {boolean} [fixMax=false]
	         */
	        niceExtent: function (splitNumber, fixMin, fixMax) {
	            var extent = this._extent;
	            // If extent start and end are same, expand them
	            if (extent[0] === extent[1]) {
	                if (extent[0] !== 0) {
	                    // Expand extent
	                    var expandSize = extent[0];
	                    // In the fowllowing case
	                    //      Axis has been fixed max 100
	                    //      Plus data are all 100 and axis extent are [100, 100].
	                    // Extend to the both side will cause expanded max is larger than fixed max.
	                    // So only expand to the smaller side.
	                    if (!fixMax) {
	                        extent[1] += expandSize / 2;
	                        extent[0] -= expandSize / 2;
	                    }
	                    else {
	                        extent[0] -= expandSize / 2;
	                    }
	                }
	                else {
	                    extent[1] = 1;
	                }
	            }
	            var span = extent[1] - extent[0];
	            // If there are no data and extent are [Infinity, -Infinity]
	            if (!isFinite(span)) {
	                extent[0] = 0;
	                extent[1] = 1;
	            }
	
	            this.niceTicks(splitNumber);
	
	            // var extent = this._extent;
	            var interval = this._interval;
	
	            if (!fixMin) {
	                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);
	            }
	            if (!fixMax) {
	                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);
	            }
	        }
	    });
	
	    /**
	     * @return {module:echarts/scale/Time}
	     */
	    IntervalScale.create = function () {
	        return new IntervalScale();
	    };
	
	    module.exports = IntervalScale;
	


/***/ },
/* 627 */
/*!*************************************!*\
  !*** ./~/echarts/lib/scale/Time.js ***!
  \*************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Interval scale
	 * @module echarts/coord/scale/Time
	 */
	
	
	
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	    var numberUtil = __webpack_require__(/*! ../util/number */ 529);
	    var formatUtil = __webpack_require__(/*! ../util/format */ 528);
	
	    var IntervalScale = __webpack_require__(/*! ./Interval */ 626);
	
	    var intervalScaleProto = IntervalScale.prototype;
	
	    var mathCeil = Math.ceil;
	    var mathFloor = Math.floor;
	    var ONE_SECOND = 1000;
	    var ONE_MINUTE = ONE_SECOND * 60;
	    var ONE_HOUR = ONE_MINUTE * 60;
	    var ONE_DAY = ONE_HOUR * 24;
	
	    // FIXME 公用？
	    var bisect = function (a, x, lo, hi) {
	        while (lo < hi) {
	            var mid = lo + hi >>> 1;
	            if (a[mid][2] < x) {
	                lo = mid + 1;
	            }
	            else {
	                hi  = mid;
	            }
	        }
	        return lo;
	    };
	
	    /**
	     * @alias module:echarts/coord/scale/Time
	     * @constructor
	     */
	    var TimeScale = IntervalScale.extend({
	        type: 'time',
	
	        // Overwrite
	        getLabel: function (val) {
	            var stepLvl = this._stepLvl;
	
	            var date = new Date(val);
	
	            return formatUtil.formatTime(stepLvl[0], date);
	        },
	
	        // Overwrite
	        niceExtent: function (approxTickNum, fixMin, fixMax) {
	            var extent = this._extent;
	            // If extent start and end are same, expand them
	            if (extent[0] === extent[1]) {
	                // Expand extent
	                extent[0] -= ONE_DAY;
	                extent[1] += ONE_DAY;
	            }
	            // If there are no data and extent are [Infinity, -Infinity]
	            if (extent[1] === -Infinity && extent[0] === Infinity) {
	                var d = new Date();
	                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());
	                extent[0] = extent[1] - ONE_DAY;
	            }
	
	            this.niceTicks(approxTickNum);
	
	            // var extent = this._extent;
	            var interval = this._interval;
	
	            if (!fixMin) {
	                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);
	            }
	            if (!fixMax) {
	                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);
	            }
	        },
	
	        // Overwrite
	        niceTicks: function (approxTickNum) {
	            approxTickNum = approxTickNum || 10;
	
	            var extent = this._extent;
	            var span = extent[1] - extent[0];
	            var approxInterval = span / approxTickNum;
	            var scaleLevelsLen = scaleLevels.length;
	            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);
	
	            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];
	            var interval = level[2];
	            // Same with interval scale if span is much larger than 1 year
	            if (level[0] === 'year') {
	                var yearSpan = span / interval;
	
	                // From "Nice Numbers for Graph Labels" of Graphic Gems
	                // var niceYearSpan = numberUtil.nice(yearSpan, false);
	                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);
	
	                interval *= yearStep;
	            }
	
	            var niceExtent = [
	                mathCeil(extent[0] / interval) * interval,
	                mathFloor(extent[1] / interval) * interval
	            ];
	
	            this._stepLvl = level;
	            // Interval will be used in getTicks
	            this._interval = interval;
	            this._niceExtent = niceExtent;
	        },
	
	        parse: function (val) {
	            // val might be float.
	            return +numberUtil.parseDate(val);
	        }
	    });
	
	    zrUtil.each(['contain', 'normalize'], function (methodName) {
	        TimeScale.prototype[methodName] = function (val) {
	            return intervalScaleProto[methodName].call(this, this.parse(val));
	        };
	    });
	
	    // Steps from d3
	    var scaleLevels = [
	        // Format       step    interval
	        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s
	        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s
	        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s
	        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s
	        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s
	        ['hh:mm\nMM-dd',1,      ONE_MINUTE],          // 1m
	        ['hh:mm\nMM-dd',5,      ONE_MINUTE * 5],      // 5m
	        ['hh:mm\nMM-dd',10,     ONE_MINUTE * 10],     // 10m
	        ['hh:mm\nMM-dd',15,     ONE_MINUTE * 15],     // 15m
	        ['hh:mm\nMM-dd',30,     ONE_MINUTE * 30],     // 30m
	        ['hh:mm\nMM-dd',1,      ONE_HOUR],        // 1h
	        ['hh:mm\nMM-dd',2,      ONE_HOUR * 2],    // 2h
	        ['hh:mm\nMM-dd',6,      ONE_HOUR * 6],    // 6h
	        ['hh:mm\nMM-dd',12,     ONE_HOUR * 12],   // 12h
	        ['MM-dd\nyyyy', 1,      ONE_DAY],   // 1d
	        ['week',        7,      ONE_DAY * 7],        // 7d
	        ['month',       1,      ONE_DAY * 31],       // 1M
	        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M
	        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M
	        ['year',        1,      ONE_DAY * 380]       // 1Y
	    ];
	
	    /**
	     * @return {module:echarts/scale/Time}
	     */
	    TimeScale.create = function () {
	        return new TimeScale();
	    };
	
	    module.exports = TimeScale;


/***/ },
/* 628 */
/*!************************************!*\
  !*** ./~/echarts/lib/scale/Log.js ***!
  \************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Log scale
	 * @module echarts/scale/Log
	 */
	
	
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	    var Scale = __webpack_require__(/*! ./Scale */ 625);
	    var numberUtil = __webpack_require__(/*! ../util/number */ 529);
	
	    // Use some method of IntervalScale
	    var IntervalScale = __webpack_require__(/*! ./Interval */ 626);
	
	    var scaleProto = Scale.prototype;
	    var intervalScaleProto = IntervalScale.prototype;
	
	    var mathFloor = Math.floor;
	    var mathCeil = Math.ceil;
	    var mathPow = Math.pow;
	
	    var LOG_BASE = 10;
	    var mathLog = Math.log;
	
	    var LogScale = Scale.extend({
	
	        type: 'log',
	
	        /**
	         * @return {Array.<number>}
	         */
	        getTicks: function () {
	            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {
	                return numberUtil.round(mathPow(LOG_BASE, val));
	            });
	        },
	
	        /**
	         * @param {number} val
	         * @return {string}
	         */
	        getLabel: intervalScaleProto.getLabel,
	
	        /**
	         * @param  {number} val
	         * @return {number}
	         */
	        scale: function (val) {
	            val = scaleProto.scale.call(this, val);
	            return mathPow(LOG_BASE, val);
	        },
	
	        /**
	         * @param {number} start
	         * @param {number} end
	         */
	        setExtent: function (start, end) {
	            start = mathLog(start) / mathLog(LOG_BASE);
	            end = mathLog(end) / mathLog(LOG_BASE);
	            intervalScaleProto.setExtent.call(this, start, end);
	        },
	
	        /**
	         * @return {number} end
	         */
	        getExtent: function () {
	            var extent = scaleProto.getExtent.call(this);
	            extent[0] = mathPow(LOG_BASE, extent[0]);
	            extent[1] = mathPow(LOG_BASE, extent[1]);
	            return extent;
	        },
	
	        /**
	         * @param  {Array.<number>} extent
	         */
	        unionExtent: function (extent) {
	            extent[0] = mathLog(extent[0]) / mathLog(LOG_BASE);
	            extent[1] = mathLog(extent[1]) / mathLog(LOG_BASE);
	            scaleProto.unionExtent.call(this, extent);
	        },
	
	        /**
	         * Update interval and extent of intervals for nice ticks
	         * @param  {number} [approxTickNum = 10] Given approx tick number
	         */
	        niceTicks: function (approxTickNum) {
	            approxTickNum = approxTickNum || 10;
	            var extent = this._extent;
	            var span = extent[1] - extent[0];
	            if (span === Infinity || span <= 0) {
	                return;
	            }
	
	            var interval = mathPow(10, mathFloor(mathLog(span / approxTickNum) / Math.LN10));
	            var err = approxTickNum / span * interval;
	
	            // Filter ticks to get closer to the desired count.
	            if (err <= 0.5) {
	                interval *= 10;
	            }
	            var niceExtent = [
	                numberUtil.round(mathCeil(extent[0] / interval) * interval),
	                numberUtil.round(mathFloor(extent[1] / interval) * interval)
	            ];
	
	            this._interval = interval;
	            this._niceExtent = niceExtent;
	        },
	
	        /**
	         * Nice extent.
	         * @param {number} [approxTickNum = 10] Given approx tick number
	         * @param {boolean} [fixMin=false]
	         * @param {boolean} [fixMax=false]
	         */
	        niceExtent: intervalScaleProto.niceExtent
	    });
	
	    zrUtil.each(['contain', 'normalize'], function (methodName) {
	        LogScale.prototype[methodName] = function (val) {
	            val = mathLog(val) / mathLog(LOG_BASE);
	            return scaleProto[methodName].call(this, val);
	        };
	    });
	
	    LogScale.create = function () {
	        return new LogScale();
	    };
	
	    module.exports = LogScale;


/***/ },
/* 629 */
/*!******************************************************!*\
  !*** ./~/echarts/lib/coord/cartesian/Cartesian2D.js ***!
  \******************************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	    var Cartesian = __webpack_require__(/*! ./Cartesian */ 630);
	
	    function Cartesian2D(name) {
	
	        Cartesian.call(this, name);
	    }
	
	    Cartesian2D.prototype = {
	
	        constructor: Cartesian2D,
	
	        type: 'cartesian2d',
	
	        /**
	         * @type {Array.<string>}
	         * @readOnly
	         */
	        dimensions: ['x', 'y'],
	
	        /**
	         * Base axis will be used on stacking.
	         *
	         * @return {module:echarts/coord/cartesian/Axis2D}
	         */
	        getBaseAxis: function () {
	            return this.getAxesByScale('ordinal')[0]
	                || this.getAxesByScale('time')[0]
	                || this.getAxis('x');
	        },
	
	        /**
	         * If contain point
	         * @param {Array.<number>} point
	         * @return {boolean}
	         */
	        containPoint: function (point) {
	            var axisX = this.getAxis('x');
	            var axisY = this.getAxis('y');
	            return axisX.contain(axisX.toLocalCoord(point[0]))
	                && axisY.contain(axisY.toLocalCoord(point[1]));
	        },
	
	        /**
	         * If contain data
	         * @param {Array.<number>} data
	         * @return {boolean}
	         */
	        containData: function (data) {
	            return this.getAxis('x').containData(data[0])
	                && this.getAxis('y').containData(data[1]);
	        },
	
	        /**
	         * Convert series data to an array of points
	         * @param {module:echarts/data/List} data
	         * @param {boolean} stack
	         * @return {Array}
	         *  Return array of points. For example:
	         *  `[[10, 10], [20, 20], [30, 30]]`
	         */
	        dataToPoints: function (data, stack) {
	            return data.mapArray(['x', 'y'], function (x, y) {
	                return this.dataToPoint([x, y]);
	            }, stack, this);
	        },
	
	        /**
	         * @param {Array.<number>} data
	         * @param {boolean} [clamp=false]
	         * @return {Array.<number>}
	         */
	        dataToPoint: function (data, clamp) {
	            var xAxis = this.getAxis('x');
	            var yAxis = this.getAxis('y');
	            return [
	                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),
	                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))
	            ];
	        },
	
	        /**
	         * @param {Array.<number>} point
	         * @param {boolean} [clamp=false]
	         * @return {Array.<number>}
	         */
	        pointToData: function (point, clamp) {
	            var xAxis = this.getAxis('x');
	            var yAxis = this.getAxis('y');
	            return [
	                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),
	                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)
	            ];
	        },
	
	        /**
	         * Get other axis
	         * @param {module:echarts/coord/cartesian/Axis2D} axis
	         */
	        getOtherAxis: function (axis) {
	            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');
	        }
	    };
	
	    zrUtil.inherits(Cartesian2D, Cartesian);
	
	    module.exports = Cartesian2D;


/***/ },
/* 630 */
/*!****************************************************!*\
  !*** ./~/echarts/lib/coord/cartesian/Cartesian.js ***!
  \****************************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	/**
	 * Cartesian coordinate system
	 * @module  echarts/coord/Cartesian
	 *
	 */
	
	
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	
	    function dimAxisMapper(dim) {
	        return this._axes[dim];
	    }
	
	    /**
	     * @alias module:echarts/coord/Cartesian
	     * @constructor
	     */
	    var Cartesian = function (name) {
	        this._axes = {};
	
	        this._dimList = [];
	
	        /**
	         * @type {string}
	         */
	        this.name = name || '';
	    };
	
	    Cartesian.prototype = {
	
	        constructor: Cartesian,
	
	        type: 'cartesian',
	
	        /**
	         * Get axis
	         * @param  {number|string} dim
	         * @return {module:echarts/coord/Cartesian~Axis}
	         */
	        getAxis: function (dim) {
	            return this._axes[dim];
	        },
	
	        /**
	         * Get axes list
	         * @return {Array.<module:echarts/coord/Cartesian~Axis>}
	         */
	        getAxes: function () {
	            return zrUtil.map(this._dimList, dimAxisMapper, this);
	        },
	
	        /**
	         * Get axes list by given scale type
	         */
	        getAxesByScale: function (scaleType) {
	            scaleType = scaleType.toLowerCase();
	            return zrUtil.filter(
	                this.getAxes(),
	                function (axis) {
	                    return axis.scale.type === scaleType;
	                }
	            );
	        },
	
	        /**
	         * Add axis
	         * @param {module:echarts/coord/Cartesian.Axis}
	         */
	        addAxis: function (axis) {
	            var dim = axis.dim;
	
	            this._axes[dim] = axis;
	
	            this._dimList.push(dim);
	        },
	
	        /**
	         * Convert data to coord in nd space
	         * @param {Array.<number>|Object.<string, number>} val
	         * @return {Array.<number>|Object.<string, number>}
	         */
	        dataToCoord: function (val) {
	            return this._dataCoordConvert(val, 'dataToCoord');
	        },
	
	        /**
	         * Convert coord in nd space to data
	         * @param  {Array.<number>|Object.<string, number>} val
	         * @return {Array.<number>|Object.<string, number>}
	         */
	        coordToData: function (val) {
	            return this._dataCoordConvert(val, 'coordToData');
	        },
	
	        _dataCoordConvert: function (input, method) {
	            var dimList = this._dimList;
	
	            var output = input instanceof Array ? [] : {};
	
	            for (var i = 0; i < dimList.length; i++) {
	                var dim = dimList[i];
	                var axis = this._axes[dim];
	
	                output[dim] = axis[method](input[dim]);
	            }
	
	            return output;
	        }
	    };
	
	    module.exports = Cartesian;


/***/ },
/* 631 */
/*!*************************************************!*\
  !*** ./~/echarts/lib/coord/cartesian/Axis2D.js ***!
  \*************************************************/
/***/ function(module, exports, __webpack_require__) {

	
	
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	    var Axis = __webpack_require__(/*! ../Axis */ 632);
	    var axisLabelInterval = __webpack_require__(/*! ./axisLabelInterval */ 633);
	
	    /**
	     * Extend axis 2d
	     * @constructor module:echarts/coord/cartesian/Axis2D
	     * @extends {module:echarts/coord/cartesian/Axis}
	     * @param {string} dim
	     * @param {*} scale
	     * @param {Array.<number>} coordExtent
	     * @param {string} axisType
	     * @param {string} position
	     */
	    var Axis2D = function (dim, scale, coordExtent, axisType, position) {
	        Axis.call(this, dim, scale, coordExtent);
	        /**
	         * Axis type
	         *  - 'category'
	         *  - 'value'
	         *  - 'time'
	         *  - 'log'
	         * @type {string}
	         */
	        this.type = axisType || 'value';
	
	        /**
	         * Axis position
	         *  - 'top'
	         *  - 'bottom'
	         *  - 'left'
	         *  - 'right'
	         */
	        this.position = position || 'bottom';
	    };
	
	    Axis2D.prototype = {
	
	        constructor: Axis2D,
	
	        /**
	         * Index of axis, can be used as key
	         */
	        index: 0,
	        /**
	         * If axis is on the zero position of the other axis
	         * @type {boolean}
	         */
	        onZero: false,
	
	        /**
	         * Axis model
	         * @param {module:echarts/coord/cartesian/AxisModel}
	         */
	        model: null,
	
	        isHorizontal: function () {
	            var position = this.position;
	            return position === 'top' || position === 'bottom';
	        },
	
	        getGlobalExtent: function () {
	            var ret = this.getExtent();
	            ret[0] = this.toGlobalCoord(ret[0]);
	            ret[1] = this.toGlobalCoord(ret[1]);
	            return ret;
	        },
	
	        /**
	         * @return {number}
	         */
	        getLabelInterval: function () {
	            var labelInterval = this._labelInterval;
	            if (!labelInterval) {
	                labelInterval = this._labelInterval = axisLabelInterval(this);
	            }
	            return labelInterval;
	        },
	
	        /**
	         * If label is ignored.
	         * Automatically used when axis is category and label can not be all shown
	         * @param  {number}  idx
	         * @return {boolean}
	         */
	        isLabelIgnored: function (idx) {
	            if (this.type === 'category') {
	                var labelInterval = this.getLabelInterval();
	                return ((typeof labelInterval === 'function')
	                    && !labelInterval(idx, this.scale.getLabel(idx)))
	                    || idx % (labelInterval + 1);
	            }
	        },
	
	        /**
	         * Transform global coord to local coord,
	         * i.e. var localCoord = axis.toLocalCoord(80);
	         * designate by module:echarts/coord/cartesian/Grid.
	         * @type {Function}
	         */
	        toLocalCoord: null,
	
	        /**
	         * Transform global coord to local coord,
	         * i.e. var globalCoord = axis.toLocalCoord(40);
	         * designate by module:echarts/coord/cartesian/Grid.
	         * @type {Function}
	         */
	        toGlobalCoord: null
	
	    };
	    zrUtil.inherits(Axis2D, Axis);
	
	    module.exports = Axis2D;


/***/ },
/* 632 */
/*!*************************************!*\
  !*** ./~/echarts/lib/coord/Axis.js ***!
  \*************************************/
/***/ function(module, exports, __webpack_require__) {

	
	
	    var numberUtil = __webpack_require__(/*! ../util/number */ 529);
	    var linearMap = numberUtil.linearMap;
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	
	    function fixExtentWithBands(extent, nTick) {
	        var size = extent[1] - extent[0];
	        var len = nTick;
	        var margin = size / len / 2;
	        extent[0] += margin;
	        extent[1] -= margin;
	    }
	
	    var normalizedExtent = [0, 1];
	    /**
	     * @name module:echarts/coord/CartesianAxis
	     * @constructor
	     */
	    var Axis = function (dim, scale, extent) {
	
	        /**
	         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'
	         * @type {string}
	         */
	        this.dim = dim;
	
	        /**
	         * Axis scale
	         * @type {module:echarts/coord/scale/*}
	         */
	        this.scale = scale;
	
	        /**
	         * @type {Array.<number>}
	         * @private
	         */
	        this._extent = extent || [0, 0];
	
	        /**
	         * @type {boolean}
	         */
	        this.inverse = false;
	
	        /**
	         * Usually true when axis has a ordinal scale
	         * @type {boolean}
	         */
	        this.onBand = false;
	    };
	
	    Axis.prototype = {
	
	        constructor: Axis,
	
	        /**
	         * If axis extent contain given coord
	         * @param {number} coord
	         * @return {boolean}
	         */
	        contain: function (coord) {
	            var extent = this._extent;
	            var min = Math.min(extent[0], extent[1]);
	            var max = Math.max(extent[0], extent[1]);
	            return coord >= min && coord <= max;
	        },
	
	        /**
	         * If axis extent contain given data
	         * @param {number} data
	         * @return {boolean}
	         */
	        containData: function (data) {
	            return this.contain(this.dataToCoord(data));
	        },
	
	        /**
	         * Get coord extent.
	         * @return {Array.<number>}
	         */
	        getExtent: function () {
	            var ret = this._extent.slice();
	            return ret;
	        },
	
	        /**
	         * Get precision used for formatting
	         * @param {Array.<number>} [dataExtent]
	         * @return {number}
	         */
	        getPixelPrecision: function (dataExtent) {
	            return numberUtil.getPixelPrecision(
	                dataExtent || this.scale.getExtent(),
	                this._extent
	            );
	        },
	
	        /**
	         * Set coord extent
	         * @param {number} start
	         * @param {number} end
	         */
	        setExtent: function (start, end) {
	            var extent = this._extent;
	            extent[0] = start;
	            extent[1] = end;
	        },
	
	        /**
	         * Convert data to coord. Data is the rank if it has a ordinal scale
	         * @param {number} data
	         * @param  {boolean} clamp
	         * @return {number}
	         */
	        dataToCoord: function (data, clamp) {
	            var extent = this._extent;
	            var scale = this.scale;
	            data = scale.normalize(data);
	
	            if (this.onBand && scale.type === 'ordinal') {
	                extent = extent.slice();
	                fixExtentWithBands(extent, scale.count());
	            }
	
	            return linearMap(data, normalizedExtent, extent, clamp);
	        },
	
	        /**
	         * Convert coord to data. Data is the rank if it has a ordinal scale
	         * @param {number} coord
	         * @param  {boolean} clamp
	         * @return {number}
	         */
	        coordToData: function (coord, clamp) {
	            var extent = this._extent;
	            var scale = this.scale;
	
	            if (this.onBand && scale.type === 'ordinal') {
	                extent = extent.slice();
	                fixExtentWithBands(extent, scale.count());
	            }
	
	            var t = linearMap(coord, extent, normalizedExtent, clamp);
	
	            return this.scale.scale(t);
	        },
	        /**
	         * @return {Array.<number>}
	         */
	        getTicksCoords: function (alignWithLabel) {
	            if (this.onBand && !alignWithLabel) {
	                var bands = this.getBands();
	                var coords = [];
	                for (var i = 0; i < bands.length; i++) {
	                    coords.push(bands[i][0]);
	                }
	                if (bands[i - 1]) {
	                    coords.push(bands[i - 1][1]);
	                }
	                return coords;
	            }
	            else {
	                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);
	            }
	        },
	
	        /**
	         * Coords of labels are on the ticks or on the middle of bands
	         * @return {Array.<number>}
	         */
	        getLabelsCoords: function () {
	            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);
	        },
	
	        /**
	         * Get bands.
	         *
	         * If axis has labels [1, 2, 3, 4]. Bands on the axis are
	         * |---1---|---2---|---3---|---4---|.
	         *
	         * @return {Array}
	         */
	         // FIXME Situation when labels is on ticks
	        getBands: function () {
	            var extent = this.getExtent();
	            var bands = [];
	            var len = this.scale.count();
	            var start = extent[0];
	            var end = extent[1];
	            var span = end - start;
	
	            for (var i = 0; i < len; i++) {
	                bands.push([
	                    span * i / len + start,
	                    span * (i + 1) / len + start
	                ]);
	            }
	            return bands;
	        },
	
	        /**
	         * Get width of band
	         * @return {number}
	         */
	        getBandWidth: function () {
	            var axisExtent = this._extent;
	            var dataExtent = this.scale.getExtent();
	
	            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);
	            // Fix #2728, avoid NaN when only one data.
	            len === 0 && (len = 1);
	
	            var size = Math.abs(axisExtent[1] - axisExtent[0]);
	
	            return Math.abs(size) / len;
	        }
	    };
	
	    module.exports = Axis;


/***/ },
/* 633 */
/*!************************************************************!*\
  !*** ./~/echarts/lib/coord/cartesian/axisLabelInterval.js ***!
  \************************************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	/**
	 * Helper function for axisLabelInterval calculation
	 */
	
	
	
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	    var axisHelper = __webpack_require__(/*! ../axisHelper */ 623);
	
	    module.exports = function (axis) {
	        var axisModel = axis.model;
	        var labelModel = axisModel.getModel('axisLabel');
	        var labelInterval = labelModel.get('interval');
	        if (!(axis.type === 'category' && labelInterval === 'auto')) {
	            return labelInterval === 'auto' ? 0 : labelInterval;
	        }
	
	        return axisHelper.getAxisLabelInterval(
	            zrUtil.map(axis.scale.getTicks(), axis.dataToCoord, axis),
	            axisModel.getFormattedLabels(),
	            labelModel.getModel('textStyle').getFont(),
	            axis.isHorizontal()
	        );
	    };


/***/ },
/* 634 */
/*!****************************************************!*\
  !*** ./~/echarts/lib/coord/cartesian/GridModel.js ***!
  \****************************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// Grid 是在有直角坐标系的时候必须要存在的
	// 所以这里也要被 Cartesian2D 依赖
	
	
	    __webpack_require__(/*! ./AxisModel */ 635);
	    var ComponentModel = __webpack_require__(/*! ../../model/Component */ 541);
	
	    module.exports = ComponentModel.extend({
	
	        type: 'grid',
	
	        dependencies: ['xAxis', 'yAxis'],
	
	        layoutMode: 'box',
	
	        /**
	         * @type {module:echarts/coord/cartesian/Grid}
	         */
	        coordinateSystem: null,
	
	        defaultOption: {
	            show: false,
	            zlevel: 0,
	            z: 0,
	            left: '10%',
	            top: 60,
	            right: '10%',
	            bottom: 60,
	            // If grid size contain label
	            containLabel: false,
	            // width: {totalWidth} - left - right,
	            // height: {totalHeight} - top - bottom,
	            backgroundColor: 'rgba(0,0,0,0)',
	            borderWidth: 1,
	            borderColor: '#ccc'
	        }
	    });


/***/ },
/* 635 */
/*!****************************************************!*\
  !*** ./~/echarts/lib/coord/cartesian/AxisModel.js ***!
  \****************************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	
	    var ComponentModel = __webpack_require__(/*! ../../model/Component */ 541);
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	    var axisModelCreator = __webpack_require__(/*! ../axisModelCreator */ 636);
	
	    var AxisModel = ComponentModel.extend({
	
	        type: 'cartesian2dAxis',
	
	        /**
	         * @type {module:echarts/coord/cartesian/Axis2D}
	         */
	        axis: null,
	
	        /**
	         * @override
	         */
	        init: function () {
	            AxisModel.superApply(this, 'init', arguments);
	            this._resetRange();
	        },
	
	        /**
	         * @override
	         */
	        mergeOption: function () {
	            AxisModel.superApply(this, 'mergeOption', arguments);
	            this._resetRange();
	        },
	
	        /**
	         * @override
	         */
	        restoreData: function () {
	            AxisModel.superApply(this, 'restoreData', arguments);
	            this._resetRange();
	        },
	
	        /**
	         * @public
	         * @param {number} rangeStart
	         * @param {number} rangeEnd
	         */
	        setRange: function (rangeStart, rangeEnd) {
	            this.option.rangeStart = rangeStart;
	            this.option.rangeEnd = rangeEnd;
	        },
	
	        /**
	         * @public
	         * @return {Array.<number|string|Date>}
	         */
	        getMin: function () {
	            var option = this.option;
	            return option.rangeStart != null ? option.rangeStart : option.min;
	        },
	
	        /**
	         * @public
	         * @return {Array.<number|string|Date>}
	         */
	        getMax: function () {
	            var option = this.option;
	            return option.rangeEnd != null ? option.rangeEnd : option.max;
	        },
	
	        /**
	         * @public
	         * @return {boolean}
	         */
	        getNeedCrossZero: function () {
	            var option = this.option;
	            return (option.rangeStart != null || option.rangeEnd != null)
	                ? false : !option.scale;
	        },
	
	        /**
	         * @private
	         */
	        _resetRange: function () {
	            // rangeStart and rangeEnd is readonly.
	            this.option.rangeStart = this.option.rangeEnd = null;
	        }
	
	    });
	
	    function getAxisType(axisDim, option) {
	        // Default axis with data is category axis
	        return option.type || (option.data ? 'category' : 'value');
	    }
	
	    zrUtil.merge(AxisModel.prototype, __webpack_require__(/*! ../axisModelCommonMixin */ 638));
	
	    var extraOption = {
	        gridIndex: 0,
	
	        // Offset is for multiple axis on the same position
	        offset: 0
	    };
	
	    axisModelCreator('x', AxisModel, getAxisType, extraOption);
	    axisModelCreator('y', AxisModel, getAxisType, extraOption);
	
	    module.exports = AxisModel;


/***/ },
/* 636 */
/*!*************************************************!*\
  !*** ./~/echarts/lib/coord/axisModelCreator.js ***!
  \*************************************************/
/***/ function(module, exports, __webpack_require__) {

	
	
	    var axisDefault = __webpack_require__(/*! ./axisDefault */ 637);
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	    var ComponentModel = __webpack_require__(/*! ../model/Component */ 541);
	    var layout = __webpack_require__(/*! ../util/layout */ 543);
	
	    // FIXME axisType is fixed ?
	    var AXIS_TYPES = ['value', 'category', 'time', 'log'];
	
	    /**
	     * Generate sub axis model class
	     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'
	     * @param {module:echarts/model/Component} BaseAxisModelClass
	     * @param {Function} axisTypeDefaulter
	     * @param {Object} [extraDefaultOption]
	     */
	    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {
	
	        zrUtil.each(AXIS_TYPES, function (axisType) {
	
	            BaseAxisModelClass.extend({
	
	                type: axisName + 'Axis.' + axisType,
	
	                mergeDefaultAndTheme: function (option, ecModel) {
	                    var layoutMode = this.layoutMode;
	                    var inputPositionParams = layoutMode
	                        ? layout.getLayoutParams(option) : {};
	
	                    var themeModel = ecModel.getTheme();
	                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));
	                    zrUtil.merge(option, this.getDefaultOption());
	
	                    option.type = axisTypeDefaulter(axisName, option);
	
	                    if (layoutMode) {
	                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);
	                    }
	                },
	
	                defaultOption: zrUtil.mergeAll(
	                    [
	                        {},
	                        axisDefault[axisType + 'Axis'],
	                        extraDefaultOption
	                    ],
	                    true
	                )
	            });
	        });
	
	        ComponentModel.registerSubTypeDefaulter(
	            axisName + 'Axis',
	            zrUtil.curry(axisTypeDefaulter, axisName)
	        );
	    };


/***/ },
/* 637 */
/*!********************************************!*\
  !*** ./~/echarts/lib/coord/axisDefault.js ***!
  \********************************************/
/***/ function(module, exports, __webpack_require__) {

	
	
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	
	    var defaultOption = {
	        show: true,
	        zlevel: 0,                  // 一级层叠
	        z: 0,                       // 二级层叠
	        // 反向坐标轴
	        inverse: false,
	
	        // 坐标轴名字，默认为空
	        name: '',
	        // 坐标轴名字位置，支持'start' | 'middle' | 'end'
	        nameLocation: 'end',
	        // 坐标轴名字旋转，degree。
	        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.
	        nameTruncate: {
	            maxWidth: null,
	            ellipsis: '...',
	            placeholder: '.'
	        },
	        // 坐标轴文字样式，默认取全局样式
	        nameTextStyle: {},
	        // 文字与轴线距离
	        nameGap: 15,
	
	        silent: false, // Default false to support tooltip.
	        triggerEvent: false, // Default false to avoid legacy user event listener fail.
	
	        tooltip: {
	            show: false
	        },
	
	        // 坐标轴线
	        axisLine: {
	            // 默认显示，属性show控制显示与否
	            show: true,
	            onZero: true,
	            // 属性lineStyle控制线条样式
	            lineStyle: {
	                color: '#333',
	                width: 1,
	                type: 'solid'
	            }
	        },
	        // 坐标轴小标记
	        axisTick: {
	            // 属性show控制显示与否，默认显示
	            show: true,
	            // 控制小标记是否在grid里
	            inside: false,
	            // 属性length控制线长
	            length: 5,
	            // 属性lineStyle控制线条样式
	            lineStyle: {
	                width: 1
	            }
	        },
	        // 坐标轴文本标签，详见axis.axisLabel
	        axisLabel: {
	            show: true,
	            // 控制文本标签是否在grid里
	            inside: false,
	            rotate: 0,
	            margin: 8,
	            // formatter: null,
	            // 其余属性默认使用全局文本样式，详见TEXTSTYLE
	            textStyle: {
	                fontSize: 12
	            }
	        },
	        // 分隔线
	        splitLine: {
	            // 默认显示，属性show控制显示与否
	            show: true,
	            // 属性lineStyle（详见lineStyle）控制线条样式
	            lineStyle: {
	                color: ['#ccc'],
	                width: 1,
	                type: 'solid'
	            }
	        },
	        // 分隔区域
	        splitArea: {
	            // 默认不显示，属性show控制显示与否
	            show: false,
	            // 属性areaStyle（详见areaStyle）控制区域样式
	            areaStyle: {
	                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']
	            }
	        }
	    };
	
	    var categoryAxis = zrUtil.merge({
	        // 类目起始和结束两端空白策略
	        boundaryGap: true,
	        // splitArea: {
	            // show: false
	        // },
	        splitLine: {
	            show: false
	        },
	        // 坐标轴小标记
	        axisTick: {
	            // If tick is align with label when boundaryGap is true
	            // Default with axisTick
	            alignWithLabel: false,
	            interval: 'auto'
	        },
	        // 坐标轴文本标签，详见axis.axisLabel
	        axisLabel: {
	            interval: 'auto'
	        }
	    }, defaultOption);
	
	    var valueAxis = zrUtil.merge({
	        // 数值起始和结束两端空白策略
	        boundaryGap: [0, 0],
	        // 最小值, 设置成 'dataMin' 则从数据中计算最小值
	        // min: null,
	        // 最大值，设置成 'dataMax' 则从数据中计算最大值
	        // max: null,
	        // Readonly prop, specifies start value of the range when using data zoom.
	        // rangeStart: null
	        // Readonly prop, specifies end value of the range when using data zoom.
	        // rangeEnd: null
	        // 脱离0值比例，放大聚焦到最终_min，_max区间
	        // scale: false,
	        // 分割段数，默认为5
	        splitNumber: 5
	        // Minimum interval
	        // minInterval: null
	    }, defaultOption);
	
	    // FIXME
	    var timeAxis = zrUtil.defaults({
	        scale: true,
	        min: 'dataMin',
	        max: 'dataMax'
	    }, valueAxis);
	    var logAxis = zrUtil.defaults({}, valueAxis);
	    logAxis.scale = true;
	
	    module.exports = {
	        categoryAxis: categoryAxis,
	        valueAxis: valueAxis,
	        timeAxis: timeAxis,
	        logAxis: logAxis
	    };


/***/ },
/* 638 */
/*!*****************************************************!*\
  !*** ./~/echarts/lib/coord/axisModelCommonMixin.js ***!
  \*****************************************************/
/***/ function(module, exports, __webpack_require__) {

	
	
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	    var axisHelper = __webpack_require__(/*! ./axisHelper */ 623);
	
	    function getName(obj) {
	        if (zrUtil.isObject(obj) && obj.value != null) {
	            return obj.value;
	        }
	        else {
	            return obj;
	        }
	    }
	    /**
	     * Get categories
	     */
	    function getCategories() {
	        return this.get('type') === 'category'
	            && zrUtil.map(this.get('data'), getName);
	    }
	
	    /**
	     * Format labels
	     * @return {Array.<string>}
	     */
	    function getFormattedLabels() {
	        return axisHelper.getFormattedLabels(
	            this.axis,
	            this.get('axisLabel.formatter')
	        );
	    }
	
	    module.exports = {
	
	        getFormattedLabels: getFormattedLabels,
	
	        getCategories: getCategories
	    };


/***/ },
/* 639 */
/*!**********************************************!*\
  !*** ./~/echarts/lib/chart/bar/BarSeries.js ***!
  \**********************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	
	    var SeriesModel = __webpack_require__(/*! ../../model/Series */ 550);
	    var createListFromArray = __webpack_require__(/*! ../helper/createListFromArray */ 640);
	
	    module.exports = SeriesModel.extend({
	
	        type: 'series.bar',
	
	        dependencies: ['grid', 'polar'],
	
	        getInitialData: function (option, ecModel) {
	            if (__DEV__) {
	                var coordSys = option.coordinateSystem;
	                if (coordSys !== 'cartesian2d') {
	                    throw new Error('Bar only support cartesian2d coordinateSystem');
	                }
	            }
	            return createListFromArray(option.data, this, ecModel);
	        },
	
	        getMarkerPosition: function (value) {
	            var coordSys = this.coordinateSystem;
	            if (coordSys) {
	                // PENDING if clamp ?
	                var pt = coordSys.dataToPoint(value, true);
	                var data = this.getData();
	                var offset = data.getLayout('offset');
	                var size = data.getLayout('size');
	                var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;
	                pt[offsetIndex] += offset + size / 2;
	                return pt;
	            }
	            return [NaN, NaN];
	        },
	
	        brushSelector: 'rect',
	
	        defaultOption: {
	            zlevel: 0,                  // 一级层叠
	            z: 2,                       // 二级层叠
	            coordinateSystem: 'cartesian2d',
	            legendHoverLink: true,
	            // stack: null
	
	            // Cartesian coordinate system
	            xAxisIndex: 0,
	            yAxisIndex: 0,
	
	            // 最小高度改为0
	            barMinHeight: 0,
	
	            // barMaxWidth: null,
	            // 默认自适应
	            // barWidth: null,
	            // 柱间距离，默认为柱形宽度的30%，可设固定值
	            // barGap: '30%',
	            // 类目间柱形距离，默认为类目间距的20%，可设固定值
	            // barCategoryGap: '20%',
	            // label: {
	            //     normal: {
	            //         show: false
	            //     }
	            // },
	            itemStyle: {
	                normal: {
	                    // color: '各异'
	                },
	                emphasis: {}
	            }
	        }
	    });


/***/ },
/* 640 */
/*!***********************************************************!*\
  !*** ./~/echarts/lib/chart/helper/createListFromArray.js ***!
  \***********************************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	
	    var List = __webpack_require__(/*! ../../data/List */ 619);
	    var completeDimensions = __webpack_require__(/*! ../../data/helper/completeDimensions */ 641);
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	    var modelUtil = __webpack_require__(/*! ../../util/model */ 527);
	    var CoordinateSystem = __webpack_require__(/*! ../../CoordinateSystem */ 548);
	    var getDataItemValue = modelUtil.getDataItemValue;
	    var converDataValue = modelUtil.converDataValue;
	
	    function firstDataNotNull(data) {
	        var i = 0;
	        while (i < data.length && data[i] == null) {
	            i++;
	        }
	        return data[i];
	    }
	    function ifNeedCompleteOrdinalData(data) {
	        var sampleItem = firstDataNotNull(data);
	        return sampleItem != null
	            && !zrUtil.isArray(getDataItemValue(sampleItem));
	    }
	
	    /**
	     * Helper function to create a list from option data
	     */
	    function createListFromArray(data, seriesModel, ecModel) {
	        // If data is undefined
	        data = data || [];
	
	        if (__DEV__) {
	            if (!zrUtil.isArray(data)) {
	                throw new Error('Invalid data.');
	            }
	        }
	
	        var coordSysName = seriesModel.get('coordinateSystem');
	        var creator = creators[coordSysName];
	        var registeredCoordSys = CoordinateSystem.get(coordSysName);
	        // FIXME
	        var axesInfo = creator && creator(data, seriesModel, ecModel);
	        var dimensions = axesInfo && axesInfo.dimensions;
	        if (!dimensions) {
	            // Get dimensions from registered coordinate system
	            dimensions = (registeredCoordSys && registeredCoordSys.dimensions) || ['x', 'y'];
	            dimensions = completeDimensions(dimensions, data, dimensions.concat(['value']));
	        }
	        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;
	
	        var list = new List(dimensions, seriesModel);
	
	        var nameList = createNameList(axesInfo, data);
	
	        var categories = {};
	        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))
	            ? function (itemOpt, dimName, dataIndex, dimIndex) {
	                // If any dataItem is like { value: 10 }
	                if (modelUtil.isDataItemOption(itemOpt)) {
	                    list.hasItemOption = true;
	                }
	
	                // Use dataIndex as ordinal value in categoryAxis
	                return dimIndex === categoryIndex
	                    ? dataIndex
	                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);
	            }
	            : function (itemOpt, dimName, dataIndex, dimIndex) {
	                var value = getDataItemValue(itemOpt);
	                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);
	                // If any dataItem is like { value: 10 }
	                if (modelUtil.isDataItemOption(itemOpt)) {
	                    list.hasItemOption = true;
	                }
	
	                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;
	                if (categoryAxesModels && categoryAxesModels[dimName]) {
	                    // If given value is a category string
	                    if (typeof val === 'string') {
	                        // Lazy get categories
	                        categories[dimName] = categories[dimName]
	                            || categoryAxesModels[dimName].getCategories();
	                        val = zrUtil.indexOf(categories[dimName], val);
	                        if (val < 0 && !isNaN(val)) {
	                            // In case some one write '1', '2' istead of 1, 2
	                            val = +val;
	                        }
	                    }
	                }
	                return val;
	            };
	
	        list.hasItemOption = false;
	        list.initData(data, nameList, dimValueGetter);
	
	        return list;
	    }
	
	    function isStackable(axisType) {
	        return axisType !== 'category' && axisType !== 'time';
	    }
	
	    function getDimTypeByAxis(axisType) {
	        return axisType === 'category'
	            ? 'ordinal'
	            : axisType === 'time'
	            ? 'time'
	            : 'float';
	    }
	
	    /**
	     * Creaters for each coord system.
	     */
	    var creators = {
	
	        cartesian2d: function (data, seriesModel, ecModel) {
	            var xAxisModel = ecModel.getComponent('xAxis', seriesModel.get('xAxisIndex'));
	            var yAxisModel = ecModel.getComponent('yAxis', seriesModel.get('yAxisIndex'));
	
	            if (__DEV__) {
	                if (!xAxisModel) {
	                    throw new Error('xAxis "' + seriesModel.get('xAxisIndex') + '" not found');
	                }
	                if (!yAxisModel) {
	                    throw new Error('yAxis "' + seriesModel.get('yAxisIndex') + '" not found');
	                }
	            }
	
	            var xAxisType = xAxisModel.get('type');
	            var yAxisType = yAxisModel.get('type');
	
	            var dimensions = [
	                {
	                    name: 'x',
	                    type: getDimTypeByAxis(xAxisType),
	                    stackable: isStackable(xAxisType)
	                },
	                {
	                    name: 'y',
	                    // If two category axes
	                    type: getDimTypeByAxis(yAxisType),
	                    stackable: isStackable(yAxisType)
	                }
	            ];
	
	            var isXAxisCateogry = xAxisType === 'category';
	            var isYAxisCategory = yAxisType === 'category';
	
	            completeDimensions(dimensions, data, ['x', 'y', 'z']);
	
	            var categoryAxesModels = {};
	            if (isXAxisCateogry) {
	                categoryAxesModels.x = xAxisModel;
	            }
	            if (isYAxisCategory) {
	                categoryAxesModels.y = yAxisModel;
	            }
	            return {
	                dimensions: dimensions,
	                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),
	                categoryAxesModels: categoryAxesModels
	            };
	        },
	
	        polar: function (data, seriesModel, ecModel) {
	            var polarIndex = seriesModel.get('polarIndex') || 0;
	
	            var axisFinder = function (axisModel) {
	                return axisModel.get('polarIndex') === polarIndex;
	            };
	
	            var angleAxisModel = ecModel.findComponents({
	                mainType: 'angleAxis', filter: axisFinder
	            })[0];
	            var radiusAxisModel = ecModel.findComponents({
	                mainType: 'radiusAxis', filter: axisFinder
	            })[0];
	
	            if (__DEV__) {
	                if (!angleAxisModel) {
	                    throw new Error('angleAxis option not found');
	                }
	                if (!radiusAxisModel) {
	                    throw new Error('radiusAxis option not found');
	                }
	            }
	
	            var radiusAxisType = radiusAxisModel.get('type');
	            var angleAxisType = angleAxisModel.get('type');
	
	            var dimensions = [
	                {
	                    name: 'radius',
	                    type: getDimTypeByAxis(radiusAxisType),
	                    stackable: isStackable(radiusAxisType)
	                },
	                {
	                    name: 'angle',
	                    type: getDimTypeByAxis(angleAxisType),
	                    stackable: isStackable(angleAxisType)
	                }
	            ];
	            var isAngleAxisCateogry = angleAxisType === 'category';
	            var isRadiusAxisCateogry = radiusAxisType === 'category';
	
	            completeDimensions(dimensions, data, ['radius', 'angle', 'value']);
	
	            var categoryAxesModels = {};
	            if (isRadiusAxisCateogry) {
	                categoryAxesModels.radius = radiusAxisModel;
	            }
	            if (isAngleAxisCateogry) {
	                categoryAxesModels.angle = angleAxisModel;
	            }
	            return {
	                dimensions: dimensions,
	                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),
	                categoryAxesModels: categoryAxesModels
	            };
	        },
	
	        geo: function (data, seriesModel, ecModel) {
	            // TODO Region
	            // 多个散点图系列在同一个地区的时候
	            return {
	                dimensions: completeDimensions([
	                    {name: 'lng'},
	                    {name: 'lat'}
	                ], data, ['lng', 'lat', 'value'])
	            };
	        }
	    };
	
	    function createNameList(result, data) {
	        var nameList = [];
	
	        var categoryDim = result && result.dimensions[result.categoryIndex];
	        var categoryAxisModel;
	        if (categoryDim) {
	            categoryAxisModel = result.categoryAxesModels[categoryDim.name];
	        }
	
	        if (categoryAxisModel) {
	            // FIXME Two category axis
	            var categories = categoryAxisModel.getCategories();
	            if (categories) {
	                var dataLen = data.length;
	                // Ordered data is given explicitly like
	                // [[3, 0.2], [1, 0.3], [2, 0.15]]
	                // or given scatter data,
	                // pick the category
	                if (zrUtil.isArray(data[0]) && data[0].length > 1) {
	                    nameList = [];
	                    for (var i = 0; i < dataLen; i++) {
	                        nameList[i] = categories[data[i][result.categoryIndex || 0]];
	                    }
	                }
	                else {
	                    nameList = categories.slice(0);
	                }
	            }
	        }
	
	        return nameList;
	    }
	
	    module.exports = createListFromArray;
	


/***/ },
/* 641 */
/*!*********************************************************!*\
  !*** ./~/echarts/lib/data/helper/completeDimensions.js ***!
  \*********************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Complete dimensions by data (guess dimension).
	 */
	
	
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	
	    /**
	     * Complete the dimensions array guessed from the data structure.
	     * @param  {Array.<string>} dimensions      Necessary dimensions, like ['x', 'y']
	     * @param  {Array} data                     Data list. [[1, 2, 3], [2, 3, 4]]
	     * @param  {Array.<string>} defaultNames    Default names to fill not necessary dimensions, like ['value']
	     * @param  {string} extraPrefix             Prefix of name when filling the left dimensions.
	     * @return {Array.<string>}
	     */
	    function completeDimensions(dimensions, data, defaultNames, extraPrefix) {
	        if (!data) {
	            return dimensions;
	        }
	
	        var value0 = retrieveValue(data[0]);
	        var dimSize = zrUtil.isArray(value0) && value0.length || 1;
	
	        defaultNames = defaultNames || [];
	        extraPrefix = extraPrefix || 'extra';
	        for (var i = 0; i < dimSize; i++) {
	            if (!dimensions[i]) {
	                var name = defaultNames[i] || (extraPrefix + (i - defaultNames.length));
	                dimensions[i] = guessOrdinal(data, i)
	                    ? {type: 'ordinal', name: name}
	                    : name;
	            }
	        }
	
	        return dimensions;
	    }
	
	    // The rule should not be complex, otherwise user might not
	    // be able to known where the data is wrong.
	    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {
	        for (var i = 0, len = data.length; i < len; i++) {
	            var value = retrieveValue(data[i]);
	
	            if (!zrUtil.isArray(value)) {
	                return false;
	            }
	
	            var value = value[dimIndex];
	            if (value != null && isFinite(value)) {
	                return false;
	            }
	            else if (zrUtil.isString(value) && value !== '-') {
	                return true;
	            }
	        }
	        return false;
	    };
	
	    function retrieveValue(o) {
	        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;
	    }
	
	    module.exports = completeDimensions;
	


/***/ },
/* 642 */
/*!********************************************!*\
  !*** ./~/echarts/lib/chart/bar/BarView.js ***!
  \********************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	    var graphic = __webpack_require__(/*! ../../util/graphic */ 565);
	
	    zrUtil.extend(__webpack_require__(/*! ../../model/Model */ 534).prototype, __webpack_require__(/*! ./barItemStyle */ 643));
	
	    function fixLayoutWithLineWidth(layout, lineWidth) {
	        var signX = layout.width > 0 ? 1 : -1;
	        var signY = layout.height > 0 ? 1 : -1;
	        // In case width or height are too small.
	        lineWidth = Math.min(lineWidth, Math.abs(layout.width), Math.abs(layout.height));
	        layout.x += signX * lineWidth / 2;
	        layout.y += signY * lineWidth / 2;
	        layout.width -= signX * lineWidth;
	        layout.height -= signY * lineWidth;
	    }
	
	    module.exports = __webpack_require__(/*! ../../echarts */ 523).extendChartView({
	
	        type: 'bar',
	
	        render: function (seriesModel, ecModel, api) {
	            var coordinateSystemType = seriesModel.get('coordinateSystem');
	
	            if (coordinateSystemType === 'cartesian2d') {
	                this._renderOnCartesian(seriesModel, ecModel, api);
	            }
	
	            return this.group;
	        },
	
	        _renderOnCartesian: function (seriesModel, ecModel, api) {
	            var group = this.group;
	            var data = seriesModel.getData();
	            var oldData = this._data;
	
	            var cartesian = seriesModel.coordinateSystem;
	            var baseAxis = cartesian.getBaseAxis();
	            var isHorizontal = baseAxis.isHorizontal();
	
	            var enableAnimation = seriesModel.get('animation');
	
	            var barBorderWidthQuery = ['itemStyle', 'normal', 'barBorderWidth'];
	
	            function createRect(dataIndex, isUpdate) {
	                var layout = data.getItemLayout(dataIndex);
	                var lineWidth = data.getItemModel(dataIndex).get(barBorderWidthQuery) || 0;
	                fixLayoutWithLineWidth(layout, lineWidth);
	
	                var rect = new graphic.Rect({
	                    shape: zrUtil.extend({}, layout)
	                });
	                // Animation
	                if (enableAnimation) {
	                    var rectShape = rect.shape;
	                    var animateProperty = isHorizontal ? 'height' : 'width';
	                    var animateTarget = {};
	                    rectShape[animateProperty] = 0;
	                    animateTarget[animateProperty] = layout[animateProperty];
	                    graphic[isUpdate? 'updateProps' : 'initProps'](rect, {
	                        shape: animateTarget
	                    }, seriesModel, dataIndex);
	                }
	                return rect;
	            }
	            data.diff(oldData)
	                .add(function (dataIndex) {
	                    // 空数据
	                    if (!data.hasValue(dataIndex)) {
	                        return;
	                    }
	
	                    var rect = createRect(dataIndex);
	
	                    data.setItemGraphicEl(dataIndex, rect);
	
	                    group.add(rect);
	
	                })
	                .update(function (newIndex, oldIndex) {
	                    var rect = oldData.getItemGraphicEl(oldIndex);
	                    // 空数据
	                    if (!data.hasValue(newIndex)) {
	                        group.remove(rect);
	                        return;
	                    }
	                    if (!rect) {
	                        rect = createRect(newIndex, true);
	                    }
	
	                    var layout = data.getItemLayout(newIndex);
	                    var lineWidth = data.getItemModel(newIndex).get(barBorderWidthQuery) || 0;
	                    fixLayoutWithLineWidth(layout, lineWidth);
	
	                    graphic.updateProps(rect, {
	                        shape: layout
	                    }, seriesModel, newIndex);
	
	                    data.setItemGraphicEl(newIndex, rect);
	
	                    // Add back
	                    group.add(rect);
	                })
	                .remove(function (idx) {
	                    var rect = oldData.getItemGraphicEl(idx);
	                    if (rect) {
	                        // Not show text when animating
	                        rect.style.text = '';
	                        graphic.updateProps(rect, {
	                            shape: {
	                                width: 0
	                            }
	                        }, seriesModel, idx, function () {
	                            group.remove(rect);
	                        });
	                    }
	                })
	                .execute();
	
	            this._updateStyle(seriesModel, data, isHorizontal);
	
	            this._data = data;
	        },
	
	        _updateStyle: function (seriesModel, data, isHorizontal) {
	            function setLabel(style, model, color, labelText, labelPositionOutside) {
	                graphic.setText(style, model, color);
	                style.text = labelText;
	                if (style.textPosition === 'outside') {
	                    style.textPosition = labelPositionOutside;
	                }
	            }
	
	            data.eachItemGraphicEl(function (rect, idx) {
	                var itemModel = data.getItemModel(idx);
	                var color = data.getItemVisual(idx, 'color');
	                var opacity = data.getItemVisual(idx, 'opacity');
	                var layout = data.getItemLayout(idx);
	                var itemStyleModel = itemModel.getModel('itemStyle.normal');
	
	                var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();
	
	                rect.setShape('r', itemStyleModel.get('barBorderRadius') || 0);
	
	                rect.useStyle(zrUtil.defaults(
	                    {
	                        fill: color,
	                        opacity: opacity
	                    },
	                    itemStyleModel.getBarItemStyle()
	                ));
	
	                var labelPositionOutside = isHorizontal
	                    ? (layout.height > 0 ? 'bottom' : 'top')
	                    : (layout.width > 0 ? 'left' : 'right');
	
	                var labelModel = itemModel.getModel('label.normal');
	                var hoverLabelModel = itemModel.getModel('label.emphasis');
	                var rectStyle = rect.style;
	                if (labelModel.get('show')) {
	                    setLabel(
	                        rectStyle, labelModel, color,
	                        zrUtil.retrieve(
	                            seriesModel.getFormattedLabel(idx, 'normal'),
	                            seriesModel.getRawValue(idx)
	                        ),
	                        labelPositionOutside
	                    );
	                }
	                else {
	                    rectStyle.text = '';
	                }
	                if (hoverLabelModel.get('show')) {
	                    setLabel(
	                        hoverStyle, hoverLabelModel, color,
	                        zrUtil.retrieve(
	                            seriesModel.getFormattedLabel(idx, 'emphasis'),
	                            seriesModel.getRawValue(idx)
	                        ),
	                        labelPositionOutside
	                    );
	                }
	                else {
	                    hoverStyle.text = '';
	                }
	                graphic.setHoverStyle(rect, hoverStyle);
	            });
	        },
	
	        remove: function (ecModel, api) {
	            var group = this.group;
	            if (ecModel.get('animation')) {
	                if (this._data) {
	                    this._data.eachItemGraphicEl(function (el) {
	                        // Not show text when animating
	                        el.style.text = '';
	                        graphic.updateProps(el, {
	                            shape: {
	                                width: 0
	                            }
	                        }, ecModel, el.dataIndex, function () {
	                            group.remove(el);
	                        });
	                    });
	                }
	            }
	            else {
	                group.removeAll();
	            }
	        }
	    });


/***/ },
/* 643 */
/*!*************************************************!*\
  !*** ./~/echarts/lib/chart/bar/barItemStyle.js ***!
  \*************************************************/
/***/ function(module, exports, __webpack_require__) {

	
	
	
	    var getBarItemStyle = __webpack_require__(/*! ../../model/mixin/makeStyleMapper */ 537)(
	        [
	            ['fill', 'color'],
	            ['stroke', 'borderColor'],
	            ['lineWidth', 'borderWidth'],
	            // Compatitable with 2
	            ['stroke', 'barBorderColor'],
	            ['lineWidth', 'barBorderWidth'],
	            ['opacity'],
	            ['shadowBlur'],
	            ['shadowOffsetX'],
	            ['shadowOffsetY'],
	            ['shadowColor']
	        ]
	    );
	    module.exports = {
	        getBarItemStyle: function (excludes) {
	            var style = getBarItemStyle.call(this, excludes);
	            if (this.getBorderLineDash) {
	                var lineDash = this.getBorderLineDash();
	                lineDash && (style.lineDash = lineDash);
	            }
	            return style;
	        }
	    };


/***/ },
/* 644 */
/*!*****************************************!*\
  !*** ./~/echarts/lib/layout/barGrid.js ***!
  \*****************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	    var numberUtil = __webpack_require__(/*! ../util/number */ 529);
	    var parsePercent = numberUtil.parsePercent;
	
	    function getSeriesStackId(seriesModel) {
	        return seriesModel.get('stack') || '__ec_stack_' + seriesModel.seriesIndex;
	    }
	
	    function getAxisKey(axis) {
	        return axis.dim + axis.index;
	    }
	
	    function calBarWidthAndOffset(barSeries, api) {
	        // Columns info on each category axis. Key is cartesian name
	        var columnsMap = {};
	
	        zrUtil.each(barSeries, function (seriesModel, idx) {
	            var data = seriesModel.getData();
	            var cartesian = seriesModel.coordinateSystem;
	
	            var baseAxis = cartesian.getBaseAxis();
	            var axisExtent = baseAxis.getExtent();
	            var bandWidth = baseAxis.type === 'category'
	                ? baseAxis.getBandWidth()
	                : (Math.abs(axisExtent[1] - axisExtent[0]) / data.count());
	
	            var columnsOnAxis = columnsMap[getAxisKey(baseAxis)] || {
	                bandWidth: bandWidth,
	                remainedWidth: bandWidth,
	                autoWidthCount: 0,
	                categoryGap: '20%',
	                gap: '30%',
	                stacks: {}
	            };
	            var stacks = columnsOnAxis.stacks;
	            columnsMap[getAxisKey(baseAxis)] = columnsOnAxis;
	
	            var stackId = getSeriesStackId(seriesModel);
	
	            if (!stacks[stackId]) {
	                columnsOnAxis.autoWidthCount++;
	            }
	            stacks[stackId] = stacks[stackId] || {
	                width: 0,
	                maxWidth: 0
	            };
	
	            var barWidth = parsePercent(
	                seriesModel.get('barWidth'), bandWidth
	            );
	            var barMaxWidth = parsePercent(
	                seriesModel.get('barMaxWidth'), bandWidth
	            );
	            var barGap = seriesModel.get('barGap');
	            var barCategoryGap = seriesModel.get('barCategoryGap');
	            // TODO
	            if (barWidth && !stacks[stackId].width) {
	                barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);
	                stacks[stackId].width = barWidth;
	                columnsOnAxis.remainedWidth -= barWidth;
	            }
	
	            barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);
	            (barGap != null) && (columnsOnAxis.gap = barGap);
	            (barCategoryGap != null) && (columnsOnAxis.categoryGap = barCategoryGap);
	        });
	
	        var result = {};
	
	        zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {
	
	            result[coordSysName] = {};
	
	            var stacks = columnsOnAxis.stacks;
	            var bandWidth = columnsOnAxis.bandWidth;
	            var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);
	            var barGapPercent = parsePercent(columnsOnAxis.gap, 1);
	
	            var remainedWidth = columnsOnAxis.remainedWidth;
	            var autoWidthCount = columnsOnAxis.autoWidthCount;
	            var autoWidth = (remainedWidth - categoryGap)
	                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);
	            autoWidth = Math.max(autoWidth, 0);
	
	            // Find if any auto calculated bar exceeded maxBarWidth
	            zrUtil.each(stacks, function (column, stack) {
	                var maxWidth = column.maxWidth;
	                if (!column.width && maxWidth && maxWidth < autoWidth) {
	                    maxWidth = Math.min(maxWidth, remainedWidth);
	                    remainedWidth -= maxWidth;
	                    column.width = maxWidth;
	                    autoWidthCount--;
	                }
	            });
	
	            // Recalculate width again
	            autoWidth = (remainedWidth - categoryGap)
	                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);
	            autoWidth = Math.max(autoWidth, 0);
	
	            var widthSum = 0;
	            var lastColumn;
	            zrUtil.each(stacks, function (column, idx) {
	                if (!column.width) {
	                    column.width = autoWidth;
	                }
	                lastColumn = column;
	                widthSum += column.width * (1 + barGapPercent);
	            });
	            if (lastColumn) {
	                widthSum -= lastColumn.width * barGapPercent;
	            }
	
	            var offset = -widthSum / 2;
	            zrUtil.each(stacks, function (column, stackId) {
	                result[coordSysName][stackId] = result[coordSysName][stackId] || {
	                    offset: offset,
	                    width: column.width
	                };
	
	                offset += column.width * (1 + barGapPercent);
	            });
	        });
	
	        return result;
	    }
	
	    /**
	     * @param {string} seriesType
	     * @param {module:echarts/model/Global} ecModel
	     * @param {module:echarts/ExtensionAPI} api
	     */
	    function barLayoutGrid(seriesType, ecModel, api) {
	
	        var barWidthAndOffset = calBarWidthAndOffset(
	            zrUtil.filter(
	                ecModel.getSeriesByType(seriesType),
	                function (seriesModel) {
	                    return !ecModel.isSeriesFiltered(seriesModel)
	                        && seriesModel.coordinateSystem
	                        && seriesModel.coordinateSystem.type === 'cartesian2d';
	                }
	            )
	        );
	
	        var lastStackCoords = {};
	
	        ecModel.eachSeriesByType(seriesType, function (seriesModel) {
	
	            var data = seriesModel.getData();
	            var cartesian = seriesModel.coordinateSystem;
	            var baseAxis = cartesian.getBaseAxis();
	
	            var stackId = getSeriesStackId(seriesModel);
	            var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];
	            var columnOffset = columnLayoutInfo.offset;
	            var columnWidth = columnLayoutInfo.width;
	            var valueAxis = cartesian.getOtherAxis(baseAxis);
	
	            var barMinHeight = seriesModel.get('barMinHeight') || 0;
	
	            var valueAxisStart = baseAxis.onZero
	                ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0))
	                : valueAxis.getGlobalExtent()[0];
	
	            var coords = cartesian.dataToPoints(data, true);
	            lastStackCoords[stackId] = lastStackCoords[stackId] || [];
	
	            data.setLayout({
	                offset: columnOffset,
	                size: columnWidth
	            });
	            data.each(valueAxis.dim, function (value, idx) {
	                // 空数据
	                if (isNaN(value)) {
	                    return;
	                }
	                if (!lastStackCoords[stackId][idx]) {
	                    lastStackCoords[stackId][idx] = {
	                        // Positive stack
	                        p: valueAxisStart,
	                        // Negative stack
	                        n: valueAxisStart
	                    };
	                }
	                var sign = value >= 0 ? 'p' : 'n';
	                var coord = coords[idx];
	                var lastCoord = lastStackCoords[stackId][idx][sign];
	                var x, y, width, height;
	                if (valueAxis.isHorizontal()) {
	                    x = lastCoord;
	                    y = coord[1] + columnOffset;
	                    width = coord[0] - lastCoord;
	                    height = columnWidth;
	
	                    if (Math.abs(width) < barMinHeight) {
	                        width = (width < 0 ? -1 : 1) * barMinHeight;
	                    }
	                    lastStackCoords[stackId][idx][sign] += width;
	                }
	                else {
	                    x = coord[0] + columnOffset;
	                    y = lastCoord;
	                    width = columnWidth;
	                    height = coord[1] - lastCoord;
	                    if (Math.abs(height) < barMinHeight) {
	                        // Include zero to has a positive bar
	                        height = (height <= 0 ? -1 : 1) * barMinHeight;
	                    }
	                    lastStackCoords[stackId][idx][sign] += height;
	                }
	
	                data.setItemLayout(idx, {
	                    x: x,
	                    y: y,
	                    width: width,
	                    height: height
	                });
	            }, true);
	
	        }, this);
	    }
	
	    module.exports = barLayoutGrid;


/***/ },
/* 645 */
/*!*****************************************!*\
  !*** ./~/echarts/lib/component/grid.js ***!
  \*****************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	
	    var graphic = __webpack_require__(/*! ../util/graphic */ 565);
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	
	    __webpack_require__(/*! ../coord/cartesian/Grid */ 622);
	
	    __webpack_require__(/*! ./axis */ 646);
	
	    // Grid view
	    __webpack_require__(/*! ../echarts */ 523).extendComponentView({
	
	        type: 'grid',
	
	        render: function (gridModel, ecModel) {
	            this.group.removeAll();
	            if (gridModel.get('show')) {
	                this.group.add(new graphic.Rect({
	                    shape:gridModel.coordinateSystem.getRect(),
	                    style: zrUtil.defaults({
	                        fill: gridModel.get('backgroundColor')
	                    }, gridModel.getItemStyle()),
	                    silent: true
	                }));
	            }
	        }
	    });


/***/ },
/* 646 */
/*!*****************************************!*\
  !*** ./~/echarts/lib/component/axis.js ***!
  \*****************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// TODO boundaryGap
	
	
	    __webpack_require__(/*! ../coord/cartesian/AxisModel */ 635);
	
	    __webpack_require__(/*! ./axis/AxisView */ 647);


/***/ },
/* 647 */
/*!**************************************************!*\
  !*** ./~/echarts/lib/component/axis/AxisView.js ***!
  \**************************************************/
/***/ function(module, exports, __webpack_require__) {

	
	
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	    var graphic = __webpack_require__(/*! ../../util/graphic */ 565);
	    var AxisBuilder = __webpack_require__(/*! ./AxisBuilder */ 648);
	    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;
	    var getInterval = AxisBuilder.getInterval;
	
	    var axisBuilderAttrs = [
	        'axisLine', 'axisLabel', 'axisTick', 'axisName'
	    ];
	    var selfBuilderAttrs = [
	        'splitArea', 'splitLine'
	    ];
	
	    // function getAlignWithLabel(model, axisModel) {
	    //     var alignWithLabel = model.get('alignWithLabel');
	    //     if (alignWithLabel === 'auto') {
	    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');
	    //     }
	    //     return alignWithLabel;
	    // }
	
	    var AxisView = __webpack_require__(/*! ../../echarts */ 523).extendComponentView({
	
	        type: 'axis',
	
	        render: function (axisModel, ecModel) {
	
	            this.group.removeAll();
	
	            var oldAxisGroup = this._axisGroup;
	            this._axisGroup = new graphic.Group();
	
	            this.group.add(this._axisGroup);
	
	            if (!axisModel.get('show')) {
	                return;
	            }
	
	            var gridModel = ecModel.getComponent('grid', axisModel.get('gridIndex'));
	
	            var layout = layoutAxis(gridModel, axisModel);
	
	            var axisBuilder = new AxisBuilder(axisModel, layout);
	
	            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);
	
	            this._axisGroup.add(axisBuilder.getGroup());
	
	            zrUtil.each(selfBuilderAttrs, function (name) {
	                if (axisModel.get(name + '.show')) {
	                    this['_' + name](axisModel, gridModel, layout.labelInterval);
	                }
	            }, this);
	
	            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);
	        },
	
	        /**
	         * @param {module:echarts/coord/cartesian/AxisModel} axisModel
	         * @param {module:echarts/coord/cartesian/GridModel} gridModel
	         * @param {number|Function} labelInterval
	         * @private
	         */
	        _splitLine: function (axisModel, gridModel, labelInterval) {
	            var axis = axisModel.axis;
	
	            var splitLineModel = axisModel.getModel('splitLine');
	            var lineStyleModel = splitLineModel.getModel('lineStyle');
	            var lineColors = lineStyleModel.get('color');
	
	            var lineInterval = getInterval(splitLineModel, labelInterval);
	
	            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];
	
	            var gridRect = gridModel.coordinateSystem.getRect();
	            var isHorizontal = axis.isHorizontal();
	
	            var lineCount = 0;
	
	            var ticksCoords = axis.getTicksCoords(
	                // splitLineModel.get('alignWithLabel')
	            );
	            var ticks = axis.scale.getTicks();
	
	            var p1 = [];
	            var p2 = [];
	            // Simple optimization
	            // Batching the lines if color are the same
	            var lineStyle = lineStyleModel.getLineStyle();
	            for (var i = 0; i < ticksCoords.length; i++) {
	                if (ifIgnoreOnTick(axis, i, lineInterval)) {
	                    continue;
	                }
	
	                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);
	
	                if (isHorizontal) {
	                    p1[0] = tickCoord;
	                    p1[1] = gridRect.y;
	                    p2[0] = tickCoord;
	                    p2[1] = gridRect.y + gridRect.height;
	                }
	                else {
	                    p1[0] = gridRect.x;
	                    p1[1] = tickCoord;
	                    p2[0] = gridRect.x + gridRect.width;
	                    p2[1] = tickCoord;
	                }
	
	                var colorIndex = (lineCount++) % lineColors.length;
	                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({
	                    anid: 'line_' + ticks[i],
	
	                    shape: {
	                        x1: p1[0],
	                        y1: p1[1],
	                        x2: p2[0],
	                        y2: p2[1]
	                    },
	                    style: zrUtil.defaults({
	                        stroke: lineColors[colorIndex]
	                    }, lineStyle),
	                    silent: true
	                })));
	            }
	        },
	
	        /**
	         * @param {module:echarts/coord/cartesian/AxisModel} axisModel
	         * @param {module:echarts/coord/cartesian/GridModel} gridModel
	         * @param {number|Function} labelInterval
	         * @private
	         */
	        _splitArea: function (axisModel, gridModel, labelInterval) {
	            var axis = axisModel.axis;
	
	            var splitAreaModel = axisModel.getModel('splitArea');
	            var areaStyleModel = splitAreaModel.getModel('areaStyle');
	            var areaColors = areaStyleModel.get('color');
	
	            var gridRect = gridModel.coordinateSystem.getRect();
	
	            var ticksCoords = axis.getTicksCoords(
	                // splitAreaModel.get('alignWithLabel')
	            );
	            var ticks = axis.scale.getTicks();
	
	            var prevX = axis.toGlobalCoord(ticksCoords[0]);
	            var prevY = axis.toGlobalCoord(ticksCoords[0]);
	
	            var count = 0;
	
	            var areaInterval = getInterval(splitAreaModel, labelInterval);
	
	            var areaStyle = areaStyleModel.getAreaStyle();
	            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];
	
	            for (var i = 1; i < ticksCoords.length; i++) {
	                if (ifIgnoreOnTick(axis, i, areaInterval)) {
	                    continue;
	                }
	
	                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);
	
	                var x;
	                var y;
	                var width;
	                var height;
	                if (axis.isHorizontal()) {
	                    x = prevX;
	                    y = gridRect.y;
	                    width = tickCoord - x;
	                    height = gridRect.height;
	                }
	                else {
	                    x = gridRect.x;
	                    y = prevY;
	                    width = gridRect.width;
	                    height = tickCoord - y;
	                }
	
	                var colorIndex = (count++) % areaColors.length;
	                this._axisGroup.add(new graphic.Rect({
	                    anid: 'area_' + ticks[i],
	
	                    shape: {
	                        x: x,
	                        y: y,
	                        width: width,
	                        height: height
	                    },
	                    style: zrUtil.defaults({
	                        fill: areaColors[colorIndex]
	                    }, areaStyle),
	                    silent: true
	                }));
	
	                prevX = x + width;
	                prevY = y + height;
	            }
	        }
	    });
	
	    AxisView.extend({
	        type: 'xAxis'
	    });
	    AxisView.extend({
	        type: 'yAxis'
	    });
	
	    /**
	     * @inner
	     */
	    function layoutAxis(gridModel, axisModel) {
	        var grid = gridModel.coordinateSystem;
	        var axis = axisModel.axis;
	        var layout = {};
	
	        var rawAxisPosition = axis.position;
	        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;
	        var axisDim = axis.dim;
	
	        // [left, right, top, bottom]
	        var rect = grid.getRect();
	        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];
	
	        var axisOffset = axisModel.get('offset') || 0;
	
	        var posMap = {
	            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },
	            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }
	        };
	
	        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);
	        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);
	
	        function getZero(dim, val) {
	            var theAxis = grid.getAxis(dim);
	            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));
	        }
	
	        // Axis position
	        layout.position = [
	            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],
	            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]
	        ];
	
	        // Axis rotation
	        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);
	
	        // Tick and label direction, x y is axisDim
	        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};
	
	        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];
	        if (axis.onZero) {
	            layout.labelOffset = posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero;
	        }
	
	        if (axisModel.getModel('axisTick').get('inside')) {
	            layout.tickDirection = -layout.tickDirection;
	        }
	        if (axisModel.getModel('axisLabel').get('inside')) {
	            layout.labelDirection = -layout.labelDirection;
	        }
	
	        // Special label rotation
	        var labelRotation = axisModel.getModel('axisLabel').get('rotate');
	        layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;
	
	        // label interval when auto mode.
	        layout.labelInterval = axis.getLabelInterval();
	
	        // Over splitLine and splitArea
	        layout.z2 = 1;
	
	        return layout;
	    }


/***/ },
/* 648 */
/*!*****************************************************!*\
  !*** ./~/echarts/lib/component/axis/AxisBuilder.js ***!
  \*****************************************************/
/***/ function(module, exports, __webpack_require__) {

	
	
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	    var formatUtil = __webpack_require__(/*! ../../util/format */ 528);
	    var graphic = __webpack_require__(/*! ../../util/graphic */ 565);
	    var Model = __webpack_require__(/*! ../../model/Model */ 534);
	    var numberUtil = __webpack_require__(/*! ../../util/number */ 529);
	    var remRadian = numberUtil.remRadian;
	    var isRadianAroundZero = numberUtil.isRadianAroundZero;
	    var vec2 = __webpack_require__(/*! zrender/lib/core/vector */ 532);
	    var v2ApplyTransform = vec2.applyTransform;
	    var retrieve = zrUtil.retrieve;
	
	    var PI = Math.PI;
	
	    function makeAxisEventDataBase(axisModel) {
	        var eventData = {
	            componentType: axisModel.mainType
	        };
	        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;
	        return eventData;
	    }
	
	    /**
	     * A final axis is translated and rotated from a "standard axis".
	     * So opt.position and opt.rotation is required.
	     *
	     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],
	     * for example: (0, 0) ------------> (0, 50)
	     *
	     * nameDirection or tickDirection or labelDirection is 1 means tick
	     * or label is below the standard axis, whereas is -1 means above
	     * the standard axis. labelOffset means offset between label and axis,
	     * which is useful when 'onZero', where axisLabel is in the grid and
	     * label in outside grid.
	     *
	     * Tips: like always,
	     * positive rotation represents anticlockwise, and negative rotation
	     * represents clockwise.
	     * The direction of position coordinate is the same as the direction
	     * of screen coordinate.
	     *
	     * Do not need to consider axis 'inverse', which is auto processed by
	     * axis extent.
	     *
	     * @param {module:zrender/container/Group} group
	     * @param {Object} axisModel
	     * @param {Object} opt Standard axis parameters.
	     * @param {Array.<number>} opt.position [x, y]
	     * @param {number} opt.rotation by radian
	     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.
	     * @param {number} [opt.tickDirection=1] 1 or -1
	     * @param {number} [opt.labelDirection=1] 1 or -1
	     * @param {number} [opt.labelOffset=0] Usefull when onZero.
	     * @param {string} [opt.axisLabelShow] default get from axisModel.
	     * @param {string} [opt.axisName] default get from axisModel.
	     * @param {number} [opt.axisNameAvailableWidth]
	     * @param {number} [opt.labelRotation] by degree, default get from axisModel.
	     * @param {number} [opt.labelInterval] Default label interval when label
	     *                                     interval from model is null or 'auto'.
	     * @param {number} [opt.strokeContainThreshold] Default label interval when label
	     */
	    var AxisBuilder = function (axisModel, opt) {
	
	        /**
	         * @readOnly
	         */
	        this.opt = opt;
	
	        /**
	         * @readOnly
	         */
	        this.axisModel = axisModel;
	
	        // Default value
	        zrUtil.defaults(
	            opt,
	            {
	                labelOffset: 0,
	                nameDirection: 1,
	                tickDirection: 1,
	                labelDirection: 1,
	                silent: true
	            }
	        );
	
	        /**
	         * @readOnly
	         */
	        this.group = new graphic.Group();
	
	        // FIXME Not use a seperate text group?
	        var dumbGroup = new graphic.Group({
	            position: opt.position.slice(),
	            rotation: opt.rotation
	        });
	
	        // this.group.add(dumbGroup);
	        // this._dumbGroup = dumbGroup;
	
	        dumbGroup.updateTransform();
	        this._transform = dumbGroup.transform;
	
	        this._dumbGroup = dumbGroup;
	    };
	
	    AxisBuilder.prototype = {
	
	        constructor: AxisBuilder,
	
	        hasBuilder: function (name) {
	            return !!builders[name];
	        },
	
	        add: function (name) {
	            builders[name].call(this);
	        },
	
	        getGroup: function () {
	            return this.group;
	        }
	
	    };
	
	    var builders = {
	
	        /**
	         * @private
	         */
	        axisLine: function () {
	            var opt = this.opt;
	            var axisModel = this.axisModel;
	
	            if (!axisModel.get('axisLine.show')) {
	                return;
	            }
	
	            var extent = this.axisModel.axis.getExtent();
	
	            var matrix = this._transform;
	            var pt1 = [extent[0], 0];
	            var pt2 = [extent[1], 0];
	            if (matrix) {
	                v2ApplyTransform(pt1, pt1, matrix);
	                v2ApplyTransform(pt2, pt2, matrix);
	            }
	
	            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({
	
	                // Id for animation
	                anid: 'line',
	
	                shape: {
	                    x1: pt1[0],
	                    y1: pt1[1],
	                    x2: pt2[0],
	                    y2: pt2[1]
	                },
	                style: zrUtil.extend(
	                    {lineCap: 'round'},
	                    axisModel.getModel('axisLine.lineStyle').getLineStyle()
	                ),
	                strokeContainThreshold: opt.strokeContainThreshold || 5,
	                silent: true,
	                z2: 1
	            })));
	        },
	
	        /**
	         * @private
	         */
	        axisTick: function () {
	            var axisModel = this.axisModel;
	
	            if (!axisModel.get('axisTick.show')) {
	                return;
	            }
	
	            var axis = axisModel.axis;
	            var tickModel = axisModel.getModel('axisTick');
	            var opt = this.opt;
	
	            var lineStyleModel = tickModel.getModel('lineStyle');
	            var tickLen = tickModel.get('length');
	
	            var tickInterval = getInterval(tickModel, opt.labelInterval);
	            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));
	            var ticks = axis.scale.getTicks();
	
	            var pt1 = [];
	            var pt2 = [];
	            var matrix = this._transform;
	
	            for (var i = 0; i < ticksCoords.length; i++) {
	                // Only ordinal scale support tick interval
	                if (ifIgnoreOnTick(axis, i, tickInterval)) {
	                     continue;
	                }
	
	                var tickCoord = ticksCoords[i];
	
	                pt1[0] = tickCoord;
	                pt1[1] = 0;
	                pt2[0] = tickCoord;
	                pt2[1] = opt.tickDirection * tickLen;
	
	                if (matrix) {
	                    v2ApplyTransform(pt1, pt1, matrix);
	                    v2ApplyTransform(pt2, pt2, matrix);
	                }
	                // Tick line, Not use group transform to have better line draw
	                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({
	
	                    // Id for animation
	                    anid: 'tick_' + ticks[i],
	
	                    shape: {
	                        x1: pt1[0],
	                        y1: pt1[1],
	                        x2: pt2[0],
	                        y2: pt2[1]
	                    },
	                    style: zrUtil.defaults(
	                        lineStyleModel.getLineStyle(),
	                        {
	                            stroke: axisModel.get('axisLine.lineStyle.color')
	                        }
	                    ),
	                    z2: 2,
	                    silent: true
	                })));
	            }
	        },
	
	        /**
	         * @param {module:echarts/coord/cartesian/AxisModel} axisModel
	         * @param {module:echarts/coord/cartesian/GridModel} gridModel
	         * @private
	         */
	        axisLabel: function () {
	            var opt = this.opt;
	            var axisModel = this.axisModel;
	            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));
	
	            if (!show) {
	                return;
	            }
	
	            var axis = axisModel.axis;
	            var labelModel = axisModel.getModel('axisLabel');
	            var textStyleModel = labelModel.getModel('textStyle');
	            var labelMargin = labelModel.get('margin');
	            var ticks = axis.scale.getTicks();
	            var labels = axisModel.getFormattedLabels();
	
	            // Special label rotate.
	            var labelRotation = retrieve(opt.labelRotation, labelModel.get('rotate')) || 0;
	            // To radian.
	            labelRotation = labelRotation * PI / 180;
	
	            var labelLayout = innerTextLayout(opt, labelRotation, opt.labelDirection);
	            var categoryData = axisModel.get('data');
	
	            var textEls = [];
	            var silent = isSilent(axisModel);
	            var triggerEvent = axisModel.get('triggerEvent');
	
	            for (var i = 0; i < ticks.length; i++) {
	                if (ifIgnoreOnTick(axis, i, opt.labelInterval)) {
	                     continue;
	                }
	
	                var itemTextStyleModel = textStyleModel;
	                if (categoryData && categoryData[i] && categoryData[i].textStyle) {
	                    itemTextStyleModel = new Model(
	                        categoryData[i].textStyle, textStyleModel, axisModel.ecModel
	                    );
	                }
	                var textColor = itemTextStyleModel.getTextColor()
	                    || axisModel.get('axisLine.lineStyle.color');
	
	                var tickCoord = axis.dataToCoord(ticks[i]);
	                var pos = [
	                    tickCoord,
	                    opt.labelOffset + opt.labelDirection * labelMargin
	                ];
	                var labelBeforeFormat = axis.scale.getLabel(ticks[i]);
	
	                var textEl = new graphic.Text({
	
	                    // Id for animation
	                    anid: 'label_' + ticks[i],
	
	                    style: {
	                        text: labels[i],
	                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,
	                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.verticalAlign,
	                        textFont: itemTextStyleModel.getFont(),
	                        fill: typeof textColor === 'function' ? textColor(labelBeforeFormat) : textColor
	                    },
	                    position: pos,
	                    rotation: labelLayout.rotation,
	                    silent: silent,
	                    z2: 10
	                });
	
	                // Pack data for mouse event
	                if (triggerEvent) {
	                    textEl.eventData = makeAxisEventDataBase(axisModel);
	                    textEl.eventData.targetType = 'axisLabel';
	                    textEl.eventData.value = labelBeforeFormat;
	                }
	
	
	                // FIXME
	                this._dumbGroup.add(textEl);
	                textEl.updateTransform();
	
	                textEls.push(textEl);
	                this.group.add(textEl);
	
	                textEl.decomposeTransform();
	            }
	
	            function isTwoLabelOverlapped(current, next) {
	                var firstRect = current && current.getBoundingRect().clone();
	                var nextRect = next && next.getBoundingRect().clone();
	                if (firstRect && nextRect) {
	                    firstRect.applyTransform(current.getLocalTransform());
	                    nextRect.applyTransform(next.getLocalTransform());
	                    return firstRect.intersect(nextRect);
	                }
	            }
	            if (axis.type !== 'category') {
	                // If min or max are user set, we need to check
	                // If the tick on min(max) are overlap on their neighbour tick
	                // If they are overlapped, we need to hide the min(max) tick label
	                if (axisModel.getMin ? axisModel.getMin() : axisModel.get('min')) {
	                    var firstLabel = textEls[0];
	                    var nextLabel = textEls[1];
	                    if (isTwoLabelOverlapped(firstLabel, nextLabel)) {
	                        firstLabel.ignore = true;
	                    }
	                }
	                if (axisModel.getMax ? axisModel.getMax() : axisModel.get('max')) {
	                    var lastLabel = textEls[textEls.length - 1];
	                    var prevLabel = textEls[textEls.length - 2];
	                    if (isTwoLabelOverlapped(prevLabel, lastLabel)) {
	                        lastLabel.ignore = true;
	                    }
	                }
	            }
	        },
	
	        /**
	         * @private
	         */
	        axisName: function () {
	            var opt = this.opt;
	            var axisModel = this.axisModel;
	            var name = retrieve(opt.axisName, axisModel.get('name'));
	
	            if (!name) {
	                return;
	            }
	
	            var nameLocation = axisModel.get('nameLocation');
	            var nameDirection = opt.nameDirection;
	            var textStyleModel = axisModel.getModel('nameTextStyle');
	            var gap = axisModel.get('nameGap') || 0;
	
	            var extent = this.axisModel.axis.getExtent();
	            var gapSignal = extent[0] > extent[1] ? -1 : 1;
	            var pos = [
	                nameLocation === 'start'
	                    ? extent[0] - gapSignal * gap
	                    : nameLocation === 'end'
	                    ? extent[1] + gapSignal * gap
	                    : (extent[0] + extent[1]) / 2, // 'middle'
	                // Reuse labelOffset.
	                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0
	            ];
	
	            var labelLayout;
	
	            var nameRotation = axisModel.get('nameRotate');
	            if (nameRotation != null) {
	                nameRotation = nameRotation * PI / 180; // To radian.
	            }
	
	            var axisNameAvailableWidth;
	
	            if (nameLocation === 'middle') {
	                labelLayout = innerTextLayout(
	                    opt,
	                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.
	                    nameDirection
	                );
	            }
	            else {
	                labelLayout = endTextLayout(
	                    opt, nameLocation, nameRotation || 0, extent
	                );
	
	                axisNameAvailableWidth = opt.axisNameAvailableWidth;
	                if (axisNameAvailableWidth != null) {
	                    axisNameAvailableWidth = Math.abs(
	                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)
	                    );
	                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);
	                }
	            }
	
	            var textFont = textStyleModel.getFont();
	
	            var truncateOpt = axisModel.get('nameTruncate', true) || {};
	            var ellipsis = truncateOpt.ellipsis;
	            var maxWidth = retrieve(truncateOpt.maxWidth, axisNameAvailableWidth);
	            var truncatedText = (ellipsis != null && maxWidth != null)
	                ? formatUtil.truncateText(
	                    name, maxWidth, textFont, ellipsis,
	                    {minChar: 2, placeholder: truncateOpt.placeholder}
	                )
	                : name;
	
	            var tooltipOpt = axisModel.get('tooltip', true);
	
	            var mainType = axisModel.mainType;
	            var formatterParams = {
	                componentType: mainType,
	                name: name,
	                $vars: ['name']
	            };
	            formatterParams[mainType + 'Index'] = axisModel.componentIndex;
	
	            var textEl = new graphic.Text({
	
	                // Id for animation
	                anid: 'name',
	
	                __fullText: name,
	                __truncatedText: truncatedText,
	
	                style: {
	                    text: truncatedText,
	                    textFont: textFont,
	                    fill: textStyleModel.getTextColor()
	                        || axisModel.get('axisLine.lineStyle.color'),
	                    textAlign: labelLayout.textAlign,
	                    textVerticalAlign: labelLayout.verticalAlign
	                },
	                position: pos,
	                rotation: labelLayout.rotation,
	                silent: isSilent(axisModel),
	                z2: 1,
	                tooltip: (tooltipOpt && tooltipOpt.show)
	                    ? zrUtil.extend({
	                        content: name,
	                        formatter: function () {
	                            return name;
	                        },
	                        formatterParams: formatterParams
	                    }, tooltipOpt)
	                    : null
	            });
	
	            if (axisModel.get('triggerEvent')) {
	                textEl.eventData = makeAxisEventDataBase(axisModel);
	                textEl.eventData.targetType = 'axisName';
	                textEl.eventData.name = name;
	            }
	
	            // FIXME
	            this._dumbGroup.add(textEl);
	            textEl.updateTransform();
	
	            this.group.add(textEl);
	
	            textEl.decomposeTransform();
	        }
	
	    };
	
	    /**
	     * @inner
	     */
	    function innerTextLayout(opt, textRotation, direction) {
	        var rotationDiff = remRadian(textRotation - opt.rotation);
	        var textAlign;
	        var verticalAlign;
	
	        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.
	            verticalAlign = direction > 0 ? 'top' : 'bottom';
	            textAlign = 'center';
	        }
	        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.
	            verticalAlign = direction > 0 ? 'bottom' : 'top';
	            textAlign = 'center';
	        }
	        else {
	            verticalAlign = 'middle';
	
	            if (rotationDiff > 0 && rotationDiff < PI) {
	                textAlign = direction > 0 ? 'right' : 'left';
	            }
	            else {
	                textAlign = direction > 0 ? 'left' : 'right';
	            }
	        }
	
	        return {
	            rotation: rotationDiff,
	            textAlign: textAlign,
	            verticalAlign: verticalAlign
	        };
	    }
	
	    /**
	     * @inner
	     */
	    function endTextLayout(opt, textPosition, textRotate, extent) {
	        var rotationDiff = remRadian(textRotate - opt.rotation);
	        var textAlign;
	        var verticalAlign;
	        var inverse = extent[0] > extent[1];
	        var onLeft = (textPosition === 'start' && !inverse)
	            || (textPosition !== 'start' && inverse);
	
	        if (isRadianAroundZero(rotationDiff - PI / 2)) {
	            verticalAlign = onLeft ? 'bottom' : 'top';
	            textAlign = 'center';
	        }
	        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {
	            verticalAlign = onLeft ? 'top' : 'bottom';
	            textAlign = 'center';
	        }
	        else {
	            verticalAlign = 'middle';
	            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {
	                textAlign = onLeft ? 'left' : 'right';
	            }
	            else {
	                textAlign = onLeft ? 'right' : 'left';
	            }
	        }
	
	        return {
	            rotation: rotationDiff,
	            textAlign: textAlign,
	            verticalAlign: verticalAlign
	        };
	    }
	
	    /**
	     * @inner
	     */
	    function isSilent(axisModel) {
	        var tooltipOpt = axisModel.get('tooltip');
	        return axisModel.get('silent')
	            // Consider mouse cursor, add these restrictions.
	            || !(
	                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)
	            );
	    }
	
	    /**
	     * @static
	     */
	    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {
	        var rawTick;
	        var scale = axis.scale;
	        return scale.type === 'ordinal'
	            && (
	                typeof interval === 'function'
	                    ? (
	                        rawTick = scale.getTicks()[i],
	                        !interval(rawTick, scale.getLabel(rawTick))
	                    )
	                    : i % (interval + 1)
	            );
	    };
	
	    /**
	     * @static
	     */
	    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {
	        var interval = model.get('interval');
	        if (interval == null || interval == 'auto') {
	            interval = labelInterval;
	        }
	        return interval;
	    };
	
	    module.exports = AxisBuilder;
	


/***/ },
/* 649 */
/*!******************************************!*\
  !*** ./~/echarts/lib/component/title.js ***!
  \******************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	
	    var echarts = __webpack_require__(/*! ../echarts */ 523);
	    var graphic = __webpack_require__(/*! ../util/graphic */ 565);
	    var layout = __webpack_require__(/*! ../util/layout */ 543);
	
	    // Model
	    echarts.extendComponentModel({
	
	        type: 'title',
	
	        layoutMode: {type: 'box', ignoreSize: true},
	
	        defaultOption: {
	            // 一级层叠
	            zlevel: 0,
	            // 二级层叠
	            z: 6,
	            show: true,
	
	            text: '',
	            // 超链接跳转
	            // link: null,
	            // 仅支持self | blank
	            target: 'blank',
	            subtext: '',
	
	            // 超链接跳转
	            // sublink: null,
	            // 仅支持self | blank
	            subtarget: 'blank',
	
	            // 'center' ¦ 'left' ¦ 'right'
	            // ¦ {number}（x坐标，单位px）
	            left: 0,
	            // 'top' ¦ 'bottom' ¦ 'center'
	            // ¦ {number}（y坐标，单位px）
	            top: 0,
	
	            // 水平对齐
	            // 'auto' | 'left' | 'right' | 'center'
	            // 默认根据 left 的位置判断是左对齐还是右对齐
	            // textAlign: null
	            //
	            // 垂直对齐
	            // 'auto' | 'top' | 'bottom' | 'middle'
	            // 默认根据 top 位置判断是上对齐还是下对齐
	            // textBaseline: null
	
	            backgroundColor: 'rgba(0,0,0,0)',
	
	            // 标题边框颜色
	            borderColor: '#ccc',
	
	            // 标题边框线宽，单位px，默认为0（无边框）
	            borderWidth: 0,
	
	            // 标题内边距，单位px，默认各方向内边距为5，
	            // 接受数组分别设定上右下左边距，同css
	            padding: 5,
	
	            // 主副标题纵向间隔，单位px，默认为10，
	            itemGap: 10,
	            textStyle: {
	                fontSize: 18,
	                fontWeight: 'bolder',
	                color: '#333'
	            },
	            subtextStyle: {
	                color: '#aaa'
	            }
	        }
	    });
	
	    // View
	    echarts.extendComponentView({
	
	        type: 'title',
	
	        render: function (titleModel, ecModel, api) {
	            this.group.removeAll();
	
	            if (!titleModel.get('show')) {
	                return;
	            }
	
	            var group = this.group;
	
	            var textStyleModel = titleModel.getModel('textStyle');
	            var subtextStyleModel = titleModel.getModel('subtextStyle');
	
	            var textAlign = titleModel.get('textAlign');
	            var textBaseline = titleModel.get('textBaseline');
	
	            var textEl = new graphic.Text({
	                style: {
	                    text: titleModel.get('text'),
	                    textFont: textStyleModel.getFont(),
	                    fill: textStyleModel.getTextColor()
	                },
	                z2: 10
	            });
	
	            var textRect = textEl.getBoundingRect();
	
	            var subText = titleModel.get('subtext');
	            var subTextEl = new graphic.Text({
	                style: {
	                    text: subText,
	                    textFont: subtextStyleModel.getFont(),
	                    fill: subtextStyleModel.getTextColor(),
	                    y: textRect.height + titleModel.get('itemGap'),
	                    textBaseline: 'top'
	                },
	                z2: 10
	            });
	
	            var link = titleModel.get('link');
	            var sublink = titleModel.get('sublink');
	
	            textEl.silent = !link;
	            subTextEl.silent = !sublink;
	
	            if (link) {
	                textEl.on('click', function () {
	                    window.open(link, '_' + titleModel.get('target'));
	                });
	            }
	            if (sublink) {
	                subTextEl.on('click', function () {
	                    window.open(sublink, '_' + titleModel.get('subtarget'));
	                });
	            }
	
	            group.add(textEl);
	            subText && group.add(subTextEl);
	            // If no subText, but add subTextEl, there will be an empty line.
	
	            var groupRect = group.getBoundingRect();
	            var layoutOption = titleModel.getBoxLayoutParams();
	            layoutOption.width = groupRect.width;
	            layoutOption.height = groupRect.height;
	            var layoutRect = layout.getLayoutRect(
	                layoutOption, {
	                    width: api.getWidth(),
	                    height: api.getHeight()
	                }, titleModel.get('padding')
	            );
	            // Adjust text align based on position
	            if (!textAlign) {
	                // Align left if title is on the left. center and right is same
	                textAlign = titleModel.get('left') || titleModel.get('right');
	                if (textAlign === 'middle') {
	                    textAlign = 'center';
	                }
	                // Adjust layout by text align
	                if (textAlign === 'right') {
	                    layoutRect.x += layoutRect.width;
	                }
	                else if (textAlign === 'center') {
	                    layoutRect.x += layoutRect.width / 2;
	                }
	            }
	            if (!textBaseline) {
	                textBaseline = titleModel.get('top') || titleModel.get('bottom');
	                if (textBaseline === 'center') {
	                    textBaseline = 'middle';
	                }
	                if (textBaseline === 'bottom') {
	                    layoutRect.y += layoutRect.height;
	                }
	                else if (textBaseline === 'middle') {
	                    layoutRect.y += layoutRect.height / 2;
	                }
	
	                textBaseline = textBaseline || 'top';
	            }
	
	            group.attr('position', [layoutRect.x, layoutRect.y]);
	            var alignStyle = {
	                textAlign: textAlign,
	                textVerticalAlign: textBaseline
	            };
	            textEl.setStyle(alignStyle);
	            subTextEl.setStyle(alignStyle);
	
	            // Render background
	            // Get groupRect again because textAlign has been changed
	            groupRect = group.getBoundingRect();
	            var padding = layoutRect.margin;
	            var style = titleModel.getItemStyle(['color', 'opacity']);
	            style.fill = titleModel.get('backgroundColor');
	            var rect = new graphic.Rect({
	                shape: {
	                    x: groupRect.x - padding[3],
	                    y: groupRect.y - padding[0],
	                    width: groupRect.width + padding[1] + padding[3],
	                    height: groupRect.height + padding[0] + padding[2]
	                },
	                style: style,
	                silent: true
	            });
	            graphic.subPixelOptimizeRect(rect);
	
	            group.add(rect);
	        }
	    });


/***/ },
/* 650 */
/*!*******************************************!*\
  !*** ./~/echarts/lib/component/legend.js ***!
  \*******************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Legend component entry file8
	 */
	
	
	    __webpack_require__(/*! ./legend/LegendModel */ 651);
	    __webpack_require__(/*! ./legend/legendAction */ 652);
	    __webpack_require__(/*! ./legend/LegendView */ 653);
	
	    var echarts = __webpack_require__(/*! ../echarts */ 523);
	    // Series Filter
	    echarts.registerProcessor(__webpack_require__(/*! ./legend/legendFilter */ 656));


/***/ },
/* 651 */
/*!*******************************************************!*\
  !*** ./~/echarts/lib/component/legend/LegendModel.js ***!
  \*******************************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	    var Model = __webpack_require__(/*! ../../model/Model */ 534);
	
	    var LegendModel = __webpack_require__(/*! ../../echarts */ 523).extendComponentModel({
	
	        type: 'legend',
	
	        dependencies: ['series'],
	
	        layoutMode: {
	            type: 'box',
	            ignoreSize: true
	        },
	
	        init: function (option, parentModel, ecModel) {
	            this.mergeDefaultAndTheme(option, ecModel);
	
	            option.selected = option.selected || {};
	        },
	
	        mergeOption: function (option) {
	            LegendModel.superCall(this, 'mergeOption', option);
	        },
	
	        optionUpdated: function () {
	            this._updateData(this.ecModel);
	
	            var legendData = this._data;
	
	            // If selectedMode is single, try to select one
	            if (legendData[0] && this.get('selectedMode') === 'single') {
	                var hasSelected = false;
	                // If has any selected in option.selected
	                for (var i = 0; i < legendData.length; i++) {
	                    var name = legendData[i].get('name');
	                    if (this.isSelected(name)) {
	                        // Force to unselect others
	                        this.select(name);
	                        hasSelected = true;
	                        break;
	                    }
	                }
	                // Try select the first if selectedMode is single
	                !hasSelected && this.select(legendData[0].get('name'));
	            }
	        },
	
	        _updateData: function (ecModel) {
	            var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {
	                // Can be string or number
	                if (typeof dataItem === 'string' || typeof dataItem === 'number') {
	                    dataItem = {
	                        name: dataItem
	                    };
	                }
	                return new Model(dataItem, this, this.ecModel);
	            }, this);
	            this._data = legendData;
	
	            var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {
	                return series.name;
	            });
	            ecModel.eachSeries(function (seriesModel) {
	                if (seriesModel.legendDataProvider) {
	                    var data = seriesModel.legendDataProvider();
	                    availableNames = availableNames.concat(data.mapArray(data.getName));
	                }
	            });
	            /**
	             * @type {Array.<string>}
	             * @private
	             */
	            this._availableNames = availableNames;
	        },
	
	        /**
	         * @return {Array.<module:echarts/model/Model>}
	         */
	        getData: function () {
	            return this._data;
	        },
	
	        /**
	         * @param {string} name
	         */
	        select: function (name) {
	            var selected = this.option.selected;
	            var selectedMode = this.get('selectedMode');
	            if (selectedMode === 'single') {
	                var data = this._data;
	                zrUtil.each(data, function (dataItem) {
	                    selected[dataItem.get('name')] = false;
	                });
	            }
	            selected[name] = true;
	        },
	
	        /**
	         * @param {string} name
	         */
	        unSelect: function (name) {
	            if (this.get('selectedMode') !== 'single') {
	                this.option.selected[name] = false;
	            }
	        },
	
	        /**
	         * @param {string} name
	         */
	        toggleSelected: function (name) {
	            var selected = this.option.selected;
	            // Default is true
	            if (!(name in selected)) {
	                selected[name] = true;
	            }
	            this[selected[name] ? 'unSelect' : 'select'](name);
	        },
	
	        /**
	         * @param {string} name
	         */
	        isSelected: function (name) {
	            var selected = this.option.selected;
	            return !((name in selected) && !selected[name])
	                && zrUtil.indexOf(this._availableNames, name) >= 0;
	        },
	
	        defaultOption: {
	            // 一级层叠
	            zlevel: 0,
	            // 二级层叠
	            z: 4,
	            show: true,
	
	            // 布局方式，默认为水平布局，可选为：
	            // 'horizontal' | 'vertical'
	            orient: 'horizontal',
	
	            left: 'center',
	            // right: 'center',
	
	            top: 'top',
	            // bottom: 'top',
	
	            // 水平对齐
	            // 'auto' | 'left' | 'right'
	            // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐
	            align: 'auto',
	
	            backgroundColor: 'rgba(0,0,0,0)',
	            // 图例边框颜色
	            borderColor: '#ccc',
	            // 图例边框线宽，单位px，默认为0（无边框）
	            borderWidth: 0,
	            // 图例内边距，单位px，默认各方向内边距为5，
	            // 接受数组分别设定上右下左边距，同css
	            padding: 5,
	            // 各个item之间的间隔，单位px，默认为10，
	            // 横向布局时为水平间隔，纵向布局时为纵向间隔
	            itemGap: 10,
	            // 图例图形宽度
	            itemWidth: 25,
	            // 图例图形高度
	            itemHeight: 14,
	
	            // 图例关闭时候的颜色
	            inactiveColor: '#ccc',
	
	            textStyle: {
	                // 图例文字颜色
	                color: '#333'
	            },
	            // formatter: '',
	            // 选择模式，默认开启图例开关
	            selectedMode: true,
	            // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入
	            // selected: null,
	            // 图例内容（详见legend.data，数组中每一项代表一个item
	            // data: [],
	
	            // Tooltip 相关配置
	            tooltip: {
	                show: false
	            }
	        }
	    });
	
	    module.exports = LegendModel;


/***/ },
/* 652 */
/*!********************************************************!*\
  !*** ./~/echarts/lib/component/legend/legendAction.js ***!
  \********************************************************/
/***/ function(module, exports, __webpack_require__) {

	/**
	 * @file Legend action
	 */
	
	
	    var echarts = __webpack_require__(/*! ../../echarts */ 523);
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	
	    function legendSelectActionHandler(methodName, payload, ecModel) {
	        var selectedMap = {};
	        var isToggleSelect = methodName === 'toggleSelected';
	        var isSelected;
	        // Update all legend components
	        ecModel.eachComponent('legend', function (legendModel) {
	            if (isToggleSelect && isSelected != null) {
	                // Force other legend has same selected status
	                // Or the first is toggled to true and other are toggled to false
	                // In the case one legend has some item unSelected in option. And if other legend
	                // doesn't has the item, they will assume it is selected.
	                legendModel[isSelected ? 'select' : 'unSelect'](payload.name);
	            }
	            else {
	                legendModel[methodName](payload.name);
	                isSelected = legendModel.isSelected(payload.name);
	            }
	            var legendData = legendModel.getData();
	            zrUtil.each(legendData, function (model) {
	                var name = model.get('name');
	                // Wrap element
	                if (name === '\n' || name === '') {
	                    return;
	                }
	                var isItemSelected = legendModel.isSelected(name);
	                if (name in selectedMap) {
	                    // Unselected if any legend is unselected
	                    selectedMap[name] = selectedMap[name] && isItemSelected;
	                }
	                else {
	                    selectedMap[name] = isItemSelected;
	                }
	            });
	        });
	        // Return the event explicitly
	        return {
	            name: payload.name,
	            selected: selectedMap
	        };
	    }
	    /**
	     * @event legendToggleSelect
	     * @type {Object}
	     * @property {string} type 'legendToggleSelect'
	     * @property {string} [from]
	     * @property {string} name Series name or data item name
	     */
	    echarts.registerAction(
	        'legendToggleSelect', 'legendselectchanged',
	        zrUtil.curry(legendSelectActionHandler, 'toggleSelected')
	    );
	
	    /**
	     * @event legendSelect
	     * @type {Object}
	     * @property {string} type 'legendSelect'
	     * @property {string} name Series name or data item name
	     */
	    echarts.registerAction(
	        'legendSelect', 'legendselected',
	        zrUtil.curry(legendSelectActionHandler, 'select')
	    );
	
	    /**
	     * @event legendUnSelect
	     * @type {Object}
	     * @property {string} type 'legendUnSelect'
	     * @property {string} name Series name or data item name
	     */
	    echarts.registerAction(
	        'legendUnSelect', 'legendunselected',
	        zrUtil.curry(legendSelectActionHandler, 'unSelect')
	    );


/***/ },
/* 653 */
/*!******************************************************!*\
  !*** ./~/echarts/lib/component/legend/LegendView.js ***!
  \******************************************************/
/***/ function(module, exports, __webpack_require__) {

	
	
	    var zrUtil = __webpack_require__(/*! zrender/lib/core/util */ 526);
	    var symbolCreator = __webpack_require__(/*! ../../util/symbol */ 654);
	    var graphic = __webpack_require__(/*! ../../util/graphic */ 565);
	    var listComponentHelper = __webpack_require__(/*! ../helper/listComponent */ 655);
	
	    var curry = zrUtil.curry;
	
	    function dispatchSelectAction(name, api) {
	        api.dispatchAction({
	            type: 'legendToggleSelect',
	            name: name
	        });
	    }
	
	    function dispatchHighlightAction(seriesModel, dataName, api) {
	        // If element hover will move to a hoverLayer.
	        var el = api.getZr().storage.getDisplayList()[0];
	        if (!(el && el.useHoverLayer)) {
	            seriesModel.get('legendHoverLink') && api.dispatchAction({
	                type: 'highlight',
	                seriesName: seriesModel.name,
	                name: dataName
	            });
	        }
	    }
	
	    function dispatchDownplayAction(seriesModel, dataName, api) {
	        // If element hover will move to a hoverLayer.
	        var el = api.getZr().storage.getDisplayList()[0];
	        if (!(el && el.useHoverLayer)) {
	            seriesModel.get('legendHoverLink') && api.dispatchAction({
	                type: 'downplay',
	                seriesName: seriesModel.name,
	                name: dataName
	            });
	        }
	    }
	
	    module.exports = __webpack_require__(/*! ../../echarts */ 523).extendComponentView({
	
	        type: 'legend',
	
	        init: function () {
	            this._symbolTypeStore = {};
	        },
	
	        render: function (legendModel, ecModel, api) {
	            var group = this.group;
	            group.removeAll();
	
	            if (!legendModel.get('show')) {
	                return;
	            }
	
	            var selectMode = legendModel.get('selectedMode');
	            var itemAlign = legendModel.get('align');
	
	            if (itemAlign === 'auto') {
	                itemAlign = (legendModel.get('left') === 'right'
	                    && legendModel.get('orient') === 'vertical')
	                    ? 'right' : 'left';
	            }
	
	            var legendDrawedMap = {};
	
	            zrUtil.each(legendModel.getData(), function (itemModel) {
	                var name = itemModel.get('name');
	
	                // Use empty string or \n as a newline string
	                if (name === '' || name === '\n') {
	                    group.add(new graphic.Group({
	                        newline: true
	                    }));
	                    return;
	                }
	
	                var seriesModel = ecModel.getSeriesByName(name)[0];
	
	                if (legendDrawedMap[name]) {
	                    // Have been drawed
	                    return;
	                }
	
	                // Series legend
	                if (seriesModel) {
	                    var data = seriesModel.getData();
	                    var color = data.getVisual('color');
	
	                    // If color is a callback function
	                    if (typeof color === 'function') {
	                        // Use the first data
	                        color = color(seriesModel.getDataParams(0));
	                    }
	
	                    // Using rect symbol defaultly
	                    var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';
	                    var symbolType = data.getVisual('symbol');
	
	                    var itemGroup = this._createItem(
	                        name, itemModel, legendModel,
	                        legendSymbolType, symbolType,
	                        itemAlign, color,
	                        selectMode
	                    );
	
	                    itemGroup.on('click', curry(dispatchSelectAction, name, api))
	                        .on('mouseover', curry(dispatchHighlightAction, seriesModel, '', api))
	                        .on('mouseout', curry(dispatchDownplayAction, seriesModel, '', api));
	
	                    legendDrawedMap[name] = true;
	                }
	                else {
	                    // Data legend of pie, funnel
	                    ecModel.eachRawSeries(function (seriesModel) {
	                        // In case multiple series has same data name
	                        if (legendDrawedMap[name]) {
	                            return;
	                        }
	                        if (seriesModel.legendDataProvider) {
	                            var data = seriesModel.legendDataProvider();
	                            var idx = data.indexOfName(name);
	                            if (idx < 0) {
	                                return;
	                            }
	
	                            var color = data.getItemVisual(idx, 'color');
	
	                            var legendSymbolType = 'roundRect';
	
	                            var itemGroup = this._createItem(
	                                name, itemModel, legendModel,
	                                legendSymbolType, null,
	                                itemAlign, color,
	                                selectMode
	                            );
	
	                            itemGroup.on('click', curry(dispatchSelectAction, name, api))
	                                // FIXME Should not specify the series name
	                                .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api))
	                                .on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));
	
	                            legendDrawedMap[name] = true;
	                        }
	                    }, this);
	                }
	
	                if (__DEV__) {
	                    if (!legendDrawedMap[name]) {
	                        console.warn(name + ' series not exists. Legend data should be same with series name or data name.');
	                    }
	                }
	            }, this);
	
	            listComponentHelper.layout(group, legendModel, api);
	            // Render background after group is layout
	            // FIXME
	            listComponentHelper.addBackground(group, legendModel);
	        },
	
	        _createItem: function (
	            name, itemModel, legendModel,
	            legendSymbolType, symbolType,
	            itemAlign, color, selectMode
	        ) {
	            var itemWidth = legendModel.get('itemWidth');
	            var itemHeight = legendModel.get('itemHeight');
	            var inactiveColor = legendModel.get('inactiveColor');
	
	            var isSelected = legendModel.isSelected(name);
	            var itemGroup = new graphic.Group();
	
	            var textStyleModel = itemModel.getModel('textStyle');
	
	            var itemIcon = itemModel.get('icon');
	
	            var tooltipModel = itemModel.getModel('tooltip');
	
	            // Use user given icon first
	            legendSymbolType = itemIcon || legendSymbolType;
	            itemGroup.add(symbolCreator.createSymbol(
	                legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor
	            ));
	
	            // Compose symbols
	            // PENDING
	            if (!itemIcon && symbolType
	                // At least show one symbol, can't be all none
	                && ((symbolType !== legendSymbolType) || symbolType == 'none')
	            ) {
	                var size = itemHeight * 0.8;
	                if (symbolType === 'none') {
	                    symbolType = 'circle';
	                }
	                // Put symbol in the center
	                itemGroup.add(symbolCreator.createSymbol(
	                    symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size,
	                    isSelected ? color : inactiveColor
	                ));
	            }
	
	            // Text
	            var textX = itemAlign === 'left' ? itemWidth + 5 : -5;
	            var textAlign = itemAlign;
	
	            var formatter = legendModel.get('formatter');
	            var content = name;
	            if (typeof formatter === 'string' && formatter) {
	                content = formatter.replace('{name}', name);
	            }
	            else if (typeof formatter === 'function') {
	                content = formatter(name);
	            }
	
	            var text = new graphic.Text({
	                style: {
	                    text: content,
	                    x: textX,
	                    y: itemHeight / 2,
	                    fill: isSelected ? textStyleModel.getTextColor() : inactiveColor,
	                    textFont: textStyleModel.getFont(),
	                    textAlign: textAlign,
	                    textVerticalAlign: 'middle'
	                }
	            });
	            itemGroup.add(text);
	
	            // Add a invisible rect to increase the area of mouse hover
	            var hitRect = new graphic.Rect({
	                shape: itemGroup.getBoundingRect(),
	                invisible: true,
	                tooltip: tooltipModel.get('show') ? zrUtil.extend({
	                    content: name,
	                    // Defaul formatter
	                    formatter: function () {
	                        return name;
	                    },
	                    formatterParams: {
	                        componentType: 'legend',
	                        legendIndex: legendModel.componentIndex,
	                        name: name,
	                        $vars: ['name']
	                    }
	                }, tooltipModel.option) : null
	            });
	            itemGroup.add(hitRect);
	
	            itemGroup.eachChild(function (child) {
	                child.silent = true;
	            });
	
	            hitRect.silent = !selectMode;
	
	
	
	            this.group.add(itemGroup);
	
	            graphic.setHoverStyle(itemGroup);
	
	            return itemGroup;
	        }
	    });


/***/ },
/* 654 */
/*!**************************************!*\
  !*** ./~/echarts/lib/util/symbol.js ***!
  \**************************************/
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// Symbol factory
	
	
	    var graphic = __webpack_require__(/*! ./graphic */ 565);
	    var BoundingRect = __webpack_require__(/*! zrender/lib/core/BoundingRect */ 531);
	
	    /**
	     * Triangle shape
	     * @inner
	     */
	    var Triangle = graphic.extendShape({
	        type: 'triangle',
	        shape: {
	            cx: 0,
	            cy: 0,
	            width: 0,
	            height: 0
	        },
	        buildPath: function (path, shape) {
	            var cx = shape.cx;
	            var cy = shape.cy;
	            var width = shape.width / 2;
	            var height = shape.height / 2;
	            path.moveTo(cx, cy - height);
	            path.lineTo(cx + width, cy + height);
	            path.lineTo(cx - width, cy + height);
	            path.closePath();
	        }
	    });
	    /**
	     * Diamond shape
	     * @inner
	     */
	    var Diamond = graphic.extendShape({
	        type: 'diamond',
	        shape: {
	            cx: 0,
	            cy: 0,
	            width: 0,
	            height: 0
	        },
	        buildPath: function (path, shape) {
	            var cx = shape.cx;
	            var cy = shape.cy;
	            var width = shape.width / 2;
	            var height = shape.height / 2;
	            path.moveTo(cx, cy - height);
	            path.lineTo(cx + width, cy);
	            path.lineTo(cx, cy + height);
	            path.lineTo(cx - width, cy);
	            path.closePath();
	        }
	    });
	
	    /**
	     * Pin shape
	     * @inner
	     */
	    var Pin = graphic.extendShape({
	        type: 'pin',
	        shape: {
	            // x, y on the cusp
	            x: 0,
	            y: 0,
	            width: 0,
	            height: 0
	        },
	
	        buildPath: function (path, shape) {
	            var x = shape.x;
	            var y = shape.y;
	            var w = shape.width / 5 * 3;
	            // Height must be larger than width
	            var h = Math.max(w, shape.height);
	            var r = w / 2;
	
	            // Dist on y with tangent point and circle center
	            var dy = r * r / (h - r);
	            var cy = y - h + r + dy;
	            var angle = Math.asin(dy / r);
	            // Dist on x with tangent point and circle center
	            var dx = Math.cos(angle) * r;
	
	            var tanX = Math.sin(angle);
	            var tanY = Math.cos(angle);
	
	            path.arc(
	                x, cy, r,
	                Math.PI - angle,
	                Math.PI * 2 + angle
	            );
	
	            var cpLen = r * 0.6;
	            var cpLen2 = r * 0.7;
	            path.bezierCurveTo(
	                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,
	                x, y - cpLen2,
	                x, y
	            );
	            path.bezierCurveTo(
	                x, y - cpLen2,
	                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,
	                x - dx, cy + dy
	            );
	            path.closePath();
	        }
	    });
	
	    /**
	     * Arrow shape
	     * @inner
	     */
	    var Arrow = graphic.extendShape({
	
	        type: 'arrow',
	
	        shape: {
	            x: 0,
	            y: 0,
	            width: 0,
	            height: 0
	        },
	
	        buildPath: function (ctx, shape) {
	            var height = shape.height;
	            var width = shape.width;
	            var x = shape.x;
	            var y = shape.y;
	            var dx = width / 3 * 2;
	            ctx.moveTo(x, y);
	            ctx.lineTo(x + dx, y + height);
	            ctx.lineTo(x, y + height / 4 * 3);
	            ctx.lineTo(x - dx, y + height);
	            ctx.lineTo(x, y);
	            ctx.closePath();
	        }
	    });
	
	    /**
	     * Map of path contructors
	     * @type {Object.<string, module:zrender/graphic/Path>}
	     */
	    var symbolCtors = {
	        line: graphic.Line,
	
	        rect: graphic.Rect,
	
	        roundRect: graphic.Rect,
	
	        square: graphic.Rect,
	
	        circle: graphic.Circle,
	
	        diamond: Diamond,
	
	        pin: Pin,
	
	        arrow: Arrow,
	
	        triangle: Triangle
	    };
	
	    var symbolShapeMakers = {
	
	        line: function (x, y, w, h, shape) {
	            // FIXME
	            shape.x1 = x;
	            shape.y1 = y + h / 2;
	            shape.x2 = x + w;
	            shape.y2 = y + h / 2;
	        },
	
	        rect: function (x, y, w, h, shape) {
	            shape.x = x;
	            shape.y = y;
	            shape.width = w;
	            shape.height = h;
	        },
	
	        roundRect: function (x, y, w, h, shape) {
	            shape.x = x;
	            shape.y = y;
	            shape.width = w;
	            shape.height = h;
	            shape.r = Math.min(w, h) / 4;
	        },
	
	        square: function (x, y, w, h, shape) {
	            var size = Math.min(w, h);
	            shape.x = x;
	            shape.y = y;
	            shape.width = size;
	            shape.height = size;
	        },
	
	        circle: function (x, y, w, h, shape) {
	            // Put circle in the center of square
	            shape.cx = x + w / 2;
	            shape.cy = y + h / 2;
	            shape.r = Math.min(w, h) / 2;
	        },
	
	        diamond: function (x, y, w, h, shape) {
	            shape.cx = x + w / 2;
	            shape.cy = y + h / 2;
	            shape.width = w;
	            shape.height = h;
	        },
	
	        pin: function (x, y, w, h, shape) {
	            shape.x = x + w / 2;
	            shape.y = y + h / 2;
	            shape.width = w;
	            shape.height = h;
	        },
	
	        arrow: function (x, y, w, h, shape) {
	            shape.x = x + w / 2;
	            shape.y = y + h / 2;
	            shape.width = w;
	            shape.height = h;
	        },
	
	        triangle: function (x, y, w, h, shape) {
	            shape.cx = x + w / 2;
	            shape.cy = y + h / 2;
	            shape.width = w;
	            shape.height = h;
	        }
	    };
	
	    var symbolBuildProxies = {};
	    for (var name in symbolCtors) {
	        symbolBuildProxies[name] = new symbolCtors[name]();
	    }
	
	    var Symbol = graphic.extendShape({
	
	        type: 'symbol',
	
	        shape: {
	            symbolType: '',
	            x: 0,
	            y: 0,
	            width: 0,
	            height: 0
	        },
	
	        beforeBrush: function () {
	            var style = this.style;
	            var shape = this.shape;
	            // FIXME
	            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {
	                style.textPosition = ['50%', '40%'];
	                style.textAlign = 'center';
	                style.textVerticalAlign = 'middle';
	            }
	        },
	
	        buildPath: function (ctx, shape, inBundle) {
	            var symbolType = shape.symbolType;
	            var proxySymbol = symbolBuildProxies[symbolType];
	            if (shape.symbolType !== 'none') {
	                if (!proxySymbol) {
	                    // Default rect
	                    symbolType = 'rect';
	                    proxySymbol = symbolBuildProxies[symbolType];
	                }
	                symbolShapeMakers[symbolType](
	                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape
	                );
	                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);
	            }
	        }
	    });
	
	    // Provide setColor helper method to avoid determine if set the fill or stroke outside
	    var symbolPathSetColor = function (color) {
	        if (this.type !== 'image') {
	            var symbolStyle = this.style;
	            var symbolShape = this.shape;
	            if (symbolShape && symbolShape.symbolType === 'line') {
	                symbolStyle.stroke = color;
	            }
	            else if (this.__isEmptyBrush) {
	                symbolStyle.stroke = color;
	                symbolStyle.fill = '#fff';
	            }
	            else {
	                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?
	                symbolStyle.fill && (symbolStyle.fill = color);
	                symbolStyle.stroke && (symbolStyle.stroke = color);
	            }
	            this.dirty(false);
	        }
	    };
	
	    var symbolUtil = {
	        /**
	         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color
	         * @param {string} symbolType
	         * @param {number} x
	         * @param {number} y
	         * @param {number} w
	         * @param {number} h
	         * @param {string} color
	         */
	        createSymbol: function (symbolType, x, y, w, h, color) {
	            var isEmpty = symbolType.indexOf('empty') === 0;
	            if (isEmpty) {
	                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);
	            }
	            var symbolPath;
	
	            if (symbolType.indexOf('image://') === 0) {
	                symbolPath = new graphic.Image({
	                    style: {
	                        image: symbolType.slice(8),
	                        x: x,
	                        y: y,
	                        width: w,
	                        height: h
	                    }
	                });
	            }
	            else if (symbolType.indexOf('path://') === 0) {
	                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));
	            }
	            else {
	                symbolPath = new Symbol({
	                    shape: {
	                        symbolType: symbolType,
	                        x: x,
	                        y: y,
	                        width: w,
	                        height: h
	                    }
	                });
	            }
	
	            symbolPath.__isEmptyBrush = isEmpty;
	
	            symbolPath.setColor = symbolPathSetColor;
	
	            symbolPath.setColor(color);
	
	            return symbolPath;
	        }
	    };
	
	    module.exports = symbolUtil;


/***/ },
/* 655 */
/*!*********************************************************!*\
  !*** ./~/echarts/lib/component/helper/listComponent.js ***!
  \*********************************************************/
/***/ function(module, exports, __webpack_require__) {

	
	    // List layout
	    var layout = __webpack_require__(/*! ../../util/layout */ 543);
	    var formatUtil = __webpack_require__(/*! ../../util/format */ 528);
	    var graphic = __webpack_require__(/*! ../../util/graphic */ 565);
	
	    function positionGroup(group, model, api) {
	        layout.positionGroup(
	            group, model.getBoxLayoutParams(),
	            {
	                width: api.getWidth(),
	                height: api.getHeight()
	            },
	            model.get('padding')
	        );
	    }
	
	    module.exports = {
	        /**
	         * Layout list like component.
	         * It will box layout each items in group of component and then position the whole group in the viewport
	         * @param {module:zrender/group/Group} group
	         * @param {module:echarts/model/Component} componentModel
	         * @param {module:echarts/ExtensionAPI}
	         */
	        layout: function (group, componentModel, api) {
	            var rect = layout.getLayoutRect(componentModel.getBoxLayoutParams(), {
	                width: api.getWidth(),
	                height: api.getHeight()
	            }, componentModel.get('padding'));
	            layout.box(
	                componentModel.get('orient'),
	                group,
	                componentModel.get('itemGap'),
	                rect.width,
	                rect.height
	            );
	
	            positionGroup(group, componentModel, api);
	        },
	
	        addBackground: function (group, componentModel) {
	            var padding = formatUtil.normalizeCssArray(
	                componentModel.get('padding')
	            );
	            var boundingRect = group.getBoundingRect();
	            var style = componentModel.getItemStyle(['color', 'opacity']);
	            style.fill = componentModel.get('backgroundColor');
	            var rect = new graphic.Rect({
	                shape: {
	                    x: boundingRect.x - padding[3],
	                    y: boundingRect.y - padding[0],
	                    width: boundingRect.width + padding[1] + padding[3],
	                    height: boundingRect.height + padding[0] + padding[2]
	                },
	                style: style,
	                silent: true,
	                z2: -1
	            });
	            graphic.subPixelOptimizeRect(rect);
	
	            group.add(rect);
	        }
	    };


/***/ },
/* 656 */
/*!********************************************************!*\
  !*** ./~/echarts/lib/component/legend/legendFilter.js ***!
  \********************************************************/
/***/ function(module, exports) {

	
	   module.exports = function (ecModel) {
	        var legendModels = ecModel.findComponents({
	            mainType: 'legend'
	        });
	        if (legendModels && legendModels.length) {
	            ecModel.filterSeries(function (series) {
	                // If in any legend component the status is not selected.
	                // Because in legend series is assumed selected when it is not in the legend data.
	                for (var i = 0; i < legendModels.length; i++) {
	                    if (!legendModels[i].isSelected(series.name)) {
	                        return false;
	                    }
	                }
	                return true;
	            });
	        }
	    };


/***/ },
/* 657 */,
/* 658 */,
/* 659 */,
/* 660 */,
/* 661 */,
/* 662 */,
/* 663 */,
/* 664 */,
/* 665 */,
/* 666 */,
/* 667 */,
/* 668 */,
/* 669 */,
/* 670 */,
/* 671 */,
/* 672 */,
/* 673 */,
/* 674 */,
/* 675 */,
/* 676 */,
/* 677 */,
/* 678 */,
/* 679 */,
/* 680 */,
/* 681 */,
/* 682 */,
/* 683 */,
/* 684 */,
/* 685 */,
/* 686 */,
/* 687 */,
/* 688 */,
/* 689 */,
/* 690 */,
/* 691 */,
/* 692 */,
/* 693 */,
/* 694 */,
/* 695 */,
/* 696 */,
/* 697 */,
/* 698 */,
/* 699 */,
/* 700 */,
/* 701 */,
/* 702 */,
/* 703 */,
/* 704 */,
/* 705 */,
/* 706 */,
/* 707 */,
/* 708 */,
/* 709 */,
/* 710 */,
/* 711 */,
/* 712 */,
/* 713 */,
/* 714 */,
/* 715 */,
/* 716 */,
/* 717 */,
/* 718 */,
/* 719 */,
/* 720 */,
/* 721 */,
/* 722 */,
/* 723 */,
/* 724 */,
/* 725 */,
/* 726 */,
/* 727 */,
/* 728 */,
/* 729 */,
/* 730 */,
/* 731 */,
/* 732 */,
/* 733 */,
/* 734 */,
/* 735 */,
/* 736 */,
/* 737 */,
/* 738 */,
/* 739 */,
/* 740 */,
/* 741 */,
/* 742 */,
/* 743 */,
/* 744 */,
/* 745 */,
/* 746 */,
/* 747 */,
/* 748 */,
/* 749 */,
/* 750 */,
/* 751 */,
/* 752 */,
/* 753 */,
/* 754 */,
/* 755 */,
/* 756 */,
/* 757 */,
/* 758 */,
/* 759 */,
/* 760 */,
/* 761 */,
/* 762 */,
/* 763 */,
/* 764 */,
/* 765 */,
/* 766 */,
/* 767 */,
/* 768 */,
/* 769 */,
/* 770 */,
/* 771 */,
/* 772 */,
/* 773 */
/*!*****************************************************************************!*\
  !*** ./pages/TermAnalysis/AcademicPerformance/Component/ScoresWithTerm.tsx ***!
  \*****************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(/*! react */ 93);
	var antd_1 = __webpack_require__(/*! antd */ 386);
	var Option = antd_1.Select.Option;
	var ScoreSingleTable = __webpack_require__(/*! ./ScoreSingleTable */ 774);
	var ScoreSingleChart = __webpack_require__(/*! ./ScoreSingleChart */ 775);
	var commonFunc_1 = __webpack_require__(/*! common/commonFunc */ 378);
	//调用API
	var ajaxUtil_1 = __webpack_require__(/*! common/ajaxUtil */ 385);
	var actionTypes = __webpack_require__(/*! actions/TermAnalysis/TermAnalysisActionTypes */ 401);
	"use strict";
	/**
	 * 我的考试成绩 可以使用学期筛选 显示不同学期的成绩
	 */
	var ScoresWithTerm = (function (_super) {
	    __extends(ScoresWithTerm, _super);
	    function ScoresWithTerm(props) {
	        _super.call(this, props);
	        this.state = {
	            data: []
	        };
	        this.handleExamIDChange = this.handleExamIDChange.bind(this);
	        this.getDataByExamID = this.getDataByExamID.bind(this);
	    }
	    ScoresWithTerm.prototype.componentWillMount = function () {
	        var this_ = this;
	        //ajax get score data, set current examID and select options
	        ajaxUtil_1.getDataByActionID(actionTypes.GET_STUDENT_SCORE, function (response) {
	            var scores = response.result;
	            var currentExamID;
	            if (this_.props.from == "") {
	                if (!commonFunc_1.isEmptyObject(scores)) {
	                    currentExamID = scores.exam[0].examID;
	                }
	            }
	            else {
	                //来源于综合素质档案，只显示加权成绩
	                for (var _i = 0, _a = scores.usualExamScore; _i < _a.length; _i++) {
	                    var item = _a[_i];
	                    if (item.examType == "加权后") {
	                        currentExamID = item.examID;
	                        break;
	                    }
	                }
	            }
	            var data = this_.getDataByExamID(currentExamID, scores);
	            this_.setState({
	                currentExamID: currentExamID,
	                scores: scores,
	                data: data
	            });
	        });
	    };
	    ScoresWithTerm.prototype.handleExamIDChange = function (value) {
	        var data = this.getDataByExamID(value, this.state.scores);
	        this.setState({
	            currentExamID: value,
	            data: data
	        });
	    };
	    ScoresWithTerm.prototype.getDataByExamID = function (examID, scores) {
	        for (var _i = 0, _a = scores.usualExamScore; _i < _a.length; _i++) {
	            var item = _a[_i];
	            if (item.examID == examID) {
	                return item.examScore;
	            }
	        }
	    };
	    ScoresWithTerm.prototype.render = function () {
	        //calculate data by examID
	        return (React.createElement("div", null, this.props.from == "" && this.state.currentExamID &&
	            React.createElement("div", {className: "am-margin-top-sm am-cf"}, React.createElement("span", {className: "pull-right am-margin-right"}, React.createElement("span", null, "考试筛选："), React.createElement("span", null, React.createElement(antd_1.Select, {value: this.state.currentExamID + "", style: { width: 120 }, onChange: this.handleExamIDChange}, this.state.scores.exam.map(function (item, index) { return (React.createElement(Option, {key: item.examID + "", value: item.examID + ""}, item.examType)); }))))), this.state.data &&
	            React.createElement("div", {className: "am-margin"}, React.createElement(ScoreSingleTable, {data: this.state.data})), this.state.data &&
	            React.createElement("div", {className: "am-margin"}, React.createElement(ScoreSingleChart, {data: this.state.data}))));
	    };
	    ScoresWithTerm.defaultProps = {
	        from: ""
	    };
	    return ScoresWithTerm;
	}(React.Component));
	module.exports = ScoresWithTerm;


/***/ },
/* 774 */
/*!*******************************************************************************!*\
  !*** ./pages/TermAnalysis/AcademicPerformance/Component/ScoreSingleTable.tsx ***!
  \*******************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(/*! react */ 93);
	"use strict";
	var ScoreSingleTable = (function (_super) {
	    __extends(ScoreSingleTable, _super);
	    function ScoreSingleTable(props) {
	        _super.call(this, props);
	        this.state = {};
	    }
	    ScoreSingleTable.prototype.render = function () {
	        var data = this.props.data;
	        return (React.createElement("ul", {className: "score-with-item am-avg-sm-" + this.props.data.length}, data.map(function (item, index) {
	            return (React.createElement("li", {key: index}, React.createElement("div", null, item.subject), React.createElement("div", null, item.score)));
	        })));
	    };
	    ScoreSingleTable.defaultProps = {};
	    return ScoreSingleTable;
	}(React.Component));
	module.exports = ScoreSingleTable;


/***/ },
/* 775 */
/*!*******************************************************************************!*\
  !*** ./pages/TermAnalysis/AcademicPerformance/Component/ScoreSingleChart.tsx ***!
  \*******************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(/*! react */ 93);
	// 引入 ECharts 主模块
	var echarts = __webpack_require__(/*! echarts/lib/echarts */ 523);
	// 引入柱状图
	__webpack_require__(/*! echarts/lib/chart/bar */ 621);
	__webpack_require__(/*! echarts/lib/component/title */ 649);
	__webpack_require__(/*! echarts/lib/component/legend */ 650);
	"use strict";
	var ScoreSingleChart = (function (_super) {
	    __extends(ScoreSingleChart, _super);
	    function ScoreSingleChart(props) {
	        _super.call(this, props);
	        this.state = {};
	    }
	    ScoreSingleChart.prototype.componentWillMount = function () {
	        if (this.props.data.length > 0) {
	            this.getEcharts(this.props.data);
	        }
	    };
	    ScoreSingleChart.prototype.componentWillReceiveProps = function (newProps) {
	        if (JSON.stringify(this.props) !== JSON.stringify(newProps)) {
	            if (newProps.data.length > 0) {
	                this.getEcharts(newProps.data);
	            }
	        }
	    };
	    ScoreSingleChart.prototype.getEcharts = function (chartData) {
	        var containerHeight = 400; //$("#container").height();
	        $("#echartDom").css("height", containerHeight);
	        var myChart = echarts.init(document.getElementById('echartDom'));
	        var xAxisDataArray = [];
	        var seriesSchoolRank = [];
	        for (var i = 0; i < chartData.length; i++) {
	            var item = chartData[i];
	            xAxisDataArray.push(item.subject);
	            var pecentage = 100 - item.schoolRank;
	            seriesSchoolRank.push(pecentage.toFixed(2));
	        }
	        // 指定图表的配置项和数据
	        var option = {
	            title: {
	                text: '排名情况',
	                subtext: '（你的成绩超越了%多少的同学）'
	            },
	            legend: {
	                data: ['学校排名'],
	            },
	            grid: { borderWidth: 0 },
	            xAxis: [
	                {
	                    type: 'category',
	                    data: xAxisDataArray,
	                    splitLine: { show: false },
	                    axisLine: { lineStyle: { color: '#868686', width: 1 } },
	                    axisTick: { lineStyle: { color: '#868686', width: 1 } }
	                }
	            ],
	            yAxis: [
	                {
	                    type: 'value',
	                    max: "100",
	                    splitLine: { show: false },
	                    axisLine: { lineStyle: { color: '#868686', width: 1 } },
	                    axisTick: { lineStyle: { color: '#868686', width: 1 } }
	                }
	            ],
	            series: [
	                {
	                    name: '学校排名',
	                    type: 'bar',
	                    barCategoryGap: '50%',
	                    data: seriesSchoolRank,
	                    itemStyle: {
	                        normal: {
	                            label: {
	                                show: true,
	                                position: "top",
	                                formatter: function (params, ticket, callback) {
	                                    return params.value + '%';
	                                }
	                            },
	                            color: "#91C7AE"
	                        }
	                    }
	                }
	            ]
	        };
	        // 使用刚指定的配置项和数据显示图表。
	        myChart.setOption(option);
	        myChart.resize();
	    };
	    ScoreSingleChart.prototype.render = function () {
	        return (React.createElement("div", {className: "student-score-detail"}, React.createElement("div", {id: "echartDom", style: { margin: "0px" }})));
	    };
	    return ScoreSingleChart;
	}(React.Component));
	module.exports = ScoreSingleChart;


/***/ },
/* 776 */,
/* 777 */,
/* 778 */,
/* 779 */,
/* 780 */,
/* 781 */,
/* 782 */,
/* 783 */,
/* 784 */,
/* 785 */,
/* 786 */,
/* 787 */,
/* 788 */,
/* 789 */,
/* 790 */,
/* 791 */,
/* 792 */,
/* 793 */,
/* 794 */,
/* 795 */,
/* 796 */,
/* 797 */,
/* 798 */,
/* 799 */,
/* 800 */,
/* 801 */,
/* 802 */,
/* 803 */,
/* 804 */,
/* 805 */,
/* 806 */,
/* 807 */,
/* 808 */,
/* 809 */,
/* 810 */,
/* 811 */,
/* 812 */,
/* 813 */,
/* 814 */,
/* 815 */,
/* 816 */,
/* 817 */,
/* 818 */,
/* 819 */,
/* 820 */,
/* 821 */,
/* 822 */,
/* 823 */,
/* 824 */,
/* 825 */,
/* 826 */,
/* 827 */,
/* 828 */,
/* 829 */,
/* 830 */,
/* 831 */,
/* 832 */,
/* 833 */,
/* 834 */,
/* 835 */,
/* 836 */,
/* 837 */,
/* 838 */,
/* 839 */,
/* 840 */,
/* 841 */,
/* 842 */,
/* 843 */,
/* 844 */,
/* 845 */,
/* 846 */,
/* 847 */,
/* 848 */,
/* 849 */,
/* 850 */,
/* 851 */,
/* 852 */,
/* 853 */,
/* 854 */,
/* 855 */,
/* 856 */,
/* 857 */,
/* 858 */,
/* 859 */,
/* 860 */,
/* 861 */,
/* 862 */,
/* 863 */,
/* 864 */,
/* 865 */,
/* 866 */,
/* 867 */,
/* 868 */
/*!****************************************************************************!*\
  !*** ./pages/Report/ComprehensiveQualityReport/Component/ReportSingle.tsx ***!
  \****************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(/*! react */ 93);
	"use strict";
	/**
	 * 个人综合素质报告的一部分---每个带有编号的title+具体内容
	 * 传值：编号number   标题title   内容 subComponent
	 */
	var ReportSingle = (function (_super) {
	    __extends(ReportSingle, _super);
	    function ReportSingle(props) {
	        _super.call(this, props);
	        this.state = {};
	    }
	    ReportSingle.prototype.render = function () {
	        return (React.createElement("div", {className: "report-single am-margin-top-lg " + this.props.className}, React.createElement("div", {className: "report-single-title"}, React.createElement("div", {className: "titleDIV"}, React.createElement("span", {className: "titleSpan"}, this.props.number &&
	            React.createElement("div", {className: "number"}, this.props.number), React.createElement("span", {className: "titleName"}, this.props.title)))), React.createElement("div", {className: "content"}, this.props.subComponent)));
	    };
	    ReportSingle.defaultProps = {
	        className: ""
	    };
	    return ReportSingle;
	}(React.Component));
	module.exports = ReportSingle;


/***/ },
/* 869 */
/*!********************************************!*\
  !*** ./src/comprehensiveQualityReport.tsx ***!
  \********************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var React = __webpack_require__(/*! react */ 93);
	var react_dom_1 = __webpack_require__(/*! react-dom */ 125);
	var ComprehensiveQualityReport = __webpack_require__(/*! ../pages/Report/ComprehensiveQualityReport/ComprehensiveQualityReport */ 870);
	"use strict";
	react_dom_1.render(React.createElement(ComprehensiveQualityReport, null), document.getElementById('comprehensiveQualityReport'));


/***/ },
/* 870 */
/*!********************************************************************************!*\
  !*** ./pages/Report/ComprehensiveQualityReport/ComprehensiveQualityReport.tsx ***!
  \********************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(/*! react */ 93);
	var ReportSingle = __webpack_require__(/*! ./Component/ReportSingle */ 868);
	var BasicInfoAndChooseSubject = __webpack_require__(/*! ./Component/BasicInfoAndChooseSubject */ 871);
	var PersonGrade = __webpack_require__(/*! ./Component/PersonGrade */ 872);
	var SelfAnalysisAndGoals = __webpack_require__(/*! ./Component/SelfAnalysisAndGoals */ 873);
	var ComprehensiveQualityActivities = __webpack_require__(/*! ./Component/ComprehensiveQualityActivities */ 874);
	var StudentsEvaluation = __webpack_require__(/*! ./Component/StudentsEvaluation */ 879);
	var TeacherComments = __webpack_require__(/*! ./Component/TeacherComments */ 880);
	"use strict";
	var ComprehensiveQualityReport = (function (_super) {
	    __extends(ComprehensiveQualityReport, _super);
	    function ComprehensiveQualityReport(props) {
	        _super.call(this, props);
	        this.state = {};
	    }
	    ComprehensiveQualityReport.prototype.render = function () {
	        return (React.createElement("div", {className: "main-wrapper"}, React.createElement("div", {className: "main-container", style: { padding: "0px" }}, React.createElement("div", {className: "report-gray-header"}, React.createElement("img", {src: "vendor/images/qualityReportLogo.png"})), React.createElement("div", {className: "report-gray-header-back"}, React.createElement("h2", {className: "title"}, "萧山六中"), React.createElement("h3", {className: "desc"}, "个人素质档案"))), React.createElement("div", {className: "main-content"}, React.createElement(ReportSingle, {number: 1, title: "基本信息", subComponent: React.createElement(BasicInfoAndChooseSubject, null)}), React.createElement(ReportSingle, {number: 2, title: "学业成绩", subComponent: React.createElement(PersonGrade, null)}), React.createElement(ReportSingle, {number: 3, title: "自我剖析与目标", subComponent: React.createElement(SelfAnalysisAndGoals, null)}), React.createElement(ReportSingle, {number: 4, title: "我的综合素质活动", subComponent: React.createElement(ComprehensiveQualityActivities, null)}), React.createElement(ReportSingle, {number: 5, title: "同学评价", subComponent: React.createElement(StudentsEvaluation, null)}), React.createElement(ReportSingle, {number: 6, title: "老师评语", subComponent: React.createElement(TeacherComments, null)}))));
	    };
	    ComprehensiveQualityReport.defaultProps = {};
	    return ComprehensiveQualityReport;
	}(React.Component));
	module.exports = ComprehensiveQualityReport;


/***/ },
/* 871 */
/*!*****************************************************************************************!*\
  !*** ./pages/Report/ComprehensiveQualityReport/Component/BasicInfoAndChooseSubject.tsx ***!
  \*****************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(/*! react */ 93);
	var antd_1 = __webpack_require__(/*! antd */ 386);
	"use strict";
	/**
	 * 1.基本信息
	 * 个人信息+选科结果
	 */
	var BasicInfoAndChooseSubject = (function (_super) {
	    __extends(BasicInfoAndChooseSubject, _super);
	    function BasicInfoAndChooseSubject(props) {
	        _super.call(this, props);
	        this.state = {};
	    }
	    BasicInfoAndChooseSubject.prototype.render = function () {
	        //1.7选3结果
	        var subjects = [{
	                "subjName": "物理",
	                "picUrl": "vendor/images/subjects/physics.png"
	            }, {
	                "subjName": "化学",
	                "picUrl": "vendor/images/subjects/chemistry.png"
	            }, {
	                "subjName": "生物",
	                "picUrl": "vendor/images/subjects/biology.png"
	            }];
	        return (React.createElement(antd_1.Row, {className: "basicInfo"}, React.createElement(antd_1.Col, {span: 12, className: "personInfo"}, React.createElement("img", {src: "vendor/images/default-headpic.jpg"}), React.createElement("div", {className: "nameSex"}, React.createElement("b", null, "李逍遥"), React.createElement("span", {className: "am-padding-left"}, "男")), React.createElement("div", {className: "class-number-learn"}, "班级：高一一班"), React.createElement("div", {className: "class-number-learn"}, "学号：500123"), React.createElement("div", {className: "class-number-learn"}, "学籍号：18866134399")), React.createElement(antd_1.Col, {span: 12, className: "chooseSubject-result"}, React.createElement("div", {className: "choose-title"}, "7选3结果"), React.createElement(antd_1.Row, {type: "flex", justify: "center", className: "am-margin-top"}, subjects.map(function (subject, index) {
	            return React.createElement(antd_1.Col, {span: 8, key: index}, React.createElement("img", {src: subject.picUrl, width: "60", className: "am-center"}), React.createElement("div", {className: "am-padding-top-xs am-text-center"}, subject.subjName));
	        })))));
	    };
	    BasicInfoAndChooseSubject.defaultProps = {};
	    return BasicInfoAndChooseSubject;
	}(React.Component));
	module.exports = BasicInfoAndChooseSubject;


/***/ },
/* 872 */
/*!***************************************************************************!*\
  !*** ./pages/Report/ComprehensiveQualityReport/Component/PersonGrade.tsx ***!
  \***************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(/*! react */ 93);
	var ScoresWithTerm = __webpack_require__(/*! ../../../TermAnalysis/AcademicPerformance/Component/ScoresWithTerm */ 773);
	"use strict";
	/**
	 * 个人素质报告
	 * 学业成绩
	 */
	var PersonGrade = (function (_super) {
	    __extends(PersonGrade, _super);
	    function PersonGrade(props) {
	        _super.call(this, props);
	        this.state = {};
	    }
	    PersonGrade.prototype.render = function () {
	        return (React.createElement("div", null, React.createElement("div", {className: "tip"}, "该结果为加权成绩"), React.createElement(ScoresWithTerm, {from: "cqreport"})));
	    };
	    PersonGrade.defaultProps = {};
	    return PersonGrade;
	}(React.Component));
	module.exports = PersonGrade;


/***/ },
/* 873 */
/*!************************************************************************************!*\
  !*** ./pages/Report/ComprehensiveQualityReport/Component/SelfAnalysisAndGoals.tsx ***!
  \************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(/*! react */ 93);
	"use strict";
	/**
	 * 个人素质档案
	 * 自我剖析与目标
	 */
	var SelfAnalysisAndGoals = (function (_super) {
	    __extends(SelfAnalysisAndGoals, _super);
	    function SelfAnalysisAndGoals(props) {
	        _super.call(this, props);
	        this.state = {};
	    }
	    SelfAnalysisAndGoals.prototype.render = function () {
	        return (React.createElement("div", {className: "am-margin-top"}, React.createElement("div", {className: "self-analysis-goals-single am-cf"}, React.createElement("div", {className: "title"}, React.createElement("i", {className: "fa fa-heart"}), "我的性格与兴趣："), React.createElement("p", {className: "content"}, "你觉得呢？还没弄清栗子为什么可以放在黄焖鸡里面？你觉得呢？还没弄清栗子为什么可以放在黄焖鸡里面？你觉得呢？还没弄清栗子为什么可以放在黄焖鸡里面？你觉得呢？还没弄清栗子为什么可以放在黄焖鸡里面？")), React.createElement("div", {className: "self-analysis-goals-single am-cf"}, React.createElement("div", {className: "title"}, React.createElement("i", {className: "fa fa-balance-scale"}), "我的优势与不足："), React.createElement("p", {className: "content"}, "你觉得呢？还没弄清栗子为什么可以放在黄焖鸡里面？你觉得呢？还没弄清栗子为什么可以放在黄焖鸡里面？你觉得呢？还没弄清栗子为什么可以放在黄焖鸡里面？你觉得呢？还没弄清栗子为什么可以放在黄焖鸡里面？")), React.createElement("div", {className: "self-analysis-goals-single am-cf"}, React.createElement("div", {className: "title"}, React.createElement("i", {className: "fa fa-university"}), "我的大学升学目标："), React.createElement("p", {className: "content"}, "你觉得呢？还没弄清栗子为什么可以放在黄焖鸡里面？你觉得呢？还没弄清栗子为什么可以放在黄焖鸡里面？你觉得呢？还没弄清栗子为什么可以放在黄焖鸡里面？你觉得呢？还没弄清栗子为什么可以放在黄焖鸡里面？")), React.createElement("div", {className: "self-analysis-goals-single am-cf"}, React.createElement("div", {className: "title"}, React.createElement("i", {className: "fa fa-flag-checkered"}), "本学期我的综合素质培养目标："), React.createElement("p", {className: "content"}, "你觉得呢？还没弄清栗子为什么可以放在黄焖鸡里面？你觉得呢？还没弄清栗子为什么可以放在黄焖鸡里面？你觉得呢？还没弄清栗子为什么可以放在黄焖鸡里面？你觉得呢？还没弄清栗子为什么可以放在黄焖鸡里面？"))));
	    };
	    SelfAnalysisAndGoals.defaultProps = {};
	    return SelfAnalysisAndGoals;
	}(React.Component));
	module.exports = SelfAnalysisAndGoals;


/***/ },
/* 874 */
/*!**********************************************************************************************!*\
  !*** ./pages/Report/ComprehensiveQualityReport/Component/ComprehensiveQualityActivities.tsx ***!
  \**********************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(/*! react */ 93);
	var ComprehensiveQualityActivitiesSingle = __webpack_require__(/*! ./ComprehensiveQualityActivitiesSingle */ 875);
	"use strict";
	/**
	 * 个人素质报告
	 * 我的综合素质活动
	 */
	var ComprehensiveQualityActivities = (function (_super) {
	    __extends(ComprehensiveQualityActivities, _super);
	    function ComprehensiveQualityActivities(props) {
	        _super.call(this, props);
	        this.state = {};
	    }
	    ComprehensiveQualityActivities.prototype.render = function () {
	        var activities = {
	            electiveCource: [
	                {
	                    courceName: "化学选修课",
	                    courceClassification: "限定性选修课",
	                    courcePerformance: "通过本学期化学实验的学习与实践我有了很大的收获，学到了化学的知识，还增长了自己的学习能力和优良的科学素质。通过掌握基本的操作技能、实验技术，增进了自己分析问题、解决问题的能力。",
	                    courceScore: "56",
	                    courceCredit: "3"
	                },
	                {
	                    courceName: "物理选修课",
	                    courceClassification: "限定性选修课",
	                    courcePerformance: "通过本学期化学实验的学习与实践我有了很大的收获，学到了化学的知识，还增长了自己的学习能力和优良的科学素质。通过掌握基本的操作技能、实验技术，增进了自己分析问题、解决问题的能力。",
	                    courceScore: "39",
	                    courceCredit: "5"
	                },
	            ],
	            studentOrgan: [
	                {
	                    organName: "茶艺社",
	                    organClassification: "艺能与特长",
	                    organRole: "副社长",
	                    organPerfomance: "通过定期组织的茶艺活动，请老师为我们讲解中国茶的文化，既学习了相关知识，又加深了对中国文化的理解。回家之后还可以讲给长辈听，很有成就感。",
	                    imgURL: ["vendor/images/tests/multipleIntelligence.png", "vendor/images/tests/holland.png", "vendor/images/tests/mbti.png", "vendor/images/tests/values.png"]
	                },
	                {
	                    organName: "茶艺社",
	                    organClassification: "艺能与特长",
	                    organRole: "副社长",
	                    organPerfomance: "通过定期组织的茶艺活动，请老师为我们讲解中国茶的文化，既学习了相关知识，又加深了对中国文化的理解。回家之后还可以讲给长辈听，很有成就感。",
	                    imgURL: []
	                },
	            ],
	            offCampusPractice: [
	                {
	                    practiceName: "参观市博物馆",
	                    practiceClassification: "社会实践",
	                    practiceDate: "2015.9-2015.10",
	                    practiceDesc: "这次收获颇多，它使我走出校园，走入历史，走到自然的大课堂去见识世面，增长才干，为自己的知识库储备更多的能量。阅历较浅的我很高兴去到博物馆，因为对那些从未谋面的事物感到新鲜与刺激，在参观的过程中，与同学探讨历史的神奇，为革命英雄所倾服，为先辈的智慧而惊叹，为中华子民的强烈爱国精神而鼓掌！",
	                    imgURL: ["vendor/images/qualityReportLogo.png", "vendor/images/default-headpic.jpg",]
	                },
	                {
	                    practiceName: "参观市博物馆",
	                    practiceClassification: "社会实践",
	                    practiceDate: "2015.9-2015.10",
	                    practiceDesc: "这次收获颇多，它使我走出校园，走入历史，走到自然的大课堂去见识世面，增长才干，为自己的知识库储备更多的能量。阅历较浅的我很高兴去到博物馆，因为对那些从未谋面的事物感到新鲜与刺激，在参观的过程中，与同学探讨历史的神奇，为革命英雄所倾服，为先辈的智慧而惊叹，为中华子民的强烈爱国精神而鼓掌！",
	                    imgURL: ["vendor/images/qualityReportLogo.png",]
	                }
	            ]
	        };
	        return (React.createElement("div", null, React.createElement(ComprehensiveQualityActivitiesSingle, {title: "选修课", imgURL: "vendor/images/homePageRightMenuIcon/4.png", activitySingle: activities.electiveCource}), React.createElement(ComprehensiveQualityActivitiesSingle, {title: "学生社团", imgURL: "vendor/images/homePageRightMenuIcon/5.png", activitySingle: activities.studentOrgan}), React.createElement(ComprehensiveQualityActivitiesSingle, {title: "校外实践", imgURL: "vendor/images/homePageRightMenuIcon/6.png", activitySingle: activities.offCampusPractice})));
	    };
	    ComprehensiveQualityActivities.defaultProps = {};
	    return ComprehensiveQualityActivities;
	}(React.Component));
	module.exports = ComprehensiveQualityActivities;


/***/ },
/* 875 */
/*!****************************************************************************************************!*\
  !*** ./pages/Report/ComprehensiveQualityReport/Component/ComprehensiveQualityActivitiesSingle.tsx ***!
  \****************************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(/*! react */ 93);
	var antd_1 = __webpack_require__(/*! antd */ 386);
	var ElectiveCourseSingle = __webpack_require__(/*! ./ElectiveCourseSingle */ 876);
	var StudentOrganizationSingle = __webpack_require__(/*! ./StudentOrganizationSingle */ 877);
	var OffCampusPracticeSingle = __webpack_require__(/*! ./OffCampusPracticeSingle */ 878);
	"use strict";
	/**
	 * 个人素质报告
	 * 我的综合素质活动single
	 *
	 */
	var ComprehensiveQualityActivitiesSingle = (function (_super) {
	    __extends(ComprehensiveQualityActivitiesSingle, _super);
	    function ComprehensiveQualityActivitiesSingle(props) {
	        _super.call(this, props);
	        this.state = {};
	    }
	    ComprehensiveQualityActivitiesSingle.prototype.render = function () {
	        var this_ = this;
	        return (React.createElement(antd_1.Row, {className: "comp-qual-activies-single"}, React.createElement(antd_1.Col, {span: 6, className: "leftTitle"}, React.createElement("div", {className: "vertical-middle"}, React.createElement("img", {src: this.props.imgURL}), React.createElement("div", {className: "title"}, this.props.title))), React.createElement(antd_1.Col, {span: 18, className: "rightContent"}, this.props.activitySingle.map(function (single, index) {
	            var result = null;
	            if (this_.props.title == "选修课") {
	                result = React.createElement(ElectiveCourseSingle, {key: index, cource: single});
	            }
	            else if (this_.props.title == "学生社团") {
	                result = React.createElement(StudentOrganizationSingle, {key: index, organ: single});
	            }
	            else if (this_.props.title == "校外实践") {
	                result = React.createElement(OffCampusPracticeSingle, {key: index, practice: single});
	            }
	            return result;
	        }))));
	    };
	    ComprehensiveQualityActivitiesSingle.defaultProps = {};
	    return ComprehensiveQualityActivitiesSingle;
	}(React.Component));
	module.exports = ComprehensiveQualityActivitiesSingle;


/***/ },
/* 876 */
/*!************************************************************************************!*\
  !*** ./pages/Report/ComprehensiveQualityReport/Component/ElectiveCourseSingle.tsx ***!
  \************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(/*! react */ 93);
	"use strict";
	/**
	 * 个人素质报告
	 * 我的综合素质活动
	 * 选修课single
	 */
	var ElectiveCourseSingle = (function (_super) {
	    __extends(ElectiveCourseSingle, _super);
	    function ElectiveCourseSingle(props) {
	        _super.call(this, props);
	        this.state = {};
	    }
	    ElectiveCourseSingle.prototype.render = function () {
	        return (React.createElement("div", {className: "comprehensive-activities-single"}, React.createElement("div", {className: "col2Con"}, React.createElement("b", null, "课程名称：", this.props.cource.courceName), React.createElement("span", {className: "rightText"}, React.createElement("b", null, "所属分类：", this.props.cource.courceClassification))), React.createElement("div", {className: "colOne"}, React.createElement("span", null, "课程表现："), React.createElement("p", {className: "detail"}, this.props.cource.courcePerformance)), React.createElement("div", {className: "col2Con"}, React.createElement("b", null, "我的成绩：", this.props.cource.courceScore), React.createElement("span", {className: "rightText"}, React.createElement("b", {className: "am-padding-right-xs"}, "课程学分：", this.props.cource.courceCredit), "学分"))));
	    };
	    ElectiveCourseSingle.defaultProps = {};
	    return ElectiveCourseSingle;
	}(React.Component));
	module.exports = ElectiveCourseSingle;


/***/ },
/* 877 */
/*!*****************************************************************************************!*\
  !*** ./pages/Report/ComprehensiveQualityReport/Component/StudentOrganizationSingle.tsx ***!
  \*****************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(/*! react */ 93);
	var antd_1 = __webpack_require__(/*! antd */ 386);
	"use strict";
	/**
	 * 个人素质报告
	 * 我的综合素质活动
	 * 学生社团single
	 */
	var StudentOrganizationSingle = (function (_super) {
	    __extends(StudentOrganizationSingle, _super);
	    function StudentOrganizationSingle(props) {
	        _super.call(this, props);
	        this.state = {};
	    }
	    StudentOrganizationSingle.prototype.render = function () {
	        var imgFlag = this.props.organ.imgURL.length > 0 ? true : false;
	        return (React.createElement("div", {className: "comprehensive-activities-single"}, React.createElement("div", {className: "col2Con"}, React.createElement("b", null, "社团名称："), this.props.organ.organName, React.createElement("span", {className: "rightText"}, "所属分类：", this.props.organ.organClassification)), React.createElement("div", {className: "col2Con"}, React.createElement("b", null, "我的角色："), this.props.organ.organRole), React.createElement("div", {className: "colOne"}, React.createElement("span", null, "我的表现："), React.createElement("div", {className: "detail"}, this.props.organ.organPerfomance, imgFlag &&
	            React.createElement(antd_1.Row, null, this.props.organ.imgURL.map(function (url, index) {
	                return React.createElement(antd_1.Col, {span: 8, key: index}, React.createElement("img", {src: url, style: { width: "90%" }}));
	            }))))));
	    };
	    StudentOrganizationSingle.defaultProps = {};
	    return StudentOrganizationSingle;
	}(React.Component));
	module.exports = StudentOrganizationSingle;


/***/ },
/* 878 */
/*!***************************************************************************************!*\
  !*** ./pages/Report/ComprehensiveQualityReport/Component/OffCampusPracticeSingle.tsx ***!
  \***************************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(/*! react */ 93);
	var antd_1 = __webpack_require__(/*! antd */ 386);
	"use strict";
	/**
	 * 个人素质报告
	 * 我的综合素质活动
	 * 校外实践single
	 */
	var OffCampusPracticeSingle = (function (_super) {
	    __extends(OffCampusPracticeSingle, _super);
	    function OffCampusPracticeSingle(props) {
	        _super.call(this, props);
	        this.state = {};
	    }
	    OffCampusPracticeSingle.prototype.render = function () {
	        var imgFlag = this.props.practice.imgURL.length > 0 ? true : false;
	        return (React.createElement("div", {className: "comprehensive-activities-single"}, React.createElement("div", {className: "col2Con"}, React.createElement("b", null, "活动名称："), this.props.practice.practiceName, React.createElement("span", {className: "rightText"}, "所属分类：", this.props.practice.practiceClassification)), React.createElement("div", {className: "col2Con"}, "日期：", React.createElement("b", null, this.props.practice.practiceDate)), React.createElement("div", {className: "colOne"}, React.createElement("span", null, "活动简介："), React.createElement("p", {className: "detail"}, this.props.practice.practiceDesc)), imgFlag &&
	            React.createElement("div", {className: "colOne"}, React.createElement("span", null, "相关证明："), React.createElement("div", {className: "detail"}, React.createElement(antd_1.Row, null, this.props.practice.imgURL.map(function (url, index) {
	                return React.createElement(antd_1.Col, {span: 8, key: index}, React.createElement("img", {src: url, style: { width: "90%" }}));
	            }))))));
	    };
	    OffCampusPracticeSingle.defaultProps = {};
	    return OffCampusPracticeSingle;
	}(React.Component));
	module.exports = OffCampusPracticeSingle;


/***/ },
/* 879 */
/*!**********************************************************************************!*\
  !*** ./pages/Report/ComprehensiveQualityReport/Component/StudentsEvaluation.tsx ***!
  \**********************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(/*! react */ 93);
	var antd_1 = __webpack_require__(/*! antd */ 386);
	"use strict";
	/**
	 * 个人素质档案
	 * 同学评价
	 */
	var StudentsEvaluation = (function (_super) {
	    __extends(StudentsEvaluation, _super);
	    function StudentsEvaluation(props) {
	        _super.call(this, props);
	        this.state = {};
	    }
	    StudentsEvaluation.prototype.render = function () {
	        var desc = ["东河什么", "匆匆那年", "你还在么"];
	        return (React.createElement(antd_1.Row, {className: "report-student-evaluation"}, React.createElement(antd_1.Col, {span: 8, className: "left-rankState"}, React.createElement("div", {className: "title"}, "同学打分"), React.createElement("div", {className: "rateDIV"}, "品德表现", React.createElement(antd_1.Rate, {disabled: true, defaultValue: 2})), React.createElement("div", {className: "rateDIV"}, "创意实践", React.createElement(antd_1.Rate, {disabled: true, defaultValue: 2})), React.createElement("div", {className: "rateDIV"}, "运动健康", React.createElement(antd_1.Rate, {disabled: true, defaultValue: 4})), React.createElement("div", {className: "rateDIV"}, "艺术素养", React.createElement(antd_1.Rate, {disabled: true, defaultValue: 5}))), React.createElement(antd_1.Col, {span: 16, className: "right-circle-desc"}, React.createElement(antd_1.Row, null, desc.map(function (single, index) {
	            return React.createElement(antd_1.Col, {span: 8, key: index}, React.createElement("div", {className: "circle"}, single));
	        })))));
	    };
	    StudentsEvaluation.defaultProps = {};
	    return StudentsEvaluation;
	}(React.Component));
	module.exports = StudentsEvaluation;


/***/ },
/* 880 */
/*!*******************************************************************************!*\
  !*** ./pages/Report/ComprehensiveQualityReport/Component/TeacherComments.tsx ***!
  \*******************************************************************************/
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var __extends = (this && this.__extends) || function (d, b) {
	    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
	    function __() { this.constructor = d; }
	    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	};
	var React = __webpack_require__(/*! react */ 93);
	var antd_1 = __webpack_require__(/*! antd */ 386);
	"use strict";
	/**
	 * 个人素质档案
	 * 老师评语
	 */
	var TeacherComments = (function (_super) {
	    __extends(TeacherComments, _super);
	    function TeacherComments(props) {
	        _super.call(this, props);
	        this.state = {};
	    }
	    TeacherComments.prototype.render = function () {
	        return (React.createElement("div", null, React.createElement("div", {className: "teacher-comments-title"}, "班主任老师评语"), React.createElement(antd_1.Row, {className: "report-student-evaluation"}, React.createElement(antd_1.Col, {span: 8, className: "left-rankState"}, React.createElement("div", {className: "title"}, "班主任打分"), React.createElement("div", {className: "rateDIV"}, "品德表现", React.createElement(antd_1.Rate, {disabled: true, defaultValue: 2})), React.createElement("div", {className: "rateDIV"}, "创意实践", React.createElement(antd_1.Rate, {disabled: true, defaultValue: 2})), React.createElement("div", {className: "rateDIV"}, "运动健康", React.createElement(antd_1.Rate, {disabled: true, defaultValue: 4})), React.createElement("div", {className: "rateDIV"}, "艺术素养", React.createElement(antd_1.Rate, {disabled: true, defaultValue: 5}))), React.createElement(antd_1.Col, {span: 16, className: "right-circle-desc"}, "班主任尚未填写", React.createElement("img", {src: "vendor/images/qqface/2.gif"}), "……")), React.createElement("div", {className: "teacher-comments-title"}, "生涯导师评语"), React.createElement("div", {className: "teacher-shengya"}, React.createElement("div", null, "生涯老师尚未填写", React.createElement("img", {src: "vendor/images/qqface/2.gif"}), "……"))));
	    };
	    TeacherComments.defaultProps = {};
	    return TeacherComments;
	}(React.Component));
	module.exports = TeacherComments;


/***/ }
/******/ ]);
//# sourceMappingURL=comprehensiveQualityReport.js.map