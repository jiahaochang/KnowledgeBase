{"version":3,"sources":["webpack:///./common/Component/CardTabs.tsx?51b5******","webpack:///./~/echarts/lib/echarts.js?68a2","webpack:///./~/zrender/lib/core/env.js?9ccc","webpack:///./~/echarts/lib/model/Global.js?b9d3","webpack:///./~/zrender/lib/core/util.js?10f4","webpack:///./~/echarts/lib/util/model.js?e2bd","webpack:///./~/echarts/lib/util/format.js?7f72","webpack:///./~/echarts/lib/util/number.js?43e3","webpack:///./~/zrender/lib/contain/text.js?3a43","webpack:///./~/zrender/lib/core/BoundingRect.js?76f6","webpack:///./~/zrender/lib/core/vector.js?6654","webpack:///./~/zrender/lib/core/matrix.js?97a2","webpack:///./~/echarts/lib/model/Model.js?f4df","webpack:///./~/echarts/lib/util/clazz.js?3e66","webpack:///./~/echarts/lib/model/mixin/lineStyle.js?3579","webpack:///./~/echarts/lib/model/mixin/makeStyleMapper.js?e2b1","webpack:///./~/echarts/lib/model/mixin/areaStyle.js?4e41","webpack:///./~/echarts/lib/model/mixin/textStyle.js?e4c8","webpack:///./~/echarts/lib/model/mixin/itemStyle.js?9011","webpack:///./~/echarts/lib/model/Component.js?0e02","webpack:///./~/echarts/lib/util/component.js?cc72","webpack:///./~/echarts/lib/util/layout.js?2b1e","webpack:///./~/echarts/lib/model/mixin/boxLayout.js?92d7","webpack:///./~/echarts/lib/model/globalDefault.js?fd54","webpack:///./~/echarts/lib/model/mixin/colorPalette.js?b454","webpack:///./~/echarts/lib/ExtensionAPI.js?e283","webpack:///./~/echarts/lib/CoordinateSystem.js?2b30","webpack:///./~/echarts/lib/model/OptionManager.js?a7a5","webpack:///./~/echarts/lib/model/Series.js?186c","webpack:///./~/echarts/lib/view/Component.js?415a","webpack:///./~/zrender/lib/container/Group.js?8d57","webpack:///./~/zrender/lib/Element.js?325b","webpack:///./~/zrender/lib/core/guid.js?f0e4","webpack:///./~/zrender/lib/mixin/Eventful.js?223b","webpack:///./~/zrender/lib/mixin/Transformable.js?f61b","webpack:///./~/zrender/lib/mixin/Animatable.js?35cb","webpack:///./~/zrender/lib/animation/Animator.js?d2b9","webpack:///./~/zrender/lib/animation/Clip.js?fef9","webpack:///./~/zrender/lib/animation/easing.js?64b6","webpack:///./~/zrender/lib/tool/color.js?284f","webpack:///./~/zrender/lib/core/log.js?26a2","webpack:///./~/zrender/lib/config.js?2861","webpack:///./~/echarts/lib/view/Chart.js?72f3","webpack:///./~/echarts/lib/util/graphic.js?e267","webpack:///./~/zrender/lib/tool/path.js?dc4b","webpack:///./~/zrender/lib/graphic/Path.js?c119","webpack:///./~/zrender/lib/graphic/Displayable.js?5c45","webpack:///./~/zrender/lib/graphic/Style.js?22d9","webpack:///./~/zrender/lib/graphic/mixin/RectText.js?94ea","webpack:///./~/zrender/lib/core/PathProxy.js?69e9","webpack:///./~/zrender/lib/core/curve.js?9511","webpack:///./~/zrender/lib/core/bbox.js?1b56","webpack:///./~/zrender/lib/contain/path.js?2e7f","webpack:///./~/zrender/lib/contain/line.js?4326","webpack:///./~/zrender/lib/contain/cubic.js?b90e","webpack:///./~/zrender/lib/contain/quadratic.js?f589","webpack:///./~/zrender/lib/contain/arc.js?7367","webpack:///./~/zrender/lib/contain/util.js?0031","webpack:///./~/zrender/lib/contain/windingLine.js?625a","webpack:///./~/zrender/lib/graphic/Pattern.js?a97e","webpack:///./~/zrender/lib/tool/transformPath.js?ddb2","webpack:///./~/zrender/lib/graphic/Gradient.js?5165","webpack:///./~/zrender/lib/graphic/Image.js?bf1b","webpack:///./~/zrender/lib/core/LRU.js?018e","webpack:///./~/zrender/lib/graphic/Text.js?3244","webpack:///./~/zrender/lib/graphic/shape/Circle.js?076e","webpack:///./~/zrender/lib/graphic/shape/Sector.js?9767","webpack:///./~/zrender/lib/graphic/shape/Ring.js?b71c","webpack:///./~/zrender/lib/graphic/shape/Polygon.js?d37d","webpack:///./~/zrender/lib/graphic/helper/poly.js?788c","webpack:///./~/zrender/lib/graphic/helper/smoothSpline.js?a17c","webpack:///./~/zrender/lib/graphic/helper/smoothBezier.js?2713","webpack:///./~/zrender/lib/graphic/shape/Polyline.js?3cdb","webpack:///./~/zrender/lib/graphic/shape/Rect.js?3b3d","webpack:///./~/zrender/lib/graphic/helper/roundRect.js?418d","webpack:///./~/zrender/lib/graphic/shape/Line.js?7728","webpack:///./~/zrender/lib/graphic/shape/BezierCurve.js?f5c4","webpack:///./~/zrender/lib/graphic/shape/Arc.js?2994","webpack:///./~/zrender/lib/graphic/CompoundPath.js?8636","webpack:///./~/zrender/lib/graphic/LinearGradient.js?4250","webpack:///./~/zrender/lib/graphic/RadialGradient.js?895e","webpack:///./~/zrender/lib/zrender.js?5dcd","webpack:///./~/zrender/lib/Handler.js?fbeb","webpack:///./~/zrender/lib/mixin/Draggable.js?fbca","webpack:///./~/zrender/lib/Storage.js?7e93","webpack:///./~/zrender/lib/core/timsort.js?0a74","webpack:///./~/zrender/lib/animation/Animation.js?8743","webpack:///./~/zrender/lib/core/event.js?24ff","webpack:///./~/zrender/lib/animation/requestAnimationFrame.js?6d88","webpack:///./~/zrender/lib/dom/HandlerProxy.js?2fc7","webpack:///./~/zrender/lib/core/GestureMgr.js?00fd","webpack:///./~/zrender/lib/Painter.js?ee99","webpack:///./~/zrender/lib/Layer.js?f586","webpack:///./~/echarts/lib/loading/default.js?8a5f","webpack:///./~/echarts/lib/visual/seriesColor.js?4b6a","webpack:///./~/echarts/lib/preprocessor/backwardCompat.js?f171","webpack:///./~/echarts/lib/preprocessor/helper/compatStyle.js?aff6","webpack:///./~/echarts/lib/data/List.js?b096","webpack:///./~/echarts/lib/data/DataDiffer.js?f330","webpack:///./~/echarts/lib/chart/bar.js?931c","webpack:///./~/echarts/lib/coord/cartesian/Grid.js?f167","webpack:///./~/echarts/lib/coord/axisHelper.js?4730","webpack:///./~/echarts/lib/scale/Ordinal.js?3a6b","webpack:///./~/echarts/lib/scale/Scale.js?c922","webpack:///./~/echarts/lib/scale/Interval.js?08e9","webpack:///./~/echarts/lib/scale/Time.js?6fdf","webpack:///./~/echarts/lib/scale/Log.js?0ad0","webpack:///./~/echarts/lib/coord/cartesian/Cartesian2D.js?103b","webpack:///./~/echarts/lib/coord/cartesian/Cartesian.js?9246","webpack:///./~/echarts/lib/coord/cartesian/Axis2D.js?9345","webpack:///./~/echarts/lib/coord/Axis.js?736c","webpack:///./~/echarts/lib/coord/cartesian/axisLabelInterval.js?b017","webpack:///./~/echarts/lib/coord/cartesian/GridModel.js?1817","webpack:///./~/echarts/lib/coord/cartesian/AxisModel.js?0573","webpack:///./~/echarts/lib/coord/axisModelCreator.js?34e4","webpack:///./~/echarts/lib/coord/axisDefault.js?4492","webpack:///./~/echarts/lib/coord/axisModelCommonMixin.js?a8d0","webpack:///./~/echarts/lib/chart/bar/BarSeries.js?61cd","webpack:///./~/echarts/lib/chart/helper/createListFromArray.js?e3fc","webpack:///./~/echarts/lib/data/helper/completeDimensions.js?9c9e","webpack:///./~/echarts/lib/chart/bar/BarView.js?20fc","webpack:///./~/echarts/lib/chart/bar/barItemStyle.js?15d9","webpack:///./~/echarts/lib/layout/barGrid.js?d23e","webpack:///./~/echarts/lib/component/grid.js?5897","webpack:///./~/echarts/lib/component/axis.js?8a87","webpack:///./~/echarts/lib/component/axis/AxisView.js?f854","webpack:///./~/echarts/lib/component/axis/AxisBuilder.js?6417","webpack:///./~/echarts/lib/component/title.js?e263","webpack:///./~/echarts/lib/component/legend.js?d893","webpack:///./~/echarts/lib/component/legend/LegendModel.js?bbe7","webpack:///./~/echarts/lib/component/legend/legendAction.js?b7a9","webpack:///./~/echarts/lib/component/legend/LegendView.js?124f","webpack:///./~/echarts/lib/util/symbol.js?be2c","webpack:///./~/echarts/lib/component/helper/listComponent.js?566d","webpack:///./~/echarts/lib/component/legend/legendFilter.js?93b2","webpack:///./pages/AdminPage/Component/AdminBasicInfo.tsx?e076******","webpack:///./pages/AdminPage/Statistics/Statistics.tsx","webpack:///./pages/AdminPage/Statistics/Component/ActivitiesLibChart.tsx","webpack:///./~/echarts/lib/chart/pie.js","webpack:///./~/echarts/lib/chart/pie/PieSeries.js","webpack:///./~/echarts/lib/component/helper/selectableMixin.js","webpack:///./~/echarts/lib/chart/pie/PieView.js","webpack:///./~/echarts/lib/action/createDataSelectAction.js","webpack:///./~/echarts/lib/visual/dataColor.js","webpack:///./~/echarts/lib/chart/pie/pieLayout.js","webpack:///./~/echarts/lib/chart/pie/labelLayout.js","webpack:///./~/echarts/lib/processor/dataFilter.js","webpack:///./~/echarts/lib/component/tooltip.js","webpack:///./~/echarts/lib/component/tooltip/TooltipModel.js","webpack:///./~/echarts/lib/component/tooltip/TooltipView.js","webpack:///./~/echarts/lib/component/tooltip/TooltipContent.js","webpack:///./pages/AdminPage/Statistics/Component/ActiveDegreeChart.tsx"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,KAAY,KAAK,uBAAM,eACvB,CAAC,CAD6B;AAC9B,aAAY,CAAC;AACb,wCAA4B,wBAAe,CAAC;AAS5C;KAAuB,4BAAmD;KACtE,kBAAY,KAAK;SACb,kBAAM,KAAK,CAAC,CAAC;SACb,IAAI,CAAC,KAAK,GAAG;aACT,WAAW,EAAC,CAAC;UAChB,CAAC;SACF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACjD,CAAC;KAMD,6BAAU,GAAV,UAAW,CAAC;SACR,IAAI,CAAC,QAAQ,CAAC,EAAC,WAAW,EAAC,CAAC,CAAC,aAAa,CAAC,QAAQ,EAAC,CAAC,CAAC;KAE1D,CAAC;KACL,wFAAwF;KACpF,yBAAM,GAAN;SACI,EAAE,EAAC,0BAAa,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAC;aAC/B,MAAM,CAAC,qBAAC,GAAG,mBAAc;SAC7B,CAAC;SAED,IAAI,KAAK,GAAG,IAAI,CAAC;SACjB,IAAI,aAAa,GAAG,0BAA0B,GAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC;SACtE,IAAI,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC;SAEpE,MAAM,CAAC,CACH,qBAAC,GAAG,IAAC,SAAS,EAAC,gBAAgB,GAC3B,qBAAC,EAAE,IAAC,SAAS,EAAE,aAAc,GACxB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,UAAS,GAAG,EAAE,KAAK;aACpC,IAAI,WAAW,GAAG,KAAK,IAAE,KAAK,CAAC,KAAK,CAAC,WAAW,GAAC,QAAQ,GAAC,EAAE,CAAC;aAC7D,MAAM,CAAC,qBAAC,EAAE,IAAC,SAAS,EAAE,WAAY,EAAC,GAAG,EAAE,KAAM,EAAC,OAAO,EAAE,KAAK,CAAC,UAAW,EAAC,QAAQ,EAAE,KAAM,GAAE,GAAG,CAAC,OAAQ,CAAK;SAC7G,CAAC,CACH,CACD,EACL,qBAAC,GAAG,IAAC,SAAS,EAAC,mBAAmB,GAC7B,UAAW,CACV,CACJ,CACT;KACL,CAAC;KAhCM,qBAAY,GAAG;SAClB,SAAS,EAAC,EAAE;MACf,CAAC;KA+BN,eAAC;AAAD,EAAC,CA1CsB,KAAK,CAAC,SAAS,GA0CrC;AAED,kBAAS,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvDjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,iBAAgB;AAChB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;;;AAGA;AACA,iBAAgB;AAChB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,cAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;;AAEb;;AAEA;AACA,UAAS;;AAET;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;;AAEb;;AAEA;AACA,UAAS;;AAET;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,UAAS;;AAET;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,cAAa,mCAAmC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA,uCAAsC;AACtC;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD;AACvD;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA;AACA,wBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA,oDAAmD;AACnD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA,iBAAgB,4BAA4B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,qBAAqB;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET,wBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,4BAA4B;AAC3C;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA,gBAAe,4BAA4B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA,gBAAe,4BAA4B;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;;AAEA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,gBAAe,2DAA2D;AAC1E,gBAAe,wDAAwD;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,gBAAe,2DAA2D;AAC1E,gBAAe,wDAAwD;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA2B,mBAAmB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA,gBAAe,eAAe;AAC9B,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,iBAAgB,sCAAsC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB,6CAA6C;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAgB,eAAe;AAC/B,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,SAAS;AACxB;AACA;AACA;AACA;;AAEA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA,+DAA8D,MAAM;AACpE,kDAAiD,MAAM;AACvD;AACA,aAAY,6DAA6D;AACzE,yBAAwB;AACxB;AACA;AACA,gBAAe,gBAAgB;AAC/B,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;;AAEA;AACA,oCAAmC;AACnC;AACA;AACA;;AAEA;AACA,gBAAe,OAAO;AACtB,gBAAe,EAAE;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC7gDA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAuB;AACvB,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iDAAgD,IAAI;AACpD,8CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA,+CAA8C;;AAE9C;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACnHA;AACA;AACA;AACA,aAAY;AACZ;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,2BAA2B;AAC1C,gBAAe,OAAO;AACtB;AACA;;AAEA;;AAEA;AACA;;AAEA,gCAA+B;;AAE/B;AACA,uBAAsB;AACtB;AACA;AACA;;AAEA;AACA,uBAAsB;AACtB;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,UAAS;;AAET;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA,qBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qFAAoF;AACpF;AACA;AACA;AACA,sDAAqD;AACrD,wDAAuD;AACvD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA,kDAAiD,QAAQ;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;;AAEA;AACA,UAAS;;AAET;AACA,qBAAoB;AACpB;AACA;AACA;AACA,UAAS;;AAET;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,8BAA8B;AAC9C;AACA;AACA,iBAAgB,4CAA4C;AAC5D;AACA;AACA,iBAAgB,mBAAmB;AACnC,yCAAwC;AACxC;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO,yBAAyB,yBAAyB;AAC5E;AACA;AACA;AACA;AACA,oBAAmB,SAAS;AAC5B,qBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA,aAAY;AACZ;AACA,iBAAgB,8BAA8B,mBAAmB;AACjE,yCAAwC;AACxC;AACA;AACA,iBAAgB,4CAA4C,mBAAmB;AAC/E,yCAAwC;AACxC;AACA;AACA,oBAAmB,eAAe;AAClC;AACA,oBAAmB,SAAS;AAC5B,oBAAmB,EAAE;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,oBAAmB,OAAO;AAC1B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA,oBAAmB,OAAO;AAC1B,qBAAoB;AACpB;AACA;AACA;AACA,UAAS;;AAET;AACA,oBAAmB,OAAO;AAC1B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA,qBAAoB;AACpB;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,oBAAmB,SAAS;AAC5B,oBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA,oBAAmB,SAAS;AAC5B,oBAAmB,EAAE;AACrB;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,SAAS;AAC5B,oBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,SAAS;AAC5B,oBAAmB,EAAE;AACrB;AACA;AACA;AACA,UAAS;;AAET;AACA,oBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,oBAAmB,SAAS;AAC5B,oBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;;AAEA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;;AAEA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2DAA0D;AAC1D;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAe,sBAAsB;AACrC,iBAAgB,OAAO,OAAO,OAAO,eAAe,eAAe;AACnE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,iCAAgC;AAChC;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,UAAU,GAAG,UAAU,GAAG,GAAG;AAC5D,+BAA8B,GAAG,GAAG,UAAU,GAAG,UAAU;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;ACtvBA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAe,EAAE;AACjB,iBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,qDAAoD,SAAS;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAe,MAAM;AACrB,gBAAe,QAAQ;AACvB,iBAAgB,EAAE;AAClB;AACA;AACA;AACA,uDAAsD,SAAS;AAC/D;AACA;AACA;AACA;;AAEA;AACA,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAe,EAAE;AACjB,gBAAe,EAAE;AACjB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,SAAS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,gBAAgB;AAC/B,gBAAe,gBAAgB;AAC/B,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,aAAa;AAC5B,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,SAAS;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,SAAS;AACtD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,SAAS;AACtD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,SAAS;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,0CAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,SAAS;AACxB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,EAAE;AAClB;AACA;AACA,gDAA+C,SAAS;AACxD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,QAAQ;AACvB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACveA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,iBAAgB,eAAe;AAC/B,iBAAgB,gBAAgB;AAChC,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAA+B;;AAE/B,gCAA+B,kBAAkB;AACjD;AACA;;AAEA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;;AAEA;AACA;AACA,iBAAgB,EAAE;AAClB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,iBAAgB,SAAS,kCAAkC;AAC3D;AACA;;AAEA;AACA;AACA;AACA,4BAA2B;AAC3B;;AAEA;AACA;AACA,cAAa;;AAEb;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,eAAe;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;;AAEA;AACA,kCAAiC,WAAW,eAAe,eAAe;AAC1E;AACA,gBAAe,gCAAgC;AAC/C,iBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAiC,WAAW,eAAe,eAAe;AAC1E;AACA,gBAAe,gCAAgC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,mBAAmB;AAClC,gBAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B;;AAEA;AACA;AACA,gBAAe,yBAAyB;AACxC,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,qBAAoB;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,QAAQ;AAC3B,oBAAmB,OAAO;AAC1B,qBAAoB,OAAO;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,sDAAsD;AACrE,gBAAe,sBAAsB;AACrC,iBAAgB,eAAe,gBAAgB,wBAAwB,IAAI;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAoB;AACpB,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA,4BAA2B,mBAAmB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA6B,kBAAkB;AAC/C;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,eAAe,gBAAgB,mCAAmC;AACjF,gBAAe,eAAe,gBAAgB,mCAAmC;AACjF,iBAAgB,uCAAuC;AACvD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,sDAAqD,SAAS;AAC9D;AACA;AACA;;AAEA,2DAA0D,UAAU;AACpE;;AAEA;AACA;AACA;AACA;AACA,8DAA6D;AAC7D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA2D,oCAAoC;AAC/F;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACheA;AACA;AACA;;AAEA;AACA;AACA,eAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,IAAI,UAAU,EAAE;AACjD;AACA;;AAEA;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,sBAAsB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kCAAiC;AACjC,iCAAgC;AAChC,iCAAgC;AAChC,mCAAkC;AAClC,kCAAiC;AACjC;;AAEA;;AAEA;AACA,kBAAiB,uDAAuD;AACxE;AACA;AACA;AACA,iBAAgB,OAAO;AACvB,iBAAgB,sBAAsB;AACtC,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,kBAAkB;AACzC;AACA;AACA;AACA,gCAA+B,uBAAuB;AACtD,4BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;;;;;;;;;ACnKA;AACA;AACA;AACA;;;;AAIA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,wBAAwB;AACxC,iBAAgB,eAAe;AAC/B,iBAAgB,eAAe;AAC/B,iBAAgB,QAAQ;AACxB,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,cAAc;AAC7B,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAe,eAAe;AAC9B,gBAAe,eAAe;AAC9B,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAe,KAAK;AACpB,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA,gBAAe,mBAAmB;AAClC,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB,OAAO;AACvB,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAgB,OAAO;AACvB,iBAAgB,QAAQ;AACxB,iBAAgB;AAChB;AACA;AACA;AACA,6BAA4B;AAC5B;AACA;AACA,2BAA0B,QAAQ;AAClC,gCAA+B,QAAQ;AACvC,8BAA6B,QAAQ;AACrC,8BAA6B,QAAQ;AACrC,mBAAkB,SAAS;AAC3B;AACA;AACA,yBAAwB,QAAQ;AAChC,8BAA6B,QAAQ;AACrC,8BAA6B,QAAQ;AACrC,8BAA6B,QAAQ;AACrC,mBAAkB,SAAS;AAC3B;AACA;AACA;;AAEA;;;;;;;;;;;;ACtOA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,8CAA6C,OAAO;AACpiBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB;AACA;AACA,iBAAgB,OAAO;AACvB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6EAA4E;AAC5E,wBAAuB,6CAA6C;AACpE;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,gDAA+C,SAAS;AACxD;AACA;;AAEA;AACA;AACA;;AAEA,6BAA4B;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,oCAAmC,iCAAiC;AACpE;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;AClRA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,oBAAmB,iCAAiC;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,oBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,qBAAoB,iCAAiC;AACrD,qBAAoB;AACpB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA,oBAAmB,0CAA0C;AAC7D,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,qBAAoB;AACpB;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACvJA;AACA;AACA;;AAEA;AACA,kBAAiB,4BAA4B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,QAAQ;AAC3B,oBAAmB,QAAQ;AAC3B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,QAAQ;AAC3B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,QAAQ;AAC3B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,qBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,QAAQ;AAC3B,oBAAmB,QAAQ;AAC3B,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,QAAQ;AAC3B,oBAAmB,QAAQ;AAC3B,oBAAmB,QAAQ;AAC3B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,QAAQ;AAC3B,oBAAmB,QAAQ;AAC3B,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,QAAQ;AAC3B,qBAAoB;AACpB;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,QAAQ;AAC3B,qBAAoB;AACpB;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,QAAQ;AAC3B,oBAAmB,QAAQ;AAC3B,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,QAAQ;AAC3B,oBAAmB,QAAQ;AAC3B,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,QAAQ;AAC3B,oBAAmB,QAAQ;AAC3B,qBAAoB;AACpB;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,QAAQ;AAC3B,oBAAmB,QAAQ;AAC3B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,QAAQ;AAC3B,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,QAAQ;AAC3B,oBAAmB,QAAQ;AAC3B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,QAAQ;AAC3B,oBAAmB,QAAQ;AAC3B,qBAAoB;AACpB;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,QAAQ;AAC3B,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,QAAQ;AAC3B,oBAAmB,QAAQ;AAC3B,oBAAmB,QAAQ;AAC3B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,QAAQ;AAC3B,oBAAmB,QAAQ;AAC3B,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,qBAAoB,QAAQ;AAC5B,qBAAoB,QAAQ;AAC5B,qBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,qBAAoB,QAAQ;AAC5B,qBAAoB,QAAQ;AAC5B,qBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACrRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA,UAAS;AACT;AACA;AACA,oBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,oBAAmB,4BAA4B;AAC/C,oBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,oBAAmB,4BAA4B;AAC/C,oBAAmB,4BAA4B;AAC/C,oBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,oBAAmB,4BAA4B;AAC/C,oBAAmB,4BAA4B;AAC/C,oBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,oBAAmB,4BAA4B;AAC/C,oBAAmB,4BAA4B;AAC/C,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,oBAAmB,4BAA4B;AAC/C,oBAAmB,4BAA4B;AAC/C,oBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,oBAAmB,4BAA4B;AAC/C,oBAAmB,4BAA4B;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC5JA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,2BAA2B;AAC1C,gBAAe,4BAA4B;AAC3C;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,QAAQ;AAC3B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,QAAQ;AAC3B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,2BAA2B;AAC9C,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET,oCAAmC;;AAEnC;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACxJA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAoB,eAAe;AACnC;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA,qBAAoB,OAAO;AAC3B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAe,sBAAsB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA,aAAY;AACZ;;AAEA;;;;;;;;;;;ACjNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACzBA;AACA;;AAEA;;AAEA;AACA;AACA,wBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACVA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,2BAA2B;AAC1C,gBAAe,2BAA2B;AAC1C;AACA;;AAEA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAkB,cAAc,gBAAgB;AAChD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,UAAS;;;AAGT;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,0DAAyD;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iDAAgD,QAAQ;AACxD;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAAyB;AACzB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;;AAEA;;AAEA;;;;;;;;;;;;ACzLA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,eAAe;AAClC;AACA,oBAAmB,eAAe;AAClC,oBAAmB,SAAS;AAC5B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAgC,cAAc;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA4B;AAC5B;AACA;AACA;AACA;AACA,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;;AAEb,qBAAoB;AACpB;;AAEA;AACA;AACA,gCAA+B;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;;;;;;;;;;AC9KA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,+BAA+B;AAC9C,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;;AAEA;AACA;AACA,gBAAe,+BAA+B;AAC9C,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;;AAEA;AACA;AACA,gBAAe,+BAA+B;AAC9C,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,cAAc;AAC7B,gBAAe,cAAc;AAC7B,gBAAe,cAAc;AAC7B,gBAAe,cAAc;AAC7B,gBAAe,OAAO;AACtB,gBAAe,cAAc;AAC7B,iBAAgB,OAAO,EAAE;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,cAAc;AAC7B,gBAAe,cAAc;AAC7B,gBAAe,cAAc;AAC7B,gBAAe,cAAc;AAC7B,gBAAe,cAAc;AAC7B,gBAAe,cAAc;AAC7B,gBAAe,cAAc;AAC7B,gBAAe,OAAO;AACtB,gBAAe,cAAc;AAC7B;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS,UAAU,GAAG;AACtB;AACA;AACA,gBAAe,+BAA+B;AAC9C,gBAAe,OAAO;AACtB,gBAAe,cAAc;AAC7B,gBAAe,cAAc;AAC7B,gBAAe,cAAc;AAC7B,gBAAe,cAAc;AAC7B,gBAAe,OAAO;AACtB,gBAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAgC,oBAAoB,cAAc;AAClE;AACA,SAAQ,SAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,cAAc;AAC7B,gBAAe,QAAQ;AACvB;AACA;AACA,2CAA0C;AAC1C,iDAAgD;AAChD,kDAAiD;AACjD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb,kCAAiC,uBAAuB;AACxD,kCAAiC,WAAW,iBAAiB,WAAW;AACxE;AACA;AACA;AACA;AACA;AACA,kCAAiC,uBAAuB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,kBAAkB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA,0CAAyC;AACzC;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;;;;;;;;;;;;AC5YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,gFAA+E;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;AC3BA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;;AAEA;;;;;;;;;;AChBA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,4BAA2B,8BAA8B;AACzD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;ACzCA;AACA;AACA;AACA,aAAY;AACZ;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,IAAI;AAC3B,yBAAwB,IAAI;AAC5B,4BAA2B,IAAI;AAC/B;AACA,qBAAoB,YAAY;AAChC,qBAAoB,YAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,IAAI;AAC/B,6BAA4B,IAAI;AAChC;AACA,yBAAwB,YAAY;AACpC,yBAAwB,YAAY;AACpC;AACA;AACA,iBAAgB;AAChB,2BAA0B,IAAI;AAC9B;AACA,qBAAoB,QAAQ,IAAI,WAAW,aAAa;AACxD,qBAAoB,QAAQ,IAAI,WAAW,aAAa;AACxD;AACA;AACA;AACA;AACA,gCAA+B,cAAc;AAC7C,iCAAgC,SAAS,MAAM,cAAc;AAC7D,qBAAoB;AACpB;AACA,gCAA+B,6BAA6B;AAC5D,iCAAgC,SAAS,OAAO,cAAc;AAC9D,qBAAoB;AACpB;AACA,iCAAgC,SAAS,QAAQ,cAAc;AAC/D;AACA;AACA;AACA;AACA;AACA,gBAAe,4BAA4B;AAC3C;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC,WAAW,gBAAgB,MAAM;AACjE,iCAAgC,WAAW,eAAe,MAAM;;AAEhE;;AAEA;;AAEA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,4BAA4B;AAC/C,oBAAmB,iBAAiB;AACpC,qBAAoB,OAAO;AAC3B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,oBAAmB,QAAQ;AAC3B,qBAAoB;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,oBAAmB,4BAA4B;AAC/C,qBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA,oBAAmB,4BAA4B;AAC/C,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oDAAmD,SAAS;AAC5D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,kBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA8B;AAC9B;AACA,+BAA8B;AAC9B;AACA;AACA;AACA;AACA,+BAA8B,uBAAuB;AACrD;AACA;AACA,+BAA8B,uBAAuB;AACrD,4CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,UAAS;AACT;;AAEA;;;;;;;;;;ACjbA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,uBAAsB;AACtB;AACA;AACA;;AAEA;;AAEA;AACA,uBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,qBAAoB,OAAO;AAC3B,qBAAoB,4BAA4B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,gCAA+B,iBAAiB;AAChD;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,uCAAsC;;AAEtC;AACA,oBAAmB,OAAO;AAC1B,qBAAoB;AACpB;AACA;AACA;AACA,UAAS;;AAET;AACA,oBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,qBAAoB,eAAe;AACnC;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,oBAAmB,cAAc;AACjC,qBAAoB;AACpB;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,qBAAoB,KAAK;AACzB;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,QAAQ;AAC3B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,8DAA6D,iBAAiB;AAC9E,uCAAsC,UAAU,WAAW;;AAE3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,MAAK;;AAEL;AACA;;AAEA;;;;;;;;;;;;ACxQA;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,yCAAwC;;AAExC,oEAAmE;;AAEnE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iDAAgD,yBAAyB;;AAEzE;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA,qBAAoB;AACpB;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,qBAAoB,OAAO;AAC3B,qBAAoB;AACpB;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,qBAAoB,OAAO;AAC3B,qBAAoB;AACpB;AACA;AACA;AACA,4BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,qBAAoB;AACpB;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,uBAAuB;AAC1C;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,uBAAuB;AAC1C,oBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,qBAAoB,SAAS;AAC7B,sBAAqB;AACrB;AACA;AACA;AACA,4BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,qBAAoB,SAAS;AAC7B,sBAAqB;AACrB;AACA;AACA,4BAA2B,2BAA2B;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,4BAA2B,2BAA2B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,4BAA2B,2BAA2B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;ACnTA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB,kBAAiB;AACjB,kBAAiB;AACjB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,qCAAoC;AACpC;AACA;AACA;AACA,oCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,qBAAoB,SAAS;AAC7B,sBAAqB;AACrB;AACA,4CAA2C;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,oBAAmB,cAAc;AACjC,oBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,UAAS;;AAET;AACA,oBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,oBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,sBAAsB;AACrD;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,oBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,sBAAsB;AACrD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;ACrQA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,SAAS;AAC5B,oBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,SAAS;AAC5B,oBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA,UAAS;;AAET;AACA;AACA,qBAAoB,OAAO;AAC3B,qBAAoB;AACpB;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,SAAS;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0DAAyD,OAAO;AAChE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gCAA+B,SAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAA+B,SAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;;AAEA;;;;;;;;;;;ACvSA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACrPA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,QAAQ;AAC3B,qBAAoB;AACpB;AACA;AACA,iCAAgC,MAAM;AACtC,qCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAwD,OAAO;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,cAAa;;AAEb;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA,4BAA2B,SAAS;AACpC;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA,cAAa,eAAe,UAAU;AACtC;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,cAAa,qCAAqC,UAAU;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;ACvQA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA,iBAAgB,MAAM;AACtB,iBAAgB,MAAM;AACtB,iBAAgB,OAAO;AACvB,iBAAgB,MAAM;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA,4BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA,4BAA2B,SAAS;AACpC,gCAA+B,UAAU;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC,aAAa;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,UAAU;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAgB,MAAM;AACtB,iBAAgB,MAAM;AACtB,iBAAgB,OAAO;AACvB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,SAAS;AACpC,gCAA+B,UAAU;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB,MAAM;AACtB,iBAAgB,MAAM;AACtB,iBAAgB,MAAM;AACtB,iBAAgB,MAAM;AACtB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,MAAM;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,SAAS;AACpC,gCAA+B,UAAU;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gCAA+B,SAAS;AACxC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,cAAc;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC,YAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,kBAAkB;AACzgBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,UAAS;AACT;AACA;AACA,qBAAoB,SAAS;AAC7B,qBAAoB;AACpB;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA2B,SAAS;AACpC;AACA;AACA,UAAS;AACT;AACA;AACA,qBAAoB,gBAAgB;AACpC,8BAA6B;AAC7B,qBAAoB;AACpB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oCAAmC,8BAA8B;AACjE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA,4BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,qBAAoB,OAAO;AAC3B,qBAAoB;AACpB;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,qBAAoB,SAAS;AAC7B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;AC1mBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,iEAAgE;AAChE;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACzGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAkB,OAAO;AACzB,oBAAmB;AACnB;AACA;AACA;AACA,UAAS;;AAET;AACA,mBAAkB,OAAO;AACzB,oBAAmB;AACnB;AACA;AACA;AACA,UAAS;AACT;AACA,mBAAkB,OAAO;AACzB,oBAAmB;AACnB;AACA;AACA;AACA,UAAS;AACT;AACA,mBAAkB,OAAO;AACzB,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,mBAAkB,OAAO;AACzB,oBAAmB;AACnB;AACA;AACA;AACA,UAAS;AACT;AACA,mBAAkB,OAAO;AACzB,oBAAmB;AACnB;AACA;AACA;AACA,UAAS;AACT;AACA,mBAAkB,OAAO;AACzB,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,mBAAkB,OAAO;AACzB,oBAAmB;AACnB;AACA;AACA;AACA,UAAS;AACT;AACA,mBAAkB,OAAO;AACzB,oBAAmB;AACnB;AACA;AACA;AACA,UAAS;AACT;AACA,mBAAkB,OAAO;AACzB,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,mBAAkB,OAAO;AACzB,oBAAmB;AACnB;AACA;AACA;AACA,UAAS;AACT;AACA,mBAAkB,OAAO;AACzB,oBAAmB;AACnB;AACA;AACA;AACA,UAAS;AACT;AACA,mBAAkB,OAAO;AACzB,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,mBAAkB,OAAO;AACzB,oBAAmB;AACnB;AACA;AACA;AACA,UAAS;AACT;AACA,mBAAkB,OAAO;AACzB,oBAAmB;AACnB;AACA;AACA;AACA,UAAS;AACT;AACA,mBAAkB,OAAO;AACzB,oBAAmB;AACnB;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,mBAAkB,OAAO;AACzB,oBAAmB;AACnB;AACA;AACA;AACA,UAAS;AACT;AACA,mBAAkB,OAAO;AACzB,oBAAmB;AACnB;AACA;AACA;AACA,UAAS;AACT;AACA,mBAAkB,OAAO;AACzB,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,mBAAkB,OAAO;AACzB,oBAAmB;AACnB;AACA;AACA;AACA,UAAS;AACT;AACA,mBAAkB,OAAO;AACzB,oBAAmB;AACnB;AACA;AACA;AACA,UAAS;AACT;AACA,mBAAkB,OAAO;AACzB,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,mBAAkB,OAAO;AACzB,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,mBAAkB,OAAO;AACzB,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,mBAAkB,OAAO;AACzB,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAS;;AAET;AACA;AACA,mBAAkB,OAAO;AACzB,oBAAmB;AACnB;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,mBAAkB,OAAO;AACzB,oBAAmB;AACnB;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,mBAAkB,OAAO;AACzB,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,mBAAkB,OAAO;AACzB,oBAAmB;AACnB;AACA;AACA;AACA,UAAS;AACT;AACA,mBAAkB,OAAO;AACzB,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,mBAAkB,OAAO;AACzB,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACtVA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA8B;AAC9B,2BAA0B;AAC1B;AACA;;AAEA,gCAA+B;AAC/B,2BAA0B;AAC1B;AACA;;AAEA,gCAA+B;AAC/B;AACA;;AAEA,gCAA+B;AAC/B;AACA;AACA;AACA;AACA;;AAEA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gDAA+C;AAC/C;;AAEA;AACA;AACA;AACA,sDAAqD;AACrD;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAqD;AACrD;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,yDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAe,eAAe;AAC9B,iBAAgB,eAAe;AAC/B;AACA;AACA,mEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAe,eAAe;AAC9B,iBAAgB,eAAe;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sCAAqC;AACrC,sCAAqC;AACrC,iCAAgC;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,4BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,uBAAuB;AACtC,gBAAe,eAAe;AAC9B,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,eAAe;AAC9B,gBAAe,SAAS;AACxB,iBAAgB,gBAAgB;AAChC,0CAAyC,wDAAwD;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,gBAAe,QAAQ;AACvB,gBAAe,QAAQ;AACvB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAe,eAAe;AAC9B,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzdA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;ACrBA;AACA;AACA;;AAEA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,qBAAoB,4BAA4B;AAChD,qBAAoB,4BAA4B;AAChD;AACA,yCAAwC;;AAExC;AACA;AACA,qBAAoB,4BAA4B;AAChD,qBAAoB,4BAA4B;AAChD,qBAAoB,4BAA4B;AAChD,qBAAoB,OAAO;AAC3B;AACA,iEAAgE;;AAEhE;AACA;AACA,qBAAoB,4BAA4B;AAChD,qBAAoB,4BAA4B;AAChD,qBAAoB,4BAA4B;AAChD,qBAAoB,OAAO;AAC3B;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,qBAAoB,4BAA4B;AAChD,qBAAoB,4BAA4B;AAChD,qBAAoB,4BAA4B;AAChD,qBAAoB,OAAO;AAC3B;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,qBAAoB,4BAA4B;AAChD,qBAAoB,4BAA4B;AAChD;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,qBAAoB,4BAA4B;AAChD,qBAAoB,4BAA4B;AAChD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB,uBAAuB;AACvC,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA,gCAA+B,qBAAqB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,yBAAyB;AACzC,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sDAAqD,SAAS;AAC9D;AACA;AACA;AACA;AACA;AACA,gDAA+C,SAAS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA,6CAA4C,yBAAyB;;AAErE;;;;;;;;;;AC3IA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,iCAAiC;AAChD,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,gBAAe,4BAA4B;AAC3C,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,uBAAuB;AACtC,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,2BAA2B;AAC1C,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,uBAAuB;AACtC,gBAAe,OAAO;AACtB,gBAAe,2BAA2B;AAC1C,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB;AACA;AACA;AACA,aAAY,uCAAuC,gCAAgC,EAAE;AACrF;AACA;AACA;AACA,aAAY,4BAA4B,gCAAgC,EAAE;AAC1E;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,uBAAuB;AACtC,gBAAe,OAAO;AACtB,gBAAe,2BAA2B;AAC1C,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,mCAAmC;AAClD,gBAAe,mCAAmC;AAClD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAe,eAAe;AAC9B,gBAAe,eAAe;AAC9B,gBAAe,SAAS;AACxB,iBAAgB,eAAe;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAe,OAAO;AACtB,gBAAe,eAAe;AAC9B,gBAAe,SAAS;AACxB,iBAAgB,OAAO;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;;;;;;;;;;;;ACriBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,eAAe;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA2B,cAAc;AACzqBAAoB,OAAO;AAC3B;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;AChZA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,yDAAwD;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,qBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,oBAAmB,cAAc;AACjC,oBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;;;;;;;;;ACpWA;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA,uCAAsC;;AAEtC,sCAAqC;;AAErC;AACA;AACA,oBAAmB,yBAAyB;AAC5C;AACA;AACA,yCAAwC;;AAExC;AACA;AACA,qBAAoB;AACpB;AACA;AACA,wCAAuC;;AAEvC;AACA;AACA;AACA,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB;AACpB;AACA;AACA;AACA,UAAS;;AAET;AACA,qBAAoB,SAAS;AAC7B,sBAAqB;AACrB;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,oBAAmB,cAAc;AACjC,oBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,qBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;;;;;;;;;AC3QA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA,oBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;;AAEA,4BAA2B,+BAA+B;AAC1D;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,sBAAsB;AACzC,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,cAAc;AACjC,oBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,qBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,4BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,+BAA+B;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;ACpSA;AACA;AACA;AACA;;;;AAIA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,qBAAoB,uBAAuB;AAC3C,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;ACpIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB;AAChB;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA,qBAAoB,yBAAyB;AAC7C,qBAAoB;AACpB;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,UAAS;;AAET;AACA,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,UAAS;;AAET;AACA,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,QAAQ;AAC5B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,qBAAoB;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,oBAAmB,yBAAyB;AAC5C,qBAAoB;AACpB;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,oBAAmB,yBAAyB;AAC5C,qBAAoB;AACpB;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;;AAEA;;AAEA;AACA,gCAA+B,qBAAqB;AACpD;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,4BAA2B,SAAS;AACpC;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,oEAAoE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA,4BAA2B,SAAS;AACpC;AACA,gCAA+B,2BAA2B;AAC1D;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,sBAAsB;AACjD;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,gCAA+B,eAAe;AAC9C;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAkB,aAAa;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,qBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,4BAA2B,iBAAiB;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,oBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,SAAS;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;AC7vBA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,eAAe;AAC/B,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,iCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qCAAoC;AACpC,iCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,eAAe;AAC/B,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,eAAe;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,eAAe;AAC9B,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,yBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,eAAe;AAC/B,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,eAAe;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,eAAe;AAC9B,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,yBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;;;;;;;;;AC3hBA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,cAAc;AAC7B,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,eAAe;AAC9B,gBAAe,eAAe;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,eAAe;AAC9B,gBAAe,eAAe;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,eAAe;AAC9B,gBAAe,eAAe;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,eAAe;AAC9B,gBAAe,eAAe;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA2B,kBAAkB;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACpOA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,YAAY;AACvC;;AAEA;AACA;;AAEA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,YAAY;AAC3C;AACA;;AAEA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,iBAAiB;AACxqBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACvCA;;AAEA;AACA;AACA;AACA,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtCA;;AAEA;AACA;AACA;AACA,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpCA;AACA;;AAEA;AACA;AACA;AACA,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,QAAQ;AAC5B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;;;;;;AClBA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;ACdA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA0B,iBAAiB;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,YAAY;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC5FA;AACA,gBAAe,eAAe;AAC9B;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA,cAAa;AACb;AACA;;AAEA;;;;;;;;;;ACxBA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,iCAAiC;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;AC3JA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB,8BAA8B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB,8BAA8B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA,iBAAgB,OAAO;AACvB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACxKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,gCAA+B,sBAAsB;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;AC3HA;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;;AAGT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;;;;;;;;;;AC7BL;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,UAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;;;;;;;;;;AC3DL;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;;;;;;;;;;AC1BL;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA,MAAK;;;;;;;;;;;;ACrBL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAmC,iCAAiC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uDAAsD,OAAO;AAC7D;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,QAAQ;AACvB,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,SAAS;AAChC;AACA;;AAEA;AACA;AACA,wBAAuB,UAAU;AACjC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,gBAAe,MAAM;AACrB;AACA;AACA,gBAAe,MAAM;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iDAAgD,SAAS;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6CAA4C,SAAS;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;ACnGA;AACA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA,UAAS;;AAET;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA,MAAK;;;;;;;;;;AC5BL;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;;;;;;;;;;;;ACtCL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACxFA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,qBAAoB,OAAO;AAC3B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;;;;;;;;;;ACzDL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,qBAAoB,OAAO;AAC3B,qBAAoB;AACpB;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,qBAAoB,OAAO;AAC3B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,MAAK;;;;;;;;;;;ACrIL;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,UAAS;;AAET;;AAEA;;AAEA;AACA,UAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;;;;;;;;;AC/CL;;;AAGA;AACA;;AAEA;;AAEA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA,4BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,4BAA2B,kBAAkB;AAC7C;AACA;AACA,UAAS;;AAET;AACA;AACA,4BAA2B,kBAAkB;AAC7C;AACA;AACA,UAAS;;AAET;AACA;AACA,4BAA2B,kBAAkB;AAC7C;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,MAAK;;;;;;;;;;ACpDL;;;AAGA;;AAEA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,eAAe;AAC9B,gBAAe,QAAQ;AACvB;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;;;;;;;;;ACzCA;;;AAGA;;AAEA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,eAAe;AAC9B,gBAAe,QAAQ;AACvB;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,wBAAuB;;AAEvB;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA,gBAAe,YAAY;AAC3B,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,uBAAuB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,eAAe;AAC9B,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;;AAEA;;AAEA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,qBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,qBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,qBAAoB,uBAAuB;AAC3C,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,qBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,qBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,qBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA,iBAAgB;AAChB,aAAY;;AAEZ;AACA;AACA;AACA,oBAAmB,4BAA4B;AAC/C,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,SAAS;AAC5B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,SAAS;AAC5B;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA,UAAS;;;AAGT;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;ACrZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,YAAY;AAC3B,gBAAe,uBAAuB;AACtC,gBAAe,uBAAuB;AACtC;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;;;AAGA;;AAEA;AACA;AACA,UAAS;AACT;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,mCAAmC;AACtD;AACA;AACA;AACA;AACA,0CAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;ACrRA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;ACjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,qBAAoB,SAAS;AAC7B;AACA;AACA;AACA,4BAA2B,wBAAwB;AACnD;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,QAAQ;AAC3B,oBAAmB,QAAQ;AAC3B;AACA,eAAc;AACd,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA,gDAA+C,SAAS;AACxD;AACA;AACA;;AAEA,yDAAwD,SAAS;AACjE;AACA;;AAEA;AACA;AACA,UAAS;;AAET;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gCAA+B,qBAAqB;AACpD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA,gCAA+B,wBAAwB;AACvD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iDAAgD,OAAO;AACvD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;;;;;;;;;;;AC1QA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,eAAc,YAAY;AAC1B;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wBAAuB,aAAa;AACpC;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,4BAA2B,aAAa;AACxC;AACA;AACA;AACA;;AAEA;AACA,4BAA2B,aAAa;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oCAAmC,YAAY;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,oCAAmC,YAAY;AAC/C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,4BAA2B,aAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,aAAa;AACxC;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wBAAuB,aAAa;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,4BAA2B,aAAa;AACxC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,sCAAqC,QAAQ;AAC7C;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,6CAA4C,QAAQ;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,oCAAmC,YAAY;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,sCAAqC,QAAQ;AAC7C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,aAAa;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;;;;;;;;;;AClqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA,kBAAiB,OAAO;AACxB,mBAAkB,SAAS;AAC3B;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,gBAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,oBAAmB,8BAA8B;AACjD;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,oBAAmB,kCAAkC;AACrD;AACA;AACA;AACA;AACA,4BAA2B,kBAAkB;AAC7C;AACA;AACA,UAAS;AACT;AACA;AACA,oBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,kCAAkC;AACrD;AACA;AACA;AACA,4BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA,UAAS;;AAET;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA2B,SAAS;AACpC;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B,qBAAoB,QAAQ;AAC5B,qBAAoB,SAAS;AAC7B;AACA,qBAAoB,SAAS;AAC7B;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;;ACrNA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA,yEAAwE;AACxE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AChGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,MAAM;AACzB;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA,oBAAmB,MAAM;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA,oBAAmB,MAAM;AACzB;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA,oBAAmB,MAAM;AACzB;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA,oBAAmB,MAAM;AACzB;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAe,uBAAuB;AACtC;AACA;AACA,wBAAuB,8BAA8B;AACrD;AACA;AACA;;AAEA,wBAAuB,8BAA8B;AACrD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA,wBAAuB,yBAAyB;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;AC5QA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kDAAiD,SAAS;AAC1D;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,sDAAqD;AACrD,sDAAqD;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;ACtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAAyC;AACzC;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gDAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,YAAY;AAC3B,gBAAe,uBAAuB;AACtC,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA,mBAAkB;AAClB,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA,UAAS;AACT;AACA,qBAAoB;AACpB;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,QAAQ;AAC3B;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,4BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,4BAA2B,0BAA0B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,6CAA4C,OAAO;AACnD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA2B,aAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,wBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,6BAA6B;AAChD;AACA;AACA;AACA,UAAS;;AAET;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA,6CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,4BAA2B,wBAAwB;AACnD;AACA;AACA;;AAEA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACjiCA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,uBAAuB;AACtC,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB;AACvB,6CAA4C;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA,qBAAoB,OAAO;AAC3B,qBAAoB,OAAO;AAC3B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACtOA;AACA;AACA;AACA;AACA,gBAAe,4BAA4B;AAC3C,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;;;;;;;;;;AC/FA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA4E;;AAE5E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;;;;;;;;;;ACjCA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA2B,gCAAgC;AAC3D;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,UAAS;AACT;;;;;;;;;;;;ACrGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,mBAAmB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,mBAAmB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC1EA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,eAAe;AAC9B;AACA,gBAAe,2BAA2B;AAC1C;AACA;;AAEA;;AAEA;AACA;AACA,wBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA,oBAAmB;AACnB;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA,gBAAe,cAAc;AAC7B;AACA;AACA,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,4BAA4B;AAC3C,gBAAe,eAAe;AAC9B,gBAAe,SAAS;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,wBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAAyB,mBAAmB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,wBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,eAAe;AAC9B,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,iBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iDAAgD,SAAS;AACzD;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA;AACA,iDAAgD,SAAS;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,4DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,SAAS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA,gDAA+C,SAAS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kDAAiD,SAAS;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA,8CAA6C,SAAS;AACtD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gDAA+C,SAAS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,iBAAgB;AAChB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe;AACf,gBAAe,SAAS;AACxB,gBAAe,QAAQ;AACvB,gBAAe,EAAE;AACjB;AACA;AACA,4CAA2C;AAC3C,sDAAqD;AACrD,oCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,wBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC,aAAa;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe;AACf,gBAAe,SAAS;AACxB,gBAAe,QAAQ;AACvB,gBAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,wBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,aAAa;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAe,sBAAsB;AACrC,gBAAe,SAAS;AACxB,gBAAe,QAAQ;AACvB,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,0BAA0B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,sBAAsB;AACrC,gBAAe,SAAS;AACxB,gBAAe,QAAQ;AACvB,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,qBAAqB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,+BAA+B;AACtD;AACA;AACA,wBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA,4BAA2B,eAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,yBAAyB;AACxC,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,cAAc;AAC7B,gBAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB,OAAO;AACvB,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB;AACA;AACA;AACA,yDAAwD;AACxD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,cAAc;AAC7B,gBAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,uBAAuB;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA,gBAAe,SAAS;AACxB,gBAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;AACA;;AAEA;AACA,4CAA2C;AAC3C;;AAEA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACnmCA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,mBAAmB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA2B,0BAA0B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD,SAAS;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACxHA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,yCAAyC;AACxD,gBAAe,4BAA4B;AAC3C;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;;AAEb;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD,sBAAsB;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB,4BAA4B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;;AAEA;;AAEA;;;;;;;;;;;;ACnbgBAAe,2BAA2B;AAC1C,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAe,eAAe;AAC9B,gBAAe,eAAe;AAC9B,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC,MAAM;AAC/C;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;AC9NA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,cAAc;AACjC,qBAAoB;AACpB;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,qBAAoB;AACpB;AACA;AACA;AACA,UAAS;;AAET;AACA,qBAAoB;AACpB;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,MAAK;;AAEL;AACA,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;;;;;;;;;;AC7FA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,gBAAe,EAAE;AACjB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,eAAe;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA,wBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;;;;;;;;;;ACzHA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA,4BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA,UAAS;;AAET;AACA,oBAAmB,OAAO;AAC1B,qBAAoB;AACpB;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,QAAQ;AAC3B,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACjNA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;;;;;;;;;;AC/JA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA,oBAAmB,OAAO;AAC1B,qBAAoB;AACpB;AACA;;AAEA;AACA,qBAAoB,OAAO;AAC3B,qBAAoB;AACpB;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,qBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,qBAAoB,eAAe;AACnC;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,qBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,QAAQ;AAC3B,oBAAmB,QAAQ;AAC3B;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;;;;;;;;;;AChIA;;;AAGA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,eAAe;AAClC,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,eAAe;AAClC,qBAAoB;AACpB;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,yBAAyB;AAC5C,oBAAmB,QAAQ;AAC3B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA,oBAAmB,eAAe;AAClC,oBAAmB,QAAQ;AAC3B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,oBAAmB,eAAe;AAClC,oBAAmB,QAAQ;AAC3B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,sCAAsC;AACzD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;AC7GA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,qBAAoB,cAAc;AAClC,qBAAoB;AACpB;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB;AACnB;AACA;AACA;;AAEA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,uCAAuC;AAC1D,qBAAoB;AACpB;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,qBAAoB,uCAAuC;AAC3D,qBAAoB;AACpB;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;;AAEA,4BAA2B,oBAAoB;AAC/C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;AC7GA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB,gBAAe,OAAO;AACtB,gBAAe,EAAE;AACjB,gBAAe,eAAe;AAC9B,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA,oBAAmB;AACnB;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,qBAAoB,OAAO;AAC3B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;ACjHA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,oBAAmB,OAAO;AAC1B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,qBAAoB;AACpB;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,eAAe;AAClC,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,qBAAoB,QAAQ;AAC5B,qBAAoB;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,qBAAoB,QAAQ;AAC5B,qBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,UAAS;AACT;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,gCAA+B,kBAAkB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;AC1NA;AACA;AACA;AACA;;;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACxBA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,WAAW;AAClC,yBAAwB,YAAY;AACpC;AACA;AACA;AACA;AACA,MAAK;;;;;;;;;;ACrCL;;;AAGA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;ACvGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,+BAA+B;AAC9C,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,kBAAiB;;AAEjB;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtDA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,0BAAyB;AACzB;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,qCAAoC;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnJA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;;;;;;;;;ACrCA;;;AAGA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,MAAK;;;;;;;;;;ACxEL;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,6CAA4C;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,sBAAqB,YAAY;AACjC,sBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC,aAAa;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;AC1QA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA,iBAAgB,eAAe;AAC/B,iBAAgB,MAAM;AACtB,iBAAgB,eAAe;AAC/B,iBAAgB,OAAO;AACvB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wBAAuB,aAAa;AACpC;AACA;AACA;AACA,wBAAuB;AACvB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,2CAA0C,SAAS;AACnD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;AC9DA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,4CAA2C;AAC3C,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAqB;;AAErB;;AAEA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA,0BAAyB;AACzB;AACA,kBAAiB;AACjB;;AAEA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA,0BAAyB;AACzB,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;;;;;;;;;;;;ACjNL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC3BA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAa;AACb,UAAS;;AAET;AACA;;AAEA;AACA,gBAAe,OAAO;AACtB,gBAAe,4BAA4B;AAC3C,gBAAe,4BAA4B;AAC3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;;AAEb,UAAS;AACT;;AAEA;;;;;;;;;;AClOA;;;AAGA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA,kBAAiB;AACjB;AACA;AACA,MAAK;;;;;;;;;;AC3BL;AACA;;;AAGA;;AAEA;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA,UAAS;;AAET;AACA,oBAAmB,yCAAyC;AAC5D,oBAAmB,yCAAyC;AAC5D,oBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA2B,wBAAwB;AACnD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,sBAAqB;AACrB;AACA,kBAAiB;AACjB;AACA,UAAS;;AAET;AACA,oBAAmB,yCAAyC;AAC5D,oBAAmB,yCAAyC;AAC5D,oBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,4BAA2B,wBAAwB;AACnD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,sBAAqB;AACrB;AACA,kBAAiB;;AAEjB;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,iBAAgB,oEAAoE;AACpF,iBAAgB;AAChB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uBAAsB;;AAEtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;ACpRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,+BAA+B;AAC9C,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,eAAe;AAC9B,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA,gBAAe,OAAO;AACtB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,sBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA2B,wBAAwB;AACnD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,UAAS;;AAET;AACA,oBAAmB,yCAAyC;AAC5D,oBAAmB,yCAAyC;AAC5D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA2B,kBAAkB;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA,kBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,wDAAuD;AACvD;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA,sBAAqB;AACrB;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gDAA+C;AAC/C;AACA;AACA;AACA,0DAAyD;AACzD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACjlBA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,sBAAqB,8BAA8B;;AAEnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAkB,OAAO;AACzB;AACA;AACA,mBAAkB,OAAO;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,cAAa;;AAEb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,cAAa;;AAEb;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA,MAAK;;;;;;;;;;AC/ML;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;ACXA;;;AAGA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,gCAA+B,uBAAuB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,uBAAsB;AACtB;AACA;AACA;AACA,UAAS;;AAET;AACA,qBAAoB;AACpB;AACA;AACA;AACA,UAAS;;AAET;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,UAAS;;AAET;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;;;;;;;;;;AC9LA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd,mBAAkB,OAAO;AACzB,mBAAkB,OAAO;AACzB,mBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAc;AACd,mBAAkB,OAAO;AACzB,mBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAc;AACd,mBAAkB,OAAO;AACzB,mBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC9EA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAqB;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,+CAA8C,KAAK;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;AACb;;AAEA;AACA;AACA,cAAa;;AAEb;;;;AAIA;;AAEA;;AAEA;AACA;AACA,MAAK;;;;;;;;;;ACtQL;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,eAAc;AACd;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,sEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;AC9VA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,2BAA2B;AAC9C,oBAAmB,+BAA+B;AAClD,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA;;;;;;;;;;;AC9DA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,gCAA+B,yBAAyB;AACxD;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA,KAAY,KAAK,uBAAM,eACvB,CAAC,CAD6B;AAC9B,kCAAyB,eAAM,CAAC;AAChC,aAAY,CAAC;AASb;;IAEG;AACH;KAA6B,kCAAyD;KAClF,wBAAY,KAAK;SACb,kBAAM,KAAK,CAAC,CAAC;SACb,IAAI,CAAC,KAAK,GAAG,EAAE;KACnB,CAAC;KAID,+BAAM,GAAN;SACI,MAAM,CAAC,CACH,oBAAC,UAAG,GAAC,SAAS,EAAC,aAAa,GACxB,oBAAC,UAAG,GAAC,IAAI,EAAE,EAAG,EAAC,SAAS,EAAC,qBAAqB,GAC1C,qBAAC,GAAG,IAAC,SAAS,EAAC,YAAY,GACvB,qBAAC,GAAG,IAAC,GAAG,EAAC,mCAAmC,EAAE,EAC9C,qBAAC,GAAG,IAAC,SAAS,EAAC,MAAM,UAEjB,qBAAC,IAAI,IAAC,SAAS,EAAC,cAAc,SAAW,CACvC,EACN,qBAAC,GAAG,IAAC,SAAS,EAAC,aAAa,GACxB,qBAAC,IAAI,IAAC,SAAS,EAAC,UAAU,eAAiB,EAC3C,qBAAC,IAAI,IAAC,SAAS,EAAC,2BAA2B,oBAAsB,CAC/D,CACJ,CACJ,EACN,oBAAC,UAAG,GAAC,IAAI,EAAE,CAAE,EAAC,SAAS,EAAC,oBAAoB,GACxC,qBAAC,GAAG,IAAC,SAAS,EAAC,iBAAiB,GAC5B,qBAAC,GAAG,IAAC,SAAS,EAAC,OAAO,YAAa,EACnC,qBAAC,GAAG,IAAC,SAAS,EAAC,mBAAmB,WAE9B,qBAAC,IAAI,IAAC,SAAS,EAAC,kBAAkB,SAAW,CAC3C,EACN,qBAAC,GAAG,IAAC,SAAS,EAAC,mBAAmB,eAE9B,qBAAC,IAAI,IAAC,SAAS,EAAC,iBAAiB,QAAU,CACzC,CACJ,CAGJ,CACJ,CACT;KACL,CAAC;KAnCM,2BAAY,GAAG,EAAE,CAAC;KAoC7B,qBAAC;AAAD,EAAC,CA1C4B,KAAK,CAAC,SAAS,GA0C3C;AAED,kBAAS,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1DvB,KAAY,KAAK,uBAAM,eACvB,CAAC,CAD6B;AAC9B,KAAO,cAAc,uBAAW,sCAA6B,CAAC;AAC9D,KAAO,QAAQ,uBAAW,6CAAoC,CAAC;AAC/D,KAAO,kBAAkB,uBAAW,yCAAgC,CAAC;AACrE,KAAO,iBAAiB,uBAAW,wCAA+B,CAAC;AACnE,aAAY,CAAC;AAUb;KAAyB,8BAAiD;KACtE,oBAAY,KAAK;SACb,kBAAM,KAAK,CAAC,CAAC;SACb,IAAI,CAAC,KAAK,GAAG,EAAE;KACnB,CAAC;KAID,2BAAM,GAAN;SACI,IAAI,MAAM,GAAG;aACT,EAAC,OAAO,EAAC,WAAW,EAAC,UAAU,EAAC,oBAAC,kBAAkB,OAAG,EAAE;aACxD,EAAC,OAAO,EAAC,OAAO,EAAC,UAAU,EAAC,oBAAC,iBAAiB,OAAG,EAAC;UACrD,CAAC;SAEF,MAAM,CAAC,CACH,qBAAC,GAAG,SACA,oBAAC,cAAc,OAAG,EAClB,qBAAC,GAAG,IAAC,SAAS,EAAC,mCAAmC,GAC9C,oBAAC,QAAQ,GAAC,IAAI,EAAE,MAAO,EAAG,CACxB,CAEJ,CACT;KACL,CAAC;KAjBM,uBAAY,GAAG,EAAE,CAAC;KAkB7B,iBAAC;AAAD,EAAC,CAxBwB,KAAK,CAAC,SAAS,GAwBvC;AAED,kBAAS,UAAU;;;;;;;;;;;;;;;;ACzCnB,KAAY,KAAK,uBAAM,eAEvB,CAAC,CAF6B;AAC9B,kBAAiB;AACjB,KAAI,OAAO,GAAG,mBAAO,CAAC,8BAAqB,CAAC;AAC5C,KAAY,QAAQ,uBAAM,sCAC1B,CAAC,CADsD;AACvD,KAAY,WAAW,uBAAM,6DAE7B,CAAC,CAFgF;AACjF,QAAO;AACP,oBAAO,CAAC,gCAAuB,CAAC;AAChC,oBAAO,CAAC,sCAA6B,CAAC;AACtC,oBAAO,CAAC,uCAA8B,CAAC;AACvC,oBAAO,CAAC,wCAA+B,CAAC;AACxC,aAAY,CAAC;AAUb;KAAiC,sCAAiE;KAC9F,4BAAY,KAAK;SACb,kBAAM,KAAK,CAAC,CAAC;SACb,IAAI,CAAC,KAAK,GAAG,EAAE;KACnB,CAAC;KAID,8CAAiB,GAAjB;SACI,IAAI,KAAK,GAAG,IAAI,CAAC;SACjB,QAAQ,CAAC,iBAAiB,CAAC,WAAW,CAAC,+BAA+B,EAAC,UAAU,QAAQ;aACrF,IAAI,IAAI,GAAG,EAAE,CAAC;aACd,QAAQ,CAAC,MAAM,CAAC,uBAAuB,CAAC,OAAO,CAAC,UAAS,IAAI,EAAC,KAAK;iBAC/D,IAAI,CAAC,KAAK,CAAC,GAAC,EAAE,CAAC;iBACf,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC;iBAC1C,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK;aAClC,CAAC,CAAC,CAAC;aACH,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SAC3B,CAAC,CAAC,CAAC;KAGP,CAAC;KAED,uCAAU,GAAV,UAAW,SAAS;SAChB,IAAI,eAAe,GAAG,GAAG,CAAC;SAC1B,CAAC,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC;SAC/C,IAAI,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,CAAC;SACjE,IAAI,SAAS,GAAG,EAAE,CAAC;SACnB,GAAG,EAAC,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,SAAS,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC,CAAC;aAChC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;SACrC,CAAC;SAED,cAAc;SACd,IAAI,MAAM,GAAG;aACT,KAAK,EAAG;iBACJ,IAAI,EAAE,UAAU;iBAChB,CAAC,EAAC,QAAQ;cACb;aACD,OAAO,EAAG;iBACN,OAAO,EAAE,MAAM;iBACf,SAAS,EAAE,2BAA2B;cACzC;aACD,MAAM,EAAE;iBACJ,MAAM,EAAE,UAAU;iBAClB,IAAI,EAAE,OAAO;iBACb,IAAI,EAAE,SAAS;cAClB;aACD,MAAM,EAAG;iBACL;qBACI,IAAI,EAAE,IAAI;qBACV,IAAI,EAAE,KAAK;qBACX,MAAM,EAAG,KAAK;qBACd,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC;qBACtB,IAAI,EAAC,SAAS;qBACd,SAAS,EAAE;yBACP,QAAQ,EAAE;6BACN,UAAU,EAAE,EAAE;6BACd,aAAa,EAAE,CAAC;6BAChB,WAAW,EAAE,oBAAoB;0BACpC;sBACJ;kBACJ;cACJ;UACJ,CAAC;SAGF,oBAAoB;SACpB,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;SAC1B,OAAO,CAAC,MAAM,EAAE,CAAC;KACrB,CAAC;KAED,mCAAM,GAAN;SACI,MAAM,CAAC,CACH,qBAAC,GAAG,IAAE,KAAK,EAAE,EAAC,MAAM,EAAC,MAAM,EAAE,GACzB,qBAAC,GAAG,IAAC,EAAE,EAAC,WAAW,EAAS,CAC1B,CACT;KACL,CAAC;KAvEM,+BAAY,GAAG,EAAE,CAAC;KAwE7B,yBAAC;AAAD,EAAC,CA9EgC,KAAK,CAAC,SAAS,GA8E/C;AAED,kBAAS,kBAAkB;;;;;;;;;;;;AClG3B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;AC5BA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,kBAAiB;AACjB;AACA,cAAa;;AAEb;;AAEA;AACA;AACA,MAAK;;AAEL;;AAEA;;;;;;;;;;ACzIA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,cAAa,IAAI;AACjB,UAAS;AACT;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,UAAS;;AAET;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7DA;AACA;;AAEA;AACA,gBAAe,4BAA4B;AAC3C,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA,gBAAe,8BAA8B;AAC7C,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;;AAEA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,2CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;;AAEA;;AAEA;;AAEA;AACA,kBAAiB;AACjB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,MAAK;;AAEL;;;;;;;;;;;ACxWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B,OAAO;AACjC,2BAA0B,OAAO;AACjC;AACA;AACA;AACA;AACA,sBAAqB,wDAAwD;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;;;;;;;;;;ACjCA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,UAAS;AACT;;;;;;;;;;ACpCA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;;AAEjB;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;;AAEA;AACA,UAAS;AACT;;;;;;;;;;ACzHA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,gCAA+B,SAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,8BAA6B,QAAQ;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;;AAExB,6CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;;;;;;;;;;AC/NA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,yBAAyB;AACxD;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;;;;;;;;;;ACrBA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA,mBAAkB,OAAO;AACzB,mBAAkB,OAAO;AACzB,mBAAkB,OAAO;AACzB,mBAAkB,OAAO;AACzB,mBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;;;;;;;;;;;AChCA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,oBAAmB,MAAM,IAAI;AAC7B;;AAEA,uBAAsB,OAAO,cAAc;AAC3C;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;;AAEjB;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB;;AAEjB;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,MAAK;;;;;;;;;;;;ACpiBAAgB,+BAA+B;AAC/C,iBAAgB,OAAO;AACvB,iBAAgB,OAAO;AACvB,iBAAgB,gDAAgD;AAChE,iBAAgB,uBAAuB;AACvC,iBAAgB,uBAAuB;AACvC,iBAAgB,4BAA4B;AAC5C,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,0BAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA,uBAAsB;AACtB;AACA;;AAEA;AACA;AACA,uBAAsB;AACtB;AACA;;AAEA;AACA;AACA,uBAAsB;AACtB;AACA;;AAEA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+FAA8F;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,8CAA8C;AACjE,oBAAmB,4BAA4B;AAC/C,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,2BAA2B;AAC9C,oBAAmB,2CAA2C;AAC9D,oBAAmB,OAAO;AAC1B,oBAAmB,eAAe;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;;AAEjB;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,sBAAqB;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,sBAAqB;AACrB;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,sBAAqB;AACrB;;AAEA,UAAS;;AAET;AACA;AACA,oBAAmB,2BAA2B;AAC9C,oBAAmB,yCAAyC;AAC5D,oBAAmB,OAAO;AAC1B,oBAAmB,eAAe;AAClC;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,sBAAqB;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,sBAAqB;AACrB;AACA,UAAS;;AAET;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,oCAAoC;AACvD,oBAAmB,eAAe;AAClC,oBAAmB,eAAe;AAClC,oBAAmB,QAAQ;AAC3B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA,kBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;;AAEzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,4BAA4B;AAC/C,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;;AAEb;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;;;;;;;;;AChpCL;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,uCAAsC,cAAc,mBAAmB,mBAAmB,gBAAgB;;AAE1G;AACA,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS,SAAS;AAClB;;AAEA;AACA,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET,+BAA8B;AAC9B;;AAEA;AACA,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA,+BAA8B,OAAO;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA,qBAAoB,uBAAuB,sBAAsB;AACjE;;AAEA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,UAAS;;AAET;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;AC1QA,KAAY,KAAK,uBAAM,eACvB,CAAC,CAD6B;AAC9B,KAAI,OAAO,GAAG,mBAAO,CAAC,8BAAqB,CAAC,CAAC;AAC7C,KAAY,QAAQ,uBAAM,sCAC1B,CAAC,CADsD;AACvD,KAAY,WAAW,uBAAM,6DAE7B,CAAC,CAFgF;AACjF,SAAQ;AACR,oBAAO,CAAC,gCAAuB,CAAC;AAChC,oBAAO,CAAC,sCAA6B,CAAC;AACtC,oBAAO,CAAC,uCAA8B,CAAC;AAEvC,aAAY,CAAC;AAUb;KAAgC,qCAA+D;KAC3F,2BAAY,KAAK;SACb,kBAAM,KAAK,CAAC,CAAC;SACb,IAAI,CAAC,KAAK,GAAG,EAAE;KACnB,CAAC;KAID,mCAAO,GAAP;SACI,IAAI,KAAK,GAAG,IAAI,CAAC;SACjB,QAAQ,CAAC,iBAAiB,CAAC,WAAW,CAAC,mCAAmC,EAAC,UAAU,QAAQ;aACzF,IAAI,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,qBAAqB,CAAC;aACjD,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SAC3B,CAAC,CAAC,CAAC;KAEP,CAAC;KAED,6CAAiB,GAAjB;SACI,IAAI,CAAC,OAAO,EAAE;KAClB,CAAC;KAED,sCAAU,GAAV,UAAW,SAAS;SAChB,IAAI,eAAe,GAAG,GAAG,CAAC;SAC1B,CAAC,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC;SAC/C,IAAI,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,CAAC;SACjE,IAAI,SAAS,GAAG,EAAE,EAAC,SAAS,GAAC,EAAE,CAAC;SAChC,GAAG,EAAC,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,SAAS,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC,CAAC;aAChC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC;aAC/C,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;SACvC,CAAC;SAED,cAAc;SACd,IAAI,MAAM,GAAG;aACT,OAAO,EAAG;iBACN,OAAO,EAAE,MAAM;iBACf,WAAW,EAAG;qBACV,IAAI,EAAG,QAAQ,CAAQ,8BAA8B;kBACxD;cACJ;aACD,IAAI,EAAE;iBACF,YAAY,EAAE,IAAI;cACrB;aACD,KAAK,EAAG;iBACJ;qBACI,IAAI,EAAG,OAAO;qBACd,SAAS,EAAC,EAAC,IAAI,EAAC,KAAK,EAAC;kBACzB;cACJ;aACD,KAAK,EAAG;iBACJ;qBACI,IAAI,EAAG,UAAU;qBACjB,QAAQ,EAAG,EAAC,IAAI,EAAE,KAAK,EAAC;qBACxB,IAAI,EAAG,SAAS;qBAChB,SAAS,EAAC,EAAC,IAAI,EAAC,KAAK,EAAC;kBAEzB;cACJ;aACD,MAAM,EAAG;iBACL;qBACI,IAAI,EAAC,MAAM;qBACX,IAAI,EAAC,KAAK;qBACV,KAAK,EAAE;yBACH,MAAM,EAAE;6BACJ,IAAI,EAAE,IAAI;6BACV,QAAQ,EAAE,QAAQ;0BACrB;sBACJ;qBACD,IAAI,EAAC,SAAS;kBACjB;cAEJ;UACJ,CAAC;SACF,oBAAoB;SACpB,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;SAC1B,OAAO,CAAC,MAAM,EAAE,CAAC;KACrB,CAAC;KAED,kCAAM,GAAN;SACI,MAAM,CAAC,CACH,qBAAC,GAAG,IAAE,KAAK,EAAE,EAAC,MAAM,EAAC,MAAM,EAAE,GACzB,qBAAC,GAAG,IAAC,KAAK,EAAE,EAAC,KAAK,EAAC,SAAS,EAAC,UAAU,EAAC,MAAM,EAAC,QAAQ,EAAC,MAAM,EAAE,eAAgB,EAChF,qBAAC,GAAG,IAAC,EAAE,EAAC,WAAW,EAAS,CAC1B,CACT;KACL,CAAC;KA9EM,8BAAY,GAAG,EAAE,CAAC;KA+E7B,wBAAC;AAAD,EAAC,CArF+B,KAAK,CAAC,SAAS,GAqF9C;AAED,kBAAS,iBAAiB","file":"29.29.js","sourcesContent":["import * as React from 'react'\r\n\"use strict\";\r\nimport {isEmptyObject} from \"../commonFunc\";\r\n\r\ninterface TabBarColorProps extends React.Props<CardTabs> {\r\n    tabs:Array<any>\r\n}\r\ninterface TabBarColorState {\r\n    activeIndex: number\r\n}\r\n\r\nclass CardTabs extends React.Component<TabBarColorProps, TabBarColorState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeIndex:0\r\n        };\r\n        this.showActive = this.showActive.bind(this);\r\n    }\r\n\r\n    static defaultProps = {\r\n        className:\"\"\r\n    };\r\n\r\n    showActive(e){\r\n        this.setState({activeIndex:e.currentTarget.tabIndex});\r\n\r\n    }\r\n//[{tabName:\"\",tabContent:子组件},{tabName:\"\",tabContent:子组件},{tabName:\"\",tabContent:子组件},]\r\n    render() {\r\n        if(isEmptyObject(this.props.tabs)){\r\n            return <div>loading</div>\r\n        }\r\n\r\n        var this_ = this;\r\n        var tabBarClsName = \"tab-bar am-cf am-avg-sm-\"+this.props.tabs.length;\r\n        var tabContent = this.props.tabs[this.state.activeIndex].tabContent;\r\n\r\n        return (\r\n            <div className=\"tab-bar-parent\">\r\n                <ul className={tabBarClsName}>\r\n                    {this.props.tabs.map(function(tab, index){\r\n                        var activeClass = index==this_.state.activeIndex?\"active\":\"\";\r\n                        return <li className={activeClass} key={index} onClick={this_.showActive} tabIndex={index}>{tab.tabName}</li>\r\n                        }\r\n                    )}\r\n                </ul>\r\n                <div className=\"tab-content am-cf\">\r\n                    {tabContent}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport = CardTabs\n\n\n/** WEBPACK FOOTER **\n ** ./common/Component/CardTabs.tsx\n **/","// Enable DEV mode when using source code without build. which has no __DEV__ variable\r\n// In build process 'typeof __DEV__' will be replace with 'boolean'\r\n// So this code will be removed or disabled anyway after built.\r\nif (typeof __DEV__ === 'undefined') {\r\n    // In browser\r\n    if (typeof window !== 'undefined') {\r\n        window.__DEV__ = true;\r\n    }\r\n    // In node\r\n    else if (typeof global !== 'undefined') {\r\n        global.__DEV__ = true;\r\n    }\r\n}\r\n\r\n/*!\r\n * ECharts, a javascript interactive chart library.\r\n *\r\n * Copyright (c) 2015, Baidu Inc.\r\n * All rights reserved.\r\n *\r\n * LICENSE\r\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\r\n */\r\n\r\n/**\r\n * @module echarts\r\n */\r\n\r\n\r\n    var env = require('zrender/lib/core/env');\r\n\r\n    var GlobalModel = require('./model/Global');\r\n    var ExtensionAPI = require('./ExtensionAPI');\r\n    var CoordinateSystemManager = require('./CoordinateSystem');\r\n    var OptionManager = require('./model/OptionManager');\r\n\r\n    var ComponentModel = require('./model/Component');\r\n    var SeriesModel = require('./model/Series');\r\n\r\n    var ComponentView = require('./view/Component');\r\n    var ChartView = require('./view/Chart');\r\n    var graphic = require('./util/graphic');\r\n\r\n    var zrender = require('zrender');\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var colorTool = require('zrender/lib/tool/color');\r\n    var Eventful = require('zrender/lib/mixin/Eventful');\r\n    var timsort = require('zrender/lib/core/timsort');\r\n\r\n    var each = zrUtil.each;\r\n\r\n    var PRIORITY_PROCESSOR_FILTER = 1000;\r\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\r\n\r\n\r\n    var PRIORITY_VISUAL_LAYOUT = 1000;\r\n    var PRIORITY_VISUAL_GLOBAL = 2000;\r\n    var PRIORITY_VISUAL_CHART = 3000;\r\n    var PRIORITY_VISUAL_COMPONENT = 4000;\r\n    var PRIORITY_VISUAL_BRUSH = 5000;\r\n\r\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\r\n    // where they must not be invoked nestedly, except the only case: invoke\r\n    // dispatchAction with updateMethod \"none\" in main process.\r\n    // This flag is used to carry out this rule.\r\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\r\n    var IN_MAIN_PROCESS = '__flag_in_main_process';\r\n    var HAS_GRADIENT_OR_PATTERN_BG = '_hasGradientOrPatternBg';\r\n\r\n    function createRegisterEventWithLowercaseName(method) {\r\n        return function (eventName, handler, context) {\r\n            // Event name is all lowercase\r\n            eventName = eventName && eventName.toLowerCase();\r\n            Eventful.prototype[method].call(this, eventName, handler, context);\r\n        };\r\n    }\r\n    /**\r\n     * @module echarts~MessageCenter\r\n     */\r\n    function MessageCenter() {\r\n        Eventful.call(this);\r\n    }\r\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\r\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\r\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\r\n    zrUtil.mixin(MessageCenter, Eventful);\r\n    /**\r\n     * @module echarts~ECharts\r\n     */\r\n    function ECharts (dom, theme, opts) {\r\n        opts = opts || {};\r\n\r\n        // Get theme by name\r\n        if (typeof theme === 'string') {\r\n            theme = themeStorage[theme];\r\n        }\r\n\r\n        /**\r\n         * @type {string}\r\n         */\r\n        this.id;\r\n        /**\r\n         * Group id\r\n         * @type {string}\r\n         */\r\n        this.group;\r\n        /**\r\n         * @type {HTMLDomElement}\r\n         * @private\r\n         */\r\n        this._dom = dom;\r\n        /**\r\n         * @type {module:zrender/ZRender}\r\n         * @private\r\n         */\r\n        this._zr = zrender.init(dom, {\r\n            renderer: opts.renderer || 'canvas',\r\n            devicePixelRatio: opts.devicePixelRatio\r\n        });\r\n\r\n        /**\r\n         * @type {Object}\r\n         * @private\r\n         */\r\n        this._theme = zrUtil.clone(theme);\r\n\r\n        /**\r\n         * @type {Array.<module:echarts/view/Chart>}\r\n         * @private\r\n         */\r\n        this._chartsViews = [];\r\n\r\n        /**\r\n         * @type {Object.<string, module:echarts/view/Chart>}\r\n         * @private\r\n         */\r\n        this._chartsMap = {};\r\n\r\n        /**\r\n         * @type {Array.<module:echarts/view/Component>}\r\n         * @private\r\n         */\r\n        this._componentsViews = [];\r\n\r\n        /**\r\n         * @type {Object.<string, module:echarts/view/Component>}\r\n         * @private\r\n         */\r\n        this._componentsMap = {};\r\n\r\n        /**\r\n         * @type {module:echarts/ExtensionAPI}\r\n         * @private\r\n         */\r\n        this._api = new ExtensionAPI(this);\r\n\r\n        /**\r\n         * @type {module:echarts/CoordinateSystem}\r\n         * @private\r\n         */\r\n        this._coordSysMgr = new CoordinateSystemManager();\r\n\r\n        Eventful.call(this);\r\n\r\n        /**\r\n         * @type {module:echarts~MessageCenter}\r\n         * @private\r\n         */\r\n        this._messageCenter = new MessageCenter();\r\n\r\n        // Init mouse events\r\n        this._initEvents();\r\n\r\n        // In case some people write `window.onresize = chart.resize`\r\n        this.resize = zrUtil.bind(this.resize, this);\r\n\r\n        // Can't dispatch action during rendering procedure\r\n        this._pendingActions = [];\r\n        // Sort on demand\r\n        function prioritySortFunc(a, b) {\r\n            return a.prio - b.prio;\r\n        }\r\n        timsort(visualFuncs, prioritySortFunc);\r\n        timsort(dataProcessorFuncs, prioritySortFunc);\r\n    }\r\n\r\n    var echartsProto = ECharts.prototype;\r\n\r\n    /**\r\n     * @return {HTMLDomElement}\r\n     */\r\n    echartsProto.getDom = function () {\r\n        return this._dom;\r\n    };\r\n\r\n    /**\r\n     * @return {module:zrender~ZRender}\r\n     */\r\n    echartsProto.getZr = function () {\r\n        return this._zr;\r\n    };\r\n\r\n    /**\r\n     * @param {Object} option\r\n     * @param {boolean} notMerge\r\n     * @param {boolean} [notRefreshImmediately=false] Useful when setOption frequently.\r\n     */\r\n    echartsProto.setOption = function (option, notMerge, notRefreshImmediately) {\r\n        if (__DEV__) {\r\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\r\n        }\r\n\r\n        this[IN_MAIN_PROCESS] = true;\r\n\r\n        if (!this._model || notMerge) {\r\n            var optionManager = new OptionManager(this._api);\r\n            var theme = this._theme;\r\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\r\n            ecModel.init(null, null, theme, optionManager);\r\n        }\r\n\r\n        this._model.setOption(option, optionPreprocessorFuncs);\r\n\r\n        updateMethods.prepareAndUpdate.call(this);\r\n\r\n        this[IN_MAIN_PROCESS] = false;\r\n\r\n        this._flushPendingActions();\r\n\r\n        !notRefreshImmediately && this._zr.refreshImmediately();\r\n    };\r\n\r\n    /**\r\n     * @DEPRECATED\r\n     */\r\n    echartsProto.setTheme = function () {\r\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\r\n    };\r\n\r\n    /**\r\n     * @return {module:echarts/model/Global}\r\n     */\r\n    echartsProto.getModel = function () {\r\n        return this._model;\r\n    };\r\n\r\n    /**\r\n     * @return {Object}\r\n     */\r\n    echartsProto.getOption = function () {\r\n        return this._model.getOption();\r\n    };\r\n\r\n    /**\r\n     * @return {number}\r\n     */\r\n    echartsProto.getWidth = function () {\r\n        return this._zr.getWidth();\r\n    };\r\n\r\n    /**\r\n     * @return {number}\r\n     */\r\n    echartsProto.getHeight = function () {\r\n        return this._zr.getHeight();\r\n    };\r\n\r\n    /**\r\n     * Get canvas which has all thing rendered\r\n     * @param {Object} opts\r\n     * @param {string} [opts.backgroundColor]\r\n     */\r\n    echartsProto.getRenderedCanvas = function (opts) {\r\n        if (!env.canvasSupported) {\r\n            return;\r\n        }\r\n        opts = opts || {};\r\n        opts.pixelRatio = opts.pixelRatio || 1;\r\n        opts.backgroundColor = opts.backgroundColor\r\n            || this._model.get('backgroundColor');\r\n        var zr = this._zr;\r\n        var list = zr.storage.getDisplayList();\r\n        // Stop animations\r\n        zrUtil.each(list, function (el) {\r\n            el.stopAnimation(true);\r\n        });\r\n        return zr.painter.getRenderedCanvas(opts);\r\n    };\r\n    /**\r\n     * @return {string}\r\n     * @param {Object} opts\r\n     * @param {string} [opts.type='png']\r\n     * @param {string} [opts.pixelRatio=1]\r\n     * @param {string} [opts.backgroundColor]\r\n     */\r\n    echartsProto.getDataURL = function (opts) {\r\n        opts = opts || {};\r\n        var excludeComponents = opts.excludeComponents;\r\n        var ecModel = this._model;\r\n        var excludesComponentViews = [];\r\n        var self = this;\r\n\r\n        each(excludeComponents, function (componentType) {\r\n            ecModel.eachComponent({\r\n                mainType: componentType\r\n            }, function (component) {\r\n                var view = self._componentsMap[component.__viewId];\r\n                if (!view.group.ignore) {\r\n                    excludesComponentViews.push(view);\r\n                    view.group.ignore = true;\r\n                }\r\n            });\r\n        });\r\n\r\n        var url = this.getRenderedCanvas(opts).toDataURL(\r\n            'image/' + (opts && opts.type || 'png')\r\n        );\r\n\r\n        each(excludesComponentViews, function (view) {\r\n            view.group.ignore = false;\r\n        });\r\n        return url;\r\n    };\r\n\r\n\r\n    /**\r\n     * @return {string}\r\n     * @param {Object} opts\r\n     * @param {string} [opts.type='png']\r\n     * @param {string} [opts.pixelRatio=1]\r\n     * @param {string} [opts.backgroundColor]\r\n     */\r\n    echartsProto.getConnectedDataURL = function (opts) {\r\n        if (!env.canvasSupported) {\r\n            return;\r\n        }\r\n        var groupId = this.group;\r\n        var mathMin = Math.min;\r\n        var mathMax = Math.max;\r\n        var MAX_NUMBER = Infinity;\r\n        if (connectedGroups[groupId]) {\r\n            var left = MAX_NUMBER;\r\n            var top = MAX_NUMBER;\r\n            var right = -MAX_NUMBER;\r\n            var bottom = -MAX_NUMBER;\r\n            var canvasList = [];\r\n            var dpr = (opts && opts.pixelRatio) || 1;\r\n            for (var id in instances) {\r\n                var chart = instances[id];\r\n                if (chart.group === groupId) {\r\n                    var canvas = chart.getRenderedCanvas(\r\n                        zrUtil.clone(opts)\r\n                    );\r\n                    var boundingRect = chart.getDom().getBoundingClientRect();\r\n                    left = mathMin(boundingRect.left, left);\r\n                    top = mathMin(boundingRect.top, top);\r\n                    right = mathMax(boundingRect.right, right);\r\n                    bottom = mathMax(boundingRect.bottom, bottom);\r\n                    canvasList.push({\r\n                        dom: canvas,\r\n                        left: boundingRect.left,\r\n                        top: boundingRect.top\r\n                    });\r\n                }\r\n            }\r\n\r\n            left *= dpr;\r\n            top *= dpr;\r\n            right *= dpr;\r\n            bottom *= dpr;\r\n            var width = right - left;\r\n            var height = bottom - top;\r\n            var targetCanvas = zrUtil.createCanvas();\r\n            targetCanvas.width = width;\r\n            targetCanvas.height = height;\r\n            var zr = zrender.init(targetCanvas);\r\n\r\n            each(canvasList, function (item) {\r\n                var img = new graphic.Image({\r\n                    style: {\r\n                        x: item.left * dpr - left,\r\n                        y: item.top * dpr - top,\r\n                        image: item.dom\r\n                    }\r\n                });\r\n                zr.add(img);\r\n            });\r\n            zr.refreshImmediately();\r\n\r\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\r\n        }\r\n        else {\r\n            return this.getDataURL(opts);\r\n        }\r\n    };\r\n\r\n    var updateMethods = {\r\n\r\n\r\n        /**\r\n         * @param {Object} payload\r\n         * @private\r\n         */\r\n        update: function (payload) {\r\n            // console.time && console.time('update');\r\n\r\n            var ecModel = this._model;\r\n            var api = this._api;\r\n            var coordSysMgr = this._coordSysMgr;\r\n            var zr = this._zr;\r\n            // update before setOption\r\n            if (!ecModel) {\r\n                return;\r\n            }\r\n\r\n            // Fixme First time update ?\r\n            ecModel.restoreData();\r\n\r\n            // TODO\r\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\r\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\r\n\r\n            // Create new coordinate system each update\r\n            // In LineView may save the old coordinate system and use it to get the orignal point\r\n            coordSysMgr.create(this._model, this._api);\r\n\r\n            processData.call(this, ecModel, api);\r\n\r\n            stackSeriesData.call(this, ecModel);\r\n\r\n            coordSysMgr.update(ecModel, api);\r\n\r\n            doVisualEncoding.call(this, ecModel, payload);\r\n\r\n            doRender.call(this, ecModel, payload);\r\n\r\n            // Set background\r\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\r\n\r\n            var painter = zr.painter;\r\n            // TODO all use clearColor ?\r\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\r\n                zr.configLayer(0, {\r\n                    clearColor: backgroundColor\r\n                });\r\n            }\r\n            else {\r\n                // In IE8\r\n                if (!env.canvasSupported) {\r\n                    var colorArr = colorTool.parse(backgroundColor);\r\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\r\n                    if (colorArr[3] === 0) {\r\n                        backgroundColor = 'transparent';\r\n                    }\r\n                }\r\n                if (backgroundColor.colorStops || backgroundColor.image) {\r\n                    // Gradient background\r\n                    // FIXME Fixed layer？\r\n                    zr.configLayer(0, {\r\n                        clearColor: backgroundColor\r\n                    });\r\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\r\n\r\n                    this._dom.style.background = 'transparent';\r\n                }\r\n                else {\r\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\r\n                        zr.configLayer(0, {\r\n                            clearColor: null\r\n                        });\r\n                    }\r\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\r\n\r\n                    this._dom.style.background = backgroundColor;\r\n                }\r\n            }\r\n\r\n            // console.time && console.timeEnd('update');\r\n        },\r\n\r\n        // PENDING\r\n        /**\r\n         * @param {Object} payload\r\n         * @private\r\n         */\r\n        updateView: function (payload) {\r\n            var ecModel = this._model;\r\n\r\n            // update before setOption\r\n            if (!ecModel) {\r\n                return;\r\n            }\r\n\r\n            ecModel.eachSeries(function (seriesModel) {\r\n                seriesModel.getData().clearAllVisual();\r\n            });\r\n\r\n            doVisualEncoding.call(this, ecModel, payload);\r\n\r\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\r\n        },\r\n\r\n        /**\r\n         * @param {Object} payload\r\n         * @private\r\n         */\r\n        updateVisual: function (payload) {\r\n            var ecModel = this._model;\r\n\r\n            // update before setOption\r\n            if (!ecModel) {\r\n                return;\r\n            }\r\n\r\n            ecModel.eachSeries(function (seriesModel) {\r\n                seriesModel.getData().clearAllVisual();\r\n            });\r\n\r\n            doVisualEncoding.call(this, ecModel, payload);\r\n\r\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\r\n        },\r\n\r\n        /**\r\n         * @param {Object} payload\r\n         * @private\r\n         */\r\n        updateLayout: function (payload) {\r\n            var ecModel = this._model;\r\n\r\n            // update before setOption\r\n            if (!ecModel) {\r\n                return;\r\n            }\r\n\r\n            doLayout.call(this, ecModel, payload);\r\n\r\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\r\n        },\r\n\r\n        /**\r\n         * @param {Object} payload\r\n         * @private\r\n         */\r\n        highlight: function (payload) {\r\n            toggleHighlight.call(this, 'highlight', payload);\r\n        },\r\n\r\n        /**\r\n         * @param {Object} payload\r\n         * @private\r\n         */\r\n        downplay: function (payload) {\r\n            toggleHighlight.call(this, 'downplay', payload);\r\n        },\r\n\r\n        /**\r\n         * @param {Object} payload\r\n         * @private\r\n         */\r\n        prepareAndUpdate: function (payload) {\r\n            var ecModel = this._model;\r\n\r\n            prepareView.call(this, 'component', ecModel);\r\n\r\n            prepareView.call(this, 'chart', ecModel);\r\n\r\n            updateMethods.update.call(this, payload);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @param {Object} payload\r\n     * @private\r\n     */\r\n    function toggleHighlight(method, payload) {\r\n        var ecModel = this._model;\r\n\r\n        // dispatchAction before setOption\r\n        if (!ecModel) {\r\n            return;\r\n        }\r\n\r\n        ecModel.eachComponent(\r\n            {mainType: 'series', query: payload},\r\n            function (seriesModel, index) {\r\n                var chartView = this._chartsMap[seriesModel.__viewId];\r\n                if (chartView && chartView.__alive) {\r\n                    chartView[method](\r\n                        seriesModel, ecModel, this._api, payload\r\n                    );\r\n                }\r\n            },\r\n            this\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Resize the chart\r\n     */\r\n    echartsProto.resize = function () {\r\n        if (__DEV__) {\r\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\r\n        }\r\n\r\n        this[IN_MAIN_PROCESS] = true;\r\n\r\n        this._zr.resize();\r\n\r\n        var optionChanged = this._model && this._model.resetOption('media');\r\n        updateMethods[optionChanged ? 'prepareAndUpdate' : 'update'].call(this);\r\n\r\n        // Resize loading effect\r\n        this._loadingFX && this._loadingFX.resize();\r\n\r\n        this[IN_MAIN_PROCESS] = false;\r\n\r\n        this._flushPendingActions();\r\n    };\r\n\r\n    var defaultLoadingEffect = require('./loading/default');\r\n    /**\r\n     * Show loading effect\r\n     * @param  {string} [name='default']\r\n     * @param  {Object} [cfg]\r\n     */\r\n    echartsProto.showLoading = function (name, cfg) {\r\n        if (zrUtil.isObject(name)) {\r\n            cfg = name;\r\n            name = 'default';\r\n        }\r\n        this.hideLoading();\r\n        var el = defaultLoadingEffect(this._api, cfg);\r\n        var zr = this._zr;\r\n        this._loadingFX = el;\r\n\r\n        zr.add(el);\r\n    };\r\n\r\n    /**\r\n     * Hide loading effect\r\n     */\r\n    echartsProto.hideLoading = function () {\r\n        this._loadingFX && this._zr.remove(this._loadingFX);\r\n        this._loadingFX = null;\r\n    };\r\n\r\n    /**\r\n     * @param {Object} eventObj\r\n     * @return {Object}\r\n     */\r\n    echartsProto.makeActionFromEvent = function (eventObj) {\r\n        var payload = zrUtil.extend({}, eventObj);\r\n        payload.type = eventActionMap[eventObj.type];\r\n        return payload;\r\n    };\r\n\r\n    /**\r\n     * @pubilc\r\n     * @param {Object} payload\r\n     * @param {string} [payload.type] Action type\r\n     * @param {boolean} [silent=false] Whether trigger event.\r\n     */\r\n    echartsProto.dispatchAction = function (payload, silent) {\r\n        var actionWrap = actions[payload.type];\r\n        if (!actionWrap) {\r\n            return;\r\n        }\r\n\r\n        var actionInfo = actionWrap.actionInfo;\r\n        var updateMethod = actionInfo.update || 'update';\r\n\r\n        // if (__DEV__) {\r\n        //     zrUtil.assert(\r\n        //         !this[IN_MAIN_PROCESS],\r\n        //         '`dispatchAction` should not be called during main process.'\r\n        //         + 'unless updateMathod is \"none\".'\r\n        //     );\r\n        // }\r\n\r\n        // May dispatchAction in rendering procedure\r\n        if (this[IN_MAIN_PROCESS]) {\r\n            this._pendingActions.push(payload);\r\n            return;\r\n        }\r\n\r\n        this[IN_MAIN_PROCESS] = true;\r\n\r\n        var payloads = [payload];\r\n        var batched = false;\r\n        // Batch action\r\n        if (payload.batch) {\r\n            batched = true;\r\n            payloads = zrUtil.map(payload.batch, function (item) {\r\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\r\n                item.batch = null;\r\n                return item;\r\n            });\r\n        }\r\n\r\n        var eventObjBatch = [];\r\n        var eventObj;\r\n        var isHighlightOrDownplay = payload.type === 'highlight' || payload.type === 'downplay';\r\n        for (var i = 0; i < payloads.length; i++) {\r\n            var batchItem = payloads[i];\r\n            // Action can specify the event by return it.\r\n            eventObj = actionWrap.action(batchItem, this._model);\r\n            // Emit event outside\r\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\r\n            // Convert type to eventType\r\n            eventObj.type = actionInfo.event || eventObj.type;\r\n            eventObjBatch.push(eventObj);\r\n\r\n            // Highlight and downplay are special.\r\n            isHighlightOrDownplay && updateMethods[updateMethod].call(this, batchItem);\r\n        }\r\n\r\n        (updateMethod !== 'none' && !isHighlightOrDownplay)\r\n            && updateMethods[updateMethod].call(this, payload);\r\n\r\n        // Follow the rule of action batch\r\n        if (batched) {\r\n            eventObj = {\r\n                type: actionInfo.event || payload.type,\r\n                batch: eventObjBatch\r\n            };\r\n        }\r\n        else {\r\n            eventObj = eventObjBatch[0];\r\n        }\r\n\r\n        this[IN_MAIN_PROCESS] = false;\r\n\r\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\r\n\r\n        this._flushPendingActions();\r\n\r\n    };\r\n\r\n    echartsProto._flushPendingActions = function () {\r\n        var pendingActions = this._pendingActions;\r\n        while (pendingActions.length) {\r\n            var payload = pendingActions.shift();\r\n            this.dispatchAction(payload);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Register event\r\n     * @method\r\n     */\r\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\r\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\r\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\r\n\r\n    /**\r\n     * @param {string} methodName\r\n     * @private\r\n     */\r\n    function invokeUpdateMethod(methodName, ecModel, payload) {\r\n        var api = this._api;\r\n\r\n        // Update all components\r\n        each(this._componentsViews, function (component) {\r\n            var componentModel = component.__model;\r\n            component[methodName](componentModel, ecModel, api, payload);\r\n\r\n            updateZ(componentModel, component);\r\n        }, this);\r\n\r\n        // Upate all charts\r\n        ecModel.eachSeries(function (seriesModel, idx) {\r\n            var chart = this._chartsMap[seriesModel.__viewId];\r\n            chart[methodName](seriesModel, ecModel, api, payload);\r\n\r\n            updateZ(seriesModel, chart);\r\n\r\n            updateProgressiveAndBlend(seriesModel, chart);\r\n        }, this);\r\n\r\n        // If use hover layer\r\n        updateHoverLayerStatus(this._zr, ecModel);\r\n    }\r\n\r\n    /**\r\n     * Prepare view instances of charts and components\r\n     * @param  {module:echarts/model/Global} ecModel\r\n     * @private\r\n     */\r\n    function prepareView(type, ecModel) {\r\n        var isComponent = type === 'component';\r\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\r\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\r\n        var zr = this._zr;\r\n\r\n        for (var i = 0; i < viewList.length; i++) {\r\n            viewList[i].__alive = false;\r\n        }\r\n\r\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\r\n            if (isComponent) {\r\n                if (componentType === 'series') {\r\n                    return;\r\n                }\r\n            }\r\n            else {\r\n                model = componentType;\r\n            }\r\n\r\n            // Consider: id same and type changed.\r\n            var viewId = model.id + '_' + model.type;\r\n            var view = viewMap[viewId];\r\n            if (!view) {\r\n                var classType = ComponentModel.parseClassType(model.type);\r\n                var Clazz = isComponent\r\n                    ? ComponentView.getClass(classType.main, classType.sub)\r\n                    : ChartView.getClass(classType.sub);\r\n                if (Clazz) {\r\n                    view = new Clazz();\r\n                    view.init(ecModel, this._api);\r\n                    viewMap[viewId] = view;\r\n                    viewList.push(view);\r\n                    zr.add(view.group);\r\n                }\r\n                else {\r\n                    // Error\r\n                    return;\r\n                }\r\n            }\r\n\r\n            model.__viewId = viewId;\r\n            view.__alive = true;\r\n            view.__id = viewId;\r\n            view.__model = model;\r\n        }, this);\r\n\r\n        for (var i = 0; i < viewList.length;) {\r\n            var view = viewList[i];\r\n            if (!view.__alive) {\r\n                zr.remove(view.group);\r\n                view.dispose(ecModel, this._api);\r\n                viewList.splice(i, 1);\r\n                delete viewMap[view.__id];\r\n            }\r\n            else {\r\n                i++;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Processor data in each series\r\n     *\r\n     * @param {module:echarts/model/Global} ecModel\r\n     * @private\r\n     */\r\n    function processData(ecModel, api) {\r\n        each(dataProcessorFuncs, function (process) {\r\n            process.func(ecModel, api);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    function stackSeriesData(ecModel) {\r\n        var stackedDataMap = {};\r\n        ecModel.eachSeries(function (series) {\r\n            var stack = series.get('stack');\r\n            var data = series.getData();\r\n            if (stack && data.type === 'list') {\r\n                var previousStack = stackedDataMap[stack];\r\n                if (previousStack) {\r\n                    data.stackedOn = previousStack;\r\n                }\r\n                stackedDataMap[stack] = data;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Layout before each chart render there series, special visual encoding stage\r\n     *\r\n     * @param {module:echarts/model/Global} ecModel\r\n     * @private\r\n     */\r\n    function doLayout(ecModel, payload) {\r\n        var api = this._api;\r\n        each(visualFuncs, function (visual) {\r\n            if (visual.isLayout) {\r\n                visual.func(ecModel, api, payload);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Encode visual infomation from data after data processing\r\n     *\r\n     * @param {module:echarts/model/Global} ecModel\r\n     * @private\r\n     */\r\n    function doVisualEncoding(ecModel, payload) {\r\n        var api = this._api;\r\n        ecModel.clearColorPalette();\r\n        ecModel.eachSeries(function (seriesModel) {\r\n            seriesModel.clearColorPalette();\r\n        });\r\n        each(visualFuncs, function (visual) {\r\n            visual.func(ecModel, api, payload);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Render each chart and component\r\n     * @private\r\n     */\r\n    function doRender(ecModel, payload) {\r\n        var api = this._api;\r\n        // Render all components\r\n        each(this._componentsViews, function (componentView) {\r\n            var componentModel = componentView.__model;\r\n            componentView.render(componentModel, ecModel, api, payload);\r\n\r\n            updateZ(componentModel, componentView);\r\n        }, this);\r\n\r\n        each(this._chartsViews, function (chart) {\r\n            chart.__alive = false;\r\n        }, this);\r\n\r\n        // Render all charts\r\n        ecModel.eachSeries(function (seriesModel, idx) {\r\n            var chartView = this._chartsMap[seriesModel.__viewId];\r\n            chartView.__alive = true;\r\n            chartView.render(seriesModel, ecModel, api, payload);\r\n\r\n            chartView.group.silent = !!seriesModel.get('silent');\r\n\r\n            updateZ(seriesModel, chartView);\r\n\r\n            updateProgressiveAndBlend(seriesModel, chartView);\r\n\r\n        }, this);\r\n\r\n        // If use hover layer\r\n        updateHoverLayerStatus(this._zr, ecModel);\r\n\r\n        // Remove groups of unrendered charts\r\n        each(this._chartsViews, function (chart) {\r\n            if (!chart.__alive) {\r\n                chart.remove(ecModel, api);\r\n            }\r\n        }, this);\r\n    }\r\n\r\n    var MOUSE_EVENT_NAMES = [\r\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousedown', 'mouseup', 'globalout'\r\n    ];\r\n    /**\r\n     * @private\r\n     */\r\n    echartsProto._initEvents = function () {\r\n        each(MOUSE_EVENT_NAMES, function (eveName) {\r\n            this._zr.on(eveName, function (e) {\r\n                var ecModel = this.getModel();\r\n                var el = e.target;\r\n                if (el && el.dataIndex != null) {\r\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\r\n                    var params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\r\n                    params.event = e;\r\n                    params.type = eveName;\r\n                    this.trigger(eveName, params);\r\n                }\r\n                // If element has custom eventData of components\r\n                else if (el && el.eventData) {\r\n                    this.trigger(eveName, el.eventData);\r\n                }\r\n            }, this);\r\n        }, this);\r\n\r\n        each(eventActionMap, function (actionType, eventType) {\r\n            this._messageCenter.on(eventType, function (event) {\r\n                this.trigger(eventType, event);\r\n            }, this);\r\n        }, this);\r\n    };\r\n\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    echartsProto.isDisposed = function () {\r\n        return this._disposed;\r\n    };\r\n\r\n    /**\r\n     * Clear\r\n     */\r\n    echartsProto.clear = function () {\r\n        this.setOption({}, true);\r\n    };\r\n    /**\r\n     * Dispose instance\r\n     */\r\n    echartsProto.dispose = function () {\r\n        if (this._disposed) {\r\n            if (__DEV__) {\r\n                console.warn('Instance ' + this.id + ' has been disposed');\r\n            }\r\n            return;\r\n        }\r\n        this._disposed = true;\r\n\r\n        var api = this._api;\r\n        var ecModel = this._model;\r\n\r\n        each(this._componentsViews, function (component) {\r\n            component.dispose(ecModel, api);\r\n        });\r\n        each(this._chartsViews, function (chart) {\r\n            chart.dispose(ecModel, api);\r\n        });\r\n\r\n        // Dispose after all views disposed\r\n        this._zr.dispose();\r\n\r\n        delete instances[this.id];\r\n    };\r\n\r\n    zrUtil.mixin(ECharts, Eventful);\r\n\r\n    function updateHoverLayerStatus(zr, ecModel) {\r\n        var storage = zr.storage;\r\n        var elCount = 0;\r\n        storage.traverse(function (el) {\r\n            if (!el.isGroup) {\r\n                elCount++;\r\n            }\r\n        });\r\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\r\n            storage.traverse(function (el) {\r\n                if (!el.isGroup) {\r\n                    el.useHoverLayer = true;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Update chart progressive and blend.\r\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\r\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\r\n     */\r\n    function updateProgressiveAndBlend(seriesModel, chartView) {\r\n        // Progressive configuration\r\n        var elCount = 0;\r\n        chartView.group.traverse(function (el) {\r\n            if (el.type !== 'group' && !el.ignore) {\r\n                elCount++;\r\n            }\r\n        });\r\n        var frameDrawNum = +seriesModel.get('progressive');\r\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\r\n        if (needProgressive) {\r\n            chartView.group.traverse(function (el) {\r\n                // FIXME marker and other components\r\n                if (!el.isGroup) {\r\n                    el.progressive = needProgressive ?\r\n                        Math.floor(elCount++ / frameDrawNum) : -1;\r\n                    if (needProgressive) {\r\n                        el.stopAnimation(true);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        // Blend configration\r\n        var blendMode = seriesModel.get('blendMode') || null;\r\n        if (__DEV__) {\r\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\r\n                console.warn('Only canvas support blendMode');\r\n            }\r\n        }\r\n        chartView.group.traverse(function (el) {\r\n            // FIXME marker and other components\r\n            if (!el.isGroup) {\r\n                el.setStyle('blend', blendMode);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\r\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\r\n     */\r\n    function updateZ(model, view) {\r\n        var z = model.get('z');\r\n        var zlevel = model.get('zlevel');\r\n        // Set z and zlevel\r\n        view.group.traverse(function (el) {\r\n            if (el.type !== 'group') {\r\n                z != null && (el.z = z);\r\n                zlevel != null && (el.zlevel = zlevel);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @type {Array.<Function>}\r\n     * @inner\r\n     */\r\n    var actions = [];\r\n\r\n    /**\r\n     * Map eventType to actionType\r\n     * @type {Object}\r\n     */\r\n    var eventActionMap = {};\r\n\r\n    /**\r\n     * Data processor functions of each stage\r\n     * @type {Array.<Object.<string, Function>>}\r\n     * @inner\r\n     */\r\n    var dataProcessorFuncs = [];\r\n\r\n    /**\r\n     * @type {Array.<Function>}\r\n     * @inner\r\n     */\r\n    var optionPreprocessorFuncs = [];\r\n\r\n    /**\r\n     * Visual encoding functions of each stage\r\n     * @type {Array.<Object.<string, Function>>}\r\n     * @inner\r\n     */\r\n    var visualFuncs = [];\r\n    /**\r\n     * Theme storage\r\n     * @type {Object.<key, Object>}\r\n     */\r\n    var themeStorage = {};\r\n\r\n\r\n    var instances = {};\r\n    var connectedGroups = {};\r\n\r\n    var idBase = new Date() - 0;\r\n    var groupIdBase = new Date() - 0;\r\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\r\n    /**\r\n     * @alias module:echarts\r\n     */\r\n    var echarts = {\r\n        /**\r\n         * @type {number}\r\n         */\r\n        version: '3.2.2',\r\n        dependencies: {\r\n            zrender: '3.1.2'\r\n        }\r\n    };\r\n\r\n    function enableConnect(chart) {\r\n\r\n        var STATUS_PENDING = 0;\r\n        var STATUS_UPDATING = 1;\r\n        var STATUS_UPDATED = 2;\r\n        var STATUS_KEY = '__connectUpdateStatus';\r\n        function updateConnectedChartsStatus(charts, status) {\r\n            for (var i = 0; i < charts.length; i++) {\r\n                var otherChart = charts[i];\r\n                otherChart[STATUS_KEY] = status;\r\n            }\r\n        }\r\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\r\n            chart._messageCenter.on(eventType, function (event) {\r\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\r\n                    var action = chart.makeActionFromEvent(event);\r\n                    var otherCharts = [];\r\n                    for (var id in instances) {\r\n                        var otherChart = instances[id];\r\n                        if (otherChart !== chart && otherChart.group === chart.group) {\r\n                            otherCharts.push(otherChart);\r\n                        }\r\n                    }\r\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\r\n                    each(otherCharts, function (otherChart) {\r\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\r\n                            otherChart.dispatchAction(action);\r\n                        }\r\n                    });\r\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\r\n                }\r\n            });\r\n        });\r\n\r\n    }\r\n    /**\r\n     * @param {HTMLDomElement} dom\r\n     * @param {Object} [theme]\r\n     * @param {Object} opts\r\n     */\r\n    echarts.init = function (dom, theme, opts) {\r\n        if (__DEV__) {\r\n            // Check version\r\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\r\n                throw new Error(\r\n                    'ZRender ' + zrender.version\r\n                    + ' is too old for ECharts ' + echarts.version\r\n                    + '. Current version need ZRender '\r\n                    + echarts.dependencies.zrender + '+'\r\n                );\r\n            }\r\n            if (!dom) {\r\n                throw new Error('Initialize failed: invalid dom.');\r\n            }\r\n            if (zrUtil.isDom(dom) && dom.nodeName.toUpperCase() !== 'CANVAS' && (!dom.clientWidth || !dom.clientHeight)) {\r\n                console.warn('Can\\'t get dom width or height');\r\n            }\r\n        }\r\n\r\n        var chart = new ECharts(dom, theme, opts);\r\n        chart.id = 'ec_' + idBase++;\r\n        instances[chart.id] = chart;\r\n\r\n        dom.setAttribute &&\r\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\r\n\r\n        enableConnect(chart);\r\n\r\n        return chart;\r\n    };\r\n\r\n    /**\r\n     * @return {string|Array.<module:echarts~ECharts>} groupId\r\n     */\r\n    echarts.connect = function (groupId) {\r\n        // Is array of charts\r\n        if (zrUtil.isArray(groupId)) {\r\n            var charts = groupId;\r\n            groupId = null;\r\n            // If any chart has group\r\n            zrUtil.each(charts, function (chart) {\r\n                if (chart.group != null) {\r\n                    groupId = chart.group;\r\n                }\r\n            });\r\n            groupId = groupId || ('g_' + groupIdBase++);\r\n            zrUtil.each(charts, function (chart) {\r\n                chart.group = groupId;\r\n            });\r\n        }\r\n        connectedGroups[groupId] = true;\r\n        return groupId;\r\n    };\r\n\r\n    /**\r\n     * @return {string} groupId\r\n     */\r\n    echarts.disConnect = function (groupId) {\r\n        connectedGroups[groupId] = false;\r\n    };\r\n\r\n    /**\r\n     * Dispose a chart instance\r\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\r\n     */\r\n    echarts.dispose = function (chart) {\r\n        if (zrUtil.isDom(chart)) {\r\n            chart = echarts.getInstanceByDom(chart);\r\n        }\r\n        else if (typeof chart === 'string') {\r\n            chart = instances[chart];\r\n        }\r\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\r\n            chart.dispose();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @param  {HTMLDomElement} dom\r\n     * @return {echarts~ECharts}\r\n     */\r\n    echarts.getInstanceByDom = function (dom) {\r\n        var key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\r\n        return instances[key];\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     * @return {echarts~ECharts}\r\n     */\r\n    echarts.getInstanceById = function (key) {\r\n        return instances[key];\r\n    };\r\n\r\n    /**\r\n     * Register theme\r\n     */\r\n    echarts.registerTheme = function (name, theme) {\r\n        themeStorage[name] = theme;\r\n    };\r\n\r\n    /**\r\n     * Register option preprocessor\r\n     * @param {Function} preprocessorFunc\r\n     */\r\n    echarts.registerPreprocessor = function (preprocessorFunc) {\r\n        optionPreprocessorFuncs.push(preprocessorFunc);\r\n    };\r\n\r\n    /**\r\n     * @param {number} [priority=1000]\r\n     * @param {Function} processorFunc\r\n     */\r\n    echarts.registerProcessor = function (priority, processorFunc) {\r\n        if (typeof priority === 'function') {\r\n            processorFunc = priority;\r\n            priority = PRIORITY_PROCESSOR_FILTER;\r\n        }\r\n        if (__DEV__) {\r\n            if (isNaN(priority)) {\r\n                throw new Error('Unkown processor priority');\r\n            }\r\n        }\r\n        dataProcessorFuncs.push({\r\n            prio: priority,\r\n            func: processorFunc\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Usage:\r\n     * registerAction('someAction', 'someEvent', function () { ... });\r\n     * registerAction('someAction', function () { ... });\r\n     * registerAction(\r\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\r\n     *     function () { ... }\r\n     * );\r\n     *\r\n     * @param {(string|Object)} actionInfo\r\n     * @param {string} actionInfo.type\r\n     * @param {string} [actionInfo.event]\r\n     * @param {string} [actionInfo.update]\r\n     * @param {string} [eventName]\r\n     * @param {Function} action\r\n     */\r\n    echarts.registerAction = function (actionInfo, eventName, action) {\r\n        if (typeof eventName === 'function') {\r\n            action = eventName;\r\n            eventName = '';\r\n        }\r\n        var actionType = zrUtil.isObject(actionInfo)\r\n            ? actionInfo.type\r\n            : ([actionInfo, actionInfo = {\r\n                event: eventName\r\n            }][0]);\r\n\r\n        // Event name is all lowercase\r\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\r\n        eventName = actionInfo.event;\r\n\r\n        if (!actions[actionType]) {\r\n            actions[actionType] = {action: action, actionInfo: actionInfo};\r\n        }\r\n        eventActionMap[eventName] = actionType;\r\n    };\r\n\r\n    /**\r\n     * @param {string} type\r\n     * @param {*} CoordinateSystem\r\n     */\r\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\r\n        CoordinateSystemManager.register(type, CoordinateSystem);\r\n    };\r\n\r\n    /**\r\n     * Layout is a special stage of visual encoding\r\n     * Most visual encoding like color are common for different chart\r\n     * But each chart has it's own layout algorithm\r\n     *\r\n     * @param {string} [priority=1000]\r\n     * @param {Function} layoutFunc\r\n     */\r\n    echarts.registerLayout = function (priority, layoutFunc) {\r\n        if (typeof priority === 'function') {\r\n            layoutFunc = priority;\r\n            priority = PRIORITY_VISUAL_LAYOUT;\r\n        }\r\n        if (__DEV__) {\r\n            if (isNaN(priority)) {\r\n                throw new Error('Unkown layout priority');\r\n            }\r\n        }\r\n        visualFuncs.push({\r\n            prio: priority,\r\n            func: layoutFunc,\r\n            isLayout: true\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @param {string} [priority=3000]\r\n     * @param {Function} visualFunc\r\n     */\r\n    echarts.registerVisual = function (priority, visualFunc) {\r\n        if (typeof priority === 'function') {\r\n            visualFunc = priority;\r\n            priority = PRIORITY_VISUAL_CHART;\r\n        }\r\n        if (__DEV__) {\r\n            if (isNaN(priority)) {\r\n                throw new Error('Unkown visual priority');\r\n            }\r\n        }\r\n        visualFuncs.push({\r\n            prio: priority,\r\n            func: visualFunc\r\n        });\r\n    };\r\n\r\n    var parseClassType = ComponentModel.parseClassType;\r\n    /**\r\n     * @param {Object} opts\r\n     * @param {string} [superClass]\r\n     */\r\n    echarts.extendComponentModel = function (opts, superClass) {\r\n        var Clazz = ComponentModel;\r\n        if (superClass) {\r\n            var classType = parseClassType(superClass);\r\n            Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\r\n        }\r\n        return Clazz.extend(opts);\r\n    };\r\n\r\n    /**\r\n     * @param {Object} opts\r\n     * @param {string} [superClass]\r\n     */\r\n    echarts.extendComponentView = function (opts, superClass) {\r\n        var Clazz = ComponentView;\r\n        if (superClass) {\r\n            var classType = parseClassType(superClass);\r\n            Clazz = ComponentView.getClass(classType.main, classType.sub, true);\r\n        }\r\n        return Clazz.extend(opts);\r\n    };\r\n\r\n    /**\r\n     * @param {Object} opts\r\n     * @param {string} [superClass]\r\n     */\r\n    echarts.extendSeriesModel = function (opts, superClass) {\r\n        var Clazz = SeriesModel;\r\n        if (superClass) {\r\n            superClass = 'series.' + superClass.replace('series.', '');\r\n            var classType = parseClassType(superClass);\r\n            Clazz = SeriesModel.getClass(classType.main, classType.sub, true);\r\n        }\r\n        return Clazz.extend(opts);\r\n    };\r\n\r\n    /**\r\n     * @param {Object} opts\r\n     * @param {string} [superClass]\r\n     */\r\n    echarts.extendChartView = function (opts, superClass) {\r\n        var Clazz = ChartView;\r\n        if (superClass) {\r\n            superClass.replace('series.', '');\r\n            var classType = parseClassType(superClass);\r\n            Clazz = ChartView.getClass(classType.main, true);\r\n        }\r\n        return ChartView.extend(opts);\r\n    };\r\n\r\n    /**\r\n     * ZRender need a canvas context to do measureText.\r\n     * But in node environment canvas may be created by node-canvas.\r\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\r\n     *\r\n     * Be careful of using it in the browser.\r\n     *\r\n     * @param {Function} creator\r\n     * @example\r\n     *     var Canvas = require('canvas');\r\n     *     var echarts = require('echarts');\r\n     *     echarts.setCanvasCreator(function () {\r\n     *         // Small size is enough.\r\n     *         return new Canvas(32, 32);\r\n     *     });\r\n     */\r\n    echarts.setCanvasCreator = function (creator) {\r\n        zrUtil.createCanvas = creator;\r\n    };\r\n\r\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, require('./visual/seriesColor'));\r\n    echarts.registerPreprocessor(require('./preprocessor/backwardCompat'));\r\n\r\n    // Default action\r\n    echarts.registerAction({\r\n        type: 'highlight',\r\n        event: 'highlight',\r\n        update: 'highlight'\r\n    }, zrUtil.noop);\r\n    echarts.registerAction({\r\n        type: 'downplay',\r\n        event: 'downplay',\r\n        update: 'downplay'\r\n    }, zrUtil.noop);\r\n\r\n\r\n    // --------\r\n    // Exports\r\n    // --------\r\n    //\r\n    echarts.List = require('./data/List');\r\n    echarts.Model = require('./model/Model');\r\n\r\n    echarts.graphic = require('./util/graphic');\r\n    echarts.number = require('./util/number');\r\n    echarts.format = require('./util/format');\r\n    echarts.matrix = require('zrender/lib/core/matrix');\r\n    echarts.vector = require('zrender/lib/core/vector');\r\n    echarts.color = require('zrender/lib/tool/color');\r\n\r\n    echarts.util = {};\r\n    each([\r\n            'map', 'each', 'filter', 'indexOf', 'inherits',\r\n            'reduce', 'filter', 'bind', 'curry', 'isArray',\r\n            'isString', 'isObject', 'isFunction', 'extend', 'defaults'\r\n        ],\r\n        function (name) {\r\n            echarts.util[name] = zrUtil[name];\r\n        }\r\n    );\r\n\r\n    // PRIORITY\r\n    echarts.PRIORITY = {\r\n        PROCESSOR: {\r\n            FILTER: PRIORITY_PROCESSOR_FILTER,\r\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\r\n        },\r\n        VISUAL: {\r\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\r\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\r\n            CHART: PRIORITY_VISUAL_CHART,\r\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\r\n            BRUSH: PRIORITY_VISUAL_BRUSH\r\n        }\r\n    };\r\n\r\n    module.exports = echarts;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/echarts.js\n ** module id = 523\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","/**\r\n * echarts设备环境识别\r\n *\r\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\r\n * @author firede[firede@firede.us]\r\n * @desc thanks zepto.\r\n */\r\n\r\n    var env = {};\r\n    if (typeof navigator === 'undefined') {\r\n        // In node\r\n        env = {\r\n            browser: {},\r\n            os: {},\r\n            node: true,\r\n            // Assume canvas is supported\r\n            canvasSupported: true\r\n        };\r\n    }\r\n    else {\r\n        env = detect(navigator.userAgent);\r\n    }\r\n\r\n    module.exports = env;\r\n\r\n    // Zepto.js\r\n    // (c) 2010-2013 Thomas Fuchs\r\n    // Zepto.js may be freely distributed under the MIT license.\r\n\r\n    function detect(ua) {\r\n        var os = {};\r\n        var browser = {};\r\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\r\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\r\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\r\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\r\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\r\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\r\n        // var touchpad = webos && ua.match(/TouchPad/);\r\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\r\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\r\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\r\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\r\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\r\n        // var playbook = ua.match(/PlayBook/);\r\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\r\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\r\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\r\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\r\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\r\n            // IE 11 Trident/7.0; rv:11.0\r\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\r\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\r\n\r\n        // Todo: clean this up with a better OS/browser seperation:\r\n        // - discern (more) between multiple browsers on android\r\n        // - decide if kindle fire in silk mode is android or not\r\n        // - Firefox on Android doesn't specify the Android version\r\n        // - possibly devide in os, device and browser hashes\r\n\r\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\r\n\r\n        // if (android) os.android = true, os.version = android[2];\r\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\r\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\r\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\r\n        // if (webos) os.webos = true, os.version = webos[2];\r\n        // if (touchpad) os.touchpad = true;\r\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\r\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\r\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\r\n        // if (playbook) browser.playbook = true;\r\n        // if (kindle) os.kindle = true, os.version = kindle[1];\r\n        // if (silk) browser.silk = true, browser.version = silk[1];\r\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\r\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\r\n        if (firefox) browser.firefox = true, browser.version = firefox[1];\r\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\r\n        // if (webview) browser.webview = true;\r\n        if (ie) {\r\n            browser.ie = true; browser.version = ie[1];\r\n        }\r\n        if (ie) {\r\n            browser.ie = true;\r\n            browser.version = ie[1];\r\n        }\r\n        if (edge) {\r\n            browser.edge = true;\r\n            browser.version = edge[1];\r\n        }\r\n\r\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\r\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\r\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\r\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\r\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\r\n\r\n        return {\r\n            browser: browser,\r\n            os: os,\r\n            node: false,\r\n            // 原生canvas支持，改极端点了\r\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\r\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\r\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\r\n            // works on most browsers\r\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\r\n            // default, so we dont check navigator.maxTouchPoints for them here.\r\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\r\n            // <http://caniuse.com/#search=pointer%20event>.\r\n            pointerEventsSupported: 'onpointerdown' in window\r\n                // Firefox supports pointer but not by default,\r\n                // only MS browsers are reliable on pointer events currently.\r\n                && (browser.edge || (browser.ie && browser.version >= 10))\r\n        };\r\n    }\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/core/env.js\n ** module id = 524\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","/**\r\n * ECharts global model\r\n *\r\n * @module {echarts/model/Global}\r\n *\r\n */\r\n\r\n\r\n\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var modelUtil = require('../util/model');\r\n    var Model = require('./Model');\r\n    var each = zrUtil.each;\r\n    var filter = zrUtil.filter;\r\n    var map = zrUtil.map;\r\n    var isArray = zrUtil.isArray;\r\n    var indexOf = zrUtil.indexOf;\r\n    var isObject = zrUtil.isObject;\r\n\r\n    var ComponentModel = require('./Component');\r\n\r\n    var globalDefault = require('./globalDefault');\r\n\r\n    var OPTION_INNER_KEY = '\\0_ec_inner';\r\n\r\n    /**\r\n     * @alias module:echarts/model/Global\r\n     *\r\n     * @param {Object} option\r\n     * @param {module:echarts/model/Model} parentModel\r\n     * @param {Object} theme\r\n     */\r\n    var GlobalModel = Model.extend({\r\n\r\n        constructor: GlobalModel,\r\n\r\n        init: function (option, parentModel, theme, optionManager) {\r\n            theme = theme || {};\r\n\r\n            this.option = null; // Mark as not initialized.\r\n\r\n            /**\r\n             * @type {module:echarts/model/Model}\r\n             * @private\r\n             */\r\n            this._theme = new Model(theme);\r\n\r\n            /**\r\n             * @type {module:echarts/model/OptionManager}\r\n             */\r\n            this._optionManager = optionManager;\r\n        },\r\n\r\n        setOption: function (option, optionPreprocessorFuncs) {\r\n            zrUtil.assert(\r\n                !(OPTION_INNER_KEY in option),\r\n                'please use chart.getOption()'\r\n            );\r\n\r\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\r\n\r\n            this.resetOption();\r\n        },\r\n\r\n        /**\r\n         * @param {string} type null/undefined: reset all.\r\n         *                      'recreate': force recreate all.\r\n         *                      'timeline': only reset timeline option\r\n         *                      'media': only reset media query option\r\n         * @return {boolean} Whether option changed.\r\n         */\r\n        resetOption: function (type) {\r\n            var optionChanged = false;\r\n            var optionManager = this._optionManager;\r\n\r\n            if (!type || type === 'recreate') {\r\n                var baseOption = optionManager.mountOption(type === 'recreate');\r\n\r\n                if (!this.option || type === 'recreate') {\r\n                    initBase.call(this, baseOption);\r\n                }\r\n                else {\r\n                    this.restoreData();\r\n                    this.mergeOption(baseOption);\r\n                }\r\n                optionChanged = true;\r\n            }\r\n\r\n            if (type === 'timeline' || type === 'media') {\r\n                this.restoreData();\r\n            }\r\n\r\n            if (!type || type === 'recreate' || type === 'timeline') {\r\n                var timelineOption = optionManager.getTimelineOption(this);\r\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\r\n            }\r\n\r\n            if (!type || type === 'recreate' || type === 'media') {\r\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\r\n                if (mediaOptions.length) {\r\n                    each(mediaOptions, function (mediaOption) {\r\n                        this.mergeOption(mediaOption, optionChanged = true);\r\n                    }, this);\r\n                }\r\n            }\r\n\r\n            return optionChanged;\r\n        },\r\n\r\n        /**\r\n         * @protected\r\n         */\r\n        mergeOption: function (newOption) {\r\n            var option = this.option;\r\n            var componentsMap = this._componentsMap;\r\n            var newCptTypes = [];\r\n\r\n            // 如果不存在对应的 component model 则直接 merge\r\n            each(newOption, function (componentOption, mainType) {\r\n                if (componentOption == null) {\r\n                    return;\r\n                }\r\n\r\n                if (!ComponentModel.hasClass(mainType)) {\r\n                    option[mainType] = option[mainType] == null\r\n                        ? zrUtil.clone(componentOption)\r\n                        : zrUtil.merge(option[mainType], componentOption, true);\r\n                }\r\n                else {\r\n                    newCptTypes.push(mainType);\r\n                }\r\n            });\r\n\r\n            // FIXME OPTION 同步是否要改回原来的\r\n            ComponentModel.topologicalTravel(\r\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\r\n            );\r\n\r\n            function visitComponent(mainType, dependencies) {\r\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\r\n\r\n                var mapResult = modelUtil.mappingToExists(\r\n                    componentsMap[mainType], newCptOptionList\r\n                );\r\n\r\n                makeKeyInfo(mainType, mapResult);\r\n\r\n                var dependentModels = getComponentsByTypes(\r\n                    componentsMap, dependencies\r\n                );\r\n\r\n                option[mainType] = [];\r\n                componentsMap[mainType] = [];\r\n\r\n                each(mapResult, function (resultItem, index) {\r\n                    var componentModel = resultItem.exist;\r\n                    var newCptOption = resultItem.option;\r\n\r\n                    zrUtil.assert(\r\n                        isObject(newCptOption) || componentModel,\r\n                        'Empty component definition'\r\n                    );\r\n\r\n                    // Consider where is no new option and should be merged using {},\r\n                    // see removeEdgeAndAdd in topologicalTravel and\r\n                    // ComponentModel.getAllClassMainTypes.\r\n                    if (!newCptOption) {\r\n                        componentModel.mergeOption({}, this);\r\n                        componentModel.optionUpdated({}, false);\r\n                    }\r\n                    else {\r\n                        var ComponentModelClass = ComponentModel.getClass(\r\n                            mainType, resultItem.keyInfo.subType, true\r\n                        );\r\n\r\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\r\n                            componentModel.mergeOption(newCptOption, this);\r\n                            componentModel.optionUpdated(newCptOption, false);\r\n                        }\r\n                        else {\r\n                            // PENDING Global as parent ?\r\n                            var extraOpt = zrUtil.extend(\r\n                                {\r\n                                    dependentModels: dependentModels,\r\n                                    componentIndex: index\r\n                                },\r\n                                resultItem.keyInfo\r\n                            );\r\n                            componentModel = new ComponentModelClass(\r\n                                newCptOption, this, this, extraOpt\r\n                            );\r\n                            componentModel.init(newCptOption, this, this, extraOpt);\r\n                            // Call optionUpdated after init.\r\n                            // newCptOption has been used as componentModel.option\r\n                            // and may be merged with theme and default, so pass null\r\n                            // to avoid confusion.\r\n                            componentModel.optionUpdated(null, true);\r\n                        }\r\n                    }\r\n\r\n                    componentsMap[mainType][index] = componentModel;\r\n                    option[mainType][index] = componentModel.option;\r\n                }, this);\r\n\r\n                // Backup series for filtering.\r\n                if (mainType === 'series') {\r\n                    this._seriesIndices = createSeriesIndices(componentsMap.series);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get option for output (cloned option and inner info removed)\r\n         * @public\r\n         * @return {Object}\r\n         */\r\n        getOption: function () {\r\n            var option = zrUtil.clone(this.option);\r\n\r\n            each(option, function (opts, mainType) {\r\n                if (ComponentModel.hasClass(mainType)) {\r\n                    var opts = modelUtil.normalizeToArray(opts);\r\n                    for (var i = opts.length - 1; i >= 0; i--) {\r\n                        // Remove options with inner id.\r\n                        if (modelUtil.isIdInner(opts[i])) {\r\n                            opts.splice(i, 1);\r\n                        }\r\n                    }\r\n                    option[mainType] = opts;\r\n                }\r\n            });\r\n\r\n            delete option[OPTION_INNER_KEY];\r\n\r\n            return option;\r\n        },\r\n\r\n        /**\r\n         * @return {module:echarts/model/Model}\r\n         */\r\n        getTheme: function () {\r\n            return this._theme;\r\n        },\r\n\r\n        /**\r\n         * @param {string} mainType\r\n         * @param {number} [idx=0]\r\n         * @return {module:echarts/model/Component}\r\n         */\r\n        getComponent: function (mainType, idx) {\r\n            var list = this._componentsMap[mainType];\r\n            if (list) {\r\n                return list[idx || 0];\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {Object} condition\r\n         * @param {string} condition.mainType\r\n         * @param {string} [condition.subType] If ignore, only query by mainType\r\n         * @param {number} [condition.index] Either input index or id or name.\r\n         * @param {string} [condition.id] Either input index or id or name.\r\n         * @param {string} [condition.name] Either input index or id or name.\r\n         * @return {Array.<module:echarts/model/Component>}\r\n         */\r\n        queryComponents: function (condition) {\r\n            var mainType = condition.mainType;\r\n            if (!mainType) {\r\n                return [];\r\n            }\r\n\r\n            var index = condition.index;\r\n            var id = condition.id;\r\n            var name = condition.name;\r\n\r\n            var cpts = this._componentsMap[mainType];\r\n\r\n            if (!cpts || !cpts.length) {\r\n                return [];\r\n            }\r\n\r\n            var result;\r\n\r\n            if (index != null) {\r\n                if (!isArray(index)) {\r\n                    index = [index];\r\n                }\r\n                result = filter(map(index, function (idx) {\r\n                    return cpts[idx];\r\n                }), function (val) {\r\n                    return !!val;\r\n                });\r\n            }\r\n            else if (id != null) {\r\n                var isIdArray = isArray(id);\r\n                result = filter(cpts, function (cpt) {\r\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\r\n                        || (!isIdArray && cpt.id === id);\r\n                });\r\n            }\r\n            else if (name != null) {\r\n                var isNameArray = isArray(name);\r\n                result = filter(cpts, function (cpt) {\r\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\r\n                        || (!isNameArray && cpt.name === name);\r\n                });\r\n            }\r\n\r\n            return filterBySubType(result, condition);\r\n        },\r\n\r\n        /**\r\n         * The interface is different from queryComponents,\r\n         * which is convenient for inner usage.\r\n         *\r\n         * @usage\r\n         * var result = findComponents(\r\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\r\n         * );\r\n         * var result = findComponents(\r\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\r\n         * );\r\n         * var result = findComponents(\r\n         *     {mainType: 'series'},\r\n         *     function (model, index) {...}\r\n         * );\r\n         * // result like [component0, componnet1, ...]\r\n         *\r\n         * @param {Object} condition\r\n         * @param {string} condition.mainType Mandatory.\r\n         * @param {string} [condition.subType] Optional.\r\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\r\n         *        where xxx is mainType.\r\n         *        If query attribute is null/undefined or has no index/id/name,\r\n         *        do not filtering by query conditions, which is convenient for\r\n         *        no-payload situations or when target of action is global.\r\n         * @param {Function} [condition.filter] parameter: component, return boolean.\r\n         * @return {Array.<module:echarts/model/Component>}\r\n         */\r\n        findComponents: function (condition) {\r\n            var query = condition.query;\r\n            var mainType = condition.mainType;\r\n\r\n            var queryCond = getQueryCond(query);\r\n            var result = queryCond\r\n                ? this.queryComponents(queryCond)\r\n                : this._componentsMap[mainType];\r\n\r\n            return doFilter(filterBySubType(result, condition));\r\n\r\n            function getQueryCond(q) {\r\n                var indexAttr = mainType + 'Index';\r\n                var idAttr = mainType + 'Id';\r\n                var nameAttr = mainType + 'Name';\r\n                return q && (\r\n                        q.hasOwnProperty(indexAttr)\r\n                        || q.hasOwnProperty(idAttr)\r\n                        || q.hasOwnProperty(nameAttr)\r\n                    )\r\n                    ? {\r\n                        mainType: mainType,\r\n                        // subType will be filtered finally.\r\n                        index: q[indexAttr],\r\n                        id: q[idAttr],\r\n                        name: q[nameAttr]\r\n                    }\r\n                    : null;\r\n            }\r\n\r\n            function doFilter(res) {\r\n                return condition.filter\r\n                     ? filter(res, condition.filter)\r\n                     : res;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @usage\r\n         * eachComponent('legend', function (legendModel, index) {\r\n         *     ...\r\n         * });\r\n         * eachComponent(function (componentType, model, index) {\r\n         *     // componentType does not include subType\r\n         *     // (componentType is 'xxx' but not 'xxx.aa')\r\n         * });\r\n         * eachComponent(\r\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\r\n         *     function (model, index) {...}\r\n         * );\r\n         * eachComponent(\r\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\r\n         *     function (model, index) {...}\r\n         * );\r\n         *\r\n         * @param {string|Object=} mainType When mainType is object, the definition\r\n         *                                  is the same as the method 'findComponents'.\r\n         * @param {Function} cb\r\n         * @param {*} context\r\n         */\r\n        eachComponent: function (mainType, cb, context) {\r\n            var componentsMap = this._componentsMap;\r\n\r\n            if (typeof mainType === 'function') {\r\n                context = cb;\r\n                cb = mainType;\r\n                each(componentsMap, function (components, componentType) {\r\n                    each(components, function (component, index) {\r\n                        cb.call(context, componentType, component, index);\r\n                    });\r\n                });\r\n            }\r\n            else if (zrUtil.isString(mainType)) {\r\n                each(componentsMap[mainType], cb, context);\r\n            }\r\n            else if (isObject(mainType)) {\r\n                var queryResult = this.findComponents(mainType);\r\n                each(queryResult, cb, context);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {string} name\r\n         * @return {Array.<module:echarts/model/Series>}\r\n         */\r\n        getSeriesByName: function (name) {\r\n            var series = this._componentsMap.series;\r\n            return filter(series, function (oneSeries) {\r\n                return oneSeries.name === name;\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @param {number} seriesIndex\r\n         * @return {module:echarts/model/Series}\r\n         */\r\n        getSeriesByIndex: function (seriesIndex) {\r\n            return this._componentsMap.series[seriesIndex];\r\n        },\r\n\r\n        /**\r\n         * @param {string} subType\r\n         * @return {Array.<module:echarts/model/Series>}\r\n         */\r\n        getSeriesByType: function (subType) {\r\n            var series = this._componentsMap.series;\r\n            return filter(series, function (oneSeries) {\r\n                return oneSeries.subType === subType;\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @return {Array.<module:echarts/model/Series>}\r\n         */\r\n        getSeries: function () {\r\n            return this._componentsMap.series.slice();\r\n        },\r\n\r\n        /**\r\n         * After filtering, series may be different\r\n         * frome raw series.\r\n         *\r\n         * @param {Function} cb\r\n         * @param {*} context\r\n         */\r\n        eachSeries: function (cb, context) {\r\n            assertSeriesInitialized(this);\r\n            each(this._seriesIndices, function (rawSeriesIndex) {\r\n                var series = this._componentsMap.series[rawSeriesIndex];\r\n                cb.call(context, series, rawSeriesIndex);\r\n            }, this);\r\n        },\r\n\r\n        /**\r\n         * Iterate raw series before filtered.\r\n         *\r\n         * @param {Function} cb\r\n         * @param {*} context\r\n         */\r\n        eachRawSeries: function (cb, context) {\r\n            each(this._componentsMap.series, cb, context);\r\n        },\r\n\r\n        /**\r\n         * After filtering, series may be different.\r\n         * frome raw series.\r\n         *\r\n         * @parma {string} subType\r\n         * @param {Function} cb\r\n         * @param {*} context\r\n         */\r\n        eachSeriesByType: function (subType, cb, context) {\r\n            assertSeriesInitialized(this);\r\n            each(this._seriesIndices, function (rawSeriesIndex) {\r\n                var series = this._componentsMap.series[rawSeriesIndex];\r\n                if (series.subType === subType) {\r\n                    cb.call(context, series, rawSeriesIndex);\r\n                }\r\n            }, this);\r\n        },\r\n\r\n        /**\r\n         * Iterate raw series before filtered of given type.\r\n         *\r\n         * @parma {string} subType\r\n         * @param {Function} cb\r\n         * @param {*} context\r\n         */\r\n        eachRawSeriesByType: function (subType, cb, context) {\r\n            return each(this.getSeriesByType(subType), cb, context);\r\n        },\r\n\r\n        /**\r\n         * @param {module:echarts/model/Series} seriesModel\r\n         */\r\n        isSeriesFiltered: function (seriesModel) {\r\n            assertSeriesInitialized(this);\r\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\r\n        },\r\n\r\n        /**\r\n         * @param {Function} cb\r\n         * @param {*} context\r\n         */\r\n        filterSeries: function (cb, context) {\r\n            assertSeriesInitialized(this);\r\n            var filteredSeries = filter(\r\n                this._componentsMap.series, cb, context\r\n            );\r\n            this._seriesIndices = createSeriesIndices(filteredSeries);\r\n        },\r\n\r\n        restoreData: function () {\r\n            var componentsMap = this._componentsMap;\r\n\r\n            this._seriesIndices = createSeriesIndices(componentsMap.series);\r\n\r\n            var componentTypes = [];\r\n            each(componentsMap, function (components, componentType) {\r\n                componentTypes.push(componentType);\r\n            });\r\n\r\n            ComponentModel.topologicalTravel(\r\n                componentTypes,\r\n                ComponentModel.getAllClassMainTypes(),\r\n                function (componentType, dependencies) {\r\n                    each(componentsMap[componentType], function (component) {\r\n                        component.restoreData();\r\n                    });\r\n                }\r\n            );\r\n        }\r\n\r\n    });\r\n\r\n    /**\r\n     * @inner\r\n     */\r\n    function mergeTheme(option, theme) {\r\n        for (var name in theme) {\r\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\r\n            if (!ComponentModel.hasClass(name)) {\r\n                if (typeof theme[name] === 'object') {\r\n                    option[name] = !option[name]\r\n                        ? zrUtil.clone(theme[name])\r\n                        : zrUtil.merge(option[name], theme[name], false);\r\n                }\r\n                else {\r\n                    if (option[name] == null) {\r\n                        option[name] = theme[name];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function initBase(baseOption) {\r\n        baseOption = baseOption;\r\n\r\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\r\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\r\n        this.option = {};\r\n        this.option[OPTION_INNER_KEY] = 1;\r\n\r\n        /**\r\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\r\n         * @private\r\n         */\r\n        this._componentsMap = {};\r\n\r\n        /**\r\n         * Mapping between filtered series list and raw series list.\r\n         * key: filtered series indices, value: raw series indices.\r\n         * @type {Array.<nubmer>}\r\n         * @private\r\n         */\r\n        this._seriesIndices = null;\r\n\r\n        mergeTheme(baseOption, this._theme.option);\r\n\r\n        // TODO Needs clone when merging to the unexisted property\r\n        zrUtil.merge(baseOption, globalDefault, false);\r\n\r\n        this.mergeOption(baseOption);\r\n    }\r\n\r\n    /**\r\n     * @inner\r\n     * @param {Array.<string>|string} types model types\r\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\r\n     */\r\n    function getComponentsByTypes(componentsMap, types) {\r\n        if (!zrUtil.isArray(types)) {\r\n            types = types ? [types] : [];\r\n        }\r\n\r\n        var ret = {};\r\n        each(types, function (type) {\r\n            ret[type] = (componentsMap[type] || []).slice();\r\n        });\r\n\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * @inner\r\n     */\r\n    function makeKeyInfo(mainType, mapResult) {\r\n        // We use this id to hash component models and view instances\r\n        // in echarts. id can be specified by user, or auto generated.\r\n\r\n        // The id generation rule ensures new view instance are able\r\n        // to mapped to old instance when setOption are called in\r\n        // no-merge mode. So we generate model id by name and plus\r\n        // type in view id.\r\n\r\n        // name can be duplicated among components, which is convenient\r\n        // to specify multi components (like series) by one name.\r\n\r\n        // Ensure that each id is distinct.\r\n        var idMap = {};\r\n\r\n        each(mapResult, function (item, index) {\r\n            var existCpt = item.exist;\r\n            existCpt && (idMap[existCpt.id] = item);\r\n        });\r\n\r\n        each(mapResult, function (item, index) {\r\n            var opt = item.option;\r\n\r\n            zrUtil.assert(\r\n                !opt || opt.id == null || !idMap[opt.id] || idMap[opt.id] === item,\r\n                'id duplicates: ' + (opt && opt.id)\r\n            );\r\n\r\n            opt && opt.id != null && (idMap[opt.id] = item);\r\n\r\n            // Complete subType\r\n            if (isObject(opt)) {\r\n                var subType = determineSubType(mainType, opt, item.exist);\r\n                item.keyInfo = {mainType: mainType, subType: subType};\r\n            }\r\n        });\r\n\r\n        // Make name and id.\r\n        each(mapResult, function (item, index) {\r\n            var existCpt = item.exist;\r\n            var opt = item.option;\r\n            var keyInfo = item.keyInfo;\r\n\r\n            if (!isObject(opt)) {\r\n                return;\r\n            }\r\n\r\n            // name can be overwitten. Consider case: axis.name = '20km'.\r\n            // But id generated by name will not be changed, which affect\r\n            // only in that case: setOption with 'not merge mode' and view\r\n            // instance will be recreated, which can be accepted.\r\n            keyInfo.name = opt.name != null\r\n                ? opt.name + ''\r\n                : existCpt\r\n                ? existCpt.name\r\n                : '\\0-';\r\n\r\n            if (existCpt) {\r\n                keyInfo.id = existCpt.id;\r\n            }\r\n            else if (opt.id != null) {\r\n                keyInfo.id = opt.id + '';\r\n            }\r\n            else {\r\n                // Consider this situatoin:\r\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\r\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\r\n                // Series with the same name between optionA and optionB\r\n                // should be mapped.\r\n                var idNum = 0;\r\n                do {\r\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\r\n                }\r\n                while (idMap[keyInfo.id]);\r\n            }\r\n\r\n            idMap[keyInfo.id] = item;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @inner\r\n     */\r\n    function determineSubType(mainType, newCptOption, existComponent) {\r\n        var subType = newCptOption.type\r\n            ? newCptOption.type\r\n            : existComponent\r\n            ? existComponent.subType\r\n            // Use determineSubType only when there is no existComponent.\r\n            : ComponentModel.determineSubType(mainType, newCptOption);\r\n\r\n        // tooltip, markline, markpoint may always has no subType\r\n        return subType;\r\n    }\r\n\r\n    /**\r\n     * @inner\r\n     */\r\n    function createSeriesIndices(seriesModels) {\r\n        return map(seriesModels, function (series) {\r\n            return series.componentIndex;\r\n        }) || [];\r\n    }\r\n\r\n    /**\r\n     * @inner\r\n     */\r\n    function filterBySubType(components, condition) {\r\n        // Using hasOwnProperty for restrict. Consider\r\n        // subType is undefined in user payload.\r\n        return condition.hasOwnProperty('subType')\r\n            ? filter(components, function (cpt) {\r\n                return cpt.subType === condition.subType;\r\n            })\r\n            : components;\r\n    }\r\n\r\n    /**\r\n     * @inner\r\n     */\r\n    function assertSeriesInitialized(ecModel) {\r\n        // Components that use _seriesIndices should depends on series component,\r\n        // which make sure that their initialization is after series.\r\n        if (__DEV__) {\r\n            if (!ecModel._seriesIndices) {\r\n                throw new Error('Series has not been initialized yet.');\r\n            }\r\n        }\r\n    }\r\n\r\n    zrUtil.mixin(GlobalModel, require('./mixin/colorPalette'));\r\n\r\n    module.exports = GlobalModel;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/model/Global.js\n ** module id = 525\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","/**\r\n * @module zrender/core/util\r\n */\r\n\r\n\r\n    // 用于处理merge时无法遍历Date等对象的问题\r\n    var BUILTIN_OBJECT = {\r\n        '[object Function]': 1,\r\n        '[object RegExp]': 1,\r\n        '[object Date]': 1,\r\n        '[object Error]': 1,\r\n        '[object CanvasGradient]': 1,\r\n        '[object CanvasPattern]': 1,\r\n        // In node-canvas Image can be Canvas.Image\r\n        '[object Image]': 1\r\n    };\r\n\r\n    var objToString = Object.prototype.toString;\r\n\r\n    var arrayProto = Array.prototype;\r\n    var nativeForEach = arrayProto.forEach;\r\n    var nativeFilter = arrayProto.filter;\r\n    var nativeSlice = arrayProto.slice;\r\n    var nativeMap = arrayProto.map;\r\n    var nativeReduce = arrayProto.reduce;\r\n\r\n    /**\r\n     * @param {*} source\r\n     * @return {*} 拷贝后的新对象\r\n     */\r\n    function clone(source) {\r\n        if (typeof source == 'object' && source !== null) {\r\n            var result = source;\r\n            if (source instanceof Array) {\r\n                result = [];\r\n                for (var i = 0, len = source.length; i < len; i++) {\r\n                    result[i] = clone(source[i]);\r\n                }\r\n            }\r\n            else if (\r\n                !isBuildInObject(source)\r\n                // 是否为 dom 对象\r\n                && !isDom(source)\r\n            ) {\r\n                result = {};\r\n                for (var key in source) {\r\n                    if (source.hasOwnProperty(key)) {\r\n                        result[key] = clone(source[key]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        return source;\r\n    }\r\n\r\n    /**\r\n     * @memberOf module:zrender/core/util\r\n     * @param {*} target\r\n     * @param {*} source\r\n     * @param {boolean} [overwrite=false]\r\n     */\r\n    function merge(target, source, overwrite) {\r\n        // We should escapse that source is string\r\n        // and enter for ... in ...\r\n        if (!isObject(source) || !isObject(target)) {\r\n            return overwrite ? clone(source) : target;\r\n        }\r\n\r\n        for (var key in source) {\r\n            if (source.hasOwnProperty(key)) {\r\n                var targetProp = target[key];\r\n                var sourceProp = source[key];\r\n\r\n                if (isObject(sourceProp)\r\n                    && isObject(targetProp)\r\n                    && !isArray(sourceProp)\r\n                    && !isArray(targetProp)\r\n                    && !isDom(sourceProp)\r\n                    && !isDom(targetProp)\r\n                    && !isBuildInObject(sourceProp)\r\n                    && !isBuildInObject(targetProp)\r\n                ) {\r\n                    // 如果需要递归覆盖，就递归调用merge\r\n                    merge(targetProp, sourceProp, overwrite);\r\n                }\r\n                else if (overwrite || !(key in target)) {\r\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\r\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\r\n                    target[key] = clone(source[key], true);\r\n                }\r\n            }\r\n        }\r\n\r\n        return target;\r\n    }\r\n\r\n    /**\r\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\r\n     * @param {boolean} [overwrite=false]\r\n     * @return {*} target\r\n     */\r\n    function mergeAll(targetAndSources, overwrite) {\r\n        var result = targetAndSources[0];\r\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\r\n            result = merge(result, targetAndSources[i], overwrite);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @param {*} target\r\n     * @param {*} source\r\n     * @memberOf module:zrender/core/util\r\n     */\r\n    function extend(target, source) {\r\n        for (var key in source) {\r\n            if (source.hasOwnProperty(key)) {\r\n                target[key] = source[key];\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    /**\r\n     * @param {*} target\r\n     * @param {*} source\r\n     * @param {boolen} [overlay=false]\r\n     * @memberOf module:zrender/core/util\r\n     */\r\n    function defaults(target, source, overlay) {\r\n        for (var key in source) {\r\n            if (source.hasOwnProperty(key)\r\n                && (overlay ? source[key] != null : target[key] == null)\r\n            ) {\r\n                target[key] = source[key];\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function createCanvas() {\r\n        return document.createElement('canvas');\r\n    }\r\n    // FIXME\r\n    var _ctx;\r\n    function getContext() {\r\n        if (!_ctx) {\r\n            // Use util.createCanvas instead of createCanvas\r\n            // because createCanvas may be overwritten in different environment\r\n            _ctx = util.createCanvas().getContext('2d');\r\n        }\r\n        return _ctx;\r\n    }\r\n\r\n    /**\r\n     * 查询数组中元素的index\r\n     * @memberOf module:zrender/core/util\r\n     */\r\n    function indexOf(array, value) {\r\n        if (array) {\r\n            if (array.indexOf) {\r\n                return array.indexOf(value);\r\n            }\r\n            for (var i = 0, len = array.length; i < len; i++) {\r\n                if (array[i] === value) {\r\n                    return i;\r\n                }\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    /**\r\n     * 构造类继承关系\r\n     *\r\n     * @memberOf module:zrender/core/util\r\n     * @param {Function} clazz 源类\r\n     * @param {Function} baseClazz 基类\r\n     */\r\n    function inherits(clazz, baseClazz) {\r\n        var clazzPrototype = clazz.prototype;\r\n        function F() {}\r\n        F.prototype = baseClazz.prototype;\r\n        clazz.prototype = new F();\r\n\r\n        for (var prop in clazzPrototype) {\r\n            clazz.prototype[prop] = clazzPrototype[prop];\r\n        }\r\n        clazz.prototype.constructor = clazz;\r\n        clazz.superClass = baseClazz;\r\n    }\r\n\r\n    /**\r\n     * @memberOf module:zrender/core/util\r\n     * @param {Object|Function} target\r\n     * @param {Object|Function} sorce\r\n     * @param {boolean} overlay\r\n     */\r\n    function mixin(target, source, overlay) {\r\n        target = 'prototype' in target ? target.prototype : target;\r\n        source = 'prototype' in source ? source.prototype : source;\r\n\r\n        defaults(target, source, overlay);\r\n    }\r\n\r\n    /**\r\n     * @param {Array|TypedArray} data\r\n     */\r\n    function isArrayLike(data) {\r\n        if (! data) {\r\n            return;\r\n        }\r\n        if (typeof data == 'string') {\r\n            return false;\r\n        }\r\n        return typeof data.length == 'number';\r\n    }\r\n\r\n    /**\r\n     * 数组或对象遍历\r\n     * @memberOf module:zrender/core/util\r\n     * @param {Object|Array} obj\r\n     * @param {Function} cb\r\n     * @param {*} [context]\r\n     */\r\n    function each(obj, cb, context) {\r\n        if (!(obj && cb)) {\r\n            return;\r\n        }\r\n        if (obj.forEach && obj.forEach === nativeForEach) {\r\n            obj.forEach(cb, context);\r\n        }\r\n        else if (obj.length === +obj.length) {\r\n            for (var i = 0, len = obj.length; i < len; i++) {\r\n                cb.call(context, obj[i], i, obj);\r\n            }\r\n        }\r\n        else {\r\n            for (var key in obj) {\r\n                if (obj.hasOwnProperty(key)) {\r\n                    cb.call(context, obj[key], key, obj);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 数组映射\r\n     * @memberOf module:zrender/core/util\r\n     * @param {Array} obj\r\n     * @param {Function} cb\r\n     * @param {*} [context]\r\n     * @return {Array}\r\n     */\r\n    function map(obj, cb, context) {\r\n        if (!(obj && cb)) {\r\n            return;\r\n        }\r\n        if (obj.map && obj.map === nativeMap) {\r\n            return obj.map(cb, context);\r\n        }\r\n        else {\r\n            var result = [];\r\n            for (var i = 0, len = obj.length; i < len; i++) {\r\n                result.push(cb.call(context, obj[i], i, obj));\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @memberOf module:zrender/core/util\r\n     * @param {Array} obj\r\n     * @param {Function} cb\r\n     * @param {Object} [memo]\r\n     * @param {*} [context]\r\n     * @return {Array}\r\n     */\r\n    function reduce(obj, cb, memo, context) {\r\n        if (!(obj && cb)) {\r\n            return;\r\n        }\r\n        if (obj.reduce && obj.reduce === nativeReduce) {\r\n            return obj.reduce(cb, memo, context);\r\n        }\r\n        else {\r\n            for (var i = 0, len = obj.length; i < len; i++) {\r\n                memo = cb.call(context, memo, obj[i], i, obj);\r\n            }\r\n            return memo;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 数组过滤\r\n     * @memberOf module:zrender/core/util\r\n     * @param {Array} obj\r\n     * @param {Function} cb\r\n     * @param {*} [context]\r\n     * @return {Array}\r\n     */\r\n    function filter(obj, cb, context) {\r\n        if (!(obj && cb)) {\r\n            return;\r\n        }\r\n        if (obj.filter && obj.filter === nativeFilter) {\r\n            return obj.filter(cb, context);\r\n        }\r\n        else {\r\n            var result = [];\r\n            for (var i = 0, len = obj.length; i < len; i++) {\r\n                if (cb.call(context, obj[i], i, obj)) {\r\n                    result.push(obj[i]);\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 数组项查找\r\n     * @memberOf module:zrender/core/util\r\n     * @param {Array} obj\r\n     * @param {Function} cb\r\n     * @param {*} [context]\r\n     * @return {Array}\r\n     */\r\n    function find(obj, cb, context) {\r\n        if (!(obj && cb)) {\r\n            return;\r\n        }\r\n        for (var i = 0, len = obj.length; i < len; i++) {\r\n            if (cb.call(context, obj[i], i, obj)) {\r\n                return obj[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @memberOf module:zrender/core/util\r\n     * @param {Function} func\r\n     * @param {*} context\r\n     * @return {Function}\r\n     */\r\n    function bind(func, context) {\r\n        var args = nativeSlice.call(arguments, 2);\r\n        return function () {\r\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @memberOf module:zrender/core/util\r\n     * @param {Function} func\r\n     * @return {Function}\r\n     */\r\n    function curry(func) {\r\n        var args = nativeSlice.call(arguments, 1);\r\n        return function () {\r\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @memberOf module:zrender/core/util\r\n     * @param {*} value\r\n     * @return {boolean}\r\n     */\r\n    function isArray(value) {\r\n        return objToString.call(value) === '[object Array]';\r\n    }\r\n\r\n    /**\r\n     * @memberOf module:zrender/core/util\r\n     * @param {*} value\r\n     * @return {boolean}\r\n     */\r\n    function isFunction(value) {\r\n        return typeof value === 'function';\r\n    }\r\n\r\n    /**\r\n     * @memberOf module:zrender/core/util\r\n     * @param {*} value\r\n     * @return {boolean}\r\n     */\r\n    function isString(value) {\r\n        return objToString.call(value) === '[object String]';\r\n    }\r\n\r\n    /**\r\n     * @memberOf module:zrender/core/util\r\n     * @param {*} value\r\n     * @return {boolean}\r\n     */\r\n    function isObject(value) {\r\n        // Avoid a V8 JIT bug in Chrome 19-20.\r\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\r\n        var type = typeof value;\r\n        return type === 'function' || (!!value && type == 'object');\r\n    }\r\n\r\n    /**\r\n     * @memberOf module:zrender/core/util\r\n     * @param {*} value\r\n     * @return {boolean}\r\n     */\r\n    function isBuildInObject(value) {\r\n        return !!BUILTIN_OBJECT[objToString.call(value)];\r\n    }\r\n\r\n    /**\r\n     * @memberOf module:zrender/core/util\r\n     * @param {*} value\r\n     * @return {boolean}\r\n     */\r\n    function isDom(value) {\r\n        return value && value.nodeType === 1\r\n               && typeof(value.nodeName) == 'string';\r\n    }\r\n\r\n    /**\r\n     * If value1 is not null, then return value1, otherwise judget rest of values.\r\n     * @memberOf module:zrender/core/util\r\n     * @return {*} Final value\r\n     */\r\n    function retrieve(values) {\r\n        for (var i = 0, len = arguments.length; i < len; i++) {\r\n            if (arguments[i] != null) {\r\n                return arguments[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @memberOf module:zrender/core/util\r\n     * @param {Array} arr\r\n     * @param {number} startIndex\r\n     * @param {number} endIndex\r\n     * @return {Array}\r\n     */\r\n    function slice() {\r\n        return Function.call.apply(nativeSlice, arguments);\r\n    }\r\n\r\n    /**\r\n     * @memberOf module:zrender/core/util\r\n     * @param {boolean} condition\r\n     * @param {string} message\r\n     */\r\n    function assert(condition, message) {\r\n        if (!condition) {\r\n            throw new Error(message);\r\n        }\r\n    }\r\n\r\n    var util = {\r\n        inherits: inherits,\r\n        mixin: mixin,\r\n        clone: clone,\r\n        merge: merge,\r\n        mergeAll: mergeAll,\r\n        extend: extend,\r\n        defaults: defaults,\r\n        getContext: getContext,\r\n        createCanvas: createCanvas,\r\n        indexOf: indexOf,\r\n        slice: slice,\r\n        find: find,\r\n        isArrayLike: isArrayLike,\r\n        each: each,\r\n        map: map,\r\n        reduce: reduce,\r\n        filter: filter,\r\n        bind: bind,\r\n        curry: curry,\r\n        isArray: isArray,\r\n        isString: isString,\r\n        isObject: isObject,\r\n        isFunction: isFunction,\r\n        isBuildInObject: isBuildInObject,\r\n        isDom: isDom,\r\n        retrieve: retrieve,\r\n        assert: assert,\r\n        noop: function () {}\r\n    };\r\n    module.exports = util;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/core/util.js\n ** module id = 526\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","\r\n\r\n    var formatUtil = require('./format');\r\n    var nubmerUtil = require('./number');\r\n    var Model = require('../model/Model');\r\n    var zrUtil = require('zrender/lib/core/util');\r\n\r\n    var AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle'];\r\n\r\n    var modelUtil = {};\r\n\r\n    /**\r\n     * Create \"each\" method to iterate names.\r\n     *\r\n     * @pubilc\r\n     * @param  {Array.<string>} names\r\n     * @param  {Array.<string>=} attrs\r\n     * @return {Function}\r\n     */\r\n    modelUtil.createNameEach = function (names, attrs) {\r\n        names = names.slice();\r\n        var capitalNames = zrUtil.map(names, modelUtil.capitalFirst);\r\n        attrs = (attrs || []).slice();\r\n        var capitalAttrs = zrUtil.map(attrs, modelUtil.capitalFirst);\r\n\r\n        return function (callback, context) {\r\n            zrUtil.each(names, function (name, index) {\r\n                var nameObj = {name: name, capital: capitalNames[index]};\r\n\r\n                for (var j = 0; j < attrs.length; j++) {\r\n                    nameObj[attrs[j]] = name + capitalAttrs[j];\r\n                }\r\n\r\n                callback.call(context, nameObj);\r\n            });\r\n        };\r\n    };\r\n\r\n    /**\r\n     * @public\r\n     */\r\n    modelUtil.capitalFirst = function (str) {\r\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\r\n    };\r\n\r\n    /**\r\n     * Iterate each dimension name.\r\n     *\r\n     * @public\r\n     * @param {Function} callback The parameter is like:\r\n     *                            {\r\n     *                                name: 'angle',\r\n     *                                capital: 'Angle',\r\n     *                                axis: 'angleAxis',\r\n     *                                axisIndex: 'angleAixs',\r\n     *                                index: 'angleIndex'\r\n     *                            }\r\n     * @param {Object} context\r\n     */\r\n    modelUtil.eachAxisDim = modelUtil.createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index']);\r\n\r\n    /**\r\n     * If value is not array, then translate it to array.\r\n     * @param  {*} value\r\n     * @return {Array} [value] or value\r\n     */\r\n    modelUtil.normalizeToArray = function (value) {\r\n        return value instanceof Array\r\n            ? value\r\n            : value == null\r\n            ? []\r\n            : [value];\r\n    };\r\n\r\n    /**\r\n     * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\r\n     * dataZoomModels and 'links' make up one or more graphics.\r\n     * This function finds the graphic where the source dataZoomModel is in.\r\n     *\r\n     * @public\r\n     * @param {Function} forEachNode Node iterator.\r\n     * @param {Function} forEachEdgeType edgeType iterator\r\n     * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\r\n     * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\r\n     */\r\n    modelUtil.createLinkedNodesFinder = function (forEachNode, forEachEdgeType, edgeIdGetter) {\r\n\r\n        return function (sourceNode) {\r\n            var result = {\r\n                nodes: [],\r\n                records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\r\n            };\r\n\r\n            forEachEdgeType(function (edgeType) {\r\n                result.records[edgeType.name] = {};\r\n            });\r\n\r\n            if (!sourceNode) {\r\n                return result;\r\n            }\r\n\r\n            absorb(sourceNode, result);\r\n\r\n            var existsLink;\r\n            do {\r\n                existsLink = false;\r\n                forEachNode(processSingleNode);\r\n            }\r\n            while (existsLink);\r\n\r\n            function processSingleNode(node) {\r\n                if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\r\n                    absorb(node, result);\r\n                    existsLink = true;\r\n                }\r\n            }\r\n\r\n            return result;\r\n        };\r\n\r\n        function isNodeAbsorded(node, result) {\r\n            return zrUtil.indexOf(result.nodes, node) >= 0;\r\n        }\r\n\r\n        function isLinked(node, result) {\r\n            var hasLink = false;\r\n            forEachEdgeType(function (edgeType) {\r\n                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\r\n                    result.records[edgeType.name][edgeId] && (hasLink = true);\r\n                });\r\n            });\r\n            return hasLink;\r\n        }\r\n\r\n        function absorb(node, result) {\r\n            result.nodes.push(node);\r\n            forEachEdgeType(function (edgeType) {\r\n                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\r\n                    result.records[edgeType.name][edgeId] = true;\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Sync default option between normal and emphasis like `position` and `show`\r\n     * In case some one will write code like\r\n     *     label: {\r\n     *         normal: {\r\n     *             show: false,\r\n     *             position: 'outside',\r\n     *             textStyle: {\r\n     *                 fontSize: 18\r\n     *             }\r\n     *         },\r\n     *         emphasis: {\r\n     *             show: true\r\n     *         }\r\n     *     }\r\n     * @param {Object} opt\r\n     * @param {Array.<string>} subOpts\r\n     */\r\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\r\n        if (opt) {\r\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\r\n            var normalOpt = opt.normal = opt.normal || {};\r\n\r\n            // Default emphasis option from normal\r\n            zrUtil.each(subOpts, function (subOptName) {\r\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\r\n                if (val != null) {\r\n                    emphasisOpt[subOptName] = val;\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    modelUtil.LABEL_OPTIONS = ['position', 'show', 'textStyle', 'distance', 'formatter'];\r\n\r\n    /**\r\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\r\n     * This helper method retieves value from data.\r\n     * @param {string|number|Date|Array|Object} dataItem\r\n     * @return {number|string|Date|Array.<number|string|Date>}\r\n     */\r\n    modelUtil.getDataItemValue = function (dataItem) {\r\n        // Performance sensitive.\r\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\r\n    };\r\n\r\n    /**\r\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\r\n     * This helper method determine if dataItem has extra option besides value\r\n     * @param {string|number|Date|Array|Object} dataItem\r\n     */\r\n    modelUtil.isDataItemOption = function (dataItem) {\r\n        return zrUtil.isObject(dataItem)\r\n            && !(dataItem instanceof Array);\r\n            // // markLine data can be array\r\n            // && !(dataItem[0] && zrUtil.isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\r\n    };\r\n\r\n    /**\r\n     * This helper method convert value in data.\r\n     * @param {string|number|Date} value\r\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\r\n     */\r\n    modelUtil.converDataValue = function (value, dimInfo) {\r\n        // Performance sensitive.\r\n        var dimType = dimInfo && dimInfo.type;\r\n        if (dimType === 'ordinal') {\r\n            return value;\r\n        }\r\n\r\n        if (dimType === 'time' && !isFinite(value) && value != null && value !== '-') {\r\n            value = +nubmerUtil.parseDate(value);\r\n        }\r\n\r\n        // dimType defaults 'number'.\r\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\r\n        // parse to NaN.\r\n        return (value == null || value === '')\r\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\r\n    };\r\n\r\n    /**\r\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\r\n     * @param {module:echarts/data/List} data\r\n     * @param {Object} opt\r\n     * @param {string} [opt.seriesIndex]\r\n     * @param {Object} [opt.name]\r\n     * @param {Object} [opt.mainType]\r\n     * @param {Object} [opt.subType]\r\n     */\r\n    modelUtil.createDataFormatModel = function (data, opt) {\r\n        var model = new Model();\r\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\r\n        model.seriesIndex = opt.seriesIndex;\r\n        model.name = opt.name || '';\r\n        model.mainType = opt.mainType;\r\n        model.subType = opt.subType;\r\n\r\n        model.getData = function () {\r\n            return data;\r\n        };\r\n        return model;\r\n    };\r\n\r\n    // PENDING A little ugly\r\n    modelUtil.dataFormatMixin = {\r\n        /**\r\n         * Get params for formatter\r\n         * @param {number} dataIndex\r\n         * @param {string} [dataType]\r\n         * @return {Object}\r\n         */\r\n        getDataParams: function (dataIndex, dataType) {\r\n            var data = this.getData(dataType);\r\n\r\n            var seriesIndex = this.seriesIndex;\r\n            var seriesName = this.name;\r\n\r\n            var rawValue = this.getRawValue(dataIndex, dataType);\r\n            var rawDataIndex = data.getRawIndex(dataIndex);\r\n            var name = data.getName(dataIndex, true);\r\n            var itemOpt = data.getRawDataItem(dataIndex);\r\n\r\n            return {\r\n                componentType: this.mainType,\r\n                componentSubType: this.subType,\r\n                seriesType: this.mainType === 'series' ? this.subType : null,\r\n                seriesIndex: seriesIndex,\r\n                seriesName: seriesName,\r\n                name: name,\r\n                dataIndex: rawDataIndex,\r\n                data: itemOpt,\r\n                dataType: dataType,\r\n                value: rawValue,\r\n                color: data.getItemVisual(dataIndex, 'color'),\r\n\r\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\r\n                $vars: ['seriesName', 'name', 'value']\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Format label\r\n         * @param {number} dataIndex\r\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\r\n         * @param {string} [dataType]\r\n         * @param {number} [dimIndex]\r\n         * @return {string}\r\n         */\r\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\r\n            status = status || 'normal';\r\n            var data = this.getData(dataType);\r\n            var itemModel = data.getItemModel(dataIndex);\r\n\r\n            var params = this.getDataParams(dataIndex, dataType);\r\n            if (dimIndex != null && (params.value instanceof Array)) {\r\n                params.value = params.value[dimIndex];\r\n            }\r\n\r\n            var formatter = itemModel.get(['label', status, 'formatter']);\r\n\r\n            if (typeof formatter === 'function') {\r\n                params.status = status;\r\n                return formatter(params);\r\n            }\r\n            else if (typeof formatter === 'string') {\r\n                return formatUtil.formatTpl(formatter, params);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get raw value in option\r\n         * @param {number} idx\r\n         * @param {string} [dataType]\r\n         * @return {Object}\r\n         */\r\n        getRawValue: function (idx, dataType) {\r\n            var data = this.getData(dataType);\r\n            var dataItem = data.getRawDataItem(idx);\r\n            if (dataItem != null) {\r\n                return (zrUtil.isObject(dataItem) && !(dataItem instanceof Array))\r\n                    ? dataItem.value : dataItem;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Should be implemented.\r\n         * @param {number} dataIndex\r\n         * @param {boolean} [multipleSeries=false]\r\n         * @param {number} [dataType]\r\n         * @return {string} tooltip string\r\n         */\r\n        formatTooltip: zrUtil.noop\r\n    };\r\n\r\n    /**\r\n     * Mapping to exists for merge.\r\n     *\r\n     * @public\r\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\r\n     * @param {Object|Array.<Object>} newCptOptions\r\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\r\n     *                          which order is the same as exists.\r\n     */\r\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\r\n        // Mapping by the order by original option (but not order of\r\n        // new option) in merge mode. Because we should ensure\r\n        // some specified index (like xAxisIndex) is consistent with\r\n        // original option, which is easy to understand, espatially in\r\n        // media query. And in most case, merge option is used to\r\n        // update partial option but not be expected to change order.\r\n        newCptOptions = (newCptOptions || []).slice();\r\n\r\n        var result = zrUtil.map(exists || [], function (obj, index) {\r\n            return {exist: obj};\r\n        });\r\n\r\n        // Mapping by id or name if specified.\r\n        zrUtil.each(newCptOptions, function (cptOption, index) {\r\n            if (!zrUtil.isObject(cptOption)) {\r\n                return;\r\n            }\r\n\r\n            for (var i = 0; i < result.length; i++) {\r\n                var exist = result[i].exist;\r\n                if (!result[i].option // Consider name: two map to one.\r\n                    && (\r\n                        // id has highest priority.\r\n                        (cptOption.id != null && exist.id === cptOption.id + '')\r\n                        || (cptOption.name != null\r\n                            && !modelUtil.isIdInner(cptOption)\r\n                            && !modelUtil.isIdInner(exist)\r\n                            && exist.name === cptOption.name + ''\r\n                        )\r\n                    )\r\n                ) {\r\n                    result[i].option = cptOption;\r\n                    newCptOptions[index] = null;\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n\r\n        // Otherwise mapping by index.\r\n        zrUtil.each(newCptOptions, function (cptOption, index) {\r\n            if (!zrUtil.isObject(cptOption)) {\r\n                return;\r\n            }\r\n\r\n            var i = 0;\r\n            for (; i < result.length; i++) {\r\n                var exist = result[i].exist;\r\n                if (!result[i].option\r\n                    && !modelUtil.isIdInner(exist)\r\n                    // Caution:\r\n                    // Do not overwrite id. But name can be overwritten,\r\n                    // because axis use name as 'show label text'.\r\n                    // 'exist' always has id and name and we dont\r\n                    // need to check it.\r\n                    && cptOption.id == null\r\n                ) {\r\n                    result[i].option = cptOption;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (i >= result.length) {\r\n                result.push({option: cptOption});\r\n            }\r\n        });\r\n\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * @public\r\n     * @param {Object} cptOption\r\n     * @return {boolean}\r\n     */\r\n    modelUtil.isIdInner = function (cptOption) {\r\n        return zrUtil.isObject(cptOption)\r\n            && cptOption.id\r\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\r\n    };\r\n\r\n    /**\r\n     * A helper for removing duplicate items between batchA and batchB,\r\n     * and in themselves, and categorize by series.\r\n     *\r\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\r\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\r\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\r\n     */\r\n    modelUtil.compressBatches = function (batchA, batchB) {\r\n        var mapA = {};\r\n        var mapB = {};\r\n\r\n        makeMap(batchA || [], mapA);\r\n        makeMap(batchB || [], mapB, mapA);\r\n\r\n        return [mapToArray(mapA), mapToArray(mapB)];\r\n\r\n        function makeMap(sourceBatch, map, otherMap) {\r\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\r\n                var seriesId = sourceBatch[i].seriesId;\r\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\r\n                var otherDataIndices = otherMap && otherMap[seriesId];\r\n\r\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\r\n                    var dataIndex = dataIndices[j];\r\n\r\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\r\n                        otherDataIndices[dataIndex] = null;\r\n                    }\r\n                    else {\r\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function mapToArray(map, isData) {\r\n            var result = [];\r\n            for (var i in map) {\r\n                if (map.hasOwnProperty(i) && map[i] != null) {\r\n                    if (isData) {\r\n                        result.push(+i);\r\n                    }\r\n                    else {\r\n                        var dataIndices = mapToArray(map[i], true);\r\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\r\n                    }\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n\r\n    module.exports = modelUtil;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/util/model.js\n ** module id = 527\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","\r\n\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var numberUtil = require('./number');\r\n    var textContain = require('zrender/lib/contain/text');\r\n\r\n    /**\r\n     * 每三位默认加,格式化\r\n     * @type {string|number} x\r\n     */\r\n    function addCommas(x) {\r\n        if (isNaN(x)) {\r\n            return '-';\r\n        }\r\n        x = (x + '').split('.');\r\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\r\n               + (x.length > 1 ? ('.' + x[1]) : '');\r\n    }\r\n\r\n    /**\r\n     * @param {string} str\r\n     * @return {string} str\r\n     */\r\n    function toCamelCase(str) {\r\n        return str.toLowerCase().replace(/-(.)/g, function(match, group1) {\r\n            return group1.toUpperCase();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Normalize css liked array configuration\r\n     * e.g.\r\n     *  3 => [3, 3, 3, 3]\r\n     *  [4, 2] => [4, 2, 4, 2]\r\n     *  [4, 3, 2] => [4, 3, 2, 3]\r\n     * @param {number|Array.<number>} val\r\n     */\r\n    function normalizeCssArray(val) {\r\n        var len = val.length;\r\n        if (typeof (val) === 'number') {\r\n            return [val, val, val, val];\r\n        }\r\n        else if (len === 2) {\r\n            // vertical | horizontal\r\n            return [val[0], val[1], val[0], val[1]];\r\n        }\r\n        else if (len === 3) {\r\n            // top | horizontal | bottom\r\n            return [val[0], val[1], val[2], val[1]];\r\n        }\r\n        return val;\r\n    }\r\n\r\n    function encodeHTML(source) {\r\n        return String(source)\r\n            .replace(/&/g, '&amp;')\r\n            .replace(/</g, '&lt;')\r\n            .replace(/>/g, '&gt;')\r\n            .replace(/\"/g, '&quot;')\r\n            .replace(/'/g, '&#39;');\r\n    }\r\n\r\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\r\n\r\n    function wrapVar(varName, seriesIdx) {\r\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\r\n    }\r\n    /**\r\n     * Template formatter\r\n     * @param  {string} tpl\r\n     * @param  {Array.<Object>|Object} paramsList\r\n     * @return {string}\r\n     */\r\n    function formatTpl(tpl, paramsList) {\r\n        if (!zrUtil.isArray(paramsList)) {\r\n            paramsList = [paramsList];\r\n        }\r\n        var seriesLen = paramsList.length;\r\n        if (!seriesLen) {\r\n            return '';\r\n        }\r\n\r\n        var $vars = paramsList[0].$vars || [];\r\n        for (var i = 0; i < $vars.length; i++) {\r\n            var alias = TPL_VAR_ALIAS[i];\r\n            tpl = tpl.replace(wrapVar(alias),  wrapVar(alias, 0));\r\n        }\r\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\r\n            for (var k = 0; k < $vars.length; k++) {\r\n                tpl = tpl.replace(\r\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\r\n                    paramsList[seriesIdx][$vars[k]]\r\n                );\r\n            }\r\n        }\r\n\r\n        return tpl;\r\n    }\r\n\r\n    /**\r\n     * ISO Date format\r\n     * @param {string} tpl\r\n     * @param {number} value\r\n     * @inner\r\n     */\r\n    function formatTime(tpl, value) {\r\n        if (tpl === 'week'\r\n            || tpl === 'month'\r\n            || tpl === 'quarter'\r\n            || tpl === 'half-year'\r\n            || tpl === 'year'\r\n        ) {\r\n            tpl = 'MM-dd\\nyyyy';\r\n        }\r\n\r\n        var date = numberUtil.parseDate(value);\r\n        var y = date.getFullYear();\r\n        var M = date.getMonth() + 1;\r\n        var d = date.getDate();\r\n        var h = date.getHours();\r\n        var m = date.getMinutes();\r\n        var s = date.getSeconds();\r\n\r\n        tpl = tpl.replace('MM', s2d(M))\r\n            .toLowerCase()\r\n            .replace('yyyy', y)\r\n            .replace('yy', y % 100)\r\n            .replace('dd', s2d(d))\r\n            .replace('d', d)\r\n            .replace('hh', s2d(h))\r\n            .replace('h', h)\r\n            .replace('mm', s2d(m))\r\n            .replace('m', m)\r\n            .replace('ss', s2d(s))\r\n            .replace('s', s);\r\n\r\n        return tpl;\r\n    }\r\n\r\n    /**\r\n     * @param {string} str\r\n     * @return {string}\r\n     * @inner\r\n     */\r\n    function s2d(str) {\r\n        return str < 10 ? ('0' + str) : str;\r\n    }\r\n\r\n    module.exports = {\r\n\r\n        normalizeCssArray: normalizeCssArray,\r\n\r\n        addCommas: addCommas,\r\n\r\n        toCamelCase: toCamelCase,\r\n\r\n        encodeHTML: encodeHTML,\r\n\r\n        formatTpl: formatTpl,\r\n\r\n        formatTime: formatTime,\r\n\r\n        truncateText: textContain.truncateText\r\n    };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/util/format.js\n ** module id = 528\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","/**\r\n * 数值处理模块\r\n * @module echarts/util/number\r\n */\r\n\r\n\r\n\r\n    var number = {};\r\n\r\n    var RADIAN_EPSILON = 1e-4;\r\n\r\n    function _trim(str) {\r\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\r\n    }\r\n\r\n    /**\r\n     * Linear mapping a value from domain to range\r\n     * @memberOf module:echarts/util/number\r\n     * @param  {(number|Array.<number>)} val\r\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\r\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\r\n     * @param  {boolean} clamp\r\n     * @return {(number|Array.<number>}\r\n     */\r\n    number.linearMap = function (val, domain, range, clamp) {\r\n        var subDomain = domain[1] - domain[0];\r\n        var subRange = range[1] - range[0];\r\n\r\n        if (subDomain === 0) {\r\n            return subRange === 0\r\n                ? range[0]\r\n                : (range[0] + range[1]) / 2;\r\n        }\r\n\r\n        // Avoid accuracy problem in edge, such as\r\n        // 146.39 - 62.83 === 83.55999999999999.\r\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\r\n        // It is a little verbose for efficiency considering this method\r\n        // is a hotspot.\r\n        if (clamp) {\r\n            if (subDomain > 0) {\r\n                if (val <= domain[0]) {\r\n                    return range[0];\r\n                }\r\n                else if (val >= domain[1]) {\r\n                    return range[1];\r\n                }\r\n            }\r\n            else {\r\n                if (val >= domain[0]) {\r\n                    return range[0];\r\n                }\r\n                else if (val <= domain[1]) {\r\n                    return range[1];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (val === domain[0]) {\r\n                return range[0];\r\n            }\r\n            if (val === domain[1]) {\r\n                return range[1];\r\n            }\r\n        }\r\n\r\n        return (val - domain[0]) / subDomain * subRange + range[0];\r\n    };\r\n\r\n    /**\r\n     * Convert a percent string to absolute number.\r\n     * Returns NaN if percent is not a valid string or number\r\n     * @memberOf module:echarts/util/number\r\n     * @param {string|number} percent\r\n     * @param {number} all\r\n     * @return {number}\r\n     */\r\n    number.parsePercent = function(percent, all) {\r\n        switch (percent) {\r\n            case 'center':\r\n            case 'middle':\r\n                percent = '50%';\r\n                break;\r\n            case 'left':\r\n            case 'top':\r\n                percent = '0%';\r\n                break;\r\n            case 'right':\r\n            case 'bottom':\r\n                percent = '100%';\r\n                break;\r\n        }\r\n        if (typeof percent === 'string') {\r\n            if (_trim(percent).match(/%$/)) {\r\n                return parseFloat(percent) / 100 * all;\r\n            }\r\n\r\n            return parseFloat(percent);\r\n        }\r\n\r\n        return percent == null ? NaN : +percent;\r\n    };\r\n\r\n    /**\r\n     * Fix rounding error of float numbers\r\n     * @param {number} x\r\n     * @return {number}\r\n     */\r\n    number.round = function (x) {\r\n        // PENDING\r\n        return +(+x).toFixed(10);\r\n    };\r\n\r\n    number.asc = function (arr) {\r\n        arr.sort(function (a, b) {\r\n            return a - b;\r\n        });\r\n        return arr;\r\n    };\r\n\r\n    /**\r\n     * Get precision\r\n     * @param {number} val\r\n     */\r\n    number.getPrecision = function (val) {\r\n        val = +val;\r\n        if (isNaN(val)) {\r\n            return 0;\r\n        }\r\n        // It is much faster than methods converting number to string as follows\r\n        //      var tmp = val.toString();\r\n        //      return tmp.length - 1 - tmp.indexOf('.');\r\n        // especially when precision is low\r\n        var e = 1;\r\n        var count = 0;\r\n        while (Math.round(val * e) / e !== val) {\r\n            e *= 10;\r\n            count++;\r\n        }\r\n        return count;\r\n    };\r\n\r\n    /**\r\n     * @param {Array.<number>} dataExtent\r\n     * @param {Array.<number>} pixelExtent\r\n     * @return {number}  precision\r\n     */\r\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\r\n        var log = Math.log;\r\n        var LN10 = Math.LN10;\r\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\r\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\r\n        return Math.max(\r\n            -dataQuantity + sizeQuantity,\r\n            0\r\n        );\r\n    };\r\n\r\n    // Number.MAX_SAFE_INTEGER, ie do not support.\r\n    number.MAX_SAFE_INTEGER = 9007199254740991;\r\n\r\n    /**\r\n     * To 0 - 2 * PI, considering negative radian.\r\n     * @param {number} radian\r\n     * @return {number}\r\n     */\r\n    number.remRadian = function (radian) {\r\n        var pi2 = Math.PI * 2;\r\n        return (radian % pi2 + pi2) % pi2;\r\n    };\r\n\r\n    /**\r\n     * @param {type} radian\r\n     * @return {boolean}\r\n     */\r\n    number.isRadianAroundZero = function (val) {\r\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\r\n    };\r\n\r\n    /**\r\n     * @param {string|Date|number} value\r\n     * @return {number} timestamp\r\n     */\r\n    number.parseDate = function (value) {\r\n        return value instanceof Date\r\n            ? value\r\n            : new Date(\r\n                typeof value === 'string'\r\n                    // FIXME Date.parse('1970-01-01') is UTC, Date.parse('1970/01/01') is local\r\n                    ? (new Date(value.replace(/-/g, '/')) - new Date('1970/01/01'))\r\n                    : Math.round(value)\r\n            );\r\n    };\r\n\r\n    /**\r\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\r\n     * @param  {number} val\r\n     * @return {number}\r\n     */\r\n    number.quantity = function (val) {\r\n        return Math.pow(10, Math.floor(Math.log(val) / Math.LN10));\r\n    };\r\n\r\n    // \"Nice Numbers for Graph Labels\" of Graphic Gems\r\n    /**\r\n     * find a “nice” number approximately equal to x. Round the number if round = true, take ceiling if round = false\r\n     * The primary observation is that the “nicest” numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\r\n     * @param  {number} val\r\n     * @param  {boolean} round\r\n     * @return {number}\r\n     */\r\n    number.nice = function (val, round) {\r\n        var exp10 = number.quantity(val);\r\n        var f = val / exp10; // between 1 and 10\r\n        var nf;\r\n        if (round) {\r\n            if (f < 1.5) { nf = 1; }\r\n            else if (f < 2.5) { nf = 2; }\r\n            else if (f < 4) { nf = 3; }\r\n            else if (f < 7) { nf = 5; }\r\n            else { nf = 10; }\r\n        }\r\n        else {\r\n            if (f < 1) { nf = 1; }\r\n            else if (f < 2) { nf = 2; }\r\n            else if (f < 3) { nf = 3; }\r\n            else if (f < 5) { nf = 5; }\r\n            else { nf = 10; }\r\n        }\r\n        return nf * exp10;\r\n    };\r\n\r\n    module.exports = number;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/util/number.js\n ** module id = 529\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","\r\n\r\n    var textWidthCache = {};\r\n    var textWidthCacheCounter = 0;\r\n    var TEXT_CACHE_MAX = 5000;\r\n\r\n    var util = require('../core/util');\r\n    var BoundingRect = require('../core/BoundingRect');\r\n    var retrieve = util.retrieve;\r\n\r\n    function getTextWidth(text, textFont) {\r\n        var key = text + ':' + textFont;\r\n        if (textWidthCache[key]) {\r\n            return textWidthCache[key];\r\n        }\r\n\r\n        var textLines = (text + '').split('\\n');\r\n        var width = 0;\r\n\r\n        for (var i = 0, l = textLines.length; i < l; i++) {\r\n            // measureText 可以被覆盖以兼容不支持 Canvas 的环境\r\n            width = Math.max(textContain.measureText(textLines[i], textFont).width, width);\r\n        }\r\n\r\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\r\n            textWidthCacheCounter = 0;\r\n            textWidthCache = {};\r\n        }\r\n        textWidthCacheCounter++;\r\n        textWidthCache[key] = width;\r\n\r\n        return width;\r\n    }\r\n\r\n    function getTextRect(text, textFont, textAlign, textBaseline) {\r\n        var textLineLen = ((text || '') + '').split('\\n').length;\r\n\r\n        var width = getTextWidth(text, textFont);\r\n        // FIXME 高度计算比较粗暴\r\n        var lineHeight = getTextWidth('国', textFont);\r\n        var height = textLineLen * lineHeight;\r\n\r\n        var rect = new BoundingRect(0, 0, width, height);\r\n        // Text has a special line height property\r\n        rect.lineHeight = lineHeight;\r\n\r\n        switch (textBaseline) {\r\n            case 'bottom':\r\n            case 'alphabetic':\r\n                rect.y -= lineHeight;\r\n                break;\r\n            case 'middle':\r\n                rect.y -= lineHeight / 2;\r\n                break;\r\n            // case 'hanging':\r\n            // case 'top':\r\n        }\r\n\r\n        // FIXME Right to left language\r\n        switch (textAlign) {\r\n            case 'end':\r\n            case 'right':\r\n                rect.x -= rect.width;\r\n                break;\r\n            case 'center':\r\n                rect.x -= rect.width / 2;\r\n                break;\r\n            // case 'start':\r\n            // case 'left':\r\n        }\r\n\r\n        return rect;\r\n    }\r\n\r\n    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {\r\n\r\n        var x = rect.x;\r\n        var y = rect.y;\r\n\r\n        var height = rect.height;\r\n        var width = rect.width;\r\n\r\n        var textHeight = textRect.height;\r\n\r\n        var halfHeight = height / 2 - textHeight / 2;\r\n\r\n        var textAlign = 'left';\r\n\r\n        switch (textPosition) {\r\n            case 'left':\r\n                x -= distance;\r\n                y += halfHeight;\r\n                textAlign = 'right';\r\n                break;\r\n            case 'right':\r\n                x += distance + width;\r\n                y += halfHeight;\r\n                textAlign = 'left';\r\n                break;\r\n            case 'top':\r\n                x += width / 2;\r\n                y -= distance + textHeight;\r\n                textAlign = 'center';\r\n                break;\r\n            case 'bottom':\r\n                x += width / 2;\r\n                y += height + distance;\r\n                textAlign = 'center';\r\n                break;\r\n            case 'inside':\r\n                x += width / 2;\r\n                y += halfHeight;\r\n                textAlign = 'center';\r\n                break;\r\n            case 'insideLeft':\r\n                x += distance;\r\n                y += halfHeight;\r\n                textAlign = 'left';\r\n                break;\r\n            case 'insideRight':\r\n                x += width - distance;\r\n                y += halfHeight;\r\n                textAlign = 'right';\r\n                break;\r\n            case 'insideTop':\r\n                x += width / 2;\r\n                y += distance;\r\n                textAlign = 'center';\r\n                break;\r\n            case 'insideBottom':\r\n                x += width / 2;\r\n                y += height - textHeight - distance;\r\n                textAlign = 'center';\r\n                break;\r\n            case 'insideTopLeft':\r\n                x += distance;\r\n                y += distance;\r\n                textAlign = 'left';\r\n                break;\r\n            case 'insideTopRight':\r\n                x += width - distance;\r\n                y += distance;\r\n                textAlign = 'right';\r\n                break;\r\n            case 'insideBottomLeft':\r\n                x += distance;\r\n                y += height - textHeight - distance;\r\n                break;\r\n            case 'insideBottomRight':\r\n                x += width - distance;\r\n                y += height - textHeight - distance;\r\n                textAlign = 'right';\r\n                break;\r\n        }\r\n\r\n        return {\r\n            x: x,\r\n            y: y,\r\n            textAlign: textAlign,\r\n            textBaseline: 'top'\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Show ellipsis if overflow.\r\n     *\r\n     * @param  {string} text\r\n     * @param  {string} containerWidth\r\n     * @param  {string} textFont\r\n     * @param  {number} [ellipsis='...']\r\n     * @param  {Object} [options]\r\n     * @param  {number} [options.maxIterations=3]\r\n     * @param  {number} [options.minChar=0] If truncate result are less\r\n     *                  then minChar, ellipsis will not show, which is\r\n     *                  better for user hint in some cases.\r\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\r\n     * @return {string}\r\n     */\r\n    function truncateText(text, containerWidth, textFont, ellipsis, options) {\r\n        if (!containerWidth) {\r\n            return '';\r\n        }\r\n\r\n        options = options || {};\r\n\r\n        ellipsis = retrieve(ellipsis, '...');\r\n        var maxIterations = retrieve(options.maxIterations, 2);\r\n        var minChar = retrieve(options.minChar, 0);\r\n        // FIXME\r\n        // Other languages?\r\n        var cnCharWidth = getTextWidth('国', textFont);\r\n        // FIXME\r\n        // Consider proportional font?\r\n        var ascCharWidth = getTextWidth('a', textFont);\r\n        var placeholder = retrieve(options.placeholder, '');\r\n\r\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\r\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\r\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\r\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\r\n            contentWidth -= ascCharWidth;\r\n        }\r\n\r\n        var ellipsisWidth = getTextWidth(ellipsis);\r\n        if (ellipsisWidth > contentWidth) {\r\n            ellipsis = '';\r\n            ellipsisWidth = 0;\r\n        }\r\n\r\n        contentWidth = containerWidth - ellipsisWidth;\r\n\r\n        var textLines = (text + '').split('\\n');\r\n\r\n        for (var i = 0, len = textLines.length; i < len; i++) {\r\n            var textLine = textLines[i];\r\n            var lineWidth = getTextWidth(textLine, textFont);\r\n\r\n            if (lineWidth <= containerWidth) {\r\n                continue;\r\n            }\r\n\r\n            for (var j = 0;; j++) {\r\n                if (lineWidth <= contentWidth || j >= maxIterations) {\r\n                    textLine += ellipsis;\r\n                    break;\r\n                }\r\n\r\n                var subLength = j === 0\r\n                    ? estimateLength(textLine, contentWidth, ascCharWidth, cnCharWidth)\r\n                    : lineWidth > 0\r\n                    ? Math.floor(textLine.length * contentWidth / lineWidth)\r\n                    : 0;\r\n\r\n                textLine = textLine.substr(0, subLength);\r\n                lineWidth = getTextWidth(textLine, textFont);\r\n            }\r\n\r\n            if (textLine === '') {\r\n                textLine = placeholder;\r\n            }\r\n\r\n            textLines[i] = textLine;\r\n        }\r\n\r\n        return textLines.join('\\n');\r\n    }\r\n\r\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\r\n        var width = 0;\r\n        var i = 0;\r\n        for (var len = text.length; i < len && width < contentWidth; i++) {\r\n            var charCode = text.charCodeAt(i);\r\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\r\n        }\r\n        return i;\r\n    }\r\n\r\n    var textContain = {\r\n\r\n        getWidth: getTextWidth,\r\n\r\n        getBoundingRect: getTextRect,\r\n\r\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\r\n\r\n        truncateText: truncateText,\r\n\r\n        measureText: function (text, textFont) {\r\n            var ctx = util.getContext();\r\n            ctx.font = textFont || '12px sans-serif';\r\n            return ctx.measureText(text);\r\n        }\r\n    };\r\n\r\n    module.exports = textContain;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/contain/text.js\n ** module id = 530\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","'use strict';\r\n/**\r\n * @module echarts/core/BoundingRect\r\n */\r\n\r\n\r\n    var vec2 = require('./vector');\r\n    var matrix = require('./matrix');\r\n\r\n    var v2ApplyTransform = vec2.applyTransform;\r\n    var mathMin = Math.min;\r\n    var mathAbs = Math.abs;\r\n    var mathMax = Math.max;\r\n    /**\r\n     * @alias module:echarts/core/BoundingRect\r\n     */\r\n    function BoundingRect(x, y, width, height) {\r\n        /**\r\n         * @type {number}\r\n         */\r\n        this.x = x;\r\n        /**\r\n         * @type {number}\r\n         */\r\n        this.y = y;\r\n        /**\r\n         * @type {number}\r\n         */\r\n        this.width = width;\r\n        /**\r\n         * @type {number}\r\n         */\r\n        this.height = height;\r\n    }\r\n\r\n    BoundingRect.prototype = {\r\n\r\n        constructor: BoundingRect,\r\n\r\n        /**\r\n         * @param {module:echarts/core/BoundingRect} other\r\n         */\r\n        union: function (other) {\r\n            var x = mathMin(other.x, this.x);\r\n            var y = mathMin(other.y, this.y);\r\n\r\n            this.width = mathMax(\r\n                    other.x + other.width,\r\n                    this.x + this.width\r\n                ) - x;\r\n            this.height = mathMax(\r\n                    other.y + other.height,\r\n                    this.y + this.height\r\n                ) - y;\r\n            this.x = x;\r\n            this.y = y;\r\n        },\r\n\r\n        /**\r\n         * @param {Array.<number>} m\r\n         * @methods\r\n         */\r\n        applyTransform: (function () {\r\n            var min = [];\r\n            var max = [];\r\n            return function (m) {\r\n                // In case usage like this\r\n                // el.getBoundingRect().applyTransform(el.transform)\r\n                // And element has no transform\r\n                if (!m) {\r\n                    return;\r\n                }\r\n                min[0] = this.x;\r\n                min[1] = this.y;\r\n                max[0] = this.x + this.width;\r\n                max[1] = this.y + this.height;\r\n\r\n                v2ApplyTransform(min, min, m);\r\n                v2ApplyTransform(max, max, m);\r\n\r\n                this.x = mathMin(min[0], max[0]);\r\n                this.y = mathMin(min[1], max[1]);\r\n                this.width = mathAbs(max[0] - min[0]);\r\n                this.height = mathAbs(max[1] - min[1]);\r\n            };\r\n        })(),\r\n\r\n        /**\r\n         * Calculate matrix of transforming from self to target rect\r\n         * @param  {module:zrender/core/BoundingRect} b\r\n         * @return {Array.<number>}\r\n         */\r\n        calculateTransform: function (b) {\r\n            var a = this;\r\n            var sx = b.width / a.width;\r\n            var sy = b.height / a.height;\r\n\r\n            var m = matrix.create();\r\n\r\n            // 矩阵右乘\r\n            matrix.translate(m, m, [-a.x, -a.y]);\r\n            matrix.scale(m, m, [sx, sy]);\r\n            matrix.translate(m, m, [b.x, b.y]);\r\n\r\n            return m;\r\n        },\r\n\r\n        /**\r\n         * @param {(module:echarts/core/BoundingRect|Object)} b\r\n         * @return {boolean}\r\n         */\r\n        intersect: function (b) {\r\n            var a = this;\r\n            var ax0 = a.x;\r\n            var ax1 = a.x + a.width;\r\n            var ay0 = a.y;\r\n            var ay1 = a.y + a.height;\r\n\r\n            var bx0 = b.x;\r\n            var bx1 = b.x + b.width;\r\n            var by0 = b.y;\r\n            var by1 = b.y + b.height;\r\n\r\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\r\n        },\r\n\r\n        contain: function (x, y) {\r\n            var rect = this;\r\n            return x >= rect.x\r\n                && x <= (rect.x + rect.width)\r\n                && y >= rect.y\r\n                && y <= (rect.y + rect.height);\r\n        },\r\n\r\n        /**\r\n         * @return {module:echarts/core/BoundingRect}\r\n         */\r\n        clone: function () {\r\n            return new BoundingRect(this.x, this.y, this.width, this.height);\r\n        },\r\n\r\n        /**\r\n         * Copy from another rect\r\n         */\r\n        copy: function (other) {\r\n            this.x = other.x;\r\n            this.y = other.y;\r\n            this.width = other.width;\r\n            this.height = other.height;\r\n        }\r\n    };\r\n\r\n    module.exports = BoundingRect;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/core/BoundingRect.js\n ** module id = 531\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","\r\n    var ArrayCtor = typeof Float32Array === 'undefined'\r\n        ? Array\r\n        : Float32Array;\r\n\r\n    /**\r\n     * @typedef {Float32Array|Array.<number>} Vector2\r\n     */\r\n    /**\r\n     * 二维向量类\r\n     * @exports zrender/tool/vector\r\n     */\r\n    var vector = {\r\n        /**\r\n         * 创建一个向量\r\n         * @param {number} [x=0]\r\n         * @param {number} [y=0]\r\n         * @return {Vector2}\r\n         */\r\n        create: function (x, y) {\r\n            var out = new ArrayCtor(2);\r\n            if (x == null) {\r\n                x = 0;\r\n            }\r\n            if (y == null) {\r\n                y = 0;\r\n            }\r\n            out[0] = x;\r\n            out[1] = y;\r\n            return out;\r\n        },\r\n\r\n        /**\r\n         * 复制向量数据\r\n         * @param {Vector2} out\r\n         * @param {Vector2} v\r\n         * @return {Vector2}\r\n         */\r\n        copy: function (out, v) {\r\n            out[0] = v[0];\r\n            out[1] = v[1];\r\n            return out;\r\n        },\r\n\r\n        /**\r\n         * 克隆一个向量\r\n         * @param {Vector2} v\r\n         * @return {Vector2}\r\n         */\r\n        clone: function (v) {\r\n            var out = new ArrayCtor(2);\r\n            out[0] = v[0];\r\n            out[1] = v[1];\r\n            return out;\r\n        },\r\n\r\n        /**\r\n         * 设置向量的两个项\r\n         * @param {Vector2} out\r\n         * @param {number} a\r\n         * @param {number} b\r\n         * @return {Vector2} 结果\r\n         */\r\n        set: function (out, a, b) {\r\n            out[0] = a;\r\n            out[1] = b;\r\n            return out;\r\n        },\r\n\r\n        /**\r\n         * 向量相加\r\n         * @param {Vector2} out\r\n         * @param {Vector2} v1\r\n         * @param {Vector2} v2\r\n         */\r\n        add: function (out, v1, v2) {\r\n            out[0] = v1[0] + v2[0];\r\n            out[1] = v1[1] + v2[1];\r\n            return out;\r\n        },\r\n\r\n        /**\r\n         * 向量缩放后相加\r\n         * @param {Vector2} out\r\n         * @param {Vector2} v1\r\n         * @param {Vector2} v2\r\n         * @param {number} a\r\n         */\r\n        scaleAndAdd: function (out, v1, v2, a) {\r\n            out[0] = v1[0] + v2[0] * a;\r\n            out[1] = v1[1] + v2[1] * a;\r\n            return out;\r\n        },\r\n\r\n        /**\r\n         * 向量相减\r\n         * @param {Vector2} out\r\n         * @param {Vector2} v1\r\n         * @param {Vector2} v2\r\n         */\r\n        sub: function (out, v1, v2) {\r\n            out[0] = v1[0] - v2[0];\r\n            out[1] = v1[1] - v2[1];\r\n            return out;\r\n        },\r\n\r\n        /**\r\n         * 向量长度\r\n         * @param {Vector2} v\r\n         * @return {number}\r\n         */\r\n        len: function (v) {\r\n            return Math.sqrt(this.lenSquare(v));\r\n        },\r\n\r\n        /**\r\n         * 向量长度平方\r\n         * @param {Vector2} v\r\n         * @return {number}\r\n         */\r\n        lenSquare: function (v) {\r\n            return v[0] * v[0] + v[1] * v[1];\r\n        },\r\n\r\n        /**\r\n         * 向量乘法\r\n         * @param {Vector2} out\r\n         * @param {Vector2} v1\r\n         * @param {Vector2} v2\r\n         */\r\n        mul: function (out, v1, v2) {\r\n            out[0] = v1[0] * v2[0];\r\n            out[1] = v1[1] * v2[1];\r\n            return out;\r\n        },\r\n\r\n        /**\r\n         * 向量除法\r\n         * @param {Vector2} out\r\n         * @param {Vector2} v1\r\n         * @param {Vector2} v2\r\n         */\r\n        div: function (out, v1, v2) {\r\n            out[0] = v1[0] / v2[0];\r\n            out[1] = v1[1] / v2[1];\r\n            return out;\r\n        },\r\n\r\n        /**\r\n         * 向量点乘\r\n         * @param {Vector2} v1\r\n         * @param {Vector2} v2\r\n         * @return {number}\r\n         */\r\n        dot: function (v1, v2) {\r\n            return v1[0] * v2[0] + v1[1] * v2[1];\r\n        },\r\n\r\n        /**\r\n         * 向量缩放\r\n         * @param {Vector2} out\r\n         * @param {Vector2} v\r\n         * @param {number} s\r\n         */\r\n        scale: function (out, v, s) {\r\n            out[0] = v[0] * s;\r\n            out[1] = v[1] * s;\r\n            return out;\r\n        },\r\n\r\n        /**\r\n         * 向量归一化\r\n         * @param {Vector2} out\r\n         * @param {Vector2} v\r\n         */\r\n        normalize: function (out, v) {\r\n            var d = vector.len(v);\r\n            if (d === 0) {\r\n                out[0] = 0;\r\n                out[1] = 0;\r\n            }\r\n            else {\r\n                out[0] = v[0] / d;\r\n                out[1] = v[1] / d;\r\n            }\r\n            return out;\r\n        },\r\n\r\n        /**\r\n         * 计算向量间距离\r\n         * @param {Vector2} v1\r\n         * @param {Vector2} v2\r\n         * @return {number}\r\n         */\r\n        distance: function (v1, v2) {\r\n            return Math.sqrt(\r\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\r\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\r\n            );\r\n        },\r\n\r\n        /**\r\n         * 向量距离平方\r\n         * @param {Vector2} v1\r\n         * @param {Vector2} v2\r\n         * @return {number}\r\n         */\r\n        distanceSquare: function (v1, v2) {\r\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\r\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\r\n        },\r\n\r\n        /**\r\n         * 求负向量\r\n         * @param {Vector2} out\r\n         * @param {Vector2} v\r\n         */\r\n        negate: function (out, v) {\r\n            out[0] = -v[0];\r\n            out[1] = -v[1];\r\n            return out;\r\n        },\r\n\r\n        /**\r\n         * 插值两个点\r\n         * @param {Vector2} out\r\n         * @param {Vector2} v1\r\n         * @param {Vector2} v2\r\n         * @param {number} t\r\n         */\r\n        lerp: function (out, v1, v2, t) {\r\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\r\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\r\n            return out;\r\n        },\r\n\r\n        /**\r\n         * 矩阵左乘向量\r\n         * @param {Vector2} out\r\n         * @param {Vector2} v\r\n         * @param {Vector2} m\r\n         */\r\n        applyTransform: function (out, v, m) {\r\n            var x = v[0];\r\n            var y = v[1];\r\n            out[0] = m[0] * x + m[2] * y + m[4];\r\n            out[1] = m[1] * x + m[3] * y + m[5];\r\n            return out;\r\n        },\r\n        /**\r\n         * 求两个向量最小值\r\n         * @param  {Vector2} out\r\n         * @param  {Vector2} v1\r\n         * @param  {Vector2} v2\r\n         */\r\n        min: function (out, v1, v2) {\r\n            out[0] = Math.min(v1[0], v2[0]);\r\n            out[1] = Math.min(v1[1], v2[1]);\r\n            return out;\r\n        },\r\n        /**\r\n         * 求两个向量最大值\r\n         * @param  {Vector2} out\r\n         * @param  {Vector2} v1\r\n         * @param  {Vector2} v2\r\n         */\r\n        max: function (out, v1, v2) {\r\n            out[0] = Math.max(v1[0], v2[0]);\r\n            out[1] = Math.max(v1[1], v2[1]);\r\n            return out;\r\n        }\r\n    };\r\n\r\n    vector.length = vector.len;\r\n    vector.lengthSquare = vector.lenSquare;\r\n    vector.dist = vector.distance;\r\n    vector.distSquare = vector.distanceSquare;\r\n\r\n    module.exports = vector;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/core/vector.js\n ** module id = 532\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","\r\n    var ArrayCtor = typeof Float32Array === 'undefined'\r\n        ? Array\r\n        : Float32Array;\r\n    /**\r\n     * 3x2矩阵操作类\r\n     * @exports zrender/tool/matrix\r\n     */\r\n    var matrix = {\r\n        /**\r\n         * 创建一个单位矩阵\r\n         * @return {Float32Array|Array.<number>}\r\n         */\r\n        create : function() {\r\n            var out = new ArrayCtor(6);\r\n            matrix.identity(out);\r\n\r\n            return out;\r\n        },\r\n        /**\r\n         * 设置矩阵为单位矩阵\r\n         * @param {Float32Array|Array.<number>} out\r\n         */\r\n        identity : function(out) {\r\n            out[0] = 1;\r\n            out[1] = 0;\r\n            out[2] = 0;\r\n            out[3] = 1;\r\n            out[4] = 0;\r\n            out[5] = 0;\r\n            return out;\r\n        },\r\n        /**\r\n         * 复制矩阵\r\n         * @param {Float32Array|Array.<number>} out\r\n         * @param {Float32Array|Array.<number>} m\r\n         */\r\n        copy: function(out, m) {\r\n            out[0] = m[0];\r\n            out[1] = m[1];\r\n            out[2] = m[2];\r\n            out[3] = m[3];\r\n            out[4] = m[4];\r\n            out[5] = m[5];\r\n            return out;\r\n        },\r\n        /**\r\n         * 矩阵相乘\r\n         * @param {Float32Array|Array.<number>} out\r\n         * @param {Float32Array|Array.<number>} m1\r\n         * @param {Float32Array|Array.<number>} m2\r\n         */\r\n        mul : function (out, m1, m2) {\r\n            // Consider matrix.mul(m, m2, m);\r\n            // where out is the same as m2.\r\n            // So use temp variable to escape error.\r\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\r\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\r\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\r\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\r\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\r\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\r\n            out[0] = out0;\r\n            out[1] = out1;\r\n            out[2] = out2;\r\n            out[3] = out3;\r\n            out[4] = out4;\r\n            out[5] = out5;\r\n            return out;\r\n        },\r\n        /**\r\n         * 平移变换\r\n         * @param {Float32Array|Array.<number>} out\r\n         * @param {Float32Array|Array.<number>} a\r\n         * @param {Float32Array|Array.<number>} v\r\n         */\r\n        translate : function(out, a, v) {\r\n            out[0] = a[0];\r\n            out[1] = a[1];\r\n            out[2] = a[2];\r\n            out[3] = a[3];\r\n            out[4] = a[4] + v[0];\r\n            out[5] = a[5] + v[1];\r\n            return out;\r\n        },\r\n        /**\r\n         * 旋转变换\r\n         * @param {Float32Array|Array.<number>} out\r\n         * @param {Float32Array|Array.<number>} a\r\n         * @param {number} rad\r\n         */\r\n        rotate : function(out, a, rad) {\r\n            var aa = a[0];\r\n            var ac = a[2];\r\n            var atx = a[4];\r\n            var ab = a[1];\r\n            var ad = a[3];\r\n            var aty = a[5];\r\n            var st = Math.sin(rad);\r\n            var ct = Math.cos(rad);\r\n\r\n            out[0] = aa * ct + ab * st;\r\n            out[1] = -aa * st + ab * ct;\r\n            out[2] = ac * ct + ad * st;\r\n            out[3] = -ac * st + ct * ad;\r\n            out[4] = ct * atx + st * aty;\r\n            out[5] = ct * aty - st * atx;\r\n            return out;\r\n        },\r\n        /**\r\n         * 缩放变换\r\n         * @param {Float32Array|Array.<number>} out\r\n         * @param {Float32Array|Array.<number>} a\r\n         * @param {Float32Array|Array.<number>} v\r\n         */\r\n        scale : function(out, a, v) {\r\n            var vx = v[0];\r\n            var vy = v[1];\r\n            out[0] = a[0] * vx;\r\n            out[1] = a[1] * vy;\r\n            out[2] = a[2] * vx;\r\n            out[3] = a[3] * vy;\r\n            out[4] = a[4] * vx;\r\n            out[5] = a[5] * vy;\r\n            return out;\r\n        },\r\n        /**\r\n         * 求逆矩阵\r\n         * @param {Float32Array|Array.<number>} out\r\n         * @param {Float32Array|Array.<number>} a\r\n         */\r\n        invert : function(out, a) {\r\n\r\n            var aa = a[0];\r\n            var ac = a[2];\r\n            var atx = a[4];\r\n            var ab = a[1];\r\n            var ad = a[3];\r\n            var aty = a[5];\r\n\r\n            var det = aa * ad - ab * ac;\r\n            if (!det) {\r\n                return null;\r\n            }\r\n            det = 1.0 / det;\r\n\r\n            out[0] = ad * det;\r\n            out[1] = -ab * det;\r\n            out[2] = -ac * det;\r\n            out[3] = aa * det;\r\n            out[4] = (ac * aty - ad * atx) * det;\r\n            out[5] = (ab * atx - aa * aty) * det;\r\n            return out;\r\n        }\r\n    };\r\n\r\n    module.exports = matrix;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/core/matrix.js\n ** module id = 533\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","/**\r\n * @module echarts/model/Model\r\n */\r\n\r\n\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var clazzUtil = require('../util/clazz');\r\n\r\n    /**\r\n     * @alias module:echarts/model/Model\r\n     * @constructor\r\n     * @param {Object} option\r\n     * @param {module:echarts/model/Model} [parentModel]\r\n     * @param {module:echarts/model/Global} [ecModel]\r\n     */\r\n    function Model(option, parentModel, ecModel) {\r\n        /**\r\n         * @type {module:echarts/model/Model}\r\n         * @readOnly\r\n         */\r\n        this.parentModel = parentModel;\r\n\r\n        /**\r\n         * @type {module:echarts/model/Global}\r\n         * @readOnly\r\n         */\r\n        this.ecModel = ecModel;\r\n\r\n        /**\r\n         * @type {Object}\r\n         * @protected\r\n         */\r\n        this.option = option;\r\n\r\n        // Simple optimization\r\n        // if (this.init) {\r\n        //     if (arguments.length <= 4) {\r\n        //         this.init(option, parentModel, ecModel, extraOpt);\r\n        //     }\r\n        //     else {\r\n        //         this.init.apply(this, arguments);\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    Model.prototype = {\r\n\r\n        constructor: Model,\r\n\r\n        /**\r\n         * Model 的初始化函数\r\n         * @param {Object} option\r\n         */\r\n        init: null,\r\n\r\n        /**\r\n         * 从新的 Option merge\r\n         */\r\n        mergeOption: function (option) {\r\n            zrUtil.merge(this.option, option, true);\r\n        },\r\n\r\n        /**\r\n         * @param {string} path\r\n         * @param {boolean} [ignoreParent=false]\r\n         * @return {*}\r\n         */\r\n        get: function (path, ignoreParent) {\r\n            if (!path) {\r\n                return this.option;\r\n            }\r\n\r\n            if (typeof path === 'string') {\r\n                path = path.split('.');\r\n            }\r\n\r\n            var obj = this.option;\r\n            var parentModel = this.parentModel;\r\n            for (var i = 0; i < path.length; i++) {\r\n                // Ignore empty\r\n                if (!path[i]) {\r\n                    continue;\r\n                }\r\n                // obj could be number/string/... (like 0)\r\n                obj = (obj && typeof obj === 'object') ? obj[path[i]] : null;\r\n                if (obj == null) {\r\n                    break;\r\n                }\r\n            }\r\n            if (obj == null && parentModel && !ignoreParent) {\r\n                obj = parentModel.get(path);\r\n            }\r\n            return obj;\r\n        },\r\n\r\n        /**\r\n         * @param {string} key\r\n         * @param {boolean} [ignoreParent=false]\r\n         * @return {*}\r\n         */\r\n        getShallow: function (key, ignoreParent) {\r\n            var option = this.option;\r\n            var val = option && option[key];\r\n            var parentModel = this.parentModel;\r\n            if (val == null && parentModel && !ignoreParent) {\r\n                val = parentModel.getShallow(key);\r\n            }\r\n            return val;\r\n        },\r\n\r\n        /**\r\n         * @param {string} path\r\n         * @param {module:echarts/model/Model} [parentModel]\r\n         * @return {module:echarts/model/Model}\r\n         */\r\n        getModel: function (path, parentModel) {\r\n            var obj = this.get(path, true);\r\n            var thisParentModel = this.parentModel;\r\n            var model = new Model(\r\n                obj, parentModel || (thisParentModel && thisParentModel.getModel(path)),\r\n                this.ecModel\r\n            );\r\n            return model;\r\n        },\r\n\r\n        /**\r\n         * If model has option\r\n         */\r\n        isEmpty: function () {\r\n            return this.option == null;\r\n        },\r\n\r\n        restoreData: function () {},\r\n\r\n        // Pending\r\n        clone: function () {\r\n            var Ctor = this.constructor;\r\n            return new Ctor(zrUtil.clone(this.option));\r\n        },\r\n\r\n        setReadOnly: function (properties) {\r\n            clazzUtil.setReadOnly(this, properties);\r\n        }\r\n    };\r\n\r\n    // Enable Model.extend.\r\n    clazzUtil.enableClassExtend(Model);\r\n\r\n    var mixin = zrUtil.mixin;\r\n    mixin(Model, require('./mixin/lineStyle'));\r\n    mixin(Model, require('./mixin/areaStyle'));\r\n    mixin(Model, require('./mixin/textStyle'));\r\n    mixin(Model, require('./mixin/itemStyle'));\r\n\r\n    module.exports = Model;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/model/Model.js\n ** module id = 534\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","\r\n\r\n    var zrUtil = require('zrender/lib/core/util');\r\n\r\n    var clazz = {};\r\n\r\n    var TYPE_DELIMITER = '.';\r\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\r\n    /**\r\n     * @public\r\n     */\r\n    var parseClassType = clazz.parseClassType = function (componentType) {\r\n        var ret = {main: '', sub: ''};\r\n        if (componentType) {\r\n            componentType = componentType.split(TYPE_DELIMITER);\r\n            ret.main = componentType[0] || '';\r\n            ret.sub = componentType[1] || '';\r\n        }\r\n        return ret;\r\n    };\r\n    /**\r\n     * @public\r\n     */\r\n    clazz.enableClassExtend = function (RootClass) {\r\n\r\n        RootClass.$constructor = RootClass;\r\n        RootClass.extend = function (proto) {\r\n            var superClass = this;\r\n            var ExtendedClass = function () {\r\n                if (!proto.$constructor) {\r\n                    superClass.apply(this, arguments);\r\n                }\r\n                else {\r\n                    proto.$constructor.apply(this, arguments);\r\n                }\r\n            };\r\n\r\n            zrUtil.extend(ExtendedClass.prototype, proto);\r\n\r\n            ExtendedClass.extend = this.extend;\r\n            ExtendedClass.superCall = superCall;\r\n            ExtendedClass.superApply = superApply;\r\n            zrUtil.inherits(ExtendedClass, this);\r\n            ExtendedClass.superClass = superClass;\r\n\r\n            return ExtendedClass;\r\n        };\r\n    };\r\n\r\n    // superCall should have class info, which can not be fetch from 'this'.\r\n    // Consider this case:\r\n    // class A has method f,\r\n    // class B inherits class A, overrides method f, f call superApply('f'),\r\n    // class C inherits class B, do not overrides method f,\r\n    // then when method of class C is called, dead loop occured.\r\n    function superCall(context, methodName) {\r\n        var args = zrUtil.slice(arguments, 2);\r\n        return this.superClass.prototype[methodName].apply(context, args);\r\n    }\r\n\r\n    function superApply(context, methodName, args) {\r\n        return this.superClass.prototype[methodName].apply(context, args);\r\n    }\r\n\r\n    /**\r\n     * @param {Object} entity\r\n     * @param {Object} options\r\n     * @param {boolean} [options.registerWhenExtend]\r\n     * @public\r\n     */\r\n    clazz.enableClassManagement = function (entity, options) {\r\n        options = options || {};\r\n\r\n        /**\r\n         * Component model classes\r\n         * key: componentType,\r\n         * value:\r\n         *     componentClass, when componentType is 'xxx'\r\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\r\n         * @type {Object}\r\n         */\r\n        var storage = {};\r\n\r\n        entity.registerClass = function (Clazz, componentType) {\r\n            if (componentType) {\r\n                componentType = parseClassType(componentType);\r\n\r\n                if (!componentType.sub) {\r\n                    if (__DEV__) {\r\n                        if (storage[componentType.main]) {\r\n                            console.warn(componentType.main + ' exists.');\r\n                        }\r\n                    }\r\n                    storage[componentType.main] = Clazz;\r\n                }\r\n                else if (componentType.sub !== IS_CONTAINER) {\r\n                    var container = makeContainer(componentType);\r\n                    container[componentType.sub] = Clazz;\r\n                }\r\n            }\r\n            return Clazz;\r\n        };\r\n\r\n        entity.getClass = function (componentTypeMain, subType, throwWhenNotFound) {\r\n            var Clazz = storage[componentTypeMain];\r\n\r\n            if (Clazz && Clazz[IS_CONTAINER]) {\r\n                Clazz = subType ? Clazz[subType] : null;\r\n            }\r\n\r\n            if (throwWhenNotFound && !Clazz) {\r\n                throw new Error(\r\n                    'Component ' + componentTypeMain + '.' + (subType || '') + ' not exists. Load it first.'\r\n                );\r\n            }\r\n\r\n            return Clazz;\r\n        };\r\n\r\n        entity.getClassesByMainType = function (componentType) {\r\n            componentType = parseClassType(componentType);\r\n\r\n            var result = [];\r\n            var obj = storage[componentType.main];\r\n\r\n            if (obj && obj[IS_CONTAINER]) {\r\n                zrUtil.each(obj, function (o, type) {\r\n                    type !== IS_CONTAINER && result.push(o);\r\n                });\r\n            }\r\n            else {\r\n                result.push(obj);\r\n            }\r\n\r\n            return result;\r\n        };\r\n\r\n        entity.hasClass = function (componentType) {\r\n            // Just consider componentType.main.\r\n            componentType = parseClassType(componentType);\r\n            return !!storage[componentType.main];\r\n        };\r\n\r\n        /**\r\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\r\n         */\r\n        entity.getAllClassMainTypes = function () {\r\n            var types = [];\r\n            zrUtil.each(storage, function (obj, type) {\r\n                types.push(type);\r\n            });\r\n            return types;\r\n        };\r\n\r\n        /**\r\n         * If a main type is container and has sub types\r\n         * @param  {string}  mainType\r\n         * @return {boolean}\r\n         */\r\n        entity.hasSubTypes = function (componentType) {\r\n            componentType = parseClassType(componentType);\r\n            var obj = storage[componentType.main];\r\n            return obj && obj[IS_CONTAINER];\r\n        };\r\n\r\n        entity.parseClassType = parseClassType;\r\n\r\n        function makeContainer(componentType) {\r\n            var container = storage[componentType.main];\r\n            if (!container || !container[IS_CONTAINER]) {\r\n                container = storage[componentType.main] = {};\r\n                container[IS_CONTAINER] = true;\r\n            }\r\n            return container;\r\n        }\r\n\r\n        if (options.registerWhenExtend) {\r\n            var originalExtend = entity.extend;\r\n            if (originalExtend) {\r\n                entity.extend = function (proto) {\r\n                    var ExtendedClass = originalExtend.call(this, proto);\r\n                    return entity.registerClass(ExtendedClass, proto.type);\r\n                };\r\n            }\r\n        }\r\n\r\n        return entity;\r\n    };\r\n\r\n    /**\r\n     * @param {string|Array.<string>} properties\r\n     */\r\n    clazz.setReadOnly = function (obj, properties) {\r\n        // FIXME It seems broken in IE8 simulation of IE11\r\n        // if (!zrUtil.isArray(properties)) {\r\n        //     properties = properties != null ? [properties] : [];\r\n        // }\r\n        // zrUtil.each(properties, function (prop) {\r\n        //     var value = obj[prop];\r\n\r\n        //     Object.defineProperty\r\n        //         && Object.defineProperty(obj, prop, {\r\n        //             value: value, writable: false\r\n        //         });\r\n        //     zrUtil.isArray(obj[prop])\r\n        //         && Object.freeze\r\n        //         && Object.freeze(obj[prop]);\r\n        // });\r\n    };\r\n\r\n    module.exports = clazz;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/util/clazz.js\n ** module id = 535\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","\r\n    var getLineStyle = require('./makeStyleMapper')(\r\n        [\r\n            ['lineWidth', 'width'],\r\n            ['stroke', 'color'],\r\n            ['opacity'],\r\n            ['shadowBlur'],\r\n            ['shadowOffsetX'],\r\n            ['shadowOffsetY'],\r\n            ['shadowColor']\r\n        ]\r\n    );\r\n    module.exports = {\r\n        getLineStyle: function (excludes) {\r\n            var style = getLineStyle.call(this, excludes);\r\n            var lineDash = this.getLineDash();\r\n            lineDash && (style.lineDash = lineDash);\r\n            return style;\r\n        },\r\n\r\n        getLineDash: function () {\r\n            var lineType = this.get('type');\r\n            return (lineType === 'solid' || lineType == null) ? null\r\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\r\n        }\r\n    };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/model/mixin/lineStyle.js\n ** module id = 536\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","// TODO Parse shadow style\r\n// TODO Only shallow path support\r\n\r\n    var zrUtil = require('zrender/lib/core/util');\r\n\r\n    module.exports = function (properties) {\r\n        // Normalize\r\n        for (var i = 0; i < properties.length; i++) {\r\n            if (!properties[i][1]) {\r\n               properties[i][1] = properties[i][0];\r\n            }\r\n        }\r\n        return function (excludes) {\r\n            var style = {};\r\n            for (var i = 0; i < properties.length; i++) {\r\n                var propName = properties[i][1];\r\n                if (excludes && zrUtil.indexOf(excludes, propName) >= 0) {\r\n                    continue;\r\n                }\r\n                var val = this.getShallow(propName);\r\n                if (val != null) {\r\n                    style[properties[i][0]] = val;\r\n                }\r\n            }\r\n            return style;\r\n        };\r\n    };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/model/mixin/makeStyleMapper.js\n ** module id = 537\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","\r\n    module.exports = {\r\n        getAreaStyle: require('./makeStyleMapper')(\r\n            [\r\n                ['fill', 'color'],\r\n                ['shadowBlur'],\r\n                ['shadowOffsetX'],\r\n                ['shadowOffsetY'],\r\n                ['opacity'],\r\n                ['shadowColor']\r\n            ]\r\n        )\r\n    };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/model/mixin/areaStyle.js\n ** module id = 538\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","\r\n\r\n    var textContain = require('zrender/lib/contain/text');\r\n\r\n    function getShallow(model, path) {\r\n        return model && model.getShallow(path);\r\n    }\r\n\r\n    module.exports = {\r\n        /**\r\n         * Get color property or get color from option.textStyle.color\r\n         * @return {string}\r\n         */\r\n        getTextColor: function () {\r\n            var ecModel = this.ecModel;\r\n            return this.getShallow('color')\r\n                || (ecModel && ecModel.get('textStyle.color'));\r\n        },\r\n\r\n        /**\r\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\r\n         * @return {string}\r\n         */\r\n        getFont: function () {\r\n            var ecModel = this.ecModel;\r\n            var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\r\n            return [\r\n                // FIXME in node-canvas fontWeight is before fontStyle\r\n                this.getShallow('fontStyle') || getShallow(gTextStyleModel, 'fontStyle'),\r\n                this.getShallow('fontWeight') || getShallow(gTextStyleModel, 'fontWeight'),\r\n                (this.getShallow('fontSize') || getShallow(gTextStyleModel, 'fontSize') || 12) + 'px',\r\n                this.getShallow('fontFamily') || getShallow(gTextStyleModel, 'fontFamily') || 'sans-serif'\r\n            ].join(' ');\r\n        },\r\n\r\n        getTextRect: function (text) {\r\n            var textStyle = this.get('textStyle') || {};\r\n            return textContain.getBoundingRect(\r\n                text,\r\n                this.getFont(),\r\n                textStyle.align,\r\n                textStyle.baseline\r\n            );\r\n        },\r\n\r\n        truncateText: function (text, containerWidth, ellipsis, options) {\r\n            return textContain.truncateText(\r\n                text, containerWidth, this.getFont(), ellipsis, options\r\n            );\r\n        }\r\n    };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/model/mixin/textStyle.js\n ** module id = 539\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","\r\n    var getItemStyle = require('./makeStyleMapper')(\r\n        [\r\n            ['fill', 'color'],\r\n            ['stroke', 'borderColor'],\r\n            ['lineWidth', 'borderWidth'],\r\n            ['opacity'],\r\n            ['shadowBlur'],\r\n            ['shadowOffsetX'],\r\n            ['shadowOffsetY'],\r\n            ['shadowColor']\r\n        ]\r\n    );\r\n    module.exports = {\r\n        getItemStyle: function (excludes) {\r\n            var style = getItemStyle.call(this, excludes);\r\n            var lineDash = this.getBorderLineDash();\r\n            lineDash && (style.lineDash = lineDash);\r\n            return style;\r\n        },\r\n\r\n        getBorderLineDash: function () {\r\n            var lineType = this.get('borderType');\r\n            return (lineType === 'solid' || lineType == null) ? null\r\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\r\n        }\r\n    };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/model/mixin/itemStyle.js\n ** module id = 540\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","/**\r\n * Component model\r\n *\r\n * @module echarts/model/Component\r\n */\r\n\r\n\r\n    var Model = require('./Model');\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var arrayPush = Array.prototype.push;\r\n    var componentUtil = require('../util/component');\r\n    var clazzUtil = require('../util/clazz');\r\n    var layout = require('../util/layout');\r\n\r\n    /**\r\n     * @alias module:echarts/model/Component\r\n     * @constructor\r\n     * @param {Object} option\r\n     * @param {module:echarts/model/Model} parentModel\r\n     * @param {module:echarts/model/Model} ecModel\r\n     */\r\n    var ComponentModel = Model.extend({\r\n\r\n        type: 'component',\r\n\r\n        /**\r\n         * @readOnly\r\n         * @type {string}\r\n         */\r\n        id: '',\r\n\r\n        /**\r\n         * @readOnly\r\n         */\r\n        name: '',\r\n\r\n        /**\r\n         * @readOnly\r\n         * @type {string}\r\n         */\r\n        mainType: '',\r\n\r\n        /**\r\n         * @readOnly\r\n         * @type {string}\r\n         */\r\n        subType: '',\r\n\r\n        /**\r\n         * @readOnly\r\n         * @type {number}\r\n         */\r\n        componentIndex: 0,\r\n\r\n        /**\r\n         * @type {Object}\r\n         * @protected\r\n         */\r\n        defaultOption: null,\r\n\r\n        /**\r\n         * @type {module:echarts/model/Global}\r\n         * @readOnly\r\n         */\r\n        ecModel: null,\r\n\r\n        /**\r\n         * key: componentType\r\n         * value:  Component model list, can not be null.\r\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\r\n         * @readOnly\r\n         */\r\n        dependentModels: [],\r\n\r\n        /**\r\n         * @type {string}\r\n         * @readOnly\r\n         */\r\n        uid: null,\r\n\r\n        /**\r\n         * Support merge layout params.\r\n         * Only support 'box' now (left/right/top/bottom/width/height).\r\n         * @type {string|Object} Object can be {ignoreSize: true}\r\n         * @readOnly\r\n         */\r\n        layoutMode: null,\r\n\r\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\r\n            Model.call(this, option, parentModel, ecModel, extraOpt);\r\n\r\n            // Set dependentModels, componentIndex, name, id, mainType, subType.\r\n            zrUtil.extend(this, extraOpt);\r\n\r\n            this.uid = componentUtil.getUID('componentModel');\r\n        },\r\n\r\n\r\n        init: function (option, parentModel, ecModel, extraOpt) {\r\n            this.mergeDefaultAndTheme(option, ecModel);\r\n        },\r\n\r\n        mergeDefaultAndTheme: function (option, ecModel) {\r\n            var layoutMode = this.layoutMode;\r\n            var inputPositionParams = layoutMode\r\n                ? layout.getLayoutParams(option) : {};\r\n\r\n            var themeModel = ecModel.getTheme();\r\n            zrUtil.merge(option, themeModel.get(this.mainType));\r\n            zrUtil.merge(option, this.getDefaultOption());\r\n\r\n            if (layoutMode) {\r\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\r\n            }\r\n        },\r\n\r\n        mergeOption: function (option) {\r\n            zrUtil.merge(this.option, option, true);\r\n\r\n            var layoutMode = this.layoutMode;\r\n            if (layoutMode) {\r\n                layout.mergeLayoutParam(this.option, option, layoutMode);\r\n            }\r\n        },\r\n\r\n        // Hooker after init or mergeOption\r\n        optionUpdated: function (newCptOption, isInit) {},\r\n\r\n        getDefaultOption: function () {\r\n            if (!this.hasOwnProperty('__defaultOption')) {\r\n                var optList = [];\r\n                var Class = this.constructor;\r\n                while (Class) {\r\n                    var opt = Class.prototype.defaultOption;\r\n                    opt && optList.push(opt);\r\n                    Class = Class.superClass;\r\n                }\r\n\r\n                var defaultOption = {};\r\n                for (var i = optList.length - 1; i >= 0; i--) {\r\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\r\n                }\r\n                this.__defaultOption = defaultOption;\r\n            }\r\n            return this.__defaultOption;\r\n        }\r\n\r\n    });\r\n\r\n    // Reset ComponentModel.extend, add preConstruct.\r\n    // clazzUtil.enableClassExtend(\r\n    //     ComponentModel,\r\n    //     function (option, parentModel, ecModel, extraOpt) {\r\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\r\n    //         zrUtil.extend(this, extraOpt);\r\n\r\n    //         this.uid = componentUtil.getUID('componentModel');\r\n\r\n    //         // this.setReadOnly([\r\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\r\n    //         //     'dependentModels', 'componentIndex'\r\n    //         // ]);\r\n    //     }\r\n    // );\r\n\r\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\r\n    clazzUtil.enableClassManagement(\r\n        ComponentModel, {registerWhenExtend: true}\r\n    );\r\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\r\n\r\n    // Add capability of ComponentModel.topologicalTravel.\r\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\r\n\r\n    function getDependencies(componentType) {\r\n        var deps = [];\r\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\r\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\r\n        });\r\n        // Ensure main type\r\n        return zrUtil.map(deps, function (type) {\r\n            return clazzUtil.parseClassType(type).main;\r\n        });\r\n    }\r\n\r\n    zrUtil.mixin(ComponentModel, require('./mixin/boxLayout'));\r\n\r\n    module.exports = ComponentModel;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/model/Component.js\n ** module id = 541\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","\r\n\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var clazz = require('./clazz');\r\n\r\n    var parseClassType = clazz.parseClassType;\r\n\r\n    var base = 0;\r\n\r\n    var componentUtil = {};\r\n\r\n    var DELIMITER = '_';\r\n\r\n    /**\r\n     * @public\r\n     * @param {string} type\r\n     * @return {string}\r\n     */\r\n    componentUtil.getUID = function (type) {\r\n        // Considering the case of crossing js context,\r\n        // use Math.random to make id as unique as possible.\r\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\r\n    };\r\n\r\n    /**\r\n     * @inner\r\n     */\r\n    componentUtil.enableSubTypeDefaulter = function (entity) {\r\n\r\n        var subTypeDefaulters = {};\r\n\r\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\r\n            componentType = parseClassType(componentType);\r\n            subTypeDefaulters[componentType.main] = defaulter;\r\n        };\r\n\r\n        entity.determineSubType = function (componentType, option) {\r\n            var type = option.type;\r\n            if (!type) {\r\n                var componentTypeMain = parseClassType(componentType).main;\r\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\r\n                    type = subTypeDefaulters[componentTypeMain](option);\r\n                }\r\n            }\r\n            return type;\r\n        };\r\n\r\n        return entity;\r\n    };\r\n\r\n    /**\r\n     * Topological travel on Activity Network (Activity On Vertices).\r\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\r\n     *\r\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\r\n     *\r\n     * If there is circle dependencey, Error will be thrown.\r\n     *\r\n     */\r\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\r\n\r\n        /**\r\n         * @public\r\n         * @param {Array.<string>} targetNameList Target Component type list.\r\n         *                                           Can be ['aa', 'bb', 'aa.xx']\r\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\r\n         * @param {Function} callback Params: componentType, dependencies.\r\n         * @param {Object} context Scope of callback.\r\n         */\r\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\r\n            if (!targetNameList.length) {\r\n                return;\r\n            }\r\n\r\n            var result = makeDepndencyGraph(fullNameList);\r\n            var graph = result.graph;\r\n            var stack = result.noEntryList;\r\n\r\n            var targetNameSet = {};\r\n            zrUtil.each(targetNameList, function (name) {\r\n                targetNameSet[name] = true;\r\n            });\r\n\r\n            while (stack.length) {\r\n                var currComponentType = stack.pop();\r\n                var currVertex = graph[currComponentType];\r\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\r\n                if (isInTargetNameSet) {\r\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\r\n                    delete targetNameSet[currComponentType];\r\n                }\r\n                zrUtil.each(\r\n                    currVertex.successor,\r\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\r\n                );\r\n            }\r\n\r\n            zrUtil.each(targetNameSet, function () {\r\n                throw new Error('Circle dependency may exists');\r\n            });\r\n\r\n            function removeEdge(succComponentType) {\r\n                graph[succComponentType].entryCount--;\r\n                if (graph[succComponentType].entryCount === 0) {\r\n                    stack.push(succComponentType);\r\n                }\r\n            }\r\n\r\n            // Consider this case: legend depends on series, and we call\r\n            // chart.setOption({series: [...]}), where only series is in option.\r\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\r\n            // not be called, but only sereis.mergeOption is called. Thus legend\r\n            // have no chance to update its local record about series (like which\r\n            // name of series is available in legend).\r\n            function removeEdgeAndAdd(succComponentType) {\r\n                targetNameSet[succComponentType] = true;\r\n                removeEdge(succComponentType);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * DepndencyGraph: {Object}\r\n         * key: conponentType,\r\n         * value: {\r\n         *     successor: [conponentTypes...],\r\n         *     originalDeps: [conponentTypes...],\r\n         *     entryCount: {number}\r\n         * }\r\n         */\r\n        function makeDepndencyGraph(fullNameList) {\r\n            var graph = {};\r\n            var noEntryList = [];\r\n\r\n            zrUtil.each(fullNameList, function (name) {\r\n\r\n                var thisItem = createDependencyGraphItem(graph, name);\r\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\r\n\r\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\r\n                thisItem.entryCount = availableDeps.length;\r\n                if (thisItem.entryCount === 0) {\r\n                    noEntryList.push(name);\r\n                }\r\n\r\n                zrUtil.each(availableDeps, function (dependentName) {\r\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\r\n                        thisItem.predecessor.push(dependentName);\r\n                    }\r\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\r\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\r\n                        thatItem.successor.push(name);\r\n                    }\r\n                });\r\n            });\r\n\r\n            return {graph: graph, noEntryList: noEntryList};\r\n        }\r\n\r\n        function createDependencyGraphItem(graph, name) {\r\n            if (!graph[name]) {\r\n                graph[name] = {predecessor: [], successor: []};\r\n            }\r\n            return graph[name];\r\n        }\r\n\r\n        function getAvailableDependencies(originalDeps, fullNameList) {\r\n            var availableDeps = [];\r\n            zrUtil.each(originalDeps, function (dep) {\r\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\r\n            });\r\n            return availableDeps;\r\n        }\r\n    };\r\n\r\n    module.exports = componentUtil;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/util/component.js\n ** module id = 542\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","'use strict';\r\n// Layout helpers for each component positioning\r\n\r\n\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\r\n    var numberUtil = require('./number');\r\n    var formatUtil = require('./format');\r\n    var parsePercent = numberUtil.parsePercent;\r\n    var each = zrUtil.each;\r\n\r\n    var layout = {};\r\n\r\n    var LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\r\n\r\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\r\n        var x = 0;\r\n        var y = 0;\r\n        if (maxWidth == null) {\r\n            maxWidth = Infinity;\r\n        }\r\n        if (maxHeight == null) {\r\n            maxHeight = Infinity;\r\n        }\r\n        var currentLineMaxSize = 0;\r\n        group.eachChild(function (child, idx) {\r\n            var position = child.position;\r\n            var rect = child.getBoundingRect();\r\n            var nextChild = group.childAt(idx + 1);\r\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\r\n            var nextX;\r\n            var nextY;\r\n            if (orient === 'horizontal') {\r\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\r\n                nextX = x + moveX;\r\n                // Wrap when width exceeds maxWidth or meet a `newline` group\r\n                if (nextX > maxWidth || child.newline) {\r\n                    x = 0;\r\n                    nextX = moveX;\r\n                    y += currentLineMaxSize + gap;\r\n                    currentLineMaxSize = rect.height;\r\n                }\r\n                else {\r\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\r\n                }\r\n            }\r\n            else {\r\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\r\n                nextY = y + moveY;\r\n                // Wrap when width exceeds maxHeight or meet a `newline` group\r\n                if (nextY > maxHeight || child.newline) {\r\n                    x += currentLineMaxSize + gap;\r\n                    y = 0;\r\n                    nextY = moveY;\r\n                    currentLineMaxSize = rect.width;\r\n                }\r\n                else {\r\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\r\n                }\r\n            }\r\n\r\n            if (child.newline) {\r\n                return;\r\n            }\r\n\r\n            position[0] = x;\r\n            position[1] = y;\r\n\r\n            orient === 'horizontal'\r\n                ? (x = nextX + gap)\r\n                : (y = nextY + gap);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * VBox or HBox layouting\r\n     * @param {string} orient\r\n     * @param {module:zrender/container/Group} group\r\n     * @param {number} gap\r\n     * @param {number} [width=Infinity]\r\n     * @param {number} [height=Infinity]\r\n     */\r\n    layout.box = boxLayout;\r\n\r\n    /**\r\n     * VBox layouting\r\n     * @param {module:zrender/container/Group} group\r\n     * @param {number} gap\r\n     * @param {number} [width=Infinity]\r\n     * @param {number} [height=Infinity]\r\n     */\r\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\r\n\r\n    /**\r\n     * HBox layouting\r\n     * @param {module:zrender/container/Group} group\r\n     * @param {number} gap\r\n     * @param {number} [width=Infinity]\r\n     * @param {number} [height=Infinity]\r\n     */\r\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\r\n\r\n    /**\r\n     * If x or x2 is not specified or 'center' 'left' 'right',\r\n     * the width would be as long as possible.\r\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\r\n     * the height would be as long as possible.\r\n     *\r\n     * @param {Object} positionInfo\r\n     * @param {number|string} [positionInfo.x]\r\n     * @param {number|string} [positionInfo.y]\r\n     * @param {number|string} [positionInfo.x2]\r\n     * @param {number|string} [positionInfo.y2]\r\n     * @param {Object} containerRect\r\n     * @param {string|number} margin\r\n     * @return {Object} {width, height}\r\n     */\r\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\r\n        var containerWidth = containerRect.width;\r\n        var containerHeight = containerRect.height;\r\n\r\n        var x = parsePercent(positionInfo.x, containerWidth);\r\n        var y = parsePercent(positionInfo.y, containerHeight);\r\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\r\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\r\n\r\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\r\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\r\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\r\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\r\n\r\n        margin = formatUtil.normalizeCssArray(margin || 0);\r\n\r\n        return {\r\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\r\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Parse position info.\r\n     *\r\n     * @param {Object} positionInfo\r\n     * @param {number|string} [positionInfo.left]\r\n     * @param {number|string} [positionInfo.top]\r\n     * @param {number|string} [positionInfo.right]\r\n     * @param {number|string} [positionInfo.bottom]\r\n     * @param {number|string} [positionInfo.width]\r\n     * @param {number|string} [positionInfo.height]\r\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\r\n     * @param {Object} containerRect\r\n     * @param {string|number} [margin]\r\n     *\r\n     * @return {module:zrender/core/BoundingRect}\r\n     */\r\n    layout.getLayoutRect = function (\r\n        positionInfo, containerRect, margin\r\n    ) {\r\n        margin = formatUtil.normalizeCssArray(margin || 0);\r\n\r\n        var containerWidth = containerRect.width;\r\n        var containerHeight = containerRect.height;\r\n\r\n        var left = parsePercent(positionInfo.left, containerWidth);\r\n        var top = parsePercent(positionInfo.top, containerHeight);\r\n        var right = parsePercent(positionInfo.right, containerWidth);\r\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\r\n        var width = parsePercent(positionInfo.width, containerWidth);\r\n        var height = parsePercent(positionInfo.height, containerHeight);\r\n\r\n        var verticalMargin = margin[2] + margin[0];\r\n        var horizontalMargin = margin[1] + margin[3];\r\n        var aspect = positionInfo.aspect;\r\n\r\n        // If width is not specified, calculate width from left and right\r\n        if (isNaN(width)) {\r\n            width = containerWidth - right - horizontalMargin - left;\r\n        }\r\n        if (isNaN(height)) {\r\n            height = containerHeight - bottom - verticalMargin - top;\r\n        }\r\n\r\n        // If width and height are not given\r\n        // 1. Graph should not exceeds the container\r\n        // 2. Aspect must be keeped\r\n        // 3. Graph should take the space as more as possible\r\n        if (isNaN(width) && isNaN(height)) {\r\n            if (aspect > containerWidth / containerHeight) {\r\n                width = containerWidth * 0.8;\r\n            }\r\n            else {\r\n                height = containerHeight * 0.8;\r\n            }\r\n        }\r\n\r\n        if (aspect != null) {\r\n            // Calculate width or height with given aspect\r\n            if (isNaN(width)) {\r\n                width = aspect * height;\r\n            }\r\n            if (isNaN(height)) {\r\n                height = width / aspect;\r\n            }\r\n        }\r\n\r\n        // If left is not specified, calculate left from right and width\r\n        if (isNaN(left)) {\r\n            left = containerWidth - right - width - horizontalMargin;\r\n        }\r\n        if (isNaN(top)) {\r\n            top = containerHeight - bottom - height - verticalMargin;\r\n        }\r\n\r\n        // Align left and top\r\n        switch (positionInfo.left || positionInfo.right) {\r\n            case 'center':\r\n                left = containerWidth / 2 - width / 2 - margin[3];\r\n                break;\r\n            case 'right':\r\n                left = containerWidth - width - horizontalMargin;\r\n                break;\r\n        }\r\n        switch (positionInfo.top || positionInfo.bottom) {\r\n            case 'middle':\r\n            case 'center':\r\n                top = containerHeight / 2 - height / 2 - margin[0];\r\n                break;\r\n            case 'bottom':\r\n                top = containerHeight - height - verticalMargin;\r\n                break;\r\n        }\r\n        // If something is wrong and left, top, width, height are calculated as NaN\r\n        left = left || 0;\r\n        top = top || 0;\r\n        if (isNaN(width)) {\r\n            // Width may be NaN if only one value is given except width\r\n            width = containerWidth - left - (right || 0);\r\n        }\r\n        if (isNaN(height)) {\r\n            // Height may be NaN if only one value is given except height\r\n            height = containerHeight - top - (bottom || 0);\r\n        }\r\n\r\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\r\n        rect.margin = margin;\r\n        return rect;\r\n    };\r\n\r\n    /**\r\n     * Position group of component in viewport\r\n     *  Group position is specified by either\r\n     *  {left, top}, {right, bottom}\r\n     *  If all properties exists, right and bottom will be igonred.\r\n     *\r\n     * @param {module:zrender/container/Group} group\r\n     * @param {Object} positionInfo\r\n     * @param {number|string} [positionInfo.left]\r\n     * @param {number|string} [positionInfo.top]\r\n     * @param {number|string} [positionInfo.right]\r\n     * @param {number|string} [positionInfo.bottom]\r\n     * @param {Object} containerRect\r\n     * @param {string|number} margin\r\n     */\r\n    layout.positionGroup = function (\r\n        group, positionInfo, containerRect, margin\r\n    ) {\r\n        var groupRect = group.getBoundingRect();\r\n\r\n        positionInfo = zrUtil.extend(zrUtil.clone(positionInfo), {\r\n            width: groupRect.width,\r\n            height: groupRect.height\r\n        });\r\n\r\n        positionInfo = layout.getLayoutRect(\r\n            positionInfo, containerRect, margin\r\n        );\r\n\r\n        group.attr('position', [\r\n            positionInfo.x - groupRect.x,\r\n            positionInfo.y - groupRect.y\r\n        ]);\r\n    };\r\n\r\n    /**\r\n     * Consider Case:\r\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\r\n     * through setOption or media query, using normal zrUtil.merge will cause\r\n     * {right: 0} does not take effect.\r\n     *\r\n     * @example\r\n     * ComponentModel.extend({\r\n     *     init: function () {\r\n     *         ...\r\n     *         var inputPositionParams = layout.getLayoutParams(option);\r\n     *         this.mergeOption(inputPositionParams);\r\n     *     },\r\n     *     mergeOption: function (newOption) {\r\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\r\n     *         layout.mergeLayoutParam(thisOption, newOption);\r\n     *     }\r\n     * });\r\n     *\r\n     * @param {Object} targetOption\r\n     * @param {Object} newOption\r\n     * @param {Object|string} [opt]\r\n     * @param {boolean} [opt.ignoreSize=false] Some component must has width and height.\r\n     */\r\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\r\n        !zrUtil.isObject(opt) && (opt = {});\r\n        var hNames = ['width', 'left', 'right']; // Order by priority.\r\n        var vNames = ['height', 'top', 'bottom']; // Order by priority.\r\n        var hResult = merge(hNames);\r\n        var vResult = merge(vNames);\r\n\r\n        copy(hNames, targetOption, hResult);\r\n        copy(vNames, targetOption, vResult);\r\n\r\n        function merge(names) {\r\n            var newParams = {};\r\n            var newValueCount = 0;\r\n            var merged = {};\r\n            var mergedValueCount = 0;\r\n            var enoughParamNumber = opt.ignoreSize ? 1 : 2;\r\n\r\n            each(names, function (name) {\r\n                merged[name] = targetOption[name];\r\n            });\r\n            each(names, function (name) {\r\n                // Consider case: newOption.width is null, which is\r\n                // set by user for removing width setting.\r\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\r\n                hasValue(newParams, name) && newValueCount++;\r\n                hasValue(merged, name) && mergedValueCount++;\r\n            });\r\n\r\n            // Case: newOption: {width: ..., right: ...},\r\n            // or targetOption: {right: ...} and newOption: {width: ...},\r\n            // There is no conflict when merged only has params count\r\n            // little than enoughParamNumber.\r\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\r\n                return merged;\r\n            }\r\n            // Case: newOption: {width: ..., right: ...},\r\n            // Than we can make sure user only want those two, and ignore\r\n            // all origin params in targetOption.\r\n            else if (newValueCount >= enoughParamNumber) {\r\n                return newParams;\r\n            }\r\n            else {\r\n                // Chose another param from targetOption by priority.\r\n                // When 'ignoreSize', enoughParamNumber is 1 and those will not happen.\r\n                for (var i = 0; i < names.length; i++) {\r\n                    var name = names[i];\r\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\r\n                        newParams[name] = targetOption[name];\r\n                        break;\r\n                    }\r\n                }\r\n                return newParams;\r\n            }\r\n        }\r\n\r\n        function hasProp(obj, name) {\r\n            return obj.hasOwnProperty(name);\r\n        }\r\n\r\n        function hasValue(obj, name) {\r\n            return obj[name] != null && obj[name] !== 'auto';\r\n        }\r\n\r\n        function copy(names, target, source) {\r\n            each(names, function (name) {\r\n                target[name] = source[name];\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\r\n     * @param {Object} source\r\n     * @return {Object} Result contains those props.\r\n     */\r\n    layout.getLayoutParams = function (source) {\r\n        return layout.copyLayoutParams({}, source);\r\n    };\r\n\r\n    /**\r\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\r\n     * @param {Object} source\r\n     * @return {Object} Result contains those props.\r\n     */\r\n    layout.copyLayoutParams = function (target, source) {\r\n        source && target && each(LOCATION_PARAMS, function (name) {\r\n            source.hasOwnProperty(name) && (target[name] = source[name]);\r\n        });\r\n        return target;\r\n    };\r\n\r\n    module.exports = layout;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/util/layout.js\n ** module id = 543\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","\r\n\r\n    module.exports = {\r\n        getBoxLayoutParams: function () {\r\n            return {\r\n                left: this.get('left'),\r\n                top: this.get('top'),\r\n                right: this.get('right'),\r\n                bottom: this.get('bottom'),\r\n                width: this.get('width'),\r\n                height: this.get('height')\r\n            };\r\n        }\r\n    };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/model/mixin/boxLayout.js\n ** module id = 544\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","\r\n    var platform = '';\r\n    // Navigator not exists in node\r\n    if (typeof navigator !== 'undefined') {\r\n        platform = navigator.platform || '';\r\n    }\r\n    module.exports = {\r\n        // 全图默认背景\r\n        // backgroundColor: 'rgba(0,0,0,0)',\r\n\r\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\r\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\r\n        // 浅色\r\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\r\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\r\n        // 深色\r\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\r\n\r\n        // 默认需要 Grid 配置项\r\n        grid: {},\r\n        // 主题，主题\r\n        textStyle: {\r\n            // color: '#000',\r\n            // decoration: 'none',\r\n            // PENDING\r\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\r\n            // fontFamily: 'Arial, Verdana, sans-serif',\r\n            fontSize: 12,\r\n            fontStyle: 'normal',\r\n            fontWeight: 'normal'\r\n        },\r\n\r\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\r\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\r\n        // Default is source-over\r\n        blendMode: null,\r\n\r\n        animation: true,\r\n        animationDuration: 1000,\r\n        animationDurationUpdate: 300,\r\n        animationEasing: 'exponentialOut',\r\n        animationEasingUpdate: 'cubicOut',\r\n\r\n        animationThreshold: 2000,\r\n        // Configuration for progressive/incremental rendering\r\n        progressiveThreshold: 3000,\r\n        progressive: 400,\r\n\r\n        // Threshold of if use single hover layer to optimize.\r\n        hoverLayerThreshold: 3000\r\n    };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/model/globalDefault.js\n ** module id = 545\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","\r\n    module.exports = {\r\n        clearColorPalette: function () {\r\n            this._colorIdx = 0;\r\n            this._colorNameMap = {};\r\n        },\r\n\r\n        getColorFromPalette: function (name, scope) {\r\n            scope = scope || this;\r\n            var colorIdx = scope._colorIdx || 0;\r\n            var colorNameMap = scope._colorNameMap || (scope._colorNameMap = {});\r\n            if (colorNameMap[name]) {\r\n                return colorNameMap[name];\r\n            }\r\n            var colorPalette = this.get('color', true) || [];\r\n            if (!colorPalette.length) {\r\n                return;\r\n            }\r\n\r\n            var color = colorPalette[colorIdx];\r\n            if (name) {\r\n                colorNameMap[name] = color;\r\n            }\r\n            scope._colorIdx = (colorIdx + 1) % colorPalette.length;\r\n\r\n            return color;\r\n        }\r\n    };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/model/mixin/colorPalette.js\n ** module id = 546\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","'use strict';\r\n\r\n\r\n    var zrUtil = require('zrender/lib/core/util');\r\n\r\n    var echartsAPIList = [\r\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'dispatchAction', 'isDisposed',\r\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption'\r\n    ];\r\n\r\n    function ExtensionAPI(chartInstance) {\r\n        zrUtil.each(echartsAPIList, function (name) {\r\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\r\n        }, this);\r\n    }\r\n\r\n    module.exports = ExtensionAPI;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/ExtensionAPI.js\n ** module id = 547\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","'use strict';\r\n\r\n\r\n    var coordinateSystemCreators = {};\r\n\r\n    function CoordinateSystemManager() {\r\n\r\n        this._coordinateSystems = [];\r\n    }\r\n\r\n    CoordinateSystemManager.prototype = {\r\n\r\n        constructor: CoordinateSystemManager,\r\n\r\n        create: function (ecModel, api) {\r\n            var coordinateSystems = [];\r\n            for (var type in coordinateSystemCreators) {\r\n                var list = coordinateSystemCreators[type].create(ecModel, api);\r\n                list && (coordinateSystems = coordinateSystems.concat(list));\r\n            }\r\n\r\n            this._coordinateSystems = coordinateSystems;\r\n        },\r\n\r\n        update: function (ecModel, api) {\r\n            var coordinateSystems = this._coordinateSystems;\r\n            for (var i = 0; i < coordinateSystems.length; i++) {\r\n                // FIXME MUST have\r\n                coordinateSystems[i].update && coordinateSystems[i].update(ecModel, api);\r\n            }\r\n        }\r\n    };\r\n\r\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\r\n        coordinateSystemCreators[type] = coordinateSystemCreator;\r\n    };\r\n\r\n    CoordinateSystemManager.get = function (type) {\r\n        return coordinateSystemCreators[type];\r\n    };\r\n\r\n    module.exports = CoordinateSystemManager;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/CoordinateSystem.js\n ** module id = 548\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","/**\r\n * ECharts option manager\r\n *\r\n * @module {echarts/model/OptionManager}\r\n */\r\n\r\n\r\n\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var modelUtil = require('../util/model');\r\n    var ComponentModel = require('./Component');\r\n    var each = zrUtil.each;\r\n    var clone = zrUtil.clone;\r\n    var map = zrUtil.map;\r\n    var merge = zrUtil.merge;\r\n\r\n    var QUERY_REG = /^(min|max)?(.+)$/;\r\n\r\n    /**\r\n     * TERM EXPLANATIONS:\r\n     *\r\n     * [option]:\r\n     *\r\n     *     An object that contains definitions of components. For example:\r\n     *     var option = {\r\n     *         title: {...},\r\n     *         legend: {...},\r\n     *         visualMap: {...},\r\n     *         series: [\r\n     *             {data: [...]},\r\n     *             {data: [...]},\r\n     *             ...\r\n     *         ]\r\n     *     };\r\n     *\r\n     * [rawOption]:\r\n     *\r\n     *     An object input to echarts.setOption. 'rawOption' may be an\r\n     *     'option', or may be an object contains multi-options. For example:\r\n     *     var option = {\r\n     *         baseOption: {\r\n     *             title: {...},\r\n     *             legend: {...},\r\n     *             series: [\r\n     *                 {data: [...]},\r\n     *                 {data: [...]},\r\n     *                 ...\r\n     *             ]\r\n     *         },\r\n     *         timeline: {...},\r\n     *         options: [\r\n     *             {title: {...}, series: {data: [...]}},\r\n     *             {title: {...}, series: {data: [...]}},\r\n     *             ...\r\n     *         ],\r\n     *         media: [\r\n     *             {\r\n     *                 query: {maxWidth: 320},\r\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\r\n     *             },\r\n     *             {\r\n     *                 query: {minWidth: 320, maxWidth: 720},\r\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\r\n     *             },\r\n     *             {\r\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\r\n     *             }\r\n     *         ]\r\n     *     };\r\n     *\r\n     * @alias module:echarts/model/OptionManager\r\n     * @param {module:echarts/ExtensionAPI} api\r\n     */\r\n    function OptionManager(api) {\r\n\r\n        /**\r\n         * @private\r\n         * @type {module:echarts/ExtensionAPI}\r\n         */\r\n        this._api = api;\r\n\r\n        /**\r\n         * @private\r\n         * @type {Array.<number>}\r\n         */\r\n        this._timelineOptions = [];\r\n\r\n        /**\r\n         * @private\r\n         * @type {Array.<Object>}\r\n         */\r\n        this._mediaList = [];\r\n\r\n        /**\r\n         * @private\r\n         * @type {Object}\r\n         */\r\n        this._mediaDefault;\r\n\r\n        /**\r\n         * -1, means default.\r\n         * empty means no media.\r\n         * @private\r\n         * @type {Array.<number>}\r\n         */\r\n        this._currentMediaIndices = [];\r\n\r\n        /**\r\n         * @private\r\n         * @type {Object}\r\n         */\r\n        this._optionBackup;\r\n\r\n        /**\r\n         * @private\r\n         * @type {Object}\r\n         */\r\n        this._newBaseOption;\r\n    }\r\n\r\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\r\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\r\n    // rawOption cloned and backuped when timeline changed, which does no\r\n    // good to performance. What's more, that both timeline and setOption\r\n    // method supply 'notMerge' brings complex and some problems.\r\n    // Consider this case:\r\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\r\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\r\n\r\n    OptionManager.prototype = {\r\n\r\n        constructor: OptionManager,\r\n\r\n        /**\r\n         * @public\r\n         * @param {Object} rawOption Raw option.\r\n         * @param {module:echarts/model/Global} ecModel\r\n         * @param {Array.<Function>} optionPreprocessorFuncs\r\n         * @return {Object} Init option\r\n         */\r\n        setOption: function (rawOption, optionPreprocessorFuncs) {\r\n            rawOption = clone(rawOption, true);\r\n\r\n            // FIXME\r\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\r\n\r\n            var oldOptionBackup = this._optionBackup;\r\n            var newParsedOption = parseRawOption.call(\r\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\r\n            );\r\n            this._newBaseOption = newParsedOption.baseOption;\r\n\r\n            // For setOption at second time (using merge mode);\r\n            if (oldOptionBackup) {\r\n                // Only baseOption can be merged.\r\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\r\n\r\n                // For simplicity, timeline options and media options do not support merge,\r\n                // that is, if you `setOption` twice and both has timeline options, the latter\r\n                // timeline opitons will not be merged to the formers, but just substitude them.\r\n                if (newParsedOption.timelineOptions.length) {\r\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\r\n                }\r\n                if (newParsedOption.mediaList.length) {\r\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\r\n                }\r\n                if (newParsedOption.mediaDefault) {\r\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\r\n                }\r\n            }\r\n            else {\r\n                this._optionBackup = newParsedOption;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {boolean} isRecreate\r\n         * @return {Object}\r\n         */\r\n        mountOption: function (isRecreate) {\r\n            var optionBackup = this._optionBackup;\r\n\r\n            // TODO\r\n            // 如果没有reset功能则不clone。\r\n\r\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\r\n            this._mediaList = map(optionBackup.mediaList, clone);\r\n            this._mediaDefault = clone(optionBackup.mediaDefault);\r\n            this._currentMediaIndices = [];\r\n\r\n            return clone(isRecreate\r\n                // this._optionBackup.baseOption, which is created at the first `setOption`\r\n                // called, and is merged into every new option by inner method `mergeOption`\r\n                // each time `setOption` called, can be only used in `isRecreate`, because\r\n                // its reliability is under suspicion. In other cases option merge is\r\n                // proformed by `model.mergeOption`.\r\n                ? optionBackup.baseOption : this._newBaseOption\r\n            );\r\n        },\r\n\r\n        /**\r\n         * @param {module:echarts/model/Global} ecModel\r\n         * @return {Object}\r\n         */\r\n        getTimelineOption: function (ecModel) {\r\n            var option;\r\n            var timelineOptions = this._timelineOptions;\r\n\r\n            if (timelineOptions.length) {\r\n                // getTimelineOption can only be called after ecModel inited,\r\n                // so we can get currentIndex from timelineModel.\r\n                var timelineModel = ecModel.getComponent('timeline');\r\n                if (timelineModel) {\r\n                    option = clone(\r\n                        timelineOptions[timelineModel.getCurrentIndex()],\r\n                        true\r\n                    );\r\n                }\r\n            }\r\n\r\n            return option;\r\n        },\r\n\r\n        /**\r\n         * @param {module:echarts/model/Global} ecModel\r\n         * @return {Array.<Object>}\r\n         */\r\n        getMediaOption: function (ecModel) {\r\n            var ecWidth = this._api.getWidth();\r\n            var ecHeight = this._api.getHeight();\r\n            var mediaList = this._mediaList;\r\n            var mediaDefault = this._mediaDefault;\r\n            var indices = [];\r\n            var result = [];\r\n\r\n            // No media defined.\r\n            if (!mediaList.length && !mediaDefault) {\r\n                return result;\r\n            }\r\n\r\n            // Multi media may be applied, the latter defined media has higher priority.\r\n            for (var i = 0, len = mediaList.length; i < len; i++) {\r\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\r\n                    indices.push(i);\r\n                }\r\n            }\r\n\r\n            // FIXME\r\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\r\n            if (!indices.length && mediaDefault) {\r\n                indices = [-1];\r\n            }\r\n\r\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\r\n                result = map(indices, function (index) {\r\n                    return clone(\r\n                        index === -1 ? mediaDefault.option : mediaList[index].option\r\n                    );\r\n                });\r\n            }\r\n            // Otherwise return nothing.\r\n\r\n            this._currentMediaIndices = indices;\r\n\r\n            return result;\r\n        }\r\n    };\r\n\r\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\r\n        var timelineOptions = [];\r\n        var mediaList = [];\r\n        var mediaDefault;\r\n        var baseOption;\r\n\r\n        // Compatible with ec2.\r\n        var timelineOpt = rawOption.timeline;\r\n\r\n        if (rawOption.baseOption) {\r\n            baseOption = rawOption.baseOption;\r\n        }\r\n\r\n        // For timeline\r\n        if (timelineOpt || rawOption.options) {\r\n            baseOption = baseOption || {};\r\n            timelineOptions = (rawOption.options || []).slice();\r\n        }\r\n\r\n        // For media query\r\n        if (rawOption.media) {\r\n            baseOption = baseOption || {};\r\n            var media = rawOption.media;\r\n            each(media, function (singleMedia) {\r\n                if (singleMedia && singleMedia.option) {\r\n                    if (singleMedia.query) {\r\n                        mediaList.push(singleMedia);\r\n                    }\r\n                    else if (!mediaDefault) {\r\n                        // Use the first media default.\r\n                        mediaDefault = singleMedia;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        // For normal option\r\n        if (!baseOption) {\r\n            baseOption = rawOption;\r\n        }\r\n\r\n        // Set timelineOpt to baseOption in ec3,\r\n        // which is convenient for merge option.\r\n        if (!baseOption.timeline) {\r\n            baseOption.timeline = timelineOpt;\r\n        }\r\n\r\n        // Preprocess.\r\n        each([baseOption].concat(timelineOptions)\r\n            .concat(zrUtil.map(mediaList, function (media) {\r\n                return media.option;\r\n            })),\r\n            function (option) {\r\n                each(optionPreprocessorFuncs, function (preProcess) {\r\n                    preProcess(option, isNew);\r\n                });\r\n            }\r\n        );\r\n\r\n        return {\r\n            baseOption: baseOption,\r\n            timelineOptions: timelineOptions,\r\n            mediaDefault: mediaDefault,\r\n            mediaList: mediaList\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\r\n     * Support: width, height, aspectRatio\r\n     * Can use max or min as prefix.\r\n     */\r\n    function applyMediaQuery(query, ecWidth, ecHeight) {\r\n        var realMap = {\r\n            width: ecWidth,\r\n            height: ecHeight,\r\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\r\n        };\r\n\r\n        var applicatable = true;\r\n\r\n        zrUtil.each(query, function (value, attr) {\r\n            var matched = attr.match(QUERY_REG);\r\n\r\n            if (!matched || !matched[1] || !matched[2]) {\r\n                return;\r\n            }\r\n\r\n            var operator = matched[1];\r\n            var realAttr = matched[2].toLowerCase();\r\n\r\n            if (!compare(realMap[realAttr], value, operator)) {\r\n                applicatable = false;\r\n            }\r\n        });\r\n\r\n        return applicatable;\r\n    }\r\n\r\n    function compare(real, expect, operator) {\r\n        if (operator === 'min') {\r\n            return real >= expect;\r\n        }\r\n        else if (operator === 'max') {\r\n            return real <= expect;\r\n        }\r\n        else { // Equals\r\n            return real === expect;\r\n        }\r\n    }\r\n\r\n    function indicesEquals(indices1, indices2) {\r\n        // indices is always order by asc and has only finite number.\r\n        return indices1.join(',') === indices2.join(',');\r\n    }\r\n\r\n    /**\r\n     * Consider case:\r\n     * `chart.setOption(opt1);`\r\n     * Then user do some interaction like dataZoom, dataView changing.\r\n     * `chart.setOption(opt2);`\r\n     * Then user press 'reset button' in toolbox.\r\n     *\r\n     * After doing that all of the interaction effects should be reset, the\r\n     * chart should be the same as the result of invoke\r\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\r\n     *\r\n     * Although it is not able ensure that\r\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\r\n     * `chart.setOption(merge(opt1, opt2));` exactly,\r\n     * this might be the only simple way to implement that feature.\r\n     *\r\n     * MEMO: We've considered some other approaches:\r\n     * 1. Each model handle its self restoration but not uniform treatment.\r\n     *     (Too complex in logic and error-prone)\r\n     * 2. Use a shadow ecModel. (Performace expensive)\r\n     */\r\n    function mergeOption(oldOption, newOption) {\r\n        newOption = newOption || {};\r\n\r\n        each(newOption, function (newCptOpt, mainType) {\r\n            if (newCptOpt == null) {\r\n                return;\r\n            }\r\n\r\n            var oldCptOpt = oldOption[mainType];\r\n\r\n            if (!ComponentModel.hasClass(mainType)) {\r\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\r\n            }\r\n            else {\r\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\r\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\r\n\r\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\r\n\r\n                oldOption[mainType] = map(mapResult, function (item) {\r\n                    return (item.option && item.exist)\r\n                        ? merge(item.exist, item.option, true)\r\n                        : (item.exist || item.option);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    module.exports = OptionManager;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/model/OptionManager.js\n ** module id = 549\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","'use strict';\r\n\r\n\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var formatUtil = require('../util/format');\r\n    var modelUtil = require('../util/model');\r\n    var ComponentModel = require('./Component');\r\n    var colorPaletteMixin = require('./mixin/colorPalette');\r\n    var env = require('zrender/lib/core/env');\r\n\r\n    var encodeHTML = formatUtil.encodeHTML;\r\n    var addCommas = formatUtil.addCommas;\r\n\r\n    var SeriesModel = ComponentModel.extend({\r\n\r\n        type: 'series.__base__',\r\n\r\n        /**\r\n         * @readOnly\r\n         */\r\n        seriesIndex: 0,\r\n\r\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\r\n        coordinateSystem: null,\r\n\r\n        /**\r\n         * @type {Object}\r\n         * @protected\r\n         */\r\n        defaultOption: null,\r\n\r\n        /**\r\n         * Data provided for legend\r\n         * @type {Function}\r\n         */\r\n        // PENDING\r\n        legendDataProvider: null,\r\n\r\n        /**\r\n         * Access path of color for visual\r\n         */\r\n        visualColorAccessPath: 'itemStyle.normal.color',\r\n\r\n        init: function (option, parentModel, ecModel, extraOpt) {\r\n\r\n            /**\r\n             * @type {number}\r\n             * @readOnly\r\n             */\r\n            this.seriesIndex = this.componentIndex;\r\n\r\n            this.mergeDefaultAndTheme(option, ecModel);\r\n\r\n            /**\r\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\r\n             * @private\r\n             */\r\n            this._dataBeforeProcessed = this.getInitialData(option, ecModel);\r\n\r\n            // If we reverse the order (make this._data firstly, and then make\r\n            // this._dataBeforeProcessed by cloneShallow), cloneShallow will\r\n            // cause this._data.graph.data !== this._data when using\r\n            // module:echarts/data/Graph or module:echarts/data/Tree.\r\n            // See module:echarts/data/helper/linkList\r\n            this._data = this._dataBeforeProcessed.cloneShallow();\r\n        },\r\n\r\n        /**\r\n         * Util for merge default and theme to option\r\n         * @param  {Object} option\r\n         * @param  {module:echarts/model/Global} ecModel\r\n         */\r\n        mergeDefaultAndTheme: function (option, ecModel) {\r\n            zrUtil.merge(\r\n                option,\r\n                ecModel.getTheme().get(this.subType)\r\n            );\r\n            zrUtil.merge(option, this.getDefaultOption());\r\n\r\n            // Default label emphasis `position` and `show`\r\n            // FIXME Set label in mergeOption\r\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\r\n\r\n            this.fillDataTextStyle(option.data);\r\n        },\r\n\r\n        mergeOption: function (newSeriesOption, ecModel) {\r\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\r\n            this.fillDataTextStyle(newSeriesOption.data);\r\n\r\n            var data = this.getInitialData(newSeriesOption, ecModel);\r\n            // TODO Merge data?\r\n            if (data) {\r\n                this._data = data;\r\n                this._dataBeforeProcessed = data.cloneShallow();\r\n            }\r\n        },\r\n\r\n        fillDataTextStyle: function (data) {\r\n            // Default data label emphasis `position` and `show`\r\n            // FIXME Tree structure data ?\r\n            // FIXME Performance ?\r\n            if (data) {\r\n                for (var i = 0; i < data.length; i++) {\r\n                    if (data[i] && data[i].label) {\r\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Init a data structure from data related option in series\r\n         * Must be overwritten\r\n         */\r\n        getInitialData: function () {},\r\n\r\n        /**\r\n         * @param {string} [dataType]\r\n         * @return {module:echarts/data/List}\r\n         */\r\n        getData: function (dataType) {\r\n            return dataType == null ? this._data : this._data.getLinkedData(dataType);\r\n        },\r\n\r\n        /**\r\n         * @param {module:echarts/data/List} data\r\n         */\r\n        setData: function (data) {\r\n            this._data = data;\r\n        },\r\n\r\n        /**\r\n         * Get data before processed\r\n         * @return {module:echarts/data/List}\r\n         */\r\n        getRawData: function () {\r\n            return this._dataBeforeProcessed;\r\n        },\r\n\r\n        /**\r\n         * Coord dimension to data dimension.\r\n         *\r\n         * By default the result is the same as dimensions of series data.\r\n         * But in some series data dimensions are different from coord dimensions (i.e.\r\n         * candlestick and boxplot). Override this method to handle those cases.\r\n         *\r\n         * Coord dimension to data dimension can be one-to-many\r\n         *\r\n         * @param {string} coordDim\r\n         * @return {Array.<string>} dimensions on the axis.\r\n         */\r\n        coordDimToDataDim: function (coordDim) {\r\n            return [coordDim];\r\n        },\r\n\r\n        /**\r\n         * Convert data dimension to coord dimension.\r\n         *\r\n         * @param {string|number} dataDim\r\n         * @return {string}\r\n         */\r\n        dataDimToCoordDim: function (dataDim) {\r\n            return dataDim;\r\n        },\r\n\r\n        /**\r\n         * Get base axis if has coordinate system and has axis.\r\n         * By default use coordSys.getBaseAxis();\r\n         * Can be overrided for some chart.\r\n         * @return {type} description\r\n         */\r\n        getBaseAxis: function () {\r\n            var coordSys = this.coordinateSystem;\r\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\r\n        },\r\n\r\n        // FIXME\r\n        /**\r\n         * Default tooltip formatter\r\n         *\r\n         * @param {number} dataIndex\r\n         * @param {boolean} [multipleSeries=false]\r\n         * @param {number} [dataType]\r\n         */\r\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\r\n            function formatArrayValue(value) {\r\n                return zrUtil.map(value, function (val, idx) {\r\n                    var dimInfo = data.getDimensionInfo(idx);\r\n                    var dimType = dimInfo && dimInfo.type;\r\n                    if (dimType === 'ordinal') {\r\n                        return val;\r\n                    }\r\n                    else if (dimType === 'time') {\r\n                        return multipleSeries ? '' : formatUtil.formatTime('yyyy/mm/dd hh:mm:ss', val);\r\n                    }\r\n                    else {\r\n                        return addCommas(val);\r\n                    }\r\n                }).filter(function (val) {\r\n                    return !!val;\r\n                }).join(', ');\r\n            }\r\n\r\n            var data = this._data;\r\n\r\n            var value = this.getRawValue(dataIndex);\r\n            var formattedValue = zrUtil.isArray(value)\r\n                ? formatArrayValue(value) : addCommas(value);\r\n            var name = data.getName(dataIndex);\r\n            var color = data.getItemVisual(dataIndex, 'color');\r\n            var colorEl = '<span style=\"display:inline-block;margin-right:5px;'\r\n                + 'border-radius:10px;width:9px;height:9px;background-color:' + color + '\"></span>';\r\n\r\n            var seriesName = this.name;\r\n            // FIXME\r\n            if (seriesName === '\\0-') {\r\n                // Not show '-'\r\n                seriesName = '';\r\n            }\r\n            return !multipleSeries\r\n                ? ((seriesName && encodeHTML(seriesName) + '<br />') + colorEl\r\n                    + (name\r\n                        ? encodeHTML(name) + ' : ' + formattedValue\r\n                        : formattedValue)\r\n                  )\r\n                : (colorEl + encodeHTML(this.name) + ' : ' + formattedValue);\r\n        },\r\n\r\n        /**\r\n         * @return {boolean}\r\n         */\r\n        ifEnableAnimation: function () {\r\n            if (env.node) {\r\n                return false;\r\n            }\r\n\r\n            var animationEnabled = this.getShallow('animation');\r\n            if (animationEnabled) {\r\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\r\n                    animationEnabled = false;\r\n                }\r\n            }\r\n            return animationEnabled;\r\n        },\r\n\r\n        restoreData: function () {\r\n            this._data = this._dataBeforeProcessed.cloneShallow();\r\n        },\r\n\r\n        getColorFromPalette: function (name, scope) {\r\n            var ecModel = this.ecModel;\r\n            // PENDING\r\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\r\n            if (!color) {\r\n                color = ecModel.getColorFromPalette(name, scope);\r\n            }\r\n            return color;\r\n        },\r\n\r\n        getAxisTooltipDataIndex: null\r\n    });\r\n\r\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\r\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\r\n\r\n    module.exports = SeriesModel;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/model/Series.js\n ** module id = 550\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","\r\n\r\n    var Group = require('zrender/lib/container/Group');\r\n    var componentUtil = require('../util/component');\r\n    var clazzUtil = require('../util/clazz');\r\n\r\n    var Component = function () {\r\n        /**\r\n         * @type {module:zrender/container/Group}\r\n         * @readOnly\r\n         */\r\n        this.group = new Group();\r\n\r\n        /**\r\n         * @type {string}\r\n         * @readOnly\r\n         */\r\n        this.uid = componentUtil.getUID('viewComponent');\r\n    };\r\n\r\n    Component.prototype = {\r\n\r\n        constructor: Component,\r\n\r\n        init: function (ecModel, api) {},\r\n\r\n        render: function (componentModel, ecModel, api, payload) {},\r\n\r\n        dispose: function () {}\r\n    };\r\n\r\n    var componentProto = Component.prototype;\r\n    componentProto.updateView\r\n        = componentProto.updateLayout\r\n        = componentProto.updateVisual\r\n        = function (seriesModel, ecModel, api, payload) {\r\n            // Do nothing;\r\n        };\r\n    // Enable Component.extend.\r\n    clazzUtil.enableClassExtend(Component);\r\n\r\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\r\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\r\n\r\n    module.exports = Component;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/view/Component.js\n ** module id = 551\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","/**\r\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\r\n * @module zrender/graphic/Group\r\n * @example\r\n *     var Group = require('zrender/lib/container/Group');\r\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\r\n *     var g = new Group();\r\n *     g.position[0] = 100;\r\n *     g.position[1] = 100;\r\n *     g.add(new Circle({\r\n *         style: {\r\n *             x: 100,\r\n *             y: 100,\r\n *             r: 20,\r\n *         }\r\n *     }));\r\n *     zr.add(g);\r\n */\r\n\r\n\r\n    var zrUtil = require('../core/util');\r\n    var Element = require('../Element');\r\n    var BoundingRect = require('../core/BoundingRect');\r\n\r\n    /**\r\n     * @alias module:zrender/graphic/Group\r\n     * @constructor\r\n     * @extends module:zrender/mixin/Transformable\r\n     * @extends module:zrender/mixin/Eventful\r\n     */\r\n    var Group = function (opts) {\r\n\r\n        opts = opts || {};\r\n\r\n        Element.call(this, opts);\r\n\r\n        for (var key in opts) {\r\n            this[key] = opts[key];\r\n        }\r\n\r\n        this._children = [];\r\n\r\n        this.__storage = null;\r\n\r\n        this.__dirty = true;\r\n    };\r\n\r\n    Group.prototype = {\r\n\r\n        constructor: Group,\r\n\r\n        isGroup: true,\r\n\r\n        /**\r\n         * @type {string}\r\n         */\r\n        type: 'group',\r\n\r\n        /**\r\n         * 所有子孙元素是否响应鼠标事件\r\n         * @name module:/zrender/container/Group#silent\r\n         * @type {boolean}\r\n         * @default false\r\n         */\r\n        silent: false,\r\n\r\n        /**\r\n         * @return {Array.<module:zrender/Element>}\r\n         */\r\n        children: function () {\r\n            return this._children.slice();\r\n        },\r\n\r\n        /**\r\n         * 获取指定 index 的儿子节点\r\n         * @param  {number} idx\r\n         * @return {module:zrender/Element}\r\n         */\r\n        childAt: function (idx) {\r\n            return this._children[idx];\r\n        },\r\n\r\n        /**\r\n         * 获取指定名字的儿子节点\r\n         * @param  {string} name\r\n         * @return {module:zrender/Element}\r\n         */\r\n        childOfName: function (name) {\r\n            var children = this._children;\r\n            for (var i = 0; i < children.length; i++) {\r\n                if (children[i].name === name) {\r\n                    return children[i];\r\n                }\r\n             }\r\n        },\r\n\r\n        /**\r\n         * @return {number}\r\n         */\r\n        childCount: function () {\r\n            return this._children.length;\r\n        },\r\n\r\n        /**\r\n         * 添加子节点到最后\r\n         * @param {module:zrender/Element} child\r\n         */\r\n        add: function (child) {\r\n            if (child && child !== this && child.parent !== this) {\r\n\r\n                this._children.push(child);\r\n\r\n                this._doAdd(child);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 添加子节点在 nextSibling 之前\r\n         * @param {module:zrender/Element} child\r\n         * @param {module:zrender/Element} nextSibling\r\n         */\r\n        addBefore: function (child, nextSibling) {\r\n            if (child && child !== this && child.parent !== this\r\n                && nextSibling && nextSibling.parent === this) {\r\n\r\n                var children = this._children;\r\n                var idx = children.indexOf(nextSibling);\r\n\r\n                if (idx >= 0) {\r\n                    children.splice(idx, 0, child);\r\n                    this._doAdd(child);\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        _doAdd: function (child) {\r\n            if (child.parent) {\r\n                child.parent.remove(child);\r\n            }\r\n\r\n            child.parent = this;\r\n\r\n            var storage = this.__storage;\r\n            var zr = this.__zr;\r\n            if (storage && storage !== child.__storage) {\r\n\r\n                storage.addToMap(child);\r\n\r\n                if (child instanceof Group) {\r\n                    child.addChildrenToStorage(storage);\r\n                }\r\n            }\r\n\r\n            zr && zr.refresh();\r\n        },\r\n\r\n        /**\r\n         * 移除子节点\r\n         * @param {module:zrender/Element} child\r\n         */\r\n        remove: function (child) {\r\n            var zr = this.__zr;\r\n            var storage = this.__storage;\r\n            var children = this._children;\r\n\r\n            var idx = zrUtil.indexOf(children, child);\r\n            if (idx < 0) {\r\n                return this;\r\n            }\r\n            children.splice(idx, 1);\r\n\r\n            child.parent = null;\r\n\r\n            if (storage) {\r\n\r\n                storage.delFromMap(child.id);\r\n\r\n                if (child instanceof Group) {\r\n                    child.delChildrenFromStorage(storage);\r\n                }\r\n            }\r\n\r\n            zr && zr.refresh();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 移除所有子节点\r\n         */\r\n        removeAll: function () {\r\n            var children = this._children;\r\n            var storage = this.__storage;\r\n            var child;\r\n            var i;\r\n            for (i = 0; i < children.length; i++) {\r\n                child = children[i];\r\n                if (storage) {\r\n                    storage.delFromMap(child.id);\r\n                    if (child instanceof Group) {\r\n                        child.delChildrenFromStorage(storage);\r\n                    }\r\n                }\r\n                child.parent = null;\r\n            }\r\n            children.length = 0;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 遍历所有子节点\r\n         * @param  {Function} cb\r\n         * @param  {}   context\r\n         */\r\n        eachChild: function (cb, context) {\r\n            var children = this._children;\r\n            for (var i = 0; i < children.length; i++) {\r\n                var child = children[i];\r\n                cb.call(context, child, i);\r\n            }\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 深度优先遍历所有子孙节点\r\n         * @param  {Function} cb\r\n         * @param  {}   context\r\n         */\r\n        traverse: function (cb, context) {\r\n            for (var i = 0; i < this._children.length; i++) {\r\n                var child = this._children[i];\r\n                cb.call(context, child);\r\n\r\n                if (child.type === 'group') {\r\n                    child.traverse(cb, context);\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n\r\n        addChildrenToStorage: function (storage) {\r\n            for (var i = 0; i < this._children.length; i++) {\r\n                var child = this._children[i];\r\n                storage.addToMap(child);\r\n                if (child instanceof Group) {\r\n                    child.addChildrenToStorage(storage);\r\n                }\r\n            }\r\n        },\r\n\r\n        delChildrenFromStorage: function (storage) {\r\n            for (var i = 0; i < this._children.length; i++) {\r\n                var child = this._children[i];\r\n                storage.delFromMap(child.id);\r\n                if (child instanceof Group) {\r\n                    child.delChildrenFromStorage(storage);\r\n                }\r\n            }\r\n        },\r\n\r\n        dirty: function () {\r\n            this.__dirty = true;\r\n            this.__zr && this.__zr.refresh();\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @return {module:zrender/core/BoundingRect}\r\n         */\r\n        getBoundingRect: function (includeChildren) {\r\n            // TODO Caching\r\n            // TODO Transform\r\n            var rect = null;\r\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\r\n            var children = includeChildren || this._children;\r\n            var tmpMat = [];\r\n\r\n            for (var i = 0; i < children.length; i++) {\r\n                var child = children[i];\r\n                if (child.ignore || child.invisible) {\r\n                    continue;\r\n                }\r\n\r\n                var childRect = child.getBoundingRect();\r\n                var transform = child.getLocalTransform(tmpMat);\r\n                if (transform) {\r\n                    tmpRect.copy(childRect);\r\n                    tmpRect.applyTransform(transform);\r\n                    rect = rect || tmpRect.clone();\r\n                    rect.union(tmpRect);\r\n                }\r\n                else {\r\n                    rect = rect || childRect.clone();\r\n                    rect.union(childRect);\r\n                }\r\n            }\r\n            return rect || tmpRect;\r\n        }\r\n    };\r\n\r\n    zrUtil.inherits(Group, Element);\r\n\r\n    module.exports = Group;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/container/Group.js\n ** module id = 552\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","'use strict';\r\n/**\r\n * @module zrender/Element\r\n */\r\n\r\n\r\n    var guid = require('./core/guid');\r\n    var Eventful = require('./mixin/Eventful');\r\n    var Transformable = require('./mixin/Transformable');\r\n    var Animatable = require('./mixin/Animatable');\r\n    var zrUtil = require('./core/util');\r\n\r\n    /**\r\n     * @alias module:zrender/Element\r\n     * @constructor\r\n     * @extends {module:zrender/mixin/Animatable}\r\n     * @extends {module:zrender/mixin/Transformable}\r\n     * @extends {module:zrender/mixin/Eventful}\r\n     */\r\n    var Element = function (opts) {\r\n\r\n        Transformable.call(this, opts);\r\n        Eventful.call(this, opts);\r\n        Animatable.call(this, opts);\r\n\r\n        /**\r\n         * 画布元素ID\r\n         * @type {string}\r\n         */\r\n        this.id = opts.id || guid();\r\n    };\r\n\r\n    Element.prototype = {\r\n\r\n        /**\r\n         * 元素类型\r\n         * Element type\r\n         * @type {string}\r\n         */\r\n        type: 'element',\r\n\r\n        /**\r\n         * 元素名字\r\n         * Element name\r\n         * @type {string}\r\n         */\r\n        name: '',\r\n\r\n        /**\r\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\r\n         * ZRender instance will be assigned when element is associated with zrender\r\n         * @name module:/zrender/Element#__zr\r\n         * @type {module:zrender/ZRender}\r\n         */\r\n        __zr: null,\r\n\r\n        /**\r\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\r\n         * If ignore drawing and events of the element object\r\n         * @name module:/zrender/Element#ignore\r\n         * @type {boolean}\r\n         * @default false\r\n         */\r\n        ignore: false,\r\n\r\n        /**\r\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\r\n         * 该路径会继承被裁减对象的变换\r\n         * @type {module:zrender/graphic/Path}\r\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\r\n         * @readOnly\r\n         */\r\n        clipPath: null,\r\n\r\n        /**\r\n         * Drift element\r\n         * @param  {number} dx dx on the global space\r\n         * @param  {number} dy dy on the global space\r\n         */\r\n        drift: function (dx, dy) {\r\n            switch (this.draggable) {\r\n                case 'horizontal':\r\n                    dy = 0;\r\n                    break;\r\n                case 'vertical':\r\n                    dx = 0;\r\n                    break;\r\n            }\r\n\r\n            var m = this.transform;\r\n            if (!m) {\r\n                m = this.transform = [1, 0, 0, 1, 0, 0];\r\n            }\r\n            m[4] += dx;\r\n            m[5] += dy;\r\n\r\n            this.decomposeTransform();\r\n            this.dirty(false);\r\n        },\r\n\r\n        /**\r\n         * Hook before update\r\n         */\r\n        beforeUpdate: function () {},\r\n        /**\r\n         * Hook after update\r\n         */\r\n        afterUpdate: function () {},\r\n        /**\r\n         * Update each frame\r\n         */\r\n        update: function () {\r\n            this.updateTransform();\r\n        },\r\n\r\n        /**\r\n         * @param  {Function} cb\r\n         * @param  {}   context\r\n         */\r\n        traverse: function (cb, context) {},\r\n\r\n        /**\r\n         * @protected\r\n         */\r\n        attrKV: function (key, value) {\r\n            if (key === 'position' || key === 'scale' || key === 'origin') {\r\n                // Copy the array\r\n                if (value) {\r\n                    var target = this[key];\r\n                    if (!target) {\r\n                        target = this[key] = [];\r\n                    }\r\n                    target[0] = value[0];\r\n                    target[1] = value[1];\r\n                }\r\n            }\r\n            else {\r\n                this[key] = value;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Hide the element\r\n         */\r\n        hide: function () {\r\n            this.ignore = true;\r\n            this.__zr && this.__zr.refresh();\r\n        },\r\n\r\n        /**\r\n         * Show the element\r\n         */\r\n        show: function () {\r\n            this.ignore = false;\r\n            this.__zr && this.__zr.refresh();\r\n        },\r\n\r\n        /**\r\n         * @param {string|Object} key\r\n         * @param {*} value\r\n         */\r\n        attr: function (key, value) {\r\n            if (typeof key === 'string') {\r\n                this.attrKV(key, value);\r\n            }\r\n            else if (zrUtil.isObject(key)) {\r\n                for (var name in key) {\r\n                    if (key.hasOwnProperty(name)) {\r\n                        this.attrKV(name, key[name]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.dirty(false);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @param {module:zrender/graphic/Path} clipPath\r\n         */\r\n        setClipPath: function (clipPath) {\r\n            var zr = this.__zr;\r\n            if (zr) {\r\n                clipPath.addSelfToZr(zr);\r\n            }\r\n\r\n            // Remove previous clip path\r\n            if (this.clipPath && this.clipPath !== clipPath) {\r\n                this.removeClipPath();\r\n            }\r\n\r\n            this.clipPath = clipPath;\r\n            clipPath.__zr = zr;\r\n            clipPath.__clipTarget = this;\r\n\r\n            this.dirty(false);\r\n        },\r\n\r\n        /**\r\n         */\r\n        removeClipPath: function () {\r\n            var clipPath = this.clipPath;\r\n            if (clipPath) {\r\n                if (clipPath.__zr) {\r\n                    clipPath.removeSelfFromZr(clipPath.__zr);\r\n                }\r\n\r\n                clipPath.__zr = null;\r\n                clipPath.__clipTarget = null;\r\n                this.clipPath = null;\r\n\r\n                this.dirty(false);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Add self from zrender instance.\r\n         * Not recursively because it will be invoked when element added to storage.\r\n         * @param {module:zrender/ZRender} zr\r\n         */\r\n        addSelfToZr: function (zr) {\r\n            this.__zr = zr;\r\n            // 添加动画\r\n            var animators = this.animators;\r\n            if (animators) {\r\n                for (var i = 0; i < animators.length; i++) {\r\n                    zr.animation.addAnimator(animators[i]);\r\n                }\r\n            }\r\n\r\n            if (this.clipPath) {\r\n                this.clipPath.addSelfToZr(zr);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Remove self from zrender instance.\r\n         * Not recursively because it will be invoked when element added to storage.\r\n         * @param {module:zrender/ZRender} zr\r\n         */\r\n        removeSelfFromZr: function (zr) {\r\n            this.__zr = null;\r\n            // 移除动画\r\n            var animators = this.animators;\r\n            if (animators) {\r\n                for (var i = 0; i < animators.length; i++) {\r\n                    zr.animation.removeAnimator(animators[i]);\r\n                }\r\n            }\r\n\r\n            if (this.clipPath) {\r\n                this.clipPath.removeSelfFromZr(zr);\r\n            }\r\n        }\r\n    };\r\n\r\n    zrUtil.mixin(Element, Animatable);\r\n    zrUtil.mixin(Element, Transformable);\r\n    zrUtil.mixin(Element, Eventful);\r\n\r\n    module.exports = Element;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/Element.js\n ** module id = 553\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","/**\r\n * zrender: 生成唯一id\r\n *\r\n * @author errorrik (errorrik@gmail.com)\r\n */\r\n\r\n\r\n    var idStart = 0x0907;\r\n\r\n    module.exports = function () {\r\n        return idStart++;\r\n    };\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/core/guid.js\n ** module id = 554\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","/**\r\n * 事件扩展\r\n * @module zrender/mixin/Eventful\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *         pissang (https://www.github.com/pissang)\r\n */\r\n\r\n\r\n    var arrySlice = Array.prototype.slice;\r\n\r\n    /**\r\n     * 事件分发器\r\n     * @alias module:zrender/mixin/Eventful\r\n     * @constructor\r\n     */\r\n    var Eventful = function () {\r\n        this._$handlers = {};\r\n    };\r\n\r\n    Eventful.prototype = {\r\n\r\n        constructor: Eventful,\r\n\r\n        /**\r\n         * 单次触发绑定，trigger后销毁\r\n         *\r\n         * @param {string} event 事件名\r\n         * @param {Function} handler 响应函数\r\n         * @param {Object} context\r\n         */\r\n        one: function (event, handler, context) {\r\n            var _h = this._$handlers;\r\n\r\n            if (!handler || !event) {\r\n                return this;\r\n            }\r\n\r\n            if (!_h[event]) {\r\n                _h[event] = [];\r\n            }\r\n\r\n            for (var i = 0; i < _h[event].length; i++) {\r\n                if (_h[event][i].h === handler) {\r\n                    return this;\r\n                }\r\n            }\r\n\r\n            _h[event].push({\r\n                h: handler,\r\n                one: true,\r\n                ctx: context || this\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 绑定事件\r\n         * @param {string} event 事件名\r\n         * @param {Function} handler 事件处理函数\r\n         * @param {Object} [context]\r\n         */\r\n        on: function (event, handler, context) {\r\n            var _h = this._$handlers;\r\n\r\n            if (!handler || !event) {\r\n                return this;\r\n            }\r\n\r\n            if (!_h[event]) {\r\n                _h[event] = [];\r\n            }\r\n\r\n            for (var i = 0; i < _h[event].length; i++) {\r\n                if (_h[event][i].h === handler) {\r\n                    return this;\r\n                }\r\n            }\r\n\r\n            _h[event].push({\r\n                h: handler,\r\n                one: false,\r\n                ctx: context || this\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 是否绑定了事件\r\n         * @param  {string}  event\r\n         * @return {boolean}\r\n         */\r\n        isSilent: function (event) {\r\n            var _h = this._$handlers;\r\n            return _h[event] && _h[event].length;\r\n        },\r\n\r\n        /**\r\n         * 解绑事件\r\n         * @param {string} event 事件名\r\n         * @param {Function} [handler] 事件处理函数\r\n         */\r\n        off: function (event, handler) {\r\n            var _h = this._$handlers;\r\n\r\n            if (!event) {\r\n                this._$handlers = {};\r\n                return this;\r\n            }\r\n\r\n            if (handler) {\r\n                if (_h[event]) {\r\n                    var newList = [];\r\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\r\n                        if (_h[event][i]['h'] != handler) {\r\n                            newList.push(_h[event][i]);\r\n                        }\r\n                    }\r\n                    _h[event] = newList;\r\n                }\r\n\r\n                if (_h[event] && _h[event].length === 0) {\r\n                    delete _h[event];\r\n                }\r\n            }\r\n            else {\r\n                delete _h[event];\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 事件分发\r\n         *\r\n         * @param {string} type 事件类型\r\n         */\r\n        trigger: function (type) {\r\n            if (this._$handlers[type]) {\r\n                var args = arguments;\r\n                var argLen = args.length;\r\n\r\n                if (argLen > 3) {\r\n                    args = arrySlice.call(args, 1);\r\n                }\r\n\r\n                var _h = this._$handlers[type];\r\n                var len = _h.length;\r\n                for (var i = 0; i < len;) {\r\n                    // Optimize advise from backbone\r\n                    switch (argLen) {\r\n                        case 1:\r\n                            _h[i]['h'].call(_h[i]['ctx']);\r\n                            break;\r\n                        case 2:\r\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\r\n                            break;\r\n                        case 3:\r\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\r\n                            break;\r\n                        default:\r\n                            // have more than 2 given arguments\r\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\r\n                            break;\r\n                    }\r\n\r\n                    if (_h[i]['one']) {\r\n                        _h.splice(i, 1);\r\n                        len--;\r\n                    }\r\n                    else {\r\n                        i++;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 带有context的事件分发, 最后一个参数是事件回调的context\r\n         * @param {string} type 事件类型\r\n         */\r\n        triggerWithContext: function (type) {\r\n            if (this._$handlers[type]) {\r\n                var args = arguments;\r\n                var argLen = args.length;\r\n\r\n                if (argLen > 4) {\r\n                    args = arrySlice.call(args, 1, args.length - 1);\r\n                }\r\n                var ctx = args[args.length - 1];\r\n\r\n                var _h = this._$handlers[type];\r\n                var len = _h.length;\r\n                for (var i = 0; i < len;) {\r\n                    // Optimize advise from backbone\r\n                    switch (argLen) {\r\n                        case 1:\r\n                            _h[i]['h'].call(ctx);\r\n                            break;\r\n                        case 2:\r\n                            _h[i]['h'].call(ctx, args[1]);\r\n                            break;\r\n                        case 3:\r\n                            _h[i]['h'].call(ctx, args[1], args[2]);\r\n                            break;\r\n                        default:\r\n                            // have more than 2 given arguments\r\n                            _h[i]['h'].apply(ctx, args);\r\n                            break;\r\n                    }\r\n\r\n                    if (_h[i]['one']) {\r\n                        _h.splice(i, 1);\r\n                        len--;\r\n                    }\r\n                    else {\r\n                        i++;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return this;\r\n        }\r\n    };\r\n\r\n    // 对象可以通过 onxxxx 绑定事件\r\n    /**\r\n     * @event module:zrender/mixin/Eventful#onclick\r\n     * @type {Function}\r\n     * @default null\r\n     */\r\n    /**\r\n     * @event module:zrender/mixin/Eventful#onmouseover\r\n     * @type {Function}\r\n     * @default null\r\n     */\r\n    /**\r\n     * @event module:zrender/mixin/Eventful#onmouseout\r\n     * @type {Function}\r\n     * @default null\r\n     */\r\n    /**\r\n     * @event module:zrender/mixin/Eventful#onmousemove\r\n     * @type {Function}\r\n     * @default null\r\n     */\r\n    /**\r\n     * @event module:zrender/mixin/Eventful#onmousewheel\r\n     * @type {Function}\r\n     * @default null\r\n     */\r\n    /**\r\n     * @event module:zrender/mixin/Eventful#onmousedown\r\n     * @type {Function}\r\n     * @default null\r\n     */\r\n    /**\r\n     * @event module:zrender/mixin/Eventful#onmouseup\r\n     * @type {Function}\r\n     * @default null\r\n     */\r\n    /**\r\n     * @event module:zrender/mixin/Eventful#ondragstart\r\n     * @type {Function}\r\n     * @default null\r\n     */\r\n    /**\r\n     * @event module:zrender/mixin/Eventful#ondragend\r\n     * @type {Function}\r\n     * @default null\r\n     */\r\n    /**\r\n     * @event module:zrender/mixin/Eventful#ondragenter\r\n     * @type {Function}\r\n     * @default null\r\n     */\r\n    /**\r\n     * @event module:zrender/mixin/Eventful#ondragleave\r\n     * @type {Function}\r\n     * @default null\r\n     */\r\n    /**\r\n     * @event module:zrender/mixin/Eventful#ondragover\r\n     * @type {Function}\r\n     * @default null\r\n     */\r\n    /**\r\n     * @event module:zrender/mixin/Eventful#ondrop\r\n     * @type {Function}\r\n     * @default null\r\n     */\r\n\r\n    module.exports = Eventful;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/mixin/Eventful.js\n ** module id = 555\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","'use strict';\r\n/**\r\n * 提供变换扩展\r\n * @module zrender/mixin/Transformable\r\n * @author pissang (https://www.github.com/pissang)\r\n */\r\n\r\n\r\n    var matrix = require('../core/matrix');\r\n    var vector = require('../core/vector');\r\n    var mIdentity = matrix.identity;\r\n\r\n    var EPSILON = 5e-5;\r\n\r\n    function isNotAroundZero(val) {\r\n        return val > EPSILON || val < -EPSILON;\r\n    }\r\n\r\n    /**\r\n     * @alias module:zrender/mixin/Transformable\r\n     * @constructor\r\n     */\r\n    var Transformable = function (opts) {\r\n        opts = opts || {};\r\n        // If there are no given position, rotation, scale\r\n        if (!opts.position) {\r\n            /**\r\n             * 平移\r\n             * @type {Array.<number>}\r\n             * @default [0, 0]\r\n             */\r\n            this.position = [0, 0];\r\n        }\r\n        if (opts.rotation == null) {\r\n            /**\r\n             * 旋转\r\n             * @type {Array.<number>}\r\n             * @default 0\r\n             */\r\n            this.rotation = 0;\r\n        }\r\n        if (!opts.scale) {\r\n            /**\r\n             * 缩放\r\n             * @type {Array.<number>}\r\n             * @default [1, 1]\r\n             */\r\n            this.scale = [1, 1];\r\n        }\r\n        /**\r\n         * 旋转和缩放的原点\r\n         * @type {Array.<number>}\r\n         * @default null\r\n         */\r\n        this.origin = this.origin || null;\r\n    };\r\n\r\n    var transformableProto = Transformable.prototype;\r\n    transformableProto.transform = null;\r\n\r\n    /**\r\n     * 判断是否需要有坐标变换\r\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\r\n     */\r\n    transformableProto.needLocalTransform = function () {\r\n        return isNotAroundZero(this.rotation)\r\n            || isNotAroundZero(this.position[0])\r\n            || isNotAroundZero(this.position[1])\r\n            || isNotAroundZero(this.scale[0] - 1)\r\n            || isNotAroundZero(this.scale[1] - 1);\r\n    };\r\n\r\n    transformableProto.updateTransform = function () {\r\n        var parent = this.parent;\r\n        var parentHasTransform = parent && parent.transform;\r\n        var needLocalTransform = this.needLocalTransform();\r\n\r\n        var m = this.transform;\r\n        if (!(needLocalTransform || parentHasTransform)) {\r\n            m && mIdentity(m);\r\n            return;\r\n        }\r\n\r\n        m = m || matrix.create();\r\n\r\n        if (needLocalTransform) {\r\n            this.getLocalTransform(m);\r\n        }\r\n        else {\r\n            mIdentity(m);\r\n        }\r\n\r\n        // 应用父节点变换\r\n        if (parentHasTransform) {\r\n            if (needLocalTransform) {\r\n                matrix.mul(m, parent.transform, m);\r\n            }\r\n            else {\r\n                matrix.copy(m, parent.transform);\r\n            }\r\n        }\r\n        // 保存这个变换矩阵\r\n        this.transform = m;\r\n\r\n        this.invTransform = this.invTransform || matrix.create();\r\n        matrix.invert(this.invTransform, m);\r\n    };\r\n\r\n    transformableProto.getLocalTransform = function (m) {\r\n        m = m || [];\r\n        mIdentity(m);\r\n\r\n        var origin = this.origin;\r\n\r\n        var scale = this.scale;\r\n        var rotation = this.rotation;\r\n        var position = this.position;\r\n        if (origin) {\r\n            // Translate to origin\r\n            m[4] -= origin[0];\r\n            m[5] -= origin[1];\r\n        }\r\n        matrix.scale(m, m, scale);\r\n        if (rotation) {\r\n            matrix.rotate(m, m, rotation);\r\n        }\r\n        if (origin) {\r\n            // Translate back from origin\r\n            m[4] += origin[0];\r\n            m[5] += origin[1];\r\n        }\r\n\r\n        m[4] += position[0];\r\n        m[5] += position[1];\r\n\r\n        return m;\r\n    };\r\n    /**\r\n     * 将自己的transform应用到context上\r\n     * @param {Context2D} ctx\r\n     */\r\n    transformableProto.setTransform = function (ctx) {\r\n        var m = this.transform;\r\n        if (m) {\r\n            ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\r\n        }\r\n    };\r\n\r\n    transformableProto.restoreTransform = function (ctx) {\r\n        var m = this.invTransform;\r\n        if (m) {\r\n            ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\r\n        }\r\n    }\r\n\r\n    var tmpTransform = [];\r\n\r\n    /**\r\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\r\n     */\r\n    transformableProto.decomposeTransform = function () {\r\n        if (!this.transform) {\r\n            return;\r\n        }\r\n        var parent = this.parent;\r\n        var m = this.transform;\r\n        if (parent && parent.transform) {\r\n            // Get local transform and decompose them to position, scale, rotation\r\n            matrix.mul(tmpTransform, parent.invTransform, m);\r\n            m = tmpTransform;\r\n        }\r\n        var sx = m[0] * m[0] + m[1] * m[1];\r\n        var sy = m[2] * m[2] + m[3] * m[3];\r\n        var position = this.position;\r\n        var scale = this.scale;\r\n        if (isNotAroundZero(sx - 1)) {\r\n            sx = Math.sqrt(sx);\r\n        }\r\n        if (isNotAroundZero(sy - 1)) {\r\n            sy = Math.sqrt(sy);\r\n        }\r\n        if (m[0] < 0) {\r\n            sx = -sx;\r\n        }\r\n        if (m[3] < 0) {\r\n            sy = -sy;\r\n        }\r\n        position[0] = m[4];\r\n        position[1] = m[5];\r\n        scale[0] = sx;\r\n        scale[1] = sy;\r\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\r\n    };\r\n\r\n    /**\r\n     * Get global scale\r\n     * @return {Array.<number>}\r\n     */\r\n    transformableProto.getGlobalScale = function () {\r\n        var m = this.transform;\r\n        if (!m) {\r\n            return [1, 1];\r\n        }\r\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\r\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\r\n        if (m[0] < 0) {\r\n            sx = -sx;\r\n        }\r\n        if (m[3] < 0) {\r\n            sy = -sy;\r\n        }\r\n        return [sx, sy];\r\n    };\r\n    /**\r\n     * 变换坐标位置到 shape 的局部坐标空间\r\n     * @method\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @return {Array.<number>}\r\n     */\r\n    transformableProto.transformCoordToLocal = function (x, y) {\r\n        var v2 = [x, y];\r\n        var invTransform = this.invTransform;\r\n        if (invTransform) {\r\n            vector.applyTransform(v2, v2, invTransform);\r\n        }\r\n        return v2;\r\n    };\r\n\r\n    /**\r\n     * 变换局部坐标位置到全局坐标空间\r\n     * @method\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @return {Array.<number>}\r\n     */\r\n    transformableProto.transformCoordToGlobal = function (x, y) {\r\n        var v2 = [x, y];\r\n        var transform = this.transform;\r\n        if (transform) {\r\n            vector.applyTransform(v2, v2, transform);\r\n        }\r\n        return v2;\r\n    };\r\n\r\n    module.exports = Transformable;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/mixin/Transformable.js\n ** module id = 556\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","'use strict';\r\n/**\r\n * @module zrender/mixin/Animatable\r\n */\r\n\r\n\r\n    var Animator = require('../animation/Animator');\r\n    var util = require('../core/util');\r\n    var isString = util.isString;\r\n    var isFunction = util.isFunction;\r\n    var isObject = util.isObject;\r\n    var log = require('../core/log');\r\n\r\n    /**\r\n     * @alias modue:zrender/mixin/Animatable\r\n     * @constructor\r\n     */\r\n    var Animatable = function () {\r\n\r\n        /**\r\n         * @type {Array.<module:zrender/animation/Animator>}\r\n         * @readOnly\r\n         */\r\n        this.animators = [];\r\n    };\r\n\r\n    Animatable.prototype = {\r\n\r\n        constructor: Animatable,\r\n\r\n        /**\r\n         * 动画\r\n         *\r\n         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\r\n         * @param {boolean} [loop] 动画是否循环\r\n         * @return {module:zrender/animation/Animator}\r\n         * @example:\r\n         *     el.animate('style', false)\r\n         *         .when(1000, {x: 10} )\r\n         *         .done(function(){ // Animation done })\r\n         *         .start()\r\n         */\r\n        animate: function (path, loop) {\r\n            var target;\r\n            var animatingShape = false;\r\n            var el = this;\r\n            var zr = this.__zr;\r\n            if (path) {\r\n                var pathSplitted = path.split('.');\r\n                var prop = el;\r\n                // If animating shape\r\n                animatingShape = pathSplitted[0] === 'shape';\r\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\r\n                    if (!prop) {\r\n                        continue;\r\n                    }\r\n                    prop = prop[pathSplitted[i]];\r\n                }\r\n                if (prop) {\r\n                    target = prop;\r\n                }\r\n            }\r\n            else {\r\n                target = el;\r\n            }\r\n\r\n            if (!target) {\r\n                log(\r\n                    'Property \"'\r\n                    + path\r\n                    + '\" is not existed in element '\r\n                    + el.id\r\n                );\r\n                return;\r\n            }\r\n\r\n            var animators = el.animators;\r\n\r\n            var animator = new Animator(target, loop);\r\n\r\n            animator.during(function (target) {\r\n                el.dirty(animatingShape);\r\n            })\r\n            .done(function () {\r\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\r\n                animators.splice(util.indexOf(animators, animator), 1);\r\n            });\r\n\r\n            animators.push(animator);\r\n\r\n            // If animate after added to the zrender\r\n            if (zr) {\r\n                zr.animation.addAnimator(animator);\r\n            }\r\n\r\n            return animator;\r\n        },\r\n\r\n        /**\r\n         * 停止动画\r\n         * @param {boolean} forwardToLast If move to last frame before stop\r\n         */\r\n        stopAnimation: function (forwardToLast) {\r\n            var animators = this.animators;\r\n            var len = animators.length;\r\n            for (var i = 0; i < len; i++) {\r\n                animators[i].stop(forwardToLast);\r\n            }\r\n            animators.length = 0;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @param {Object} target\r\n         * @param {number} [time=500] Time in ms\r\n         * @param {string} [easing='linear']\r\n         * @param {number} [delay=0]\r\n         * @param {Function} [callback]\r\n         *\r\n         * @example\r\n         *  // Animate position\r\n         *  el.animateTo({\r\n         *      position: [10, 10]\r\n         *  }, function () { // done })\r\n         *\r\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\r\n         *  el.animateTo({\r\n         *      shape: {\r\n         *          width: 500\r\n         *      },\r\n         *      style: {\r\n         *          fill: 'red'\r\n         *      }\r\n         *      position: [10, 10]\r\n         *  }, 100, 100, 'cubicOut', function () { // done })\r\n         */\r\n         // TODO Return animation key\r\n        animateTo: function (target, time, delay, easing, callback) {\r\n            // animateTo(target, time, easing, callback);\r\n            if (isString(delay)) {\r\n                callback = easing;\r\n                easing = delay;\r\n                delay = 0;\r\n            }\r\n            // animateTo(target, time, delay, callback);\r\n            else if (isFunction(easing)) {\r\n                callback = easing;\r\n                easing = 'linear';\r\n                delay = 0;\r\n            }\r\n            // animateTo(target, time, callback);\r\n            else if (isFunction(delay)) {\r\n                callback = delay;\r\n                delay = 0;\r\n            }\r\n            // animateTo(target, callback)\r\n            else if (isFunction(time)) {\r\n                callback = time;\r\n                time = 500;\r\n            }\r\n            // animateTo(target)\r\n            else if (!time) {\r\n                time = 500;\r\n            }\r\n            // Stop all previous animations\r\n            this.stopAnimation();\r\n            this._animateToShallow('', this, target, time, delay, easing, callback);\r\n\r\n            // Animators may be removed immediately after start\r\n            // if there is nothing to animate\r\n            var animators = this.animators.slice();\r\n            var count = animators.length;\r\n            function done() {\r\n                count--;\r\n                if (!count) {\r\n                    callback && callback();\r\n                }\r\n            }\r\n\r\n            // No animators. This should be checked before animators[i].start(),\r\n            // because 'done' may be executed immediately if no need to animate.\r\n            if (!count) {\r\n                callback && callback();\r\n            }\r\n            // Start after all animators created\r\n            // Incase any animator is done immediately when all animation properties are not changed\r\n            for (var i = 0; i < animators.length; i++) {\r\n                animators[i]\r\n                    .done(done)\r\n                    .start(easing);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         * @param {string} path=''\r\n         * @param {Object} source=this\r\n         * @param {Object} target\r\n         * @param {number} [time=500]\r\n         * @param {number} [delay=0]\r\n         *\r\n         * @example\r\n         *  // Animate position\r\n         *  el._animateToShallow({\r\n         *      position: [10, 10]\r\n         *  })\r\n         *\r\n         *  // Animate shape, style and position in 100ms, delayed 100ms\r\n         *  el._animateToShallow({\r\n         *      shape: {\r\n         *          width: 500\r\n         *      },\r\n         *      style: {\r\n         *          fill: 'red'\r\n         *      }\r\n         *      position: [10, 10]\r\n         *  }, 100, 100)\r\n         */\r\n        _animateToShallow: function (path, source, target, time, delay) {\r\n            var objShallow = {};\r\n            var propertyCount = 0;\r\n            for (var name in target) {\r\n                if (source[name] != null) {\r\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\r\n                        this._animateToShallow(\r\n                            path ? path + '.' + name : name,\r\n                            source[name],\r\n                            target[name],\r\n                            time,\r\n                            delay\r\n                        );\r\n                    }\r\n                    else {\r\n                        objShallow[name] = target[name];\r\n                        propertyCount++;\r\n                    }\r\n                }\r\n                else if (target[name] != null) {\r\n                    // Attr directly if not has property\r\n                    // FIXME, if some property not needed for element ?\r\n                    if (!path) {\r\n                        this.attr(name, target[name]);\r\n                    }\r\n                    else {  // Shape or style\r\n                        var props = {};\r\n                        props[path] = {};\r\n                        props[path][name] = target[name];\r\n                        this.attr(props);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (propertyCount > 0) {\r\n                this.animate(path, false)\r\n                    .when(time == null ? 500 : time, objShallow)\r\n                    .delay(delay || 0);\r\n            }\r\n\r\n            return this;\r\n        }\r\n    };\r\n\r\n    module.exports = Animatable;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/mixin/Animatable.js\n ** module id = 557\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","/**\r\n * @module echarts/animation/Animator\r\n */\r\n\r\n\r\n    var Clip = require('./Clip');\r\n    var color = require('../tool/color');\r\n    var util = require('../core/util');\r\n    var isArrayLike = util.isArrayLike;\r\n\r\n    var arraySlice = Array.prototype.slice;\r\n\r\n    function defaultGetter(target, key) {\r\n        return target[key];\r\n    }\r\n\r\n    function defaultSetter(target, key, value) {\r\n        target[key] = value;\r\n    }\r\n\r\n    /**\r\n     * @param  {number} p0\r\n     * @param  {number} p1\r\n     * @param  {number} percent\r\n     * @return {number}\r\n     */\r\n    function interpolateNumber(p0, p1, percent) {\r\n        return (p1 - p0) * percent + p0;\r\n    }\r\n\r\n    /**\r\n     * @param  {string} p0\r\n     * @param  {string} p1\r\n     * @param  {number} percent\r\n     * @return {string}\r\n     */\r\n    function interpolateString(p0, p1, percent) {\r\n        return percent > 0.5 ? p1 : p0;\r\n    }\r\n\r\n    /**\r\n     * @param  {Array} p0\r\n     * @param  {Array} p1\r\n     * @param  {number} percent\r\n     * @param  {Array} out\r\n     * @param  {number} arrDim\r\n     */\r\n    function interpolateArray(p0, p1, percent, out, arrDim) {\r\n        var len = p0.length;\r\n        if (arrDim == 1) {\r\n            for (var i = 0; i < len; i++) {\r\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\r\n            }\r\n        }\r\n        else {\r\n            var len2 = p0[0].length;\r\n            for (var i = 0; i < len; i++) {\r\n                for (var j = 0; j < len2; j++) {\r\n                    out[i][j] = interpolateNumber(\r\n                        p0[i][j], p1[i][j], percent\r\n                    );\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // arr0 is source array, arr1 is target array.\r\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\r\n    function fillArr(arr0, arr1, arrDim) {\r\n        var arr0Len = arr0.length;\r\n        var arr1Len = arr1.length;\r\n        if (arr0Len !== arr1Len) {\r\n            // FIXME Not work for TypedArray\r\n            var isPreviousLarger = arr0Len > arr1Len;\r\n            if (isPreviousLarger) {\r\n                // Cut the previous\r\n                arr0.length = arr1Len;\r\n            }\r\n            else {\r\n                // Fill the previous\r\n                for (var i = arr0Len; i < arr1Len; i++) {\r\n                    arr0.push(\r\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\r\n                    );\r\n                }\r\n            }\r\n        }\r\n        // Handling NaN value\r\n        var len2 = arr0[0] && arr0[0].length;\r\n        for (var i = 0; i < arr0.length; i++) {\r\n            if (arrDim === 1) {\r\n                if (isNaN(arr0[i])) {\r\n                    arr0[i] = arr1[i];\r\n                }\r\n            }\r\n            else {\r\n                for (var j = 0; j < len2; j++) {\r\n                    if (isNaN(arr0[i][j])) {\r\n                        arr0[i][j] = arr1[i][j];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param  {Array} arr0\r\n     * @param  {Array} arr1\r\n     * @param  {number} arrDim\r\n     * @return {boolean}\r\n     */\r\n    function isArraySame(arr0, arr1, arrDim) {\r\n        if (arr0 === arr1) {\r\n            return true;\r\n        }\r\n        var len = arr0.length;\r\n        if (len !== arr1.length) {\r\n            return false;\r\n        }\r\n        if (arrDim === 1) {\r\n            for (var i = 0; i < len; i++) {\r\n                if (arr0[i] !== arr1[i]) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var len2 = arr0[0].length;\r\n            for (var i = 0; i < len; i++) {\r\n                for (var j = 0; j < len2; j++) {\r\n                    if (arr0[i][j] !== arr1[i][j]) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Catmull Rom interpolate array\r\n     * @param  {Array} p0\r\n     * @param  {Array} p1\r\n     * @param  {Array} p2\r\n     * @param  {Array} p3\r\n     * @param  {number} t\r\n     * @param  {number} t2\r\n     * @param  {number} t3\r\n     * @param  {Array} out\r\n     * @param  {number} arrDim\r\n     */\r\n    function catmullRomInterpolateArray(\r\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\r\n    ) {\r\n        var len = p0.length;\r\n        if (arrDim == 1) {\r\n            for (var i = 0; i < len; i++) {\r\n                out[i] = catmullRomInterpolate(\r\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\r\n                );\r\n            }\r\n        }\r\n        else {\r\n            var len2 = p0[0].length;\r\n            for (var i = 0; i < len; i++) {\r\n                for (var j = 0; j < len2; j++) {\r\n                    out[i][j] = catmullRomInterpolate(\r\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\r\n                        t, t2, t3\r\n                    );\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Catmull Rom interpolate number\r\n     * @param  {number} p0\r\n     * @param  {number} p1\r\n     * @param  {number} p2\r\n     * @param  {number} p3\r\n     * @param  {number} t\r\n     * @param  {number} t2\r\n     * @param  {number} t3\r\n     * @return {number}\r\n     */\r\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\r\n        var v0 = (p2 - p0) * 0.5;\r\n        var v1 = (p3 - p1) * 0.5;\r\n        return (2 * (p1 - p2) + v0 + v1) * t3\r\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\r\n                + v0 * t + p1;\r\n    }\r\n\r\n    function cloneValue(value) {\r\n        if (isArrayLike(value)) {\r\n            var len = value.length;\r\n            if (isArrayLike(value[0])) {\r\n                var ret = [];\r\n                for (var i = 0; i < len; i++) {\r\n                    ret.push(arraySlice.call(value[i]));\r\n                }\r\n                return ret;\r\n            }\r\n\r\n            return arraySlice.call(value);\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    function rgba2String(rgba) {\r\n        rgba[0] = Math.floor(rgba[0]);\r\n        rgba[1] = Math.floor(rgba[1]);\r\n        rgba[2] = Math.floor(rgba[2]);\r\n\r\n        return 'rgba(' + rgba.join(',') + ')';\r\n    }\r\n\r\n    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {\r\n        var getter = animator._getter;\r\n        var setter = animator._setter;\r\n        var useSpline = easing === 'spline';\r\n\r\n        var trackLen = keyframes.length;\r\n        if (!trackLen) {\r\n            return;\r\n        }\r\n        // Guess data type\r\n        var firstVal = keyframes[0].value;\r\n        var isValueArray = isArrayLike(firstVal);\r\n        var isValueColor = false;\r\n        var isValueString = false;\r\n\r\n        // For vertices morphing\r\n        var arrDim = (\r\n                isValueArray\r\n                && isArrayLike(firstVal[0])\r\n            )\r\n            ? 2 : 1;\r\n        var trackMaxTime;\r\n        // Sort keyframe as ascending\r\n        keyframes.sort(function(a, b) {\r\n            return a.time - b.time;\r\n        });\r\n\r\n        trackMaxTime = keyframes[trackLen - 1].time;\r\n        // Percents of each keyframe\r\n        var kfPercents = [];\r\n        // Value of each keyframe\r\n        var kfValues = [];\r\n        var prevValue = keyframes[0].value;\r\n        var isAllValueEqual = true;\r\n        for (var i = 0; i < trackLen; i++) {\r\n            kfPercents.push(keyframes[i].time / trackMaxTime);\r\n            // Assume value is a color when it is a string\r\n            var value = keyframes[i].value;\r\n\r\n            // Check if value is equal, deep check if value is array\r\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\r\n                || (!isValueArray && value === prevValue))) {\r\n                isAllValueEqual = false;\r\n            }\r\n            prevValue = value;\r\n\r\n            // Try converting a string to a color array\r\n            if (typeof value == 'string') {\r\n                var colorArray = color.parse(value);\r\n                if (colorArray) {\r\n                    value = colorArray;\r\n                    isValueColor = true;\r\n                }\r\n                else {\r\n                    isValueString = true;\r\n                }\r\n            }\r\n            kfValues.push(value);\r\n        }\r\n        if (isAllValueEqual) {\r\n            return;\r\n        }\r\n\r\n        var lastValue = kfValues[trackLen - 1];\r\n        // Polyfill array and NaN value\r\n        for (var i = 0; i < trackLen - 1; i++) {\r\n            if (isValueArray) {\r\n                fillArr(kfValues[i], lastValue, arrDim);\r\n            }\r\n            else {\r\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\r\n                    kfValues[i] = lastValue;\r\n                }\r\n            }\r\n        }\r\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\r\n\r\n        // Cache the key of last frame to speed up when\r\n        // animation playback is sequency\r\n        var lastFrame = 0;\r\n        var lastFramePercent = 0;\r\n        var start;\r\n        var w;\r\n        var p0;\r\n        var p1;\r\n        var p2;\r\n        var p3;\r\n\r\n        if (isValueColor) {\r\n            var rgba = [0, 0, 0, 0];\r\n        }\r\n\r\n        var onframe = function (target, percent) {\r\n            // Find the range keyframes\r\n            // kf1-----kf2---------current--------kf3\r\n            // find kf2 and kf3 and do interpolation\r\n            var frame;\r\n            if (percent < lastFramePercent) {\r\n                // Start from next key\r\n                // PENDING start from lastFrame ?\r\n                start = Math.min(lastFrame + 1, trackLen - 1);\r\n                for (frame = start; frame >= 0; frame--) {\r\n                    if (kfPercents[frame] <= percent) {\r\n                        break;\r\n                    }\r\n                }\r\n                // PENDING really need to do this ?\r\n                frame = Math.min(frame, trackLen - 2);\r\n            }\r\n            else {\r\n                for (frame = lastFrame; frame < trackLen; frame++) {\r\n                    if (kfPercents[frame] > percent) {\r\n                        break;\r\n                    }\r\n                }\r\n                frame = Math.min(frame - 1, trackLen - 2);\r\n            }\r\n            lastFrame = frame;\r\n            lastFramePercent = percent;\r\n\r\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\r\n            if (range === 0) {\r\n                return;\r\n            }\r\n            else {\r\n                w = (percent - kfPercents[frame]) / range;\r\n            }\r\n            if (useSpline) {\r\n                p1 = kfValues[frame];\r\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\r\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\r\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\r\n                if (isValueArray) {\r\n                    catmullRomInterpolateArray(\r\n                        p0, p1, p2, p3, w, w * w, w * w * w,\r\n                        getter(target, propName),\r\n                        arrDim\r\n                    );\r\n                }\r\n                else {\r\n                    var value;\r\n                    if (isValueColor) {\r\n                        value = catmullRomInterpolateArray(\r\n                            p0, p1, p2, p3, w, w * w, w * w * w,\r\n                            rgba, 1\r\n                        );\r\n                        value = rgba2String(rgba);\r\n                    }\r\n                    else if (isValueString) {\r\n                        // String is step(0.5)\r\n                        return interpolateString(p1, p2, w);\r\n                    }\r\n                    else {\r\n                        value = catmullRomInterpolate(\r\n                            p0, p1, p2, p3, w, w * w, w * w * w\r\n                        );\r\n                    }\r\n                    setter(\r\n                        target,\r\n                        propName,\r\n                        value\r\n                    );\r\n                }\r\n            }\r\n            else {\r\n                if (isValueArray) {\r\n                    interpolateArray(\r\n                        kfValues[frame], kfValues[frame + 1], w,\r\n                        getter(target, propName),\r\n                        arrDim\r\n                    );\r\n                }\r\n                else {\r\n                    var value;\r\n                    if (isValueColor) {\r\n                        interpolateArray(\r\n                            kfValues[frame], kfValues[frame + 1], w,\r\n                            rgba, 1\r\n                        );\r\n                        value = rgba2String(rgba);\r\n                    }\r\n                    else if (isValueString) {\r\n                        // String is step(0.5)\r\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\r\n                    }\r\n                    else {\r\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\r\n                    }\r\n                    setter(\r\n                        target,\r\n                        propName,\r\n                        value\r\n                    );\r\n                }\r\n            }\r\n        };\r\n\r\n        var clip = new Clip({\r\n            target: animator._target,\r\n            life: trackMaxTime,\r\n            loop: animator._loop,\r\n            delay: animator._delay,\r\n            onframe: onframe,\r\n            ondestroy: oneTrackDone\r\n        });\r\n\r\n        if (easing && easing !== 'spline') {\r\n            clip.easing = easing;\r\n        }\r\n\r\n        return clip;\r\n    }\r\n\r\n    /**\r\n     * @alias module:zrender/animation/Animator\r\n     * @constructor\r\n     * @param {Object} target\r\n     * @param {boolean} loop\r\n     * @param {Function} getter\r\n     * @param {Function} setter\r\n     */\r\n    var Animator = function(target, loop, getter, setter) {\r\n        this._tracks = {};\r\n        this._target = target;\r\n\r\n        this._loop = loop || false;\r\n\r\n        this._getter = getter || defaultGetter;\r\n        this._setter = setter || defaultSetter;\r\n\r\n        this._clipCount = 0;\r\n\r\n        this._delay = 0;\r\n\r\n        this._doneList = [];\r\n\r\n        this._onframeList = [];\r\n\r\n        this._clipList = [];\r\n    };\r\n\r\n    Animator.prototype = {\r\n        /**\r\n         * 设置动画关键帧\r\n         * @param  {number} time 关键帧时间，单位是ms\r\n         * @param  {Object} props 关键帧的属性值，key-value表示\r\n         * @return {module:zrender/animation/Animator}\r\n         */\r\n        when: function(time /* ms */, props) {\r\n            var tracks = this._tracks;\r\n            for (var propName in props) {\r\n                if (!tracks[propName]) {\r\n                    tracks[propName] = [];\r\n                    // Invalid value\r\n                    var value = this._getter(this._target, propName);\r\n                    if (value == null) {\r\n                        // zrLog('Invalid property ' + propName);\r\n                        continue;\r\n                    }\r\n                    // If time is 0\r\n                    //  Then props is given initialize value\r\n                    // Else\r\n                    //  Initialize value from current prop value\r\n                    if (time !== 0) {\r\n                        tracks[propName].push({\r\n                            time: 0,\r\n                            value: cloneValue(value)\r\n                        });\r\n                    }\r\n                }\r\n                tracks[propName].push({\r\n                    time: time,\r\n                    value: props[propName]\r\n                });\r\n            }\r\n            return this;\r\n        },\r\n        /**\r\n         * 添加动画每一帧的回调函数\r\n         * @param  {Function} callback\r\n         * @return {module:zrender/animation/Animator}\r\n         */\r\n        during: function (callback) {\r\n            this._onframeList.push(callback);\r\n            return this;\r\n        },\r\n\r\n        _doneCallback: function () {\r\n            // Clear all tracks\r\n            this._tracks = {};\r\n            // Clear all clips\r\n            this._clipList.length = 0;\r\n\r\n            var doneList = this._doneList;\r\n            var len = doneList.length;\r\n            for (var i = 0; i < len; i++) {\r\n                doneList[i].call(this);\r\n            }\r\n        },\r\n        /**\r\n         * 开始执行动画\r\n         * @param  {string|Function} easing\r\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\r\n         * @return {module:zrender/animation/Animator}\r\n         */\r\n        start: function (easing) {\r\n\r\n            var self = this;\r\n            var clipCount = 0;\r\n\r\n            var oneTrackDone = function() {\r\n                clipCount--;\r\n                if (!clipCount) {\r\n                    self._doneCallback();\r\n                }\r\n            };\r\n\r\n            var lastClip;\r\n            for (var propName in this._tracks) {\r\n                var clip = createTrackClip(\r\n                    this, easing, oneTrackDone,\r\n                    this._tracks[propName], propName\r\n                );\r\n                if (clip) {\r\n                    this._clipList.push(clip);\r\n                    clipCount++;\r\n\r\n                    // If start after added to animation\r\n                    if (this.animation) {\r\n                        this.animation.addClip(clip);\r\n                    }\r\n\r\n                    lastClip = clip;\r\n                }\r\n            }\r\n\r\n            // Add during callback on the last clip\r\n            if (lastClip) {\r\n                var oldOnFrame = lastClip.onframe;\r\n                lastClip.onframe = function (target, percent) {\r\n                    oldOnFrame(target, percent);\r\n\r\n                    for (var i = 0; i < self._onframeList.length; i++) {\r\n                        self._onframeList[i](target, percent);\r\n                    }\r\n                };\r\n            }\r\n\r\n            if (!clipCount) {\r\n                this._doneCallback();\r\n            }\r\n            return this;\r\n        },\r\n        /**\r\n         * 停止动画\r\n         * @param {boolean} forwardToLast If move to last frame before stop\r\n         */\r\n        stop: function (forwardToLast) {\r\n            var clipList = this._clipList;\r\n            var animation = this.animation;\r\n            for (var i = 0; i < clipList.length; i++) {\r\n                var clip = clipList[i];\r\n                if (forwardToLast) {\r\n                    // Move to last frame before stop\r\n                    clip.onframe(this._target, 1);\r\n                }\r\n                animation && animation.removeClip(clip);\r\n            }\r\n            clipList.length = 0;\r\n        },\r\n        /**\r\n         * 设置动画延迟开始的时间\r\n         * @param  {number} time 单位ms\r\n         * @return {module:zrender/animation/Animator}\r\n         */\r\n        delay: function (time) {\r\n            this._delay = time;\r\n            return this;\r\n        },\r\n        /**\r\n         * 添加动画结束的回调\r\n         * @param  {Function} cb\r\n         * @return {module:zrender/animation/Animator}\r\n         */\r\n        done: function(cb) {\r\n            if (cb) {\r\n                this._doneList.push(cb);\r\n            }\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @return {Array.<module:zrender/animation/Clip>}\r\n         */\r\n        getClips: function () {\r\n            return this._clipList;\r\n        }\r\n    };\r\n\r\n    module.exports = Animator;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/animation/Animator.js\n ** module id = 558\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","/**\r\n * 动画主控制器\r\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\r\n * @config life(1000) 动画时长\r\n * @config delay(0) 动画延迟时间\r\n * @config loop(true)\r\n * @config gap(0) 循环的间隔时间\r\n * @config onframe\r\n * @config easing(optional)\r\n * @config ondestroy(optional)\r\n * @config onrestart(optional)\r\n *\r\n * TODO pause\r\n */\r\n\r\n\r\n    var easingFuncs = require('./easing');\r\n\r\n    function Clip(options) {\r\n\r\n        this._target = options.target;\r\n\r\n        // 生命周期\r\n        this._life = options.life || 1000;\r\n        // 延时\r\n        this._delay = options.delay || 0;\r\n        // 开始时间\r\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\r\n        this._initialized = false;\r\n\r\n        // 是否循环\r\n        this.loop = options.loop == null ? false : options.loop;\r\n\r\n        this.gap = options.gap || 0;\r\n\r\n        this.easing = options.easing || 'Linear';\r\n\r\n        this.onframe = options.onframe;\r\n        this.ondestroy = options.ondestroy;\r\n        this.onrestart = options.onrestart;\r\n    }\r\n\r\n    Clip.prototype = {\r\n\r\n        constructor: Clip,\r\n\r\n        step: function (time) {\r\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\r\n            // PENDING\r\n            if (!this._initialized) {\r\n                this._startTime = new Date().getTime() + this._delay;\r\n                this._initialized = true;\r\n            }\r\n\r\n            var percent = (time - this._startTime) / this._life;\r\n\r\n            // 还没开始\r\n            if (percent < 0) {\r\n                return;\r\n            }\r\n\r\n            percent = Math.min(percent, 1);\r\n\r\n            var easing = this.easing;\r\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\r\n            var schedule = typeof easingFunc === 'function'\r\n                ? easingFunc(percent)\r\n                : percent;\r\n\r\n            this.fire('frame', schedule);\r\n\r\n            // 结束\r\n            if (percent == 1) {\r\n                if (this.loop) {\r\n                    this.restart();\r\n                    // 重新开始周期\r\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\r\n                    return 'restart';\r\n                }\r\n\r\n                // 动画完成将这个控制器标识为待删除\r\n                // 在Animation.update中进行批量删除\r\n                this._needsRemove = true;\r\n                return 'destroy';\r\n            }\r\n\r\n            return null;\r\n        },\r\n\r\n        restart: function() {\r\n            var time = new Date().getTime();\r\n            var remainder = (time - this._startTime) % this._life;\r\n            this._startTime = new Date().getTime() - remainder + this.gap;\r\n\r\n            this._needsRemove = false;\r\n        },\r\n\r\n        fire: function(eventType, arg) {\r\n            eventType = 'on' + eventType;\r\n            if (this[eventType]) {\r\n                this[eventType](this._target, arg);\r\n            }\r\n        }\r\n    };\r\n\r\n    module.exports = Clip;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/animation/Clip.js\n ** module id = 559\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","/**\r\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\r\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\r\n * @exports zrender/animation/easing\r\n */\r\n\r\n    var easing = {\r\n        /**\r\n        * @param {number} k\r\n        * @return {number}\r\n        */\r\n        linear: function (k) {\r\n            return k;\r\n        },\r\n\r\n        /**\r\n        * @param {number} k\r\n        * @return {number}\r\n        */\r\n        quadraticIn: function (k) {\r\n            return k * k;\r\n        },\r\n        /**\r\n        * @param {number} k\r\n        * @return {number}\r\n        */\r\n        quadraticOut: function (k) {\r\n            return k * (2 - k);\r\n        },\r\n        /**\r\n        * @param {number} k\r\n        * @return {number}\r\n        */\r\n        quadraticInOut: function (k) {\r\n            if ((k *= 2) < 1) {\r\n                return 0.5 * k * k;\r\n            }\r\n            return -0.5 * (--k * (k - 2) - 1);\r\n        },\r\n\r\n        // 三次方的缓动（t^3）\r\n        /**\r\n        * @param {number} k\r\n        * @return {number}\r\n        */\r\n        cubicIn: function (k) {\r\n            return k * k * k;\r\n        },\r\n        /**\r\n        * @param {number} k\r\n        * @return {number}\r\n        */\r\n        cubicOut: function (k) {\r\n            return --k * k * k + 1;\r\n        },\r\n        /**\r\n        * @param {number} k\r\n        * @return {number}\r\n        */\r\n        cubicInOut: function (k) {\r\n            if ((k *= 2) < 1) {\r\n                return 0.5 * k * k * k;\r\n            }\r\n            return 0.5 * ((k -= 2) * k * k + 2);\r\n        },\r\n\r\n        // 四次方的缓动（t^4）\r\n        /**\r\n        * @param {number} k\r\n        * @return {number}\r\n        */\r\n        quarticIn: function (k) {\r\n            return k * k * k * k;\r\n        },\r\n        /**\r\n        * @param {number} k\r\n        * @return {number}\r\n        */\r\n        quarticOut: function (k) {\r\n            return 1 - (--k * k * k * k);\r\n        },\r\n        /**\r\n        * @param {number} k\r\n        * @return {number}\r\n        */\r\n        quarticInOut: function (k) {\r\n            if ((k *= 2) < 1) {\r\n                return 0.5 * k * k * k * k;\r\n            }\r\n            return -0.5 * ((k -= 2) * k * k * k - 2);\r\n        },\r\n\r\n        // 五次方的缓动（t^5）\r\n        /**\r\n        * @param {number} k\r\n        * @return {number}\r\n        */\r\n        quinticIn: function (k) {\r\n            return k * k * k * k * k;\r\n        },\r\n        /**\r\n        * @param {number} k\r\n        * @return {number}\r\n        */\r\n        quinticOut: function (k) {\r\n            return --k * k * k * k * k + 1;\r\n        },\r\n        /**\r\n        * @param {number} k\r\n        * @return {number}\r\n        */\r\n        quinticInOut: function (k) {\r\n            if ((k *= 2) < 1) {\r\n                return 0.5 * k * k * k * k * k;\r\n            }\r\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\r\n        },\r\n\r\n        // 正弦曲线的缓动（sin(t)）\r\n        /**\r\n        * @param {number} k\r\n        * @return {number}\r\n        */\r\n        sinusoidalIn: function (k) {\r\n            return 1 - Math.cos(k * Math.PI / 2);\r\n        },\r\n        /**\r\n        * @param {number} k\r\n        * @return {number}\r\n        */\r\n        sinusoidalOut: function (k) {\r\n            return Math.sin(k * Math.PI / 2);\r\n        },\r\n        /**\r\n        * @param {number} k\r\n        * @return {number}\r\n        */\r\n        sinusoidalInOut: function (k) {\r\n            return 0.5 * (1 - Math.cos(Math.PI * k));\r\n        },\r\n\r\n        // 指数曲线的缓动（2^t）\r\n        /**\r\n        * @param {number} k\r\n        * @return {number}\r\n        */\r\n        exponentialIn: function (k) {\r\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\r\n        },\r\n        /**\r\n        * @param {number} k\r\n        * @return {number}\r\n        */\r\n        exponentialOut: function (k) {\r\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\r\n        },\r\n        /**\r\n        * @param {number} k\r\n        * @return {number}\r\n        */\r\n        exponentialInOut: function (k) {\r\n            if (k === 0) {\r\n                return 0;\r\n            }\r\n            if (k === 1) {\r\n                return 1;\r\n            }\r\n            if ((k *= 2) < 1) {\r\n                return 0.5 * Math.pow(1024, k - 1);\r\n            }\r\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\r\n        },\r\n\r\n        // 圆形曲线的缓动（sqrt(1-t^2)）\r\n        /**\r\n        * @param {number} k\r\n        * @return {number}\r\n        */\r\n        circularIn: function (k) {\r\n            return 1 - Math.sqrt(1 - k * k);\r\n        },\r\n        /**\r\n        * @param {number} k\r\n        * @return {number}\r\n        */\r\n        circularOut: function (k) {\r\n            return Math.sqrt(1 - (--k * k));\r\n        },\r\n        /**\r\n        * @param {number} k\r\n        * @return {number}\r\n        */\r\n        circularInOut: function (k) {\r\n            if ((k *= 2) < 1) {\r\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\r\n            }\r\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\r\n        },\r\n\r\n        // 创建类似于弹簧在停止前来回振荡的动画\r\n        /**\r\n        * @param {number} k\r\n        * @return {number}\r\n        */\r\n        elasticIn: function (k) {\r\n            var s;\r\n            var a = 0.1;\r\n            var p = 0.4;\r\n            if (k === 0) {\r\n                return 0;\r\n            }\r\n            if (k === 1) {\r\n                return 1;\r\n            }\r\n            if (!a || a < 1) {\r\n                a = 1; s = p / 4;\r\n            }\r\n            else {\r\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\r\n            }\r\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\r\n                        Math.sin((k - s) * (2 * Math.PI) / p));\r\n        },\r\n        /**\r\n        * @param {number} k\r\n        * @return {number}\r\n        */\r\n        elasticOut: function (k) {\r\n            var s;\r\n            var a = 0.1;\r\n            var p = 0.4;\r\n            if (k === 0) {\r\n                return 0;\r\n            }\r\n            if (k === 1) {\r\n                return 1;\r\n            }\r\n            if (!a || a < 1) {\r\n                a = 1; s = p / 4;\r\n            }\r\n            else {\r\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\r\n            }\r\n            return (a * Math.pow(2, -10 * k) *\r\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\r\n        },\r\n        /**\r\n        * @param {number} k\r\n        * @return {number}\r\n        */\r\n        elasticInOut: function (k) {\r\n            var s;\r\n            var a = 0.1;\r\n            var p = 0.4;\r\n            if (k === 0) {\r\n                return 0;\r\n            }\r\n            if (k === 1) {\r\n                return 1;\r\n            }\r\n            if (!a || a < 1) {\r\n                a = 1; s = p / 4;\r\n            }\r\n            else {\r\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\r\n            }\r\n            if ((k *= 2) < 1) {\r\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\r\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\r\n            }\r\n            return a * Math.pow(2, -10 * (k -= 1))\r\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\r\n\r\n        },\r\n\r\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\r\n        /**\r\n        * @param {number} k\r\n        * @return {number}\r\n        */\r\n        backIn: function (k) {\r\n            var s = 1.70158;\r\n            return k * k * ((s + 1) * k - s);\r\n        },\r\n        /**\r\n        * @param {number} k\r\n        * @return {number}\r\n        */\r\n        backOut: function (k) {\r\n            var s = 1.70158;\r\n            return --k * k * ((s + 1) * k + s) + 1;\r\n        },\r\n        /**\r\n        * @param {number} k\r\n        * @return {number}\r\n        */\r\n        backInOut: function (k) {\r\n            var s = 1.70158 * 1.525;\r\n            if ((k *= 2) < 1) {\r\n                return 0.5 * (k * k * ((s + 1) * k - s));\r\n            }\r\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\r\n        },\r\n\r\n        // 创建弹跳效果\r\n        /**\r\n        * @param {number} k\r\n        * @return {number}\r\n        */\r\n        bounceIn: function (k) {\r\n            return 1 - easing.bounceOut(1 - k);\r\n        },\r\n        /**\r\n        * @param {number} k\r\n        * @return {number}\r\n        */\r\n        bounceOut: function (k) {\r\n            if (k < (1 / 2.75)) {\r\n                return 7.5625 * k * k;\r\n            }\r\n            else if (k < (2 / 2.75)) {\r\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\r\n            }\r\n            else if (k < (2.5 / 2.75)) {\r\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\r\n            }\r\n            else {\r\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\r\n            }\r\n        },\r\n        /**\r\n        * @param {number} k\r\n        * @return {number}\r\n        */\r\n        bounceInOut: function (k) {\r\n            if (k < 0.5) {\r\n                return easing.bounceIn(k * 2) * 0.5;\r\n            }\r\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\r\n        }\r\n    };\r\n\r\n    module.exports = easing;\r\n\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/animation/easing.js\n ** module id = 560\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","/**\r\n * @module zrender/tool/color\r\n */\r\n\r\n\r\n    var kCSSColorTable = {\r\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\r\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\r\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\r\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\r\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\r\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\r\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\r\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\r\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\r\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\r\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\r\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\r\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\r\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\r\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\r\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\r\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\r\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\r\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\r\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\r\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\r\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\r\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\r\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\r\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\r\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\r\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\r\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\r\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\r\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\r\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\r\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\r\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\r\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\r\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\r\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\r\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\r\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\r\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\r\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\r\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\r\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\r\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\r\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\r\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\r\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\r\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\r\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\r\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\r\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\r\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\r\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\r\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\r\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\r\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\r\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\r\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\r\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\r\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\r\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\r\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\r\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\r\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\r\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\r\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\r\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\r\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\r\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\r\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\r\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\r\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\r\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\r\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\r\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\r\n    };\r\n\r\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\r\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\r\n        return i < 0 ? 0 : i > 255 ? 255 : i;\r\n    }\r\n\r\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\r\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\r\n        return i < 0 ? 0 : i > 360 ? 360 : i;\r\n    }\r\n\r\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\r\n        return f < 0 ? 0 : f > 1 ? 1 : f;\r\n    }\r\n\r\n    function parseCssInt(str) {  // int or percentage.\r\n        if (str.length && str.charAt(str.length - 1) === '%') {\r\n            return clampCssByte(parseFloat(str) / 100 * 255);\r\n        }\r\n        return clampCssByte(parseInt(str, 10));\r\n    }\r\n\r\n    function parseCssFloat(str) {  // float or percentage.\r\n        if (str.length && str.charAt(str.length - 1) === '%') {\r\n            return clampCssFloat(parseFloat(str) / 100);\r\n        }\r\n        return clampCssFloat(parseFloat(str));\r\n    }\r\n\r\n    function cssHueToRgb(m1, m2, h) {\r\n        if (h < 0) {\r\n            h += 1;\r\n        }\r\n        else if (h > 1) {\r\n            h -= 1;\r\n        }\r\n\r\n        if (h * 6 < 1) {\r\n            return m1 + (m2 - m1) * h * 6;\r\n        }\r\n        if (h * 2 < 1) {\r\n            return m2;\r\n        }\r\n        if (h * 3 < 2) {\r\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\r\n        }\r\n        return m1;\r\n    }\r\n\r\n    function lerp(a, b, p) {\r\n        return a + (b - a) * p;\r\n    }\r\n\r\n    /**\r\n     * @param {string} colorStr\r\n     * @return {Array.<number>}\r\n     * @memberOf module:zrender/util/color\r\n     */\r\n    function parse(colorStr) {\r\n        if (!colorStr) {\r\n            return;\r\n        }\r\n        // colorStr may be not string\r\n        colorStr = colorStr + '';\r\n        // Remove all whitespace, not compliant, but should just be more accepting.\r\n        var str = colorStr.replace(/ /g, '').toLowerCase();\r\n\r\n        // Color keywords (and transparent) lookup.\r\n        if (str in kCSSColorTable) {\r\n            return kCSSColorTable[str].slice();  // dup.\r\n        }\r\n\r\n        // #abc and #abc123 syntax.\r\n        if (str.charAt(0) === '#') {\r\n            if (str.length === 4) {\r\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\r\n                if (!(iv >= 0 && iv <= 0xfff)) {\r\n                    return;  // Covers NaN.\r\n                }\r\n                return [\r\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\r\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\r\n                    (iv & 0xf) | ((iv & 0xf) << 4),\r\n                    1\r\n                ];\r\n            }\r\n            else if (str.length === 7) {\r\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\r\n                if (!(iv >= 0 && iv <= 0xffffff)) {\r\n                    return;  // Covers NaN.\r\n                }\r\n                return [\r\n                    (iv & 0xff0000) >> 16,\r\n                    (iv & 0xff00) >> 8,\r\n                    iv & 0xff,\r\n                    1\r\n                ];\r\n            }\r\n\r\n            return;\r\n        }\r\n        var op = str.indexOf('('), ep = str.indexOf(')');\r\n        if (op !== -1 && ep + 1 === str.length) {\r\n            var fname = str.substr(0, op);\r\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\r\n            var alpha = 1;  // To allow case fallthrough.\r\n            switch (fname) {\r\n                case 'rgba':\r\n                    if (params.length !== 4) {\r\n                        return;\r\n                    }\r\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\r\n                // Fall through.\r\n                case 'rgb':\r\n                    if (params.length !== 3) {\r\n                        return;\r\n                    }\r\n                    return [\r\n                        parseCssInt(params[0]),\r\n                        parseCssInt(params[1]),\r\n                        parseCssInt(params[2]),\r\n                        alpha\r\n                    ];\r\n                case 'hsla':\r\n                    if (params.length !== 4) {\r\n                        return;\r\n                    }\r\n                    params[3] = parseCssFloat(params[3]);\r\n                    return hsla2rgba(params);\r\n                case 'hsl':\r\n                    if (params.length !== 3) {\r\n                        return;\r\n                    }\r\n                    return hsla2rgba(params);\r\n                default:\r\n                    return;\r\n            }\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * @param {Array.<number>} hsla\r\n     * @return {Array.<number>} rgba\r\n     */\r\n    function hsla2rgba(hsla) {\r\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\r\n        // NOTE(deanm): According to the CSS spec s/l should only be\r\n        // percentages, but we don't bother and let float or percentage.\r\n        var s = parseCssFloat(hsla[1]);\r\n        var l = parseCssFloat(hsla[2]);\r\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\r\n        var m1 = l * 2 - m2;\r\n\r\n        var rgba = [\r\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\r\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\r\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255)\r\n        ];\r\n\r\n        if (hsla.length === 4) {\r\n            rgba[3] = hsla[3];\r\n        }\r\n\r\n        return rgba;\r\n    }\r\n\r\n    /**\r\n     * @param {Array.<number>} rgba\r\n     * @return {Array.<number>} hsla\r\n     */\r\n    function rgba2hsla(rgba) {\r\n        if (!rgba) {\r\n            return;\r\n        }\r\n\r\n        // RGB from 0 to 255\r\n        var R = rgba[0] / 255;\r\n        var G = rgba[1] / 255;\r\n        var B = rgba[2] / 255;\r\n\r\n        var vMin = Math.min(R, G, B); // Min. value of RGB\r\n        var vMax = Math.max(R, G, B); // Max. value of RGB\r\n        var delta = vMax - vMin; // Delta RGB value\r\n\r\n        var L = (vMax + vMin) / 2;\r\n        var H;\r\n        var S;\r\n        // HSL results from 0 to 1\r\n        if (delta === 0) {\r\n            H = 0;\r\n            S = 0;\r\n        }\r\n        else {\r\n            if (L < 0.5) {\r\n                S = delta / (vMax + vMin);\r\n            }\r\n            else {\r\n                S = delta / (2 - vMax - vMin);\r\n            }\r\n\r\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\r\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\r\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\r\n\r\n            if (R === vMax) {\r\n                H = deltaB - deltaG;\r\n            }\r\n            else if (G === vMax) {\r\n                H = (1 / 3) + deltaR - deltaB;\r\n            }\r\n            else if (B === vMax) {\r\n                H = (2 / 3) + deltaG - deltaR;\r\n            }\r\n\r\n            if (H < 0) {\r\n                H += 1;\r\n            }\r\n\r\n            if (H > 1) {\r\n                H -= 1;\r\n            }\r\n        }\r\n\r\n        var hsla = [H * 360, S, L];\r\n\r\n        if (rgba[3] != null) {\r\n            hsla.push(rgba[3]);\r\n        }\r\n\r\n        return hsla;\r\n    }\r\n\r\n    /**\r\n     * @param {string} color\r\n     * @param {number} level\r\n     * @return {string}\r\n     * @memberOf module:zrender/util/color\r\n     */\r\n    function lift(color, level) {\r\n        var colorArr = parse(color);\r\n        if (colorArr) {\r\n            for (var i = 0; i < 3; i++) {\r\n                if (level < 0) {\r\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\r\n                }\r\n                else {\r\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\r\n                }\r\n            }\r\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {string} color\r\n     * @return {string}\r\n     * @memberOf module:zrender/util/color\r\n     */\r\n    function toHex(color, level) {\r\n        var colorArr = parse(color);\r\n        if (colorArr) {\r\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array\r\n     * @param {number} normalizedValue A float between 0 and 1.\r\n     * @param {Array.<Array.<number>>} colors List of rgba color array\r\n     * @param {Array.<number>} [out] Mapped gba color array\r\n     * @return {Array.<number>}\r\n     */\r\n    function fastMapToColor(normalizedValue, colors, out) {\r\n        if (!(colors && colors.length)\r\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\r\n        ) {\r\n            return;\r\n        }\r\n        out = out || [0, 0, 0, 0];\r\n        var value = normalizedValue * (colors.length - 1);\r\n        var leftIndex = Math.floor(value);\r\n        var rightIndex = Math.ceil(value);\r\n        var leftColor = colors[leftIndex];\r\n        var rightColor = colors[rightIndex];\r\n        var dv = value - leftIndex;\r\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\r\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\r\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\r\n        out[3] = clampCssByte(lerp(leftColor[3], rightColor[3], dv));\r\n        return out;\r\n    }\r\n    /**\r\n     * @param {number} normalizedValue A float between 0 and 1.\r\n     * @param {Array.<string>} colors Color list.\r\n     * @param {boolean=} fullOutput Default false.\r\n     * @return {(string|Object)} Result color. If fullOutput,\r\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\r\n     * @memberOf module:zrender/util/color\r\n     */\r\n    function mapToColor(normalizedValue, colors, fullOutput) {\r\n        if (!(colors && colors.length)\r\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        var value = normalizedValue * (colors.length - 1);\r\n        var leftIndex = Math.floor(value);\r\n        var rightIndex = Math.ceil(value);\r\n        var leftColor = parse(colors[leftIndex]);\r\n        var rightColor = parse(colors[rightIndex]);\r\n        var dv = value - leftIndex;\r\n\r\n        var color = stringify(\r\n            [\r\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\r\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\r\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\r\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\r\n            ],\r\n            'rgba'\r\n        );\r\n\r\n        return fullOutput\r\n            ? {\r\n                color: color,\r\n                leftIndex: leftIndex,\r\n                rightIndex: rightIndex,\r\n                value: value\r\n            }\r\n            : color;\r\n    }\r\n\r\n    /**\r\n     * @param {string} color\r\n     * @param {number=} h 0 ~ 360, ignore when null.\r\n     * @param {number=} s 0 ~ 1, ignore when null.\r\n     * @param {number=} l 0 ~ 1, ignore when null.\r\n     * @return {string} Color string in rgba format.\r\n     * @memberOf module:zrender/util/color\r\n     */\r\n    function modifyHSL(color, h, s, l) {\r\n        color = parse(color);\r\n\r\n        if (color) {\r\n            color = rgba2hsla(color);\r\n            h != null && (color[0] = clampCssAngle(h));\r\n            s != null && (color[1] = parseCssFloat(s));\r\n            l != null && (color[2] = parseCssFloat(l));\r\n\r\n            return stringify(hsla2rgba(color), 'rgba');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {string} color\r\n     * @param {number=} alpha 0 ~ 1\r\n     * @return {string} Color string in rgba format.\r\n     * @memberOf module:zrender/util/color\r\n     */\r\n    function modifyAlpha(color, alpha) {\r\n        color = parse(color);\r\n\r\n        if (color && alpha != null) {\r\n            color[3] = clampCssFloat(alpha);\r\n            return stringify(color, 'rgba');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {Array.<string>} colors Color list.\r\n     * @param {string} type 'rgba', 'hsva', ...\r\n     * @return {string} Result color.\r\n     */\r\n    function stringify(arrColor, type) {\r\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\r\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\r\n            colorStr += ',' + arrColor[3];\r\n        }\r\n        return type + '(' + colorStr + ')';\r\n    }\r\n\r\n    module.exports = {\r\n        parse: parse,\r\n        lift: lift,\r\n        toHex: toHex,\r\n        fastMapToColor: fastMapToColor,\r\n        mapToColor: mapToColor,\r\n        modifyHSL: modifyHSL,\r\n        modifyAlpha: modifyAlpha,\r\n        stringify: stringify\r\n    };\r\n\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/tool/color.js\n ** module id = 561\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","\r\n        var config = require('../config');\r\n\r\n        /**\r\n         * @exports zrender/tool/log\r\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n         */\r\n        module.exports = function() {\r\n            if (config.debugMode === 0) {\r\n                return;\r\n            }\r\n            else if (config.debugMode == 1) {\r\n                for (var k in arguments) {\r\n                    throw new Error(arguments[k]);\r\n                }\r\n            }\r\n            else if (config.debugMode > 1) {\r\n                for (var k in arguments) {\r\n                    console.log(arguments[k]);\r\n                }\r\n            }\r\n        };\r\n\r\n        /* for debug\r\n        return function(mes) {\r\n            document.getElementById('wrong-message').innerHTML =\r\n                mes + ' ' + (new Date() - 0)\r\n                + '<br/>' \r\n                + document.getElementById('wrong-message').innerHTML;\r\n        };\r\n        */\r\n    \r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/core/log.js\n ** module id = 562\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","\r\n    var dpr = 1;\r\n    // If in browser environment\r\n    if (typeof window !== 'undefined') {\r\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\r\n    }\r\n    /**\r\n     * config默认配置项\r\n     * @exports zrender/config\r\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n     */\r\n    var config = {\r\n        /**\r\n         * debug日志选项：catchBrushException为true下有效\r\n         * 0 : 不生成debug数据，发布用\r\n         * 1 : 异常抛出，调试用\r\n         * 2 : 控制台输出，调试用\r\n         */\r\n        debugMode: 0,\r\n\r\n        // retina 屏幕优化\r\n        devicePixelRatio: dpr\r\n    };\r\n    module.exports = config;\r\n\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/config.js\n ** module id = 563\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","\r\n\r\n    var Group = require('zrender/lib/container/Group');\r\n    var componentUtil = require('../util/component');\r\n    var clazzUtil = require('../util/clazz');\r\n\r\n    function Chart() {\r\n\r\n        /**\r\n         * @type {module:zrender/container/Group}\r\n         * @readOnly\r\n         */\r\n        this.group = new Group();\r\n\r\n        /**\r\n         * @type {string}\r\n         * @readOnly\r\n         */\r\n        this.uid = componentUtil.getUID('viewChart');\r\n    }\r\n\r\n    Chart.prototype = {\r\n\r\n        type: 'chart',\r\n\r\n        /**\r\n         * Init the chart\r\n         * @param  {module:echarts/model/Global} ecModel\r\n         * @param  {module:echarts/ExtensionAPI} api\r\n         */\r\n        init: function (ecModel, api) {},\r\n\r\n        /**\r\n         * Render the chart\r\n         * @param  {module:echarts/model/Series} seriesModel\r\n         * @param  {module:echarts/model/Global} ecModel\r\n         * @param  {module:echarts/ExtensionAPI} api\r\n         * @param  {Object} payload\r\n         */\r\n        render: function (seriesModel, ecModel, api, payload) {},\r\n\r\n        /**\r\n         * Highlight series or specified data item\r\n         * @param  {module:echarts/model/Series} seriesModel\r\n         * @param  {module:echarts/model/Global} ecModel\r\n         * @param  {module:echarts/ExtensionAPI} api\r\n         * @param  {Object} payload\r\n         */\r\n        highlight: function (seriesModel, ecModel, api, payload) {\r\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\r\n        },\r\n\r\n        /**\r\n         * Downplay series or specified data item\r\n         * @param  {module:echarts/model/Series} seriesModel\r\n         * @param  {module:echarts/model/Global} ecModel\r\n         * @param  {module:echarts/ExtensionAPI} api\r\n         * @param  {Object} payload\r\n         */\r\n        downplay: function (seriesModel, ecModel, api, payload) {\r\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\r\n        },\r\n\r\n        /**\r\n         * Remove self\r\n         * @param  {module:echarts/model/Global} ecModel\r\n         * @param  {module:echarts/ExtensionAPI} api\r\n         */\r\n        remove: function (ecModel, api) {\r\n            this.group.removeAll();\r\n        },\r\n\r\n        /**\r\n         * Dispose self\r\n         * @param  {module:echarts/model/Global} ecModel\r\n         * @param  {module:echarts/ExtensionAPI} api\r\n         */\r\n        dispose: function () {}\r\n    };\r\n\r\n    var chartProto = Chart.prototype;\r\n    chartProto.updateView\r\n        = chartProto.updateLayout\r\n        = chartProto.updateVisual\r\n        = function (seriesModel, ecModel, api, payload) {\r\n            this.render(seriesModel, ecModel, api, payload);\r\n        };\r\n\r\n    /**\r\n     * Set state of single element\r\n     * @param  {module:zrender/Element} el\r\n     * @param  {string} state\r\n     */\r\n    function elSetState(el, state) {\r\n        if (el) {\r\n            el.trigger(state);\r\n            if (el.type === 'group') {\r\n                for (var i = 0; i < el.childCount(); i++) {\r\n                    elSetState(el.childAt(i), state);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param  {module:echarts/data/List} data\r\n     * @param  {Object} payload\r\n     * @param  {string} state 'normal'|'emphasis'\r\n     * @inner\r\n     */\r\n    function toggleHighlight(data, payload, state) {\r\n        var dataIndex = payload && payload.dataIndex;\r\n        var name = payload && payload.name;\r\n\r\n        if (dataIndex != null) {\r\n            var dataIndices = dataIndex instanceof Array ? dataIndex : [dataIndex];\r\n            for (var i = 0, len = dataIndices.length; i < len; i++) {\r\n                elSetState(data.getItemGraphicEl(dataIndices[i]), state);\r\n            }\r\n        }\r\n        else if (name) {\r\n            var names = name instanceof Array ? name : [name];\r\n            for (var i = 0, len = names.length; i < len; i++) {\r\n                var dataIndex = data.indexOfName(names[i]);\r\n                elSetState(data.getItemGraphicEl(dataIndex), state);\r\n            }\r\n        }\r\n        else {\r\n            data.eachItemGraphicEl(function (el) {\r\n                elSetState(el, state);\r\n            });\r\n        }\r\n    }\r\n\r\n    // Enable Chart.extend.\r\n    clazzUtil.enableClassExtend(Chart);\r\n\r\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\r\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\r\n\r\n    module.exports = Chart;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/view/Chart.js\n ** module id = 564\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","'use strict';\r\n\r\n\r\n    var zrUtil = require('zrender/lib/core/util');\r\n\r\n    var pathTool = require('zrender/lib/tool/path');\r\n    var round = Math.round;\r\n    var Path = require('zrender/lib/graphic/Path');\r\n    var colorTool = require('zrender/lib/tool/color');\r\n    var matrix = require('zrender/lib/core/matrix');\r\n    var vector = require('zrender/lib/core/vector');\r\n    var Gradient = require('zrender/lib/graphic/Gradient');\r\n\r\n    var graphic = {};\r\n\r\n    graphic.Group = require('zrender/lib/container/Group');\r\n\r\n    graphic.Image = require('zrender/lib/graphic/Image');\r\n\r\n    graphic.Text = require('zrender/lib/graphic/Text');\r\n\r\n    graphic.Circle = require('zrender/lib/graphic/shape/Circle');\r\n\r\n    graphic.Sector = require('zrender/lib/graphic/shape/Sector');\r\n\r\n    graphic.Ring = require('zrender/lib/graphic/shape/Ring');\r\n\r\n    graphic.Polygon = require('zrender/lib/graphic/shape/Polygon');\r\n\r\n    graphic.Polyline = require('zrender/lib/graphic/shape/Polyline');\r\n\r\n    graphic.Rect = require('zrender/lib/graphic/shape/Rect');\r\n\r\n    graphic.Line = require('zrender/lib/graphic/shape/Line');\r\n\r\n    graphic.BezierCurve = require('zrender/lib/graphic/shape/BezierCurve');\r\n\r\n    graphic.Arc = require('zrender/lib/graphic/shape/Arc');\r\n\r\n    graphic.CompoundPath = require('zrender/lib/graphic/CompoundPath');\r\n\r\n    graphic.LinearGradient = require('zrender/lib/graphic/LinearGradient');\r\n\r\n    graphic.RadialGradient = require('zrender/lib/graphic/RadialGradient');\r\n\r\n    graphic.BoundingRect = require('zrender/lib/core/BoundingRect');\r\n\r\n    /**\r\n     * Extend shape with parameters\r\n     */\r\n    graphic.extendShape = function (opts) {\r\n        return Path.extend(opts);\r\n    };\r\n\r\n    /**\r\n     * Extend path\r\n     */\r\n    graphic.extendPath = function (pathData, opts) {\r\n        return pathTool.extendFromString(pathData, opts);\r\n    };\r\n\r\n    /**\r\n     * Create a path element from path data string\r\n     * @param {string} pathData\r\n     * @param {Object} opts\r\n     * @param {module:zrender/core/BoundingRect} rect\r\n     * @param {string} [layout=cover] 'center' or 'cover'\r\n     */\r\n    graphic.makePath = function (pathData, opts, rect, layout) {\r\n        var path = pathTool.createFromString(pathData, opts);\r\n        var boundingRect = path.getBoundingRect();\r\n        if (rect) {\r\n            var aspect = boundingRect.width / boundingRect.height;\r\n\r\n            if (layout === 'center') {\r\n                // Set rect to center, keep width / height ratio.\r\n                var width = rect.height * aspect;\r\n                var height;\r\n                if (width <= rect.width) {\r\n                    height = rect.height;\r\n                }\r\n                else {\r\n                    width = rect.width;\r\n                    height = width / aspect;\r\n                }\r\n                var cx = rect.x + rect.width / 2;\r\n                var cy = rect.y + rect.height / 2;\r\n\r\n                rect.x = cx - width / 2;\r\n                rect.y = cy - height / 2;\r\n                rect.width = width;\r\n                rect.height = height;\r\n            }\r\n\r\n            this.resizePath(path, rect);\r\n        }\r\n        return path;\r\n    };\r\n\r\n    graphic.mergePath = pathTool.mergePath,\r\n\r\n    /**\r\n     * Resize a path to fit the rect\r\n     * @param {module:zrender/graphic/Path} path\r\n     * @param {Object} rect\r\n     */\r\n    graphic.resizePath = function (path, rect) {\r\n        if (!path.applyTransform) {\r\n            return;\r\n        }\r\n\r\n        var pathRect = path.getBoundingRect();\r\n\r\n        var m = pathRect.calculateTransform(rect);\r\n\r\n        path.applyTransform(m);\r\n    };\r\n\r\n    /**\r\n     * Sub pixel optimize line for canvas\r\n     *\r\n     * @param {Object} param\r\n     * @param {Object} [param.shape]\r\n     * @param {number} [param.shape.x1]\r\n     * @param {number} [param.shape.y1]\r\n     * @param {number} [param.shape.x2]\r\n     * @param {number} [param.shape.y2]\r\n     * @param {Object} [param.style]\r\n     * @param {number} [param.style.lineWidth]\r\n     * @return {Object} Modified param\r\n     */\r\n    graphic.subPixelOptimizeLine = function (param) {\r\n        var subPixelOptimize = graphic.subPixelOptimize;\r\n        var shape = param.shape;\r\n        var lineWidth = param.style.lineWidth;\r\n\r\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\r\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\r\n        }\r\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\r\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\r\n        }\r\n        return param;\r\n    };\r\n\r\n    /**\r\n     * Sub pixel optimize rect for canvas\r\n     *\r\n     * @param {Object} param\r\n     * @param {Object} [param.shape]\r\n     * @param {number} [param.shape.x]\r\n     * @param {number} [param.shape.y]\r\n     * @param {number} [param.shape.width]\r\n     * @param {number} [param.shape.height]\r\n     * @param {Object} [param.style]\r\n     * @param {number} [param.style.lineWidth]\r\n     * @return {Object} Modified param\r\n     */\r\n    graphic.subPixelOptimizeRect = function (param) {\r\n        var subPixelOptimize = graphic.subPixelOptimize;\r\n        var shape = param.shape;\r\n        var lineWidth = param.style.lineWidth;\r\n        var originX = shape.x;\r\n        var originY = shape.y;\r\n        var originWidth = shape.width;\r\n        var originHeight = shape.height;\r\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\r\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\r\n        shape.width = Math.max(\r\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\r\n            originWidth === 0 ? 0 : 1\r\n        );\r\n        shape.height = Math.max(\r\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\r\n            originHeight === 0 ? 0 : 1\r\n        );\r\n        return param;\r\n    };\r\n\r\n    /**\r\n     * Sub pixel optimize for canvas\r\n     *\r\n     * @param {number} position Coordinate, such as x, y\r\n     * @param {number} lineWidth Should be nonnegative integer.\r\n     * @param {boolean=} positiveOrNegative Default false (negative).\r\n     * @return {number} Optimized position.\r\n     */\r\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\r\n        // Assure that (position + lineWidth / 2) is near integer edge,\r\n        // otherwise line will be fuzzy in canvas.\r\n        var doubledPosition = round(position * 2);\r\n        return (doubledPosition + round(lineWidth)) % 2 === 0\r\n            ? doubledPosition / 2\r\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\r\n    };\r\n\r\n    function hasFillOrStroke(fillOrStroke) {\r\n        return fillOrStroke != null && fillOrStroke != 'none';\r\n    }\r\n\r\n    function liftColor(color) {\r\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    function cacheElementStl(el) {\r\n        if (el.__hoverStlDirty) {\r\n            var stroke = el.style.stroke;\r\n            var fill = el.style.fill;\r\n\r\n            // Create hoverStyle on mouseover\r\n            var hoverStyle = el.__hoverStl;\r\n            hoverStyle.fill = hoverStyle.fill\r\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\r\n            hoverStyle.stroke = hoverStyle.stroke\r\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\r\n\r\n            var normalStyle = {};\r\n            for (var name in hoverStyle) {\r\n                if (hoverStyle.hasOwnProperty(name)) {\r\n                    normalStyle[name] = el.style[name];\r\n                }\r\n            }\r\n\r\n            el.__normalStl = normalStyle;\r\n\r\n            el.__hoverStlDirty = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    function doSingleEnterHover(el) {\r\n        if (el.__isHover) {\r\n            return;\r\n        }\r\n\r\n        cacheElementStl(el);\r\n\r\n        if (el.useHoverLayer) {\r\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\r\n        }\r\n        else {\r\n            el.setStyle(el.__hoverStl);\r\n            el.z2 += 1;\r\n        }\r\n\r\n        el.__isHover = true;\r\n    }\r\n\r\n    /**\r\n     * @inner\r\n     */\r\n    function doSingleLeaveHover(el) {\r\n        if (!el.__isHover) {\r\n            return;\r\n        }\r\n\r\n        var normalStl = el.__normalStl;\r\n        if (el.useHoverLayer) {\r\n            el.__zr && el.__zr.removeHover(el);\r\n        }\r\n        else {\r\n            normalStl && el.setStyle(normalStl);\r\n            el.z2 -= 1;\r\n        }\r\n\r\n        el.__isHover = false;\r\n    }\r\n\r\n    /**\r\n     * @inner\r\n     */\r\n    function doEnterHover(el) {\r\n        el.type === 'group'\r\n            ? el.traverse(function (child) {\r\n                if (child.type !== 'group') {\r\n                    doSingleEnterHover(child);\r\n                }\r\n            })\r\n            : doSingleEnterHover(el);\r\n    }\r\n\r\n    function doLeaveHover(el) {\r\n        el.type === 'group'\r\n            ? el.traverse(function (child) {\r\n                if (child.type !== 'group') {\r\n                    doSingleLeaveHover(child);\r\n                }\r\n            })\r\n            : doSingleLeaveHover(el);\r\n    }\r\n\r\n    /**\r\n     * @inner\r\n     */\r\n    function setElementHoverStl(el, hoverStl) {\r\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\r\n        // Often used when item group has a label element and it's hoverStyle is different\r\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\r\n        el.__hoverStlDirty = true;\r\n\r\n        if (el.__isHover) {\r\n            cacheElementStl(el);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @inner\r\n     */\r\n    function onElementMouseOver() {\r\n        // Only if element is not in emphasis status\r\n        !this.__isEmphasis && doEnterHover(this);\r\n    }\r\n\r\n    /**\r\n     * @inner\r\n     */\r\n    function onElementMouseOut() {\r\n        // Only if element is not in emphasis status\r\n        !this.__isEmphasis && doLeaveHover(this);\r\n    }\r\n\r\n    /**\r\n     * @inner\r\n     */\r\n    function enterEmphasis() {\r\n        this.__isEmphasis = true;\r\n        doEnterHover(this);\r\n    }\r\n\r\n    /**\r\n     * @inner\r\n     */\r\n    function leaveEmphasis() {\r\n        this.__isEmphasis = false;\r\n        doLeaveHover(this);\r\n    }\r\n\r\n    /**\r\n     * Set hover style of element\r\n     * @param {module:zrender/Element} el\r\n     * @param {Object} [hoverStyle]\r\n     */\r\n    graphic.setHoverStyle = function (el, hoverStyle) {\r\n        el.type === 'group'\r\n            ? el.traverse(function (child) {\r\n                if (child.type !== 'group') {\r\n                    setElementHoverStl(child, hoverStyle);\r\n                }\r\n            })\r\n            : setElementHoverStl(el, hoverStyle);\r\n        // Remove previous bound handlers\r\n        el.on('mouseover', onElementMouseOver)\r\n          .on('mouseout', onElementMouseOut);\r\n\r\n        // Emphasis, normal can be triggered manually\r\n        el.on('emphasis', enterEmphasis)\r\n          .on('normal', leaveEmphasis);\r\n    };\r\n\r\n    /**\r\n     * Set text option in the style\r\n     * @param {Object} textStyle\r\n     * @param {module:echarts/model/Model} labelModel\r\n     * @param {string} color\r\n     */\r\n    graphic.setText = function (textStyle, labelModel, color) {\r\n        var labelPosition = labelModel.getShallow('position') || 'inside';\r\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\r\n        var textStyleModel = labelModel.getModel('textStyle');\r\n        zrUtil.extend(textStyle, {\r\n            textDistance: labelModel.getShallow('distance') || 5,\r\n            textFont: textStyleModel.getFont(),\r\n            textPosition: labelPosition,\r\n            textFill: textStyleModel.getTextColor() || labelColor\r\n        });\r\n    };\r\n\r\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\r\n        if (typeof dataIndex === 'function') {\r\n            cb = dataIndex;\r\n            dataIndex = null;\r\n        }\r\n        var animationEnabled = animatableModel\r\n            && (\r\n                animatableModel.ifEnableAnimation\r\n                ? animatableModel.ifEnableAnimation()\r\n                // Directly use animation property\r\n                : animatableModel.getShallow('animation')\r\n            );\r\n\r\n        if (animationEnabled) {\r\n            var postfix = isUpdate ? 'Update' : '';\r\n            var duration = animatableModel\r\n                && animatableModel.getShallow('animationDuration' + postfix);\r\n            var animationEasing = animatableModel\r\n                && animatableModel.getShallow('animationEasing' + postfix);\r\n            var animationDelay = animatableModel\r\n                && animatableModel.getShallow('animationDelay' + postfix);\r\n            if (typeof animationDelay === 'function') {\r\n                animationDelay = animationDelay(dataIndex);\r\n            }\r\n            duration > 0\r\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\r\n                : (el.attr(props), cb && cb());\r\n        }\r\n        else {\r\n            el.attr(props);\r\n            cb && cb();\r\n        }\r\n    }\r\n    /**\r\n     * Update graphic element properties with or without animation according to the configuration in series\r\n     * @param {module:zrender/Element} el\r\n     * @param {Object} props\r\n     * @param {module:echarts/model/Model} [animatableModel]\r\n     * @param {number} [dataIndex]\r\n     * @param {Function} [cb]\r\n     * @example\r\n     *     graphic.updateProps(el, {\r\n     *         position: [100, 100]\r\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\r\n     *     // Or\r\n     *     graphic.updateProps(el, {\r\n     *         position: [100, 100]\r\n     *     }, seriesModel, function () { console.log('Animation done!'); });\r\n     */\r\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\r\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\r\n    };\r\n\r\n    /**\r\n     * Init graphic element properties with or without animation according to the configuration in series\r\n     * @param {module:zrender/Element} el\r\n     * @param {Object} props\r\n     * @param {module:echarts/model/Model} [animatableModel]\r\n     * @param {number} [dataIndex]\r\n     * @param {Function} cb\r\n     */\r\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\r\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\r\n    };\r\n\r\n    /**\r\n     * Get transform matrix of target (param target),\r\n     * in coordinate of its ancestor (param ancestor)\r\n     *\r\n     * @param {module:zrender/mixin/Transformable} target\r\n     * @param {module:zrender/mixin/Transformable} [ancestor]\r\n     */\r\n    graphic.getTransform = function (target, ancestor) {\r\n        var mat = matrix.identity([]);\r\n\r\n        while (target && target !== ancestor) {\r\n            matrix.mul(mat, target.getLocalTransform(), mat);\r\n            target = target.parent;\r\n        }\r\n\r\n        return mat;\r\n    };\r\n\r\n    /**\r\n     * Apply transform to an vertex.\r\n     * @param {Array.<number>} vertex [x, y]\r\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\r\n     * @param {boolean=} invert Whether use invert matrix.\r\n     * @return {Array.<number>} [x, y]\r\n     */\r\n    graphic.applyTransform = function (vertex, transform, invert) {\r\n        if (invert) {\r\n            transform = matrix.invert([], transform);\r\n        }\r\n        return vector.applyTransform([], vertex, transform);\r\n    };\r\n\r\n    /**\r\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\r\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\r\n     * @param {boolean=} invert Whether use invert matrix.\r\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\r\n     */\r\n    graphic.transformDirection = function (direction, transform, invert) {\r\n\r\n        // Pick a base, ensure that transform result will not be (0, 0).\r\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\r\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\r\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\r\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\r\n\r\n        var vertex = [\r\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\r\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\r\n        ];\r\n\r\n        vertex = graphic.applyTransform(vertex, transform, invert);\r\n\r\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\r\n            ? (vertex[0] > 0 ? 'right' : 'left')\r\n            : (vertex[1] > 0 ? 'bottom' : 'top');\r\n    };\r\n\r\n    /**\r\n     * Apply group transition animation from g1 to g2\r\n     */\r\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\r\n        if (!g1 || !g2) {\r\n            return;\r\n        }\r\n\r\n        function getElMap(g) {\r\n            var elMap = {};\r\n            g.traverse(function (el) {\r\n                if (!el.isGroup && el.anid) {\r\n                    elMap[el.anid] = el;\r\n                }\r\n            });\r\n            return elMap;\r\n        }\r\n        function getAnimatableProps(el) {\r\n            var obj = {\r\n                position: vector.clone(el.position),\r\n                rotation: el.rotation\r\n            };\r\n            if (el.shape) {\r\n                obj.shape = zrUtil.extend({}, el.shape);\r\n            }\r\n            return obj;\r\n        }\r\n        var elMap1 = getElMap(g1);\r\n\r\n        g2.traverse(function (el) {\r\n            if (!el.isGroup && el.anid) {\r\n                var oldEl = elMap1[el.anid];\r\n                if (oldEl) {\r\n                    var newProp = getAnimatableProps(el);\r\n                    el.attr(getAnimatableProps(oldEl));\r\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\r\n                }\r\n                // else {\r\n                //     if (el.previousProps) {\r\n                //         graphic.updateProps\r\n                //     }\r\n                // }\r\n            }\r\n        });\r\n    };\r\n\r\n    module.exports = graphic;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/util/graphic.js\n ** module id = 565\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","\r\n\r\n    var Path = require('../graphic/Path');\r\n    var PathProxy = require('../core/PathProxy');\r\n    var transformPath = require('./transformPath');\r\n    var matrix = require('../core/matrix');\r\n\r\n    // command chars\r\n    var cc = [\r\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\r\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\r\n    ];\r\n\r\n    var mathSqrt = Math.sqrt;\r\n    var mathSin = Math.sin;\r\n    var mathCos = Math.cos;\r\n    var PI = Math.PI;\r\n\r\n    var vMag = function(v) {\r\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\r\n    };\r\n    var vRatio = function(u, v) {\r\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\r\n    };\r\n    var vAngle = function(u, v) {\r\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\r\n                * Math.acos(vRatio(u, v));\r\n    };\r\n\r\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\r\n        var psi = psiDeg * (PI / 180.0);\r\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\r\n                 + mathSin(psi) * (y1 - y2) / 2.0;\r\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\r\n                 + mathCos(psi) * (y1 - y2) / 2.0;\r\n\r\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\r\n\r\n        if (lambda > 1) {\r\n            rx *= mathSqrt(lambda);\r\n            ry *= mathSqrt(lambda);\r\n        }\r\n\r\n        var f = (fa === fs ? -1 : 1)\r\n            * mathSqrt((((rx * rx) * (ry * ry))\r\n                    - ((rx * rx) * (yp * yp))\r\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\r\n                    + (ry * ry) * (xp * xp))\r\n                ) || 0;\r\n\r\n        var cxp = f * rx * yp / ry;\r\n        var cyp = f * -ry * xp / rx;\r\n\r\n        var cx = (x1 + x2) / 2.0\r\n                 + mathCos(psi) * cxp\r\n                 - mathSin(psi) * cyp;\r\n        var cy = (y1 + y2) / 2.0\r\n                + mathSin(psi) * cxp\r\n                + mathCos(psi) * cyp;\r\n\r\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\r\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\r\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\r\n        var dTheta = vAngle(u, v);\r\n\r\n        if (vRatio(u, v) <= -1) {\r\n            dTheta = PI;\r\n        }\r\n        if (vRatio(u, v) >= 1) {\r\n            dTheta = 0;\r\n        }\r\n        if (fs === 0 && dTheta > 0) {\r\n            dTheta = dTheta - 2 * PI;\r\n        }\r\n        if (fs === 1 && dTheta < 0) {\r\n            dTheta = dTheta + 2 * PI;\r\n        }\r\n\r\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\r\n    }\r\n\r\n    function createPathProxyFromString(data) {\r\n        if (!data) {\r\n            return [];\r\n        }\r\n\r\n        // command string\r\n        var cs = data.replace(/-/g, ' -')\r\n            .replace(/  /g, ' ')\r\n            .replace(/ /g, ',')\r\n            .replace(/,,/g, ',');\r\n\r\n        var n;\r\n        // create pipes so that we can split the data\r\n        for (n = 0; n < cc.length; n++) {\r\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\r\n        }\r\n\r\n        // create array\r\n        var arr = cs.split('|');\r\n        // init context point\r\n        var cpx = 0;\r\n        var cpy = 0;\r\n\r\n        var path = new PathProxy();\r\n        var CMD = PathProxy.CMD;\r\n\r\n        var prevCmd;\r\n        for (n = 1; n < arr.length; n++) {\r\n            var str = arr[n];\r\n            var c = str.charAt(0);\r\n            var off = 0;\r\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\r\n            var cmd;\r\n\r\n            if (p.length > 0 && p[0] === '') {\r\n                p.shift();\r\n            }\r\n\r\n            for (var i = 0; i < p.length; i++) {\r\n                p[i] = parseFloat(p[i]);\r\n            }\r\n            while (off < p.length && !isNaN(p[off])) {\r\n                if (isNaN(p[0])) {\r\n                    break;\r\n                }\r\n                var ctlPtx;\r\n                var ctlPty;\r\n\r\n                var rx;\r\n                var ry;\r\n                var psi;\r\n                var fa;\r\n                var fs;\r\n\r\n                var x1 = cpx;\r\n                var y1 = cpy;\r\n\r\n                // convert l, H, h, V, and v to L\r\n                switch (c) {\r\n                    case 'l':\r\n                        cpx += p[off++];\r\n                        cpy += p[off++];\r\n                        cmd = CMD.L;\r\n                        path.addData(cmd, cpx, cpy);\r\n                        break;\r\n                    case 'L':\r\n                        cpx = p[off++];\r\n                        cpy = p[off++];\r\n                        cmd = CMD.L;\r\n                        path.addData(cmd, cpx, cpy);\r\n                        break;\r\n                    case 'm':\r\n                        cpx += p[off++];\r\n                        cpy += p[off++];\r\n                        cmd = CMD.M;\r\n                        path.addData(cmd, cpx, cpy);\r\n                        c = 'l';\r\n                        break;\r\n                    case 'M':\r\n                        cpx = p[off++];\r\n                        cpy = p[off++];\r\n                        cmd = CMD.M;\r\n                        path.addData(cmd, cpx, cpy);\r\n                        c = 'L';\r\n                        break;\r\n                    case 'h':\r\n                        cpx += p[off++];\r\n                        cmd = CMD.L;\r\n                        path.addData(cmd, cpx, cpy);\r\n                        break;\r\n                    case 'H':\r\n                        cpx = p[off++];\r\n                        cmd = CMD.L;\r\n                        path.addData(cmd, cpx, cpy);\r\n                        break;\r\n                    case 'v':\r\n                        cpy += p[off++];\r\n                        cmd = CMD.L;\r\n                        path.addData(cmd, cpx, cpy);\r\n                        break;\r\n                    case 'V':\r\n                        cpy = p[off++];\r\n                        cmd = CMD.L;\r\n                        path.addData(cmd, cpx, cpy);\r\n                        break;\r\n                    case 'C':\r\n                        cmd = CMD.C;\r\n                        path.addData(\r\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\r\n                        );\r\n                        cpx = p[off - 2];\r\n                        cpy = p[off - 1];\r\n                        break;\r\n                    case 'c':\r\n                        cmd = CMD.C;\r\n                        path.addData(\r\n                            cmd,\r\n                            p[off++] + cpx, p[off++] + cpy,\r\n                            p[off++] + cpx, p[off++] + cpy,\r\n                            p[off++] + cpx, p[off++] + cpy\r\n                        );\r\n                        cpx += p[off - 2];\r\n                        cpy += p[off - 1];\r\n                        break;\r\n                    case 'S':\r\n                        ctlPtx = cpx;\r\n                        ctlPty = cpy;\r\n                        var len = path.len();\r\n                        var pathData = path.data;\r\n                        if (prevCmd === CMD.C) {\r\n                            ctlPtx += cpx - pathData[len - 4];\r\n                            ctlPty += cpy - pathData[len - 3];\r\n                        }\r\n                        cmd = CMD.C;\r\n                        x1 = p[off++];\r\n                        y1 = p[off++];\r\n                        cpx = p[off++];\r\n                        cpy = p[off++];\r\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\r\n                        break;\r\n                    case 's':\r\n                        ctlPtx = cpx;\r\n                        ctlPty = cpy;\r\n                        var len = path.len();\r\n                        var pathData = path.data;\r\n                        if (prevCmd === CMD.C) {\r\n                            ctlPtx += cpx - pathData[len - 4];\r\n                            ctlPty += cpy - pathData[len - 3];\r\n                        }\r\n                        cmd = CMD.C;\r\n                        x1 = cpx + p[off++];\r\n                        y1 = cpy + p[off++];\r\n                        cpx += p[off++];\r\n                        cpy += p[off++];\r\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\r\n                        break;\r\n                    case 'Q':\r\n                        x1 = p[off++];\r\n                        y1 = p[off++];\r\n                        cpx = p[off++];\r\n                        cpy = p[off++];\r\n                        cmd = CMD.Q;\r\n                        path.addData(cmd, x1, y1, cpx, cpy);\r\n                        break;\r\n                    case 'q':\r\n                        x1 = p[off++] + cpx;\r\n                        y1 = p[off++] + cpy;\r\n                        cpx += p[off++];\r\n                        cpy += p[off++];\r\n                        cmd = CMD.Q;\r\n                        path.addData(cmd, x1, y1, cpx, cpy);\r\n                        break;\r\n                    case 'T':\r\n                        ctlPtx = cpx;\r\n                        ctlPty = cpy;\r\n                        var len = path.len();\r\n                        var pathData = path.data;\r\n                        if (prevCmd === CMD.Q) {\r\n                            ctlPtx += cpx - pathData[len - 4];\r\n                            ctlPty += cpy - pathData[len - 3];\r\n                        }\r\n                        cpx = p[off++];\r\n                        cpy = p[off++];\r\n                        cmd = CMD.Q;\r\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\r\n                        break;\r\n                    case 't':\r\n                        ctlPtx = cpx;\r\n                        ctlPty = cpy;\r\n                        var len = path.len();\r\n                        var pathData = path.data;\r\n                        if (prevCmd === CMD.Q) {\r\n                            ctlPtx += cpx - pathData[len - 4];\r\n                            ctlPty += cpy - pathData[len - 3];\r\n                        }\r\n                        cpx += p[off++];\r\n                        cpy += p[off++];\r\n                        cmd = CMD.Q;\r\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\r\n                        break;\r\n                    case 'A':\r\n                        rx = p[off++];\r\n                        ry = p[off++];\r\n                        psi = p[off++];\r\n                        fa = p[off++];\r\n                        fs = p[off++];\r\n\r\n                        x1 = cpx, y1 = cpy;\r\n                        cpx = p[off++];\r\n                        cpy = p[off++];\r\n                        cmd = CMD.A;\r\n                        processArc(\r\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\r\n                        );\r\n                        break;\r\n                    case 'a':\r\n                        rx = p[off++];\r\n                        ry = p[off++];\r\n                        psi = p[off++];\r\n                        fa = p[off++];\r\n                        fs = p[off++];\r\n\r\n                        x1 = cpx, y1 = cpy;\r\n                        cpx += p[off++];\r\n                        cpy += p[off++];\r\n                        cmd = CMD.A;\r\n                        processArc(\r\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\r\n                        );\r\n                        break;\r\n                }\r\n            }\r\n\r\n            if (c === 'z' || c === 'Z') {\r\n                cmd = CMD.Z;\r\n                path.addData(cmd);\r\n            }\r\n\r\n            prevCmd = cmd;\r\n        }\r\n\r\n        path.toStatic();\r\n\r\n        return path;\r\n    }\r\n\r\n    // TODO Optimize double memory cost problem\r\n    function createPathOptions(str, opts) {\r\n        var pathProxy = createPathProxyFromString(str);\r\n        var transform;\r\n        opts = opts || {};\r\n        opts.buildPath = function (path) {\r\n            path.setData(pathProxy.data);\r\n            transform && transformPath(path, transform);\r\n            // Svg and vml renderer don't have context\r\n            var ctx = path.getContext();\r\n            if (ctx) {\r\n                path.rebuildPath(ctx);\r\n            }\r\n        };\r\n\r\n        opts.applyTransform = function (m) {\r\n            if (!transform) {\r\n                transform = matrix.create();\r\n            }\r\n            matrix.mul(transform, m, transform);\r\n        };\r\n\r\n        return opts;\r\n    }\r\n\r\n    module.exports = {\r\n        /**\r\n         * Create a Path object from path string data\r\n         * http://www.w3.org/TR/SVG/paths.html#PathData\r\n         * @param  {Object} opts Other options\r\n         */\r\n        createFromString: function (str, opts) {\r\n            return new Path(createPathOptions(str, opts));\r\n        },\r\n\r\n        /**\r\n         * Create a Path class from path string data\r\n         * @param  {string} str\r\n         * @param  {Object} opts Other options\r\n         */\r\n        extendFromString: function (str, opts) {\r\n            return Path.extend(createPathOptions(str, opts));\r\n        },\r\n\r\n        /**\r\n         * Merge multiple paths\r\n         */\r\n        // TODO Apply transform\r\n        // TODO stroke dash\r\n        // TODO Optimize double memory cost problem\r\n        mergePath: function (pathEls, opts) {\r\n            var pathList = [];\r\n            var len = pathEls.length;\r\n            for (var i = 0; i < len; i++) {\r\n                var pathEl = pathEls[i];\r\n                if (pathEl.__dirty) {\r\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\r\n                }\r\n                pathList.push(pathEl.path);\r\n            }\r\n\r\n            var pathBundle = new Path(opts);\r\n            pathBundle.buildPath = function (path) {\r\n                path.appendPath(pathList);\r\n                // Svg and vml renderer don't have context\r\n                var ctx = path.getContext();\r\n                if (ctx) {\r\n                    path.rebuildPath(ctx);\r\n                }\r\n            };\r\n\r\n            return pathBundle;\r\n        }\r\n    };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/tool/path.js\n ** module id = 566\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","/**\r\n * Path element\r\n * @module zrender/graphic/Path\r\n */\r\n\r\n\r\n\r\n    var Displayable = require('./Displayable');\r\n    var zrUtil = require('../core/util');\r\n    var PathProxy = require('../core/PathProxy');\r\n    var pathContain = require('../contain/path');\r\n\r\n    var Pattern = require('./Pattern');\r\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\r\n\r\n    var abs = Math.abs;\r\n\r\n    /**\r\n     * @alias module:zrender/graphic/Path\r\n     * @extends module:zrender/graphic/Displayable\r\n     * @constructor\r\n     * @param {Object} opts\r\n     */\r\n    function Path(opts) {\r\n        Displayable.call(this, opts);\r\n\r\n        /**\r\n         * @type {module:zrender/core/PathProxy}\r\n         * @readOnly\r\n         */\r\n        this.path = new PathProxy();\r\n    }\r\n\r\n    Path.prototype = {\r\n\r\n        constructor: Path,\r\n\r\n        type: 'path',\r\n\r\n        __dirtyPath: true,\r\n\r\n        strokeContainThreshold: 5,\r\n\r\n        brush: function (ctx, prevEl) {\r\n            var style = this.style;\r\n            var path = this.path;\r\n            var hasStroke = style.hasStroke();\r\n            var hasFill = style.hasFill();\r\n            var fill = style.fill;\r\n            var stroke = style.stroke;\r\n            var hasFillGradient = hasFill && !!(fill.colorStops);\r\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\r\n            var hasFillPattern = hasFill && !!(fill.image);\r\n            var hasStrokePattern = hasStroke && !!(stroke.image);\r\n\r\n            style.bind(ctx, this, prevEl);\r\n            this.setTransform(ctx);\r\n\r\n            if (this.__dirty) {\r\n                var rect = this.getBoundingRect();\r\n                // Update gradient because bounding rect may changed\r\n                if (hasFillGradient) {\r\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\r\n                }\r\n                if (hasStrokeGradient) {\r\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\r\n                }\r\n            }\r\n            // Use the gradient or pattern\r\n            if (hasFillGradient) {\r\n                // PENDING If may have affect the state\r\n                ctx.fillStyle = this._fillGradient;\r\n            }\r\n            else if (hasFillPattern) {\r\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\r\n            }\r\n            if (hasStrokeGradient) {\r\n                ctx.strokeStyle = this._strokeGradient;\r\n            }\r\n            else if (hasStrokePattern) {\r\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\r\n            }\r\n\r\n            var lineDash = style.lineDash;\r\n            var lineDashOffset = style.lineDashOffset;\r\n\r\n            var ctxLineDash = !!ctx.setLineDash;\r\n\r\n            // Update path sx, sy\r\n            var scale = this.getGlobalScale();\r\n            path.setScale(scale[0], scale[1]);\r\n\r\n            // Proxy context\r\n            // Rebuild path in following 2 cases\r\n            // 1. Path is dirty\r\n            // 2. Path needs javascript implemented lineDash stroking.\r\n            //    In this case, lineDash information will not be saved in PathProxy\r\n            if (this.__dirtyPath || (\r\n                lineDash && !ctxLineDash && hasStroke\r\n            )) {\r\n                path = this.path.beginPath(ctx);\r\n\r\n                // Setting line dash before build path\r\n                if (lineDash && !ctxLineDash) {\r\n                    path.setLineDash(lineDash);\r\n                    path.setLineDashOffset(lineDashOffset);\r\n                }\r\n\r\n                this.buildPath(path, this.shape, false);\r\n\r\n                // Clear path dirty flag\r\n                this.__dirtyPath = false;\r\n            }\r\n            else {\r\n                // Replay path building\r\n                ctx.beginPath();\r\n                this.path.rebuildPath(ctx);\r\n            }\r\n\r\n            hasFill && path.fill(ctx);\r\n\r\n            if (lineDash && ctxLineDash) {\r\n                ctx.setLineDash(lineDash);\r\n                ctx.lineDashOffset = lineDashOffset;\r\n            }\r\n\r\n            hasStroke && path.stroke(ctx);\r\n\r\n            if (lineDash && ctxLineDash) {\r\n                // PENDING\r\n                // Remove lineDash\r\n                ctx.setLineDash([]);\r\n            }\r\n\r\n\r\n            this.restoreTransform(ctx);\r\n\r\n            // Draw rect text\r\n            if (style.text || style.text === 0) {\r\n                // var rect = this.getBoundingRect();\r\n                this.drawRectText(ctx, this.getBoundingRect());\r\n            }\r\n        },\r\n\r\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\r\n        // Like in circle\r\n        buildPath: function (ctx, shapeCfg, inBundle) {},\r\n\r\n        getBoundingRect: function () {\r\n            var rect = this._rect;\r\n            var style = this.style;\r\n            var needsUpdateRect = !rect;\r\n            if (needsUpdateRect) {\r\n                var path = this.path;\r\n                if (this.__dirtyPath) {\r\n                    path.beginPath();\r\n                    this.buildPath(path, this.shape, false);\r\n                }\r\n                rect = path.getBoundingRect();\r\n            }\r\n            this._rect = rect;\r\n\r\n            if (style.hasStroke()) {\r\n                // Needs update rect with stroke lineWidth when\r\n                // 1. Element changes scale or lineWidth\r\n                // 2. Shape is changed\r\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\r\n                if (this.__dirty || needsUpdateRect) {\r\n                    rectWithStroke.copy(rect);\r\n                    // FIXME Must after updateTransform\r\n                    var w = style.lineWidth;\r\n                    // PENDING, Min line width is needed when line is horizontal or vertical\r\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\r\n\r\n                    // Only add extra hover lineWidth when there are no fill\r\n                    if (!style.hasFill()) {\r\n                        w = Math.max(w, this.strokeContainThreshold || 4);\r\n                    }\r\n                    // Consider line width\r\n                    // Line scale can't be 0;\r\n                    if (lineScale > 1e-10) {\r\n                        rectWithStroke.width += w / lineScale;\r\n                        rectWithStroke.height += w / lineScale;\r\n                        rectWithStroke.x -= w / lineScale / 2;\r\n                        rectWithStroke.y -= w / lineScale / 2;\r\n                    }\r\n                }\r\n\r\n                // Return rect with stroke\r\n                return rectWithStroke;\r\n            }\r\n\r\n            return rect;\r\n        },\r\n\r\n        contain: function (x, y) {\r\n            var localPos = this.transformCoordToLocal(x, y);\r\n            var rect = this.getBoundingRect();\r\n            var style = this.style;\r\n            x = localPos[0];\r\n            y = localPos[1];\r\n\r\n            if (rect.contain(x, y)) {\r\n                var pathData = this.path.data;\r\n                if (style.hasStroke()) {\r\n                    var lineWidth = style.lineWidth;\r\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\r\n                    // Line scale can't be 0;\r\n                    if (lineScale > 1e-10) {\r\n                        // Only add extra hover lineWidth when there are no fill\r\n                        if (!style.hasFill()) {\r\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\r\n                        }\r\n                        if (pathContain.containStroke(\r\n                            pathData, lineWidth / lineScale, x, y\r\n                        )) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n                if (style.hasFill()) {\r\n                    return pathContain.contain(pathData, x, y);\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * @param  {boolean} dirtyPath\r\n         */\r\n        dirty: function (dirtyPath) {\r\n            if (dirtyPath == null) {\r\n                dirtyPath = true;\r\n            }\r\n            // Only mark dirty, not mark clean\r\n            if (dirtyPath) {\r\n                this.__dirtyPath = dirtyPath;\r\n                this._rect = null;\r\n            }\r\n\r\n            this.__dirty = true;\r\n\r\n            this.__zr && this.__zr.refresh();\r\n\r\n            // Used as a clipping path\r\n            if (this.__clipTarget) {\r\n                this.__clipTarget.dirty();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Alias for animate('shape')\r\n         * @param {boolean} loop\r\n         */\r\n        animateShape: function (loop) {\r\n            return this.animate('shape', loop);\r\n        },\r\n\r\n        // Overwrite attrKV\r\n        attrKV: function (key, value) {\r\n            // FIXME\r\n            if (key === 'shape') {\r\n                this.setShape(value);\r\n                this.__dirtyPath = true;\r\n                this._rect = null;\r\n            }\r\n            else {\r\n                Displayable.prototype.attrKV.call(this, key, value);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {Object|string} key\r\n         * @param {*} value\r\n         */\r\n        setShape: function (key, value) {\r\n            var shape = this.shape;\r\n            // Path from string may not have shape\r\n            if (shape) {\r\n                if (zrUtil.isObject(key)) {\r\n                    for (var name in key) {\r\n                        shape[name] = key[name];\r\n                    }\r\n                }\r\n                else {\r\n                    shape[key] = value;\r\n                }\r\n                this.dirty(true);\r\n            }\r\n            return this;\r\n        },\r\n\r\n        getLineScale: function () {\r\n            var m = this.transform;\r\n            // Get the line scale.\r\n            // Determinant of `m` means how much the area is enlarged by the\r\n            // transformation. So its square root can be used as a scale factor\r\n            // for width.\r\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\r\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\r\n                : 1;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 扩展一个 Path element, 比如星形，圆等。\r\n     * Extend a path element\r\n     * @param {Object} props\r\n     * @param {string} props.type Path type\r\n     * @param {Function} props.init Initialize\r\n     * @param {Function} props.buildPath Overwrite buildPath method\r\n     * @param {Object} [props.style] Extended default style config\r\n     * @param {Object} [props.shape] Extended default shape config\r\n     */\r\n    Path.extend = function (defaults) {\r\n        var Sub = function (opts) {\r\n            Path.call(this, opts);\r\n\r\n            if (defaults.style) {\r\n                // Extend default style\r\n                this.style.extendFrom(defaults.style, false);\r\n            }\r\n\r\n            // Extend default shape\r\n            var defaultShape = defaults.shape;\r\n            if (defaultShape) {\r\n                this.shape = this.shape || {};\r\n                var thisShape = this.shape;\r\n                for (var name in defaultShape) {\r\n                    if (\r\n                        ! thisShape.hasOwnProperty(name)\r\n                        && defaultShape.hasOwnProperty(name)\r\n                    ) {\r\n                        thisShape[name] = defaultShape[name];\r\n                    }\r\n                }\r\n            }\r\n\r\n            defaults.init && defaults.init.call(this, opts);\r\n        };\r\n\r\n        zrUtil.inherits(Sub, Path);\r\n\r\n        // FIXME 不能 extend position, rotation 等引用对象\r\n        for (var name in defaults) {\r\n            // Extending prototype values and methods\r\n            if (name !== 'style' && name !== 'shape') {\r\n                Sub.prototype[name] = defaults[name];\r\n            }\r\n        }\r\n\r\n        return Sub;\r\n    };\r\n\r\n    zrUtil.inherits(Path, Displayable);\r\n\r\n    module.exports = Path;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/Path.js\n ** module id = 567\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","/**\r\n * 可绘制的图形基类\r\n * Base class of all displayable graphic objects\r\n * @module zrender/graphic/Displayable\r\n */\r\n\r\n\r\n\r\n    var zrUtil = require('../core/util');\r\n\r\n    var Style = require('./Style');\r\n\r\n    var Element = require('../Element');\r\n    var RectText = require('./mixin/RectText');\r\n    // var Stateful = require('./mixin/Stateful');\r\n\r\n    /**\r\n     * @alias module:zrender/graphic/Displayable\r\n     * @extends module:zrender/Element\r\n     * @extends module:zrender/graphic/mixin/RectText\r\n     */\r\n    function Displayable(opts) {\r\n\r\n        opts = opts || {};\r\n\r\n        Element.call(this, opts);\r\n\r\n        // Extend properties\r\n        for (var name in opts) {\r\n            if (\r\n                opts.hasOwnProperty(name) &&\r\n                name !== 'style'\r\n            ) {\r\n                this[name] = opts[name];\r\n            }\r\n        }\r\n\r\n        /**\r\n         * @type {module:zrender/graphic/Style}\r\n         */\r\n        this.style = new Style(opts.style);\r\n\r\n        this._rect = null;\r\n        // Shapes for cascade clipping.\r\n        this.__clipPaths = [];\r\n\r\n        // FIXME Stateful must be mixined after style is setted\r\n        // Stateful.call(this, opts);\r\n    }\r\n\r\n    Displayable.prototype = {\r\n\r\n        constructor: Displayable,\r\n\r\n        type: 'displayable',\r\n\r\n        /**\r\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\r\n         * Dirty flag. From which painter will determine if this displayable object needs brush\r\n         * @name module:zrender/graphic/Displayable#__dirty\r\n         * @type {boolean}\r\n         */\r\n        __dirty: true,\r\n\r\n        /**\r\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\r\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\r\n         * @name module:/zrender/graphic/Displayable#invisible\r\n         * @type {boolean}\r\n         * @default false\r\n         */\r\n        invisible: false,\r\n\r\n        /**\r\n         * @name module:/zrender/graphic/Displayable#z\r\n         * @type {number}\r\n         * @default 0\r\n         */\r\n        z: 0,\r\n\r\n        /**\r\n         * @name module:/zrender/graphic/Displayable#z\r\n         * @type {number}\r\n         * @default 0\r\n         */\r\n        z2: 0,\r\n\r\n        /**\r\n         * z层level，决定绘画在哪层canvas中\r\n         * @name module:/zrender/graphic/Displayable#zlevel\r\n         * @type {number}\r\n         * @default 0\r\n         */\r\n        zlevel: 0,\r\n\r\n        /**\r\n         * 是否可拖拽\r\n         * @name module:/zrender/graphic/Displayable#draggable\r\n         * @type {boolean}\r\n         * @default false\r\n         */\r\n        draggable: false,\r\n\r\n        /**\r\n         * 是否正在拖拽\r\n         * @name module:/zrender/graphic/Displayable#draggable\r\n         * @type {boolean}\r\n         * @default false\r\n         */\r\n        dragging: false,\r\n\r\n        /**\r\n         * 是否相应鼠标事件\r\n         * @name module:/zrender/graphic/Displayable#silent\r\n         * @type {boolean}\r\n         * @default false\r\n         */\r\n        silent: false,\r\n\r\n        /**\r\n         * If enable culling\r\n         * @type {boolean}\r\n         * @default false\r\n         */\r\n        culling: false,\r\n\r\n        /**\r\n         * Mouse cursor when hovered\r\n         * @name module:/zrender/graphic/Displayable#cursor\r\n         * @type {string}\r\n         */\r\n        cursor: 'pointer',\r\n\r\n        /**\r\n         * If hover area is bounding rect\r\n         * @name module:/zrender/graphic/Displayable#rectHover\r\n         * @type {string}\r\n         */\r\n        rectHover: false,\r\n\r\n        /**\r\n         * Render the element progressively when the value >= 0,\r\n         * usefull for large data.\r\n         * @type {number}\r\n         */\r\n        progressive: -1,\r\n\r\n        beforeBrush: function (ctx) {},\r\n\r\n        afterBrush: function (ctx) {},\r\n\r\n        /**\r\n         * 图形绘制方法\r\n         * @param {Canvas2DRenderingContext} ctx\r\n         */\r\n        // Interface\r\n        brush: function (ctx, prevEl) {},\r\n\r\n        /**\r\n         * 获取最小包围盒\r\n         * @return {module:zrender/core/BoundingRect}\r\n         */\r\n        // Interface\r\n        getBoundingRect: function () {},\r\n\r\n        /**\r\n         * 判断坐标 x, y 是否在图形上\r\n         * If displayable element contain coord x, y\r\n         * @param  {number} x\r\n         * @param  {number} y\r\n         * @return {boolean}\r\n         */\r\n        contain: function (x, y) {\r\n            return this.rectContain(x, y);\r\n        },\r\n\r\n        /**\r\n         * @param  {Function} cb\r\n         * @param  {}   context\r\n         */\r\n        traverse: function (cb, context) {\r\n            cb.call(context, this);\r\n        },\r\n\r\n        /**\r\n         * 判断坐标 x, y 是否在图形的包围盒上\r\n         * If bounding rect of element contain coord x, y\r\n         * @param  {number} x\r\n         * @param  {number} y\r\n         * @return {boolean}\r\n         */\r\n        rectContain: function (x, y) {\r\n            var coord = this.transformCoordToLocal(x, y);\r\n            var rect = this.getBoundingRect();\r\n            return rect.contain(coord[0], coord[1]);\r\n        },\r\n\r\n        /**\r\n         * 标记图形元素为脏，并且在下一帧重绘\r\n         * Mark displayable element dirty and refresh next frame\r\n         */\r\n        dirty: function () {\r\n            this.__dirty = true;\r\n\r\n            this._rect = null;\r\n\r\n            this.__zr && this.__zr.refresh();\r\n        },\r\n\r\n        /**\r\n         * 图形是否会触发事件\r\n         * If displayable object binded any event\r\n         * @return {boolean}\r\n         */\r\n        // TODO, 通过 bind 绑定的事件\r\n        // isSilent: function () {\r\n        //     return !(\r\n        //         this.hoverable || this.draggable\r\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\r\n        //         || this.onmousedown || this.onmouseup || this.onclick\r\n        //         || this.ondragenter || this.ondragover || this.ondragleave\r\n        //         || this.ondrop\r\n        //     );\r\n        // },\r\n        /**\r\n         * Alias for animate('style')\r\n         * @param {boolean} loop\r\n         */\r\n        animateStyle: function (loop) {\r\n            return this.animate('style', loop);\r\n        },\r\n\r\n        attrKV: function (key, value) {\r\n            if (key !== 'style') {\r\n                Element.prototype.attrKV.call(this, key, value);\r\n            }\r\n            else {\r\n                this.style.set(value);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {Object|string} key\r\n         * @param {*} value\r\n         */\r\n        setStyle: function (key, value) {\r\n            this.style.set(key, value);\r\n            this.dirty(false);\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Use given style object\r\n         * @param  {Object} obj\r\n         */\r\n        useStyle: function (obj) {\r\n            this.style = new Style(obj);\r\n            this.dirty(false);\r\n            return this;\r\n        }\r\n    };\r\n\r\n    zrUtil.inherits(Displayable, Element);\r\n\r\n    zrUtil.mixin(Displayable, RectText);\r\n    // zrUtil.mixin(Displayable, Stateful);\r\n\r\n    module.exports = Displayable;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/Displayable.js\n ** module id = 568\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","/**\r\n * @module zrender/graphic/Style\r\n */\r\n\r\n\r\n    var STYLE_COMMON_PROPS = [\r\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\r\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\r\n    ];\r\n\r\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\r\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\r\n\r\n    var Style = function (opts) {\r\n        this.extendFrom(opts);\r\n    };\r\n\r\n    function createLinearGradient(ctx, obj, rect) {\r\n        // var size =\r\n        var x = obj.x;\r\n        var x2 = obj.x2;\r\n        var y = obj.y;\r\n        var y2 = obj.y2;\r\n\r\n        if (!obj.global) {\r\n            x = x * rect.width + rect.x;\r\n            x2 = x2 * rect.width + rect.x;\r\n            y = y * rect.height + rect.y;\r\n            y2 = y2 * rect.height + rect.y;\r\n        }\r\n\r\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\r\n\r\n        return canvasGradient;\r\n    }\r\n\r\n    function createRadialGradient(ctx, obj, rect) {\r\n        var width = rect.width;\r\n        var height = rect.height;\r\n        var min = Math.min(width, height);\r\n\r\n        var x = obj.x;\r\n        var y = obj.y;\r\n        var r = obj.r;\r\n        if (!obj.global) {\r\n            x = x * width + rect.x;\r\n            y = y * height + rect.y;\r\n            r = r * min;\r\n        }\r\n\r\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\r\n\r\n        return canvasGradient;\r\n    }\r\n\r\n\r\n    Style.prototype = {\r\n\r\n        constructor: Style,\r\n\r\n        /**\r\n         * @type {string}\r\n         */\r\n        fill: '#000000',\r\n\r\n        /**\r\n         * @type {string}\r\n         */\r\n        stroke: null,\r\n\r\n        /**\r\n         * @type {number}\r\n         */\r\n        opacity: 1,\r\n\r\n        /**\r\n         * @type {Array.<number>}\r\n         */\r\n        lineDash: null,\r\n\r\n        /**\r\n         * @type {number}\r\n         */\r\n        lineDashOffset: 0,\r\n\r\n        /**\r\n         * @type {number}\r\n         */\r\n        shadowBlur: 0,\r\n\r\n        /**\r\n         * @type {number}\r\n         */\r\n        shadowOffsetX: 0,\r\n\r\n        /**\r\n         * @type {number}\r\n         */\r\n        shadowOffsetY: 0,\r\n\r\n        /**\r\n         * @type {number}\r\n         */\r\n        lineWidth: 1,\r\n\r\n        /**\r\n         * If stroke ignore scale\r\n         * @type {Boolean}\r\n         */\r\n        strokeNoScale: false,\r\n\r\n        // Bounding rect text configuration\r\n        // Not affected by element transform\r\n        /**\r\n         * @type {string}\r\n         */\r\n        text: null,\r\n\r\n        /**\r\n         * @type {string}\r\n         */\r\n        textFill: '#000',\r\n\r\n        /**\r\n         * @type {string}\r\n         */\r\n        textStroke: null,\r\n\r\n        /**\r\n         * 'inside', 'left', 'right', 'top', 'bottom'\r\n         * [x, y]\r\n         * @type {string|Array.<number>}\r\n         * @default 'inside'\r\n         */\r\n        textPosition: 'inside',\r\n\r\n        /**\r\n         * @type {string}\r\n         */\r\n        textBaseline: null,\r\n\r\n        /**\r\n         * @type {string}\r\n         */\r\n        textAlign: null,\r\n\r\n        /**\r\n         * @type {string}\r\n         */\r\n        textVerticalAlign: null,\r\n\r\n        /**\r\n         * @type {number}\r\n         */\r\n        textDistance: 5,\r\n\r\n        /**\r\n         * @type {number}\r\n         */\r\n        textShadowBlur: 0,\r\n\r\n        /**\r\n         * @type {number}\r\n         */\r\n        textShadowOffsetX: 0,\r\n\r\n        /**\r\n         * @type {number}\r\n         */\r\n        textShadowOffsetY: 0,\r\n\r\n        /**\r\n         * @type {string}\r\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\r\n         */\r\n        blend: null,\r\n\r\n        /**\r\n         * @param {CanvasRenderingContext2D} ctx\r\n         */\r\n        bind: function (ctx, el, prevEl) {\r\n            var style = this;\r\n            var prevStyle = prevEl && prevEl.style;\r\n            var firstDraw = !prevStyle;\r\n\r\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\r\n                var prop = STYLE_COMMON_PROPS[i];\r\n                var styleName = prop[0];\r\n\r\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\r\n                    // FIXME Invalid property value will cause style leak from previous element.\r\n                    ctx[styleName] = style[styleName] || prop[1];\r\n                }\r\n            }\r\n\r\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\r\n                ctx.fillStyle = style.fill;\r\n            }\r\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\r\n                ctx.strokeStyle = style.stroke;\r\n            }\r\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\r\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\r\n            }\r\n\r\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\r\n                ctx.globalCompositeOperation = style.blend || 'source-over';\r\n            }\r\n            if (this.hasStroke()) {\r\n                var lineWidth = style.lineWidth;\r\n                ctx.lineWidth = lineWidth / (\r\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\r\n                );\r\n            }\r\n        },\r\n\r\n        hasFill: function () {\r\n            var fill = this.fill;\r\n            return fill != null && fill !== 'none';\r\n        },\r\n\r\n        hasStroke: function () {\r\n            var stroke = this.stroke;\r\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\r\n        },\r\n\r\n        /**\r\n         * Extend from other style\r\n         * @param {zrender/graphic/Style} otherStyle\r\n         * @param {boolean} overwrite\r\n         */\r\n        extendFrom: function (otherStyle, overwrite) {\r\n            if (otherStyle) {\r\n                var target = this;\r\n                for (var name in otherStyle) {\r\n                    if (otherStyle.hasOwnProperty(name)\r\n                        && (overwrite || ! target.hasOwnProperty(name))\r\n                    ) {\r\n                        target[name] = otherStyle[name];\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Batch setting style with a given object\r\n         * @param {Object|string} obj\r\n         * @param {*} [obj]\r\n         */\r\n        set: function (obj, value) {\r\n            if (typeof obj === 'string') {\r\n                this[obj] = value;\r\n            }\r\n            else {\r\n                this.extendFrom(obj, true);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Clone\r\n         * @return {zrender/graphic/Style} [description]\r\n         */\r\n        clone: function () {\r\n            var newStyle = new this.constructor();\r\n            newStyle.extendFrom(this, true);\r\n            return newStyle;\r\n        },\r\n\r\n        getGradient: function (ctx, obj, rect) {\r\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\r\n            var canvasGradient = method(ctx, obj, rect);\r\n            var colorStops = obj.colorStops;\r\n            for (var i = 0; i < colorStops.length; i++) {\r\n                canvasGradient.addColorStop(\r\n                    colorStops[i].offset, colorStops[i].color\r\n                );\r\n            }\r\n            return canvasGradient;\r\n        }\r\n    };\r\n\r\n    var styleProto = Style.prototype;\r\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\r\n        var prop = STYLE_COMMON_PROPS[i];\r\n        if (!(prop[0] in styleProto)) {\r\n            styleProto[prop[0]] = prop[1];\r\n        }\r\n    }\r\n\r\n    // Provide for others\r\n    Style.getGradient = styleProto.getGradient;\r\n\r\n    module.exports = Style;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/Style.js\n ** module id = 569\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","/**\r\n * Mixin for drawing text in a element bounding rect\r\n * @module zrender/mixin/RectText\r\n */\r\n\r\n\r\n\r\n    var textContain = require('../../contain/text');\r\n    var BoundingRect = require('../../core/BoundingRect');\r\n\r\n    var tmpRect = new BoundingRect();\r\n\r\n    var RectText = function () {};\r\n\r\n    function parsePercent(value, maxValue) {\r\n        if (typeof value === 'string') {\r\n            if (value.lastIndexOf('%') >= 0) {\r\n                return parseFloat(value) / 100 * maxValue;\r\n            }\r\n            return parseFloat(value);\r\n        }\r\n        return value;\r\n    }\r\n\r\n    function setTransform(ctx, m) {\r\n        ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\r\n    }\r\n\r\n    RectText.prototype = {\r\n\r\n        constructor: RectText,\r\n\r\n        /**\r\n         * Draw text in a rect with specified position.\r\n         * @param  {CanvasRenderingContext} ctx\r\n         * @param  {Object} rect Displayable rect\r\n         * @return {Object} textRect Alternative precalculated text bounding rect\r\n         */\r\n        drawRectText: function (ctx, rect, textRect) {\r\n            var style = this.style;\r\n            var text = style.text;\r\n            // Convert to string\r\n            text != null && (text += '');\r\n            if (!text) {\r\n                return;\r\n            }\r\n\r\n            // FIXME\r\n            ctx.save();\r\n\r\n            var x;\r\n            var y;\r\n            var textPosition = style.textPosition;\r\n            var distance = style.textDistance;\r\n            var align = style.textAlign;\r\n            var font = style.textFont || style.font;\r\n            var baseline = style.textBaseline;\r\n            var verticalAlign = style.textVerticalAlign;\r\n\r\n            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\r\n\r\n            // Transform rect to view space\r\n            var transform = this.transform;\r\n            if (transform) {\r\n                tmpRect.copy(rect);\r\n                tmpRect.applyTransform(transform);\r\n                rect = tmpRect;\r\n            }\r\n\r\n            // Text position represented by coord\r\n            if (textPosition instanceof Array) {\r\n                // Percent\r\n                x = rect.x + parsePercent(textPosition[0], rect.width);\r\n                y = rect.y + parsePercent(textPosition[1], rect.height);\r\n                align = align || 'left';\r\n                baseline = baseline || 'top';\r\n\r\n                if (verticalAlign) {\r\n                    switch (verticalAlign) {\r\n                        case 'middle':\r\n                            y -= textRect.height / 2 - textRect.lineHeight / 2;\r\n                            break;\r\n                        case 'bottom':\r\n                            y -= textRect.height - textRect.lineHeight / 2;\r\n                            break;\r\n                        default:\r\n                            y += textRect.lineHeight / 2;\r\n                    }\r\n                    // Force bseline to be middle\r\n                    baseline = 'middle';\r\n                }\r\n            }\r\n            else {\r\n                var res = textContain.adjustTextPositionOnRect(\r\n                    textPosition, rect, textRect, distance\r\n                );\r\n                x = res.x;\r\n                y = res.y;\r\n                // Default align and baseline when has textPosition\r\n                align = align || res.textAlign;\r\n                baseline = baseline || res.textBaseline;\r\n            }\r\n\r\n            // Use canvas default left textAlign. Giving invalid value will cause state not change\r\n            ctx.textAlign = align || 'left';\r\n            // Use canvas default alphabetic baseline\r\n            ctx.textBaseline = baseline || 'alphabetic';\r\n\r\n            var textFill = style.textFill;\r\n            var textStroke = style.textStroke;\r\n            textFill && (ctx.fillStyle = textFill);\r\n            textStroke && (ctx.strokeStyle = textStroke);\r\n            ctx.font = font;\r\n\r\n            // Text shadow\r\n            // Always set shadowBlur and shadowOffset to avoid leak from displayable\r\n            ctx.shadowBlur = style.textShadowBlur;\r\n            ctx.shadowColor = style.textShadowColor || 'transparent';\r\n            ctx.shadowOffsetX = style.textShadowOffsetX;\r\n            ctx.shadowOffsetY = style.textShadowOffsetY;\r\n\r\n            var textLines = text.split('\\n');\r\n            for (var i = 0; i < textLines.length; i++) {\r\n                textFill && ctx.fillText(textLines[i], x, y);\r\n                textStroke && ctx.strokeText(textLines[i], x, y);\r\n                y += textRect.lineHeight;\r\n            }\r\n\r\n            ctx.restore();\r\n        }\r\n    };\r\n\r\n    module.exports = RectText;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/mixin/RectText.js\n ** module id = 570\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","'use strict';\r\n/**\r\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\r\n * 可以用于 isInsidePath 判断以及获取boundingRect\r\n *\r\n * @module zrender/core/PathProxy\r\n * @author Yi Shen (http://www.github.com/pissang)\r\n */\r\n\r\n // TODO getTotalLength, getPointAtLength\r\n\r\n\r\n    var curve = require('./curve');\r\n    var vec2 = require('./vector');\r\n    var bbox = require('./bbox');\r\n    var BoundingRect = require('./BoundingRect');\r\n    var dpr = require('../config').devicePixelRatio;\r\n\r\n    var CMD = {\r\n        M: 1,\r\n        L: 2,\r\n        C: 3,\r\n        Q: 4,\r\n        A: 5,\r\n        Z: 6,\r\n        // Rect\r\n        R: 7\r\n    };\r\n\r\n    var min = [];\r\n    var max = [];\r\n    var min2 = [];\r\n    var max2 = [];\r\n    var mathMin = Math.min;\r\n    var mathMax = Math.max;\r\n    var mathCos = Math.cos;\r\n    var mathSin = Math.sin;\r\n    var mathSqrt = Math.sqrt;\r\n    var mathAbs = Math.abs;\r\n\r\n    var hasTypedArray = typeof Float32Array != 'undefined';\r\n\r\n    /**\r\n     * @alias module:zrender/core/PathProxy\r\n     * @constructor\r\n     */\r\n    var PathProxy = function () {\r\n\r\n        /**\r\n         * Path data. Stored as flat array\r\n         * @type {Array.<Object>}\r\n         */\r\n        this.data = [];\r\n\r\n        this._len = 0;\r\n\r\n        this._ctx = null;\r\n\r\n        this._xi = 0;\r\n        this._yi = 0;\r\n\r\n        this._x0 = 0;\r\n        this._y0 = 0;\r\n\r\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\r\n        this._ux = 0;\r\n        this._uy = 0;\r\n    };\r\n\r\n    /**\r\n     * 快速计算Path包围盒（并不是最小包围盒）\r\n     * @return {Object}\r\n     */\r\n    PathProxy.prototype = {\r\n\r\n        constructor: PathProxy,\r\n\r\n        _lineDash: null,\r\n\r\n        _dashOffset: 0,\r\n\r\n        _dashIdx: 0,\r\n\r\n        _dashSum: 0,\r\n\r\n        /**\r\n         * @readOnly\r\n         */\r\n        setScale: function (sx, sy) {\r\n            this._ux = mathAbs(1 / dpr / sx) || 0;\r\n            this._uy = mathAbs(1 / dpr / sy) || 0;\r\n        },\r\n\r\n        getContext: function () {\r\n            return this._ctx;\r\n        },\r\n\r\n        /**\r\n         * @param  {CanvasRenderingContext2D} ctx\r\n         * @return {module:zrender/core/PathProxy}\r\n         */\r\n        beginPath: function (ctx) {\r\n            this._ctx = ctx;\r\n\r\n            ctx && ctx.beginPath();\r\n\r\n            // Reset\r\n            this._len = 0;\r\n\r\n            if (this._lineDash) {\r\n                this._lineDash = null;\r\n\r\n                this._dashOffset = 0;\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @param  {number} x\r\n         * @param  {number} y\r\n         * @return {module:zrender/core/PathProxy}\r\n         */\r\n        moveTo: function (x, y) {\r\n            this.addData(CMD.M, x, y);\r\n            this._ctx && this._ctx.moveTo(x, y);\r\n\r\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\r\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\r\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\r\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\r\n            this._x0 = x;\r\n            this._y0 = y;\r\n\r\n            this._xi = x;\r\n            this._yi = y;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @param  {number} x\r\n         * @param  {number} y\r\n         * @return {module:zrender/core/PathProxy}\r\n         */\r\n        lineTo: function (x, y) {\r\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\r\n                || mathAbs(y - this._yi) > this._uy\r\n                // Force draw the first segment\r\n                || this._len < 5;\r\n\r\n            this.addData(CMD.L, x, y);\r\n\r\n            if (this._ctx && exceedUnit) {\r\n                this._needsDash() ? this._dashedLineTo(x, y)\r\n                    : this._ctx.lineTo(x, y);\r\n            }\r\n            if (exceedUnit) {\r\n                this._xi = x;\r\n                this._yi = y;\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @param  {number} x1\r\n         * @param  {number} y1\r\n         * @param  {number} x2\r\n         * @param  {number} y2\r\n         * @param  {number} x3\r\n         * @param  {number} y3\r\n         * @return {module:zrender/core/PathProxy}\r\n         */\r\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\r\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\r\n            if (this._ctx) {\r\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\r\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\r\n            }\r\n            this._xi = x3;\r\n            this._yi = y3;\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @param  {number} x1\r\n         * @param  {number} y1\r\n         * @param  {number} x2\r\n         * @param  {number} y2\r\n         * @return {module:zrender/core/PathProxy}\r\n         */\r\n        quadraticCurveTo: function (x1, y1, x2, y2) {\r\n            this.addData(CMD.Q, x1, y1, x2, y2);\r\n            if (this._ctx) {\r\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\r\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\r\n            }\r\n            this._xi = x2;\r\n            this._yi = y2;\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @param  {number} cx\r\n         * @param  {number} cy\r\n         * @param  {number} r\r\n         * @param  {number} startAngle\r\n         * @param  {number} endAngle\r\n         * @param  {boolean} anticlockwise\r\n         * @return {module:zrender/core/PathProxy}\r\n         */\r\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\r\n            this.addData(\r\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\r\n            );\r\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\r\n\r\n            this._xi = mathCos(endAngle) * r + cx;\r\n            this._xi = mathSin(endAngle) * r + cx;\r\n            return this;\r\n        },\r\n\r\n        // TODO\r\n        arcTo: function (x1, y1, x2, y2, radius) {\r\n            if (this._ctx) {\r\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\r\n            }\r\n            return this;\r\n        },\r\n\r\n        // TODO\r\n        rect: function (x, y, w, h) {\r\n            this._ctx && this._ctx.rect(x, y, w, h);\r\n            this.addData(CMD.R, x, y, w, h);\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * @return {module:zrender/core/PathProxy}\r\n         */\r\n        closePath: function () {\r\n            this.addData(CMD.Z);\r\n\r\n            var ctx = this._ctx;\r\n            var x0 = this._x0;\r\n            var y0 = this._y0;\r\n            if (ctx) {\r\n                this._needsDash() && this._dashedLineTo(x0, y0);\r\n                ctx.closePath();\r\n            }\r\n\r\n            this._xi = x0;\r\n            this._yi = y0;\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\r\n         * stroke 同样\r\n         * @param {CanvasRenderingContext2D} ctx\r\n         * @return {module:zrender/core/PathProxy}\r\n         */\r\n        fill: function (ctx) {\r\n            ctx && ctx.fill();\r\n            this.toStatic();\r\n        },\r\n\r\n        /**\r\n         * @param {CanvasRenderingContext2D} ctx\r\n         * @return {module:zrender/core/PathProxy}\r\n         */\r\n        stroke: function (ctx) {\r\n            ctx && ctx.stroke();\r\n            this.toStatic();\r\n        },\r\n\r\n        /**\r\n         * 必须在其它绘制命令前调用\r\n         * Must be invoked before all other path drawing methods\r\n         * @return {module:zrender/core/PathProxy}\r\n         */\r\n        setLineDash: function (lineDash) {\r\n            if (lineDash instanceof Array) {\r\n                this._lineDash = lineDash;\r\n\r\n                this._dashIdx = 0;\r\n\r\n                var lineDashSum = 0;\r\n                for (var i = 0; i < lineDash.length; i++) {\r\n                    lineDashSum += lineDash[i];\r\n                }\r\n                this._dashSum = lineDashSum;\r\n            }\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 必须在其它绘制命令前调用\r\n         * Must be invoked before all other path drawing methods\r\n         * @return {module:zrender/core/PathProxy}\r\n         */\r\n        setLineDashOffset: function (offset) {\r\n            this._dashOffset = offset;\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @return {boolean}\r\n         */\r\n        len: function () {\r\n            return this._len;\r\n        },\r\n\r\n        /**\r\n         * 直接设置 Path 数据\r\n         */\r\n        setData: function (data) {\r\n\r\n            var len = data.length;\r\n\r\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\r\n                this.data = new Float32Array(len);\r\n            }\r\n\r\n            for (var i = 0; i < len; i++) {\r\n                this.data[i] = data[i];\r\n            }\r\n\r\n            this._len = len;\r\n        },\r\n\r\n        /**\r\n         * 添加子路径\r\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\r\n         */\r\n        appendPath: function (path) {\r\n            if (!(path instanceof Array)) {\r\n                path = [path];\r\n            }\r\n            var len = path.length;\r\n            var appendSize = 0;\r\n            var offset = this._len;\r\n            for (var i = 0; i < len; i++) {\r\n                appendSize += path[i].len();\r\n            }\r\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\r\n                this.data = new Float32Array(offset + appendSize);\r\n            }\r\n            for (var i = 0; i < len; i++) {\r\n                var appendPathData = path[i].data;\r\n                for (var k = 0; k < appendPathData.length; k++) {\r\n                    this.data[offset++] = appendPathData[k];\r\n                }\r\n            }\r\n            this._len = offset;\r\n        },\r\n\r\n        /**\r\n         * 填充 Path 数据。\r\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\r\n         */\r\n        addData: function (cmd) {\r\n            var data = this.data;\r\n            if (this._len + arguments.length > data.length) {\r\n                // 因为之前的数组已经转换成静态的 Float32Array\r\n                // 所以不够用时需要扩展一个新的动态数组\r\n                this._expandData();\r\n                data = this.data;\r\n            }\r\n            for (var i = 0; i < arguments.length; i++) {\r\n                data[this._len++] = arguments[i];\r\n            }\r\n\r\n            this._prevCmd = cmd;\r\n        },\r\n\r\n        _expandData: function () {\r\n            // Only if data is Float32Array\r\n            if (!(this.data instanceof Array)) {\r\n                var newData = [];\r\n                for (var i = 0; i < this._len; i++) {\r\n                    newData[i] = this.data[i];\r\n                }\r\n                this.data = newData;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * If needs js implemented dashed line\r\n         * @return {boolean}\r\n         * @private\r\n         */\r\n        _needsDash: function () {\r\n            return this._lineDash;\r\n        },\r\n\r\n        _dashedLineTo: function (x1, y1) {\r\n            var dashSum = this._dashSum;\r\n            var offset = this._dashOffset;\r\n            var lineDash = this._lineDash;\r\n            var ctx = this._ctx;\r\n\r\n            var x0 = this._xi;\r\n            var y0 = this._yi;\r\n            var dx = x1 - x0;\r\n            var dy = y1 - y0;\r\n            var dist = mathSqrt(dx * dx + dy * dy);\r\n            var x = x0;\r\n            var y = y0;\r\n            var dash;\r\n            var nDash = lineDash.length;\r\n            var idx;\r\n            dx /= dist;\r\n            dy /= dist;\r\n\r\n            if (offset < 0) {\r\n                // Convert to positive offset\r\n                offset = dashSum + offset;\r\n            }\r\n            offset %= dashSum;\r\n            x -= offset * dx;\r\n            y -= offset * dy;\r\n\r\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\r\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\r\n                idx = this._dashIdx;\r\n                dash = lineDash[idx];\r\n                x += dx * dash;\r\n                y += dy * dash;\r\n                this._dashIdx = (idx + 1) % nDash;\r\n                // Skip positive offset\r\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\r\n                    continue;\r\n                }\r\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\r\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\r\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\r\n                );\r\n            }\r\n            // Offset for next lineTo\r\n            dx = x - x1;\r\n            dy = y - y1;\r\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\r\n        },\r\n\r\n        // Not accurate dashed line to\r\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\r\n            var dashSum = this._dashSum;\r\n            var offset = this._dashOffset;\r\n            var lineDash = this._lineDash;\r\n            var ctx = this._ctx;\r\n\r\n            var x0 = this._xi;\r\n            var y0 = this._yi;\r\n            var t;\r\n            var dx;\r\n            var dy;\r\n            var cubicAt = curve.cubicAt;\r\n            var bezierLen = 0;\r\n            var idx = this._dashIdx;\r\n            var nDash = lineDash.length;\r\n\r\n            var x;\r\n            var y;\r\n\r\n            var tmpLen = 0;\r\n\r\n            if (offset < 0) {\r\n                // Convert to positive offset\r\n                offset = dashSum + offset;\r\n            }\r\n            offset %= dashSum;\r\n            // Bezier approx length\r\n            for (t = 0; t < 1; t += 0.1) {\r\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\r\n                    - cubicAt(x0, x1, x2, x3, t);\r\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\r\n                    - cubicAt(y0, y1, y2, y3, t);\r\n                bezierLen += mathSqrt(dx * dx + dy * dy);\r\n            }\r\n\r\n            // Find idx after add offset\r\n            for (; idx < nDash; idx++) {\r\n                tmpLen += lineDash[idx];\r\n                if (tmpLen > offset) {\r\n                    break;\r\n                }\r\n            }\r\n            t = (tmpLen - offset) / bezierLen;\r\n\r\n            while (t <= 1) {\r\n\r\n                x = cubicAt(x0, x1, x2, x3, t);\r\n                y = cubicAt(y0, y1, y2, y3, t);\r\n\r\n                // Use line to approximate dashed bezier\r\n                // Bad result if dash is long\r\n                idx % 2 ? ctx.moveTo(x, y)\r\n                    : ctx.lineTo(x, y);\r\n\r\n                t += lineDash[idx] / bezierLen;\r\n\r\n                idx = (idx + 1) % nDash;\r\n            }\r\n\r\n            // Finish the last segment and calculate the new offset\r\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\r\n            dx = x3 - x;\r\n            dy = y3 - y;\r\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\r\n        },\r\n\r\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\r\n            // Convert quadratic to cubic using degree elevation\r\n            var x3 = x2;\r\n            var y3 = y2;\r\n            x2 = (x2 + 2 * x1) / 3;\r\n            y2 = (y2 + 2 * y1) / 3;\r\n            x1 = (this._xi + 2 * x1) / 3;\r\n            y1 = (this._yi + 2 * y1) / 3;\r\n\r\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\r\n        },\r\n\r\n        /**\r\n         * 转成静态的 Float32Array 减少堆内存占用\r\n         * Convert dynamic array to static Float32Array\r\n         */\r\n        toStatic: function () {\r\n            var data = this.data;\r\n            if (data instanceof Array) {\r\n                data.length = this._len;\r\n                if (hasTypedArray) {\r\n                    this.data = new Float32Array(data);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @return {module:zrender/core/BoundingRect}\r\n         */\r\n        getBoundingRect: function () {\r\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\r\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\r\n\r\n            var data = this.data;\r\n            var xi = 0;\r\n            var yi = 0;\r\n            var x0 = 0;\r\n            var y0 = 0;\r\n\r\n            for (var i = 0; i < data.length;) {\r\n                var cmd = data[i++];\r\n\r\n                if (i == 1) {\r\n                    // 如果第一个命令是 L, C, Q\r\n                    // 则 previous point 同绘制命令的第一个 point\r\n                    //\r\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\r\n                    xi = data[i];\r\n                    yi = data[i + 1];\r\n\r\n                    x0 = xi;\r\n                    y0 = yi;\r\n                }\r\n\r\n                switch (cmd) {\r\n                    case CMD.M:\r\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\r\n                        // 在 closePath 的时候使用\r\n                        x0 = data[i++];\r\n                        y0 = data[i++];\r\n                        xi = x0;\r\n                        yi = y0;\r\n                        min2[0] = x0;\r\n                        min2[1] = y0;\r\n                        max2[0] = x0;\r\n                        max2[1] = y0;\r\n                        break;\r\n                    case CMD.L:\r\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\r\n                        xi = data[i++];\r\n                        yi = data[i++];\r\n                        break;\r\n                    case CMD.C:\r\n                        bbox.fromCubic(\r\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\r\n                            min2, max2\r\n                        );\r\n                        xi = data[i++];\r\n                        yi = data[i++];\r\n                        break;\r\n                    case CMD.Q:\r\n                        bbox.fromQuadratic(\r\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\r\n                            min2, max2\r\n                        );\r\n                        xi = data[i++];\r\n                        yi = data[i++];\r\n                        break;\r\n                    case CMD.A:\r\n                        // TODO Arc 判断的开销比较大\r\n                        var cx = data[i++];\r\n                        var cy = data[i++];\r\n                        var rx = data[i++];\r\n                        var ry = data[i++];\r\n                        var startAngle = data[i++];\r\n                        var endAngle = data[i++] + startAngle;\r\n                        // TODO Arc 旋转\r\n                        var psi = data[i++];\r\n                        var anticlockwise = 1 - data[i++];\r\n\r\n                        if (i == 1) {\r\n                            // 直接使用 arc 命令\r\n                            // 第一个命令起点还未定义\r\n                            x0 = mathCos(startAngle) * rx + cx;\r\n                            y0 = mathSin(startAngle) * ry + cy;\r\n                        }\r\n\r\n                        bbox.fromArc(\r\n                            cx, cy, rx, ry, startAngle, endAngle,\r\n                            anticlockwise, min2, max2\r\n                        );\r\n\r\n                        xi = mathCos(endAngle) * rx + cx;\r\n                        yi = mathSin(endAngle) * ry + cy;\r\n                        break;\r\n                    case CMD.R:\r\n                        x0 = xi = data[i++];\r\n                        y0 = yi = data[i++];\r\n                        var width = data[i++];\r\n                        var height = data[i++];\r\n                        // Use fromLine\r\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\r\n                        break;\r\n                    case CMD.Z:\r\n                        xi = x0;\r\n                        yi = y0;\r\n                        break;\r\n                }\r\n\r\n                // Union\r\n                vec2.min(min, min, min2);\r\n                vec2.max(max, max, max2);\r\n            }\r\n\r\n            // No data\r\n            if (i === 0) {\r\n                min[0] = min[1] = max[0] = max[1] = 0;\r\n            }\r\n\r\n            return new BoundingRect(\r\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\r\n            );\r\n        },\r\n\r\n        /**\r\n         * Rebuild path from current data\r\n         * Rebuild path will not consider javascript implemented line dash.\r\n         * @param {CanvasRenderingContext} ctx\r\n         */\r\n        rebuildPath: function (ctx) {\r\n            var d = this.data;\r\n            var x0, y0;\r\n            var xi, yi;\r\n            var x, y;\r\n            var ux = this._ux;\r\n            var uy = this._uy;\r\n            var len = this._len;\r\n            for (var i = 0; i < len;) {\r\n                var cmd = d[i++];\r\n\r\n                if (i == 1) {\r\n                    // 如果第一个命令是 L, C, Q\r\n                    // 则 previous point 同绘制命令的第一个 point\r\n                    //\r\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\r\n                    xi = d[i];\r\n                    yi = d[i + 1];\r\n\r\n                    x0 = xi;\r\n                    y0 = yi;\r\n                }\r\n                switch (cmd) {\r\n                    case CMD.M:\r\n                        x0 = xi = d[i++];\r\n                        y0 = yi = d[i++];\r\n                        ctx.moveTo(xi, yi);\r\n                        break;\r\n                    case CMD.L:\r\n                        x = d[i++];\r\n                        y = d[i++];\r\n                        // Not draw too small seg between\r\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\r\n                            ctx.lineTo(x, y);\r\n                            xi = x;\r\n                            yi = y;\r\n                        }\r\n                        break;\r\n                    case CMD.C:\r\n                        ctx.bezierCurveTo(\r\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\r\n                        );\r\n                        xi = d[i - 2];\r\n                        yi = d[i - 1];\r\n                        break;\r\n                    case CMD.Q:\r\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\r\n                        xi = d[i - 2];\r\n                        yi = d[i - 1];\r\n                        break;\r\n                    case CMD.A:\r\n                        var cx = d[i++];\r\n                        var cy = d[i++];\r\n                        var rx = d[i++];\r\n                        var ry = d[i++];\r\n                        var theta = d[i++];\r\n                        var dTheta = d[i++];\r\n                        var psi = d[i++];\r\n                        var fs = d[i++];\r\n                        var r = (rx > ry) ? rx : ry;\r\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\r\n                        var scaleY = (rx > ry) ? ry / rx : 1;\r\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\r\n                        var endAngle = theta + dTheta;\r\n                        if (isEllipse) {\r\n                            ctx.translate(cx, cy);\r\n                            ctx.rotate(psi);\r\n                            ctx.scale(scaleX, scaleY);\r\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\r\n                            ctx.scale(1 / scaleX, 1 / scaleY);\r\n                            ctx.rotate(-psi);\r\n                            ctx.translate(-cx, -cy);\r\n                        }\r\n                        else {\r\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\r\n                        }\r\n\r\n                        if (i == 1) {\r\n                            // 直接使用 arc 命令\r\n                            // 第一个命令起点还未定义\r\n                            x0 = mathCos(theta) * rx + cx;\r\n                            y0 = mathSin(theta) * ry + cy;\r\n                        }\r\n                        xi = mathCos(endAngle) * rx + cx;\r\n                        yi = mathSin(endAngle) * ry + cy;\r\n                        break;\r\n                    case CMD.R:\r\n                        x0 = xi = d[i];\r\n                        y0 = yi = d[i + 1];\r\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\r\n                        break;\r\n                    case CMD.Z:\r\n                        ctx.closePath();\r\n                        xi = x0;\r\n                        yi = y0;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    PathProxy.CMD = CMD;\r\n\r\n    module.exports = PathProxy;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/core/PathProxy.js\n ** module id = 571\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","'use strict';\r\n/**\r\n * 曲线辅助模块\r\n * @module zrender/core/curve\r\n * @author pissang(https://www.github.com/pissang)\r\n */\r\n\r\n\r\n    var vec2 = require('./vector');\r\n    var v2Create = vec2.create;\r\n    var v2DistSquare = vec2.distSquare;\r\n    var mathPow = Math.pow;\r\n    var mathSqrt = Math.sqrt;\r\n\r\n    var EPSILON = 1e-8;\r\n    var EPSILON_NUMERIC = 1e-4;\r\n\r\n    var THREE_SQRT = mathSqrt(3);\r\n    var ONE_THIRD = 1 / 3;\r\n\r\n    // 临时变量\r\n    var _v0 = v2Create();\r\n    var _v1 = v2Create();\r\n    var _v2 = v2Create();\r\n    // var _v3 = vec2.create();\r\n\r\n    function isAroundZero(val) {\r\n        return val > -EPSILON && val < EPSILON;\r\n    }\r\n    function isNotAroundZero(val) {\r\n        return val > EPSILON || val < -EPSILON;\r\n    }\r\n    /**\r\n     * 计算三次贝塞尔值\r\n     * @memberOf module:zrender/core/curve\r\n     * @param  {number} p0\r\n     * @param  {number} p1\r\n     * @param  {number} p2\r\n     * @param  {number} p3\r\n     * @param  {number} t\r\n     * @return {number}\r\n     */\r\n    function cubicAt(p0, p1, p2, p3, t) {\r\n        var onet = 1 - t;\r\n        return onet * onet * (onet * p0 + 3 * t * p1)\r\n             + t * t * (t * p3 + 3 * onet * p2);\r\n    }\r\n\r\n    /**\r\n     * 计算三次贝塞尔导数值\r\n     * @memberOf module:zrender/core/curve\r\n     * @param  {number} p0\r\n     * @param  {number} p1\r\n     * @param  {number} p2\r\n     * @param  {number} p3\r\n     * @param  {number} t\r\n     * @return {number}\r\n     */\r\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\r\n        var onet = 1 - t;\r\n        return 3 * (\r\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\r\n            + (p3 - p2) * t * t\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 计算三次贝塞尔方程根，使用盛金公式\r\n     * @memberOf module:zrender/core/curve\r\n     * @param  {number} p0\r\n     * @param  {number} p1\r\n     * @param  {number} p2\r\n     * @param  {number} p3\r\n     * @param  {number} val\r\n     * @param  {Array.<number>} roots\r\n     * @return {number} 有效根数目\r\n     */\r\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\r\n        // Evaluate roots of cubic functions\r\n        var a = p3 + 3 * (p1 - p2) - p0;\r\n        var b = 3 * (p2 - p1 * 2 + p0);\r\n        var c = 3 * (p1  - p0);\r\n        var d = p0 - val;\r\n\r\n        var A = b * b - 3 * a * c;\r\n        var B = b * c - 9 * a * d;\r\n        var C = c * c - 3 * b * d;\r\n\r\n        var n = 0;\r\n\r\n        if (isAroundZero(A) && isAroundZero(B)) {\r\n            if (isAroundZero(b)) {\r\n                roots[0] = 0;\r\n            }\r\n            else {\r\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\r\n                if (t1 >= 0 && t1 <= 1) {\r\n                    roots[n++] = t1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var disc = B * B - 4 * A * C;\r\n\r\n            if (isAroundZero(disc)) {\r\n                var K = B / A;\r\n                var t1 = -b / a + K;  // t1, a is not zero\r\n                var t2 = -K / 2;  // t2, t3\r\n                if (t1 >= 0 && t1 <= 1) {\r\n                    roots[n++] = t1;\r\n                }\r\n                if (t2 >= 0 && t2 <= 1) {\r\n                    roots[n++] = t2;\r\n                }\r\n            }\r\n            else if (disc > 0) {\r\n                var discSqrt = mathSqrt(disc);\r\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\r\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\r\n                if (Y1 < 0) {\r\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\r\n                }\r\n                else {\r\n                    Y1 = mathPow(Y1, ONE_THIRD);\r\n                }\r\n                if (Y2 < 0) {\r\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\r\n                }\r\n                else {\r\n                    Y2 = mathPow(Y2, ONE_THIRD);\r\n                }\r\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\r\n                if (t1 >= 0 && t1 <= 1) {\r\n                    roots[n++] = t1;\r\n                }\r\n            }\r\n            else {\r\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\r\n                var theta = Math.acos(T) / 3;\r\n                var ASqrt = mathSqrt(A);\r\n                var tmp = Math.cos(theta);\r\n\r\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\r\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\r\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\r\n                if (t1 >= 0 && t1 <= 1) {\r\n                    roots[n++] = t1;\r\n                }\r\n                if (t2 >= 0 && t2 <= 1) {\r\n                    roots[n++] = t2;\r\n                }\r\n                if (t3 >= 0 && t3 <= 1) {\r\n                    roots[n++] = t3;\r\n                }\r\n            }\r\n        }\r\n        return n;\r\n    }\r\n\r\n    /**\r\n     * 计算三次贝塞尔方程极限值的位置\r\n     * @memberOf module:zrender/core/curve\r\n     * @param  {number} p0\r\n     * @param  {number} p1\r\n     * @param  {number} p2\r\n     * @param  {number} p3\r\n     * @param  {Array.<number>} extrema\r\n     * @return {number} 有效数目\r\n     */\r\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\r\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\r\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\r\n        var c = 3 * p1 - 3 * p0;\r\n\r\n        var n = 0;\r\n        if (isAroundZero(a)) {\r\n            if (isNotAroundZero(b)) {\r\n                var t1 = -c / b;\r\n                if (t1 >= 0 && t1 <=1) {\r\n                    extrema[n++] = t1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var disc = b * b - 4 * a * c;\r\n            if (isAroundZero(disc)) {\r\n                extrema[0] = -b / (2 * a);\r\n            }\r\n            else if (disc > 0) {\r\n                var discSqrt = mathSqrt(disc);\r\n                var t1 = (-b + discSqrt) / (2 * a);\r\n                var t2 = (-b - discSqrt) / (2 * a);\r\n                if (t1 >= 0 && t1 <= 1) {\r\n                    extrema[n++] = t1;\r\n                }\r\n                if (t2 >= 0 && t2 <= 1) {\r\n                    extrema[n++] = t2;\r\n                }\r\n            }\r\n        }\r\n        return n;\r\n    }\r\n\r\n    /**\r\n     * 细分三次贝塞尔曲线\r\n     * @memberOf module:zrender/core/curve\r\n     * @param  {number} p0\r\n     * @param  {number} p1\r\n     * @param  {number} p2\r\n     * @param  {number} p3\r\n     * @param  {number} t\r\n     * @param  {Array.<number>} out\r\n     */\r\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\r\n        var p01 = (p1 - p0) * t + p0;\r\n        var p12 = (p2 - p1) * t + p1;\r\n        var p23 = (p3 - p2) * t + p2;\r\n\r\n        var p012 = (p12 - p01) * t + p01;\r\n        var p123 = (p23 - p12) * t + p12;\r\n\r\n        var p0123 = (p123 - p012) * t + p012;\r\n        // Seg0\r\n        out[0] = p0;\r\n        out[1] = p01;\r\n        out[2] = p012;\r\n        out[3] = p0123;\r\n        // Seg1\r\n        out[4] = p0123;\r\n        out[5] = p123;\r\n        out[6] = p23;\r\n        out[7] = p3;\r\n    }\r\n\r\n    /**\r\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\r\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\r\n     * @param {number} x0\r\n     * @param {number} y0\r\n     * @param {number} x1\r\n     * @param {number} y1\r\n     * @param {number} x2\r\n     * @param {number} y2\r\n     * @param {number} x3\r\n     * @param {number} y3\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {Array.<number>} [out] 投射点\r\n     * @return {number}\r\n     */\r\n    function cubicProjectPoint(\r\n        x0, y0, x1, y1, x2, y2, x3, y3,\r\n        x, y, out\r\n    ) {\r\n        // http://pomax.github.io/bezierinfo/#projections\r\n        var t;\r\n        var interval = 0.005;\r\n        var d = Infinity;\r\n        var prev;\r\n        var next;\r\n        var d1;\r\n        var d2;\r\n\r\n        _v0[0] = x;\r\n        _v0[1] = y;\r\n\r\n        // 先粗略估计一下可能的最小距离的 t 值\r\n        // PENDING\r\n        for (var _t = 0; _t < 1; _t += 0.05) {\r\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\r\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\r\n            d1 = v2DistSquare(_v0, _v1);\r\n            if (d1 < d) {\r\n                t = _t;\r\n                d = d1;\r\n            }\r\n        }\r\n        d = Infinity;\r\n\r\n        // At most 32 iteration\r\n        for (var i = 0; i < 32; i++) {\r\n            if (interval < EPSILON_NUMERIC) {\r\n                break;\r\n            }\r\n            prev = t - interval;\r\n            next = t + interval;\r\n            // t - interval\r\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\r\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\r\n\r\n            d1 = v2DistSquare(_v1, _v0);\r\n\r\n            if (prev >= 0 && d1 < d) {\r\n                t = prev;\r\n                d = d1;\r\n            }\r\n            else {\r\n                // t + interval\r\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\r\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\r\n                d2 = v2DistSquare(_v2, _v0);\r\n\r\n                if (next <= 1 && d2 < d) {\r\n                    t = next;\r\n                    d = d2;\r\n                }\r\n                else {\r\n                    interval *= 0.5;\r\n                }\r\n            }\r\n        }\r\n        // t\r\n        if (out) {\r\n            out[0] = cubicAt(x0, x1, x2, x3, t);\r\n            out[1] = cubicAt(y0, y1, y2, y3, t);\r\n        }\r\n        // console.log(interval, i);\r\n        return mathSqrt(d);\r\n    }\r\n\r\n    /**\r\n     * 计算二次方贝塞尔值\r\n     * @param  {number} p0\r\n     * @param  {number} p1\r\n     * @param  {number} p2\r\n     * @param  {number} t\r\n     * @return {number}\r\n     */\r\n    function quadraticAt(p0, p1, p2, t) {\r\n        var onet = 1 - t;\r\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\r\n    }\r\n\r\n    /**\r\n     * 计算二次方贝塞尔导数值\r\n     * @param  {number} p0\r\n     * @param  {number} p1\r\n     * @param  {number} p2\r\n     * @param  {number} t\r\n     * @return {number}\r\n     */\r\n    function quadraticDerivativeAt(p0, p1, p2, t) {\r\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\r\n    }\r\n\r\n    /**\r\n     * 计算二次方贝塞尔方程根\r\n     * @param  {number} p0\r\n     * @param  {number} p1\r\n     * @param  {number} p2\r\n     * @param  {number} t\r\n     * @param  {Array.<number>} roots\r\n     * @return {number} 有效根数目\r\n     */\r\n    function quadraticRootAt(p0, p1, p2, val, roots) {\r\n        var a = p0 - 2 * p1 + p2;\r\n        var b = 2 * (p1 - p0);\r\n        var c = p0 - val;\r\n\r\n        var n = 0;\r\n        if (isAroundZero(a)) {\r\n            if (isNotAroundZero(b)) {\r\n                var t1 = -c / b;\r\n                if (t1 >= 0 && t1 <= 1) {\r\n                    roots[n++] = t1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var disc = b * b - 4 * a * c;\r\n            if (isAroundZero(disc)) {\r\n                var t1 = -b / (2 * a);\r\n                if (t1 >= 0 && t1 <= 1) {\r\n                    roots[n++] = t1;\r\n                }\r\n            }\r\n            else if (disc > 0) {\r\n                var discSqrt = mathSqrt(disc);\r\n                var t1 = (-b + discSqrt) / (2 * a);\r\n                var t2 = (-b - discSqrt) / (2 * a);\r\n                if (t1 >= 0 && t1 <= 1) {\r\n                    roots[n++] = t1;\r\n                }\r\n                if (t2 >= 0 && t2 <= 1) {\r\n                    roots[n++] = t2;\r\n                }\r\n            }\r\n        }\r\n        return n;\r\n    }\r\n\r\n    /**\r\n     * 计算二次贝塞尔方程极限值\r\n     * @memberOf module:zrender/core/curve\r\n     * @param  {number} p0\r\n     * @param  {number} p1\r\n     * @param  {number} p2\r\n     * @return {number}\r\n     */\r\n    function quadraticExtremum(p0, p1, p2) {\r\n        var divider = p0 + p2 - 2 * p1;\r\n        if (divider === 0) {\r\n            // p1 is center of p0 and p2\r\n            return 0.5;\r\n        }\r\n        else {\r\n            return (p0 - p1) / divider;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 细分二次贝塞尔曲线\r\n     * @memberOf module:zrender/core/curve\r\n     * @param  {number} p0\r\n     * @param  {number} p1\r\n     * @param  {number} p2\r\n     * @param  {number} t\r\n     * @param  {Array.<number>} out\r\n     */\r\n    function quadraticSubdivide(p0, p1, p2, t, out) {\r\n        var p01 = (p1 - p0) * t + p0;\r\n        var p12 = (p2 - p1) * t + p1;\r\n        var p012 = (p12 - p01) * t + p01;\r\n\r\n        // Seg0\r\n        out[0] = p0;\r\n        out[1] = p01;\r\n        out[2] = p012;\r\n\r\n        // Seg1\r\n        out[3] = p012;\r\n        out[4] = p12;\r\n        out[5] = p2;\r\n    }\r\n\r\n    /**\r\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\r\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\r\n     * @param {number} x0\r\n     * @param {number} y0\r\n     * @param {number} x1\r\n     * @param {number} y1\r\n     * @param {number} x2\r\n     * @param {number} y2\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {Array.<number>} out 投射点\r\n     * @return {number}\r\n     */\r\n    function quadraticProjectPoint(\r\n        x0, y0, x1, y1, x2, y2,\r\n        x, y, out\r\n    ) {\r\n        // http://pomax.github.io/bezierinfo/#projections\r\n        var t;\r\n        var interval = 0.005;\r\n        var d = Infinity;\r\n\r\n        _v0[0] = x;\r\n        _v0[1] = y;\r\n\r\n        // 先粗略估计一下可能的最小距离的 t 值\r\n        // PENDING\r\n        for (var _t = 0; _t < 1; _t += 0.05) {\r\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\r\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\r\n            var d1 = v2DistSquare(_v0, _v1);\r\n            if (d1 < d) {\r\n                t = _t;\r\n                d = d1;\r\n            }\r\n        }\r\n        d = Infinity;\r\n\r\n        // At most 32 iteration\r\n        for (var i = 0; i < 32; i++) {\r\n            if (interval < EPSILON_NUMERIC) {\r\n                break;\r\n            }\r\n            var prev = t - interval;\r\n            var next = t + interval;\r\n            // t - interval\r\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\r\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\r\n\r\n            var d1 = v2DistSquare(_v1, _v0);\r\n\r\n            if (prev >= 0 && d1 < d) {\r\n                t = prev;\r\n                d = d1;\r\n            }\r\n            else {\r\n                // t + interval\r\n                _v2[0] = quadraticAt(x0, x1, x2, next);\r\n                _v2[1] = quadraticAt(y0, y1, y2, next);\r\n                var d2 = v2DistSquare(_v2, _v0);\r\n                if (next <= 1 && d2 < d) {\r\n                    t = next;\r\n                    d = d2;\r\n                }\r\n                else {\r\n                    interval *= 0.5;\r\n                }\r\n            }\r\n        }\r\n        // t\r\n        if (out) {\r\n            out[0] = quadraticAt(x0, x1, x2, t);\r\n            out[1] = quadraticAt(y0, y1, y2, t);\r\n        }\r\n        // console.log(interval, i);\r\n        return mathSqrt(d);\r\n    }\r\n\r\n    module.exports = {\r\n\r\n        cubicAt: cubicAt,\r\n\r\n        cubicDerivativeAt: cubicDerivativeAt,\r\n\r\n        cubicRootAt: cubicRootAt,\r\n\r\n        cubicExtrema: cubicExtrema,\r\n\r\n        cubicSubdivide: cubicSubdivide,\r\n\r\n        cubicProjectPoint: cubicProjectPoint,\r\n\r\n        quadraticAt: quadraticAt,\r\n\r\n        quadraticDerivativeAt: quadraticDerivativeAt,\r\n\r\n        quadraticRootAt: quadraticRootAt,\r\n\r\n        quadraticExtremum: quadraticExtremum,\r\n\r\n        quadraticSubdivide: quadraticSubdivide,\r\n\r\n        quadraticProjectPoint: quadraticProjectPoint\r\n    };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/core/curve.js\n ** module id = 572\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","/**\r\n * @author Yi Shen(https://github.com/pissang)\r\n */\r\n\r\n\r\n    var vec2 = require('./vector');\r\n    var curve = require('./curve');\r\n\r\n    var bbox = {};\r\n    var mathMin = Math.min;\r\n    var mathMax = Math.max;\r\n    var mathSin = Math.sin;\r\n    var mathCos = Math.cos;\r\n\r\n    var start = vec2.create();\r\n    var end = vec2.create();\r\n    var extremity = vec2.create();\r\n\r\n    var PI2 = Math.PI * 2;\r\n    /**\r\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\r\n     * @module zrender/core/bbox\r\n     * @param {Array<Object>} points 顶点数组\r\n     * @param {number} min\r\n     * @param {number} max\r\n     */\r\n    bbox.fromPoints = function(points, min, max) {\r\n        if (points.length === 0) {\r\n            return;\r\n        }\r\n        var p = points[0];\r\n        var left = p[0];\r\n        var right = p[0];\r\n        var top = p[1];\r\n        var bottom = p[1];\r\n        var i;\r\n\r\n        for (i = 1; i < points.length; i++) {\r\n            p = points[i];\r\n            left = mathMin(left, p[0]);\r\n            right = mathMax(right, p[0]);\r\n            top = mathMin(top, p[1]);\r\n            bottom = mathMax(bottom, p[1]);\r\n        }\r\n\r\n        min[0] = left;\r\n        min[1] = top;\r\n        max[0] = right;\r\n        max[1] = bottom;\r\n    };\r\n\r\n    /**\r\n     * @memberOf module:zrender/core/bbox\r\n     * @param {number} x0\r\n     * @param {number} y0\r\n     * @param {number} x1\r\n     * @param {number} y1\r\n     * @param {Array.<number>} min\r\n     * @param {Array.<number>} max\r\n     */\r\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\r\n        min[0] = mathMin(x0, x1);\r\n        min[1] = mathMin(y0, y1);\r\n        max[0] = mathMax(x0, x1);\r\n        max[1] = mathMax(y0, y1);\r\n    };\r\n\r\n    var xDim = [];\r\n    var yDim = [];\r\n    /**\r\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\r\n     * @memberOf module:zrender/core/bbox\r\n     * @param {number} x0\r\n     * @param {number} y0\r\n     * @param {number} x1\r\n     * @param {number} y1\r\n     * @param {number} x2\r\n     * @param {number} y2\r\n     * @param {number} x3\r\n     * @param {number} y3\r\n     * @param {Array.<number>} min\r\n     * @param {Array.<number>} max\r\n     */\r\n    bbox.fromCubic = function(\r\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\r\n    ) {\r\n        var cubicExtrema = curve.cubicExtrema;\r\n        var cubicAt = curve.cubicAt;\r\n        var i;\r\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\r\n        min[0] = Infinity;\r\n        min[1] = Infinity;\r\n        max[0] = -Infinity;\r\n        max[1] = -Infinity;\r\n\r\n        for (i = 0; i < n; i++) {\r\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\r\n            min[0] = mathMin(x, min[0]);\r\n            max[0] = mathMax(x, max[0]);\r\n        }\r\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\r\n        for (i = 0; i < n; i++) {\r\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\r\n            min[1] = mathMin(y, min[1]);\r\n            max[1] = mathMax(y, max[1]);\r\n        }\r\n\r\n        min[0] = mathMin(x0, min[0]);\r\n        max[0] = mathMax(x0, max[0]);\r\n        min[0] = mathMin(x3, min[0]);\r\n        max[0] = mathMax(x3, max[0]);\r\n\r\n        min[1] = mathMin(y0, min[1]);\r\n        max[1] = mathMax(y0, max[1]);\r\n        min[1] = mathMin(y3, min[1]);\r\n        max[1] = mathMax(y3, max[1]);\r\n    };\r\n\r\n    /**\r\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\r\n     * @memberOf module:zrender/core/bbox\r\n     * @param {number} x0\r\n     * @param {number} y0\r\n     * @param {number} x1\r\n     * @param {number} y1\r\n     * @param {number} x2\r\n     * @param {number} y2\r\n     * @param {Array.<number>} min\r\n     * @param {Array.<number>} max\r\n     */\r\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\r\n        var quadraticExtremum = curve.quadraticExtremum;\r\n        var quadraticAt = curve.quadraticAt;\r\n        // Find extremities, where derivative in x dim or y dim is zero\r\n        var tx =\r\n            mathMax(\r\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\r\n            );\r\n        var ty =\r\n            mathMax(\r\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\r\n            );\r\n\r\n        var x = quadraticAt(x0, x1, x2, tx);\r\n        var y = quadraticAt(y0, y1, y2, ty);\r\n\r\n        min[0] = mathMin(x0, x2, x);\r\n        min[1] = mathMin(y0, y2, y);\r\n        max[0] = mathMax(x0, x2, x);\r\n        max[1] = mathMax(y0, y2, y);\r\n    };\r\n\r\n    /**\r\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\r\n     * @method\r\n     * @memberOf module:zrender/core/bbox\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {number} rx\r\n     * @param {number} ry\r\n     * @param {number} startAngle\r\n     * @param {number} endAngle\r\n     * @param {number} anticlockwise\r\n     * @param {Array.<number>} min\r\n     * @param {Array.<number>} max\r\n     */\r\n    bbox.fromArc = function (\r\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\r\n    ) {\r\n        var vec2Min = vec2.min;\r\n        var vec2Max = vec2.max;\r\n\r\n        var diff = Math.abs(startAngle - endAngle);\r\n\r\n\r\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\r\n            // Is a circle\r\n            min[0] = x - rx;\r\n            min[1] = y - ry;\r\n            max[0] = x + rx;\r\n            max[1] = y + ry;\r\n            return;\r\n        }\r\n\r\n        start[0] = mathCos(startAngle) * rx + x;\r\n        start[1] = mathSin(startAngle) * ry + y;\r\n\r\n        end[0] = mathCos(endAngle) * rx + x;\r\n        end[1] = mathSin(endAngle) * ry + y;\r\n\r\n        vec2Min(min, start, end);\r\n        vec2Max(max, start, end);\r\n\r\n        // Thresh to [0, Math.PI * 2]\r\n        startAngle = startAngle % (PI2);\r\n        if (startAngle < 0) {\r\n            startAngle = startAngle + PI2;\r\n        }\r\n        endAngle = endAngle % (PI2);\r\n        if (endAngle < 0) {\r\n            endAngle = endAngle + PI2;\r\n        }\r\n\r\n        if (startAngle > endAngle && !anticlockwise) {\r\n            endAngle += PI2;\r\n        }\r\n        else if (startAngle < endAngle && anticlockwise) {\r\n            startAngle += PI2;\r\n        }\r\n        if (anticlockwise) {\r\n            var tmp = endAngle;\r\n            endAngle = startAngle;\r\n            startAngle = tmp;\r\n        }\r\n\r\n        // var number = 0;\r\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\r\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\r\n            if (angle > startAngle) {\r\n                extremity[0] = mathCos(angle) * rx + x;\r\n                extremity[1] = mathSin(angle) * ry + y;\r\n\r\n                vec2Min(min, extremity, min);\r\n                vec2Max(max, extremity, max);\r\n            }\r\n        }\r\n    };\r\n\r\n    module.exports = bbox;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/core/bbox.js\n ** module id = 573\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","'use strict';\r\n\r\n\r\n    var CMD = require('../core/PathProxy').CMD;\r\n    var line = require('./line');\r\n    var cubic = require('./cubic');\r\n    var quadratic = require('./quadratic');\r\n    var arc = require('./arc');\r\n    var normalizeRadian = require('./util').normalizeRadian;\r\n    var curve = require('../core/curve');\r\n\r\n    var windingLine = require('./windingLine');\r\n\r\n    var containStroke = line.containStroke;\r\n\r\n    var PI2 = Math.PI * 2;\r\n\r\n    var EPSILON = 1e-4;\r\n\r\n    function isAroundEqual(a, b) {\r\n        return Math.abs(a - b) < EPSILON;\r\n    }\r\n\r\n    // 临时数组\r\n    var roots = [-1, -1, -1];\r\n    var extrema = [-1, -1];\r\n\r\n    function swapExtrema() {\r\n        var tmp = extrema[0];\r\n        extrema[0] = extrema[1];\r\n        extrema[1] = tmp;\r\n    }\r\n\r\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\r\n        // Quick reject\r\n        if (\r\n            (y > y0 && y > y1 && y > y2 && y > y3)\r\n            || (y < y0 && y < y1 && y < y2 && y < y3)\r\n        ) {\r\n            return 0;\r\n        }\r\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\r\n        if (nRoots === 0) {\r\n            return 0;\r\n        }\r\n        else {\r\n            var w = 0;\r\n            var nExtrema = -1;\r\n            var y0_, y1_;\r\n            for (var i = 0; i < nRoots; i++) {\r\n                var t = roots[i];\r\n\r\n                // Avoid winding error when intersection point is the connect point of two line of polygon\r\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\r\n\r\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\r\n                if (x_ < x) { // Quick reject\r\n                    continue;\r\n                }\r\n                if (nExtrema < 0) {\r\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\r\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\r\n                        swapExtrema();\r\n                    }\r\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\r\n                    if (nExtrema > 1) {\r\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\r\n                    }\r\n                }\r\n                if (nExtrema == 2) {\r\n                    // 分成三段单调函数\r\n                    if (t < extrema[0]) {\r\n                        w += y0_ < y0 ? unit : -unit;\r\n                    }\r\n                    else if (t < extrema[1]) {\r\n                        w += y1_ < y0_ ? unit : -unit;\r\n                    }\r\n                    else {\r\n                        w += y3 < y1_ ? unit : -unit;\r\n                    }\r\n                }\r\n                else {\r\n                    // 分成两段单调函数\r\n                    if (t < extrema[0]) {\r\n                        w += y0_ < y0 ? unit : -unit;\r\n                    }\r\n                    else {\r\n                        w += y3 < y0_ ? unit : -unit;\r\n                    }\r\n                }\r\n            }\r\n            return w;\r\n        }\r\n    }\r\n\r\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\r\n        // Quick reject\r\n        if (\r\n            (y > y0 && y > y1 && y > y2)\r\n            || (y < y0 && y < y1 && y < y2)\r\n        ) {\r\n            return 0;\r\n        }\r\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\r\n        if (nRoots === 0) {\r\n            return 0;\r\n        }\r\n        else {\r\n            var t = curve.quadraticExtremum(y0, y1, y2);\r\n            if (t >= 0 && t <= 1) {\r\n                var w = 0;\r\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\r\n                for (var i = 0; i < nRoots; i++) {\r\n                    // Remove one endpoint.\r\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\r\n\r\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\r\n                    if (x_ < x) {   // Quick reject\r\n                        continue;\r\n                    }\r\n                    if (roots[i] < t) {\r\n                        w += y_ < y0 ? unit : -unit;\r\n                    }\r\n                    else {\r\n                        w += y2 < y_ ? unit : -unit;\r\n                    }\r\n                }\r\n                return w;\r\n            }\r\n            else {\r\n                // Remove one endpoint.\r\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\r\n\r\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\r\n                if (x_ < x) {   // Quick reject\r\n                    return 0;\r\n                }\r\n                return y2 < y0 ? unit : -unit;\r\n            }\r\n        }\r\n    }\r\n\r\n    // TODO\r\n    // Arc 旋转\r\n    function windingArc(\r\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\r\n    ) {\r\n        y -= cy;\r\n        if (y > r || y < -r) {\r\n            return 0;\r\n        }\r\n        var tmp = Math.sqrt(r * r - y * y);\r\n        roots[0] = -tmp;\r\n        roots[1] = tmp;\r\n\r\n        var diff = Math.abs(startAngle - endAngle);\r\n        if (diff < 1e-4) {\r\n            return 0;\r\n        }\r\n        if (diff % PI2 < 1e-4) {\r\n            // Is a circle\r\n            startAngle = 0;\r\n            endAngle = PI2;\r\n            var dir = anticlockwise ? 1 : -1;\r\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\r\n                return dir;\r\n            } else {\r\n                return 0;\r\n            }\r\n        }\r\n\r\n        if (anticlockwise) {\r\n            var tmp = startAngle;\r\n            startAngle = normalizeRadian(endAngle);\r\n            endAngle = normalizeRadian(tmp);\r\n        }\r\n        else {\r\n            startAngle = normalizeRadian(startAngle);\r\n            endAngle = normalizeRadian(endAngle);\r\n        }\r\n        if (startAngle > endAngle) {\r\n            endAngle += PI2;\r\n        }\r\n\r\n        var w = 0;\r\n        for (var i = 0; i < 2; i++) {\r\n            var x_ = roots[i];\r\n            if (x_ + cx > x) {\r\n                var angle = Math.atan2(y, x_);\r\n                var dir = anticlockwise ? 1 : -1;\r\n                if (angle < 0) {\r\n                    angle = PI2 + angle;\r\n                }\r\n                if (\r\n                    (angle >= startAngle && angle <= endAngle)\r\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\r\n                ) {\r\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\r\n                        dir = -dir;\r\n                    }\r\n                    w += dir;\r\n                }\r\n            }\r\n        }\r\n        return w;\r\n    }\r\n\r\n    function containPath(data, lineWidth, isStroke, x, y) {\r\n        var w = 0;\r\n        var xi = 0;\r\n        var yi = 0;\r\n        var x0 = 0;\r\n        var y0 = 0;\r\n\r\n        for (var i = 0; i < data.length;) {\r\n            var cmd = data[i++];\r\n            // Begin a new subpath\r\n            if (cmd === CMD.M && i > 1) {\r\n                // Close previous subpath\r\n                if (!isStroke) {\r\n                    w += windingLine(xi, yi, x0, y0, x, y);\r\n                }\r\n                // 如果被任何一个 subpath 包含\r\n                // if (w !== 0) {\r\n                //     return true;\r\n                // }\r\n            }\r\n\r\n            if (i == 1) {\r\n                // 如果第一个命令是 L, C, Q\r\n                // 则 previous point 同绘制命令的第一个 point\r\n                //\r\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\r\n                xi = data[i];\r\n                yi = data[i + 1];\r\n\r\n                x0 = xi;\r\n                y0 = yi;\r\n            }\r\n\r\n            switch (cmd) {\r\n                case CMD.M:\r\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\r\n                    // 在 closePath 的时候使用\r\n                    x0 = data[i++];\r\n                    y0 = data[i++];\r\n                    xi = x0;\r\n                    yi = y0;\r\n                    break;\r\n                case CMD.L:\r\n                    if (isStroke) {\r\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\r\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\r\n                    }\r\n                    xi = data[i++];\r\n                    yi = data[i++];\r\n                    break;\r\n                case CMD.C:\r\n                    if (isStroke) {\r\n                        if (cubic.containStroke(xi, yi,\r\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\r\n                            lineWidth, x, y\r\n                        )) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        w += windingCubic(\r\n                            xi, yi,\r\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\r\n                            x, y\r\n                        ) || 0;\r\n                    }\r\n                    xi = data[i++];\r\n                    yi = data[i++];\r\n                    break;\r\n                case CMD.Q:\r\n                    if (isStroke) {\r\n                        if (quadratic.containStroke(xi, yi,\r\n                            data[i++], data[i++], data[i], data[i + 1],\r\n                            lineWidth, x, y\r\n                        )) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        w += windingQuadratic(\r\n                            xi, yi,\r\n                            data[i++], data[i++], data[i], data[i + 1],\r\n                            x, y\r\n                        ) || 0;\r\n                    }\r\n                    xi = data[i++];\r\n                    yi = data[i++];\r\n                    break;\r\n                case CMD.A:\r\n                    // TODO Arc 判断的开销比较大\r\n                    var cx = data[i++];\r\n                    var cy = data[i++];\r\n                    var rx = data[i++];\r\n                    var ry = data[i++];\r\n                    var theta = data[i++];\r\n                    var dTheta = data[i++];\r\n                    // TODO Arc 旋转\r\n                    var psi = data[i++];\r\n                    var anticlockwise = 1 - data[i++];\r\n                    var x1 = Math.cos(theta) * rx + cx;\r\n                    var y1 = Math.sin(theta) * ry + cy;\r\n                    // 不是直接使用 arc 命令\r\n                    if (i > 1) {\r\n                        w += windingLine(xi, yi, x1, y1, x, y);\r\n                    }\r\n                    else {\r\n                        // 第一个命令起点还未定义\r\n                        x0 = x1;\r\n                        y0 = y1;\r\n                    }\r\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\r\n                    var _x = (x - cx) * ry / rx + cx;\r\n                    if (isStroke) {\r\n                        if (arc.containStroke(\r\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\r\n                            lineWidth, _x, y\r\n                        )) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        w += windingArc(\r\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\r\n                            _x, y\r\n                        );\r\n                    }\r\n                    xi = Math.cos(theta + dTheta) * rx + cx;\r\n                    yi = Math.sin(theta + dTheta) * ry + cy;\r\n                    break;\r\n                case CMD.R:\r\n                    x0 = xi = data[i++];\r\n                    y0 = yi = data[i++];\r\n                    var width = data[i++];\r\n                    var height = data[i++];\r\n                    var x1 = x0 + width;\r\n                    var y1 = y0 + height;\r\n                    if (isStroke) {\r\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\r\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\r\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\r\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\r\n                        ) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        // FIXME Clockwise ?\r\n                        w += windingLine(x1, y0, x1, y1, x, y);\r\n                        w += windingLine(x0, y1, x0, y0, x, y);\r\n                    }\r\n                    break;\r\n                case CMD.Z:\r\n                    if (isStroke) {\r\n                        if (containStroke(\r\n                            xi, yi, x0, y0, lineWidth, x, y\r\n                        )) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        // Close a subpath\r\n                        w += windingLine(xi, yi, x0, y0, x, y);\r\n                        // 如果被任何一个 subpath 包含\r\n                        // FIXME subpaths may overlap\r\n                        // if (w !== 0) {\r\n                        //     return true;\r\n                        // }\r\n                    }\r\n                    xi = x0;\r\n                    yi = y0;\r\n                    break;\r\n            }\r\n        }\r\n        if (!isStroke && !isAroundEqual(yi, y0)) {\r\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\r\n        }\r\n        return w !== 0;\r\n    }\r\n\r\n    module.exports = {\r\n        contain: function (pathData, x, y) {\r\n            return containPath(pathData, 0, false, x, y);\r\n        },\r\n\r\n        containStroke: function (pathData, lineWidth, x, y) {\r\n            return containPath(pathData, lineWidth, true, x, y);\r\n        }\r\n    };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/contain/path.js\n ** module id = 574\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","\r\n    module.exports = {\r\n        /**\r\n         * 线段包含判断\r\n         * @param  {number}  x0\r\n         * @param  {number}  y0\r\n         * @param  {number}  x1\r\n         * @param  {number}  y1\r\n         * @param  {number}  lineWidth\r\n         * @param  {number}  x\r\n         * @param  {number}  y\r\n         * @return {boolean}\r\n         */\r\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\r\n            if (lineWidth === 0) {\r\n                return false;\r\n            }\r\n            var _l = lineWidth;\r\n            var _a = 0;\r\n            var _b = x0;\r\n            // Quick reject\r\n            if (\r\n                (y > y0 + _l && y > y1 + _l)\r\n                || (y < y0 - _l && y < y1 - _l)\r\n                || (x > x0 + _l && x > x1 + _l)\r\n                || (x < x0 - _l && x < x1 - _l)\r\n            ) {\r\n                return false;\r\n            }\r\n\r\n            if (x0 !== x1) {\r\n                _a = (y0 - y1) / (x0 - x1);\r\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\r\n            }\r\n            else {\r\n                return Math.abs(x - x0) <= _l / 2;\r\n            }\r\n            var tmp = _a * x - y + _b;\r\n            var _s = tmp * tmp / (_a * _a + 1);\r\n            return _s <= _l / 2 * _l / 2;\r\n        }\r\n    };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/contain/line.js\n ** module id = 575\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","\r\n\r\n    var curve = require('../core/curve');\r\n\r\n    module.exports = {\r\n        /**\r\n         * 三次贝塞尔曲线描边包含判断\r\n         * @param  {number}  x0\r\n         * @param  {number}  y0\r\n         * @param  {number}  x1\r\n         * @param  {number}  y1\r\n         * @param  {number}  x2\r\n         * @param  {number}  y2\r\n         * @param  {number}  x3\r\n         * @param  {number}  y3\r\n         * @param  {number}  lineWidth\r\n         * @param  {number}  x\r\n         * @param  {number}  y\r\n         * @return {boolean}\r\n         */\r\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\r\n            if (lineWidth === 0) {\r\n                return false;\r\n            }\r\n            var _l = lineWidth;\r\n            // Quick reject\r\n            if (\r\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\r\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\r\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\r\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\r\n            ) {\r\n                return false;\r\n            }\r\n            var d = curve.cubicProjectPoint(\r\n                x0, y0, x1, y1, x2, y2, x3, y3,\r\n                x, y, null\r\n            );\r\n            return d <= _l / 2;\r\n        }\r\n    };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/contain/cubic.js\n ** module id = 576\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","\r\n\r\n    var curve = require('../core/curve');\r\n\r\n    module.exports = {\r\n        /**\r\n         * 二次贝塞尔曲线描边包含判断\r\n         * @param  {number}  x0\r\n         * @param  {number}  y0\r\n         * @param  {number}  x1\r\n         * @param  {number}  y1\r\n         * @param  {number}  x2\r\n         * @param  {number}  y2\r\n         * @param  {number}  lineWidth\r\n         * @param  {number}  x\r\n         * @param  {number}  y\r\n         * @return {boolean}\r\n         */\r\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\r\n            if (lineWidth === 0) {\r\n                return false;\r\n            }\r\n            var _l = lineWidth;\r\n            // Quick reject\r\n            if (\r\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\r\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\r\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\r\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\r\n            ) {\r\n                return false;\r\n            }\r\n            var d = curve.quadraticProjectPoint(\r\n                x0, y0, x1, y1, x2, y2,\r\n                x, y, null\r\n            );\r\n            return d <= _l / 2;\r\n        }\r\n    };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/contain/quadratic.js\n ** module id = 577\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","\r\n\r\n    var normalizeRadian = require('./util').normalizeRadian;\r\n    var PI2 = Math.PI * 2;\r\n\r\n    module.exports = {\r\n        /**\r\n         * 圆弧描边包含判断\r\n         * @param  {number}  cx\r\n         * @param  {number}  cy\r\n         * @param  {number}  r\r\n         * @param  {number}  startAngle\r\n         * @param  {number}  endAngle\r\n         * @param  {boolean}  anticlockwise\r\n         * @param  {number} lineWidth\r\n         * @param  {number}  x\r\n         * @param  {number}  y\r\n         * @return {Boolean}\r\n         */\r\n        containStroke: function (\r\n            cx, cy, r, startAngle, endAngle, anticlockwise,\r\n            lineWidth, x, y\r\n        ) {\r\n\r\n            if (lineWidth === 0) {\r\n                return false;\r\n            }\r\n            var _l = lineWidth;\r\n\r\n            x -= cx;\r\n            y -= cy;\r\n            var d = Math.sqrt(x * x + y * y);\r\n\r\n            if ((d - _l > r) || (d + _l < r)) {\r\n                return false;\r\n            }\r\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\r\n                // Is a circle\r\n                return true;\r\n            }\r\n            if (anticlockwise) {\r\n                var tmp = startAngle;\r\n                startAngle = normalizeRadian(endAngle);\r\n                endAngle = normalizeRadian(tmp);\r\n            } else {\r\n                startAngle = normalizeRadian(startAngle);\r\n                endAngle = normalizeRadian(endAngle);\r\n            }\r\n            if (startAngle > endAngle) {\r\n                endAngle += PI2;\r\n            }\r\n\r\n            var angle = Math.atan2(y, x);\r\n            if (angle < 0) {\r\n                angle += PI2;\r\n            }\r\n            return (angle >= startAngle && angle <= endAngle)\r\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\r\n        }\r\n    };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/contain/arc.js\n ** module id = 578\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","\r\n\r\n    var PI2 = Math.PI * 2;\r\n    module.exports = {\r\n        normalizeRadian: function(angle) {\r\n            angle %= PI2;\r\n            if (angle < 0) {\r\n                angle += PI2;\r\n            }\r\n            return angle;\r\n        }\r\n    };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/contain/util.js\n ** module id = 579\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","\r\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\r\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\r\n            return 0;\r\n        }\r\n        // Ignore horizontal line\r\n        if (y1 === y0) {\r\n            return 0;\r\n        }\r\n        var dir = y1 < y0 ? 1 : -1;\r\n        var t = (y - y0) / (y1 - y0);\r\n\r\n        // Avoid winding error when intersection point is the connect point of two line of polygon\r\n        if (t === 1 || t === 0) {\r\n            dir = y1 < y0 ? 0.5 : -0.5;\r\n        }\r\n\r\n        var x_ = t * (x1 - x0) + x0;\r\n\r\n        return x_ > x ? dir : 0;\r\n    };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/contain/windingLine.js\n ** module id = 580\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","\r\n\r\n    var Pattern = function (image, repeat) {\r\n        this.image = image;\r\n        this.repeat = repeat;\r\n\r\n        // Can be cloned\r\n        this.type = 'pattern';\r\n    };\r\n\r\n    Pattern.prototype.getCanvasPattern = function (ctx) {\r\n\r\n        return this._canvasPattern\r\n            || (this._canvasPattern = ctx.createPattern(this.image, this.repeat));\r\n    };\r\n\r\n    module.exports = Pattern;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/Pattern.js\n ** module id = 581\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","\r\n\r\n    var CMD = require('../core/PathProxy').CMD;\r\n    var vec2 = require('../core/vector');\r\n    var v2ApplyTransform = vec2.applyTransform;\r\n\r\n    var points = [[], [], []];\r\n    var mathSqrt = Math.sqrt;\r\n    var mathAtan2 = Math.atan2;\r\n    function transformPath(path, m) {\r\n        var data = path.data;\r\n        var cmd;\r\n        var nPoint;\r\n        var i;\r\n        var j;\r\n        var k;\r\n        var p;\r\n\r\n        var M = CMD.M;\r\n        var C = CMD.C;\r\n        var L = CMD.L;\r\n        var R = CMD.R;\r\n        var A = CMD.A;\r\n        var Q = CMD.Q;\r\n\r\n        for (i = 0, j = 0; i < data.length;) {\r\n            cmd = data[i++];\r\n            j = i;\r\n            nPoint = 0;\r\n\r\n            switch (cmd) {\r\n                case M:\r\n                    nPoint = 1;\r\n                    break;\r\n                case L:\r\n                    nPoint = 1;\r\n                    break;\r\n                case C:\r\n                    nPoint = 3;\r\n                    break;\r\n                case Q:\r\n                    nPoint = 2;\r\n                    break;\r\n                case A:\r\n                    var x = m[4];\r\n                    var y = m[5];\r\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\r\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\r\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\r\n                    // cx\r\n                    data[i++] += x;\r\n                    // cy\r\n                    data[i++] += y;\r\n                    // Scale rx and ry\r\n                    // FIXME Assume psi is 0 here\r\n                    data[i++] *= sx;\r\n                    data[i++] *= sy;\r\n\r\n                    // Start angle\r\n                    data[i++] += angle;\r\n                    // end angle\r\n                    data[i++] += angle;\r\n                    // FIXME psi\r\n                    i += 2;\r\n                    j = i;\r\n                    break;\r\n                case R:\r\n                    // x0, y0\r\n                    p[0] = data[i++];\r\n                    p[1] = data[i++];\r\n                    v2ApplyTransform(p, p, m);\r\n                    data[j++] = p[0];\r\n                    data[j++] = p[1];\r\n                    // x1, y1\r\n                    p[0] += data[i++];\r\n                    p[1] += data[i++];\r\n                    v2ApplyTransform(p, p, m);\r\n                    data[j++] = p[0];\r\n                    data[j++] = p[1];\r\n            }\r\n\r\n            for (k = 0; k < nPoint; k++) {\r\n                var p = points[k];\r\n                p[0] = data[i++];\r\n                p[1] = data[i++];\r\n\r\n                v2ApplyTransform(p, p, m);\r\n                // Write back\r\n                data[j++] = p[0];\r\n                data[j++] = p[1];\r\n            }\r\n        }\r\n    }\r\n\r\n    module.exports = transformPath;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/tool/transformPath.js\n ** module id = 582\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","\r\n\r\n    /**\r\n     * @param {Array.<Object>} colorStops\r\n     */\r\n    var Gradient = function (colorStops) {\r\n\r\n        this.colorStops = colorStops || [];\r\n    };\r\n\r\n    Gradient.prototype = {\r\n\r\n        constructor: Gradient,\r\n\r\n        addColorStop: function (offset, color) {\r\n            this.colorStops.push({\r\n\r\n                offset: offset,\r\n\r\n                color: color\r\n            });\r\n        }\r\n    };\r\n\r\n    module.exports = Gradient;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/Gradient.js\n ** module id = 583\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","/**\r\n * Image element\r\n * @module zrender/graphic/Image\r\n */\r\n\r\n\r\n\r\n    var Displayable = require('./Displayable');\r\n    var BoundingRect = require('../core/BoundingRect');\r\n    var zrUtil = require('../core/util');\r\n\r\n    var LRU = require('../core/LRU');\r\n    var globalImageCache = new LRU(50);\r\n    /**\r\n     * @alias zrender/graphic/Image\r\n     * @extends module:zrender/graphic/Displayable\r\n     * @constructor\r\n     * @param {Object} opts\r\n     */\r\n    function ZImage(opts) {\r\n        Displayable.call(this, opts);\r\n    }\r\n\r\n    ZImage.prototype = {\r\n\r\n        constructor: ZImage,\r\n\r\n        type: 'image',\r\n\r\n        brush: function (ctx, prevEl) {\r\n            var style = this.style;\r\n            var src = style.image;\r\n            var image;\r\n\r\n            // Must bind each time\r\n            style.bind(ctx, this, prevEl);\r\n\r\n            // style.image is a url string\r\n            if (typeof src === 'string') {\r\n                image = this._image;\r\n            }\r\n            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas\r\n            else {\r\n                image = src;\r\n            }\r\n            // FIXME Case create many images with src\r\n            if (!image && src) {\r\n                // Try get from global image cache\r\n                var cachedImgObj = globalImageCache.get(src);\r\n                if (!cachedImgObj) {\r\n                    // Create a new image\r\n                    image = new Image();\r\n                    image.onload = function () {\r\n                        image.onload = null;\r\n                        for (var i = 0; i < cachedImgObj.pending.length; i++) {\r\n                            cachedImgObj.pending[i].dirty();\r\n                        }\r\n                    };\r\n                    cachedImgObj = {\r\n                        image: image,\r\n                        pending: [this]\r\n                    };\r\n                    image.src = src;\r\n                    globalImageCache.put(src, cachedImgObj);\r\n                    this._image = image;\r\n                    return;\r\n                }\r\n                else {\r\n                    image = cachedImgObj.image;\r\n                    this._image = image;\r\n                    // Image is not complete finish, add to pending list\r\n                    if (!image.width || !image.height) {\r\n                        cachedImgObj.pending.push(this);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (image) {\r\n                // 图片已经加载完成\r\n                // if (image.nodeName.toUpperCase() == 'IMG') {\r\n                //     if (!image.complete) {\r\n                //         return;\r\n                //     }\r\n                // }\r\n                // Else is canvas\r\n\r\n                var width = style.width || image.width;\r\n                var height = style.height || image.height;\r\n                var x = style.x || 0;\r\n                var y = style.y || 0;\r\n                // 图片加载失败\r\n                if (!image.width || !image.height) {\r\n                    return;\r\n                }\r\n\r\n                // 设置transform\r\n                this.setTransform(ctx);\r\n\r\n\r\n                if (style.sWidth && style.sHeight) {\r\n                    var sx = style.sx || 0;\r\n                    var sy = style.sy || 0;\r\n                    ctx.drawImage(\r\n                        image,\r\n                        sx, sy, style.sWidth, style.sHeight,\r\n                        x, y, width, height\r\n                    );\r\n                }\r\n                else if (style.sx && style.sy) {\r\n                    var sx = style.sx;\r\n                    var sy = style.sy;\r\n                    var sWidth = width - sx;\r\n                    var sHeight = height - sy;\r\n                    ctx.drawImage(\r\n                        image,\r\n                        sx, sy, sWidth, sHeight,\r\n                        x, y, width, height\r\n                    );\r\n                }\r\n                else {\r\n                    ctx.drawImage(image, x, y, width, height);\r\n                }\r\n\r\n                // 如果没设置宽和高的话自动根据图片宽高设置\r\n                if (style.width == null) {\r\n                    style.width = width;\r\n                }\r\n                if (style.height == null) {\r\n                    style.height = height;\r\n                }\r\n\r\n                this.restoreTransform(ctx);\r\n\r\n                // Draw rect text\r\n                if (style.text != null) {\r\n                    this.drawRectText(ctx, this.getBoundingRect());\r\n                }\r\n\r\n            }\r\n        },\r\n\r\n        getBoundingRect: function () {\r\n            var style = this.style;\r\n            if (! this._rect) {\r\n                this._rect = new BoundingRect(\r\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\r\n                );\r\n            }\r\n            return this._rect;\r\n        }\r\n    };\r\n\r\n    zrUtil.inherits(ZImage, Displayable);\r\n\r\n    module.exports = ZImage;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/Image.js\n ** module id = 584\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","// Simple LRU cache use doubly linked list\r\n// @module zrender/core/LRU\r\n\r\n\r\n    /**\r\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\r\n     * @constructor\r\n     */\r\n    var LinkedList = function() {\r\n\r\n        /**\r\n         * @type {module:zrender/core/LRU~Entry}\r\n         */\r\n        this.head = null;\r\n\r\n        /**\r\n         * @type {module:zrender/core/LRU~Entry}\r\n         */\r\n        this.tail = null;\r\n\r\n        this._len = 0;\r\n    };\r\n\r\n    var linkedListProto = LinkedList.prototype;\r\n    /**\r\n     * Insert a new value at the tail\r\n     * @param  {} val\r\n     * @return {module:zrender/core/LRU~Entry}\r\n     */\r\n    linkedListProto.insert = function(val) {\r\n        var entry = new Entry(val);\r\n        this.insertEntry(entry);\r\n        return entry;\r\n    };\r\n\r\n    /**\r\n     * Insert an entry at the tail\r\n     * @param  {module:zrender/core/LRU~Entry} entry\r\n     */\r\n    linkedListProto.insertEntry = function(entry) {\r\n        if (!this.head) {\r\n            this.head = this.tail = entry;\r\n        }\r\n        else {\r\n            this.tail.next = entry;\r\n            entry.prev = this.tail;\r\n            this.tail = entry;\r\n        }\r\n        this._len++;\r\n    };\r\n\r\n    /**\r\n     * Remove entry.\r\n     * @param  {module:zrender/core/LRU~Entry} entry\r\n     */\r\n    linkedListProto.remove = function(entry) {\r\n        var prev = entry.prev;\r\n        var next = entry.next;\r\n        if (prev) {\r\n            prev.next = next;\r\n        }\r\n        else {\r\n            // Is head\r\n            this.head = next;\r\n        }\r\n        if (next) {\r\n            next.prev = prev;\r\n        }\r\n        else {\r\n            // Is tail\r\n            this.tail = prev;\r\n        }\r\n        entry.next = entry.prev = null;\r\n        this._len--;\r\n    };\r\n\r\n    /**\r\n     * @return {number}\r\n     */\r\n    linkedListProto.len = function() {\r\n        return this._len;\r\n    };\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {} val\r\n     */\r\n    var Entry = function(val) {\r\n        /**\r\n         * @type {}\r\n         */\r\n        this.value = val;\r\n\r\n        /**\r\n         * @type {module:zrender/core/LRU~Entry}\r\n         */\r\n        this.next;\r\n\r\n        /**\r\n         * @type {module:zrender/core/LRU~Entry}\r\n         */\r\n        this.prev;\r\n    };\r\n\r\n    /**\r\n     * LRU Cache\r\n     * @constructor\r\n     * @alias module:zrender/core/LRU\r\n     */\r\n    var LRU = function(maxSize) {\r\n\r\n        this._list = new LinkedList();\r\n\r\n        this._map = {};\r\n\r\n        this._maxSize = maxSize || 10;\r\n    };\r\n\r\n    var LRUProto = LRU.prototype;\r\n\r\n    /**\r\n     * @param  {string} key\r\n     * @param  {} value\r\n     */\r\n    LRUProto.put = function(key, value) {\r\n        var list = this._list;\r\n        var map = this._map;\r\n        if (map[key] == null) {\r\n            var len = list.len();\r\n            if (len >= this._maxSize && len > 0) {\r\n                // Remove the least recently used\r\n                var leastUsedEntry = list.head;\r\n                list.remove(leastUsedEntry);\r\n                delete map[leastUsedEntry.key];\r\n            }\r\n\r\n            var entry = list.insert(value);\r\n            entry.key = key;\r\n            map[key] = entry;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @param  {string} key\r\n     * @return {}\r\n     */\r\n    LRUProto.get = function(key) {\r\n        var entry = this._map[key];\r\n        var list = this._list;\r\n        if (entry != null) {\r\n            // Put the latest used entry in the tail\r\n            if (entry !== list.tail) {\r\n                list.remove(entry);\r\n                list.insertEntry(entry);\r\n            }\r\n\r\n            return entry.value;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Clear the cache\r\n     */\r\n    LRUProto.clear = function() {\r\n        this._list.clear();\r\n        this._map = {};\r\n    };\r\n\r\n    module.exports = LRU;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/core/LRU.js\n ** module id = 585\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","/**\r\n * Text element\r\n * @module zrender/graphic/Text\r\n *\r\n * TODO Wrapping\r\n *\r\n * Text not support gradient\r\n */\r\n\r\n\r\n\r\n    var Displayable = require('./Displayable');\r\n    var zrUtil = require('../core/util');\r\n    var textContain = require('../contain/text');\r\n\r\n    /**\r\n     * @alias zrender/graphic/Text\r\n     * @extends module:zrender/graphic/Displayable\r\n     * @constructor\r\n     * @param {Object} opts\r\n     */\r\n    var Text = function (opts) {\r\n        Displayable.call(this, opts);\r\n    };\r\n\r\n    Text.prototype = {\r\n\r\n        constructor: Text,\r\n\r\n        type: 'text',\r\n\r\n        brush: function (ctx, prevEl) {\r\n            var style = this.style;\r\n            var x = style.x || 0;\r\n            var y = style.y || 0;\r\n            // Convert to string\r\n            var text = style.text;\r\n\r\n            // Convert to string\r\n            text != null && (text += '');\r\n\r\n            // Always bind style\r\n            style.bind(ctx, this, prevEl);\r\n\r\n            if (text) {\r\n\r\n                this.setTransform(ctx);\r\n\r\n                var textBaseline;\r\n                var textAlign = style.textAlign;\r\n                var font = style.textFont || style.font;\r\n                if (style.textVerticalAlign) {\r\n                    var rect = textContain.getBoundingRect(\r\n                        text, font, style.textAlign, 'top'\r\n                    );\r\n                    // Ignore textBaseline\r\n                    textBaseline = 'middle';\r\n                    switch (style.textVerticalAlign) {\r\n                        case 'middle':\r\n                            y -= rect.height / 2 - rect.lineHeight / 2;\r\n                            break;\r\n                        case 'bottom':\r\n                            y -= rect.height - rect.lineHeight / 2;\r\n                            break;\r\n                        default:\r\n                            y += rect.lineHeight / 2;\r\n                    }\r\n                }\r\n                else {\r\n                    textBaseline = style.textBaseline;\r\n                }\r\n\r\n                ctx.font = font;\r\n                ctx.textAlign = textAlign || 'left';\r\n                // Use canvas default left textAlign. Giving invalid value will cause state not change\r\n                if (ctx.textAlign !== textAlign) {\r\n                    ctx.textAlign = 'left';\r\n                }\r\n                ctx.textBaseline = textBaseline || 'alphabetic';\r\n                // Use canvas default alphabetic baseline\r\n                if (ctx.textBaseline !== textBaseline) {\r\n                    ctx.textBaseline = 'alphabetic';\r\n                }\r\n\r\n                var lineHeight = textContain.measureText('国', ctx.font).width;\r\n\r\n                var textLines = text.split('\\n');\r\n                for (var i = 0; i < textLines.length; i++) {\r\n                    style.hasFill() && ctx.fillText(textLines[i], x, y);\r\n                    style.hasStroke() && ctx.strokeText(textLines[i], x, y);\r\n                    y += lineHeight;\r\n                }\r\n\r\n                this.restoreTransform(ctx);\r\n            }\r\n        },\r\n\r\n        getBoundingRect: function () {\r\n            if (!this._rect) {\r\n                var style = this.style;\r\n                var textVerticalAlign = style.textVerticalAlign;\r\n                var rect = textContain.getBoundingRect(\r\n                    style.text + '', style.textFont || style.font, style.textAlign,\r\n                    textVerticalAlign ? 'top' : style.textBaseline\r\n                );\r\n                switch (textVerticalAlign) {\r\n                    case 'middle':\r\n                        rect.y -= rect.height / 2;\r\n                        break;\r\n                    case 'bottom':\r\n                        rect.y -= rect.height;\r\n                        break;\r\n                }\r\n                rect.x += style.x || 0;\r\n                rect.y += style.y || 0;\r\n                this._rect = rect;\r\n            }\r\n            return this._rect;\r\n        }\r\n    };\r\n\r\n    zrUtil.inherits(Text, Displayable);\r\n\r\n    module.exports = Text;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/Text.js\n ** module id = 586\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","'use strict';\r\n/**\r\n * 圆形\r\n * @module zrender/shape/Circle\r\n */\r\n\r\n\r\n\r\n    module.exports = require('../Path').extend({\r\n\r\n        type: 'circle',\r\n\r\n        shape: {\r\n            cx: 0,\r\n            cy: 0,\r\n            r: 0\r\n        },\r\n\r\n\r\n        buildPath : function (ctx, shape, inBundle) {\r\n            // Better stroking in ShapeBundle\r\n            // Always do it may have performence issue ( fill may be 2x more cost)\r\n            if (inBundle) {\r\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\r\n            }\r\n            // Better stroking in ShapeBundle\r\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\r\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\r\n        }\r\n    });\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/shape/Circle.js\n ** module id = 587\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","/**\r\n * 扇形\r\n * @module zrender/graphic/shape/Sector\r\n */\r\n\r\n// FIXME clockwise seems wrong\r\n\r\n\r\n    module.exports = require('../Path').extend({\r\n\r\n        type: 'sector',\r\n\r\n        shape: {\r\n\r\n            cx: 0,\r\n\r\n            cy: 0,\r\n\r\n            r0: 0,\r\n\r\n            r: 0,\r\n\r\n            startAngle: 0,\r\n\r\n            endAngle: Math.PI * 2,\r\n\r\n            clockwise: true\r\n        },\r\n\r\n        buildPath: function (ctx, shape) {\r\n\r\n            var x = shape.cx;\r\n            var y = shape.cy;\r\n            var r0 = Math.max(shape.r0 || 0, 0);\r\n            var r = Math.max(shape.r, 0);\r\n            var startAngle = shape.startAngle;\r\n            var endAngle = shape.endAngle;\r\n            var clockwise = shape.clockwise;\r\n\r\n            var unitX = Math.cos(startAngle);\r\n            var unitY = Math.sin(startAngle);\r\n\r\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\r\n\r\n            ctx.lineTo(unitX * r + x, unitY * r + y);\r\n\r\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\r\n\r\n            ctx.lineTo(\r\n                Math.cos(endAngle) * r0 + x,\r\n                Math.sin(endAngle) * r0 + y\r\n            );\r\n\r\n            if (r0 !== 0) {\r\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\r\n            }\r\n\r\n            ctx.closePath();\r\n        }\r\n    });\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/shape/Sector.js\n ** module id = 588\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","/**\r\n * 圆环\r\n * @module zrender/graphic/shape/Ring\r\n */\r\n\r\n\r\n    module.exports = require('../Path').extend({\r\n\r\n        type: 'ring',\r\n\r\n        shape: {\r\n            cx: 0,\r\n            cy: 0,\r\n            r: 0,\r\n            r0: 0\r\n        },\r\n\r\n        buildPath: function (ctx, shape) {\r\n            var x = shape.cx;\r\n            var y = shape.cy;\r\n            var PI2 = Math.PI * 2;\r\n            ctx.moveTo(x + shape.r, y);\r\n            ctx.arc(x, y, shape.r, 0, PI2, false);\r\n            ctx.moveTo(x + shape.r0, y);\r\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\r\n        }\r\n    });\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/shape/Ring.js\n ** module id = 589\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","/**\r\n * 多边形\r\n * @module zrender/shape/Polygon\r\n */\r\n\r\n\r\n    var polyHelper = require('../helper/poly');\r\n\r\n    module.exports = require('../Path').extend({\r\n        \r\n        type: 'polygon',\r\n\r\n        shape: {\r\n            points: null,\r\n\r\n            smooth: false,\r\n\r\n            smoothConstraint: null\r\n        },\r\n\r\n        buildPath: function (ctx, shape) {\r\n            polyHelper.buildPath(ctx, shape, true);\r\n        }\r\n    });\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/shape/Polygon.js\n ** module id = 590\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","\r\n\r\n    var smoothSpline = require('./smoothSpline');\r\n    var smoothBezier = require('./smoothBezier');\r\n\r\n    module.exports = {\r\n        buildPath: function (ctx, shape, closePath) {\r\n            var points = shape.points;\r\n            var smooth = shape.smooth;\r\n            if (points && points.length >= 2) {\r\n                if (smooth && smooth !== 'spline') {\r\n                    var controlPoints = smoothBezier(\r\n                        points, smooth, closePath, shape.smoothConstraint\r\n                    );\r\n\r\n                    ctx.moveTo(points[0][0], points[0][1]);\r\n                    var len = points.length;\r\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\r\n                        var cp1 = controlPoints[i * 2];\r\n                        var cp2 = controlPoints[i * 2 + 1];\r\n                        var p = points[(i + 1) % len];\r\n                        ctx.bezierCurveTo(\r\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\r\n                        );\r\n                    }\r\n                }\r\n                else {\r\n                    if (smooth === 'spline') {\r\n                        points = smoothSpline(points, closePath);\r\n                    }\r\n\r\n                    ctx.moveTo(points[0][0], points[0][1]);\r\n                    for (var i = 1, l = points.length; i < l; i++) {\r\n                        ctx.lineTo(points[i][0], points[i][1]);\r\n                    }\r\n                }\r\n\r\n                closePath && ctx.closePath();\r\n            }\r\n        }\r\n    };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/helper/poly.js\n ** module id = 591\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","/**\r\n * Catmull-Rom spline 插值折线\r\n * @module zrender/shape/util/smoothSpline\r\n * @author pissang (https://www.github.com/pissang)\r\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *         errorrik (errorrik@gmail.com)\r\n */\r\n\r\n    var vec2 = require('../../core/vector');\r\n\r\n    /**\r\n     * @inner\r\n     */\r\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\r\n        var v0 = (p2 - p0) * 0.5;\r\n        var v1 = (p3 - p1) * 0.5;\r\n        return (2 * (p1 - p2) + v0 + v1) * t3\r\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\r\n                + v0 * t + p1;\r\n    }\r\n\r\n    /**\r\n     * @alias module:zrender/shape/util/smoothSpline\r\n     * @param {Array} points 线段顶点数组\r\n     * @param {boolean} isLoop\r\n     * @return {Array}\r\n     */\r\n    module.exports = function (points, isLoop) {\r\n        var len = points.length;\r\n        var ret = [];\r\n\r\n        var distance = 0;\r\n        for (var i = 1; i < len; i++) {\r\n            distance += vec2.distance(points[i - 1], points[i]);\r\n        }\r\n\r\n        var segs = distance / 2;\r\n        segs = segs < len ? len : segs;\r\n        for (var i = 0; i < segs; i++) {\r\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\r\n            var idx = Math.floor(pos);\r\n\r\n            var w = pos - idx;\r\n\r\n            var p0;\r\n            var p1 = points[idx % len];\r\n            var p2;\r\n            var p3;\r\n            if (!isLoop) {\r\n                p0 = points[idx === 0 ? idx : idx - 1];\r\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\r\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\r\n            }\r\n            else {\r\n                p0 = points[(idx - 1 + len) % len];\r\n                p2 = points[(idx + 1) % len];\r\n                p3 = points[(idx + 2) % len];\r\n            }\r\n\r\n            var w2 = w * w;\r\n            var w3 = w * w2;\r\n\r\n            ret.push([\r\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\r\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\r\n            ]);\r\n        }\r\n        return ret;\r\n    };\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/helper/smoothSpline.js\n ** module id = 592\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","/**\r\n * 贝塞尔平滑曲线\r\n * @module zrender/shape/util/smoothBezier\r\n * @author pissang (https://www.github.com/pissang)\r\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *         errorrik (errorrik@gmail.com)\r\n */\r\n\r\n\r\n    var vec2 = require('../../core/vector');\r\n    var v2Min = vec2.min;\r\n    var v2Max = vec2.max;\r\n    var v2Scale = vec2.scale;\r\n    var v2Distance = vec2.distance;\r\n    var v2Add = vec2.add;\r\n\r\n    /**\r\n     * 贝塞尔平滑曲线\r\n     * @alias module:zrender/shape/util/smoothBezier\r\n     * @param {Array} points 线段顶点数组\r\n     * @param {number} smooth 平滑等级, 0-1\r\n     * @param {boolean} isLoop\r\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\r\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\r\n     *                           整个折线的包围盒做一个并集用来约束控制点。\r\n     * @param {Array} 计算出来的控制点数组\r\n     */\r\n    module.exports = function (points, smooth, isLoop, constraint) {\r\n        var cps = [];\r\n\r\n        var v = [];\r\n        var v1 = [];\r\n        var v2 = [];\r\n        var prevPoint;\r\n        var nextPoint;\r\n\r\n        var min, max;\r\n        if (constraint) {\r\n            min = [Infinity, Infinity];\r\n            max = [-Infinity, -Infinity];\r\n            for (var i = 0, len = points.length; i < len; i++) {\r\n                v2Min(min, min, points[i]);\r\n                v2Max(max, max, points[i]);\r\n            }\r\n            // 与指定的包围盒做并集\r\n            v2Min(min, min, constraint[0]);\r\n            v2Max(max, max, constraint[1]);\r\n        }\r\n\r\n        for (var i = 0, len = points.length; i < len; i++) {\r\n            var point = points[i];\r\n\r\n            if (isLoop) {\r\n                prevPoint = points[i ? i - 1 : len - 1];\r\n                nextPoint = points[(i + 1) % len];\r\n            }\r\n            else {\r\n                if (i === 0 || i === len - 1) {\r\n                    cps.push(vec2.clone(points[i]));\r\n                    continue;\r\n                }\r\n                else {\r\n                    prevPoint = points[i - 1];\r\n                    nextPoint = points[i + 1];\r\n                }\r\n            }\r\n\r\n            vec2.sub(v, nextPoint, prevPoint);\r\n\r\n            // use degree to scale the handle length\r\n            v2Scale(v, v, smooth);\r\n\r\n            var d0 = v2Distance(point, prevPoint);\r\n            var d1 = v2Distance(point, nextPoint);\r\n            var sum = d0 + d1;\r\n            if (sum !== 0) {\r\n                d0 /= sum;\r\n                d1 /= sum;\r\n            }\r\n\r\n            v2Scale(v1, v, -d0);\r\n            v2Scale(v2, v, d1);\r\n            var cp0 = v2Add([], point, v1);\r\n            var cp1 = v2Add([], point, v2);\r\n            if (constraint) {\r\n                v2Max(cp0, cp0, min);\r\n                v2Min(cp0, cp0, max);\r\n                v2Max(cp1, cp1, min);\r\n                v2Min(cp1, cp1, max);\r\n            }\r\n            cps.push(cp0);\r\n            cps.push(cp1);\r\n        }\r\n\r\n        if (isLoop) {\r\n            cps.push(cps.shift());\r\n        }\r\n\r\n        return cps;\r\n    };\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/helper/smoothBezier.js\n ** module id = 593\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","/**\r\n * @module zrender/graphic/shape/Polyline\r\n */\r\n\r\n\r\n    var polyHelper = require('../helper/poly');\r\n\r\n    module.exports = require('../Path').extend({\r\n        \r\n        type: 'polyline',\r\n\r\n        shape: {\r\n            points: null,\r\n\r\n            smooth: false,\r\n\r\n            smoothConstraint: null\r\n        },\r\n\r\n        style: {\r\n            stroke: '#000',\r\n\r\n            fill: null\r\n        },\r\n\r\n        buildPath: function (ctx, shape) {\r\n            polyHelper.buildPath(ctx, shape, false);\r\n        }\r\n    });\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/shape/Polyline.js\n ** module id = 594\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","/**\r\n * 矩形\r\n * @module zrender/graphic/shape/Rect\r\n */\r\n\r\n\r\n    var roundRectHelper = require('../helper/roundRect');\r\n\r\n    module.exports = require('../Path').extend({\r\n\r\n        type: 'rect',\r\n\r\n        shape: {\r\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\r\n            // r缩写为1         相当于 [1, 1, 1, 1]\r\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\r\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\r\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\r\n            r: 0,\r\n\r\n            x: 0,\r\n            y: 0,\r\n            width: 0,\r\n            height: 0\r\n        },\r\n\r\n        buildPath: function (ctx, shape) {\r\n            var x = shape.x;\r\n            var y = shape.y;\r\n            var width = shape.width;\r\n            var height = shape.height;\r\n            if (!shape.r) {\r\n                ctx.rect(x, y, width, height);\r\n            }\r\n            else {\r\n                roundRectHelper.buildPath(ctx, shape);\r\n            }\r\n            ctx.closePath();\r\n            return;\r\n        }\r\n    });\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/shape/Rect.js\n ** module id = 595\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","\r\n\r\n    module.exports = {\r\n        buildPath: function (ctx, shape) {\r\n            var x = shape.x;\r\n            var y = shape.y;\r\n            var width = shape.width;\r\n            var height = shape.height;\r\n            var r = shape.r;\r\n            var r1;\r\n            var r2;\r\n            var r3;\r\n            var r4;\r\n\r\n            // Convert width and height to positive for better borderRadius\r\n            if (width < 0) {\r\n                x = x + width;\r\n                width = -width;\r\n            }\r\n            if (height < 0) {\r\n                y = y + height;\r\n                height = -height;\r\n            }\r\n\r\n            if (typeof r === 'number') {\r\n                r1 = r2 = r3 = r4 = r;\r\n            }\r\n            else if (r instanceof Array) {\r\n                if (r.length === 1) {\r\n                    r1 = r2 = r3 = r4 = r[0];\r\n                }\r\n                else if (r.length === 2) {\r\n                    r1 = r3 = r[0];\r\n                    r2 = r4 = r[1];\r\n                }\r\n                else if (r.length === 3) {\r\n                    r1 = r[0];\r\n                    r2 = r4 = r[1];\r\n                    r3 = r[2];\r\n                }\r\n                else {\r\n                    r1 = r[0];\r\n                    r2 = r[1];\r\n                    r3 = r[2];\r\n                    r4 = r[3];\r\n                }\r\n            }\r\n            else {\r\n                r1 = r2 = r3 = r4 = 0;\r\n            }\r\n\r\n            var total;\r\n            if (r1 + r2 > width) {\r\n                total = r1 + r2;\r\n                r1 *= width / total;\r\n                r2 *= width / total;\r\n            }\r\n            if (r3 + r4 > width) {\r\n                total = r3 + r4;\r\n                r3 *= width / total;\r\n                r4 *= width / total;\r\n            }\r\n            if (r2 + r3 > height) {\r\n                total = r2 + r3;\r\n                r2 *= height / total;\r\n                r3 *= height / total;\r\n            }\r\n            if (r1 + r4 > height) {\r\n                total = r1 + r4;\r\n                r1 *= height / total;\r\n                r4 *= height / total;\r\n            }\r\n            ctx.moveTo(x + r1, y);\r\n            ctx.lineTo(x + width - r2, y);\r\n            r2 !== 0 && ctx.quadraticCurveTo(\r\n                x + width, y, x + width, y + r2\r\n            );\r\n            ctx.lineTo(x + width, y + height - r3);\r\n            r3 !== 0 && ctx.quadraticCurveTo(\r\n                x + width, y + height, x + width - r3, y + height\r\n            );\r\n            ctx.lineTo(x + r4, y + height);\r\n            r4 !== 0 && ctx.quadraticCurveTo(\r\n                x, y + height, x, y + height - r4\r\n            );\r\n            ctx.lineTo(x, y + r1);\r\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\r\n        }\r\n    };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/helper/roundRect.js\n ** module id = 596\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","/**\r\n * 直线\r\n * @module zrender/graphic/shape/Line\r\n */\r\n\r\n    module.exports = require('../Path').extend({\r\n\r\n        type: 'line',\r\n\r\n        shape: {\r\n            // Start point\r\n            x1: 0,\r\n            y1: 0,\r\n            // End point\r\n            x2: 0,\r\n            y2: 0,\r\n\r\n            percent: 1\r\n        },\r\n\r\n        style: {\r\n            stroke: '#000',\r\n            fill: null\r\n        },\r\n\r\n        buildPath: function (ctx, shape) {\r\n            var x1 = shape.x1;\r\n            var y1 = shape.y1;\r\n            var x2 = shape.x2;\r\n            var y2 = shape.y2;\r\n            var percent = shape.percent;\r\n\r\n            if (percent === 0) {\r\n                return;\r\n            }\r\n\r\n            ctx.moveTo(x1, y1);\r\n\r\n            if (percent < 1) {\r\n                x2 = x1 * (1 - percent) + x2 * percent;\r\n                y2 = y1 * (1 - percent) + y2 * percent;\r\n            }\r\n            ctx.lineTo(x2, y2);\r\n        },\r\n\r\n        /**\r\n         * Get point at percent\r\n         * @param  {number} percent\r\n         * @return {Array.<number>}\r\n         */\r\n        pointAt: function (p) {\r\n            var shape = this.shape;\r\n            return [\r\n                shape.x1 * (1 - p) + shape.x2 * p,\r\n                shape.y1 * (1 - p) + shape.y2 * p\r\n            ];\r\n        }\r\n    });\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/shape/Line.js\n ** module id = 597\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","'use strict';\r\n/**\r\n * 贝塞尔曲线\r\n * @module zrender/shape/BezierCurve\r\n */\r\n\r\n\r\n    var curveTool = require('../../core/curve');\r\n    var vec2 = require('../../core/vector');\r\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\r\n    var cubicSubdivide = curveTool.cubicSubdivide;\r\n    var quadraticAt = curveTool.quadraticAt;\r\n    var cubicAt = curveTool.cubicAt;\r\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\r\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\r\n\r\n    var out = [];\r\n\r\n    function someVectorAt(shape, t, isTangent) {\r\n        var cpx2 = shape.cpx2;\r\n        var cpy2 = shape.cpy2;\r\n        if (cpx2 === null || cpy2 === null) {\r\n            return [\r\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\r\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\r\n            ];\r\n        }\r\n        else {\r\n            return [\r\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\r\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\r\n            ];\r\n        }\r\n    }\r\n    module.exports = require('../Path').extend({\r\n\r\n        type: 'bezier-curve',\r\n\r\n        shape: {\r\n            x1: 0,\r\n            y1: 0,\r\n            x2: 0,\r\n            y2: 0,\r\n            cpx1: 0,\r\n            cpy1: 0,\r\n            // cpx2: 0,\r\n            // cpy2: 0\r\n\r\n            // Curve show percent, for animating\r\n            percent: 1\r\n        },\r\n\r\n        style: {\r\n            stroke: '#000',\r\n            fill: null\r\n        },\r\n\r\n        buildPath: function (ctx, shape) {\r\n            var x1 = shape.x1;\r\n            var y1 = shape.y1;\r\n            var x2 = shape.x2;\r\n            var y2 = shape.y2;\r\n            var cpx1 = shape.cpx1;\r\n            var cpy1 = shape.cpy1;\r\n            var cpx2 = shape.cpx2;\r\n            var cpy2 = shape.cpy2;\r\n            var percent = shape.percent;\r\n            if (percent === 0) {\r\n                return;\r\n            }\r\n\r\n            ctx.moveTo(x1, y1);\r\n\r\n            if (cpx2 == null || cpy2 == null) {\r\n                if (percent < 1) {\r\n                    quadraticSubdivide(\r\n                        x1, cpx1, x2, percent, out\r\n                    );\r\n                    cpx1 = out[1];\r\n                    x2 = out[2];\r\n                    quadraticSubdivide(\r\n                        y1, cpy1, y2, percent, out\r\n                    );\r\n                    cpy1 = out[1];\r\n                    y2 = out[2];\r\n                }\r\n\r\n                ctx.quadraticCurveTo(\r\n                    cpx1, cpy1,\r\n                    x2, y2\r\n                );\r\n            }\r\n            else {\r\n                if (percent < 1) {\r\n                    cubicSubdivide(\r\n                        x1, cpx1, cpx2, x2, percent, out\r\n                    );\r\n                    cpx1 = out[1];\r\n                    cpx2 = out[2];\r\n                    x2 = out[3];\r\n                    cubicSubdivide(\r\n                        y1, cpy1, cpy2, y2, percent, out\r\n                    );\r\n                    cpy1 = out[1];\r\n                    cpy2 = out[2];\r\n                    y2 = out[3];\r\n                }\r\n                ctx.bezierCurveTo(\r\n                    cpx1, cpy1,\r\n                    cpx2, cpy2,\r\n                    x2, y2\r\n                );\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get point at percent\r\n         * @param  {number} t\r\n         * @return {Array.<number>}\r\n         */\r\n        pointAt: function (t) {\r\n            return someVectorAt(this.shape, t, false);\r\n        },\r\n\r\n        /**\r\n         * Get tangent at percent\r\n         * @param  {number} t\r\n         * @return {Array.<number>}\r\n         */\r\n        tangentAt: function (t) {\r\n            var p = someVectorAt(this.shape, t, true);\r\n            return vec2.normalize(p, p);\r\n        }\r\n    });\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/shape/BezierCurve.js\n ** module id = 598\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","/**\r\n * 圆弧\r\n * @module zrender/graphic/shape/Arc\r\n */\r\n \r\n\r\n    module.exports = require('../Path').extend({\r\n\r\n        type: 'arc',\r\n\r\n        shape: {\r\n\r\n            cx: 0,\r\n\r\n            cy: 0,\r\n\r\n            r: 0,\r\n\r\n            startAngle: 0,\r\n\r\n            endAngle: Math.PI * 2,\r\n\r\n            clockwise: true\r\n        },\r\n\r\n        style: {\r\n\r\n            stroke: '#000',\r\n\r\n            fill: null\r\n        },\r\n\r\n        buildPath: function (ctx, shape) {\r\n\r\n            var x = shape.cx;\r\n            var y = shape.cy;\r\n            var r = Math.max(shape.r, 0);\r\n            var startAngle = shape.startAngle;\r\n            var endAngle = shape.endAngle;\r\n            var clockwise = shape.clockwise;\r\n\r\n            var unitX = Math.cos(startAngle);\r\n            var unitY = Math.sin(startAngle);\r\n\r\n            ctx.moveTo(unitX * r + x, unitY * r + y);\r\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\r\n        }\r\n    });\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/shape/Arc.js\n ** module id = 599\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","// CompoundPath to improve performance\r\n\r\n\r\n    var Path = require('./Path');\r\n    module.exports = Path.extend({\r\n\r\n        type: 'compound',\r\n\r\n        shape: {\r\n\r\n            paths: null\r\n        },\r\n\r\n        _updatePathDirty: function () {\r\n            var dirtyPath = this.__dirtyPath;\r\n            var paths = this.shape.paths;\r\n            for (var i = 0; i < paths.length; i++) {\r\n                // Mark as dirty if any subpath is dirty\r\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\r\n            }\r\n            this.__dirtyPath = dirtyPath;\r\n            this.__dirty = this.__dirty || dirtyPath;\r\n        },\r\n\r\n        beforeBrush: function () {\r\n            this._updatePathDirty();\r\n            var paths = this.shape.paths || [];\r\n            var scale = this.getGlobalScale();\r\n            // Update path scale\r\n            for (var i = 0; i < paths.length; i++) {\r\n                paths[i].path.setScale(scale[0], scale[1]);\r\n            }\r\n        },\r\n\r\n        buildPath: function (ctx, shape) {\r\n            var paths = shape.paths || [];\r\n            for (var i = 0; i < paths.length; i++) {\r\n                paths[i].buildPath(ctx, paths[i].shape, true);\r\n            }\r\n        },\r\n\r\n        afterBrush: function () {\r\n            var paths = this.shape.paths;\r\n            for (var i = 0; i < paths.length; i++) {\r\n                paths[i].__dirtyPath = false;\r\n            }\r\n        },\r\n\r\n        getBoundingRect: function () {\r\n            this._updatePathDirty();\r\n            return Path.prototype.getBoundingRect.call(this);\r\n        }\r\n    });\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/CompoundPath.js\n ** module id = 600\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","'use strict';\r\n\r\n\r\n    var zrUtil = require('../core/util');\r\n\r\n    var Gradient = require('./Gradient');\r\n\r\n    /**\r\n     * x, y, x2, y2 are all percent from 0 to 1\r\n     * @param {number} [x=0]\r\n     * @param {number} [y=0]\r\n     * @param {number} [x2=1]\r\n     * @param {number} [y2=0]\r\n     * @param {Array.<Object>} colorStops\r\n     * @param {boolean} [globalCoord=false]\r\n     */\r\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\r\n        this.x = x == null ? 0 : x;\r\n\r\n        this.y = y == null ? 0 : y;\r\n\r\n        this.x2 = x2 == null ? 1 : x2;\r\n\r\n        this.y2 = y2 == null ? 0 : y2;\r\n\r\n        // Can be cloned\r\n        this.type = 'linear';\r\n\r\n        // If use global coord\r\n        this.global = globalCoord || false;\r\n\r\n        Gradient.call(this, colorStops);\r\n    };\r\n\r\n    LinearGradient.prototype = {\r\n\r\n        constructor: LinearGradient\r\n    };\r\n\r\n    zrUtil.inherits(LinearGradient, Gradient);\r\n\r\n    module.exports = LinearGradient;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/LinearGradient.js\n ** module id = 601\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","'use strict';\r\n\r\n\r\n    var zrUtil = require('../core/util');\r\n\r\n    var Gradient = require('./Gradient');\r\n\r\n    /**\r\n     * x, y, r are all percent from 0 to 1\r\n     * @param {number} [x=0.5]\r\n     * @param {number} [y=0.5]\r\n     * @param {number} [r=0.5]\r\n     * @param {Array.<Object>} [colorStops]\r\n     * @param {boolean} [globalCoord=false]\r\n     */\r\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\r\n        this.x = x == null ? 0.5 : x;\r\n\r\n        this.y = y == null ? 0.5 : y;\r\n\r\n        this.r = r == null ? 0.5 : r;\r\n\r\n        // Can be cloned\r\n        this.type = 'radial';\r\n\r\n        // If use global coord\r\n        this.global = globalCoord || false;\r\n\r\n        Gradient.call(this, colorStops);\r\n    };\r\n\r\n    RadialGradient.prototype = {\r\n\r\n        constructor: RadialGradient\r\n    };\r\n\r\n    zrUtil.inherits(RadialGradient, Gradient);\r\n\r\n    module.exports = RadialGradient;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/graphic/RadialGradient.js\n ** module id = 602\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","/*!\r\n * ZRender, a high performance 2d drawing library.\r\n *\r\n * Copyright (c) 2013, Baidu Inc.\r\n * All rights reserved.\r\n *\r\n * LICENSE\r\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\r\n */\r\n// Global defines\r\n\r\n    var guid = require('./core/guid');\r\n    var env = require('./core/env');\r\n\r\n    var Handler = require('./Handler');\r\n    var Storage = require('./Storage');\r\n    var Animation = require('./animation/Animation');\r\n    var HandlerProxy = require('./dom/HandlerProxy');\r\n\r\n    var useVML = !env.canvasSupported;\r\n\r\n    var painterCtors = {\r\n        canvas: require('./Painter')\r\n    };\r\n\r\n    var instances = {};    // ZRender实例map索引\r\n\r\n    var zrender = {};\r\n    /**\r\n     * @type {string}\r\n     */\r\n    zrender.version = '3.1.2';\r\n\r\n    /**\r\n     * Initializing a zrender instance\r\n     * @param {HTMLElement} dom\r\n     * @param {Object} opts\r\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\r\n     * @param {number} [opts.devicePixelRatio]\r\n     * @return {module:zrender/ZRender}\r\n     */\r\n    zrender.init = function(dom, opts) {\r\n        var zr = new ZRender(guid(), dom, opts);\r\n        instances[zr.id] = zr;\r\n        return zr;\r\n    };\r\n\r\n    /**\r\n     * Dispose zrender instance\r\n     * @param {module:zrender/ZRender} zr\r\n     */\r\n    zrender.dispose = function (zr) {\r\n        if (zr) {\r\n            zr.dispose();\r\n        }\r\n        else {\r\n            for (var key in instances) {\r\n                instances[key].dispose();\r\n            }\r\n            instances = {};\r\n        }\r\n\r\n        return zrender;\r\n    };\r\n\r\n    /**\r\n     * Get zrender instance by id\r\n     * @param {string} id zrender instance id\r\n     * @return {module:zrender/ZRender}\r\n     */\r\n    zrender.getInstance = function (id) {\r\n        return instances[id];\r\n    };\r\n\r\n    zrender.registerPainter = function (name, Ctor) {\r\n        painterCtors[name] = Ctor;\r\n    };\r\n\r\n    function delInstance(id) {\r\n        delete instances[id];\r\n    }\r\n\r\n    /**\r\n     * @module zrender/ZRender\r\n     */\r\n    /**\r\n     * @constructor\r\n     * @alias module:zrender/ZRender\r\n     * @param {string} id\r\n     * @param {HTMLDomElement} dom\r\n     * @param {Object} opts\r\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\r\n     * @param {number} [opts.devicePixelRatio]\r\n     */\r\n    var ZRender = function(id, dom, opts) {\r\n\r\n        opts = opts || {};\r\n\r\n        /**\r\n         * @type {HTMLDomElement}\r\n         */\r\n        this.dom = dom;\r\n\r\n        /**\r\n         * @type {string}\r\n         */\r\n        this.id = id;\r\n\r\n        var self = this;\r\n        var storage = new Storage();\r\n\r\n        var rendererType = opts.renderer;\r\n        if (useVML) {\r\n            if (!painterCtors.vml) {\r\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\r\n            }\r\n            rendererType = 'vml';\r\n        }\r\n        else if (!rendererType || !painterCtors[rendererType]) {\r\n            rendererType = 'canvas';\r\n        }\r\n        var painter = new painterCtors[rendererType](dom, storage, opts);\r\n\r\n        this.storage = storage;\r\n        this.painter = painter;\r\n\r\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\r\n        this.handler = new Handler(storage, painter, handerProxy);\r\n\r\n        /**\r\n         * @type {module:zrender/animation/Animation}\r\n         */\r\n        this.animation = new Animation({\r\n            stage: {\r\n                update: function () {\r\n                    if (self._needsRefresh) {\r\n                        self.refreshImmediately();\r\n                    }\r\n                    if (self._needsRefreshHover) {\r\n                        self.refreshHoverImmediately();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.animation.start();\r\n\r\n        /**\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        this._needsRefresh;\r\n\r\n        // 修改 storage.delFromMap, 每次删除元素之前删除动画\r\n        // FIXME 有点ugly\r\n        var oldDelFromMap = storage.delFromMap;\r\n        var oldAddToMap = storage.addToMap;\r\n\r\n        storage.delFromMap = function (elId) {\r\n            var el = storage.get(elId);\r\n\r\n            oldDelFromMap.call(storage, elId);\r\n\r\n            el && el.removeSelfFromZr(self);\r\n        };\r\n\r\n        storage.addToMap = function (el) {\r\n            oldAddToMap.call(storage, el);\r\n\r\n            el.addSelfToZr(self);\r\n        };\r\n    };\r\n\r\n    ZRender.prototype = {\r\n\r\n        constructor: ZRender,\r\n        /**\r\n         * 获取实例唯一标识\r\n         * @return {string}\r\n         */\r\n        getId: function () {\r\n            return this.id;\r\n        },\r\n\r\n        /**\r\n         * 添加元素\r\n         * @param  {module:zrender/Element} el\r\n         */\r\n        add: function (el) {\r\n            this.storage.addRoot(el);\r\n            this._needsRefresh = true;\r\n        },\r\n\r\n        /**\r\n         * 删除元素\r\n         * @param  {module:zrender/Element} el\r\n         */\r\n        remove: function (el) {\r\n            this.storage.delRoot(el);\r\n            this._needsRefresh = true;\r\n        },\r\n\r\n        /**\r\n         * Change configuration of layer\r\n         * @param {string} zLevel\r\n         * @param {Object} config\r\n         * @param {string} [config.clearColor=0] Clear color\r\n         * @param {string} [config.motionBlur=false] If enable motion blur\r\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\r\n        */\r\n        configLayer: function (zLevel, config) {\r\n            this.painter.configLayer(zLevel, config);\r\n            this._needsRefresh = true;\r\n        },\r\n\r\n        /**\r\n         * Repaint the canvas immediately\r\n         */\r\n        refreshImmediately: function () {\r\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\r\n            // Or it will cause zrender refreshes again and again.\r\n            this._needsRefresh = false;\r\n            this.painter.refresh();\r\n            /**\r\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\r\n             */\r\n            this._needsRefresh = false;\r\n        },\r\n\r\n        /**\r\n         * Mark and repaint the canvas in the next frame of browser\r\n         */\r\n        refresh: function() {\r\n            this._needsRefresh = true;\r\n        },\r\n\r\n        /**\r\n         * Add element to hover layer\r\n         * @param  {module:zrender/Element} el\r\n         * @param {Object} style\r\n         */\r\n        addHover: function (el, style) {\r\n            if (this.painter.addHover) {\r\n                this.painter.addHover(el, style);\r\n                this.refreshHover();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Add element from hover layer\r\n         * @param  {module:zrender/Element} el\r\n         */\r\n        removeHover: function (el) {\r\n            if (this.painter.removeHover) {\r\n                this.painter.removeHover(el);\r\n                this.refreshHover();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Clear all hover elements in hover layer\r\n         * @param  {module:zrender/Element} el\r\n         */\r\n        clearHover: function () {\r\n            if (this.painter.clearHover) {\r\n                this.painter.clearHover();\r\n                this.refreshHover();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Refresh hover in next frame\r\n         */\r\n        refreshHover: function () {\r\n            this._needsRefreshHover = true;\r\n        },\r\n\r\n        /**\r\n         * Refresh hover immediately\r\n         */\r\n        refreshHoverImmediately: function () {\r\n            this._needsRefreshHover = false;\r\n            this.painter.refreshHover && this.painter.refreshHover();\r\n        },\r\n\r\n        /**\r\n         * Resize the canvas.\r\n         * Should be invoked when container size is changed\r\n         */\r\n        resize: function() {\r\n            this.painter.resize();\r\n            this.handler.resize();\r\n        },\r\n\r\n        /**\r\n         * Stop and clear all animation immediately\r\n         */\r\n        clearAnimation: function () {\r\n            this.animation.clear();\r\n        },\r\n\r\n        /**\r\n         * Get container width\r\n         */\r\n        getWidth: function() {\r\n            return this.painter.getWidth();\r\n        },\r\n\r\n        /**\r\n         * Get container height\r\n         */\r\n        getHeight: function() {\r\n            return this.painter.getHeight();\r\n        },\r\n\r\n        /**\r\n         * Export the canvas as Base64 URL\r\n         * @param {string} type\r\n         * @param {string} [backgroundColor='#fff']\r\n         * @return {string} Base64 URL\r\n         */\r\n        // toDataURL: function(type, backgroundColor) {\r\n        //     return this.painter.getRenderedCanvas({\r\n        //         backgroundColor: backgroundColor\r\n        //     }).toDataURL(type);\r\n        // },\r\n\r\n        /**\r\n         * Converting a path to image.\r\n         * It has much better performance of drawing image rather than drawing a vector path.\r\n         * @param {module:zrender/graphic/Path} e\r\n         * @param {number} width\r\n         * @param {number} height\r\n         */\r\n        pathToImage: function(e, width, height) {\r\n            var id = guid();\r\n            return this.painter.pathToImage(id, e, width, height);\r\n        },\r\n\r\n        /**\r\n         * Set default cursor\r\n         * @param {string} [cursorStyle='default'] 例如 crosshair\r\n         */\r\n        setCursorStyle: function (cursorStyle) {\r\n            this.handler.setCursorStyle(cursorStyle);\r\n        },\r\n\r\n        /**\r\n         * Bind event\r\n         *\r\n         * @param {string} eventName Event name\r\n         * @param {Function} eventHandler Handler function\r\n         * @param {Object} [context] Context object\r\n         */\r\n        on: function(eventName, eventHandler, context) {\r\n            this.handler.on(eventName, eventHandler, context);\r\n        },\r\n\r\n        /**\r\n         * Unbind event\r\n         * @param {string} eventName Event name\r\n         * @param {Function} [eventHandler] Handler function\r\n         */\r\n        off: function(eventName, eventHandler) {\r\n            this.handler.off(eventName, eventHandler);\r\n        },\r\n\r\n        /**\r\n         * Trigger event manually\r\n         *\r\n         * @param {string} eventName Event name\r\n         * @param {event=} event Event object\r\n         */\r\n        trigger: function (eventName, event) {\r\n            this.handler.trigger(eventName, event);\r\n        },\r\n\r\n\r\n        /**\r\n         * Clear all objects and the canvas.\r\n         */\r\n        clear: function () {\r\n            this.storage.delRoot();\r\n            this.painter.clear();\r\n        },\r\n\r\n        /**\r\n         * Dispose self.\r\n         */\r\n        dispose: function () {\r\n            this.animation.stop();\r\n\r\n            this.clear();\r\n            this.storage.dispose();\r\n            this.painter.dispose();\r\n            this.handler.dispose();\r\n\r\n            this.animation =\r\n            this.storage =\r\n            this.painter =\r\n            this.handler = null;\r\n\r\n            delInstance(this.id);\r\n        }\r\n    };\r\n\r\n    module.exports = zrender;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/zrender.js\n ** module id = 603\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","'use strict';\r\n/**\r\n * Handler\r\n * @module zrender/Handler\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *         errorrik (errorrik@gmail.com)\r\n *         pissang (shenyi.914@gmail.com)\r\n */\r\n\r\n\r\n    var util = require('./core/util');\r\n    var Draggable = require('./mixin/Draggable');\r\n\r\n    var Eventful = require('./mixin/Eventful');\r\n\r\n    function makeEventPacket(eveType, target, event) {\r\n        return {\r\n            type: eveType,\r\n            event: event,\r\n            target: target,\r\n            cancelBubble: false,\r\n            offsetX: event.zrX,\r\n            offsetY: event.zrY,\r\n            gestureEvent: event.gestureEvent,\r\n            pinchX: event.pinchX,\r\n            pinchY: event.pinchY,\r\n            pinchScale: event.pinchScale,\r\n            wheelDelta: event.zrDelta\r\n        };\r\n    }\r\n\r\n    function EmptyProxy () {}\r\n    EmptyProxy.prototype.dispose = function () {};\r\n\r\n    var handlerNames = [\r\n        'click', 'dblclick', 'mousewheel', 'mouseout',\r\n        'mouseup', 'mousedown', 'mousemove'\r\n    ];\r\n    /**\r\n     * @alias module:zrender/Handler\r\n     * @constructor\r\n     * @extends module:zrender/mixin/Eventful\r\n     * @param {HTMLElement} root Main HTML element for painting.\r\n     * @param {module:zrender/Storage} storage Storage instance.\r\n     * @param {module:zrender/Painter} painter Painter instance.\r\n     */\r\n    var Handler = function(storage, painter, proxy) {\r\n        Eventful.call(this);\r\n\r\n        this.storage = storage;\r\n\r\n        this.painter = painter;\r\n\r\n        proxy = proxy || new EmptyProxy();\r\n        /**\r\n         * Proxy of event. can be Dom, WebGLSurface, etc.\r\n         */\r\n        this.proxy = proxy;\r\n\r\n        // Attach handler\r\n        proxy.handler = this;\r\n\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        this._hovered;\r\n\r\n        /**\r\n         * @private\r\n         * @type {Date}\r\n         */\r\n        this._lastTouchMoment;\r\n\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        this._lastX;\r\n\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        this._lastY;\r\n\r\n\r\n        Draggable.call(this);\r\n\r\n        util.each(handlerNames, function (name) {\r\n            proxy.on && proxy.on(name, this[name], this);\r\n        }, this);\r\n    };\r\n\r\n    Handler.prototype = {\r\n\r\n        constructor: Handler,\r\n\r\n        mousemove: function (event) {\r\n            var x = event.zrX;\r\n            var y = event.zrY;\r\n\r\n            var hovered = this.findHover(x, y, null);\r\n            var lastHovered = this._hovered;\r\n            var proxy = this.proxy;\r\n\r\n            this._hovered = hovered;\r\n\r\n            proxy.setCursor && proxy.setCursor(hovered ? hovered.cursor : 'default');\r\n\r\n            // Mouse out on previous hovered element\r\n            if (lastHovered && hovered !== lastHovered && lastHovered.__zr) {\r\n                this.dispatchToElement(lastHovered, 'mouseout', event);\r\n            }\r\n\r\n            // Mouse moving on one element\r\n            this.dispatchToElement(hovered, 'mousemove', event);\r\n\r\n            // Mouse over on a new element\r\n            if (hovered && hovered !== lastHovered) {\r\n                this.dispatchToElement(hovered, 'mouseover', event);\r\n            }\r\n        },\r\n\r\n        mouseout: function (event) {\r\n            this.dispatchToElement(this._hovered, 'mouseout', event);\r\n\r\n            this.trigger('globalout', {\r\n                event: event\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Resize\r\n         */\r\n        resize: function (event) {\r\n            this._hovered = null;\r\n        },\r\n\r\n        /**\r\n         * Dispatch event\r\n         * @param {string} eventName\r\n         * @param {event=} eventArgs\r\n         */\r\n        dispatch: function (eventName, eventArgs) {\r\n            var handler = this[eventName];\r\n            handler && handler.call(this, eventArgs);\r\n        },\r\n\r\n        /**\r\n         * Dispose\r\n         */\r\n        dispose: function () {\r\n\r\n            this.proxy.dispose();\r\n\r\n            this.storage =\r\n            this.proxy =\r\n            this.painter = null;\r\n        },\r\n\r\n        /**\r\n         * 设置默认的cursor style\r\n         * @param {string} [cursorStyle='default'] 例如 crosshair\r\n         */\r\n        setCursorStyle: function (cursorStyle) {\r\n            var proxy = this.proxy;\r\n            proxy.setCursor && proxy.setCursor(cursorStyle);\r\n        },\r\n\r\n        /**\r\n         * 事件分发代理\r\n         *\r\n         * @private\r\n         * @param {Object} targetEl 目标图形元素\r\n         * @param {string} eventName 事件名称\r\n         * @param {Object} event 事件对象\r\n         */\r\n        dispatchToElement: function (targetEl, eventName, event) {\r\n            var eventHandler = 'on' + eventName;\r\n            var eventPacket = makeEventPacket(eventName, targetEl, event);\r\n\r\n            var el = targetEl;\r\n\r\n            while (el) {\r\n                el[eventHandler]\r\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\r\n\r\n                el.trigger(eventName, eventPacket);\r\n\r\n                el = el.parent;\r\n\r\n                if (eventPacket.cancelBubble) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!eventPacket.cancelBubble) {\r\n                // 冒泡到顶级 zrender 对象\r\n                this.trigger(eventName, eventPacket);\r\n                // 分发事件到用户自定义层\r\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\r\n                this.painter && this.painter.eachOtherLayer(function (layer) {\r\n                    if (typeof(layer[eventHandler]) == 'function') {\r\n                        layer[eventHandler].call(layer, eventPacket);\r\n                    }\r\n                    if (layer.trigger) {\r\n                        layer.trigger(eventName, eventPacket);\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         * @param {number} x\r\n         * @param {number} y\r\n         * @param {module:zrender/graphic/Displayable} exclude\r\n         * @method\r\n         */\r\n        findHover: function(x, y, exclude) {\r\n            var list = this.storage.getDisplayList();\r\n            for (var i = list.length - 1; i >= 0 ; i--) {\r\n                if (!list[i].silent\r\n                 && list[i] !== exclude\r\n                 // getDisplayList may include ignored item in VML mode\r\n                 && !list[i].ignore\r\n                 && isHover(list[i], x, y)) {\r\n                    return list[i];\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    // Common handlers\r\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick'], function (name) {\r\n        Handler.prototype[name] = function (event) {\r\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\r\n            var hovered = this.findHover(event.zrX, event.zrY, null);\r\n\r\n            if (name === 'mousedown') {\r\n                this._downel = hovered;\r\n                // In case click triggered before mouseup\r\n                this._upel = hovered;\r\n            }\r\n            else if (name === 'mosueup') {\r\n                this._upel = hovered;\r\n            }\r\n            else if (name === 'click') {\r\n                if (this._downel !== this._upel) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            this.dispatchToElement(hovered, name, event);\r\n        };\r\n    });\r\n\r\n    function isHover(displayable, x, y) {\r\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\r\n            var el = displayable;\r\n            while (el) {\r\n                // If ancestor is silent or clipped by ancestor\r\n                if (el.silent || (el.clipPath && !el.clipPath.contain(x, y)))  {\r\n                    return false;\r\n                }\r\n                el = el.parent;\r\n            }\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    util.mixin(Handler, Eventful);\r\n    util.mixin(Handler, Draggable);\r\n\r\n    module.exports = Handler;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/Handler.js\n ** module id = 604\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","// TODO Draggable for group\r\n// FIXME Draggable on element which has parent rotation or scale\r\n\r\n    function Draggable() {\r\n\r\n        this.on('mousedown', this._dragStart, this);\r\n        this.on('mousemove', this._drag, this);\r\n        this.on('mouseup', this._dragEnd, this);\r\n        this.on('globalout', this._dragEnd, this);\r\n        // this._dropTarget = null;\r\n        // this._draggingTarget = null;\r\n\r\n        // this._x = 0;\r\n        // this._y = 0;\r\n    }\r\n\r\n    Draggable.prototype = {\r\n\r\n        constructor: Draggable,\r\n\r\n        _dragStart: function (e) {\r\n            var draggingTarget = e.target;\r\n            if (draggingTarget && draggingTarget.draggable) {\r\n                this._draggingTarget = draggingTarget;\r\n                draggingTarget.dragging = true;\r\n                this._x = e.offsetX;\r\n                this._y = e.offsetY;\r\n\r\n                this.dispatchToElement(draggingTarget, 'dragstart', e.event);\r\n            }\r\n        },\r\n\r\n        _drag: function (e) {\r\n            var draggingTarget = this._draggingTarget;\r\n            if (draggingTarget) {\r\n\r\n                var x = e.offsetX;\r\n                var y = e.offsetY;\r\n\r\n                var dx = x - this._x;\r\n                var dy = y - this._y;\r\n                this._x = x;\r\n                this._y = y;\r\n\r\n                draggingTarget.drift(dx, dy, e);\r\n                this.dispatchToElement(draggingTarget, 'drag', e.event);\r\n\r\n                var dropTarget = this.findHover(x, y, draggingTarget);\r\n                var lastDropTarget = this._dropTarget;\r\n                this._dropTarget = dropTarget;\r\n\r\n                if (draggingTarget !== dropTarget) {\r\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\r\n                        this.dispatchToElement(lastDropTarget, 'dragleave', e.event);\r\n                    }\r\n                    if (dropTarget && dropTarget !== lastDropTarget) {\r\n                        this.dispatchToElement(dropTarget, 'dragenter', e.event);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        _dragEnd: function (e) {\r\n            var draggingTarget = this._draggingTarget;\r\n\r\n            if (draggingTarget) {\r\n                draggingTarget.dragging = false;\r\n            }\r\n\r\n            this.dispatchToElement(draggingTarget, 'dragend', e.event);\r\n\r\n            if (this._dropTarget) {\r\n                this.dispatchToElement(this._dropTarget, 'drop', e.event);\r\n            }\r\n\r\n            this._draggingTarget = null;\r\n            this._dropTarget = null;\r\n        }\r\n\r\n    };\r\n\r\n    module.exports = Draggable;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/mixin/Draggable.js\n ** module id = 605\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","'use strict';\r\n/**\r\n * Storage内容仓库模块\r\n * @module zrender/Storage\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n * @author errorrik (errorrik@gmail.com)\r\n * @author pissang (https://github.com/pissang/)\r\n */\r\n\r\n\r\n    var util = require('./core/util');\r\n    var env = require('./core/env');\r\n\r\n    var Group = require('./container/Group');\r\n\r\n    // Use timsort because in most case elements are partially sorted\r\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\r\n    var timsort = require('./core/timsort');\r\n\r\n    function shapeCompareFunc(a, b) {\r\n        if (a.zlevel === b.zlevel) {\r\n            if (a.z === b.z) {\r\n                // if (a.z2 === b.z2) {\r\n                //     // FIXME Slow has renderidx compare\r\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\r\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\r\n                //     return a.__renderidx - b.__renderidx;\r\n                // }\r\n                return a.z2 - b.z2;\r\n            }\r\n            return a.z - b.z;\r\n        }\r\n        return a.zlevel - b.zlevel;\r\n    }\r\n    /**\r\n     * 内容仓库 (M)\r\n     * @alias module:zrender/Storage\r\n     * @constructor\r\n     */\r\n    var Storage = function () {\r\n        // 所有常规形状，id索引的map\r\n        this._elements = {};\r\n\r\n        this._roots = [];\r\n\r\n        this._displayList = [];\r\n\r\n        this._displayListLen = 0;\r\n    };\r\n\r\n    Storage.prototype = {\r\n\r\n        constructor: Storage,\r\n\r\n        /**\r\n         * @param  {Function} cb\r\n         *\r\n         */\r\n        traverse: function (cb, context) {\r\n            for (var i = 0; i < this._roots.length; i++) {\r\n                this._roots[i].traverse(cb, context);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 返回所有图形的绘制队列\r\n         * @param {boolean} [update=false] 是否在返回前更新该数组\r\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\r\n         *\r\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\r\n         * @return {Array.<module:zrender/graphic/Displayable>}\r\n         */\r\n        getDisplayList: function (update, includeIgnore) {\r\n            includeIgnore = includeIgnore || false;\r\n            if (update) {\r\n                this.updateDisplayList(includeIgnore);\r\n            }\r\n            return this._displayList;\r\n        },\r\n\r\n        /**\r\n         * 更新图形的绘制队列。\r\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\r\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\r\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\r\n         */\r\n        updateDisplayList: function (includeIgnore) {\r\n            this._displayListLen = 0;\r\n            var roots = this._roots;\r\n            var displayList = this._displayList;\r\n            for (var i = 0, len = roots.length; i < len; i++) {\r\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\r\n            }\r\n            displayList.length = this._displayListLen;\r\n\r\n            // for (var i = 0, len = displayList.length; i < len; i++) {\r\n            //     displayList[i].__renderidx = i;\r\n            // }\r\n\r\n            // displayList.sort(shapeCompareFunc);\r\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\r\n        },\r\n\r\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\r\n\r\n            if (el.ignore && !includeIgnore) {\r\n                return;\r\n            }\r\n\r\n            el.beforeUpdate();\r\n\r\n            if (el.__dirty) {\r\n\r\n                el.update();\r\n\r\n            }\r\n\r\n            el.afterUpdate();\r\n\r\n            var clipPath = el.clipPath;\r\n            if (clipPath) {\r\n                // clipPath 的变换是基于 group 的变换\r\n                clipPath.parent = el;\r\n                clipPath.updateTransform();\r\n\r\n                // FIXME 效率影响\r\n                if (clipPaths) {\r\n                    clipPaths = clipPaths.slice();\r\n                    clipPaths.push(clipPath);\r\n                }\r\n                else {\r\n                    clipPaths = [clipPath];\r\n                }\r\n            }\r\n\r\n            if (el.isGroup) {\r\n                var children = el._children;\r\n\r\n                for (var i = 0; i < children.length; i++) {\r\n                    var child = children[i];\r\n\r\n                    // Force to mark as dirty if group is dirty\r\n                    // FIXME __dirtyPath ?\r\n                    if (el.__dirty) {\r\n                        child.__dirty = true;\r\n                    }\r\n\r\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\r\n                }\r\n\r\n                // Mark group clean here\r\n                el.__dirty = false;\r\n\r\n            }\r\n            else {\r\n                el.__clipPaths = clipPaths;\r\n\r\n                this._displayList[this._displayListLen++] = el;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 添加图形(Shape)或者组(Group)到根节点\r\n         * @param {module:zrender/Element} el\r\n         */\r\n        addRoot: function (el) {\r\n            // Element has been added\r\n            if (this._elements[el.id]) {\r\n                return;\r\n            }\r\n\r\n            if (el instanceof Group) {\r\n                el.addChildrenToStorage(this);\r\n            }\r\n\r\n            this.addToMap(el);\r\n            this._roots.push(el);\r\n        },\r\n\r\n        /**\r\n         * 删除指定的图形(Shape)或者组(Group)\r\n         * @param {string|Array.<string>} [elId] 如果为空清空整个Storage\r\n         */\r\n        delRoot: function (elId) {\r\n            if (elId == null) {\r\n                // 不指定elId清空\r\n                for (var i = 0; i < this._roots.length; i++) {\r\n                    var root = this._roots[i];\r\n                    if (root instanceof Group) {\r\n                        root.delChildrenFromStorage(this);\r\n                    }\r\n                }\r\n\r\n                this._elements = {};\r\n                this._roots = [];\r\n                this._displayList = [];\r\n                this._displayListLen = 0;\r\n\r\n                return;\r\n            }\r\n\r\n            if (elId instanceof Array) {\r\n                for (var i = 0, l = elId.length; i < l; i++) {\r\n                    this.delRoot(elId[i]);\r\n                }\r\n                return;\r\n            }\r\n\r\n            var el;\r\n            if (typeof(elId) == 'string') {\r\n                el = this._elements[elId];\r\n            }\r\n            else {\r\n                el = elId;\r\n            }\r\n\r\n            var idx = util.indexOf(this._roots, el);\r\n            if (idx >= 0) {\r\n                this.delFromMap(el.id);\r\n                this._roots.splice(idx, 1);\r\n                if (el instanceof Group) {\r\n                    el.delChildrenFromStorage(this);\r\n                }\r\n            }\r\n        },\r\n\r\n        addToMap: function (el) {\r\n            if (el instanceof Group) {\r\n                el.__storage = this;\r\n            }\r\n            el.dirty();\r\n\r\n            this._elements[el.id] = el;\r\n\r\n            return this;\r\n        },\r\n\r\n        get: function (elId) {\r\n            return this._elements[elId];\r\n        },\r\n\r\n        delFromMap: function (elId) {\r\n            var elements = this._elements;\r\n            var el = elements[elId];\r\n            if (el) {\r\n                delete elements[elId];\r\n                if (el instanceof Group) {\r\n                    el.__storage = null;\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 清空并且释放Storage\r\n         */\r\n        dispose: function () {\r\n            this._elements =\r\n            this._renderList =\r\n            this._roots = null;\r\n        },\r\n\r\n        displayableSortFunc: shapeCompareFunc\r\n    };\r\n\r\n    module.exports = Storage;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/Storage.js\n ** module id = 606\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","// https://github.com/mziccard/node-timsort\r\n\r\n    var DEFAULT_MIN_MERGE = 32;\r\n\r\n    var DEFAULT_MIN_GALLOPING = 7;\r\n\r\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\r\n\r\n    function minRunLength(n) {\r\n        var r = 0;\r\n\r\n        while (n >= DEFAULT_MIN_MERGE) {\r\n            r |= n & 1;\r\n            n >>= 1;\r\n        }\r\n\r\n        return n + r;\r\n    }\r\n\r\n    function makeAscendingRun(array, lo, hi, compare) {\r\n        var runHi = lo + 1;\r\n\r\n        if (runHi === hi) {\r\n            return 1;\r\n        }\r\n\r\n        if (compare(array[runHi++], array[lo]) < 0) {\r\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\r\n                runHi++;\r\n            }\r\n\r\n            reverseRun(array, lo, runHi);\r\n        }\r\n        else {\r\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\r\n                runHi++;\r\n            }\r\n        }\r\n\r\n        return runHi - lo;\r\n    }\r\n\r\n    function reverseRun(array, lo, hi) {\r\n        hi--;\r\n\r\n        while (lo < hi) {\r\n            var t = array[lo];\r\n            array[lo++] = array[hi];\r\n            array[hi--] = t;\r\n        }\r\n    }\r\n\r\n    function binaryInsertionSort(array, lo, hi, start, compare) {\r\n        if (start === lo) {\r\n            start++;\r\n        }\r\n\r\n        for (; start < hi; start++) {\r\n            var pivot = array[start];\r\n\r\n            var left = lo;\r\n            var right = start;\r\n            var mid;\r\n\r\n            while (left < right) {\r\n                mid = left + right >>> 1;\r\n\r\n                if (compare(pivot, array[mid]) < 0) {\r\n                    right = mid;\r\n                }\r\n                else {\r\n                    left = mid + 1;\r\n                }\r\n            }\r\n\r\n            var n = start - left;\r\n\r\n            switch (n) {\r\n                case 3:\r\n                    array[left + 3] = array[left + 2];\r\n\r\n                case 2:\r\n                    array[left + 2] = array[left + 1];\r\n\r\n                case 1:\r\n                    array[left + 1] = array[left];\r\n                    break;\r\n                default:\r\n                    while (n > 0) {\r\n                        array[left + n] = array[left + n - 1];\r\n                        n--;\r\n                    }\r\n            }\r\n\r\n            array[left] = pivot;\r\n        }\r\n    }\r\n\r\n    function gallopLeft(value, array, start, length, hint, compare) {\r\n        var lastOffset = 0;\r\n        var maxOffset = 0;\r\n        var offset = 1;\r\n\r\n        if (compare(value, array[start + hint]) > 0) {\r\n            maxOffset = length - hint;\r\n\r\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\r\n                lastOffset = offset;\r\n                offset = (offset << 1) + 1;\r\n\r\n                if (offset <= 0) {\r\n                    offset = maxOffset;\r\n                }\r\n            }\r\n\r\n            if (offset > maxOffset) {\r\n                offset = maxOffset;\r\n            }\r\n\r\n            lastOffset += hint;\r\n            offset += hint;\r\n        }\r\n        else {\r\n            maxOffset = hint + 1;\r\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\r\n                lastOffset = offset;\r\n                offset = (offset << 1) + 1;\r\n\r\n                if (offset <= 0) {\r\n                    offset = maxOffset;\r\n                }\r\n            }\r\n            if (offset > maxOffset) {\r\n                offset = maxOffset;\r\n            }\r\n\r\n            var tmp = lastOffset;\r\n            lastOffset = hint - offset;\r\n            offset = hint - tmp;\r\n        }\r\n\r\n        lastOffset++;\r\n        while (lastOffset < offset) {\r\n            var m = lastOffset + (offset - lastOffset >>> 1);\r\n\r\n            if (compare(value, array[start + m]) > 0) {\r\n                lastOffset = m + 1;\r\n            }\r\n            else {\r\n                offset = m;\r\n            }\r\n        }\r\n        return offset;\r\n    }\r\n\r\n    function gallopRight(value, array, start, length, hint, compare) {\r\n        var lastOffset = 0;\r\n        var maxOffset = 0;\r\n        var offset = 1;\r\n\r\n        if (compare(value, array[start + hint]) < 0) {\r\n            maxOffset = hint + 1;\r\n\r\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\r\n                lastOffset = offset;\r\n                offset = (offset << 1) + 1;\r\n\r\n                if (offset <= 0) {\r\n                    offset = maxOffset;\r\n                }\r\n            }\r\n\r\n            if (offset > maxOffset) {\r\n                offset = maxOffset;\r\n            }\r\n\r\n            var tmp = lastOffset;\r\n            lastOffset = hint - offset;\r\n            offset = hint - tmp;\r\n        }\r\n        else {\r\n            maxOffset = length - hint;\r\n\r\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\r\n                lastOffset = offset;\r\n                offset = (offset << 1) + 1;\r\n\r\n                if (offset <= 0) {\r\n                    offset = maxOffset;\r\n                }\r\n            }\r\n\r\n            if (offset > maxOffset) {\r\n                offset = maxOffset;\r\n            }\r\n\r\n            lastOffset += hint;\r\n            offset += hint;\r\n        }\r\n\r\n        lastOffset++;\r\n\r\n        while (lastOffset < offset) {\r\n            var m = lastOffset + (offset - lastOffset >>> 1);\r\n\r\n            if (compare(value, array[start + m]) < 0) {\r\n                offset = m;\r\n            }\r\n            else {\r\n                lastOffset = m + 1;\r\n            }\r\n        }\r\n\r\n        return offset;\r\n    }\r\n\r\n    function TimSort(array, compare) {\r\n        var minGallop = DEFAULT_MIN_GALLOPING;\r\n        var length = 0;\r\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\r\n        var stackLength = 0;\r\n        var runStart;\r\n        var runLength;\r\n        var stackSize = 0;\r\n\r\n        length = array.length;\r\n\r\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\r\n            tmpStorageLength = length >>> 1;\r\n        }\r\n\r\n        var tmp = [];\r\n\r\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\r\n\r\n        runStart = [];\r\n        runLength = [];\r\n\r\n        function pushRun(_runStart, _runLength) {\r\n            runStart[stackSize] = _runStart;\r\n            runLength[stackSize] = _runLength;\r\n            stackSize += 1;\r\n        }\r\n\r\n        function mergeRuns() {\r\n            while (stackSize > 1) {\r\n                var n = stackSize - 2;\r\n\r\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\r\n                    if (runLength[n - 1] < runLength[n + 1]) {\r\n                        n--;\r\n                    }\r\n                }\r\n                else if (runLength[n] > runLength[n + 1]) {\r\n                    break;\r\n                }\r\n                mergeAt(n);\r\n            }\r\n        }\r\n\r\n        function forceMergeRuns() {\r\n            while (stackSize > 1) {\r\n                var n = stackSize - 2;\r\n\r\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\r\n                    n--;\r\n                }\r\n\r\n                mergeAt(n);\r\n            }\r\n        }\r\n\r\n        function mergeAt(i) {\r\n            var start1 = runStart[i];\r\n            var length1 = runLength[i];\r\n            var start2 = runStart[i + 1];\r\n            var length2 = runLength[i + 1];\r\n\r\n            runLength[i] = length1 + length2;\r\n\r\n            if (i === stackSize - 3) {\r\n                runStart[i + 1] = runStart[i + 2];\r\n                runLength[i + 1] = runLength[i + 2];\r\n            }\r\n\r\n            stackSize--;\r\n\r\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\r\n            start1 += k;\r\n            length1 -= k;\r\n\r\n            if (length1 === 0) {\r\n                return;\r\n            }\r\n\r\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\r\n\r\n            if (length2 === 0) {\r\n                return;\r\n            }\r\n\r\n            if (length1 <= length2) {\r\n                mergeLow(start1, length1, start2, length2);\r\n            }\r\n            else {\r\n                mergeHigh(start1, length1, start2, length2);\r\n            }\r\n        }\r\n\r\n        function mergeLow(start1, length1, start2, length2) {\r\n            var i = 0;\r\n\r\n            for (i = 0; i < length1; i++) {\r\n                tmp[i] = array[start1 + i];\r\n            }\r\n\r\n            var cursor1 = 0;\r\n            var cursor2 = start2;\r\n            var dest = start1;\r\n\r\n            array[dest++] = array[cursor2++];\r\n\r\n            if (--length2 === 0) {\r\n                for (i = 0; i < length1; i++) {\r\n                    array[dest + i] = tmp[cursor1 + i];\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (length1 === 1) {\r\n                for (i = 0; i < length2; i++) {\r\n                    array[dest + i] = array[cursor2 + i];\r\n                }\r\n                array[dest + length2] = tmp[cursor1];\r\n                return;\r\n            }\r\n\r\n            var _minGallop = minGallop;\r\n            var count1, count2, exit;\r\n\r\n            while (1) {\r\n                count1 = 0;\r\n                count2 = 0;\r\n                exit = false;\r\n\r\n                do {\r\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\r\n                        array[dest++] = array[cursor2++];\r\n                        count2++;\r\n                        count1 = 0;\r\n\r\n                        if (--length2 === 0) {\r\n                            exit = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    else {\r\n                        array[dest++] = tmp[cursor1++];\r\n                        count1++;\r\n                        count2 = 0;\r\n                        if (--length1 === 1) {\r\n                            exit = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                } while ((count1 | count2) < _minGallop);\r\n\r\n                if (exit) {\r\n                    break;\r\n                }\r\n\r\n                do {\r\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\r\n\r\n                    if (count1 !== 0) {\r\n                        for (i = 0; i < count1; i++) {\r\n                            array[dest + i] = tmp[cursor1 + i];\r\n                        }\r\n\r\n                        dest += count1;\r\n                        cursor1 += count1;\r\n                        length1 -= count1;\r\n                        if (length1 <= 1) {\r\n                            exit = true;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    array[dest++] = array[cursor2++];\r\n\r\n                    if (--length2 === 0) {\r\n                        exit = true;\r\n                        break;\r\n                    }\r\n\r\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\r\n\r\n                    if (count2 !== 0) {\r\n                        for (i = 0; i < count2; i++) {\r\n                            array[dest + i] = array[cursor2 + i];\r\n                        }\r\n\r\n                        dest += count2;\r\n                        cursor2 += count2;\r\n                        length2 -= count2;\r\n\r\n                        if (length2 === 0) {\r\n                            exit = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    array[dest++] = tmp[cursor1++];\r\n\r\n                    if (--length1 === 1) {\r\n                        exit = true;\r\n                        break;\r\n                    }\r\n\r\n                    _minGallop--;\r\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\r\n\r\n                if (exit) {\r\n                    break;\r\n                }\r\n\r\n                if (_minGallop < 0) {\r\n                    _minGallop = 0;\r\n                }\r\n\r\n                _minGallop += 2;\r\n            }\r\n\r\n            minGallop = _minGallop;\r\n\r\n            minGallop < 1 && (minGallop = 1);\r\n\r\n            if (length1 === 1) {\r\n                for (i = 0; i < length2; i++) {\r\n                    array[dest + i] = array[cursor2 + i];\r\n                }\r\n                array[dest + length2] = tmp[cursor1];\r\n            }\r\n            else if (length1 === 0) {\r\n                throw new Error();\r\n                // throw new Error('mergeLow preconditions were not respected');\r\n            }\r\n            else {\r\n                for (i = 0; i < length1; i++) {\r\n                    array[dest + i] = tmp[cursor1 + i];\r\n                }\r\n            }\r\n        }\r\n\r\n        function mergeHigh (start1, length1, start2, length2) {\r\n            var i = 0;\r\n\r\n            for (i = 0; i < length2; i++) {\r\n                tmp[i] = array[start2 + i];\r\n            }\r\n\r\n            var cursor1 = start1 + length1 - 1;\r\n            var cursor2 = length2 - 1;\r\n            var dest = start2 + length2 - 1;\r\n            var customCursor = 0;\r\n            var customDest = 0;\r\n\r\n            array[dest--] = array[cursor1--];\r\n\r\n            if (--length1 === 0) {\r\n                customCursor = dest - (length2 - 1);\r\n\r\n                for (i = 0; i < length2; i++) {\r\n                    array[customCursor + i] = tmp[i];\r\n                }\r\n\r\n                return;\r\n            }\r\n\r\n            if (length2 === 1) {\r\n                dest -= length1;\r\n                cursor1 -= length1;\r\n                customDest = dest + 1;\r\n                customCursor = cursor1 + 1;\r\n\r\n                for (i = length1 - 1; i >= 0; i--) {\r\n                    array[customDest + i] = array[customCursor + i];\r\n                }\r\n\r\n                array[dest] = tmp[cursor2];\r\n                return;\r\n            }\r\n\r\n            var _minGallop = minGallop;\r\n\r\n            while (true) {\r\n                var count1 = 0;\r\n                var count2 = 0;\r\n                var exit = false;\r\n\r\n                do {\r\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\r\n                        array[dest--] = array[cursor1--];\r\n                        count1++;\r\n                        count2 = 0;\r\n                        if (--length1 === 0) {\r\n                            exit = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    else {\r\n                        array[dest--] = tmp[cursor2--];\r\n                        count2++;\r\n                        count1 = 0;\r\n                        if (--length2 === 1) {\r\n                            exit = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                } while ((count1 | count2) < _minGallop);\r\n\r\n                if (exit) {\r\n                    break;\r\n                }\r\n\r\n                do {\r\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\r\n\r\n                    if (count1 !== 0) {\r\n                        dest -= count1;\r\n                        cursor1 -= count1;\r\n                        length1 -= count1;\r\n                        customDest = dest + 1;\r\n                        customCursor = cursor1 + 1;\r\n\r\n                        for (i = count1 - 1; i >= 0; i--) {\r\n                            array[customDest + i] = array[customCursor + i];\r\n                        }\r\n\r\n                        if (length1 === 0) {\r\n                            exit = true;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    array[dest--] = tmp[cursor2--];\r\n\r\n                    if (--length2 === 1) {\r\n                        exit = true;\r\n                        break;\r\n                    }\r\n\r\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\r\n\r\n                    if (count2 !== 0) {\r\n                        dest -= count2;\r\n                        cursor2 -= count2;\r\n                        length2 -= count2;\r\n                        customDest = dest + 1;\r\n                        customCursor = cursor2 + 1;\r\n\r\n                        for (i = 0; i < count2; i++) {\r\n                            array[customDest + i] = tmp[customCursor + i];\r\n                        }\r\n\r\n                        if (length2 <= 1) {\r\n                            exit = true;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    array[dest--] = array[cursor1--];\r\n\r\n                    if (--length1 === 0) {\r\n                        exit = true;\r\n                        break;\r\n                    }\r\n\r\n                    _minGallop--;\r\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\r\n\r\n                if (exit) {\r\n                    break;\r\n                }\r\n\r\n                if (_minGallop < 0) {\r\n                    _minGallop = 0;\r\n                }\r\n\r\n                _minGallop += 2;\r\n            }\r\n\r\n            minGallop = _minGallop;\r\n\r\n            if (minGallop < 1) {\r\n                minGallop = 1;\r\n            }\r\n\r\n            if (length2 === 1) {\r\n                dest -= length1;\r\n                cursor1 -= length1;\r\n                customDest = dest + 1;\r\n                customCursor = cursor1 + 1;\r\n\r\n                for (i = length1 - 1; i >= 0; i--) {\r\n                    array[customDest + i] = array[customCursor + i];\r\n                }\r\n\r\n                array[dest] = tmp[cursor2];\r\n            }\r\n            else if (length2 === 0) {\r\n                throw new Error();\r\n                // throw new Error('mergeHigh preconditions were not respected');\r\n            }\r\n            else {\r\n                customCursor = dest - (length2 - 1);\r\n                for (i = 0; i < length2; i++) {\r\n                    array[customCursor + i] = tmp[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        this.mergeRuns = mergeRuns;\r\n        this.forceMergeRuns = forceMergeRuns;\r\n        this.pushRun = pushRun;\r\n    }\r\n\r\n    function sort(array, compare, lo, hi) {\r\n        if (!lo) {\r\n            lo = 0;\r\n        }\r\n        if (!hi) {\r\n            hi = array.length;\r\n        }\r\n\r\n        var remaining = hi - lo;\r\n\r\n        if (remaining < 2) {\r\n            return;\r\n        }\r\n\r\n        var runLength = 0;\r\n\r\n        if (remaining < DEFAULT_MIN_MERGE) {\r\n            runLength = makeAscendingRun(array, lo, hi, compare);\r\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\r\n            return;\r\n        }\r\n\r\n        var ts = new TimSort(array, compare);\r\n\r\n        var minRun = minRunLength(remaining);\r\n\r\n        do {\r\n            runLength = makeAscendingRun(array, lo, hi, compare);\r\n            if (runLength < minRun) {\r\n                var force = remaining;\r\n                if (force > minRun) {\r\n                    force = minRun;\r\n                }\r\n\r\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\r\n                runLength = force;\r\n            }\r\n\r\n            ts.pushRun(lo, runLength);\r\n            ts.mergeRuns();\r\n\r\n            remaining -= runLength;\r\n            lo += runLength;\r\n        } while (remaining !== 0);\r\n\r\n        ts.forceMergeRuns();\r\n    }\r\n\r\n    module.exports = sort;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/core/timsort.js\n ** module id = 607\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","'use strict';\r\n/**\r\n * 动画主类, 调度和管理所有动画控制器\r\n *\r\n * @module zrender/animation/Animation\r\n * @author pissang(https://github.com/pissang)\r\n */\r\n// TODO Additive animation\r\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\r\n// https://developer.apple.com/videos/wwdc2014/#236\r\n\r\n\r\n    var util = require('../core/util');\r\n    var Dispatcher = require('../core/event').Dispatcher;\r\n\r\n    var requestAnimationFrame = require('./requestAnimationFrame');\r\n\r\n    var Animator = require('./Animator');\r\n    /**\r\n     * @typedef {Object} IZRenderStage\r\n     * @property {Function} update\r\n     */\r\n\r\n    /**\r\n     * @alias module:zrender/animation/Animation\r\n     * @constructor\r\n     * @param {Object} [options]\r\n     * @param {Function} [options.onframe]\r\n     * @param {IZRenderStage} [options.stage]\r\n     * @example\r\n     *     var animation = new Animation();\r\n     *     var obj = {\r\n     *         x: 100,\r\n     *         y: 100\r\n     *     };\r\n     *     animation.animate(node.position)\r\n     *         .when(1000, {\r\n     *             x: 500,\r\n     *             y: 500\r\n     *         })\r\n     *         .when(2000, {\r\n     *             x: 100,\r\n     *             y: 100\r\n     *         })\r\n     *         .start('spline');\r\n     */\r\n    var Animation = function (options) {\r\n\r\n        options = options || {};\r\n\r\n        this.stage = options.stage || {};\r\n\r\n        this.onframe = options.onframe || function() {};\r\n\r\n        // private properties\r\n        this._clips = [];\r\n\r\n        this._running = false;\r\n\r\n        this._time = 0;\r\n\r\n        Dispatcher.call(this);\r\n    };\r\n\r\n    Animation.prototype = {\r\n\r\n        constructor: Animation,\r\n        /**\r\n         * 添加 clip\r\n         * @param {module:zrender/animation/Clip} clip\r\n         */\r\n        addClip: function (clip) {\r\n            this._clips.push(clip);\r\n        },\r\n        /**\r\n         * 添加 animator\r\n         * @param {module:zrender/animation/Animator} animator\r\n         */\r\n        addAnimator: function (animator) {\r\n            animator.animation = this;\r\n            var clips = animator.getClips();\r\n            for (var i = 0; i < clips.length; i++) {\r\n                this.addClip(clips[i]);\r\n            }\r\n        },\r\n        /**\r\n         * 删除动画片段\r\n         * @param {module:zrender/animation/Clip} clip\r\n         */\r\n        removeClip: function(clip) {\r\n            var idx = util.indexOf(this._clips, clip);\r\n            if (idx >= 0) {\r\n                this._clips.splice(idx, 1);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 删除动画片段\r\n         * @param {module:zrender/animation/Animator} animator\r\n         */\r\n        removeAnimator: function (animator) {\r\n            var clips = animator.getClips();\r\n            for (var i = 0; i < clips.length; i++) {\r\n                this.removeClip(clips[i]);\r\n            }\r\n            animator.animation = null;\r\n        },\r\n\r\n        _update: function() {\r\n\r\n            var time = new Date().getTime();\r\n            var delta = time - this._time;\r\n            var clips = this._clips;\r\n            var len = clips.length;\r\n\r\n            var deferredEvents = [];\r\n            var deferredClips = [];\r\n            for (var i = 0; i < len; i++) {\r\n                var clip = clips[i];\r\n                var e = clip.step(time);\r\n                // Throw out the events need to be called after\r\n                // stage.update, like destroy\r\n                if (e) {\r\n                    deferredEvents.push(e);\r\n                    deferredClips.push(clip);\r\n                }\r\n            }\r\n\r\n            // Remove the finished clip\r\n            for (var i = 0; i < len;) {\r\n                if (clips[i]._needsRemove) {\r\n                    clips[i] = clips[len - 1];\r\n                    clips.pop();\r\n                    len--;\r\n                }\r\n                else {\r\n                    i++;\r\n                }\r\n            }\r\n\r\n            len = deferredEvents.length;\r\n            for (var i = 0; i < len; i++) {\r\n                deferredClips[i].fire(deferredEvents[i]);\r\n            }\r\n\r\n            this._time = time;\r\n\r\n            this.onframe(delta);\r\n\r\n            this.trigger('frame', delta);\r\n\r\n            if (this.stage.update) {\r\n                this.stage.update();\r\n            }\r\n        },\r\n        /**\r\n         * 开始运行动画\r\n         */\r\n        start: function () {\r\n            var self = this;\r\n\r\n            this._running = true;\r\n\r\n            function step() {\r\n                if (self._running) {\r\n\r\n                    requestAnimationFrame(step);\r\n\r\n                    self._update();\r\n                }\r\n            }\r\n\r\n            this._time = new Date().getTime();\r\n            requestAnimationFrame(step);\r\n        },\r\n        /**\r\n         * 停止运行动画\r\n         */\r\n        stop: function () {\r\n            this._running = false;\r\n        },\r\n        /**\r\n         * 清除所有动画片段\r\n         */\r\n        clear: function () {\r\n            this._clips = [];\r\n        },\r\n        /**\r\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\r\n         * @param  {Object} target\r\n         * @param  {Object} options\r\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\r\n         * @param  {Function} [options.getter=null]\r\n         *         如果指定getter函数，会通过getter函数取属性值\r\n         * @param  {Function} [options.setter=null]\r\n         *         如果指定setter函数，会通过setter函数设置属性值\r\n         * @return {module:zrender/animation/Animation~Animator}\r\n         */\r\n        animate: function (target, options) {\r\n            options = options || {};\r\n            var animator = new Animator(\r\n                target,\r\n                options.loop,\r\n                options.getter,\r\n                options.setter\r\n            );\r\n\r\n            return animator;\r\n        }\r\n    };\r\n\r\n    util.mixin(Animation, Dispatcher);\r\n\r\n    module.exports = Animation;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/animation/Animation.js\n ** module id = 608\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","'use strict';\r\n/**\r\n * 事件辅助类\r\n * @module zrender/core/event\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n */\r\n\r\n\r\n    var Eventful = require('../mixin/Eventful');\r\n\r\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\r\n\r\n    function getBoundingClientRect(el) {\r\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\r\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\r\n    }\r\n\r\n    function clientToLocal(el, e, out) {\r\n        // clientX/clientY is according to view port.\r\n        var box = getBoundingClientRect(el);\r\n        out = out || {};\r\n        out.zrX = e.clientX - box.left;\r\n        out.zrY = e.clientY - box.top;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标\r\n     */\r\n    function normalizeEvent(el, e) {\r\n\r\n        e = e || window.event;\r\n\r\n        if (e.zrX != null) {\r\n            return e;\r\n        }\r\n\r\n        var eventType = e.type;\r\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\r\n\r\n        if (!isTouch) {\r\n            clientToLocal(el, e, e);\r\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\r\n        }\r\n        else {\r\n            var touch = eventType != 'touchend'\r\n                ? e.targetTouches[0]\r\n                : e.changedTouches[0];\r\n            touch && clientToLocal(el, touch, e);\r\n        }\r\n\r\n        return e;\r\n    }\r\n\r\n    function addEventListener(el, name, handler) {\r\n        if (isDomLevel2) {\r\n            el.addEventListener(name, handler);\r\n        }\r\n        else {\r\n            el.attachEvent('on' + name, handler);\r\n        }\r\n    }\r\n\r\n    function removeEventListener(el, name, handler) {\r\n        if (isDomLevel2) {\r\n            el.removeEventListener(name, handler);\r\n        }\r\n        else {\r\n            el.detachEvent('on' + name, handler);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止冒泡和阻止默认行为\r\n     * @memberOf module:zrender/core/event\r\n     * @method\r\n     * @param {Event} e : event对象\r\n     */\r\n    var stop = isDomLevel2\r\n        ? function (e) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            e.cancelBubble = true;\r\n        }\r\n        : function (e) {\r\n            e.returnValue = false;\r\n            e.cancelBubble = true;\r\n        };\r\n\r\n    module.exports = {\r\n        clientToLocal: clientToLocal,\r\n        normalizeEvent: normalizeEvent,\r\n        addEventListener: addEventListener,\r\n        removeEventListener: removeEventListener,\r\n\r\n        stop: stop,\r\n        // 做向上兼容\r\n        Dispatcher: Eventful\r\n    };\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/core/event.js\n ** module id = 609\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","\r\n\r\n    module.exports = (typeof window !== 'undefined' &&\r\n                                    (window.requestAnimationFrame\r\n                                    || window.msRequestAnimationFrame\r\n                                    || window.mozRequestAnimationFrame\r\n                                    || window.webkitRequestAnimationFrame))\r\n                                || function (func) {\r\n                                    setTimeout(func, 16);\r\n                                };\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/animation/requestAnimationFrame.js\n ** module id = 610\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","\r\n\r\n    var eventTool = require('../core/event');\r\n    var zrUtil = require('../core/util');\r\n    var Eventful = require('../mixin/Eventful');\r\n    var env = require('../core/env');\r\n    var GestureMgr = require('../core/GestureMgr');\r\n\r\n    var addEventListener = eventTool.addEventListener;\r\n    var removeEventListener = eventTool.removeEventListener;\r\n    var normalizeEvent = eventTool.normalizeEvent;\r\n\r\n    var TOUCH_CLICK_DELAY = 300;\r\n\r\n    var mouseHandlerNames = [\r\n        'click', 'dblclick', 'mousewheel', 'mouseout',\r\n        'mouseup', 'mousedown', 'mousemove'\r\n    ];\r\n\r\n    var touchHandlerNames = [\r\n        'touchstart', 'touchend', 'touchmove'\r\n    ];\r\n\r\n    function eventNameFix(name) {\r\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\r\n    }\r\n\r\n    function processGesture(proxy, event, stage) {\r\n        var gestureMgr = proxy._gestureMgr;\r\n\r\n        stage === 'start' && gestureMgr.clear();\r\n\r\n        var gestureInfo = gestureMgr.recognize(\r\n            event,\r\n            proxy.handler.findHover(event.zrX, event.zrY, null),\r\n            proxy.dom\r\n        );\r\n\r\n        stage === 'end' && gestureMgr.clear();\r\n\r\n        if (gestureInfo) {\r\n            // eventTool.stop(event);\r\n            var type = gestureInfo.type;\r\n            event.gestureEvent = type;\r\n\r\n            proxy.handler.dispatchToElement(gestureInfo.target, type, gestureInfo.event);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Prevent mouse event from being dispatched after Touch Events action\r\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\r\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\r\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\r\n     * Result: Blocking Mouse Events for 700ms.\r\n     */\r\n    function setTouchTimer(instance) {\r\n        instance._touching = true;\r\n        clearTimeout(instance._touchTimer);\r\n        instance._touchTimer = setTimeout(function () {\r\n            instance._touching = false;\r\n        }, 700);\r\n    }\r\n\r\n    function useTouchEvent() {\r\n        return env.touchEventsSupported;\r\n    }\r\n\r\n    var domHandlers = {\r\n        /**\r\n         * Mouse move handler\r\n         * @inner\r\n         * @param {Event} event\r\n         */\r\n        mousemove: function (event) {\r\n            event = normalizeEvent(this.dom, event);\r\n\r\n            this.trigger('mousemove', event);\r\n        },\r\n\r\n        /**\r\n         * Mouse out handler\r\n         * @inner\r\n         * @param {Event} event\r\n         */\r\n        mouseout: function (event) {\r\n            event = normalizeEvent(this.dom, event);\r\n\r\n            var element = event.toElement || event.relatedTarget;\r\n            if (element != this.dom) {\r\n                while (element && element.nodeType != 9) {\r\n                    // 忽略包含在root中的dom引起的mouseOut\r\n                    if (element === this.dom) {\r\n                        return;\r\n                    }\r\n\r\n                    element = element.parentNode;\r\n                }\r\n            }\r\n\r\n            this.trigger('mouseout', event);\r\n        },\r\n\r\n        /**\r\n         * Touch开始响应函数\r\n         * @inner\r\n         * @param {Event} event\r\n         */\r\n        touchstart: function (event) {\r\n            // Default mouse behaviour should not be disabled here.\r\n            // For example, page may needs to be slided.\r\n\r\n            event = normalizeEvent(this.dom, event);\r\n\r\n            this._lastTouchMoment = new Date();\r\n\r\n            processGesture(this, event, 'start');\r\n\r\n            // 平板补充一次findHover\r\n            // this._mobileFindFixed(event);\r\n            // Trigger mousemove and mousedown\r\n            domHandlers.mousemove.call(this, event);\r\n\r\n            domHandlers.mousedown.call(this, event);\r\n\r\n            setTouchTimer(this);\r\n        },\r\n\r\n        /**\r\n         * Touch移动响应函数\r\n         * @inner\r\n         * @param {Event} event\r\n         */\r\n        touchmove: function (event) {\r\n\r\n            event = normalizeEvent(this.dom, event);\r\n\r\n            processGesture(this, event, 'change');\r\n\r\n            // Mouse move should always be triggered no matter whether\r\n            // there is gestrue event, because mouse move and pinch may\r\n            // be used at the same time.\r\n            domHandlers.mousemove.call(this, event);\r\n\r\n            setTouchTimer(this);\r\n        },\r\n\r\n        /**\r\n         * Touch结束响应函数\r\n         * @inner\r\n         * @param {Event} event\r\n         */\r\n        touchend: function (event) {\r\n\r\n            event = normalizeEvent(this.dom, event);\r\n\r\n            processGesture(this, event, 'end');\r\n\r\n            domHandlers.mouseup.call(this, event);\r\n\r\n            // click event should always be triggered no matter whether\r\n            // there is gestrue event. System click can not be prevented.\r\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\r\n                domHandlers.click.call(this, event);\r\n            }\r\n\r\n            setTouchTimer(this);\r\n        }\r\n    };\r\n\r\n    // Common handlers\r\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick'], function (name) {\r\n        domHandlers[name] = function (event) {\r\n            event = normalizeEvent(this.dom, event);\r\n            this.trigger(name, event);\r\n        };\r\n    });\r\n\r\n    /**\r\n     * 为控制类实例初始化dom 事件处理函数\r\n     *\r\n     * @inner\r\n     * @param {module:zrender/Handler} instance 控制类实例\r\n     */\r\n    function initDomHandler(instance) {\r\n        for (var i = 0; i < touchHandlerNames.length; i++) {\r\n            var name = touchHandlerNames[i];\r\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\r\n        }\r\n\r\n        for (var i = 0; i < mouseHandlerNames.length; i++) {\r\n            var name = mouseHandlerNames[i];\r\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\r\n        }\r\n\r\n        function makeMouseHandler(fn, instance) {\r\n            return function () {\r\n                if (instance._touching) {\r\n                    return;\r\n                }\r\n                return fn.apply(instance, arguments);\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n    function HandlerDomProxy(dom) {\r\n        Eventful.call(this);\r\n\r\n        this.dom = dom;\r\n\r\n        /**\r\n         * @private\r\n         * @type {boolean}\r\n         */\r\n        this._touching = false;\r\n\r\n        /**\r\n         * @private\r\n         * @type {number}\r\n         */\r\n        this._touchTimer;\r\n\r\n        /**\r\n         * @private\r\n         * @type {module:zrender/core/GestureMgr}\r\n         */\r\n        this._gestureMgr = new GestureMgr();\r\n\r\n        this._handlers = {};\r\n\r\n        initDomHandler(this);\r\n\r\n        if (useTouchEvent()) {\r\n            mountHandlers(touchHandlerNames, this);\r\n\r\n            // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\r\n            // addEventListener(root, 'mouseout', this._mouseoutHandler);\r\n        }\r\n\r\n        // Considering some devices that both enable touch and mouse event (like MS Surface\r\n        // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\r\n        // mouse event can not be handle in those devices.\r\n        mountHandlers(mouseHandlerNames, this);\r\n\r\n        function mountHandlers(handlerNames, instance) {\r\n            zrUtil.each(handlerNames, function (name) {\r\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\r\n            }, instance);\r\n        }\r\n    }\r\n\r\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\r\n    handlerDomProxyProto.dispose = function () {\r\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\r\n\r\n        for (var i = 0; i < handlerNames.length; i++) {\r\n            var name = handlerNames[i];\r\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\r\n        }\r\n    };\r\n\r\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\r\n        this.dom.style.cursor = cursorStyle || 'default';\r\n    };\r\n\r\n    zrUtil.mixin(HandlerDomProxy, Eventful);\r\n\r\n    module.exports = HandlerDomProxy;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/dom/HandlerProxy.js\n ** module id = 611\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","'use strict';\r\n/**\r\n * Only implements needed gestures for mobile.\r\n */\r\n\r\n\r\n    var eventUtil = require('./event');\r\n\r\n    var GestureMgr = function () {\r\n\r\n        /**\r\n         * @private\r\n         * @type {Array.<Object>}\r\n         */\r\n        this._track = [];\r\n    };\r\n\r\n    GestureMgr.prototype = {\r\n\r\n        constructor: GestureMgr,\r\n\r\n        recognize: function (event, target, root) {\r\n            this._doTrack(event, target, root);\r\n            return this._recognize(event);\r\n        },\r\n\r\n        clear: function () {\r\n            this._track.length = 0;\r\n            return this;\r\n        },\r\n\r\n        _doTrack: function (event, target, root) {\r\n            var touches = event.touches;\r\n\r\n            if (!touches) {\r\n                return;\r\n            }\r\n\r\n            var trackItem = {\r\n                points: [],\r\n                touches: [],\r\n                target: target,\r\n                event: event\r\n            };\r\n\r\n            for (var i = 0, len = touches.length; i < len; i++) {\r\n                var touch = touches[i];\r\n                var pos = eventUtil.clientToLocal(root, touch);\r\n                trackItem.points.push([pos.zrX, pos.zrY]);\r\n                trackItem.touches.push(touch);\r\n            }\r\n\r\n            this._track.push(trackItem);\r\n        },\r\n\r\n        _recognize: function (event) {\r\n            for (var eventName in recognizers) {\r\n                if (recognizers.hasOwnProperty(eventName)) {\r\n                    var gestureInfo = recognizers[eventName](this._track, event);\r\n                    if (gestureInfo) {\r\n                        return gestureInfo;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    function dist(pointPair) {\r\n        var dx = pointPair[1][0] - pointPair[0][0];\r\n        var dy = pointPair[1][1] - pointPair[0][1];\r\n\r\n        return Math.sqrt(dx * dx + dy * dy);\r\n    }\r\n\r\n    function center(pointPair) {\r\n        return [\r\n            (pointPair[0][0] + pointPair[1][0]) / 2,\r\n            (pointPair[0][1] + pointPair[1][1]) / 2\r\n        ];\r\n    }\r\n\r\n    var recognizers = {\r\n\r\n        pinch: function (track, event) {\r\n            var trackLen = track.length;\r\n\r\n            if (!trackLen) {\r\n                return;\r\n            }\r\n\r\n            var pinchEnd = (track[trackLen - 1] || {}).points;\r\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\r\n\r\n            if (pinchPre\r\n                && pinchPre.length > 1\r\n                && pinchEnd\r\n                && pinchEnd.length > 1\r\n            ) {\r\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\r\n                !isFinite(pinchScale) && (pinchScale = 1);\r\n\r\n                event.pinchScale = pinchScale;\r\n\r\n                var pinchCenter = center(pinchEnd);\r\n                event.pinchX = pinchCenter[0];\r\n                event.pinchY = pinchCenter[1];\r\n\r\n                return {\r\n                    type: 'pinch',\r\n                    target: track[0].target,\r\n                    event: event\r\n                };\r\n            }\r\n        }\r\n\r\n        // Only pinch currently.\r\n    };\r\n\r\n    module.exports = GestureMgr;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/core/GestureMgr.js\n ** module id = 612\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","'use strict';\r\n/**\r\n * Default canvas painter\r\n * @module zrender/Painter\r\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\r\n *         errorrik (errorrik@gmail.com)\r\n *         pissang (https://www.github.com/pissang)\r\n */\r\n \r\n\r\n    var config = require('./config');\r\n    var util = require('./core/util');\r\n    var log = require('./core/log');\r\n    var BoundingRect = require('./core/BoundingRect');\r\n    var timsort = require('./core/timsort');\r\n\r\n    var Layer = require('./Layer');\r\n\r\n    var requestAnimationFrame = require('./animation/requestAnimationFrame');\r\n\r\n    // PENDIGN\r\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\r\n    //\r\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\r\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\r\n\r\n    function parseInt10(val) {\r\n        return parseInt(val, 10);\r\n    }\r\n\r\n    function isLayerValid(layer) {\r\n        if (!layer) {\r\n            return false;\r\n        }\r\n\r\n        if (layer.isBuildin) {\r\n            return true;\r\n        }\r\n\r\n        if (typeof(layer.resize) !== 'function'\r\n            || typeof(layer.refresh) !== 'function'\r\n        ) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    function preProcessLayer(layer) {\r\n        layer.__unusedCount++;\r\n    }\r\n\r\n    function postProcessLayer(layer) {\r\n        if (layer.__unusedCount == 1) {\r\n            layer.clear();\r\n        }\r\n    }\r\n\r\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\r\n    var viewRect = new BoundingRect(0, 0, 0, 0);\r\n    function isDisplayableCulled(el, width, height) {\r\n        tmpRect.copy(el.getBoundingRect());\r\n        if (el.transform) {\r\n            tmpRect.applyTransform(el.transform);\r\n        }\r\n        viewRect.width = width;\r\n        viewRect.height = height;\r\n        return !tmpRect.intersect(viewRect);\r\n    }\r\n\r\n    function isClipPathChanged(clipPaths, prevClipPaths) {\r\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\r\n            return false;\r\n        }\r\n\r\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\r\n            return true;\r\n        }\r\n        for (var i = 0; i < clipPaths.length; i++) {\r\n            if (clipPaths[i] !== prevClipPaths[i]) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    function doClip(clipPaths, ctx) {\r\n        for (var i = 0; i < clipPaths.length; i++) {\r\n            var clipPath = clipPaths[i];\r\n            var m;\r\n            if (clipPath.transform) {\r\n                m = clipPath.transform;\r\n                ctx.transform(\r\n                    m[0], m[1],\r\n                    m[2], m[3],\r\n                    m[4], m[5]\r\n                );\r\n            }\r\n            var path = clipPath.path;\r\n            path.beginPath(ctx);\r\n            clipPath.buildPath(path, clipPath.shape);\r\n            ctx.clip();\r\n            // Transform back\r\n            if (clipPath.transform) {\r\n                m = clipPath.invTransform;\r\n                ctx.transform(\r\n                    m[0], m[1],\r\n                    m[2], m[3],\r\n                    m[4], m[5]\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    function createRoot(width, height) {\r\n        var domRoot = document.createElement('div');\r\n        var domRootStyle = domRoot.style;\r\n\r\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\r\n        domRootStyle.position = 'relative';\r\n        domRootStyle.overflow = 'hidden';\r\n        domRootStyle.width = width + 'px';\r\n        domRootStyle.height = height + 'px';\r\n        return domRoot;\r\n    }\r\n\r\n    /**\r\n     * @alias module:zrender/Painter\r\n     * @constructor\r\n     * @param {HTMLElement} root 绘图容器\r\n     * @param {module:zrender/Storage} storage\r\n     * @param {Ojbect} opts\r\n     */\r\n    var Painter = function (root, storage, opts) {\r\n        // In node environment using node-canvas\r\n        var singleCanvas = !root.nodeName // In node ?\r\n            || root.nodeName.toUpperCase() === 'CANVAS';\r\n\r\n        opts = opts || {};\r\n\r\n        /**\r\n         * @type {number}\r\n         */\r\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\r\n        /**\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        this._singleCanvas = singleCanvas;\r\n        /**\r\n         * 绘图容器\r\n         * @type {HTMLElement}\r\n         */\r\n        this.root = root;\r\n\r\n        var rootStyle = root.style;\r\n\r\n        if (rootStyle) {\r\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\r\n            rootStyle['-webkit-user-select'] =\r\n            rootStyle['user-select'] =\r\n            rootStyle['-webkit-touch-callout'] = 'none';\r\n\r\n            root.innerHTML = '';\r\n        }\r\n\r\n        /**\r\n         * @type {module:zrender/Storage}\r\n         */\r\n        this.storage = storage;\r\n\r\n        /**\r\n         * @type {Array.<number>}\r\n         * @private\r\n         */\r\n        var zlevelList = this._zlevelList = [];\r\n\r\n        /**\r\n         * @type {Object.<string, module:zrender/Layer>}\r\n         * @private\r\n         */\r\n        var layers = this._layers = {};\r\n\r\n        /**\r\n         * @type {Object.<string, Object>}\r\n         * @type {private}\r\n         */\r\n        this._layerConfig = {};\r\n\r\n        if (!singleCanvas) {\r\n            this._width = this._getWidth();\r\n            this._height = this._getHeight();\r\n\r\n            var domRoot = this._domRoot = createRoot(\r\n                this._width, this._height\r\n            );\r\n            root.appendChild(domRoot);\r\n        }\r\n        else {\r\n            // Use canvas width and height directly\r\n            var width = root.width;\r\n            var height = root.height;\r\n            this._width = width;\r\n            this._height = height;\r\n\r\n            // Create layer if only one given canvas\r\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\r\n            var mainLayer = new Layer(root, this, 1);\r\n            mainLayer.initContext();\r\n            // FIXME Use canvas width and height\r\n            // mainLayer.resize(width, height);\r\n            layers[0] = mainLayer;\r\n            zlevelList.push(0);\r\n        }\r\n\r\n        this.pathToImage = this._createPathToImage();\r\n\r\n        // Layers for progressive rendering\r\n        this._progressiveLayers = [];\r\n\r\n        /**\r\n         * @type {module:zrender/Layer}\r\n         * @private\r\n         */\r\n        this._hoverlayer;\r\n\r\n        this._hoverElements = [];\r\n    };\r\n\r\n    Painter.prototype = {\r\n\r\n        constructor: Painter,\r\n\r\n        /**\r\n         * If painter use a single canvas\r\n         * @return {boolean}\r\n         */\r\n        isSingleCanvas: function () {\r\n            return this._singleCanvas;\r\n        },\r\n        /**\r\n         * @return {HTMLDivElement}\r\n         */\r\n        getViewportRoot: function () {\r\n            return this._singleCanvas ? this._layers[0].dom : this._domRoot;\r\n        },\r\n\r\n        /**\r\n         * 刷新\r\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\r\n         */\r\n        refresh: function (paintAll) {\r\n\r\n            var list = this.storage.getDisplayList(true);\r\n\r\n            var zlevelList = this._zlevelList;\r\n\r\n            this._paintList(list, paintAll);\r\n\r\n            // Paint custum layers\r\n            for (var i = 0; i < zlevelList.length; i++) {\r\n                var z = zlevelList[i];\r\n                var layer = this._layers[z];\r\n                if (!layer.isBuildin && layer.refresh) {\r\n                    layer.refresh();\r\n                }\r\n            }\r\n\r\n            this.refreshHover();\r\n\r\n            if (this._progressiveLayers.length) {\r\n                this._startProgessive();\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        addHover: function (el, hoverStyle) {\r\n            if (el.__hoverMir) {\r\n                return;\r\n            }\r\n            var elMirror = new el.constructor({\r\n                style: el.style,\r\n                shape: el.shape\r\n            });\r\n            elMirror.__from = el;\r\n            el.__hoverMir = elMirror;\r\n            elMirror.setStyle(hoverStyle);\r\n            this._hoverElements.push(elMirror);\r\n        },\r\n\r\n        removeHover: function (el) {\r\n            var elMirror = el.__hoverMir;\r\n            var hoverElements = this._hoverElements;\r\n            var idx = util.indexOf(hoverElements, elMirror);\r\n            if (idx >= 0) {\r\n                hoverElements.splice(idx, 1);\r\n            }\r\n            el.__hoverMir = null;\r\n        },\r\n\r\n        clearHover: function (el) {\r\n            var hoverElements = this._hoverElements;\r\n            for (var i = 0; i < hoverElements.length; i++) {\r\n                var from = hoverElements[i].__from;\r\n                if (from) {\r\n                    from.__hoverMir = null;\r\n                }\r\n            }\r\n            hoverElements.length = 0;\r\n        },\r\n\r\n        refreshHover: function () {\r\n            var hoverElements = this._hoverElements;\r\n            var len = hoverElements.length;\r\n            var hoverLayer = this._hoverlayer;\r\n            hoverLayer && hoverLayer.clear();\r\n\r\n            if (!len) {\r\n                return;\r\n            }\r\n            timsort(hoverElements, this.storage.displayableSortFunc);\r\n\r\n            // Use a extream large zlevel\r\n            // FIXME?\r\n            if (!hoverLayer) {\r\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\r\n            }\r\n\r\n            var scope = {};\r\n            hoverLayer.ctx.save();\r\n            for (var i = 0; i < len;) {\r\n                var el = hoverElements[i];\r\n                var originalEl = el.__from;\r\n                // Original el is removed\r\n                // PENDING\r\n                if (!(originalEl && originalEl.__zr)) {\r\n                    hoverElements.splice(i, 1);\r\n                    originalEl.__hoverMir = null;\r\n                    len--;\r\n                    continue;\r\n                }\r\n                i++;\r\n\r\n                // Use transform\r\n                // FIXME style and shape ?\r\n                if (!originalEl.invisible) {\r\n                    el.transform = originalEl.transform;\r\n                    el.invTransform = originalEl.invTransform;\r\n                    el.__clipPaths = originalEl.__clipPaths;\r\n                    // el.\r\n                    this._doPaintEl(el, hoverLayer, true, scope);\r\n                }\r\n            }\r\n            hoverLayer.ctx.restore();\r\n        },\r\n\r\n        _startProgessive: function () {\r\n            var self = this;\r\n\r\n            if (!self._furtherProgressive) {\r\n                return;\r\n            }\r\n\r\n            // Use a token to stop progress steps triggered by\r\n            // previous zr.refresh calling.\r\n            var token = self._progressiveToken = +new Date();\r\n\r\n            self._progress++;\r\n            requestAnimationFrame(step);\r\n\r\n            function step() {\r\n                // In case refreshed or disposed\r\n                if (token === self._progressiveToken && self.storage) {\r\n\r\n                    self._doPaintList(self.storage.getDisplayList());\r\n\r\n                    if (self._furtherProgressive) {\r\n                        self._progress++;\r\n                        requestAnimationFrame(step);\r\n                    }\r\n                    else {\r\n                        self._progressiveToken = -1;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        _clearProgressive: function () {\r\n            this._progressiveToken = -1;\r\n            this._progress = 0;\r\n            util.each(this._progressiveLayers, function (layer) {\r\n                layer.__dirty && layer.clear();\r\n            });\r\n        },\r\n\r\n        _paintList: function (list, paintAll) {\r\n\r\n            if (paintAll == null) {\r\n                paintAll = false;\r\n            }\r\n\r\n            this._updateLayerStatus(list);\r\n\r\n            this._clearProgressive();\r\n\r\n            this.eachBuildinLayer(preProcessLayer);\r\n\r\n            this._doPaintList(list, paintAll);\r\n\r\n            this.eachBuildinLayer(postProcessLayer);\r\n        },\r\n\r\n        _doPaintList: function (list, paintAll) {\r\n            var currentLayer;\r\n            var currentZLevel;\r\n            var ctx;\r\n\r\n            // var invTransform = [];\r\n            var scope;\r\n\r\n            var progressiveLayerIdx = 0;\r\n            var currentProgressiveLayer;\r\n\r\n            var width = this._width;\r\n            var height = this._height;\r\n            var layerProgress;\r\n            var frame = this._progress;\r\n            function flushProgressiveLayer(layer) {\r\n                ctx.save();\r\n                ctx.globalAlpha = 1;\r\n                ctx.shadowBlur = 0;\r\n                // Avoid layer don't clear in next progressive frame\r\n                currentLayer.__dirty = true;\r\n                ctx.drawImage(layer.dom, 0, 0, width, height);\r\n                ctx.restore();\r\n\r\n                currentLayer.ctx.restore();\r\n            }\r\n\r\n            for (var i = 0, l = list.length; i < l; i++) {\r\n                var el = list[i];\r\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\r\n\r\n                var elFrame = el.__frame;\r\n\r\n                // Flush at current context\r\n                // PENDING\r\n                if (elFrame < 0 && currentProgressiveLayer) {\r\n                    flushProgressiveLayer(currentProgressiveLayer);\r\n                    currentProgressiveLayer = null;\r\n                }\r\n\r\n                // Change draw layer\r\n                if (currentZLevel !== elZLevel) {\r\n                    if (ctx) {\r\n                        ctx.restore();\r\n                    }\r\n\r\n                    // Reset scope\r\n                    scope = {};\r\n\r\n                    // Only 0 zlevel if only has one canvas\r\n                    currentZLevel = elZLevel;\r\n                    currentLayer = this.getLayer(currentZLevel);\r\n\r\n                    if (!currentLayer.isBuildin) {\r\n                        log(\r\n                            'ZLevel ' + currentZLevel\r\n                            + ' has been used by unkown layer ' + currentLayer.id\r\n                        );\r\n                    }\r\n\r\n                    ctx = currentLayer.ctx;\r\n                    ctx.save();\r\n\r\n                    // Reset the count\r\n                    currentLayer.__unusedCount = 0;\r\n\r\n                    if (currentLayer.__dirty || paintAll) {\r\n                        currentLayer.clear();\r\n                    }\r\n                }\r\n\r\n                if (!(currentLayer.__dirty || paintAll)) {\r\n                    continue;\r\n                }\r\n                if (elFrame >= 0) {\r\n                    // Progressive layer changed\r\n                    if (!currentProgressiveLayer) {\r\n                        currentProgressiveLayer = this._progressiveLayers[\r\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\r\n                        ];\r\n\r\n                        currentProgressiveLayer.ctx.save();\r\n                        currentProgressiveLayer.renderScope = {};\r\n\r\n                        if (currentProgressiveLayer\r\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\r\n                        ) {\r\n                            // flushProgressiveLayer(currentProgressiveLayer);\r\n                            // Quick jump all progressive elements\r\n                            // All progressive element are not dirty, jump over and flush directly\r\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\r\n                            // currentProgressiveLayer = null;\r\n                            continue;\r\n                        }\r\n\r\n                        layerProgress = currentProgressiveLayer.__progress;\r\n\r\n                        if (!currentProgressiveLayer.__dirty) {\r\n                            // Keep rendering\r\n                            frame = layerProgress;\r\n                        }\r\n\r\n                        currentProgressiveLayer.__progress = frame + 1;\r\n                    }\r\n\r\n                    if (elFrame === frame) {\r\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\r\n                    }\r\n                }\r\n                else {\r\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\r\n                }\r\n\r\n                el.__dirty = false;\r\n            }\r\n\r\n            if (currentProgressiveLayer) {\r\n                flushProgressiveLayer(currentProgressiveLayer);\r\n            }\r\n\r\n            // Restore the lastLayer ctx\r\n            ctx && ctx.restore();\r\n            // If still has clipping state\r\n            // if (scope.prevElClipPaths) {\r\n            //     ctx.restore();\r\n            // }\r\n\r\n            this._furtherProgressive = false;\r\n            util.each(this._progressiveLayers, function (layer) {\r\n                if (layer.__maxProgress >= layer.__progress) {\r\n                    this._furtherProgressive = true;\r\n                }\r\n            }, this);\r\n        },\r\n\r\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\r\n            var ctx = currentLayer.ctx;\r\n\r\n            if (\r\n                (currentLayer.__dirty || forcePaint)\r\n                // Ignore invisible element\r\n                && !el.invisible\r\n                // Ignore transparent element\r\n                && el.style.opacity !== 0\r\n                // Ignore scale 0 element, in some environment like node-canvas\r\n                // Draw a scale 0 element can cause all following draw wrong\r\n                && el.scale[0] && el.scale[1]\r\n                // Ignore culled element\r\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\r\n            ) {\r\n\r\n                var clipPaths = el.__clipPaths;\r\n\r\n                // Optimize when clipping on group with several elements\r\n                if (scope.prevClipLayer !== currentLayer\r\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\r\n                ) {\r\n                    // If has previous clipping state, restore from it\r\n                    if (scope.prevElClipPaths) {\r\n                        scope.prevClipLayer.ctx.restore();\r\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\r\n\r\n                        // Reset prevEl since context has been restored\r\n                        scope.prevEl = null;\r\n                    }\r\n                    // New clipping state\r\n                    if (clipPaths) {\r\n                        ctx.save();\r\n                        doClip(clipPaths, ctx);\r\n                        scope.prevClipLayer = currentLayer;\r\n                        scope.prevElClipPaths = clipPaths;\r\n                    }\r\n                }\r\n                el.beforeBrush && el.beforeBrush(ctx);\r\n\r\n                el.brush(ctx, scope.prevEl || null);\r\n                scope.prevEl = el;\r\n\r\n                el.afterBrush && el.afterBrush(ctx);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\r\n         * @param {number} zlevel\r\n         * @return {module:zrender/Layer}\r\n         */\r\n        getLayer: function (zlevel) {\r\n            if (this._singleCanvas) {\r\n                return this._layers[0];\r\n            }\r\n\r\n            var layer = this._layers[zlevel];\r\n            if (!layer) {\r\n                // Create a new layer\r\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\r\n                layer.isBuildin = true;\r\n\r\n                if (this._layerConfig[zlevel]) {\r\n                    util.merge(layer, this._layerConfig[zlevel], true);\r\n                }\r\n\r\n                this.insertLayer(zlevel, layer);\r\n\r\n                // Context is created after dom inserted to document\r\n                // Or excanvas will get 0px clientWidth and clientHeight\r\n                layer.initContext();\r\n            }\r\n\r\n            return layer;\r\n        },\r\n\r\n        insertLayer: function (zlevel, layer) {\r\n\r\n            var layersMap = this._layers;\r\n            var zlevelList = this._zlevelList;\r\n            var len = zlevelList.length;\r\n            var prevLayer = null;\r\n            var i = -1;\r\n            var domRoot = this._domRoot;\r\n\r\n            if (layersMap[zlevel]) {\r\n                log('ZLevel ' + zlevel + ' has been used already');\r\n                return;\r\n            }\r\n            // Check if is a valid layer\r\n            if (!isLayerValid(layer)) {\r\n                log('Layer of zlevel ' + zlevel + ' is not valid');\r\n                return;\r\n            }\r\n\r\n            if (len > 0 && zlevel > zlevelList[0]) {\r\n                for (i = 0; i < len - 1; i++) {\r\n                    if (\r\n                        zlevelList[i] < zlevel\r\n                        && zlevelList[i + 1] > zlevel\r\n                    ) {\r\n                        break;\r\n                    }\r\n                }\r\n                prevLayer = layersMap[zlevelList[i]];\r\n            }\r\n            zlevelList.splice(i + 1, 0, zlevel);\r\n\r\n            if (prevLayer) {\r\n                var prevDom = prevLayer.dom;\r\n                if (prevDom.nextSibling) {\r\n                    domRoot.insertBefore(\r\n                        layer.dom,\r\n                        prevDom.nextSibling\r\n                    );\r\n                }\r\n                else {\r\n                    domRoot.appendChild(layer.dom);\r\n                }\r\n            }\r\n            else {\r\n                if (domRoot.firstChild) {\r\n                    domRoot.insertBefore(layer.dom, domRoot.firstChild);\r\n                }\r\n                else {\r\n                    domRoot.appendChild(layer.dom);\r\n                }\r\n            }\r\n\r\n            layersMap[zlevel] = layer;\r\n        },\r\n\r\n        // Iterate each layer\r\n        eachLayer: function (cb, context) {\r\n            var zlevelList = this._zlevelList;\r\n            var z;\r\n            var i;\r\n            for (i = 0; i < zlevelList.length; i++) {\r\n                z = zlevelList[i];\r\n                cb.call(context, this._layers[z], z);\r\n            }\r\n        },\r\n\r\n        // Iterate each buildin layer\r\n        eachBuildinLayer: function (cb, context) {\r\n            var zlevelList = this._zlevelList;\r\n            var layer;\r\n            var z;\r\n            var i;\r\n            for (i = 0; i < zlevelList.length; i++) {\r\n                z = zlevelList[i];\r\n                layer = this._layers[z];\r\n                if (layer.isBuildin) {\r\n                    cb.call(context, layer, z);\r\n                }\r\n            }\r\n        },\r\n\r\n        // Iterate each other layer except buildin layer\r\n        eachOtherLayer: function (cb, context) {\r\n            var zlevelList = this._zlevelList;\r\n            var layer;\r\n            var z;\r\n            var i;\r\n            for (i = 0; i < zlevelList.length; i++) {\r\n                z = zlevelList[i];\r\n                layer = this._layers[z];\r\n                if (! layer.isBuildin) {\r\n                    cb.call(context, layer, z);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 获取所有已创建的层\r\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\r\n         */\r\n        getLayers: function () {\r\n            return this._layers;\r\n        },\r\n\r\n        _updateLayerStatus: function (list) {\r\n\r\n            var layers = this._layers;\r\n            var progressiveLayers = this._progressiveLayers;\r\n\r\n            var elCountsLastFrame = {};\r\n            var progressiveElCountsLastFrame = {};\r\n\r\n            this.eachBuildinLayer(function (layer, z) {\r\n                elCountsLastFrame[z] = layer.elCount;\r\n                layer.elCount = 0;\r\n                layer.__dirty = false;\r\n            });\r\n\r\n            util.each(progressiveLayers, function (layer, idx) {\r\n                progressiveElCountsLastFrame[idx] = layer.elCount;\r\n                layer.elCount = 0;\r\n                layer.__dirty = false;\r\n            });\r\n\r\n            var progressiveLayerCount = 0;\r\n            var currentProgressiveLayer;\r\n            var lastProgressiveKey;\r\n            var frameCount = 0;\r\n            for (var i = 0, l = list.length; i < l; i++) {\r\n                var el = list[i];\r\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\r\n                var layer = layers[zlevel];\r\n                var elProgress = el.progressive;\r\n                if (layer) {\r\n                    layer.elCount++;\r\n                    layer.__dirty = layer.__dirty || el.__dirty;\r\n                }\r\n\r\n                /////// Update progressive\r\n                if (elProgress >= 0) {\r\n                    // Fix wrong progressive sequence problem.\r\n                    if (lastProgressiveKey !== elProgress) {\r\n                        lastProgressiveKey = elProgress;\r\n                        frameCount++;\r\n                    }\r\n                    var elFrame = el.__frame = frameCount - 1;\r\n                    if (!currentProgressiveLayer) {\r\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\r\n                        currentProgressiveLayer = progressiveLayers[idx];\r\n                        if (!currentProgressiveLayer) {\r\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\r\n                                'progressive', this, this.dpr\r\n                            );\r\n                            currentProgressiveLayer.initContext();\r\n                        }\r\n                        currentProgressiveLayer.__maxProgress = 0;\r\n                    }\r\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\r\n                    currentProgressiveLayer.elCount++;\r\n\r\n                    currentProgressiveLayer.__maxProgress = Math.max(\r\n                        currentProgressiveLayer.__maxProgress, elFrame\r\n                    );\r\n\r\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\r\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\r\n                        layer.__dirty = true;\r\n                    }\r\n                }\r\n                else {\r\n                    el.__frame = -1;\r\n\r\n                    if (currentProgressiveLayer) {\r\n                        currentProgressiveLayer.__nextIdxNotProg = i;\r\n                        progressiveLayerCount++;\r\n                        currentProgressiveLayer = null;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (currentProgressiveLayer) {\r\n                progressiveLayerCount++;\r\n                currentProgressiveLayer.__nextIdxNotProg = i;\r\n            }\r\n\r\n            // 层中的元素数量有发生变化\r\n            this.eachBuildinLayer(function (layer, z) {\r\n                if (elCountsLastFrame[z] !== layer.elCount) {\r\n                    layer.__dirty = true;\r\n                }\r\n            });\r\n\r\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\r\n            util.each(progressiveLayers, function (layer, idx) {\r\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\r\n                    el.__dirty = true;\r\n                }\r\n                if (layer.__dirty) {\r\n                    layer.__progress = 0;\r\n                }\r\n            });\r\n        },\r\n\r\n        /**\r\n         * 清除hover层外所有内容\r\n         */\r\n        clear: function () {\r\n            this.eachBuildinLayer(this._clearLayer);\r\n            return this;\r\n        },\r\n\r\n        _clearLayer: function (layer) {\r\n            layer.clear();\r\n        },\r\n\r\n        /**\r\n         * 修改指定zlevel的绘制参数\r\n         *\r\n         * @param {string} zlevel\r\n         * @param {Object} config 配置对象\r\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\r\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\r\n         * @param {number} [config.lastFrameAlpha=0.7]\r\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\r\n         */\r\n        configLayer: function (zlevel, config) {\r\n            if (config) {\r\n                var layerConfig = this._layerConfig;\r\n                if (!layerConfig[zlevel]) {\r\n                    layerConfig[zlevel] = config;\r\n                }\r\n                else {\r\n                    util.merge(layerConfig[zlevel], config, true);\r\n                }\r\n\r\n                var layer = this._layers[zlevel];\r\n\r\n                if (layer) {\r\n                    util.merge(layer, layerConfig[zlevel], true);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 删除指定层\r\n         * @param {number} zlevel 层所在的zlevel\r\n         */\r\n        delLayer: function (zlevel) {\r\n            var layers = this._layers;\r\n            var zlevelList = this._zlevelList;\r\n            var layer = layers[zlevel];\r\n            if (!layer) {\r\n                return;\r\n            }\r\n            layer.dom.parentNode.removeChild(layer.dom);\r\n            delete layers[zlevel];\r\n\r\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\r\n        },\r\n\r\n        /**\r\n         * 区域大小变化后重绘\r\n         */\r\n        resize: function (width, height) {\r\n            var domRoot = this._domRoot;\r\n            // FIXME Why ?\r\n            domRoot.style.display = 'none';\r\n\r\n            width = width || this._getWidth();\r\n            height = height || this._getHeight();\r\n\r\n            domRoot.style.display = '';\r\n\r\n            // 优化没有实际改变的resize\r\n            if (this._width != width || height != this._height) {\r\n                domRoot.style.width = width + 'px';\r\n                domRoot.style.height = height + 'px';\r\n\r\n                for (var id in this._layers) {\r\n                    this._layers[id].resize(width, height);\r\n                }\r\n\r\n                this.refresh(true);\r\n            }\r\n\r\n            this._width = width;\r\n            this._height = height;\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * 清除单独的一个层\r\n         * @param {number} zlevel\r\n         */\r\n        clearLayer: function (zlevel) {\r\n            var layer = this._layers[zlevel];\r\n            if (layer) {\r\n                layer.clear();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 释放\r\n         */\r\n        dispose: function () {\r\n            this.root.innerHTML = '';\r\n\r\n            this.root =\r\n            this.storage =\r\n\r\n            this._domRoot =\r\n            this._layers = null;\r\n        },\r\n\r\n        /**\r\n         * Get canvas which has all thing rendered\r\n         * @param {Object} opts\r\n         * @param {string} [opts.backgroundColor]\r\n         */\r\n        getRenderedCanvas: function (opts) {\r\n            opts = opts || {};\r\n            if (this._singleCanvas) {\r\n                return this._layers[0].dom;\r\n            }\r\n\r\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\r\n            imageLayer.initContext();\r\n\r\n            imageLayer.clearColor = opts.backgroundColor;\r\n            imageLayer.clear();\r\n\r\n            var displayList = this.storage.getDisplayList(true);\r\n\r\n            var scope = {};\r\n            for (var i = 0; i < displayList.length; i++) {\r\n                var el = displayList[i];\r\n                this._doPaintEl(el, imageLayer, true, scope);\r\n            }\r\n\r\n            return imageLayer.dom;\r\n        },\r\n        /**\r\n         * 获取绘图区域宽度\r\n         */\r\n        getWidth: function () {\r\n            return this._width;\r\n        },\r\n\r\n        /**\r\n         * 获取绘图区域高度\r\n         */\r\n        getHeight: function () {\r\n            return this._height;\r\n        },\r\n\r\n        _getWidth: function () {\r\n            var root = this.root;\r\n            var stl = document.defaultView.getComputedStyle(root);\r\n\r\n            // FIXME Better way to get the width and height when element has not been append to the document\r\n            return ((root.clientWidth || parseInt10(stl.width) || parseInt10(root.style.width))\r\n                    - (parseInt10(stl.paddingLeft) || 0)\r\n                    - (parseInt10(stl.paddingRight) || 0)) | 0;\r\n        },\r\n\r\n        _getHeight: function () {\r\n            var root = this.root;\r\n            var stl = document.defaultView.getComputedStyle(root);\r\n\r\n            return ((root.clientHeight || parseInt10(stl.height) || parseInt10(root.style.height))\r\n                    - (parseInt10(stl.paddingTop) || 0)\r\n                    - (parseInt10(stl.paddingBottom) || 0)) | 0;\r\n        },\r\n\r\n        _pathToImage: function (id, path, width, height, dpr) {\r\n            var canvas = document.createElement('canvas');\r\n            var ctx = canvas.getContext('2d');\r\n\r\n            canvas.width = width * dpr;\r\n            canvas.height = height * dpr;\r\n\r\n            ctx.clearRect(0, 0, width * dpr, height * dpr);\r\n\r\n            var pathTransform = {\r\n                position: path.position,\r\n                rotation: path.rotation,\r\n                scale: path.scale\r\n            };\r\n            path.position = [0, 0, 0];\r\n            path.rotation = 0;\r\n            path.scale = [1, 1];\r\n            if (path) {\r\n                path.brush(ctx);\r\n            }\r\n\r\n            var ImageShape = require('./graphic/Image');\r\n            var imgShape = new ImageShape({\r\n                id: id,\r\n                style: {\r\n                    x: 0,\r\n                    y: 0,\r\n                    image: canvas\r\n                }\r\n            });\r\n\r\n            if (pathTransform.position != null) {\r\n                imgShape.position = path.position = pathTransform.position;\r\n            }\r\n\r\n            if (pathTransform.rotation != null) {\r\n                imgShape.rotation = path.rotation = pathTransform.rotation;\r\n            }\r\n\r\n            if (pathTransform.scale != null) {\r\n                imgShape.scale = path.scale = pathTransform.scale;\r\n            }\r\n\r\n            return imgShape;\r\n        },\r\n\r\n        _createPathToImage: function () {\r\n            var me = this;\r\n\r\n            return function (id, e, width, height) {\r\n                return me._pathToImage(\r\n                    id, e, width, height, me.dpr\r\n                );\r\n            };\r\n        }\r\n    };\r\n\r\n    module.exports = Painter;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/Painter.js\n ** module id = 613\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","/**\r\n * @module zrender/Layer\r\n * @author pissang(https://www.github.com/pissang)\r\n */\r\n\r\n\r\n    var util = require('./core/util');\r\n    var config = require('./config');\r\n    var Style = require('./graphic/Style');\r\n    var Pattern = require('./graphic/Pattern');\r\n\r\n    function returnFalse() {\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 创建dom\r\n     *\r\n     * @inner\r\n     * @param {string} id dom id 待用\r\n     * @param {string} type dom type，such as canvas, div etc.\r\n     * @param {Painter} painter painter instance\r\n     * @param {number} number\r\n     */\r\n    function createDom(id, type, painter, dpr) {\r\n        var newDom = document.createElement(type);\r\n        var width = painter.getWidth();\r\n        var height = painter.getHeight();\r\n\r\n        var newDomStyle = newDom.style;\r\n        // 没append呢，请原谅我这样写，清晰~\r\n        newDomStyle.position = 'absolute';\r\n        newDomStyle.left = 0;\r\n        newDomStyle.top = 0;\r\n        newDomStyle.width = width + 'px';\r\n        newDomStyle.height = height + 'px';\r\n        newDom.width = width * dpr;\r\n        newDom.height = height * dpr;\r\n\r\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\r\n        newDom.setAttribute('data-zr-dom-id', id);\r\n        return newDom;\r\n    }\r\n\r\n    /**\r\n     * @alias module:zrender/Layer\r\n     * @constructor\r\n     * @extends module:zrender/mixin/Transformable\r\n     * @param {string} id\r\n     * @param {module:zrender/Painter} painter\r\n     * @param {number} [dpr]\r\n     */\r\n    var Layer = function(id, painter, dpr) {\r\n        var dom;\r\n        dpr = dpr || config.devicePixelRatio;\r\n        if (typeof id === 'string') {\r\n            dom = createDom(id, 'canvas', painter, dpr);\r\n        }\r\n        // Not using isDom because in node it will return false\r\n        else if (util.isObject(id)) {\r\n            dom = id;\r\n            id = dom.id;\r\n        }\r\n        this.id = id;\r\n        this.dom = dom;\r\n\r\n        var domStyle = dom.style;\r\n        if (domStyle) { // Not in node\r\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\r\n            domStyle['-webkit-user-select'] = 'none';\r\n            domStyle['user-select'] = 'none';\r\n            domStyle['-webkit-touch-callout'] = 'none';\r\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\r\n        }\r\n\r\n        this.domBack = null;\r\n        this.ctxBack = null;\r\n\r\n        this.painter = painter;\r\n\r\n        this.config = null;\r\n\r\n        // Configs\r\n        /**\r\n         * 每次清空画布的颜色\r\n         * @type {string}\r\n         * @default 0\r\n         */\r\n        this.clearColor = 0;\r\n        /**\r\n         * 是否开启动态模糊\r\n         * @type {boolean}\r\n         * @default false\r\n         */\r\n        this.motionBlur = false;\r\n        /**\r\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\r\n         * @type {number}\r\n         * @default 0.7\r\n         */\r\n        this.lastFrameAlpha = 0.7;\r\n\r\n        /**\r\n         * Layer dpr\r\n         * @type {number}\r\n         */\r\n        this.dpr = dpr;\r\n    };\r\n\r\n    Layer.prototype = {\r\n\r\n        constructor: Layer,\r\n\r\n        elCount: 0,\r\n\r\n        __dirty: true,\r\n\r\n        initContext: function () {\r\n            this.ctx = this.dom.getContext('2d');\r\n\r\n            var dpr = this.dpr;\r\n            if (dpr != 1) {\r\n                this.ctx.scale(dpr, dpr);\r\n            }\r\n        },\r\n\r\n        createBackBuffer: function () {\r\n            var dpr = this.dpr;\r\n\r\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\r\n            this.ctxBack = this.domBack.getContext('2d');\r\n\r\n            if (dpr != 1) {\r\n                this.ctxBack.scale(dpr, dpr);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param  {number} width\r\n         * @param  {number} height\r\n         */\r\n        resize: function (width, height) {\r\n            var dpr = this.dpr;\r\n\r\n            var dom = this.dom;\r\n            var domStyle = dom.style;\r\n            var domBack = this.domBack;\r\n\r\n            domStyle.width = width + 'px';\r\n            domStyle.height = height + 'px';\r\n\r\n            dom.width = width * dpr;\r\n            dom.height = height * dpr;\r\n\r\n            if (dpr != 1) {\r\n                this.ctx.scale(dpr, dpr);\r\n            }\r\n\r\n            if (domBack) {\r\n                domBack.width = width * dpr;\r\n                domBack.height = height * dpr;\r\n\r\n                if (dpr != 1) {\r\n                    this.ctxBack.scale(dpr, dpr);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * 清空该层画布\r\n         * @param {boolean} clearAll Clear all with out motion blur\r\n         */\r\n        clear: function (clearAll) {\r\n            var dom = this.dom;\r\n            var ctx = this.ctx;\r\n            var width = dom.width;\r\n            var height = dom.height;\r\n\r\n            var clearColor = this.clearColor;\r\n            var haveMotionBLur = this.motionBlur && !clearAll;\r\n            var lastFrameAlpha = this.lastFrameAlpha;\r\n\r\n            var dpr = this.dpr;\r\n\r\n            if (haveMotionBLur) {\r\n                if (!this.domBack) {\r\n                    this.createBackBuffer();\r\n                }\r\n\r\n                this.ctxBack.globalCompositeOperation = 'copy';\r\n                this.ctxBack.drawImage(\r\n                    dom, 0, 0,\r\n                    width / dpr,\r\n                    height / dpr\r\n                );\r\n            }\r\n\r\n            ctx.clearRect(0, 0, width / dpr, height / dpr);\r\n            if (clearColor) {\r\n                var clearColorGradientOrPattern;\r\n                // Gradient\r\n                if (clearColor.colorStops) {\r\n                    // Cache canvas gradient\r\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\r\n                        x: 0,\r\n                        y: 0,\r\n                        width: width / dpr,\r\n                        height: height / dpr\r\n                    });\r\n\r\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\r\n                }\r\n                // Pattern\r\n                else if (clearColor.image) {\r\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\r\n                }\r\n                ctx.save();\r\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\r\n                ctx.fillRect(0, 0, width / dpr, height / dpr);\r\n                ctx.restore();\r\n            }\r\n\r\n            if (haveMotionBLur) {\r\n                var domBack = this.domBack;\r\n                ctx.save();\r\n                ctx.globalAlpha = lastFrameAlpha;\r\n                ctx.drawImage(domBack, 0, 0, width / dpr, height / dpr);\r\n                ctx.restore();\r\n            }\r\n        }\r\n    };\r\n\r\n    module.exports = Layer;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/zrender/lib/Layer.js\n ** module id = 614\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","\r\n\r\n    var graphic = require('../util/graphic');\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var PI = Math.PI;\r\n    /**\r\n     * @param {module:echarts/ExtensionAPI} api\r\n     * @param {Object} [opts]\r\n     * @param {string} [opts.text]\r\n     * @param {string} [opts.color]\r\n     * @param {string} [opts.textColor]\r\n     * @return {module:zrender/Element}\r\n     */\r\n    module.exports = function (api, opts) {\r\n        opts = opts || {};\r\n        zrUtil.defaults(opts, {\r\n            text: 'loading',\r\n            color: '#c23531',\r\n            textColor: '#000',\r\n            maskColor: 'rgba(255, 255, 255, 0.8)',\r\n            zlevel: 0\r\n        });\r\n        var mask = new graphic.Rect({\r\n            style: {\r\n                fill: opts.maskColor\r\n            },\r\n            zlevel: opts.zlevel,\r\n            z: 10000\r\n        });\r\n        var arc = new graphic.Arc({\r\n            shape: {\r\n                startAngle: -PI / 2,\r\n                endAngle: -PI / 2 + 0.1,\r\n                r: 10\r\n            },\r\n            style: {\r\n                stroke: opts.color,\r\n                lineCap: 'round',\r\n                lineWidth: 5\r\n            },\r\n            zlevel: opts.zlevel,\r\n            z: 10001\r\n        });\r\n        var labelRect = new graphic.Rect({\r\n            style: {\r\n                fill: 'none',\r\n                text: opts.text,\r\n                textPosition: 'right',\r\n                textDistance: 10,\r\n                textFill: opts.textColor\r\n            },\r\n            zlevel: opts.zlevel,\r\n            z: 10001\r\n        });\r\n\r\n        arc.animateShape(true)\r\n            .when(1000, {\r\n                endAngle: PI * 3 / 2\r\n            })\r\n            .start('circularInOut');\r\n        arc.animateShape(true)\r\n            .when(1000, {\r\n                startAngle: PI * 3 / 2\r\n            })\r\n            .delay(300)\r\n            .start('circularInOut');\r\n\r\n        var group = new graphic.Group();\r\n        group.add(arc);\r\n        group.add(labelRect);\r\n        group.add(mask);\r\n        // Inject resize\r\n        group.resize = function () {\r\n            var cx = api.getWidth() / 2;\r\n            var cy = api.getHeight() / 2;\r\n            arc.setShape({\r\n                cx: cx,\r\n                cy: cy\r\n            });\r\n            var r = arc.shape.r;\r\n            labelRect.setShape({\r\n                x: cx - r,\r\n                y: cy - r,\r\n                width: r * 2,\r\n                height: r * 2\r\n            });\r\n\r\n            mask.setShape({\r\n                x: 0,\r\n                y: 0,\r\n                width: api.getWidth(),\r\n                height: api.getHeight()\r\n            });\r\n        };\r\n        group.resize();\r\n        return group;\r\n    };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/loading/default.js\n ** module id = 615\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","\r\n    var Gradient = require('zrender/lib/graphic/Gradient');\r\n    module.exports = function (ecModel) {\r\n        function encodeColor(seriesModel) {\r\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\r\n            var data = seriesModel.getData();\r\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\r\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\r\n\r\n            // FIXME Set color function or use the platte color\r\n            data.setVisual('color', color);\r\n\r\n            // Only visible series has each data be visual encoded\r\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\r\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\r\n                    data.each(function (idx) {\r\n                        data.setItemVisual(\r\n                            idx, 'color', color(seriesModel.getDataParams(idx))\r\n                        );\r\n                    });\r\n                }\r\n\r\n                // itemStyle in each data item\r\n                data.each(function (idx) {\r\n                    var itemModel = data.getItemModel(idx);\r\n                    var color = itemModel.get(colorAccessPath, true);\r\n                    if (color != null) {\r\n                        data.setItemVisual(idx, 'color', color);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        ecModel.eachRawSeries(encodeColor);\r\n    };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/visual/seriesColor.js\n ** module id = 616\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","// Compatitable with 2.0\r\n\r\n\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var compatStyle = require('./helper/compatStyle');\r\n\r\n    function get(opt, path) {\r\n        path = path.split(',');\r\n        var obj = opt;\r\n        for (var i = 0; i < path.length; i++) {\r\n            obj = obj && obj[path[i]];\r\n            if (obj == null) {\r\n                break;\r\n            }\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    function set(opt, path, val, overwrite) {\r\n        path = path.split(',');\r\n        var obj = opt;\r\n        var key;\r\n        for (var i = 0; i < path.length - 1; i++) {\r\n            key = path[i];\r\n            if (obj[key] == null) {\r\n                obj[key] = {};\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        if (overwrite || obj[path[i]] == null) {\r\n            obj[path[i]] = val;\r\n        }\r\n    }\r\n\r\n    function compatLayoutProperties(option) {\r\n        each(LAYOUT_PROPERTIES, function (prop) {\r\n            if (prop[0] in option && !(prop[1] in option)) {\r\n                option[prop[1]] = option[prop[0]];\r\n            }\r\n        });\r\n    }\r\n\r\n    var LAYOUT_PROPERTIES = [\r\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\r\n    ];\r\n\r\n    var COMPATITABLE_COMPONENTS = [\r\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\r\n    ];\r\n\r\n    var COMPATITABLE_SERIES = [\r\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\r\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\r\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\r\n    ];\r\n\r\n    var each = zrUtil.each;\r\n\r\n    module.exports = function (option) {\r\n        each(option.series, function (seriesOpt) {\r\n            if (!zrUtil.isObject(seriesOpt)) {\r\n                return;\r\n            }\r\n\r\n            var seriesType = seriesOpt.type;\r\n\r\n            compatStyle(seriesOpt);\r\n\r\n            if (seriesType === 'pie' || seriesType === 'gauge') {\r\n                if (seriesOpt.clockWise != null) {\r\n                    seriesOpt.clockwise = seriesOpt.clockWise;\r\n                }\r\n            }\r\n            if (seriesType === 'gauge') {\r\n                var pointerColor = get(seriesOpt, 'pointer.color');\r\n                pointerColor != null\r\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\r\n            }\r\n\r\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\r\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\r\n                    compatLayoutProperties(seriesOpt);\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n\r\n        // dataRange has changed to visualMap\r\n        if (option.dataRange) {\r\n            option.visualMap = option.dataRange;\r\n        }\r\n\r\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\r\n            var options = option[componentName];\r\n            if (options) {\r\n                if (!zrUtil.isArray(options)) {\r\n                    options = [options];\r\n                }\r\n                each(options, function (option) {\r\n                    compatLayoutProperties(option);\r\n                });\r\n            }\r\n        });\r\n    };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/preprocessor/backwardCompat.js\n ** module id = 617\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","\r\n\r\n    var zrUtil = require('zrender/lib/core/util');\r\n\r\n    var POSSIBLE_STYLES = [\r\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\r\n        'chordStyle', 'label', 'labelLine'\r\n    ];\r\n\r\n    function compatItemStyle(opt) {\r\n        var itemStyleOpt = opt && opt.itemStyle;\r\n        if (itemStyleOpt) {\r\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\r\n                var normalItemStyleOpt = itemStyleOpt.normal;\r\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\r\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\r\n                    opt[styleName] = opt[styleName] || {};\r\n                    if (!opt[styleName].normal) {\r\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\r\n                    }\r\n                    else {\r\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\r\n                    }\r\n                    normalItemStyleOpt[styleName] = null;\r\n                }\r\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\r\n                    opt[styleName] = opt[styleName] || {};\r\n                    if (!opt[styleName].emphasis) {\r\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\r\n                    }\r\n                    else {\r\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\r\n                    }\r\n                    emphasisItemStyleOpt[styleName] = null;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    module.exports = function (seriesOpt) {\r\n        if (!seriesOpt) {\r\n            return;\r\n        }\r\n        compatItemStyle(seriesOpt);\r\n        compatItemStyle(seriesOpt.markPoint);\r\n        compatItemStyle(seriesOpt.markLine);\r\n        var data = seriesOpt.data;\r\n        if (data) {\r\n            for (var i = 0; i < data.length; i++) {\r\n                compatItemStyle(data[i]);\r\n            }\r\n            // mark point data\r\n            var markPoint = seriesOpt.markPoint;\r\n            if (markPoint && markPoint.data) {\r\n                var mpData = markPoint.data;\r\n                for (var i = 0; i < mpData.length; i++) {\r\n                    compatItemStyle(mpData[i]);\r\n                }\r\n            }\r\n            // mark line data\r\n            var markLine = seriesOpt.markLine;\r\n            if (markLine && markLine.data) {\r\n                var mlData = markLine.data;\r\n                for (var i = 0; i < mlData.length; i++) {\r\n                    if (zrUtil.isArray(mlData[i])) {\r\n                        compatItemStyle(mlData[i][0]);\r\n                        compatItemStyle(mlData[i][1]);\r\n                    }\r\n                    else {\r\n                        compatItemStyle(mlData[i]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/preprocessor/helper/compatStyle.js\n ** module id = 618\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","/**\r\n * List for data storage\r\n * @module echarts/data/List\r\n */\r\n\r\n\r\n    var UNDEFINED = 'undefined';\r\n    var globalObj = typeof window === 'undefined' ? global : window;\r\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\r\n        ? Array : globalObj.Float64Array;\r\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\r\n        ? Array : globalObj.Int32Array;\r\n\r\n    var dataCtors = {\r\n        'float': Float64Array,\r\n        'int': Int32Array,\r\n        // Ordinal data type can be string or int\r\n        'ordinal': Array,\r\n        'number': Array,\r\n        'time': Array\r\n    };\r\n\r\n    var Model = require('../model/Model');\r\n    var DataDiffer = require('./DataDiffer');\r\n\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var modelUtil = require('../util/model');\r\n    var isObject = zrUtil.isObject;\r\n\r\n    var TRANSFERABLE_PROPERTIES = [\r\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\r\n    ];\r\n\r\n    var transferProperties = function (a, b) {\r\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\r\n            if (b.hasOwnProperty(propName)) {\r\n                a[propName] = b[propName];\r\n            }\r\n        });\r\n\r\n        a.__wrappedMethods = b.__wrappedMethods;\r\n    };\r\n\r\n    /**\r\n     * @constructor\r\n     * @alias module:echarts/data/List\r\n     *\r\n     * @param {Array.<string>} dimensions\r\n     *        Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\r\n     * @param {module:echarts/model/Model} hostModel\r\n     */\r\n    var List = function (dimensions, hostModel) {\r\n\r\n        dimensions = dimensions || ['x', 'y'];\r\n\r\n        var dimensionInfos = {};\r\n        var dimensionNames = [];\r\n        for (var i = 0; i < dimensions.length; i++) {\r\n            var dimensionName;\r\n            var dimensionInfo = {};\r\n            if (typeof dimensions[i] === 'string') {\r\n                dimensionName = dimensions[i];\r\n                dimensionInfo = {\r\n                    name: dimensionName,\r\n                    stackable: false,\r\n                    // Type can be 'float', 'int', 'number'\r\n                    // Default is number, Precision of float may not enough\r\n                    type: 'number'\r\n                };\r\n            }\r\n            else {\r\n                dimensionInfo = dimensions[i];\r\n                dimensionName = dimensionInfo.name;\r\n                dimensionInfo.type = dimensionInfo.type || 'number';\r\n            }\r\n            dimensionNames.push(dimensionName);\r\n            dimensionInfos[dimensionName] = dimensionInfo;\r\n        }\r\n        /**\r\n         * @readOnly\r\n         * @type {Array.<string>}\r\n         */\r\n        this.dimensions = dimensionNames;\r\n\r\n        /**\r\n         * Infomation of each data dimension, like data type.\r\n         * @type {Object}\r\n         */\r\n        this._dimensionInfos = dimensionInfos;\r\n\r\n        /**\r\n         * @type {module:echarts/model/Model}\r\n         */\r\n        this.hostModel = hostModel;\r\n\r\n        /**\r\n         * @type {module:echarts/model/Model}\r\n         */\r\n        this.dataType;\r\n\r\n        /**\r\n         * Indices stores the indices of data subset after filtered.\r\n         * This data subset will be used in chart.\r\n         * @type {Array.<number>}\r\n         * @readOnly\r\n         */\r\n        this.indices = [];\r\n\r\n        /**\r\n         * Data storage\r\n         * @type {Object.<key, TypedArray|Array>}\r\n         * @private\r\n         */\r\n        this._storage = {};\r\n\r\n        /**\r\n         * @type {Array.<string>}\r\n         */\r\n        this._nameList = [];\r\n        /**\r\n         * @type {Array.<string>}\r\n         */\r\n        this._idList = [];\r\n        /**\r\n         * Models of data option is stored sparse for optimizing memory cost\r\n         * @type {Array.<module:echarts/model/Model>}\r\n         * @private\r\n         */\r\n        this._optionModels = [];\r\n\r\n        /**\r\n         * @param {module:echarts/data/List}\r\n         */\r\n        this.stackedOn = null;\r\n\r\n        /**\r\n         * Global visual properties after visual coding\r\n         * @type {Object}\r\n         * @private\r\n         */\r\n        this._visual = {};\r\n\r\n        /**\r\n         * Globel layout properties.\r\n         * @type {Object}\r\n         * @private\r\n         */\r\n        this._layout = {};\r\n\r\n        /**\r\n         * Item visual properties after visual coding\r\n         * @type {Array.<Object>}\r\n         * @private\r\n         */\r\n        this._itemVisuals = [];\r\n\r\n        /**\r\n         * Item layout properties after layout\r\n         * @type {Array.<Object>}\r\n         * @private\r\n         */\r\n        this._itemLayouts = [];\r\n\r\n        /**\r\n         * Graphic elemnents\r\n         * @type {Array.<module:zrender/Element>}\r\n         * @private\r\n         */\r\n        this._graphicEls = [];\r\n\r\n        /**\r\n         * @type {Array.<Array|Object>}\r\n         * @private\r\n         */\r\n        this._rawData;\r\n\r\n        /**\r\n         * @type {Object}\r\n         * @private\r\n         */\r\n        this._extent;\r\n    };\r\n\r\n    var listProto = List.prototype;\r\n\r\n    listProto.type = 'list';\r\n    /**\r\n     * If each data item has it's own option\r\n     * @type {boolean}\r\n     */\r\n    listProto.hasItemOption = true;\r\n\r\n    /**\r\n     * Get dimension name\r\n     * @param {string|number} dim\r\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\r\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\r\n     * @return {string} Concrete dim name.\r\n     */\r\n    listProto.getDimension = function (dim) {\r\n        if (!isNaN(dim)) {\r\n            dim = this.dimensions[dim] || dim;\r\n        }\r\n        return dim;\r\n    };\r\n    /**\r\n     * Get type and stackable info of particular dimension\r\n     * @param {string|number} dim\r\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\r\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\r\n     */\r\n    listProto.getDimensionInfo = function (dim) {\r\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\r\n    };\r\n\r\n    /**\r\n     * Initialize from data\r\n     * @param {Array.<Object|number|Array>} data\r\n     * @param {Array.<string>} [nameList]\r\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\r\n     */\r\n    listProto.initData = function (data, nameList, dimValueGetter) {\r\n        data = data || [];\r\n\r\n        if (__DEV__) {\r\n            if (!zrUtil.isArray(data)) {\r\n                throw new Error('Invalid data.');\r\n            }\r\n        }\r\n\r\n        this._rawData = data;\r\n\r\n        // Clear\r\n        var storage = this._storage = {};\r\n        var indices = this.indices = [];\r\n\r\n        var dimensions = this.dimensions;\r\n        var size = data.length;\r\n        var dimensionInfoMap = this._dimensionInfos;\r\n\r\n        var idList = [];\r\n        var nameRepeatCount = {};\r\n\r\n        nameList = nameList || [];\r\n\r\n        // Init storage\r\n        for (var i = 0; i < dimensions.length; i++) {\r\n            var dimInfo = dimensionInfoMap[dimensions[i]];\r\n            var DataCtor = dataCtors[dimInfo.type];\r\n            storage[dimensions[i]] = new DataCtor(size);\r\n        }\r\n\r\n        var self = this;\r\n        if (!dimValueGetter) {\r\n            self.hasItemOption = false;\r\n        }\r\n        // Default dim value getter\r\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\r\n            var value = modelUtil.getDataItemValue(dataItem);\r\n            // If any dataItem is like { value: 10 }\r\n            if (modelUtil.isDataItemOption(dataItem)) {\r\n                self.hasItemOption = true;\r\n            }\r\n            return modelUtil.converDataValue(\r\n                (value instanceof Array)\r\n                    ? value[dimIndex]\r\n                    // If value is a single number or something else not array.\r\n                    : value,\r\n                dimensionInfoMap[dimName]\r\n            );\r\n        };\r\n\r\n        for (var idx = 0; idx < data.length; idx++) {\r\n            var dataItem = data[idx];\r\n            // Each data item is value\r\n            // [1, 2]\r\n            // 2\r\n            // Bar chart, line chart which uses category axis\r\n            // only gives the 'y' value. 'x' value is the indices of cateogry\r\n            // Use a tempValue to normalize the value to be a (x, y) value\r\n\r\n            // Store the data by dimensions\r\n            for (var k = 0; k < dimensions.length; k++) {\r\n                var dim = dimensions[k];\r\n                var dimStorage = storage[dim];\r\n                // PENDING NULL is empty or zero\r\n                dimStorage[idx] = dimValueGetter(dataItem, dim, idx, k);\r\n            }\r\n\r\n            indices.push(idx);\r\n        }\r\n\r\n        // Use the name in option and create id\r\n        for (var i = 0; i < data.length; i++) {\r\n            if (!nameList[i]) {\r\n                if (data[i] && data[i].name != null) {\r\n                    nameList[i] = data[i].name;\r\n                }\r\n            }\r\n            var name = nameList[i] || '';\r\n            // Try using the id in option\r\n            var id = data[i] && data[i].id;\r\n\r\n            if (!id && name) {\r\n                // Use name as id and add counter to avoid same name\r\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\r\n                id = name;\r\n                if (nameRepeatCount[name] > 0) {\r\n                    id += '__ec__' + nameRepeatCount[name];\r\n                }\r\n                nameRepeatCount[name]++;\r\n            }\r\n            id && (idList[i] = id);\r\n        }\r\n\r\n        this._nameList = nameList;\r\n        this._idList = idList;\r\n    };\r\n\r\n    /**\r\n     * @return {number}\r\n     */\r\n    listProto.count = function () {\r\n        return this.indices.length;\r\n    };\r\n\r\n    /**\r\n     * Get value. Return NaN if idx is out of range.\r\n     * @param {string} dim Dim must be concrete name.\r\n     * @param {number} idx\r\n     * @param {boolean} stack\r\n     * @return {number}\r\n     */\r\n    listProto.get = function (dim, idx, stack) {\r\n        var storage = this._storage;\r\n        var dataIndex = this.indices[idx];\r\n\r\n        // If value not exists\r\n        if (dataIndex == null) {\r\n            return NaN;\r\n        }\r\n\r\n        var value = storage[dim] && storage[dim][dataIndex];\r\n        // FIXME ordinal data type is not stackable\r\n        if (stack) {\r\n            var dimensionInfo = this._dimensionInfos[dim];\r\n            if (dimensionInfo && dimensionInfo.stackable) {\r\n                var stackedOn = this.stackedOn;\r\n                while (stackedOn) {\r\n                    // Get no stacked data of stacked on\r\n                    var stackedValue = stackedOn.get(dim, idx);\r\n                    // Considering positive stack, negative stack and empty data\r\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\r\n                        || (value <= 0 && stackedValue < 0) // Negative stack\r\n                    ) {\r\n                        value += stackedValue;\r\n                    }\r\n                    stackedOn = stackedOn.stackedOn;\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Get value for multi dimensions.\r\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\r\n     * @param {number} idx\r\n     * @param {boolean} stack\r\n     * @return {number}\r\n     */\r\n    listProto.getValues = function (dimensions, idx, stack) {\r\n        var values = [];\r\n\r\n        if (!zrUtil.isArray(dimensions)) {\r\n            stack = idx;\r\n            idx = dimensions;\r\n            dimensions = this.dimensions;\r\n        }\r\n\r\n        for (var i = 0, len = dimensions.length; i < len; i++) {\r\n            values.push(this.get(dimensions[i], idx, stack));\r\n        }\r\n\r\n        return values;\r\n    };\r\n\r\n    /**\r\n     * If value is NaN. Inlcuding '-'\r\n     * @param {string} dim\r\n     * @param {number} idx\r\n     * @return {number}\r\n     */\r\n    listProto.hasValue = function (idx) {\r\n        var dimensions = this.dimensions;\r\n        var dimensionInfos = this._dimensionInfos;\r\n        for (var i = 0, len = dimensions.length; i < len; i++) {\r\n            if (\r\n                // Ordinal type can be string or number\r\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\r\n                && isNaN(this.get(dimensions[i], idx))\r\n            ) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Get extent of data in one dimension\r\n     * @param {string} dim\r\n     * @param {boolean} stack\r\n     */\r\n    listProto.getDataExtent = function (dim, stack) {\r\n        dim = this.getDimension(dim);\r\n        var dimData = this._storage[dim];\r\n        var dimInfo = this.getDimensionInfo(dim);\r\n        stack = (dimInfo && dimInfo.stackable) && stack;\r\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\r\n        var value;\r\n        if (dimExtent) {\r\n            return dimExtent;\r\n        }\r\n        // var dimInfo = this._dimensionInfos[dim];\r\n        if (dimData) {\r\n            var min = Infinity;\r\n            var max = -Infinity;\r\n            // var isOrdinal = dimInfo.type === 'ordinal';\r\n            for (var i = 0, len = this.count(); i < len; i++) {\r\n                value = this.get(dim, i, stack);\r\n                // FIXME\r\n                // if (isOrdinal && typeof value === 'string') {\r\n                //     value = zrUtil.indexOf(dimData, value);\r\n                // }\r\n                value < min && (min = value);\r\n                value > max && (max = value);\r\n            }\r\n            return (this._extent[dim + !!stack] = [min, max]);\r\n        }\r\n        else {\r\n            return [Infinity, -Infinity];\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get sum of data in one dimension\r\n     * @param {string} dim\r\n     * @param {boolean} stack\r\n     */\r\n    listProto.getSum = function (dim, stack) {\r\n        var dimData = this._storage[dim];\r\n        var sum = 0;\r\n        if (dimData) {\r\n            for (var i = 0, len = this.count(); i < len; i++) {\r\n                var value = this.get(dim, i, stack);\r\n                if (!isNaN(value)) {\r\n                    sum += value;\r\n                }\r\n            }\r\n        }\r\n        return sum;\r\n    };\r\n\r\n    /**\r\n     * Retreive the index with given value\r\n     * @param {number} idx\r\n     * @param {number} value\r\n     * @return {number}\r\n     */\r\n    // FIXME Precision of float value\r\n    listProto.indexOf = function (dim, value) {\r\n        var storage = this._storage;\r\n        var dimData = storage[dim];\r\n        var indices = this.indices;\r\n\r\n        if (dimData) {\r\n            for (var i = 0, len = indices.length; i < len; i++) {\r\n                var rawIndex = indices[i];\r\n                if (dimData[rawIndex] === value) {\r\n                    return i;\r\n                }\r\n            }\r\n        }\r\n        return -1;\r\n    };\r\n\r\n    /**\r\n     * Retreive the index with given name\r\n     * @param {number} idx\r\n     * @param {number} name\r\n     * @return {number}\r\n     */\r\n    listProto.indexOfName = function (name) {\r\n        var indices = this.indices;\r\n        var nameList = this._nameList;\r\n\r\n        for (var i = 0, len = indices.length; i < len; i++) {\r\n            var rawIndex = indices[i];\r\n            if (nameList[rawIndex] === name) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    };\r\n\r\n    /**\r\n     * Retreive the index with given raw data index\r\n     * @param {number} idx\r\n     * @param {number} name\r\n     * @return {number}\r\n     */\r\n    listProto.indexOfRawIndex = function (rawIndex) {\r\n        // Indices are ascending\r\n        var indices = this.indices;\r\n        var left = 0;\r\n        var right = indices.length - 1;\r\n        while (left <= right) {\r\n            var mid = (left + right) / 2 | 0;\r\n            if (indices[mid] < rawIndex) {\r\n                left = mid + 1;\r\n            }\r\n            else if (indices[mid] > rawIndex) {\r\n                right = mid - 1;\r\n            }\r\n            else {\r\n                return mid;\r\n            }\r\n        }\r\n        return -1;\r\n    };\r\n\r\n    /**\r\n     * Retreive the index of nearest value\r\n     * @param {string} dim\r\n     * @param {number} value\r\n     * @param {boolean} stack If given value is after stacked\r\n     * @param {number} [maxDistance=Infinity]\r\n     * @return {number}\r\n     */\r\n    listProto.indexOfNearest = function (dim, value, stack, maxDistance) {\r\n        var storage = this._storage;\r\n        var dimData = storage[dim];\r\n\r\n        if (maxDistance == null) {\r\n            maxDistance = Infinity;\r\n        }\r\n\r\n        var nearestIdx = -1;\r\n        if (dimData) {\r\n            var minDist = Number.MAX_VALUE;\r\n            for (var i = 0, len = this.count(); i < len; i++) {\r\n                var diff = value - this.get(dim, i, stack);\r\n                var dist = Math.abs(diff);\r\n                if (\r\n                    diff <= maxDistance\r\n                    && (dist < minDist\r\n                        // For the case of two data are same on xAxis, which has sequence data.\r\n                        // Show the nearest index\r\n                        // https://github.com/ecomfe/echarts/issues/2869\r\n                        || (dist === minDist && diff > 0)\r\n                    )\r\n                ) {\r\n                    minDist = dist;\r\n                    nearestIdx = i;\r\n                }\r\n            }\r\n        }\r\n        return nearestIdx;\r\n    };\r\n\r\n    /**\r\n     * Get raw data index\r\n     * @param {number} idx\r\n     * @return {number}\r\n     */\r\n    listProto.getRawIndex = function (idx) {\r\n        var rawIdx = this.indices[idx];\r\n        return rawIdx == null ? -1 : rawIdx;\r\n    };\r\n\r\n    /**\r\n     * Get raw data item\r\n     * @param {number} idx\r\n     * @return {number}\r\n     */\r\n    listProto.getRawDataItem = function (idx) {\r\n        return this._rawData[this.getRawIndex(idx)];\r\n    };\r\n\r\n    /**\r\n     * @param {number} idx\r\n     * @param {boolean} [notDefaultIdx=false]\r\n     * @return {string}\r\n     */\r\n    listProto.getName = function (idx) {\r\n        return this._nameList[this.indices[idx]] || '';\r\n    };\r\n\r\n    /**\r\n     * @param {number} idx\r\n     * @param {boolean} [notDefaultIdx=false]\r\n     * @return {string}\r\n     */\r\n    listProto.getId = function (idx) {\r\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\r\n    };\r\n\r\n\r\n    function normalizeDimensions(dimensions) {\r\n        if (!zrUtil.isArray(dimensions)) {\r\n            dimensions = [dimensions];\r\n        }\r\n        return dimensions;\r\n    }\r\n\r\n    /**\r\n     * Data iteration\r\n     * @param {string|Array.<string>}\r\n     * @param {Function} cb\r\n     * @param {boolean} [stack=false]\r\n     * @param {*} [context=this]\r\n     *\r\n     * @example\r\n     *  list.each('x', function (x, idx) {});\r\n     *  list.each(['x', 'y'], function (x, y, idx) {});\r\n     *  list.each(function (idx) {})\r\n     */\r\n    listProto.each = function (dims, cb, stack, context) {\r\n        if (typeof dims === 'function') {\r\n            context = stack;\r\n            stack = cb;\r\n            cb = dims;\r\n            dims = [];\r\n        }\r\n\r\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\r\n\r\n        var value = [];\r\n        var dimSize = dims.length;\r\n        var indices = this.indices;\r\n\r\n        context = context || this;\r\n\r\n        for (var i = 0; i < indices.length; i++) {\r\n            // Simple optimization\r\n            switch (dimSize) {\r\n                case 0:\r\n                    cb.call(context, i);\r\n                    break;\r\n                case 1:\r\n                    cb.call(context, this.get(dims[0], i, stack), i);\r\n                    break;\r\n                case 2:\r\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\r\n                    break;\r\n                default:\r\n                    for (var k = 0; k < dimSize; k++) {\r\n                        value[k] = this.get(dims[k], i, stack);\r\n                    }\r\n                    // Index\r\n                    value[k] = i;\r\n                    cb.apply(context, value);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Data filter\r\n     * @param {string|Array.<string>}\r\n     * @param {Function} cb\r\n     * @param {boolean} [stack=false]\r\n     * @param {*} [context=this]\r\n     */\r\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\r\n        if (typeof dimensions === 'function') {\r\n            context = stack;\r\n            stack = cb;\r\n            cb = dimensions;\r\n            dimensions = [];\r\n        }\r\n\r\n        dimensions = zrUtil.map(\r\n            normalizeDimensions(dimensions), this.getDimension, this\r\n        );\r\n\r\n        var newIndices = [];\r\n        var value = [];\r\n        var dimSize = dimensions.length;\r\n        var indices = this.indices;\r\n\r\n        context = context || this;\r\n\r\n        for (var i = 0; i < indices.length; i++) {\r\n            var keep;\r\n            // Simple optimization\r\n            if (dimSize === 1) {\r\n                keep = cb.call(\r\n                    context, this.get(dimensions[0], i, stack), i\r\n                );\r\n            }\r\n            else {\r\n                for (var k = 0; k < dimSize; k++) {\r\n                    value[k] = this.get(dimensions[k], i, stack);\r\n                }\r\n                value[k] = i;\r\n                keep = cb.apply(context, value);\r\n            }\r\n            if (keep) {\r\n                newIndices.push(indices[i]);\r\n            }\r\n        }\r\n\r\n        this.indices = newIndices;\r\n\r\n        // Reset data extent\r\n        this._extent = {};\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Data mapping to a plain array\r\n     * @param {string|Array.<string>} [dimensions]\r\n     * @param {Function} cb\r\n     * @param {boolean} [stack=false]\r\n     * @param {*} [context=this]\r\n     * @return {Array}\r\n     */\r\n    listProto.mapArray = function (dimensions, cb, stack, context) {\r\n        if (typeof dimensions === 'function') {\r\n            context = stack;\r\n            stack = cb;\r\n            cb = dimensions;\r\n            dimensions = [];\r\n        }\r\n\r\n        var result = [];\r\n        this.each(dimensions, function () {\r\n            result.push(cb && cb.apply(this, arguments));\r\n        }, stack, context);\r\n        return result;\r\n    };\r\n\r\n    function cloneListForMapAndSample(original, excludeDimensions) {\r\n        var allDimensions = original.dimensions;\r\n        var list = new List(\r\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\r\n            original.hostModel\r\n        );\r\n        // FIXME If needs stackedOn, value may already been stacked\r\n        transferProperties(list, original);\r\n\r\n        var storage = list._storage = {};\r\n        var originalStorage = original._storage;\r\n        // Init storage\r\n        for (var i = 0; i < allDimensions.length; i++) {\r\n            var dim = allDimensions[i];\r\n            var dimStore = originalStorage[dim];\r\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\r\n                storage[dim] = new dimStore.constructor(\r\n                    originalStorage[dim].length\r\n                );\r\n            }\r\n            else {\r\n                // Direct reference for other dimensions\r\n                storage[dim] = originalStorage[dim];\r\n            }\r\n        }\r\n        return list;\r\n    }\r\n\r\n    /**\r\n     * Data mapping to a new List with given dimensions\r\n     * @param {string|Array.<string>} dimensions\r\n     * @param {Function} cb\r\n     * @param {boolean} [stack=false]\r\n     * @param {*} [context=this]\r\n     * @return {Array}\r\n     */\r\n    listProto.map = function (dimensions, cb, stack, context) {\r\n        dimensions = zrUtil.map(\r\n            normalizeDimensions(dimensions), this.getDimension, this\r\n        );\r\n\r\n        var list = cloneListForMapAndSample(this, dimensions);\r\n        // Following properties are all immutable.\r\n        // So we can reference to the same value\r\n        var indices = list.indices = this.indices;\r\n\r\n        var storage = list._storage;\r\n\r\n        var tmpRetValue = [];\r\n        this.each(dimensions, function () {\r\n            var idx = arguments[arguments.length - 1];\r\n            var retValue = cb && cb.apply(this, arguments);\r\n            if (retValue != null) {\r\n                // a number\r\n                if (typeof retValue === 'number') {\r\n                    tmpRetValue[0] = retValue;\r\n                    retValue = tmpRetValue;\r\n                }\r\n                for (var i = 0; i < retValue.length; i++) {\r\n                    var dim = dimensions[i];\r\n                    var dimStore = storage[dim];\r\n                    var rawIdx = indices[idx];\r\n                    if (dimStore) {\r\n                        dimStore[rawIdx] = retValue[i];\r\n                    }\r\n                }\r\n            }\r\n        }, stack, context);\r\n\r\n        return list;\r\n    };\r\n\r\n    /**\r\n     * Large data down sampling on given dimension\r\n     * @param {string} dimension\r\n     * @param {number} rate\r\n     * @param {Function} sampleValue\r\n     * @param {Function} sampleIndex Sample index for name and id\r\n     */\r\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\r\n        var list = cloneListForMapAndSample(this, [dimension]);\r\n        var storage = this._storage;\r\n        var targetStorage = list._storage;\r\n\r\n        var originalIndices = this.indices;\r\n        var indices = list.indices = [];\r\n\r\n        var frameValues = [];\r\n        var frameIndices = [];\r\n        var frameSize = Math.floor(1 / rate);\r\n\r\n        var dimStore = targetStorage[dimension];\r\n        var len = this.count();\r\n        // Copy data from original data\r\n        for (var i = 0; i < storage[dimension].length; i++) {\r\n            targetStorage[dimension][i] = storage[dimension][i];\r\n        }\r\n        for (var i = 0; i < len; i += frameSize) {\r\n            // Last frame\r\n            if (frameSize > len - i) {\r\n                frameSize = len - i;\r\n                frameValues.length = frameSize;\r\n            }\r\n            for (var k = 0; k < frameSize; k++) {\r\n                var idx = originalIndices[i + k];\r\n                frameValues[k] = dimStore[idx];\r\n                frameIndices[k] = idx;\r\n            }\r\n            var value = sampleValue(frameValues);\r\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\r\n            // Only write value on the filtered data\r\n            dimStore[idx] = value;\r\n            indices.push(idx);\r\n        }\r\n\r\n        return list;\r\n    };\r\n\r\n    /**\r\n     * Get model of one data item.\r\n     *\r\n     * @param {number} idx\r\n     */\r\n    // FIXME Model proxy ?\r\n    listProto.getItemModel = function (idx) {\r\n        var hostModel = this.hostModel;\r\n        idx = this.indices[idx];\r\n        return new Model(this._rawData[idx], hostModel, hostModel && hostModel.ecModel);\r\n    };\r\n\r\n    /**\r\n     * Create a data differ\r\n     * @param {module:echarts/data/List} otherList\r\n     * @return {module:echarts/data/DataDiffer}\r\n     */\r\n    listProto.diff = function (otherList) {\r\n        var idList = this._idList;\r\n        var otherIdList = otherList && otherList._idList;\r\n        return new DataDiffer(\r\n            otherList ? otherList.indices : [], this.indices, function (idx) {\r\n                return otherIdList[idx] || (idx + '');\r\n            }, function (idx) {\r\n                return idList[idx] || (idx + '');\r\n            }\r\n        );\r\n    };\r\n    /**\r\n     * Get visual property.\r\n     * @param {string} key\r\n     */\r\n    listProto.getVisual = function (key) {\r\n        var visual = this._visual;\r\n        return visual && visual[key];\r\n    };\r\n\r\n    /**\r\n     * Set visual property\r\n     * @param {string|Object} key\r\n     * @param {*} [value]\r\n     *\r\n     * @example\r\n     *  setVisual('color', color);\r\n     *  setVisual({\r\n     *      'color': color\r\n     *  });\r\n     */\r\n    listProto.setVisual = function (key, val) {\r\n        if (isObject(key)) {\r\n            for (var name in key) {\r\n                if (key.hasOwnProperty(name)) {\r\n                    this.setVisual(name, key[name]);\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        this._visual = this._visual || {};\r\n        this._visual[key] = val;\r\n    };\r\n\r\n    /**\r\n     * Set layout property.\r\n     * @param {string} key\r\n     * @param {*} [val]\r\n     */\r\n    listProto.setLayout = function (key, val) {\r\n        if (isObject(key)) {\r\n            for (var name in key) {\r\n                if (key.hasOwnProperty(name)) {\r\n                    this.setLayout(name, key[name]);\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        this._layout[key] = val;\r\n    };\r\n\r\n    /**\r\n     * Get layout property.\r\n     * @param  {string} key.\r\n     * @return {*}\r\n     */\r\n    listProto.getLayout = function (key) {\r\n        return this._layout[key];\r\n    };\r\n\r\n    /**\r\n     * Get layout of single data item\r\n     * @param {number} idx\r\n     */\r\n    listProto.getItemLayout = function (idx) {\r\n        return this._itemLayouts[idx];\r\n    };\r\n\r\n    /**\r\n     * Set layout of single data item\r\n     * @param {number} idx\r\n     * @param {Object} layout\r\n     * @param {boolean=} [merge=false]\r\n     */\r\n    listProto.setItemLayout = function (idx, layout, merge) {\r\n        this._itemLayouts[idx] = merge\r\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\r\n            : layout;\r\n    };\r\n\r\n    /**\r\n     * Clear all layout of single data item\r\n     */\r\n    listProto.clearItemLayouts = function () {\r\n        this._itemLayouts.length = 0;\r\n    };\r\n\r\n    /**\r\n     * Get visual property of single data item\r\n     * @param {number} idx\r\n     * @param {string} key\r\n     * @param {boolean} ignoreParent\r\n     */\r\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\r\n        var itemVisual = this._itemVisuals[idx];\r\n        var val = itemVisual && itemVisual[key];\r\n        if (val == null && !ignoreParent) {\r\n            // Use global visual property\r\n            return this.getVisual(key);\r\n        }\r\n        return val;\r\n    };\r\n\r\n    /**\r\n     * Set visual property of single data item\r\n     *\r\n     * @param {number} idx\r\n     * @param {string|Object} key\r\n     * @param {*} [value]\r\n     *\r\n     * @example\r\n     *  setItemVisual(0, 'color', color);\r\n     *  setItemVisual(0, {\r\n     *      'color': color\r\n     *  });\r\n     */\r\n    listProto.setItemVisual = function (idx, key, value) {\r\n        var itemVisual = this._itemVisuals[idx] || {};\r\n        this._itemVisuals[idx] = itemVisual;\r\n\r\n        if (isObject(key)) {\r\n            for (var name in key) {\r\n                if (key.hasOwnProperty(name)) {\r\n                    itemVisual[name] = key[name];\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        itemVisual[key] = value;\r\n    };\r\n\r\n    /**\r\n     * Clear itemVisuals and list visual.\r\n     */\r\n    listProto.clearAllVisual = function () {\r\n        this._visual = {};\r\n        this._itemVisuals = [];\r\n    };\r\n\r\n    var setItemDataAndSeriesIndex = function (child) {\r\n        child.seriesIndex = this.seriesIndex;\r\n        child.dataIndex = this.dataIndex;\r\n        child.dataType = this.dataType;\r\n    };\r\n    /**\r\n     * Set graphic element relative to data. It can be set as null\r\n     * @param {number} idx\r\n     * @param {module:zrender/Element} [el]\r\n     */\r\n    listProto.setItemGraphicEl = function (idx, el) {\r\n        var hostModel = this.hostModel;\r\n\r\n        if (el) {\r\n            // Add data index and series index for indexing the data by element\r\n            // Useful in tooltip\r\n            el.dataIndex = idx;\r\n            el.dataType = this.dataType;\r\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\r\n            if (el.type === 'group') {\r\n                el.traverse(setItemDataAndSeriesIndex, el);\r\n            }\r\n        }\r\n\r\n        this._graphicEls[idx] = el;\r\n    };\r\n\r\n    /**\r\n     * @param {number} idx\r\n     * @return {module:zrender/Element}\r\n     */\r\n    listProto.getItemGraphicEl = function (idx) {\r\n        return this._graphicEls[idx];\r\n    };\r\n\r\n    /**\r\n     * @param {Function} cb\r\n     * @param {*} context\r\n     */\r\n    listProto.eachItemGraphicEl = function (cb, context) {\r\n        zrUtil.each(this._graphicEls, function (el, idx) {\r\n            if (el) {\r\n                cb && cb.call(context, el, idx);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Shallow clone a new list except visual and layout properties, and graph elements.\r\n     * New list only change the indices.\r\n     */\r\n    listProto.cloneShallow = function () {\r\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\r\n        var list = new List(dimensionInfoList, this.hostModel);\r\n\r\n        // FIXME\r\n        list._storage = this._storage;\r\n\r\n        transferProperties(list, this);\r\n\r\n\r\n        // Clone will not change the data extent and indices\r\n        list.indices = this.indices.slice();\r\n\r\n        if (this._extent) {\r\n            list._extent = zrUtil.extend({}, this._extent);\r\n        }\r\n\r\n        return list;\r\n    };\r\n\r\n    /**\r\n     * Wrap some method to add more feature\r\n     * @param {string} methodName\r\n     * @param {Function} injectFunction\r\n     */\r\n    listProto.wrapMethod = function (methodName, injectFunction) {\r\n        var originalMethod = this[methodName];\r\n        if (typeof originalMethod !== 'function') {\r\n            return;\r\n        }\r\n        this.__wrappedMethods = this.__wrappedMethods || [];\r\n        this.__wrappedMethods.push(methodName);\r\n        this[methodName] = function () {\r\n            var res = originalMethod.apply(this, arguments);\r\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\r\n        };\r\n    };\r\n\r\n    // Methods that create a new list based on this list should be listed here.\r\n    // Notice that those method should `RETURN` the new list.\r\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\r\n    // Methods that change indices of this list should be listed here.\r\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\r\n\r\n    module.exports = List;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/data/List.js\n ** module id = 619\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","'use strict';\r\n\r\n\r\n    function defaultKeyGetter(item) {\r\n        return item;\r\n    }\r\n\r\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\r\n        this._old = oldArr;\r\n        this._new = newArr;\r\n\r\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\r\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\r\n    }\r\n\r\n    DataDiffer.prototype = {\r\n\r\n        constructor: DataDiffer,\r\n\r\n        /**\r\n         * Callback function when add a data\r\n         */\r\n        add: function (func) {\r\n            this._add = func;\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Callback function when update a data\r\n         */\r\n        update: function (func) {\r\n            this._update = func;\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Callback function when remove a data\r\n         */\r\n        remove: function (func) {\r\n            this._remove = func;\r\n            return this;\r\n        },\r\n\r\n        execute: function () {\r\n            var oldArr = this._old;\r\n            var newArr = this._new;\r\n            var oldKeyGetter = this._oldKeyGetter;\r\n            var newKeyGetter = this._newKeyGetter;\r\n\r\n            var oldDataIndexMap = {};\r\n            var newDataIndexMap = {};\r\n            var oldDataKeyArr = [];\r\n            var newDataKeyArr = [];\r\n            var i;\r\n\r\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\r\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\r\n\r\n            // Travel by inverted order to make sure order consistency\r\n            // when duplicate keys exists (consider newDataIndex.pop() below).\r\n            // For performance consideration, these code below do not look neat.\r\n            for (i = 0; i < oldArr.length; i++) {\r\n                var key = oldDataKeyArr[i];\r\n                var idx = newDataIndexMap[key];\r\n\r\n                // idx can never be empty array here. see 'set null' logic below.\r\n                if (idx != null) {\r\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\r\n                    // We should make sure every item in newArr and oldArr can be visited.\r\n                    var len = idx.length;\r\n                    if (len) {\r\n                        len === 1 && (newDataIndexMap[key] = null);\r\n                        idx = idx.unshift();\r\n                    }\r\n                    else {\r\n                        newDataIndexMap[key] = null;\r\n                    }\r\n                    this._update && this._update(idx, i);\r\n                }\r\n                else {\r\n                    this._remove && this._remove(i);\r\n                }\r\n            }\r\n\r\n            for (var i = 0; i < newDataKeyArr.length; i++) {\r\n                var key = newDataKeyArr[i];\r\n                if (newDataIndexMap.hasOwnProperty(key)) {\r\n                    var idx = newDataIndexMap[key];\r\n                    if (idx == null) {\r\n                        continue;\r\n                    }\r\n                    // idx can never be empty array here. see 'set null' logic above.\r\n                    if (!idx.length) {\r\n                        this._add && this._add(idx);\r\n                    }\r\n                    else {\r\n                        for (var j = 0, len = idx.length; j < len; j++) {\r\n                            this._add && this._add(idx[j]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    function initIndexMap(arr, map, keyArr, keyGetter) {\r\n        for (var i = 0; i < arr.length; i++) {\r\n            var key = keyGetter(arr[i], i);\r\n            var existence = map[key];\r\n            if (existence == null) {\r\n                keyArr.push(key);\r\n                map[key] = i;\r\n            }\r\n            else {\r\n                if (!existence.length) {\r\n                    map[key] = existence = [existence];\r\n                }\r\n                existence.push(i);\r\n            }\r\n        }\r\n    }\r\n\r\n    module.exports = DataDiffer;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/data/DataDiffer.js\n ** module id = 620\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","\r\n\r\n    var zrUtil = require('zrender/lib/core/util');\r\n\r\n    require('../coord/cartesian/Grid');\r\n\r\n    require('./bar/BarSeries');\r\n    require('./bar/BarView');\r\n\r\n    var barLayoutGrid = require('../layout/barGrid');\r\n    var echarts = require('../echarts');\r\n\r\n    echarts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar'));\r\n    // Visual coding for legend\r\n    echarts.registerVisual(function (ecModel) {\r\n        ecModel.eachSeriesByType('bar', function (seriesModel) {\r\n            var data = seriesModel.getData();\r\n            data.setVisual('legendSymbol', 'roundRect');\r\n        });\r\n    });\r\n\r\n    // In case developer forget to include grid component\r\n    require('../component/grid');\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/chart/bar.js\n ** module id = 621\n ** module chunks = 15 29 36 37 42 61\n **/","/**\r\n * Grid is a region which contains at most 4 cartesian systems\r\n *\r\n * TODO Default cartesian\r\n */\r\nvar factory = exports;\r\n\r\n    var layout = require('../../util/layout');\r\n    var axisHelper = require('../../coord/axisHelper');\r\n\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var Cartesian2D = require('./Cartesian2D');\r\n    var Axis2D = require('./Axis2D');\r\n\r\n    var each = zrUtil.each;\r\n\r\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\r\n    var niceScaleExtent = axisHelper.niceScaleExtent;\r\n\r\n    // 依赖 GridModel, AxisModel 做预处理\r\n    require('./GridModel');\r\n\r\n    /**\r\n     * Check if the axis is used in the specified grid\r\n     * @inner\r\n     */\r\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\r\n        return ecModel.getComponent('grid', axisModel.get('gridIndex')) === gridModel;\r\n    }\r\n\r\n    function getLabelUnionRect(axis) {\r\n        var axisModel = axis.model;\r\n        var labels = axisModel.getFormattedLabels();\r\n        var rect;\r\n        var step = 1;\r\n        var labelCount = labels.length;\r\n        if (labelCount > 40) {\r\n            // Simple optimization for large amount of labels\r\n            step = Math.ceil(labelCount / 40);\r\n        }\r\n        for (var i = 0; i < labelCount; i += step) {\r\n            if (!axis.isLabelIgnored(i)) {\r\n                var singleRect = axisModel.getTextRect(labels[i]);\r\n                // FIXME consider label rotate\r\n                rect ? rect.union(singleRect) : (rect = singleRect);\r\n            }\r\n        }\r\n        return rect;\r\n    }\r\n\r\n    function Grid(gridModel, ecModel, api) {\r\n        /**\r\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\r\n         * @private\r\n         */\r\n        this._coordsMap = {};\r\n\r\n        /**\r\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\r\n         * @private\r\n         */\r\n        this._coordsList = [];\r\n\r\n        /**\r\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\r\n         * @private\r\n         */\r\n        this._axesMap = {};\r\n\r\n        /**\r\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\r\n         * @private\r\n         */\r\n        this._axesList = [];\r\n\r\n        this._initCartesian(gridModel, ecModel, api);\r\n\r\n        this._model = gridModel;\r\n    }\r\n\r\n    var gridProto = Grid.prototype;\r\n\r\n    gridProto.type = 'grid';\r\n\r\n    gridProto.getRect = function () {\r\n        return this._rect;\r\n    };\r\n\r\n    gridProto.update = function (ecModel, api) {\r\n\r\n        var axesMap = this._axesMap;\r\n\r\n        this._updateScale(ecModel, this._model);\r\n\r\n        function ifAxisCanNotOnZero(otherAxisDim) {\r\n            var axes = axesMap[otherAxisDim];\r\n            for (var idx in axes) {\r\n                var axis = axes[idx];\r\n                if (axis && (axis.type === 'category' || !ifAxisCrossZero(axis))) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        each(axesMap.x, function (xAxis) {\r\n            niceScaleExtent(xAxis, xAxis.model);\r\n        });\r\n        each(axesMap.y, function (yAxis) {\r\n            niceScaleExtent(yAxis, yAxis.model);\r\n        });\r\n        // Fix configuration\r\n        each(axesMap.x, function (xAxis) {\r\n            // onZero can not be enabled in these two situations\r\n            // 1. When any other axis is a category axis\r\n            // 2. When any other axis not across 0 point\r\n            if (ifAxisCanNotOnZero('y')) {\r\n                xAxis.onZero = false;\r\n            }\r\n        });\r\n        each(axesMap.y, function (yAxis) {\r\n            if (ifAxisCanNotOnZero('x')) {\r\n                yAxis.onZero = false;\r\n            }\r\n        });\r\n\r\n        // Resize again if containLabel is enabled\r\n        // FIXME It may cause getting wrong grid size in data processing stage\r\n        this.resize(this._model, api);\r\n    };\r\n\r\n    /**\r\n     * Resize the grid\r\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\r\n     * @param {module:echarts/ExtensionAPI} api\r\n     */\r\n    gridProto.resize = function (gridModel, api) {\r\n\r\n        var gridRect = layout.getLayoutRect(\r\n            gridModel.getBoxLayoutParams(), {\r\n                width: api.getWidth(),\r\n                height: api.getHeight()\r\n            });\r\n\r\n        this._rect = gridRect;\r\n\r\n        var axesList = this._axesList;\r\n\r\n        adjustAxes();\r\n\r\n        // Minus label size\r\n        if (gridModel.get('containLabel')) {\r\n            each(axesList, function (axis) {\r\n                if (!axis.model.get('axisLabel.inside')) {\r\n                    var labelUnionRect = getLabelUnionRect(axis);\r\n                    if (labelUnionRect) {\r\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\r\n                        var margin = axis.model.get('axisLabel.margin');\r\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\r\n                        if (axis.position === 'top') {\r\n                            gridRect.y += labelUnionRect.height + margin;\r\n                        }\r\n                        else if (axis.position === 'left')  {\r\n                            gridRect.x += labelUnionRect.width + margin;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            adjustAxes();\r\n        }\r\n\r\n        function adjustAxes() {\r\n            each(axesList, function (axis) {\r\n                var isHorizontal = axis.isHorizontal();\r\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\r\n                var idx = axis.inverse ? 1 : 0;\r\n                axis.setExtent(extent[idx], extent[1 - idx]);\r\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @param {string} axisType\r\n     * @param {ndumber} [axisIndex]\r\n     */\r\n    gridProto.getAxis = function (axisType, axisIndex) {\r\n        var axesMapOnDim = this._axesMap[axisType];\r\n        if (axesMapOnDim != null) {\r\n            if (axisIndex == null) {\r\n                // Find first axis\r\n                for (var name in axesMapOnDim) {\r\n                    return axesMapOnDim[name];\r\n                }\r\n            }\r\n            return axesMapOnDim[axisIndex];\r\n        }\r\n    };\r\n\r\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\r\n        if (xAxisIndex != null && yAxisIndex != null) {\r\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\r\n            return this._coordsMap[key];\r\n        }\r\n        else {\r\n            // When only xAxisIndex or yAxisIndex given, find its first cartesian.\r\n            for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\r\n                if (coordList[i].getAxis('x').index === xAxisIndex\r\n                    || coordList[i].getAxis('y').index === yAxisIndex\r\n                ) {\r\n                    return coordList[i];\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Initialize cartesian coordinate systems\r\n     * @private\r\n     */\r\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\r\n        var axisPositionUsed = {\r\n            left: false,\r\n            right: false,\r\n            top: false,\r\n            bottom: false\r\n        };\r\n\r\n        var axesMap = {\r\n            x: {},\r\n            y: {}\r\n        };\r\n        var axesCount = {\r\n            x: 0,\r\n            y: 0\r\n        };\r\n\r\n        /// Create axis\r\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\r\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\r\n\r\n        if (!axesCount.x || !axesCount.y) {\r\n            // Roll back when there no either x or y axis\r\n            this._axesMap = {};\r\n            this._axesList = [];\r\n            return;\r\n        }\r\n\r\n        this._axesMap = axesMap;\r\n\r\n        /// Create cartesian2d\r\n        each(axesMap.x, function (xAxis, xAxisIndex) {\r\n            each(axesMap.y, function (yAxis, yAxisIndex) {\r\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\r\n                var cartesian = new Cartesian2D(key);\r\n\r\n                cartesian.grid = this;\r\n\r\n                this._coordsMap[key] = cartesian;\r\n                this._coordsList.push(cartesian);\r\n\r\n                cartesian.addAxis(xAxis);\r\n                cartesian.addAxis(yAxis);\r\n            }, this);\r\n        }, this);\r\n\r\n        function createAxisCreator(axisType) {\r\n            return function (axisModel, idx) {\r\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\r\n                    return;\r\n                }\r\n\r\n                var axisPosition = axisModel.get('position');\r\n                if (axisType === 'x') {\r\n                    // Fix position\r\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\r\n                        // Default bottom of X\r\n                        axisPosition = 'bottom';\r\n                        if (axisPositionUsed[axisPosition]) {\r\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    // Fix position\r\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\r\n                        // Default left of Y\r\n                        axisPosition = 'left';\r\n                        if (axisPositionUsed[axisPosition]) {\r\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\r\n                        }\r\n                    }\r\n                }\r\n                axisPositionUsed[axisPosition] = true;\r\n\r\n                var axis = new Axis2D(\r\n                    axisType, axisHelper.createScaleByModel(axisModel),\r\n                    [0, 0],\r\n                    axisModel.get('type'),\r\n                    axisPosition\r\n                );\r\n\r\n                var isCategory = axis.type === 'category';\r\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\r\n                axis.inverse = axisModel.get('inverse');\r\n\r\n                axis.onZero = axisModel.get('axisLine.onZero');\r\n\r\n                // Inject axis into axisModel\r\n                axisModel.axis = axis;\r\n\r\n                // Inject axisModel into axis\r\n                axis.model = axisModel;\r\n\r\n                // Inject grid info axis\r\n                axis.grid = this;\r\n\r\n                // Index of axis, can be used as key\r\n                axis.index = idx;\r\n\r\n                this._axesList.push(axis);\r\n\r\n                axesMap[axisType][idx] = axis;\r\n                axesCount[axisType]++;\r\n            };\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Update cartesian properties from series\r\n     * @param  {module:echarts/model/Option} option\r\n     * @private\r\n     */\r\n    gridProto._updateScale = function (ecModel, gridModel) {\r\n        // Reset scale\r\n        zrUtil.each(this._axesList, function (axis) {\r\n            axis.scale.setExtent(Infinity, -Infinity);\r\n        });\r\n        ecModel.eachSeries(function (seriesModel) {\r\n            if (seriesModel.get('coordinateSystem') === 'cartesian2d') {\r\n                var xAxisIndex = seriesModel.get('xAxisIndex');\r\n                var yAxisIndex = seriesModel.get('yAxisIndex');\r\n\r\n                var xAxisModel = ecModel.getComponent('xAxis', xAxisIndex);\r\n                var yAxisModel = ecModel.getComponent('yAxis', yAxisIndex);\r\n\r\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\r\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\r\n                 ) {\r\n                    return;\r\n                }\r\n\r\n                var cartesian = this.getCartesian(xAxisIndex, yAxisIndex);\r\n                var data = seriesModel.getData();\r\n                var xAxis = cartesian.getAxis('x');\r\n                var yAxis = cartesian.getAxis('y');\r\n\r\n                if (data.type === 'list') {\r\n                    unionExtent(data, xAxis, seriesModel);\r\n                    unionExtent(data, yAxis, seriesModel);\r\n                }\r\n            }\r\n        }, this);\r\n\r\n        function unionExtent(data, axis, seriesModel) {\r\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\r\n                axis.scale.unionExtent(data.getDataExtent(\r\n                    dim, axis.scale.type !== 'ordinal'\r\n                ));\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @inner\r\n     */\r\n    function updateAxisTransfrom(axis, coordBase) {\r\n        var axisExtent = axis.getExtent();\r\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\r\n\r\n        // Fast transform\r\n        axis.toGlobalCoord = axis.dim === 'x'\r\n            ? function (coord) {\r\n                return coord + coordBase;\r\n            }\r\n            : function (coord) {\r\n                return axisExtentSum - coord + coordBase;\r\n            };\r\n        axis.toLocalCoord = axis.dim === 'x'\r\n            ? function (coord) {\r\n                return coord - coordBase;\r\n            }\r\n            : function (coord) {\r\n                return axisExtentSum - coord + coordBase;\r\n            };\r\n    }\r\n\r\n    Grid.create = function (ecModel, api) {\r\n        var grids = [];\r\n        ecModel.eachComponent('grid', function (gridModel, idx) {\r\n            var grid = new Grid(gridModel, ecModel, api);\r\n            grid.name = 'grid_' + idx;\r\n            grid.resize(gridModel, api);\r\n\r\n            gridModel.coordinateSystem = grid;\r\n\r\n            grids.push(grid);\r\n        });\r\n\r\n        // Inject the coordinateSystems into seriesModel\r\n        ecModel.eachSeries(function (seriesModel) {\r\n            if (seriesModel.get('coordinateSystem') !== 'cartesian2d') {\r\n                return;\r\n            }\r\n            var xAxisIndex = seriesModel.get('xAxisIndex');\r\n            var yAxisIndex = seriesModel.get('yAxisIndex');\r\n            var xAxisModel = ecModel.getComponent('xAxis', xAxisIndex);\r\n\r\n            if (__DEV__) {\r\n                var yAxisModel = ecModel.getComponent('yAxis', yAxisIndex);\r\n                if (xAxisModel.get('gridIndex') !== yAxisModel.get('gridIndex')) {\r\n                    throw new Error('xAxis and yAxis must use the same grid');\r\n                }\r\n            }\r\n            var grid = grids[xAxisModel.get('gridIndex')];\r\n            seriesModel.coordinateSystem = grid.getCartesian(xAxisIndex, yAxisIndex);\r\n        });\r\n\r\n        return grids;\r\n    };\r\n\r\n    // For deciding which dimensions to use when creating list data\r\n    Grid.dimensions = Cartesian2D.prototype.dimensions;\r\n\r\n    require('../../CoordinateSystem').register('cartesian2d', Grid);\r\n\r\n    module.exports = Grid;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/coord/cartesian/Grid.js\n ** module id = 622\n ** module chunks = 15 29 36 37 42 61\n **/","\r\n\r\n    var OrdinalScale = require('../scale/Ordinal');\r\n    var IntervalScale = require('../scale/Interval');\r\n    require('../scale/Time');\r\n    require('../scale/Log');\r\n    var Scale = require('../scale/Scale');\r\n\r\n    var numberUtil = require('../util/number');\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var textContain = require('zrender/lib/contain/text');\r\n    var axisHelper = {};\r\n\r\n    /**\r\n     * Get axis scale extent before niced.\r\n     */\r\n    axisHelper.getScaleExtent = function (axis, model) {\r\n        var scale = axis.scale;\r\n        var originalExtent = scale.getExtent();\r\n        var span = originalExtent[1] - originalExtent[0];\r\n        if (scale.type === 'ordinal') {\r\n            // If series has no data, scale extent may be wrong\r\n            if (!isFinite(span)) {\r\n                return [0, 0];\r\n            }\r\n            else {\r\n                return originalExtent;\r\n            }\r\n        }\r\n        var min = model.getMin ? model.getMin() : model.get('min');\r\n        var max = model.getMax ? model.getMax() : model.get('max');\r\n        var crossZero = model.getNeedCrossZero\r\n            ? model.getNeedCrossZero() : !model.get('scale');\r\n        var boundaryGap = model.get('boundaryGap');\r\n        if (!zrUtil.isArray(boundaryGap)) {\r\n            boundaryGap = [boundaryGap || 0, boundaryGap || 0];\r\n        }\r\n        boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\r\n        boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\r\n        var fixMin = true;\r\n        var fixMax = true;\r\n        // Add boundary gap\r\n        if (min == null) {\r\n            min = originalExtent[0] - boundaryGap[0] * span;\r\n            fixMin = false;\r\n        }\r\n        if (max == null) {\r\n            max = originalExtent[1] + boundaryGap[1] * span;\r\n            fixMax = false;\r\n        }\r\n        if (min === 'dataMin') {\r\n            min = originalExtent[0];\r\n        }\r\n        if (max === 'dataMax') {\r\n            max = originalExtent[1];\r\n        }\r\n        // Evaluate if axis needs cross zero\r\n        if (crossZero) {\r\n            // Axis is over zero and min is not set\r\n            if (min > 0 && max > 0 && !fixMin) {\r\n                min = 0;\r\n            }\r\n            // Axis is under zero and max is not set\r\n            if (min < 0 && max < 0 && !fixMax) {\r\n                max = 0;\r\n            }\r\n        }\r\n        return [min, max];\r\n    };\r\n\r\n    axisHelper.niceScaleExtent = function (axis, model) {\r\n        var scale = axis.scale;\r\n        var extent = axisHelper.getScaleExtent(axis, model);\r\n        var fixMin = (model.getMin ? model.getMin() : model.get('min')) != null;\r\n        var fixMax = (model.getMax ? model.getMax() : model.get('max')) != null;\r\n        var splitNumber = model.get('splitNumber');\r\n        scale.setExtent(extent[0], extent[1]);\r\n        scale.niceExtent(splitNumber, fixMin, fixMax);\r\n\r\n        // Use minInterval to constraint the calculated interval.\r\n        // If calculated interval is less than minInterval. increase the interval quantity until\r\n        // it is larger than minInterval.\r\n        // For example:\r\n        //  minInterval is 1, calculated interval is 0.2, so increase it to be 1. In this way we can get\r\n        //  an integer axis.\r\n        var minInterval = model.get('minInterval');\r\n        if (isFinite(minInterval) && !fixMin && !fixMax && scale.type === 'interval') {\r\n            var interval = scale.getInterval();\r\n            var intervalScale = Math.max(Math.abs(interval), minInterval) / interval;\r\n            // while (interval < minInterval) {\r\n            //     var quantity = numberUtil.quantity(interval);\r\n            //     interval = quantity * 10;\r\n            //     scaleQuantity *= 10;\r\n            // }\r\n            extent = scale.getExtent();\r\n            scale.setExtent(intervalScale * extent[0], extent[1] * intervalScale);\r\n            scale.niceExtent(splitNumber);\r\n        }\r\n\r\n        // If some one specified the min, max. And the default calculated interval\r\n        // is not good enough. He can specify the interval. It is often appeared\r\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\r\n        // to be 60.\r\n        // FIXME\r\n        var interval = model.get('interval');\r\n        if (interval != null) {\r\n            scale.setInterval && scale.setInterval(interval);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @param {module:echarts/model/Model} model\r\n     * @param {string} [axisType] Default retrieve from model.type\r\n     * @return {module:echarts/scale/*}\r\n     */\r\n    axisHelper.createScaleByModel = function(model, axisType) {\r\n        axisType = axisType || model.get('type');\r\n        if (axisType) {\r\n            switch (axisType) {\r\n                // Buildin scale\r\n                case 'category':\r\n                    return new OrdinalScale(\r\n                        model.getCategories(), [Infinity, -Infinity]\r\n                    );\r\n                case 'value':\r\n                    return new IntervalScale();\r\n                // Extended scale, like time and log\r\n                default:\r\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Check if the axis corss 0\r\n     */\r\n    axisHelper.ifAxisCrossZero = function (axis) {\r\n        var dataExtent = axis.scale.getExtent();\r\n        var min = dataExtent[0];\r\n        var max = dataExtent[1];\r\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\r\n    };\r\n\r\n    /**\r\n     * @param {Array.<number>} tickCoords In axis self coordinate.\r\n     * @param {Array.<string>} labels\r\n     * @param {string} font\r\n     * @param {boolean} isAxisHorizontal\r\n     * @return {number}\r\n     */\r\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\r\n        // FIXME\r\n        // 不同角的axis和label，不只是horizontal和vertical.\r\n\r\n        var textSpaceTakenRect;\r\n        var autoLabelInterval = 0;\r\n        var accumulatedLabelInterval = 0;\r\n\r\n        var step = 1;\r\n        if (labels.length > 40) {\r\n            // Simple optimization for large amount of labels\r\n            step = Math.floor(labels.length / 40);\r\n        }\r\n\r\n        for (var i = 0; i < tickCoords.length; i += step) {\r\n            var tickCoord = tickCoords[i];\r\n            var rect = textContain.getBoundingRect(\r\n                labels[i], font, 'center', 'top'\r\n            );\r\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\r\n            // FIXME Magic number 1.5\r\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\r\n            if (!textSpaceTakenRect) {\r\n                textSpaceTakenRect = rect.clone();\r\n            }\r\n            // There is no space for current label;\r\n            else if (textSpaceTakenRect.intersect(rect)) {\r\n                accumulatedLabelInterval++;\r\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\r\n            }\r\n            else {\r\n                textSpaceTakenRect.union(rect);\r\n                // Reset\r\n                accumulatedLabelInterval = 0;\r\n            }\r\n        }\r\n        if (autoLabelInterval === 0 && step > 1) {\r\n            return step;\r\n        }\r\n        return (autoLabelInterval + 1) * step - 1;\r\n    };\r\n\r\n    /**\r\n     * @param {Object} axis\r\n     * @param {Function} labelFormatter\r\n     * @return {Array.<string>}\r\n     */\r\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\r\n        var scale = axis.scale;\r\n        var labels = scale.getTicksLabels();\r\n        var ticks = scale.getTicks();\r\n        if (typeof labelFormatter === 'string') {\r\n            labelFormatter = (function (tpl) {\r\n                return function (val) {\r\n                    return tpl.replace('{value}', val);\r\n                };\r\n            })(labelFormatter);\r\n            return zrUtil.map(labels, labelFormatter);\r\n        }\r\n        else if (typeof labelFormatter === 'function') {\r\n            return zrUtil.map(ticks, function (tick, idx) {\r\n                return labelFormatter(\r\n                    axis.type === 'category' ? scale.getLabel(tick) : tick,\r\n                    idx\r\n                );\r\n            }, this);\r\n        }\r\n        else {\r\n            return labels;\r\n        }\r\n    };\r\n\r\n    module.exports = axisHelper;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/coord/axisHelper.js\n ** module id = 623\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","/**\r\n * Linear continuous scale\r\n * @module echarts/coord/scale/Ordinal\r\n *\r\n * http://en.wikipedia.org/wiki/Level_of_measurement\r\n */\r\n\r\n// FIXME only one data\r\n\r\n\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var Scale = require('./Scale');\r\n\r\n    var scaleProto = Scale.prototype;\r\n\r\n    var OrdinalScale = Scale.extend({\r\n\r\n        type: 'ordinal',\r\n\r\n        init: function (data, extent) {\r\n            this._data = data;\r\n            this._extent = extent || [0, data.length - 1];\r\n        },\r\n\r\n        parse: function (val) {\r\n            return typeof val === 'string'\r\n                ? zrUtil.indexOf(this._data, val)\r\n                // val might be float.\r\n                : Math.round(val);\r\n        },\r\n\r\n        contain: function (rank) {\r\n            rank = this.parse(rank);\r\n            return scaleProto.contain.call(this, rank)\r\n                && this._data[rank] != null;\r\n        },\r\n\r\n        /**\r\n         * Normalize given rank or name to linear [0, 1]\r\n         * @param {number|string} [val]\r\n         * @return {number}\r\n         */\r\n        normalize: function (val) {\r\n            return scaleProto.normalize.call(this, this.parse(val));\r\n        },\r\n\r\n        scale: function (val) {\r\n            return Math.round(scaleProto.scale.call(this, val));\r\n        },\r\n\r\n        /**\r\n         * @return {Array}\r\n         */\r\n        getTicks: function () {\r\n            var ticks = [];\r\n            var extent = this._extent;\r\n            var rank = extent[0];\r\n\r\n            while (rank <= extent[1]) {\r\n                ticks.push(rank);\r\n                rank++;\r\n            }\r\n\r\n            return ticks;\r\n        },\r\n\r\n        /**\r\n         * Get item on rank n\r\n         * @param {number} n\r\n         * @return {string}\r\n         */\r\n        getLabel: function (n) {\r\n            return this._data[n];\r\n        },\r\n\r\n        /**\r\n         * @return {number}\r\n         */\r\n        count: function () {\r\n            return this._extent[1] - this._extent[0] + 1;\r\n        },\r\n\r\n        niceTicks: zrUtil.noop,\r\n        niceExtent: zrUtil.noop\r\n    });\r\n\r\n    /**\r\n     * @return {module:echarts/scale/Time}\r\n     */\r\n    OrdinalScale.create = function () {\r\n        return new OrdinalScale();\r\n    };\r\n\r\n    module.exports = OrdinalScale;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/scale/Ordinal.js\n ** module id = 624\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","/**\r\n * // Scale class management\r\n * @module echarts/scale/Scale\r\n */\r\n\r\n\r\n    var clazzUtil = require('../util/clazz');\r\n\r\n    function Scale() {\r\n        /**\r\n         * Extent\r\n         * @type {Array.<number>}\r\n         * @protected\r\n         */\r\n        this._extent = [Infinity, -Infinity];\r\n\r\n        /**\r\n         * Step is calculated in adjustExtent\r\n         * @type {Array.<number>}\r\n         * @protected\r\n         */\r\n        this._interval = 0;\r\n\r\n        this.init && this.init.apply(this, arguments);\r\n    }\r\n\r\n    var scaleProto = Scale.prototype;\r\n\r\n    /**\r\n     * Parse input val to valid inner number.\r\n     * @param {*} val\r\n     * @return {number}\r\n     */\r\n    scaleProto.parse = function (val) {\r\n        // Notice: This would be a trap here, If the implementation\r\n        // of this method depends on extent, and this method is used\r\n        // before extent set (like in dataZoom), it would be wrong.\r\n        // Nevertheless, parse does not depend on extent generally.\r\n        return val;\r\n    };\r\n\r\n    scaleProto.contain = function (val) {\r\n        var extent = this._extent;\r\n        return val >= extent[0] && val <= extent[1];\r\n    };\r\n\r\n    /**\r\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\r\n     * @param {number} val\r\n     * @return {number}\r\n     */\r\n    scaleProto.normalize = function (val) {\r\n        var extent = this._extent;\r\n        if (extent[1] === extent[0]) {\r\n            return 0.5;\r\n        }\r\n        return (val - extent[0]) / (extent[1] - extent[0]);\r\n    };\r\n\r\n    /**\r\n     * Scale normalized value\r\n     * @param {number} val\r\n     * @return {number}\r\n     */\r\n    scaleProto.scale = function (val) {\r\n        var extent = this._extent;\r\n        return val * (extent[1] - extent[0]) + extent[0];\r\n    };\r\n\r\n    /**\r\n     * Set extent from data\r\n     * @param {Array.<number>} other\r\n     */\r\n    scaleProto.unionExtent = function (other) {\r\n        var extent = this._extent;\r\n        other[0] < extent[0] && (extent[0] = other[0]);\r\n        other[1] > extent[1] && (extent[1] = other[1]);\r\n        // not setExtent because in log axis it may transformed to power\r\n        // this.setExtent(extent[0], extent[1]);\r\n    };\r\n\r\n    /**\r\n     * Get extent\r\n     * @return {Array.<number>}\r\n     */\r\n    scaleProto.getExtent = function () {\r\n        return this._extent.slice();\r\n    };\r\n\r\n    /**\r\n     * Set extent\r\n     * @param {number} start\r\n     * @param {number} end\r\n     */\r\n    scaleProto.setExtent = function (start, end) {\r\n        var thisExtent = this._extent;\r\n        if (!isNaN(start)) {\r\n            thisExtent[0] = start;\r\n        }\r\n        if (!isNaN(end)) {\r\n            thisExtent[1] = end;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @return {Array.<string>}\r\n     */\r\n    scaleProto.getTicksLabels = function () {\r\n        var labels = [];\r\n        var ticks = this.getTicks();\r\n        for (var i = 0; i < ticks.length; i++) {\r\n            labels.push(this.getLabel(ticks[i]));\r\n        }\r\n        return labels;\r\n    };\r\n\r\n    clazzUtil.enableClassExtend(Scale);\r\n    clazzUtil.enableClassManagement(Scale, {\r\n        registerWhenExtend: true\r\n    });\r\n\r\n    module.exports = Scale;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/scale/Scale.js\n ** module id = 625\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","/**\r\n * Interval scale\r\n * @module echarts/scale/Interval\r\n */\r\n\r\n\r\n\r\n    var numberUtil = require('../util/number');\r\n    var formatUtil = require('../util/format');\r\n    var Scale = require('./Scale');\r\n\r\n    var mathFloor = Math.floor;\r\n    var mathCeil = Math.ceil;\r\n    /**\r\n     * @alias module:echarts/coord/scale/Interval\r\n     * @constructor\r\n     */\r\n    var IntervalScale = Scale.extend({\r\n\r\n        type: 'interval',\r\n\r\n        _interval: 0,\r\n\r\n        setExtent: function (start, end) {\r\n            var thisExtent = this._extent;\r\n            //start,end may be a Number like '25',so...\r\n            if (!isNaN(start)) {\r\n                thisExtent[0] = parseFloat(start);\r\n            }\r\n            if (!isNaN(end)) {\r\n                thisExtent[1] = parseFloat(end);\r\n            }\r\n        },\r\n\r\n        unionExtent: function (other) {\r\n            var extent = this._extent;\r\n            other[0] < extent[0] && (extent[0] = other[0]);\r\n            other[1] > extent[1] && (extent[1] = other[1]);\r\n\r\n            // unionExtent may called by it's sub classes\r\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\r\n        },\r\n        /**\r\n         * Get interval\r\n         */\r\n        getInterval: function () {\r\n            if (!this._interval) {\r\n                this.niceTicks();\r\n            }\r\n            return this._interval;\r\n        },\r\n\r\n        /**\r\n         * Set interval\r\n         */\r\n        setInterval: function (interval) {\r\n            this._interval = interval;\r\n            // Dropped auto calculated niceExtent and use user setted extent\r\n            // We assume user wan't to set both interval, min, max to get a better result\r\n            this._niceExtent = this._extent.slice();\r\n        },\r\n\r\n        /**\r\n         * @return {Array.<number>}\r\n         */\r\n        getTicks: function () {\r\n            if (!this._interval) {\r\n                this.niceTicks();\r\n            }\r\n            var interval = this._interval;\r\n            var extent = this._extent;\r\n            var ticks = [];\r\n\r\n            // Consider this case: using dataZoom toolbox, zoom and zoom.\r\n            var safeLimit = 10000;\r\n\r\n            if (interval) {\r\n                var niceExtent = this._niceExtent;\r\n                if (extent[0] < niceExtent[0]) {\r\n                    ticks.push(extent[0]);\r\n                }\r\n                var tick = niceExtent[0];\r\n                while (tick <= niceExtent[1]) {\r\n                    ticks.push(tick);\r\n                    // Avoid rounding error\r\n                    tick = numberUtil.round(tick + interval);\r\n                    if (ticks.length > safeLimit) {\r\n                        return [];\r\n                    }\r\n                }\r\n                if (extent[1] > niceExtent[1]) {\r\n                    ticks.push(extent[1]);\r\n                }\r\n            }\r\n\r\n            return ticks;\r\n        },\r\n\r\n        /**\r\n         * @return {Array.<string>}\r\n         */\r\n        getTicksLabels: function () {\r\n            var labels = [];\r\n            var ticks = this.getTicks();\r\n            for (var i = 0; i < ticks.length; i++) {\r\n                labels.push(this.getLabel(ticks[i]));\r\n            }\r\n            return labels;\r\n        },\r\n\r\n        /**\r\n         * @param {number} n\r\n         * @return {number}\r\n         */\r\n        getLabel: function (data) {\r\n            return formatUtil.addCommas(data);\r\n        },\r\n\r\n        /**\r\n         * Update interval and extent of intervals for nice ticks\r\n         *\r\n         * @param {number} [splitNumber = 5] Desired number of ticks\r\n         */\r\n        niceTicks: function (splitNumber) {\r\n            splitNumber = splitNumber || 5;\r\n            var extent = this._extent;\r\n            var span = extent[1] - extent[0];\r\n            if (!isFinite(span)) {\r\n                return;\r\n            }\r\n            // User may set axis min 0 and data are all negative\r\n            // FIXME If it needs to reverse ?\r\n            if (span < 0) {\r\n                span = -span;\r\n                extent.reverse();\r\n            }\r\n\r\n            // From \"Nice Numbers for Graph Labels\" of Graphic Gems\r\n            // var niceSpan = numberUtil.nice(span, false);\r\n            var step = numberUtil.nice(span / splitNumber, true);\r\n\r\n            // Niced extent inside original extent\r\n            var niceExtent = [\r\n                numberUtil.round(mathCeil(extent[0] / step) * step),\r\n                numberUtil.round(mathFloor(extent[1] / step) * step)\r\n            ];\r\n\r\n            this._interval = step;\r\n            this._niceExtent = niceExtent;\r\n        },\r\n\r\n        /**\r\n         * Nice extent.\r\n         * @param {number} [splitNumber = 5] Given approx tick number\r\n         * @param {boolean} [fixMin=false]\r\n         * @param {boolean} [fixMax=false]\r\n         */\r\n        niceExtent: function (splitNumber, fixMin, fixMax) {\r\n            var extent = this._extent;\r\n            // If extent start and end are same, expand them\r\n            if (extent[0] === extent[1]) {\r\n                if (extent[0] !== 0) {\r\n                    // Expand extent\r\n                    var expandSize = extent[0];\r\n                    // In the fowllowing case\r\n                    //      Axis has been fixed max 100\r\n                    //      Plus data are all 100 and axis extent are [100, 100].\r\n                    // Extend to the both side will cause expanded max is larger than fixed max.\r\n                    // So only expand to the smaller side.\r\n                    if (!fixMax) {\r\n                        extent[1] += expandSize / 2;\r\n                        extent[0] -= expandSize / 2;\r\n                    }\r\n                    else {\r\n                        extent[0] -= expandSize / 2;\r\n                    }\r\n                }\r\n                else {\r\n                    extent[1] = 1;\r\n                }\r\n            }\r\n            var span = extent[1] - extent[0];\r\n            // If there are no data and extent are [Infinity, -Infinity]\r\n            if (!isFinite(span)) {\r\n                extent[0] = 0;\r\n                extent[1] = 1;\r\n            }\r\n\r\n            this.niceTicks(splitNumber);\r\n\r\n            // var extent = this._extent;\r\n            var interval = this._interval;\r\n\r\n            if (!fixMin) {\r\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\r\n            }\r\n            if (!fixMax) {\r\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\r\n            }\r\n        }\r\n    });\r\n\r\n    /**\r\n     * @return {module:echarts/scale/Time}\r\n     */\r\n    IntervalScale.create = function () {\r\n        return new IntervalScale();\r\n    };\r\n\r\n    module.exports = IntervalScale;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/scale/Interval.js\n ** module id = 626\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","/**\r\n * Interval scale\r\n * @module echarts/coord/scale/Time\r\n */\r\n\r\n\r\n\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var numberUtil = require('../util/number');\r\n    var formatUtil = require('../util/format');\r\n\r\n    var IntervalScale = require('./Interval');\r\n\r\n    var intervalScaleProto = IntervalScale.prototype;\r\n\r\n    var mathCeil = Math.ceil;\r\n    var mathFloor = Math.floor;\r\n    var ONE_SECOND = 1000;\r\n    var ONE_MINUTE = ONE_SECOND * 60;\r\n    var ONE_HOUR = ONE_MINUTE * 60;\r\n    var ONE_DAY = ONE_HOUR * 24;\r\n\r\n    // FIXME 公用？\r\n    var bisect = function (a, x, lo, hi) {\r\n        while (lo < hi) {\r\n            var mid = lo + hi >>> 1;\r\n            if (a[mid][2] < x) {\r\n                lo = mid + 1;\r\n            }\r\n            else {\r\n                hi  = mid;\r\n            }\r\n        }\r\n        return lo;\r\n    };\r\n\r\n    /**\r\n     * @alias module:echarts/coord/scale/Time\r\n     * @constructor\r\n     */\r\n    var TimeScale = IntervalScale.extend({\r\n        type: 'time',\r\n\r\n        // Overwrite\r\n        getLabel: function (val) {\r\n            var stepLvl = this._stepLvl;\r\n\r\n            var date = new Date(val);\r\n\r\n            return formatUtil.formatTime(stepLvl[0], date);\r\n        },\r\n\r\n        // Overwrite\r\n        niceExtent: function (approxTickNum, fixMin, fixMax) {\r\n            var extent = this._extent;\r\n            // If extent start and end are same, expand them\r\n            if (extent[0] === extent[1]) {\r\n                // Expand extent\r\n                extent[0] -= ONE_DAY;\r\n                extent[1] += ONE_DAY;\r\n            }\r\n            // If there are no data and extent are [Infinity, -Infinity]\r\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\r\n                var d = new Date();\r\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\r\n                extent[0] = extent[1] - ONE_DAY;\r\n            }\r\n\r\n            this.niceTicks(approxTickNum);\r\n\r\n            // var extent = this._extent;\r\n            var interval = this._interval;\r\n\r\n            if (!fixMin) {\r\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\r\n            }\r\n            if (!fixMax) {\r\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\r\n            }\r\n        },\r\n\r\n        // Overwrite\r\n        niceTicks: function (approxTickNum) {\r\n            approxTickNum = approxTickNum || 10;\r\n\r\n            var extent = this._extent;\r\n            var span = extent[1] - extent[0];\r\n            var approxInterval = span / approxTickNum;\r\n            var scaleLevelsLen = scaleLevels.length;\r\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\r\n\r\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\r\n            var interval = level[2];\r\n            // Same with interval scale if span is much larger than 1 year\r\n            if (level[0] === 'year') {\r\n                var yearSpan = span / interval;\r\n\r\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\r\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\r\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\r\n\r\n                interval *= yearStep;\r\n            }\r\n\r\n            var niceExtent = [\r\n                mathCeil(extent[0] / interval) * interval,\r\n                mathFloor(extent[1] / interval) * interval\r\n            ];\r\n\r\n            this._stepLvl = level;\r\n            // Interval will be used in getTicks\r\n            this._interval = interval;\r\n            this._niceExtent = niceExtent;\r\n        },\r\n\r\n        parse: function (val) {\r\n            // val might be float.\r\n            return +numberUtil.parseDate(val);\r\n        }\r\n    });\r\n\r\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\r\n        TimeScale.prototype[methodName] = function (val) {\r\n            return intervalScaleProto[methodName].call(this, this.parse(val));\r\n        };\r\n    });\r\n\r\n    // Steps from d3\r\n    var scaleLevels = [\r\n        // Format       step    interval\r\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\r\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\r\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\r\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\r\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\r\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\r\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\r\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\r\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\r\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\r\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\r\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\r\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\r\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\r\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\r\n        ['week',        7,      ONE_DAY * 7],        // 7d\r\n        ['month',       1,      ONE_DAY * 31],       // 1M\r\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\r\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\r\n        ['year',        1,      ONE_DAY * 380]       // 1Y\r\n    ];\r\n\r\n    /**\r\n     * @return {module:echarts/scale/Time}\r\n     */\r\n    TimeScale.create = function () {\r\n        return new TimeScale();\r\n    };\r\n\r\n    module.exports = TimeScale;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/scale/Time.js\n ** module id = 627\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","/**\r\n * Log scale\r\n * @module echarts/scale/Log\r\n */\r\n\r\n\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var Scale = require('./Scale');\r\n    var numberUtil = require('../util/number');\r\n\r\n    // Use some method of IntervalScale\r\n    var IntervalScale = require('./Interval');\r\n\r\n    var scaleProto = Scale.prototype;\r\n    var intervalScaleProto = IntervalScale.prototype;\r\n\r\n    var mathFloor = Math.floor;\r\n    var mathCeil = Math.ceil;\r\n    var mathPow = Math.pow;\r\n\r\n    var LOG_BASE = 10;\r\n    var mathLog = Math.log;\r\n\r\n    var LogScale = Scale.extend({\r\n\r\n        type: 'log',\r\n\r\n        /**\r\n         * @return {Array.<number>}\r\n         */\r\n        getTicks: function () {\r\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\r\n                return numberUtil.round(mathPow(LOG_BASE, val));\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @param {number} val\r\n         * @return {string}\r\n         */\r\n        getLabel: intervalScaleProto.getLabel,\r\n\r\n        /**\r\n         * @param  {number} val\r\n         * @return {number}\r\n         */\r\n        scale: function (val) {\r\n            val = scaleProto.scale.call(this, val);\r\n            return mathPow(LOG_BASE, val);\r\n        },\r\n\r\n        /**\r\n         * @param {number} start\r\n         * @param {number} end\r\n         */\r\n        setExtent: function (start, end) {\r\n            start = mathLog(start) / mathLog(LOG_BASE);\r\n            end = mathLog(end) / mathLog(LOG_BASE);\r\n            intervalScaleProto.setExtent.call(this, start, end);\r\n        },\r\n\r\n        /**\r\n         * @return {number} end\r\n         */\r\n        getExtent: function () {\r\n            var extent = scaleProto.getExtent.call(this);\r\n            extent[0] = mathPow(LOG_BASE, extent[0]);\r\n            extent[1] = mathPow(LOG_BASE, extent[1]);\r\n            return extent;\r\n        },\r\n\r\n        /**\r\n         * @param  {Array.<number>} extent\r\n         */\r\n        unionExtent: function (extent) {\r\n            extent[0] = mathLog(extent[0]) / mathLog(LOG_BASE);\r\n            extent[1] = mathLog(extent[1]) / mathLog(LOG_BASE);\r\n            scaleProto.unionExtent.call(this, extent);\r\n        },\r\n\r\n        /**\r\n         * Update interval and extent of intervals for nice ticks\r\n         * @param  {number} [approxTickNum = 10] Given approx tick number\r\n         */\r\n        niceTicks: function (approxTickNum) {\r\n            approxTickNum = approxTickNum || 10;\r\n            var extent = this._extent;\r\n            var span = extent[1] - extent[0];\r\n            if (span === Infinity || span <= 0) {\r\n                return;\r\n            }\r\n\r\n            var interval = mathPow(10, mathFloor(mathLog(span / approxTickNum) / Math.LN10));\r\n            var err = approxTickNum / span * interval;\r\n\r\n            // Filter ticks to get closer to the desired count.\r\n            if (err <= 0.5) {\r\n                interval *= 10;\r\n            }\r\n            var niceExtent = [\r\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\r\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\r\n            ];\r\n\r\n            this._interval = interval;\r\n            this._niceExtent = niceExtent;\r\n        },\r\n\r\n        /**\r\n         * Nice extent.\r\n         * @param {number} [approxTickNum = 10] Given approx tick number\r\n         * @param {boolean} [fixMin=false]\r\n         * @param {boolean} [fixMax=false]\r\n         */\r\n        niceExtent: intervalScaleProto.niceExtent\r\n    });\r\n\r\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\r\n        LogScale.prototype[methodName] = function (val) {\r\n            val = mathLog(val) / mathLog(LOG_BASE);\r\n            return scaleProto[methodName].call(this, val);\r\n        };\r\n    });\r\n\r\n    LogScale.create = function () {\r\n        return new LogScale();\r\n    };\r\n\r\n    module.exports = LogScale;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/scale/Log.js\n ** module id = 628\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","'use strict';\r\n\r\n\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var Cartesian = require('./Cartesian');\r\n\r\n    function Cartesian2D(name) {\r\n\r\n        Cartesian.call(this, name);\r\n    }\r\n\r\n    Cartesian2D.prototype = {\r\n\r\n        constructor: Cartesian2D,\r\n\r\n        type: 'cartesian2d',\r\n\r\n        /**\r\n         * @type {Array.<string>}\r\n         * @readOnly\r\n         */\r\n        dimensions: ['x', 'y'],\r\n\r\n        /**\r\n         * Base axis will be used on stacking.\r\n         *\r\n         * @return {module:echarts/coord/cartesian/Axis2D}\r\n         */\r\n        getBaseAxis: function () {\r\n            return this.getAxesByScale('ordinal')[0]\r\n                || this.getAxesByScale('time')[0]\r\n                || this.getAxis('x');\r\n        },\r\n\r\n        /**\r\n         * If contain point\r\n         * @param {Array.<number>} point\r\n         * @return {boolean}\r\n         */\r\n        containPoint: function (point) {\r\n            var axisX = this.getAxis('x');\r\n            var axisY = this.getAxis('y');\r\n            return axisX.contain(axisX.toLocalCoord(point[0]))\r\n                && axisY.contain(axisY.toLocalCoord(point[1]));\r\n        },\r\n\r\n        /**\r\n         * If contain data\r\n         * @param {Array.<number>} data\r\n         * @return {boolean}\r\n         */\r\n        containData: function (data) {\r\n            return this.getAxis('x').containData(data[0])\r\n                && this.getAxis('y').containData(data[1]);\r\n        },\r\n\r\n        /**\r\n         * Convert series data to an array of points\r\n         * @param {module:echarts/data/List} data\r\n         * @param {boolean} stack\r\n         * @return {Array}\r\n         *  Return array of points. For example:\r\n         *  `[[10, 10], [20, 20], [30, 30]]`\r\n         */\r\n        dataToPoints: function (data, stack) {\r\n            return data.mapArray(['x', 'y'], function (x, y) {\r\n                return this.dataToPoint([x, y]);\r\n            }, stack, this);\r\n        },\r\n\r\n        /**\r\n         * @param {Array.<number>} data\r\n         * @param {boolean} [clamp=false]\r\n         * @return {Array.<number>}\r\n         */\r\n        dataToPoint: function (data, clamp) {\r\n            var xAxis = this.getAxis('x');\r\n            var yAxis = this.getAxis('y');\r\n            return [\r\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\r\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\r\n            ];\r\n        },\r\n\r\n        /**\r\n         * @param {Array.<number>} point\r\n         * @param {boolean} [clamp=false]\r\n         * @return {Array.<number>}\r\n         */\r\n        pointToData: function (point, clamp) {\r\n            var xAxis = this.getAxis('x');\r\n            var yAxis = this.getAxis('y');\r\n            return [\r\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\r\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\r\n            ];\r\n        },\r\n\r\n        /**\r\n         * Get other axis\r\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\r\n         */\r\n        getOtherAxis: function (axis) {\r\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\r\n        }\r\n    };\r\n\r\n    zrUtil.inherits(Cartesian2D, Cartesian);\r\n\r\n    module.exports = Cartesian2D;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/coord/cartesian/Cartesian2D.js\n ** module id = 629\n ** module chunks = 15 29 36 37 42 61\n **/","'use strict';\r\n/**\r\n * Cartesian coordinate system\r\n * @module  echarts/coord/Cartesian\r\n *\r\n */\r\n\r\n\r\n    var zrUtil = require('zrender/lib/core/util');\r\n\r\n    function dimAxisMapper(dim) {\r\n        return this._axes[dim];\r\n    }\r\n\r\n    /**\r\n     * @alias module:echarts/coord/Cartesian\r\n     * @constructor\r\n     */\r\n    var Cartesian = function (name) {\r\n        this._axes = {};\r\n\r\n        this._dimList = [];\r\n\r\n        /**\r\n         * @type {string}\r\n         */\r\n        this.name = name || '';\r\n    };\r\n\r\n    Cartesian.prototype = {\r\n\r\n        constructor: Cartesian,\r\n\r\n        type: 'cartesian',\r\n\r\n        /**\r\n         * Get axis\r\n         * @param  {number|string} dim\r\n         * @return {module:echarts/coord/Cartesian~Axis}\r\n         */\r\n        getAxis: function (dim) {\r\n            return this._axes[dim];\r\n        },\r\n\r\n        /**\r\n         * Get axes list\r\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\r\n         */\r\n        getAxes: function () {\r\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\r\n        },\r\n\r\n        /**\r\n         * Get axes list by given scale type\r\n         */\r\n        getAxesByScale: function (scaleType) {\r\n            scaleType = scaleType.toLowerCase();\r\n            return zrUtil.filter(\r\n                this.getAxes(),\r\n                function (axis) {\r\n                    return axis.scale.type === scaleType;\r\n                }\r\n            );\r\n        },\r\n\r\n        /**\r\n         * Add axis\r\n         * @param {module:echarts/coord/Cartesian.Axis}\r\n         */\r\n        addAxis: function (axis) {\r\n            var dim = axis.dim;\r\n\r\n            this._axes[dim] = axis;\r\n\r\n            this._dimList.push(dim);\r\n        },\r\n\r\n        /**\r\n         * Convert data to coord in nd space\r\n         * @param {Array.<number>|Object.<string, number>} val\r\n         * @return {Array.<number>|Object.<string, number>}\r\n         */\r\n        dataToCoord: function (val) {\r\n            return this._dataCoordConvert(val, 'dataToCoord');\r\n        },\r\n\r\n        /**\r\n         * Convert coord in nd space to data\r\n         * @param  {Array.<number>|Object.<string, number>} val\r\n         * @return {Array.<number>|Object.<string, number>}\r\n         */\r\n        coordToData: function (val) {\r\n            return this._dataCoordConvert(val, 'coordToData');\r\n        },\r\n\r\n        _dataCoordConvert: function (input, method) {\r\n            var dimList = this._dimList;\r\n\r\n            var output = input instanceof Array ? [] : {};\r\n\r\n            for (var i = 0; i < dimList.length; i++) {\r\n                var dim = dimList[i];\r\n                var axis = this._axes[dim];\r\n\r\n                output[dim] = axis[method](input[dim]);\r\n            }\r\n\r\n            return output;\r\n        }\r\n    };\r\n\r\n    module.exports = Cartesian;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/coord/cartesian/Cartesian.js\n ** module id = 630\n ** module chunks = 15 29 36 37 42 61\n **/","\r\n\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var Axis = require('../Axis');\r\n    var axisLabelInterval = require('./axisLabelInterval');\r\n\r\n    /**\r\n     * Extend axis 2d\r\n     * @constructor module:echarts/coord/cartesian/Axis2D\r\n     * @extends {module:echarts/coord/cartesian/Axis}\r\n     * @param {string} dim\r\n     * @param {*} scale\r\n     * @param {Array.<number>} coordExtent\r\n     * @param {string} axisType\r\n     * @param {string} position\r\n     */\r\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\r\n        Axis.call(this, dim, scale, coordExtent);\r\n        /**\r\n         * Axis type\r\n         *  - 'category'\r\n         *  - 'value'\r\n         *  - 'time'\r\n         *  - 'log'\r\n         * @type {string}\r\n         */\r\n        this.type = axisType || 'value';\r\n\r\n        /**\r\n         * Axis position\r\n         *  - 'top'\r\n         *  - 'bottom'\r\n         *  - 'left'\r\n         *  - 'right'\r\n         */\r\n        this.position = position || 'bottom';\r\n    };\r\n\r\n    Axis2D.prototype = {\r\n\r\n        constructor: Axis2D,\r\n\r\n        /**\r\n         * Index of axis, can be used as key\r\n         */\r\n        index: 0,\r\n        /**\r\n         * If axis is on the zero position of the other axis\r\n         * @type {boolean}\r\n         */\r\n        onZero: false,\r\n\r\n        /**\r\n         * Axis model\r\n         * @param {module:echarts/coord/cartesian/AxisModel}\r\n         */\r\n        model: null,\r\n\r\n        isHorizontal: function () {\r\n            var position = this.position;\r\n            return position === 'top' || position === 'bottom';\r\n        },\r\n\r\n        getGlobalExtent: function () {\r\n            var ret = this.getExtent();\r\n            ret[0] = this.toGlobalCoord(ret[0]);\r\n            ret[1] = this.toGlobalCoord(ret[1]);\r\n            return ret;\r\n        },\r\n\r\n        /**\r\n         * @return {number}\r\n         */\r\n        getLabelInterval: function () {\r\n            var labelInterval = this._labelInterval;\r\n            if (!labelInterval) {\r\n                labelInterval = this._labelInterval = axisLabelInterval(this);\r\n            }\r\n            return labelInterval;\r\n        },\r\n\r\n        /**\r\n         * If label is ignored.\r\n         * Automatically used when axis is category and label can not be all shown\r\n         * @param  {number}  idx\r\n         * @return {boolean}\r\n         */\r\n        isLabelIgnored: function (idx) {\r\n            if (this.type === 'category') {\r\n                var labelInterval = this.getLabelInterval();\r\n                return ((typeof labelInterval === 'function')\r\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\r\n                    || idx % (labelInterval + 1);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Transform global coord to local coord,\r\n         * i.e. var localCoord = axis.toLocalCoord(80);\r\n         * designate by module:echarts/coord/cartesian/Grid.\r\n         * @type {Function}\r\n         */\r\n        toLocalCoord: null,\r\n\r\n        /**\r\n         * Transform global coord to local coord,\r\n         * i.e. var globalCoord = axis.toLocalCoord(40);\r\n         * designate by module:echarts/coord/cartesian/Grid.\r\n         * @type {Function}\r\n         */\r\n        toGlobalCoord: null\r\n\r\n    };\r\n    zrUtil.inherits(Axis2D, Axis);\r\n\r\n    module.exports = Axis2D;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/coord/cartesian/Axis2D.js\n ** module id = 631\n ** module chunks = 15 29 36 37 42 61\n **/","\r\n\r\n    var numberUtil = require('../util/number');\r\n    var linearMap = numberUtil.linearMap;\r\n    var zrUtil = require('zrender/lib/core/util');\r\n\r\n    function fixExtentWithBands(extent, nTick) {\r\n        var size = extent[1] - extent[0];\r\n        var len = nTick;\r\n        var margin = size / len / 2;\r\n        extent[0] += margin;\r\n        extent[1] -= margin;\r\n    }\r\n\r\n    var normalizedExtent = [0, 1];\r\n    /**\r\n     * @name module:echarts/coord/CartesianAxis\r\n     * @constructor\r\n     */\r\n    var Axis = function (dim, scale, extent) {\r\n\r\n        /**\r\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\r\n         * @type {string}\r\n         */\r\n        this.dim = dim;\r\n\r\n        /**\r\n         * Axis scale\r\n         * @type {module:echarts/coord/scale/*}\r\n         */\r\n        this.scale = scale;\r\n\r\n        /**\r\n         * @type {Array.<number>}\r\n         * @private\r\n         */\r\n        this._extent = extent || [0, 0];\r\n\r\n        /**\r\n         * @type {boolean}\r\n         */\r\n        this.inverse = false;\r\n\r\n        /**\r\n         * Usually true when axis has a ordinal scale\r\n         * @type {boolean}\r\n         */\r\n        this.onBand = false;\r\n    };\r\n\r\n    Axis.prototype = {\r\n\r\n        constructor: Axis,\r\n\r\n        /**\r\n         * If axis extent contain given coord\r\n         * @param {number} coord\r\n         * @return {boolean}\r\n         */\r\n        contain: function (coord) {\r\n            var extent = this._extent;\r\n            var min = Math.min(extent[0], extent[1]);\r\n            var max = Math.max(extent[0], extent[1]);\r\n            return coord >= min && coord <= max;\r\n        },\r\n\r\n        /**\r\n         * If axis extent contain given data\r\n         * @param {number} data\r\n         * @return {boolean}\r\n         */\r\n        containData: function (data) {\r\n            return this.contain(this.dataToCoord(data));\r\n        },\r\n\r\n        /**\r\n         * Get coord extent.\r\n         * @return {Array.<number>}\r\n         */\r\n        getExtent: function () {\r\n            var ret = this._extent.slice();\r\n            return ret;\r\n        },\r\n\r\n        /**\r\n         * Get precision used for formatting\r\n         * @param {Array.<number>} [dataExtent]\r\n         * @return {number}\r\n         */\r\n        getPixelPrecision: function (dataExtent) {\r\n            return numberUtil.getPixelPrecision(\r\n                dataExtent || this.scale.getExtent(),\r\n                this._extent\r\n            );\r\n        },\r\n\r\n        /**\r\n         * Set coord extent\r\n         * @param {number} start\r\n         * @param {number} end\r\n         */\r\n        setExtent: function (start, end) {\r\n            var extent = this._extent;\r\n            extent[0] = start;\r\n            extent[1] = end;\r\n        },\r\n\r\n        /**\r\n         * Convert data to coord. Data is the rank if it has a ordinal scale\r\n         * @param {number} data\r\n         * @param  {boolean} clamp\r\n         * @return {number}\r\n         */\r\n        dataToCoord: function (data, clamp) {\r\n            var extent = this._extent;\r\n            var scale = this.scale;\r\n            data = scale.normalize(data);\r\n\r\n            if (this.onBand && scale.type === 'ordinal') {\r\n                extent = extent.slice();\r\n                fixExtentWithBands(extent, scale.count());\r\n            }\r\n\r\n            return linearMap(data, normalizedExtent, extent, clamp);\r\n        },\r\n\r\n        /**\r\n         * Convert coord to data. Data is the rank if it has a ordinal scale\r\n         * @param {number} coord\r\n         * @param  {boolean} clamp\r\n         * @return {number}\r\n         */\r\n        coordToData: function (coord, clamp) {\r\n            var extent = this._extent;\r\n            var scale = this.scale;\r\n\r\n            if (this.onBand && scale.type === 'ordinal') {\r\n                extent = extent.slice();\r\n                fixExtentWithBands(extent, scale.count());\r\n            }\r\n\r\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\r\n\r\n            return this.scale.scale(t);\r\n        },\r\n        /**\r\n         * @return {Array.<number>}\r\n         */\r\n        getTicksCoords: function (alignWithLabel) {\r\n            if (this.onBand && !alignWithLabel) {\r\n                var bands = this.getBands();\r\n                var coords = [];\r\n                for (var i = 0; i < bands.length; i++) {\r\n                    coords.push(bands[i][0]);\r\n                }\r\n                if (bands[i - 1]) {\r\n                    coords.push(bands[i - 1][1]);\r\n                }\r\n                return coords;\r\n            }\r\n            else {\r\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Coords of labels are on the ticks or on the middle of bands\r\n         * @return {Array.<number>}\r\n         */\r\n        getLabelsCoords: function () {\r\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\r\n        },\r\n\r\n        /**\r\n         * Get bands.\r\n         *\r\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\r\n         * |---1---|---2---|---3---|---4---|.\r\n         *\r\n         * @return {Array}\r\n         */\r\n         // FIXME Situation when labels is on ticks\r\n        getBands: function () {\r\n            var extent = this.getExtent();\r\n            var bands = [];\r\n            var len = this.scale.count();\r\n            var start = extent[0];\r\n            var end = extent[1];\r\n            var span = end - start;\r\n\r\n            for (var i = 0; i < len; i++) {\r\n                bands.push([\r\n                    span * i / len + start,\r\n                    span * (i + 1) / len + start\r\n                ]);\r\n            }\r\n            return bands;\r\n        },\r\n\r\n        /**\r\n         * Get width of band\r\n         * @return {number}\r\n         */\r\n        getBandWidth: function () {\r\n            var axisExtent = this._extent;\r\n            var dataExtent = this.scale.getExtent();\r\n\r\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\r\n            // Fix #2728, avoid NaN when only one data.\r\n            len === 0 && (len = 1);\r\n\r\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\r\n\r\n            return Math.abs(size) / len;\r\n        }\r\n    };\r\n\r\n    module.exports = Axis;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/coord/Axis.js\n ** module id = 632\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","'use strict';\r\n/**\r\n * Helper function for axisLabelInterval calculation\r\n */\r\n\r\n\r\n\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var axisHelper = require('../axisHelper');\r\n\r\n    module.exports = function (axis) {\r\n        var axisModel = axis.model;\r\n        var labelModel = axisModel.getModel('axisLabel');\r\n        var labelInterval = labelModel.get('interval');\r\n        if (!(axis.type === 'category' && labelInterval === 'auto')) {\r\n            return labelInterval === 'auto' ? 0 : labelInterval;\r\n        }\r\n\r\n        return axisHelper.getAxisLabelInterval(\r\n            zrUtil.map(axis.scale.getTicks(), axis.dataToCoord, axis),\r\n            axisModel.getFormattedLabels(),\r\n            labelModel.getModel('textStyle').getFont(),\r\n            axis.isHorizontal()\r\n        );\r\n    };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/coord/cartesian/axisLabelInterval.js\n ** module id = 633\n ** module chunks = 15 29 36 37 42 61\n **/","'use strict';\r\n// Grid 是在有直角坐标系的时候必须要存在的\r\n// 所以这里也要被 Cartesian2D 依赖\r\n\r\n\r\n    require('./AxisModel');\r\n    var ComponentModel = require('../../model/Component');\r\n\r\n    module.exports = ComponentModel.extend({\r\n\r\n        type: 'grid',\r\n\r\n        dependencies: ['xAxis', 'yAxis'],\r\n\r\n        layoutMode: 'box',\r\n\r\n        /**\r\n         * @type {module:echarts/coord/cartesian/Grid}\r\n         */\r\n        coordinateSystem: null,\r\n\r\n        defaultOption: {\r\n            show: false,\r\n            zlevel: 0,\r\n            z: 0,\r\n            left: '10%',\r\n            top: 60,\r\n            right: '10%',\r\n            bottom: 60,\r\n            // If grid size contain label\r\n            containLabel: false,\r\n            // width: {totalWidth} - left - right,\r\n            // height: {totalHeight} - top - bottom,\r\n            backgroundColor: 'rgba(0,0,0,0)',\r\n            borderWidth: 1,\r\n            borderColor: '#ccc'\r\n        }\r\n    });\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/coord/cartesian/GridModel.js\n ** module id = 634\n ** module chunks = 15 29 36 37 42 61\n **/","'use strict';\r\n\r\n\r\n    var ComponentModel = require('../../model/Component');\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var axisModelCreator = require('../axisModelCreator');\r\n\r\n    var AxisModel = ComponentModel.extend({\r\n\r\n        type: 'cartesian2dAxis',\r\n\r\n        /**\r\n         * @type {module:echarts/coord/cartesian/Axis2D}\r\n         */\r\n        axis: null,\r\n\r\n        /**\r\n         * @override\r\n         */\r\n        init: function () {\r\n            AxisModel.superApply(this, 'init', arguments);\r\n            this._resetRange();\r\n        },\r\n\r\n        /**\r\n         * @override\r\n         */\r\n        mergeOption: function () {\r\n            AxisModel.superApply(this, 'mergeOption', arguments);\r\n            this._resetRange();\r\n        },\r\n\r\n        /**\r\n         * @override\r\n         */\r\n        restoreData: function () {\r\n            AxisModel.superApply(this, 'restoreData', arguments);\r\n            this._resetRange();\r\n        },\r\n\r\n        /**\r\n         * @public\r\n         * @param {number} rangeStart\r\n         * @param {number} rangeEnd\r\n         */\r\n        setRange: function (rangeStart, rangeEnd) {\r\n            this.option.rangeStart = rangeStart;\r\n            this.option.rangeEnd = rangeEnd;\r\n        },\r\n\r\n        /**\r\n         * @public\r\n         * @return {Array.<number|string|Date>}\r\n         */\r\n        getMin: function () {\r\n            var option = this.option;\r\n            return option.rangeStart != null ? option.rangeStart : option.min;\r\n        },\r\n\r\n        /**\r\n         * @public\r\n         * @return {Array.<number|string|Date>}\r\n         */\r\n        getMax: function () {\r\n            var option = this.option;\r\n            return option.rangeEnd != null ? option.rangeEnd : option.max;\r\n        },\r\n\r\n        /**\r\n         * @public\r\n         * @return {boolean}\r\n         */\r\n        getNeedCrossZero: function () {\r\n            var option = this.option;\r\n            return (option.rangeStart != null || option.rangeEnd != null)\r\n                ? false : !option.scale;\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _resetRange: function () {\r\n            // rangeStart and rangeEnd is readonly.\r\n            this.option.rangeStart = this.option.rangeEnd = null;\r\n        }\r\n\r\n    });\r\n\r\n    function getAxisType(axisDim, option) {\r\n        // Default axis with data is category axis\r\n        return option.type || (option.data ? 'category' : 'value');\r\n    }\r\n\r\n    zrUtil.merge(AxisModel.prototype, require('../axisModelCommonMixin'));\r\n\r\n    var extraOption = {\r\n        gridIndex: 0,\r\n\r\n        // Offset is for multiple axis on the same position\r\n        offset: 0\r\n    };\r\n\r\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\r\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\r\n\r\n    module.exports = AxisModel;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/coord/cartesian/AxisModel.js\n ** module id = 635\n ** module chunks = 15 29 36 37 42 61\n **/","\r\n\r\n    var axisDefault = require('./axisDefault');\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var ComponentModel = require('../model/Component');\r\n    var layout = require('../util/layout');\r\n\r\n    // FIXME axisType is fixed ?\r\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\r\n\r\n    /**\r\n     * Generate sub axis model class\r\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\r\n     * @param {module:echarts/model/Component} BaseAxisModelClass\r\n     * @param {Function} axisTypeDefaulter\r\n     * @param {Object} [extraDefaultOption]\r\n     */\r\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\r\n\r\n        zrUtil.each(AXIS_TYPES, function (axisType) {\r\n\r\n            BaseAxisModelClass.extend({\r\n\r\n                type: axisName + 'Axis.' + axisType,\r\n\r\n                mergeDefaultAndTheme: function (option, ecModel) {\r\n                    var layoutMode = this.layoutMode;\r\n                    var inputPositionParams = layoutMode\r\n                        ? layout.getLayoutParams(option) : {};\r\n\r\n                    var themeModel = ecModel.getTheme();\r\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\r\n                    zrUtil.merge(option, this.getDefaultOption());\r\n\r\n                    option.type = axisTypeDefaulter(axisName, option);\r\n\r\n                    if (layoutMode) {\r\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\r\n                    }\r\n                },\r\n\r\n                defaultOption: zrUtil.mergeAll(\r\n                    [\r\n                        {},\r\n                        axisDefault[axisType + 'Axis'],\r\n                        extraDefaultOption\r\n                    ],\r\n                    true\r\n                )\r\n            });\r\n        });\r\n\r\n        ComponentModel.registerSubTypeDefaulter(\r\n            axisName + 'Axis',\r\n            zrUtil.curry(axisTypeDefaulter, axisName)\r\n        );\r\n    };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/coord/axisModelCreator.js\n ** module id = 636\n ** module chunks = 15 29 36 37 42 61\n **/","\r\n\r\n    var zrUtil = require('zrender/lib/core/util');\r\n\r\n    var defaultOption = {\r\n        show: true,\r\n        zlevel: 0,                  // 一级层叠\r\n        z: 0,                       // 二级层叠\r\n        // 反向坐标轴\r\n        inverse: false,\r\n\r\n        // 坐标轴名字，默认为空\r\n        name: '',\r\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\r\n        nameLocation: 'end',\r\n        // 坐标轴名字旋转，degree。\r\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\r\n        nameTruncate: {\r\n            maxWidth: null,\r\n            ellipsis: '...',\r\n            placeholder: '.'\r\n        },\r\n        // 坐标轴文字样式，默认取全局样式\r\n        nameTextStyle: {},\r\n        // 文字与轴线距离\r\n        nameGap: 15,\r\n\r\n        silent: false, // Default false to support tooltip.\r\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\r\n\r\n        tooltip: {\r\n            show: false\r\n        },\r\n\r\n        // 坐标轴线\r\n        axisLine: {\r\n            // 默认显示，属性show控制显示与否\r\n            show: true,\r\n            onZero: true,\r\n            // 属性lineStyle控制线条样式\r\n            lineStyle: {\r\n                color: '#333',\r\n                width: 1,\r\n                type: 'solid'\r\n            }\r\n        },\r\n        // 坐标轴小标记\r\n        axisTick: {\r\n            // 属性show控制显示与否，默认显示\r\n            show: true,\r\n            // 控制小标记是否在grid里\r\n            inside: false,\r\n            // 属性length控制线长\r\n            length: 5,\r\n            // 属性lineStyle控制线条样式\r\n            lineStyle: {\r\n                width: 1\r\n            }\r\n        },\r\n        // 坐标轴文本标签，详见axis.axisLabel\r\n        axisLabel: {\r\n            show: true,\r\n            // 控制文本标签是否在grid里\r\n            inside: false,\r\n            rotate: 0,\r\n            margin: 8,\r\n            // formatter: null,\r\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\r\n            textStyle: {\r\n                fontSize: 12\r\n            }\r\n        },\r\n        // 分隔线\r\n        splitLine: {\r\n            // 默认显示，属性show控制显示与否\r\n            show: true,\r\n            // 属性lineStyle（详见lineStyle）控制线条样式\r\n            lineStyle: {\r\n                color: ['#ccc'],\r\n                width: 1,\r\n                type: 'solid'\r\n            }\r\n        },\r\n        // 分隔区域\r\n        splitArea: {\r\n            // 默认不显示，属性show控制显示与否\r\n            show: false,\r\n            // 属性areaStyle（详见areaStyle）控制区域样式\r\n            areaStyle: {\r\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\r\n            }\r\n        }\r\n    };\r\n\r\n    var categoryAxis = zrUtil.merge({\r\n        // 类目起始和结束两端空白策略\r\n        boundaryGap: true,\r\n        // splitArea: {\r\n            // show: false\r\n        // },\r\n        splitLine: {\r\n            show: false\r\n        },\r\n        // 坐标轴小标记\r\n        axisTick: {\r\n            // If tick is align with label when boundaryGap is true\r\n            // Default with axisTick\r\n            alignWithLabel: false,\r\n            interval: 'auto'\r\n        },\r\n        // 坐标轴文本标签，详见axis.axisLabel\r\n        axisLabel: {\r\n            interval: 'auto'\r\n        }\r\n    }, defaultOption);\r\n\r\n    var valueAxis = zrUtil.merge({\r\n        // 数值起始和结束两端空白策略\r\n        boundaryGap: [0, 0],\r\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\r\n        // min: null,\r\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\r\n        // max: null,\r\n        // Readonly prop, specifies start value of the range when using data zoom.\r\n        // rangeStart: null\r\n        // Readonly prop, specifies end value of the range when using data zoom.\r\n        // rangeEnd: null\r\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\r\n        // scale: false,\r\n        // 分割段数，默认为5\r\n        splitNumber: 5\r\n        // Minimum interval\r\n        // minInterval: null\r\n    }, defaultOption);\r\n\r\n    // FIXME\r\n    var timeAxis = zrUtil.defaults({\r\n        scale: true,\r\n        min: 'dataMin',\r\n        max: 'dataMax'\r\n    }, valueAxis);\r\n    var logAxis = zrUtil.defaults({}, valueAxis);\r\n    logAxis.scale = true;\r\n\r\n    module.exports = {\r\n        categoryAxis: categoryAxis,\r\n        valueAxis: valueAxis,\r\n        timeAxis: timeAxis,\r\n        logAxis: logAxis\r\n    };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/coord/axisDefault.js\n ** module id = 637\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","\r\n\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var axisHelper = require('./axisHelper');\r\n\r\n    function getName(obj) {\r\n        if (zrUtil.isObject(obj) && obj.value != null) {\r\n            return obj.value;\r\n        }\r\n        else {\r\n            return obj;\r\n        }\r\n    }\r\n    /**\r\n     * Get categories\r\n     */\r\n    function getCategories() {\r\n        return this.get('type') === 'category'\r\n            && zrUtil.map(this.get('data'), getName);\r\n    }\r\n\r\n    /**\r\n     * Format labels\r\n     * @return {Array.<string>}\r\n     */\r\n    function getFormattedLabels() {\r\n        return axisHelper.getFormattedLabels(\r\n            this.axis,\r\n            this.get('axisLabel.formatter')\r\n        );\r\n    }\r\n\r\n    module.exports = {\r\n\r\n        getFormattedLabels: getFormattedLabels,\r\n\r\n        getCategories: getCategories\r\n    };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/coord/axisModelCommonMixin.js\n ** module id = 638\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","'use strict';\r\n\r\n\r\n    var SeriesModel = require('../../model/Series');\r\n    var createListFromArray = require('../helper/createListFromArray');\r\n\r\n    module.exports = SeriesModel.extend({\r\n\r\n        type: 'series.bar',\r\n\r\n        dependencies: ['grid', 'polar'],\r\n\r\n        getInitialData: function (option, ecModel) {\r\n            if (__DEV__) {\r\n                var coordSys = option.coordinateSystem;\r\n                if (coordSys !== 'cartesian2d') {\r\n                    throw new Error('Bar only support cartesian2d coordinateSystem');\r\n                }\r\n            }\r\n            return createListFromArray(option.data, this, ecModel);\r\n        },\r\n\r\n        getMarkerPosition: function (value) {\r\n            var coordSys = this.coordinateSystem;\r\n            if (coordSys) {\r\n                // PENDING if clamp ?\r\n                var pt = coordSys.dataToPoint(value, true);\r\n                var data = this.getData();\r\n                var offset = data.getLayout('offset');\r\n                var size = data.getLayout('size');\r\n                var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\r\n                pt[offsetIndex] += offset + size / 2;\r\n                return pt;\r\n            }\r\n            return [NaN, NaN];\r\n        },\r\n\r\n        brushSelector: 'rect',\r\n\r\n        defaultOption: {\r\n            zlevel: 0,                  // 一级层叠\r\n            z: 2,                       // 二级层叠\r\n            coordinateSystem: 'cartesian2d',\r\n            legendHoverLink: true,\r\n            // stack: null\r\n\r\n            // Cartesian coordinate system\r\n            xAxisIndex: 0,\r\n            yAxisIndex: 0,\r\n\r\n            // 最小高度改为0\r\n            barMinHeight: 0,\r\n\r\n            // barMaxWidth: null,\r\n            // 默认自适应\r\n            // barWidth: null,\r\n            // 柱间距离，默认为柱形宽度的30%，可设固定值\r\n            // barGap: '30%',\r\n            // 类目间柱形距离，默认为类目间距的20%，可设固定值\r\n            // barCategoryGap: '20%',\r\n            // label: {\r\n            //     normal: {\r\n            //         show: false\r\n            //     }\r\n            // },\r\n            itemStyle: {\r\n                normal: {\r\n                    // color: '各异'\r\n                },\r\n                emphasis: {}\r\n            }\r\n        }\r\n    });\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/chart/bar/BarSeries.js\n ** module id = 639\n ** module chunks = 15 29 36 37 42 61\n **/","'use strict';\r\n\r\n\r\n    var List = require('../../data/List');\r\n    var completeDimensions = require('../../data/helper/completeDimensions');\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var modelUtil = require('../../util/model');\r\n    var CoordinateSystem = require('../../CoordinateSystem');\r\n    var getDataItemValue = modelUtil.getDataItemValue;\r\n    var converDataValue = modelUtil.converDataValue;\r\n\r\n    function firstDataNotNull(data) {\r\n        var i = 0;\r\n        while (i < data.length && data[i] == null) {\r\n            i++;\r\n        }\r\n        return data[i];\r\n    }\r\n    function ifNeedCompleteOrdinalData(data) {\r\n        var sampleItem = firstDataNotNull(data);\r\n        return sampleItem != null\r\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\r\n    }\r\n\r\n    /**\r\n     * Helper function to create a list from option data\r\n     */\r\n    function createListFromArray(data, seriesModel, ecModel) {\r\n        // If data is undefined\r\n        data = data || [];\r\n\r\n        if (__DEV__) {\r\n            if (!zrUtil.isArray(data)) {\r\n                throw new Error('Invalid data.');\r\n            }\r\n        }\r\n\r\n        var coordSysName = seriesModel.get('coordinateSystem');\r\n        var creator = creators[coordSysName];\r\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\r\n        // FIXME\r\n        var axesInfo = creator && creator(data, seriesModel, ecModel);\r\n        var dimensions = axesInfo && axesInfo.dimensions;\r\n        if (!dimensions) {\r\n            // Get dimensions from registered coordinate system\r\n            dimensions = (registeredCoordSys && registeredCoordSys.dimensions) || ['x', 'y'];\r\n            dimensions = completeDimensions(dimensions, data, dimensions.concat(['value']));\r\n        }\r\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\r\n\r\n        var list = new List(dimensions, seriesModel);\r\n\r\n        var nameList = createNameList(axesInfo, data);\r\n\r\n        var categories = {};\r\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\r\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\r\n                // If any dataItem is like { value: 10 }\r\n                if (modelUtil.isDataItemOption(itemOpt)) {\r\n                    list.hasItemOption = true;\r\n                }\r\n\r\n                // Use dataIndex as ordinal value in categoryAxis\r\n                return dimIndex === categoryIndex\r\n                    ? dataIndex\r\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\r\n            }\r\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\r\n                var value = getDataItemValue(itemOpt);\r\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\r\n                // If any dataItem is like { value: 10 }\r\n                if (modelUtil.isDataItemOption(itemOpt)) {\r\n                    list.hasItemOption = true;\r\n                }\r\n\r\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\r\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\r\n                    // If given value is a category string\r\n                    if (typeof val === 'string') {\r\n                        // Lazy get categories\r\n                        categories[dimName] = categories[dimName]\r\n                            || categoryAxesModels[dimName].getCategories();\r\n                        val = zrUtil.indexOf(categories[dimName], val);\r\n                        if (val < 0 && !isNaN(val)) {\r\n                            // In case some one write '1', '2' istead of 1, 2\r\n                            val = +val;\r\n                        }\r\n                    }\r\n                }\r\n                return val;\r\n            };\r\n\r\n        list.hasItemOption = false;\r\n        list.initData(data, nameList, dimValueGetter);\r\n\r\n        return list;\r\n    }\r\n\r\n    function isStackable(axisType) {\r\n        return axisType !== 'category' && axisType !== 'time';\r\n    }\r\n\r\n    function getDimTypeByAxis(axisType) {\r\n        return axisType === 'category'\r\n            ? 'ordinal'\r\n            : axisType === 'time'\r\n            ? 'time'\r\n            : 'float';\r\n    }\r\n\r\n    /**\r\n     * Creaters for each coord system.\r\n     */\r\n    var creators = {\r\n\r\n        cartesian2d: function (data, seriesModel, ecModel) {\r\n            var xAxisModel = ecModel.getComponent('xAxis', seriesModel.get('xAxisIndex'));\r\n            var yAxisModel = ecModel.getComponent('yAxis', seriesModel.get('yAxisIndex'));\r\n\r\n            if (__DEV__) {\r\n                if (!xAxisModel) {\r\n                    throw new Error('xAxis \"' + seriesModel.get('xAxisIndex') + '\" not found');\r\n                }\r\n                if (!yAxisModel) {\r\n                    throw new Error('yAxis \"' + seriesModel.get('yAxisIndex') + '\" not found');\r\n                }\r\n            }\r\n\r\n            var xAxisType = xAxisModel.get('type');\r\n            var yAxisType = yAxisModel.get('type');\r\n\r\n            var dimensions = [\r\n                {\r\n                    name: 'x',\r\n                    type: getDimTypeByAxis(xAxisType),\r\n                    stackable: isStackable(xAxisType)\r\n                },\r\n                {\r\n                    name: 'y',\r\n                    // If two category axes\r\n                    type: getDimTypeByAxis(yAxisType),\r\n                    stackable: isStackable(yAxisType)\r\n                }\r\n            ];\r\n\r\n            var isXAxisCateogry = xAxisType === 'category';\r\n            var isYAxisCategory = yAxisType === 'category';\r\n\r\n            completeDimensions(dimensions, data, ['x', 'y', 'z']);\r\n\r\n            var categoryAxesModels = {};\r\n            if (isXAxisCateogry) {\r\n                categoryAxesModels.x = xAxisModel;\r\n            }\r\n            if (isYAxisCategory) {\r\n                categoryAxesModels.y = yAxisModel;\r\n            }\r\n            return {\r\n                dimensions: dimensions,\r\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\r\n                categoryAxesModels: categoryAxesModels\r\n            };\r\n        },\r\n\r\n        polar: function (data, seriesModel, ecModel) {\r\n            var polarIndex = seriesModel.get('polarIndex') || 0;\r\n\r\n            var axisFinder = function (axisModel) {\r\n                return axisModel.get('polarIndex') === polarIndex;\r\n            };\r\n\r\n            var angleAxisModel = ecModel.findComponents({\r\n                mainType: 'angleAxis', filter: axisFinder\r\n            })[0];\r\n            var radiusAxisModel = ecModel.findComponents({\r\n                mainType: 'radiusAxis', filter: axisFinder\r\n            })[0];\r\n\r\n            if (__DEV__) {\r\n                if (!angleAxisModel) {\r\n                    throw new Error('angleAxis option not found');\r\n                }\r\n                if (!radiusAxisModel) {\r\n                    throw new Error('radiusAxis option not found');\r\n                }\r\n            }\r\n\r\n            var radiusAxisType = radiusAxisModel.get('type');\r\n            var angleAxisType = angleAxisModel.get('type');\r\n\r\n            var dimensions = [\r\n                {\r\n                    name: 'radius',\r\n                    type: getDimTypeByAxis(radiusAxisType),\r\n                    stackable: isStackable(radiusAxisType)\r\n                },\r\n                {\r\n                    name: 'angle',\r\n                    type: getDimTypeByAxis(angleAxisType),\r\n                    stackable: isStackable(angleAxisType)\r\n                }\r\n            ];\r\n            var isAngleAxisCateogry = angleAxisType === 'category';\r\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\r\n\r\n            completeDimensions(dimensions, data, ['radius', 'angle', 'value']);\r\n\r\n            var categoryAxesModels = {};\r\n            if (isRadiusAxisCateogry) {\r\n                categoryAxesModels.radius = radiusAxisModel;\r\n            }\r\n            if (isAngleAxisCateogry) {\r\n                categoryAxesModels.angle = angleAxisModel;\r\n            }\r\n            return {\r\n                dimensions: dimensions,\r\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\r\n                categoryAxesModels: categoryAxesModels\r\n            };\r\n        },\r\n\r\n        geo: function (data, seriesModel, ecModel) {\r\n            // TODO Region\r\n            // 多个散点图系列在同一个地区的时候\r\n            return {\r\n                dimensions: completeDimensions([\r\n                    {name: 'lng'},\r\n                    {name: 'lat'}\r\n                ], data, ['lng', 'lat', 'value'])\r\n            };\r\n        }\r\n    };\r\n\r\n    function createNameList(result, data) {\r\n        var nameList = [];\r\n\r\n        var categoryDim = result && result.dimensions[result.categoryIndex];\r\n        var categoryAxisModel;\r\n        if (categoryDim) {\r\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\r\n        }\r\n\r\n        if (categoryAxisModel) {\r\n            // FIXME Two category axis\r\n            var categories = categoryAxisModel.getCategories();\r\n            if (categories) {\r\n                var dataLen = data.length;\r\n                // Ordered data is given explicitly like\r\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\r\n                // or given scatter data,\r\n                // pick the category\r\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\r\n                    nameList = [];\r\n                    for (var i = 0; i < dataLen; i++) {\r\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\r\n                    }\r\n                }\r\n                else {\r\n                    nameList = categories.slice(0);\r\n                }\r\n            }\r\n        }\r\n\r\n        return nameList;\r\n    }\r\n\r\n    module.exports = createListFromArray;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/chart/helper/createListFromArray.js\n ** module id = 640\n ** module chunks = 15 29 36 37 42 61\n **/","/**\r\n * Complete dimensions by data (guess dimension).\r\n */\r\n\r\n\r\n    var zrUtil = require('zrender/lib/core/util');\r\n\r\n    /**\r\n     * Complete the dimensions array guessed from the data structure.\r\n     * @param  {Array.<string>} dimensions      Necessary dimensions, like ['x', 'y']\r\n     * @param  {Array} data                     Data list. [[1, 2, 3], [2, 3, 4]]\r\n     * @param  {Array.<string>} defaultNames    Default names to fill not necessary dimensions, like ['value']\r\n     * @param  {string} extraPrefix             Prefix of name when filling the left dimensions.\r\n     * @return {Array.<string>}\r\n     */\r\n    function completeDimensions(dimensions, data, defaultNames, extraPrefix) {\r\n        if (!data) {\r\n            return dimensions;\r\n        }\r\n\r\n        var value0 = retrieveValue(data[0]);\r\n        var dimSize = zrUtil.isArray(value0) && value0.length || 1;\r\n\r\n        defaultNames = defaultNames || [];\r\n        extraPrefix = extraPrefix || 'extra';\r\n        for (var i = 0; i < dimSize; i++) {\r\n            if (!dimensions[i]) {\r\n                var name = defaultNames[i] || (extraPrefix + (i - defaultNames.length));\r\n                dimensions[i] = guessOrdinal(data, i)\r\n                    ? {type: 'ordinal', name: name}\r\n                    : name;\r\n            }\r\n        }\r\n\r\n        return dimensions;\r\n    }\r\n\r\n    // The rule should not be complex, otherwise user might not\r\n    // be able to known where the data is wrong.\r\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\r\n        for (var i = 0, len = data.length; i < len; i++) {\r\n            var value = retrieveValue(data[i]);\r\n\r\n            if (!zrUtil.isArray(value)) {\r\n                return false;\r\n            }\r\n\r\n            var value = value[dimIndex];\r\n            if (value != null && isFinite(value)) {\r\n                return false;\r\n            }\r\n            else if (zrUtil.isString(value) && value !== '-') {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    function retrieveValue(o) {\r\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\r\n    }\r\n\r\n    module.exports = completeDimensions;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/data/helper/completeDimensions.js\n ** module id = 641\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","'use strict';\r\n\r\n\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var graphic = require('../../util/graphic');\r\n\r\n    zrUtil.extend(require('../../model/Model').prototype, require('./barItemStyle'));\r\n\r\n    function fixLayoutWithLineWidth(layout, lineWidth) {\r\n        var signX = layout.width > 0 ? 1 : -1;\r\n        var signY = layout.height > 0 ? 1 : -1;\r\n        // In case width or height are too small.\r\n        lineWidth = Math.min(lineWidth, Math.abs(layout.width), Math.abs(layout.height));\r\n        layout.x += signX * lineWidth / 2;\r\n        layout.y += signY * lineWidth / 2;\r\n        layout.width -= signX * lineWidth;\r\n        layout.height -= signY * lineWidth;\r\n    }\r\n\r\n    module.exports = require('../../echarts').extendChartView({\r\n\r\n        type: 'bar',\r\n\r\n        render: function (seriesModel, ecModel, api) {\r\n            var coordinateSystemType = seriesModel.get('coordinateSystem');\r\n\r\n            if (coordinateSystemType === 'cartesian2d') {\r\n                this._renderOnCartesian(seriesModel, ecModel, api);\r\n            }\r\n\r\n            return this.group;\r\n        },\r\n\r\n        _renderOnCartesian: function (seriesModel, ecModel, api) {\r\n            var group = this.group;\r\n            var data = seriesModel.getData();\r\n            var oldData = this._data;\r\n\r\n            var cartesian = seriesModel.coordinateSystem;\r\n            var baseAxis = cartesian.getBaseAxis();\r\n            var isHorizontal = baseAxis.isHorizontal();\r\n\r\n            var enableAnimation = seriesModel.get('animation');\r\n\r\n            var barBorderWidthQuery = ['itemStyle', 'normal', 'barBorderWidth'];\r\n\r\n            function createRect(dataIndex, isUpdate) {\r\n                var layout = data.getItemLayout(dataIndex);\r\n                var lineWidth = data.getItemModel(dataIndex).get(barBorderWidthQuery) || 0;\r\n                fixLayoutWithLineWidth(layout, lineWidth);\r\n\r\n                var rect = new graphic.Rect({\r\n                    shape: zrUtil.extend({}, layout)\r\n                });\r\n                // Animation\r\n                if (enableAnimation) {\r\n                    var rectShape = rect.shape;\r\n                    var animateProperty = isHorizontal ? 'height' : 'width';\r\n                    var animateTarget = {};\r\n                    rectShape[animateProperty] = 0;\r\n                    animateTarget[animateProperty] = layout[animateProperty];\r\n                    graphic[isUpdate? 'updateProps' : 'initProps'](rect, {\r\n                        shape: animateTarget\r\n                    }, seriesModel, dataIndex);\r\n                }\r\n                return rect;\r\n            }\r\n            data.diff(oldData)\r\n                .add(function (dataIndex) {\r\n                    // 空数据\r\n                    if (!data.hasValue(dataIndex)) {\r\n                        return;\r\n                    }\r\n\r\n                    var rect = createRect(dataIndex);\r\n\r\n                    data.setItemGraphicEl(dataIndex, rect);\r\n\r\n                    group.add(rect);\r\n\r\n                })\r\n                .update(function (newIndex, oldIndex) {\r\n                    var rect = oldData.getItemGraphicEl(oldIndex);\r\n                    // 空数据\r\n                    if (!data.hasValue(newIndex)) {\r\n                        group.remove(rect);\r\n                        return;\r\n                    }\r\n                    if (!rect) {\r\n                        rect = createRect(newIndex, true);\r\n                    }\r\n\r\n                    var layout = data.getItemLayout(newIndex);\r\n                    var lineWidth = data.getItemModel(newIndex).get(barBorderWidthQuery) || 0;\r\n                    fixLayoutWithLineWidth(layout, lineWidth);\r\n\r\n                    graphic.updateProps(rect, {\r\n                        shape: layout\r\n                    }, seriesModel, newIndex);\r\n\r\n                    data.setItemGraphicEl(newIndex, rect);\r\n\r\n                    // Add back\r\n                    group.add(rect);\r\n                })\r\n                .remove(function (idx) {\r\n                    var rect = oldData.getItemGraphicEl(idx);\r\n                    if (rect) {\r\n                        // Not show text when animating\r\n                        rect.style.text = '';\r\n                        graphic.updateProps(rect, {\r\n                            shape: {\r\n                                width: 0\r\n                            }\r\n                        }, seriesModel, idx, function () {\r\n                            group.remove(rect);\r\n                        });\r\n                    }\r\n                })\r\n                .execute();\r\n\r\n            this._updateStyle(seriesModel, data, isHorizontal);\r\n\r\n            this._data = data;\r\n        },\r\n\r\n        _updateStyle: function (seriesModel, data, isHorizontal) {\r\n            function setLabel(style, model, color, labelText, labelPositionOutside) {\r\n                graphic.setText(style, model, color);\r\n                style.text = labelText;\r\n                if (style.textPosition === 'outside') {\r\n                    style.textPosition = labelPositionOutside;\r\n                }\r\n            }\r\n\r\n            data.eachItemGraphicEl(function (rect, idx) {\r\n                var itemModel = data.getItemModel(idx);\r\n                var color = data.getItemVisual(idx, 'color');\r\n                var opacity = data.getItemVisual(idx, 'opacity');\r\n                var layout = data.getItemLayout(idx);\r\n                var itemStyleModel = itemModel.getModel('itemStyle.normal');\r\n\r\n                var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\r\n\r\n                rect.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\r\n\r\n                rect.useStyle(zrUtil.defaults(\r\n                    {\r\n                        fill: color,\r\n                        opacity: opacity\r\n                    },\r\n                    itemStyleModel.getBarItemStyle()\r\n                ));\r\n\r\n                var labelPositionOutside = isHorizontal\r\n                    ? (layout.height > 0 ? 'bottom' : 'top')\r\n                    : (layout.width > 0 ? 'left' : 'right');\r\n\r\n                var labelModel = itemModel.getModel('label.normal');\r\n                var hoverLabelModel = itemModel.getModel('label.emphasis');\r\n                var rectStyle = rect.style;\r\n                if (labelModel.get('show')) {\r\n                    setLabel(\r\n                        rectStyle, labelModel, color,\r\n                        zrUtil.retrieve(\r\n                            seriesModel.getFormattedLabel(idx, 'normal'),\r\n                            seriesModel.getRawValue(idx)\r\n                        ),\r\n                        labelPositionOutside\r\n                    );\r\n                }\r\n                else {\r\n                    rectStyle.text = '';\r\n                }\r\n                if (hoverLabelModel.get('show')) {\r\n                    setLabel(\r\n                        hoverStyle, hoverLabelModel, color,\r\n                        zrUtil.retrieve(\r\n                            seriesModel.getFormattedLabel(idx, 'emphasis'),\r\n                            seriesModel.getRawValue(idx)\r\n                        ),\r\n                        labelPositionOutside\r\n                    );\r\n                }\r\n                else {\r\n                    hoverStyle.text = '';\r\n                }\r\n                graphic.setHoverStyle(rect, hoverStyle);\r\n            });\r\n        },\r\n\r\n        remove: function (ecModel, api) {\r\n            var group = this.group;\r\n            if (ecModel.get('animation')) {\r\n                if (this._data) {\r\n                    this._data.eachItemGraphicEl(function (el) {\r\n                        // Not show text when animating\r\n                        el.style.text = '';\r\n                        graphic.updateProps(el, {\r\n                            shape: {\r\n                                width: 0\r\n                            }\r\n                        }, ecModel, el.dataIndex, function () {\r\n                            group.remove(el);\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                group.removeAll();\r\n            }\r\n        }\r\n    });\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/chart/bar/BarView.js\n ** module id = 642\n ** module chunks = 15 29 36 37 42 61\n **/","\r\n\r\n\r\n    var getBarItemStyle = require('../../model/mixin/makeStyleMapper')(\r\n        [\r\n            ['fill', 'color'],\r\n            ['stroke', 'borderColor'],\r\n            ['lineWidth', 'borderWidth'],\r\n            // Compatitable with 2\r\n            ['stroke', 'barBorderColor'],\r\n            ['lineWidth', 'barBorderWidth'],\r\n            ['opacity'],\r\n            ['shadowBlur'],\r\n            ['shadowOffsetX'],\r\n            ['shadowOffsetY'],\r\n            ['shadowColor']\r\n        ]\r\n    );\r\n    module.exports = {\r\n        getBarItemStyle: function (excludes) {\r\n            var style = getBarItemStyle.call(this, excludes);\r\n            if (this.getBorderLineDash) {\r\n                var lineDash = this.getBorderLineDash();\r\n                lineDash && (style.lineDash = lineDash);\r\n            }\r\n            return style;\r\n        }\r\n    };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/chart/bar/barItemStyle.js\n ** module id = 643\n ** module chunks = 15 29 36 37 42 61\n **/","'use strict';\r\n\r\n\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var numberUtil = require('../util/number');\r\n    var parsePercent = numberUtil.parsePercent;\r\n\r\n    function getSeriesStackId(seriesModel) {\r\n        return seriesModel.get('stack') || '__ec_stack_' + seriesModel.seriesIndex;\r\n    }\r\n\r\n    function getAxisKey(axis) {\r\n        return axis.dim + axis.index;\r\n    }\r\n\r\n    function calBarWidthAndOffset(barSeries, api) {\r\n        // Columns info on each category axis. Key is cartesian name\r\n        var columnsMap = {};\r\n\r\n        zrUtil.each(barSeries, function (seriesModel, idx) {\r\n            var data = seriesModel.getData();\r\n            var cartesian = seriesModel.coordinateSystem;\r\n\r\n            var baseAxis = cartesian.getBaseAxis();\r\n            var axisExtent = baseAxis.getExtent();\r\n            var bandWidth = baseAxis.type === 'category'\r\n                ? baseAxis.getBandWidth()\r\n                : (Math.abs(axisExtent[1] - axisExtent[0]) / data.count());\r\n\r\n            var columnsOnAxis = columnsMap[getAxisKey(baseAxis)] || {\r\n                bandWidth: bandWidth,\r\n                remainedWidth: bandWidth,\r\n                autoWidthCount: 0,\r\n                categoryGap: '20%',\r\n                gap: '30%',\r\n                stacks: {}\r\n            };\r\n            var stacks = columnsOnAxis.stacks;\r\n            columnsMap[getAxisKey(baseAxis)] = columnsOnAxis;\r\n\r\n            var stackId = getSeriesStackId(seriesModel);\r\n\r\n            if (!stacks[stackId]) {\r\n                columnsOnAxis.autoWidthCount++;\r\n            }\r\n            stacks[stackId] = stacks[stackId] || {\r\n                width: 0,\r\n                maxWidth: 0\r\n            };\r\n\r\n            var barWidth = parsePercent(\r\n                seriesModel.get('barWidth'), bandWidth\r\n            );\r\n            var barMaxWidth = parsePercent(\r\n                seriesModel.get('barMaxWidth'), bandWidth\r\n            );\r\n            var barGap = seriesModel.get('barGap');\r\n            var barCategoryGap = seriesModel.get('barCategoryGap');\r\n            // TODO\r\n            if (barWidth && !stacks[stackId].width) {\r\n                barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\r\n                stacks[stackId].width = barWidth;\r\n                columnsOnAxis.remainedWidth -= barWidth;\r\n            }\r\n\r\n            barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\r\n            (barGap != null) && (columnsOnAxis.gap = barGap);\r\n            (barCategoryGap != null) && (columnsOnAxis.categoryGap = barCategoryGap);\r\n        });\r\n\r\n        var result = {};\r\n\r\n        zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\r\n\r\n            result[coordSysName] = {};\r\n\r\n            var stacks = columnsOnAxis.stacks;\r\n            var bandWidth = columnsOnAxis.bandWidth;\r\n            var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\r\n            var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\r\n\r\n            var remainedWidth = columnsOnAxis.remainedWidth;\r\n            var autoWidthCount = columnsOnAxis.autoWidthCount;\r\n            var autoWidth = (remainedWidth - categoryGap)\r\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\r\n            autoWidth = Math.max(autoWidth, 0);\r\n\r\n            // Find if any auto calculated bar exceeded maxBarWidth\r\n            zrUtil.each(stacks, function (column, stack) {\r\n                var maxWidth = column.maxWidth;\r\n                if (!column.width && maxWidth && maxWidth < autoWidth) {\r\n                    maxWidth = Math.min(maxWidth, remainedWidth);\r\n                    remainedWidth -= maxWidth;\r\n                    column.width = maxWidth;\r\n                    autoWidthCount--;\r\n                }\r\n            });\r\n\r\n            // Recalculate width again\r\n            autoWidth = (remainedWidth - categoryGap)\r\n                / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\r\n            autoWidth = Math.max(autoWidth, 0);\r\n\r\n            var widthSum = 0;\r\n            var lastColumn;\r\n            zrUtil.each(stacks, function (column, idx) {\r\n                if (!column.width) {\r\n                    column.width = autoWidth;\r\n                }\r\n                lastColumn = column;\r\n                widthSum += column.width * (1 + barGapPercent);\r\n            });\r\n            if (lastColumn) {\r\n                widthSum -= lastColumn.width * barGapPercent;\r\n            }\r\n\r\n            var offset = -widthSum / 2;\r\n            zrUtil.each(stacks, function (column, stackId) {\r\n                result[coordSysName][stackId] = result[coordSysName][stackId] || {\r\n                    offset: offset,\r\n                    width: column.width\r\n                };\r\n\r\n                offset += column.width * (1 + barGapPercent);\r\n            });\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @param {string} seriesType\r\n     * @param {module:echarts/model/Global} ecModel\r\n     * @param {module:echarts/ExtensionAPI} api\r\n     */\r\n    function barLayoutGrid(seriesType, ecModel, api) {\r\n\r\n        var barWidthAndOffset = calBarWidthAndOffset(\r\n            zrUtil.filter(\r\n                ecModel.getSeriesByType(seriesType),\r\n                function (seriesModel) {\r\n                    return !ecModel.isSeriesFiltered(seriesModel)\r\n                        && seriesModel.coordinateSystem\r\n                        && seriesModel.coordinateSystem.type === 'cartesian2d';\r\n                }\r\n            )\r\n        );\r\n\r\n        var lastStackCoords = {};\r\n\r\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\r\n\r\n            var data = seriesModel.getData();\r\n            var cartesian = seriesModel.coordinateSystem;\r\n            var baseAxis = cartesian.getBaseAxis();\r\n\r\n            var stackId = getSeriesStackId(seriesModel);\r\n            var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\r\n            var columnOffset = columnLayoutInfo.offset;\r\n            var columnWidth = columnLayoutInfo.width;\r\n            var valueAxis = cartesian.getOtherAxis(baseAxis);\r\n\r\n            var barMinHeight = seriesModel.get('barMinHeight') || 0;\r\n\r\n            var valueAxisStart = baseAxis.onZero\r\n                ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0))\r\n                : valueAxis.getGlobalExtent()[0];\r\n\r\n            var coords = cartesian.dataToPoints(data, true);\r\n            lastStackCoords[stackId] = lastStackCoords[stackId] || [];\r\n\r\n            data.setLayout({\r\n                offset: columnOffset,\r\n                size: columnWidth\r\n            });\r\n            data.each(valueAxis.dim, function (value, idx) {\r\n                // 空数据\r\n                if (isNaN(value)) {\r\n                    return;\r\n                }\r\n                if (!lastStackCoords[stackId][idx]) {\r\n                    lastStackCoords[stackId][idx] = {\r\n                        // Positive stack\r\n                        p: valueAxisStart,\r\n                        // Negative stack\r\n                        n: valueAxisStart\r\n                    };\r\n                }\r\n                var sign = value >= 0 ? 'p' : 'n';\r\n                var coord = coords[idx];\r\n                var lastCoord = lastStackCoords[stackId][idx][sign];\r\n                var x, y, width, height;\r\n                if (valueAxis.isHorizontal()) {\r\n                    x = lastCoord;\r\n                    y = coord[1] + columnOffset;\r\n                    width = coord[0] - lastCoord;\r\n                    height = columnWidth;\r\n\r\n                    if (Math.abs(width) < barMinHeight) {\r\n                        width = (width < 0 ? -1 : 1) * barMinHeight;\r\n                    }\r\n                    lastStackCoords[stackId][idx][sign] += width;\r\n                }\r\n                else {\r\n                    x = coord[0] + columnOffset;\r\n                    y = lastCoord;\r\n                    width = columnWidth;\r\n                    height = coord[1] - lastCoord;\r\n                    if (Math.abs(height) < barMinHeight) {\r\n                        // Include zero to has a positive bar\r\n                        height = (height <= 0 ? -1 : 1) * barMinHeight;\r\n                    }\r\n                    lastStackCoords[stackId][idx][sign] += height;\r\n                }\r\n\r\n                data.setItemLayout(idx, {\r\n                    x: x,\r\n                    y: y,\r\n                    width: width,\r\n                    height: height\r\n                });\r\n            }, true);\r\n\r\n        }, this);\r\n    }\r\n\r\n    module.exports = barLayoutGrid;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/layout/barGrid.js\n ** module id = 644\n ** module chunks = 15 29 36 37 42 61\n **/","'use strict';\r\n\r\n\r\n    var graphic = require('../util/graphic');\r\n    var zrUtil = require('zrender/lib/core/util');\r\n\r\n    require('../coord/cartesian/Grid');\r\n\r\n    require('./axis');\r\n\r\n    // Grid view\r\n    require('../echarts').extendComponentView({\r\n\r\n        type: 'grid',\r\n\r\n        render: function (gridModel, ecModel) {\r\n            this.group.removeAll();\r\n            if (gridModel.get('show')) {\r\n                this.group.add(new graphic.Rect({\r\n                    shape:gridModel.coordinateSystem.getRect(),\r\n                    style: zrUtil.defaults({\r\n                        fill: gridModel.get('backgroundColor')\r\n                    }, gridModel.getItemStyle()),\r\n                    silent: true\r\n                }));\r\n            }\r\n        }\r\n    });\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/component/grid.js\n ** module id = 645\n ** module chunks = 15 29 36 37 42 61\n **/","'use strict';\r\n// TODO boundaryGap\r\n\r\n\r\n    require('../coord/cartesian/AxisModel');\r\n\r\n    require('./axis/AxisView');\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/component/axis.js\n ** module id = 646\n ** module chunks = 15 29 36 37 42 61\n **/","\r\n\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var graphic = require('../../util/graphic');\r\n    var AxisBuilder = require('./AxisBuilder');\r\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\r\n    var getInterval = AxisBuilder.getInterval;\r\n\r\n    var axisBuilderAttrs = [\r\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\r\n    ];\r\n    var selfBuilderAttrs = [\r\n        'splitArea', 'splitLine'\r\n    ];\r\n\r\n    // function getAlignWithLabel(model, axisModel) {\r\n    //     var alignWithLabel = model.get('alignWithLabel');\r\n    //     if (alignWithLabel === 'auto') {\r\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\r\n    //     }\r\n    //     return alignWithLabel;\r\n    // }\r\n\r\n    var AxisView = require('../../echarts').extendComponentView({\r\n\r\n        type: 'axis',\r\n\r\n        render: function (axisModel, ecModel) {\r\n\r\n            this.group.removeAll();\r\n\r\n            var oldAxisGroup = this._axisGroup;\r\n            this._axisGroup = new graphic.Group();\r\n\r\n            this.group.add(this._axisGroup);\r\n\r\n            if (!axisModel.get('show')) {\r\n                return;\r\n            }\r\n\r\n            var gridModel = ecModel.getComponent('grid', axisModel.get('gridIndex'));\r\n\r\n            var layout = layoutAxis(gridModel, axisModel);\r\n\r\n            var axisBuilder = new AxisBuilder(axisModel, layout);\r\n\r\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\r\n\r\n            this._axisGroup.add(axisBuilder.getGroup());\r\n\r\n            zrUtil.each(selfBuilderAttrs, function (name) {\r\n                if (axisModel.get(name + '.show')) {\r\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\r\n                }\r\n            }, this);\r\n\r\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\r\n        },\r\n\r\n        /**\r\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\r\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\r\n         * @param {number|Function} labelInterval\r\n         * @private\r\n         */\r\n        _splitLine: function (axisModel, gridModel, labelInterval) {\r\n            var axis = axisModel.axis;\r\n\r\n            var splitLineModel = axisModel.getModel('splitLine');\r\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\r\n            var lineColors = lineStyleModel.get('color');\r\n\r\n            var lineInterval = getInterval(splitLineModel, labelInterval);\r\n\r\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\r\n\r\n            var gridRect = gridModel.coordinateSystem.getRect();\r\n            var isHorizontal = axis.isHorizontal();\r\n\r\n            var lineCount = 0;\r\n\r\n            var ticksCoords = axis.getTicksCoords(\r\n                // splitLineModel.get('alignWithLabel')\r\n            );\r\n            var ticks = axis.scale.getTicks();\r\n\r\n            var p1 = [];\r\n            var p2 = [];\r\n            // Simple optimization\r\n            // Batching the lines if color are the same\r\n            var lineStyle = lineStyleModel.getLineStyle();\r\n            for (var i = 0; i < ticksCoords.length; i++) {\r\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\r\n                    continue;\r\n                }\r\n\r\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\r\n\r\n                if (isHorizontal) {\r\n                    p1[0] = tickCoord;\r\n                    p1[1] = gridRect.y;\r\n                    p2[0] = tickCoord;\r\n                    p2[1] = gridRect.y + gridRect.height;\r\n                }\r\n                else {\r\n                    p1[0] = gridRect.x;\r\n                    p1[1] = tickCoord;\r\n                    p2[0] = gridRect.x + gridRect.width;\r\n                    p2[1] = tickCoord;\r\n                }\r\n\r\n                var colorIndex = (lineCount++) % lineColors.length;\r\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\r\n                    anid: 'line_' + ticks[i],\r\n\r\n                    shape: {\r\n                        x1: p1[0],\r\n                        y1: p1[1],\r\n                        x2: p2[0],\r\n                        y2: p2[1]\r\n                    },\r\n                    style: zrUtil.defaults({\r\n                        stroke: lineColors[colorIndex]\r\n                    }, lineStyle),\r\n                    silent: true\r\n                })));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\r\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\r\n         * @param {number|Function} labelInterval\r\n         * @private\r\n         */\r\n        _splitArea: function (axisModel, gridModel, labelInterval) {\r\n            var axis = axisModel.axis;\r\n\r\n            var splitAreaModel = axisModel.getModel('splitArea');\r\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\r\n            var areaColors = areaStyleModel.get('color');\r\n\r\n            var gridRect = gridModel.coordinateSystem.getRect();\r\n\r\n            var ticksCoords = axis.getTicksCoords(\r\n                // splitAreaModel.get('alignWithLabel')\r\n            );\r\n            var ticks = axis.scale.getTicks();\r\n\r\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\r\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\r\n\r\n            var count = 0;\r\n\r\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\r\n\r\n            var areaStyle = areaStyleModel.getAreaStyle();\r\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\r\n\r\n            for (var i = 1; i < ticksCoords.length; i++) {\r\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\r\n                    continue;\r\n                }\r\n\r\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\r\n\r\n                var x;\r\n                var y;\r\n                var width;\r\n                var height;\r\n                if (axis.isHorizontal()) {\r\n                    x = prevX;\r\n                    y = gridRect.y;\r\n                    width = tickCoord - x;\r\n                    height = gridRect.height;\r\n                }\r\n                else {\r\n                    x = gridRect.x;\r\n                    y = prevY;\r\n                    width = gridRect.width;\r\n                    height = tickCoord - y;\r\n                }\r\n\r\n                var colorIndex = (count++) % areaColors.length;\r\n                this._axisGroup.add(new graphic.Rect({\r\n                    anid: 'area_' + ticks[i],\r\n\r\n                    shape: {\r\n                        x: x,\r\n                        y: y,\r\n                        width: width,\r\n                        height: height\r\n                    },\r\n                    style: zrUtil.defaults({\r\n                        fill: areaColors[colorIndex]\r\n                    }, areaStyle),\r\n                    silent: true\r\n                }));\r\n\r\n                prevX = x + width;\r\n                prevY = y + height;\r\n            }\r\n        }\r\n    });\r\n\r\n    AxisView.extend({\r\n        type: 'xAxis'\r\n    });\r\n    AxisView.extend({\r\n        type: 'yAxis'\r\n    });\r\n\r\n    /**\r\n     * @inner\r\n     */\r\n    function layoutAxis(gridModel, axisModel) {\r\n        var grid = gridModel.coordinateSystem;\r\n        var axis = axisModel.axis;\r\n        var layout = {};\r\n\r\n        var rawAxisPosition = axis.position;\r\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\r\n        var axisDim = axis.dim;\r\n\r\n        // [left, right, top, bottom]\r\n        var rect = grid.getRect();\r\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\r\n\r\n        var axisOffset = axisModel.get('offset') || 0;\r\n\r\n        var posMap = {\r\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\r\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\r\n        };\r\n\r\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\r\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\r\n\r\n        function getZero(dim, val) {\r\n            var theAxis = grid.getAxis(dim);\r\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\r\n        }\r\n\r\n        // Axis position\r\n        layout.position = [\r\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\r\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\r\n        ];\r\n\r\n        // Axis rotation\r\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\r\n\r\n        // Tick and label direction, x y is axisDim\r\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\r\n\r\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\r\n        if (axis.onZero) {\r\n            layout.labelOffset = posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero;\r\n        }\r\n\r\n        if (axisModel.getModel('axisTick').get('inside')) {\r\n            layout.tickDirection = -layout.tickDirection;\r\n        }\r\n        if (axisModel.getModel('axisLabel').get('inside')) {\r\n            layout.labelDirection = -layout.labelDirection;\r\n        }\r\n\r\n        // Special label rotation\r\n        var labelRotation = axisModel.getModel('axisLabel').get('rotate');\r\n        layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\r\n\r\n        // label interval when auto mode.\r\n        layout.labelInterval = axis.getLabelInterval();\r\n\r\n        // Over splitLine and splitArea\r\n        layout.z2 = 1;\r\n\r\n        return layout;\r\n    }\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/component/axis/AxisView.js\n ** module id = 647\n ** module chunks = 15 29 36 37 42 61\n **/","\r\n\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var formatUtil = require('../../util/format');\r\n    var graphic = require('../../util/graphic');\r\n    var Model = require('../../model/Model');\r\n    var numberUtil = require('../../util/number');\r\n    var remRadian = numberUtil.remRadian;\r\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\r\n    var vec2 = require('zrender/lib/core/vector');\r\n    var v2ApplyTransform = vec2.applyTransform;\r\n    var retrieve = zrUtil.retrieve;\r\n\r\n    var PI = Math.PI;\r\n\r\n    function makeAxisEventDataBase(axisModel) {\r\n        var eventData = {\r\n            componentType: axisModel.mainType\r\n        };\r\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\r\n        return eventData;\r\n    }\r\n\r\n    /**\r\n     * A final axis is translated and rotated from a \"standard axis\".\r\n     * So opt.position and opt.rotation is required.\r\n     *\r\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\r\n     * for example: (0, 0) ------------> (0, 50)\r\n     *\r\n     * nameDirection or tickDirection or labelDirection is 1 means tick\r\n     * or label is below the standard axis, whereas is -1 means above\r\n     * the standard axis. labelOffset means offset between label and axis,\r\n     * which is useful when 'onZero', where axisLabel is in the grid and\r\n     * label in outside grid.\r\n     *\r\n     * Tips: like always,\r\n     * positive rotation represents anticlockwise, and negative rotation\r\n     * represents clockwise.\r\n     * The direction of position coordinate is the same as the direction\r\n     * of screen coordinate.\r\n     *\r\n     * Do not need to consider axis 'inverse', which is auto processed by\r\n     * axis extent.\r\n     *\r\n     * @param {module:zrender/container/Group} group\r\n     * @param {Object} axisModel\r\n     * @param {Object} opt Standard axis parameters.\r\n     * @param {Array.<number>} opt.position [x, y]\r\n     * @param {number} opt.rotation by radian\r\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\r\n     * @param {number} [opt.tickDirection=1] 1 or -1\r\n     * @param {number} [opt.labelDirection=1] 1 or -1\r\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\r\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\r\n     * @param {string} [opt.axisName] default get from axisModel.\r\n     * @param {number} [opt.axisNameAvailableWidth]\r\n     * @param {number} [opt.labelRotation] by degree, default get from axisModel.\r\n     * @param {number} [opt.labelInterval] Default label interval when label\r\n     *                                     interval from model is null or 'auto'.\r\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\r\n     */\r\n    var AxisBuilder = function (axisModel, opt) {\r\n\r\n        /**\r\n         * @readOnly\r\n         */\r\n        this.opt = opt;\r\n\r\n        /**\r\n         * @readOnly\r\n         */\r\n        this.axisModel = axisModel;\r\n\r\n        // Default value\r\n        zrUtil.defaults(\r\n            opt,\r\n            {\r\n                labelOffset: 0,\r\n                nameDirection: 1,\r\n                tickDirection: 1,\r\n                labelDirection: 1,\r\n                silent: true\r\n            }\r\n        );\r\n\r\n        /**\r\n         * @readOnly\r\n         */\r\n        this.group = new graphic.Group();\r\n\r\n        // FIXME Not use a seperate text group?\r\n        var dumbGroup = new graphic.Group({\r\n            position: opt.position.slice(),\r\n            rotation: opt.rotation\r\n        });\r\n\r\n        // this.group.add(dumbGroup);\r\n        // this._dumbGroup = dumbGroup;\r\n\r\n        dumbGroup.updateTransform();\r\n        this._transform = dumbGroup.transform;\r\n\r\n        this._dumbGroup = dumbGroup;\r\n    };\r\n\r\n    AxisBuilder.prototype = {\r\n\r\n        constructor: AxisBuilder,\r\n\r\n        hasBuilder: function (name) {\r\n            return !!builders[name];\r\n        },\r\n\r\n        add: function (name) {\r\n            builders[name].call(this);\r\n        },\r\n\r\n        getGroup: function () {\r\n            return this.group;\r\n        }\r\n\r\n    };\r\n\r\n    var builders = {\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        axisLine: function () {\r\n            var opt = this.opt;\r\n            var axisModel = this.axisModel;\r\n\r\n            if (!axisModel.get('axisLine.show')) {\r\n                return;\r\n            }\r\n\r\n            var extent = this.axisModel.axis.getExtent();\r\n\r\n            var matrix = this._transform;\r\n            var pt1 = [extent[0], 0];\r\n            var pt2 = [extent[1], 0];\r\n            if (matrix) {\r\n                v2ApplyTransform(pt1, pt1, matrix);\r\n                v2ApplyTransform(pt2, pt2, matrix);\r\n            }\r\n\r\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\r\n\r\n                // Id for animation\r\n                anid: 'line',\r\n\r\n                shape: {\r\n                    x1: pt1[0],\r\n                    y1: pt1[1],\r\n                    x2: pt2[0],\r\n                    y2: pt2[1]\r\n                },\r\n                style: zrUtil.extend(\r\n                    {lineCap: 'round'},\r\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\r\n                ),\r\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\r\n                silent: true,\r\n                z2: 1\r\n            })));\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        axisTick: function () {\r\n            var axisModel = this.axisModel;\r\n\r\n            if (!axisModel.get('axisTick.show')) {\r\n                return;\r\n            }\r\n\r\n            var axis = axisModel.axis;\r\n            var tickModel = axisModel.getModel('axisTick');\r\n            var opt = this.opt;\r\n\r\n            var lineStyleModel = tickModel.getModel('lineStyle');\r\n            var tickLen = tickModel.get('length');\r\n\r\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\r\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\r\n            var ticks = axis.scale.getTicks();\r\n\r\n            var pt1 = [];\r\n            var pt2 = [];\r\n            var matrix = this._transform;\r\n\r\n            for (var i = 0; i < ticksCoords.length; i++) {\r\n                // Only ordinal scale support tick interval\r\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\r\n                     continue;\r\n                }\r\n\r\n                var tickCoord = ticksCoords[i];\r\n\r\n                pt1[0] = tickCoord;\r\n                pt1[1] = 0;\r\n                pt2[0] = tickCoord;\r\n                pt2[1] = opt.tickDirection * tickLen;\r\n\r\n                if (matrix) {\r\n                    v2ApplyTransform(pt1, pt1, matrix);\r\n                    v2ApplyTransform(pt2, pt2, matrix);\r\n                }\r\n                // Tick line, Not use group transform to have better line draw\r\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\r\n\r\n                    // Id for animation\r\n                    anid: 'tick_' + ticks[i],\r\n\r\n                    shape: {\r\n                        x1: pt1[0],\r\n                        y1: pt1[1],\r\n                        x2: pt2[0],\r\n                        y2: pt2[1]\r\n                    },\r\n                    style: zrUtil.defaults(\r\n                        lineStyleModel.getLineStyle(),\r\n                        {\r\n                            stroke: axisModel.get('axisLine.lineStyle.color')\r\n                        }\r\n                    ),\r\n                    z2: 2,\r\n                    silent: true\r\n                })));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\r\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\r\n         * @private\r\n         */\r\n        axisLabel: function () {\r\n            var opt = this.opt;\r\n            var axisModel = this.axisModel;\r\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\r\n\r\n            if (!show) {\r\n                return;\r\n            }\r\n\r\n            var axis = axisModel.axis;\r\n            var labelModel = axisModel.getModel('axisLabel');\r\n            var textStyleModel = labelModel.getModel('textStyle');\r\n            var labelMargin = labelModel.get('margin');\r\n            var ticks = axis.scale.getTicks();\r\n            var labels = axisModel.getFormattedLabels();\r\n\r\n            // Special label rotate.\r\n            var labelRotation = retrieve(opt.labelRotation, labelModel.get('rotate')) || 0;\r\n            // To radian.\r\n            labelRotation = labelRotation * PI / 180;\r\n\r\n            var labelLayout = innerTextLayout(opt, labelRotation, opt.labelDirection);\r\n            var categoryData = axisModel.get('data');\r\n\r\n            var textEls = [];\r\n            var silent = isSilent(axisModel);\r\n            var triggerEvent = axisModel.get('triggerEvent');\r\n\r\n            for (var i = 0; i < ticks.length; i++) {\r\n                if (ifIgnoreOnTick(axis, i, opt.labelInterval)) {\r\n                     continue;\r\n                }\r\n\r\n                var itemTextStyleModel = textStyleModel;\r\n                if (categoryData && categoryData[i] && categoryData[i].textStyle) {\r\n                    itemTextStyleModel = new Model(\r\n                        categoryData[i].textStyle, textStyleModel, axisModel.ecModel\r\n                    );\r\n                }\r\n                var textColor = itemTextStyleModel.getTextColor()\r\n                    || axisModel.get('axisLine.lineStyle.color');\r\n\r\n                var tickCoord = axis.dataToCoord(ticks[i]);\r\n                var pos = [\r\n                    tickCoord,\r\n                    opt.labelOffset + opt.labelDirection * labelMargin\r\n                ];\r\n                var labelBeforeFormat = axis.scale.getLabel(ticks[i]);\r\n\r\n                var textEl = new graphic.Text({\r\n\r\n                    // Id for animation\r\n                    anid: 'label_' + ticks[i],\r\n\r\n                    style: {\r\n                        text: labels[i],\r\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\r\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.verticalAlign,\r\n                        textFont: itemTextStyleModel.getFont(),\r\n                        fill: typeof textColor === 'function' ? textColor(labelBeforeFormat) : textColor\r\n                    },\r\n                    position: pos,\r\n                    rotation: labelLayout.rotation,\r\n                    silent: silent,\r\n                    z2: 10\r\n                });\r\n\r\n                // Pack data for mouse event\r\n                if (triggerEvent) {\r\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\r\n                    textEl.eventData.targetType = 'axisLabel';\r\n                    textEl.eventData.value = labelBeforeFormat;\r\n                }\r\n\r\n\r\n                // FIXME\r\n                this._dumbGroup.add(textEl);\r\n                textEl.updateTransform();\r\n\r\n                textEls.push(textEl);\r\n                this.group.add(textEl);\r\n\r\n                textEl.decomposeTransform();\r\n            }\r\n\r\n            function isTwoLabelOverlapped(current, next) {\r\n                var firstRect = current && current.getBoundingRect().clone();\r\n                var nextRect = next && next.getBoundingRect().clone();\r\n                if (firstRect && nextRect) {\r\n                    firstRect.applyTransform(current.getLocalTransform());\r\n                    nextRect.applyTransform(next.getLocalTransform());\r\n                    return firstRect.intersect(nextRect);\r\n                }\r\n            }\r\n            if (axis.type !== 'category') {\r\n                // If min or max are user set, we need to check\r\n                // If the tick on min(max) are overlap on their neighbour tick\r\n                // If they are overlapped, we need to hide the min(max) tick label\r\n                if (axisModel.getMin ? axisModel.getMin() : axisModel.get('min')) {\r\n                    var firstLabel = textEls[0];\r\n                    var nextLabel = textEls[1];\r\n                    if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\r\n                        firstLabel.ignore = true;\r\n                    }\r\n                }\r\n                if (axisModel.getMax ? axisModel.getMax() : axisModel.get('max')) {\r\n                    var lastLabel = textEls[textEls.length - 1];\r\n                    var prevLabel = textEls[textEls.length - 2];\r\n                    if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\r\n                        lastLabel.ignore = true;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        axisName: function () {\r\n            var opt = this.opt;\r\n            var axisModel = this.axisModel;\r\n            var name = retrieve(opt.axisName, axisModel.get('name'));\r\n\r\n            if (!name) {\r\n                return;\r\n            }\r\n\r\n            var nameLocation = axisModel.get('nameLocation');\r\n            var nameDirection = opt.nameDirection;\r\n            var textStyleModel = axisModel.getModel('nameTextStyle');\r\n            var gap = axisModel.get('nameGap') || 0;\r\n\r\n            var extent = this.axisModel.axis.getExtent();\r\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\r\n            var pos = [\r\n                nameLocation === 'start'\r\n                    ? extent[0] - gapSignal * gap\r\n                    : nameLocation === 'end'\r\n                    ? extent[1] + gapSignal * gap\r\n                    : (extent[0] + extent[1]) / 2, // 'middle'\r\n                // Reuse labelOffset.\r\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\r\n            ];\r\n\r\n            var labelLayout;\r\n\r\n            var nameRotation = axisModel.get('nameRotate');\r\n            if (nameRotation != null) {\r\n                nameRotation = nameRotation * PI / 180; // To radian.\r\n            }\r\n\r\n            var axisNameAvailableWidth;\r\n\r\n            if (nameLocation === 'middle') {\r\n                labelLayout = innerTextLayout(\r\n                    opt,\r\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\r\n                    nameDirection\r\n                );\r\n            }\r\n            else {\r\n                labelLayout = endTextLayout(\r\n                    opt, nameLocation, nameRotation || 0, extent\r\n                );\r\n\r\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\r\n                if (axisNameAvailableWidth != null) {\r\n                    axisNameAvailableWidth = Math.abs(\r\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\r\n                    );\r\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\r\n                }\r\n            }\r\n\r\n            var textFont = textStyleModel.getFont();\r\n\r\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\r\n            var ellipsis = truncateOpt.ellipsis;\r\n            var maxWidth = retrieve(truncateOpt.maxWidth, axisNameAvailableWidth);\r\n            var truncatedText = (ellipsis != null && maxWidth != null)\r\n                ? formatUtil.truncateText(\r\n                    name, maxWidth, textFont, ellipsis,\r\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\r\n                )\r\n                : name;\r\n\r\n            var tooltipOpt = axisModel.get('tooltip', true);\r\n\r\n            var mainType = axisModel.mainType;\r\n            var formatterParams = {\r\n                componentType: mainType,\r\n                name: name,\r\n                $vars: ['name']\r\n            };\r\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\r\n\r\n            var textEl = new graphic.Text({\r\n\r\n                // Id for animation\r\n                anid: 'name',\r\n\r\n                __fullText: name,\r\n                __truncatedText: truncatedText,\r\n\r\n                style: {\r\n                    text: truncatedText,\r\n                    textFont: textFont,\r\n                    fill: textStyleModel.getTextColor()\r\n                        || axisModel.get('axisLine.lineStyle.color'),\r\n                    textAlign: labelLayout.textAlign,\r\n                    textVerticalAlign: labelLayout.verticalAlign\r\n                },\r\n                position: pos,\r\n                rotation: labelLayout.rotation,\r\n                silent: isSilent(axisModel),\r\n                z2: 1,\r\n                tooltip: (tooltipOpt && tooltipOpt.show)\r\n                    ? zrUtil.extend({\r\n                        content: name,\r\n                        formatter: function () {\r\n                            return name;\r\n                        },\r\n                        formatterParams: formatterParams\r\n                    }, tooltipOpt)\r\n                    : null\r\n            });\r\n\r\n            if (axisModel.get('triggerEvent')) {\r\n                textEl.eventData = makeAxisEventDataBase(axisModel);\r\n                textEl.eventData.targetType = 'axisName';\r\n                textEl.eventData.name = name;\r\n            }\r\n\r\n            // FIXME\r\n            this._dumbGroup.add(textEl);\r\n            textEl.updateTransform();\r\n\r\n            this.group.add(textEl);\r\n\r\n            textEl.decomposeTransform();\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * @inner\r\n     */\r\n    function innerTextLayout(opt, textRotation, direction) {\r\n        var rotationDiff = remRadian(textRotation - opt.rotation);\r\n        var textAlign;\r\n        var verticalAlign;\r\n\r\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\r\n            verticalAlign = direction > 0 ? 'top' : 'bottom';\r\n            textAlign = 'center';\r\n        }\r\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\r\n            verticalAlign = direction > 0 ? 'bottom' : 'top';\r\n            textAlign = 'center';\r\n        }\r\n        else {\r\n            verticalAlign = 'middle';\r\n\r\n            if (rotationDiff > 0 && rotationDiff < PI) {\r\n                textAlign = direction > 0 ? 'right' : 'left';\r\n            }\r\n            else {\r\n                textAlign = direction > 0 ? 'left' : 'right';\r\n            }\r\n        }\r\n\r\n        return {\r\n            rotation: rotationDiff,\r\n            textAlign: textAlign,\r\n            verticalAlign: verticalAlign\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @inner\r\n     */\r\n    function endTextLayout(opt, textPosition, textRotate, extent) {\r\n        var rotationDiff = remRadian(textRotate - opt.rotation);\r\n        var textAlign;\r\n        var verticalAlign;\r\n        var inverse = extent[0] > extent[1];\r\n        var onLeft = (textPosition === 'start' && !inverse)\r\n            || (textPosition !== 'start' && inverse);\r\n\r\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\r\n            verticalAlign = onLeft ? 'bottom' : 'top';\r\n            textAlign = 'center';\r\n        }\r\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\r\n            verticalAlign = onLeft ? 'top' : 'bottom';\r\n            textAlign = 'center';\r\n        }\r\n        else {\r\n            verticalAlign = 'middle';\r\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\r\n                textAlign = onLeft ? 'left' : 'right';\r\n            }\r\n            else {\r\n                textAlign = onLeft ? 'right' : 'left';\r\n            }\r\n        }\r\n\r\n        return {\r\n            rotation: rotationDiff,\r\n            textAlign: textAlign,\r\n            verticalAlign: verticalAlign\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @inner\r\n     */\r\n    function isSilent(axisModel) {\r\n        var tooltipOpt = axisModel.get('tooltip');\r\n        return axisModel.get('silent')\r\n            // Consider mouse cursor, add these restrictions.\r\n            || !(\r\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\r\n            );\r\n    }\r\n\r\n    /**\r\n     * @static\r\n     */\r\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\r\n        var rawTick;\r\n        var scale = axis.scale;\r\n        return scale.type === 'ordinal'\r\n            && (\r\n                typeof interval === 'function'\r\n                    ? (\r\n                        rawTick = scale.getTicks()[i],\r\n                        !interval(rawTick, scale.getLabel(rawTick))\r\n                    )\r\n                    : i % (interval + 1)\r\n            );\r\n    };\r\n\r\n    /**\r\n     * @static\r\n     */\r\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\r\n        var interval = model.get('interval');\r\n        if (interval == null || interval == 'auto') {\r\n            interval = labelInterval;\r\n        }\r\n        return interval;\r\n    };\r\n\r\n    module.exports = AxisBuilder;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/component/axis/AxisBuilder.js\n ** module id = 648\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","'use strict';\r\n\r\n\r\n    var echarts = require('../echarts');\r\n    var graphic = require('../util/graphic');\r\n    var layout = require('../util/layout');\r\n\r\n    // Model\r\n    echarts.extendComponentModel({\r\n\r\n        type: 'title',\r\n\r\n        layoutMode: {type: 'box', ignoreSize: true},\r\n\r\n        defaultOption: {\r\n            // 一级层叠\r\n            zlevel: 0,\r\n            // 二级层叠\r\n            z: 6,\r\n            show: true,\r\n\r\n            text: '',\r\n            // 超链接跳转\r\n            // link: null,\r\n            // 仅支持self | blank\r\n            target: 'blank',\r\n            subtext: '',\r\n\r\n            // 超链接跳转\r\n            // sublink: null,\r\n            // 仅支持self | blank\r\n            subtarget: 'blank',\r\n\r\n            // 'center' ¦ 'left' ¦ 'right'\r\n            // ¦ {number}（x坐标，单位px）\r\n            left: 0,\r\n            // 'top' ¦ 'bottom' ¦ 'center'\r\n            // ¦ {number}（y坐标，单位px）\r\n            top: 0,\r\n\r\n            // 水平对齐\r\n            // 'auto' | 'left' | 'right' | 'center'\r\n            // 默认根据 left 的位置判断是左对齐还是右对齐\r\n            // textAlign: null\r\n            //\r\n            // 垂直对齐\r\n            // 'auto' | 'top' | 'bottom' | 'middle'\r\n            // 默认根据 top 位置判断是上对齐还是下对齐\r\n            // textBaseline: null\r\n\r\n            backgroundColor: 'rgba(0,0,0,0)',\r\n\r\n            // 标题边框颜色\r\n            borderColor: '#ccc',\r\n\r\n            // 标题边框线宽，单位px，默认为0（无边框）\r\n            borderWidth: 0,\r\n\r\n            // 标题内边距，单位px，默认各方向内边距为5，\r\n            // 接受数组分别设定上右下左边距，同css\r\n            padding: 5,\r\n\r\n            // 主副标题纵向间隔，单位px，默认为10，\r\n            itemGap: 10,\r\n            textStyle: {\r\n                fontSize: 18,\r\n                fontWeight: 'bolder',\r\n                color: '#333'\r\n            },\r\n            subtextStyle: {\r\n                color: '#aaa'\r\n            }\r\n        }\r\n    });\r\n\r\n    // View\r\n    echarts.extendComponentView({\r\n\r\n        type: 'title',\r\n\r\n        render: function (titleModel, ecModel, api) {\r\n            this.group.removeAll();\r\n\r\n            if (!titleModel.get('show')) {\r\n                return;\r\n            }\r\n\r\n            var group = this.group;\r\n\r\n            var textStyleModel = titleModel.getModel('textStyle');\r\n            var subtextStyleModel = titleModel.getModel('subtextStyle');\r\n\r\n            var textAlign = titleModel.get('textAlign');\r\n            var textBaseline = titleModel.get('textBaseline');\r\n\r\n            var textEl = new graphic.Text({\r\n                style: {\r\n                    text: titleModel.get('text'),\r\n                    textFont: textStyleModel.getFont(),\r\n                    fill: textStyleModel.getTextColor()\r\n                },\r\n                z2: 10\r\n            });\r\n\r\n            var textRect = textEl.getBoundingRect();\r\n\r\n            var subText = titleModel.get('subtext');\r\n            var subTextEl = new graphic.Text({\r\n                style: {\r\n                    text: subText,\r\n                    textFont: subtextStyleModel.getFont(),\r\n                    fill: subtextStyleModel.getTextColor(),\r\n                    y: textRect.height + titleModel.get('itemGap'),\r\n                    textBaseline: 'top'\r\n                },\r\n                z2: 10\r\n            });\r\n\r\n            var link = titleModel.get('link');\r\n            var sublink = titleModel.get('sublink');\r\n\r\n            textEl.silent = !link;\r\n            subTextEl.silent = !sublink;\r\n\r\n            if (link) {\r\n                textEl.on('click', function () {\r\n                    window.open(link, '_' + titleModel.get('target'));\r\n                });\r\n            }\r\n            if (sublink) {\r\n                subTextEl.on('click', function () {\r\n                    window.open(sublink, '_' + titleModel.get('subtarget'));\r\n                });\r\n            }\r\n\r\n            group.add(textEl);\r\n            subText && group.add(subTextEl);\r\n            // If no subText, but add subTextEl, there will be an empty line.\r\n\r\n            var groupRect = group.getBoundingRect();\r\n            var layoutOption = titleModel.getBoxLayoutParams();\r\n            layoutOption.width = groupRect.width;\r\n            layoutOption.height = groupRect.height;\r\n            var layoutRect = layout.getLayoutRect(\r\n                layoutOption, {\r\n                    width: api.getWidth(),\r\n                    height: api.getHeight()\r\n                }, titleModel.get('padding')\r\n            );\r\n            // Adjust text align based on position\r\n            if (!textAlign) {\r\n                // Align left if title is on the left. center and right is same\r\n                textAlign = titleModel.get('left') || titleModel.get('right');\r\n                if (textAlign === 'middle') {\r\n                    textAlign = 'center';\r\n                }\r\n                // Adjust layout by text align\r\n                if (textAlign === 'right') {\r\n                    layoutRect.x += layoutRect.width;\r\n                }\r\n                else if (textAlign === 'center') {\r\n                    layoutRect.x += layoutRect.width / 2;\r\n                }\r\n            }\r\n            if (!textBaseline) {\r\n                textBaseline = titleModel.get('top') || titleModel.get('bottom');\r\n                if (textBaseline === 'center') {\r\n                    textBaseline = 'middle';\r\n                }\r\n                if (textBaseline === 'bottom') {\r\n                    layoutRect.y += layoutRect.height;\r\n                }\r\n                else if (textBaseline === 'middle') {\r\n                    layoutRect.y += layoutRect.height / 2;\r\n                }\r\n\r\n                textBaseline = textBaseline || 'top';\r\n            }\r\n\r\n            group.attr('position', [layoutRect.x, layoutRect.y]);\r\n            var alignStyle = {\r\n                textAlign: textAlign,\r\n                textVerticalAlign: textBaseline\r\n            };\r\n            textEl.setStyle(alignStyle);\r\n            subTextEl.setStyle(alignStyle);\r\n\r\n            // Render background\r\n            // Get groupRect again because textAlign has been changed\r\n            groupRect = group.getBoundingRect();\r\n            var padding = layoutRect.margin;\r\n            var style = titleModel.getItemStyle(['color', 'opacity']);\r\n            style.fill = titleModel.get('backgroundColor');\r\n            var rect = new graphic.Rect({\r\n                shape: {\r\n                    x: groupRect.x - padding[3],\r\n                    y: groupRect.y - padding[0],\r\n                    width: groupRect.width + padding[1] + padding[3],\r\n                    height: groupRect.height + padding[0] + padding[2]\r\n                },\r\n                style: style,\r\n                silent: true\r\n            });\r\n            graphic.subPixelOptimizeRect(rect);\r\n\r\n            group.add(rect);\r\n        }\r\n    });\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/component/title.js\n ** module id = 649\n ** module chunks = 15 29 36 37 42 61\n **/","/**\r\n * Legend component entry file8\r\n */\r\n\r\n\r\n    require('./legend/LegendModel');\r\n    require('./legend/legendAction');\r\n    require('./legend/LegendView');\r\n\r\n    var echarts = require('../echarts');\r\n    // Series Filter\r\n    echarts.registerProcessor(require('./legend/legendFilter'));\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/component/legend.js\n ** module id = 650\n ** module chunks = 15 29 36 37 42 61\n **/","'use strict';\r\n\r\n\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var Model = require('../../model/Model');\r\n\r\n    var LegendModel = require('../../echarts').extendComponentModel({\r\n\r\n        type: 'legend',\r\n\r\n        dependencies: ['series'],\r\n\r\n        layoutMode: {\r\n            type: 'box',\r\n            ignoreSize: true\r\n        },\r\n\r\n        init: function (option, parentModel, ecModel) {\r\n            this.mergeDefaultAndTheme(option, ecModel);\r\n\r\n            option.selected = option.selected || {};\r\n        },\r\n\r\n        mergeOption: function (option) {\r\n            LegendModel.superCall(this, 'mergeOption', option);\r\n        },\r\n\r\n        optionUpdated: function () {\r\n            this._updateData(this.ecModel);\r\n\r\n            var legendData = this._data;\r\n\r\n            // If selectedMode is single, try to select one\r\n            if (legendData[0] && this.get('selectedMode') === 'single') {\r\n                var hasSelected = false;\r\n                // If has any selected in option.selected\r\n                for (var i = 0; i < legendData.length; i++) {\r\n                    var name = legendData[i].get('name');\r\n                    if (this.isSelected(name)) {\r\n                        // Force to unselect others\r\n                        this.select(name);\r\n                        hasSelected = true;\r\n                        break;\r\n                    }\r\n                }\r\n                // Try select the first if selectedMode is single\r\n                !hasSelected && this.select(legendData[0].get('name'));\r\n            }\r\n        },\r\n\r\n        _updateData: function (ecModel) {\r\n            var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\r\n                // Can be string or number\r\n                if (typeof dataItem === 'string' || typeof dataItem === 'number') {\r\n                    dataItem = {\r\n                        name: dataItem\r\n                    };\r\n                }\r\n                return new Model(dataItem, this, this.ecModel);\r\n            }, this);\r\n            this._data = legendData;\r\n\r\n            var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\r\n                return series.name;\r\n            });\r\n            ecModel.eachSeries(function (seriesModel) {\r\n                if (seriesModel.legendDataProvider) {\r\n                    var data = seriesModel.legendDataProvider();\r\n                    availableNames = availableNames.concat(data.mapArray(data.getName));\r\n                }\r\n            });\r\n            /**\r\n             * @type {Array.<string>}\r\n             * @private\r\n             */\r\n            this._availableNames = availableNames;\r\n        },\r\n\r\n        /**\r\n         * @return {Array.<module:echarts/model/Model>}\r\n         */\r\n        getData: function () {\r\n            return this._data;\r\n        },\r\n\r\n        /**\r\n         * @param {string} name\r\n         */\r\n        select: function (name) {\r\n            var selected = this.option.selected;\r\n            var selectedMode = this.get('selectedMode');\r\n            if (selectedMode === 'single') {\r\n                var data = this._data;\r\n                zrUtil.each(data, function (dataItem) {\r\n                    selected[dataItem.get('name')] = false;\r\n                });\r\n            }\r\n            selected[name] = true;\r\n        },\r\n\r\n        /**\r\n         * @param {string} name\r\n         */\r\n        unSelect: function (name) {\r\n            if (this.get('selectedMode') !== 'single') {\r\n                this.option.selected[name] = false;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {string} name\r\n         */\r\n        toggleSelected: function (name) {\r\n            var selected = this.option.selected;\r\n            // Default is true\r\n            if (!(name in selected)) {\r\n                selected[name] = true;\r\n            }\r\n            this[selected[name] ? 'unSelect' : 'select'](name);\r\n        },\r\n\r\n        /**\r\n         * @param {string} name\r\n         */\r\n        isSelected: function (name) {\r\n            var selected = this.option.selected;\r\n            return !((name in selected) && !selected[name])\r\n                && zrUtil.indexOf(this._availableNames, name) >= 0;\r\n        },\r\n\r\n        defaultOption: {\r\n            // 一级层叠\r\n            zlevel: 0,\r\n            // 二级层叠\r\n            z: 4,\r\n            show: true,\r\n\r\n            // 布局方式，默认为水平布局，可选为：\r\n            // 'horizontal' | 'vertical'\r\n            orient: 'horizontal',\r\n\r\n            left: 'center',\r\n            // right: 'center',\r\n\r\n            top: 'top',\r\n            // bottom: 'top',\r\n\r\n            // 水平对齐\r\n            // 'auto' | 'left' | 'right'\r\n            // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\r\n            align: 'auto',\r\n\r\n            backgroundColor: 'rgba(0,0,0,0)',\r\n            // 图例边框颜色\r\n            borderColor: '#ccc',\r\n            // 图例边框线宽，单位px，默认为0（无边框）\r\n            borderWidth: 0,\r\n            // 图例内边距，单位px，默认各方向内边距为5，\r\n            // 接受数组分别设定上右下左边距，同css\r\n            padding: 5,\r\n            // 各个item之间的间隔，单位px，默认为10，\r\n            // 横向布局时为水平间隔，纵向布局时为纵向间隔\r\n            itemGap: 10,\r\n            // 图例图形宽度\r\n            itemWidth: 25,\r\n            // 图例图形高度\r\n            itemHeight: 14,\r\n\r\n            // 图例关闭时候的颜色\r\n            inactiveColor: '#ccc',\r\n\r\n            textStyle: {\r\n                // 图例文字颜色\r\n                color: '#333'\r\n            },\r\n            // formatter: '',\r\n            // 选择模式，默认开启图例开关\r\n            selectedMode: true,\r\n            // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\r\n            // selected: null,\r\n            // 图例内容（详见legend.data，数组中每一项代表一个item\r\n            // data: [],\r\n\r\n            // Tooltip 相关配置\r\n            tooltip: {\r\n                show: false\r\n            }\r\n        }\r\n    });\r\n\r\n    module.exports = LegendModel;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/component/legend/LegendModel.js\n ** module id = 651\n ** module chunks = 15 29 36 37 42 61\n **/","/**\r\n * @file Legend action\r\n */\r\n\r\n\r\n    var echarts = require('../../echarts');\r\n    var zrUtil = require('zrender/lib/core/util');\r\n\r\n    function legendSelectActionHandler(methodName, payload, ecModel) {\r\n        var selectedMap = {};\r\n        var isToggleSelect = methodName === 'toggleSelected';\r\n        var isSelected;\r\n        // Update all legend components\r\n        ecModel.eachComponent('legend', function (legendModel) {\r\n            if (isToggleSelect && isSelected != null) {\r\n                // Force other legend has same selected status\r\n                // Or the first is toggled to true and other are toggled to false\r\n                // In the case one legend has some item unSelected in option. And if other legend\r\n                // doesn't has the item, they will assume it is selected.\r\n                legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\r\n            }\r\n            else {\r\n                legendModel[methodName](payload.name);\r\n                isSelected = legendModel.isSelected(payload.name);\r\n            }\r\n            var legendData = legendModel.getData();\r\n            zrUtil.each(legendData, function (model) {\r\n                var name = model.get('name');\r\n                // Wrap element\r\n                if (name === '\\n' || name === '') {\r\n                    return;\r\n                }\r\n                var isItemSelected = legendModel.isSelected(name);\r\n                if (name in selectedMap) {\r\n                    // Unselected if any legend is unselected\r\n                    selectedMap[name] = selectedMap[name] && isItemSelected;\r\n                }\r\n                else {\r\n                    selectedMap[name] = isItemSelected;\r\n                }\r\n            });\r\n        });\r\n        // Return the event explicitly\r\n        return {\r\n            name: payload.name,\r\n            selected: selectedMap\r\n        };\r\n    }\r\n    /**\r\n     * @event legendToggleSelect\r\n     * @type {Object}\r\n     * @property {string} type 'legendToggleSelect'\r\n     * @property {string} [from]\r\n     * @property {string} name Series name or data item name\r\n     */\r\n    echarts.registerAction(\r\n        'legendToggleSelect', 'legendselectchanged',\r\n        zrUtil.curry(legendSelectActionHandler, 'toggleSelected')\r\n    );\r\n\r\n    /**\r\n     * @event legendSelect\r\n     * @type {Object}\r\n     * @property {string} type 'legendSelect'\r\n     * @property {string} name Series name or data item name\r\n     */\r\n    echarts.registerAction(\r\n        'legendSelect', 'legendselected',\r\n        zrUtil.curry(legendSelectActionHandler, 'select')\r\n    );\r\n\r\n    /**\r\n     * @event legendUnSelect\r\n     * @type {Object}\r\n     * @property {string} type 'legendUnSelect'\r\n     * @property {string} name Series name or data item name\r\n     */\r\n    echarts.registerAction(\r\n        'legendUnSelect', 'legendunselected',\r\n        zrUtil.curry(legendSelectActionHandler, 'unSelect')\r\n    );\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/component/legend/legendAction.js\n ** module id = 652\n ** module chunks = 15 29 36 37 42 61\n **/","\r\n\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var symbolCreator = require('../../util/symbol');\r\n    var graphic = require('../../util/graphic');\r\n    var listComponentHelper = require('../helper/listComponent');\r\n\r\n    var curry = zrUtil.curry;\r\n\r\n    function dispatchSelectAction(name, api) {\r\n        api.dispatchAction({\r\n            type: 'legendToggleSelect',\r\n            name: name\r\n        });\r\n    }\r\n\r\n    function dispatchHighlightAction(seriesModel, dataName, api) {\r\n        // If element hover will move to a hoverLayer.\r\n        var el = api.getZr().storage.getDisplayList()[0];\r\n        if (!(el && el.useHoverLayer)) {\r\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\r\n                type: 'highlight',\r\n                seriesName: seriesModel.name,\r\n                name: dataName\r\n            });\r\n        }\r\n    }\r\n\r\n    function dispatchDownplayAction(seriesModel, dataName, api) {\r\n        // If element hover will move to a hoverLayer.\r\n        var el = api.getZr().storage.getDisplayList()[0];\r\n        if (!(el && el.useHoverLayer)) {\r\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\r\n                type: 'downplay',\r\n                seriesName: seriesModel.name,\r\n                name: dataName\r\n            });\r\n        }\r\n    }\r\n\r\n    module.exports = require('../../echarts').extendComponentView({\r\n\r\n        type: 'legend',\r\n\r\n        init: function () {\r\n            this._symbolTypeStore = {};\r\n        },\r\n\r\n        render: function (legendModel, ecModel, api) {\r\n            var group = this.group;\r\n            group.removeAll();\r\n\r\n            if (!legendModel.get('show')) {\r\n                return;\r\n            }\r\n\r\n            var selectMode = legendModel.get('selectedMode');\r\n            var itemAlign = legendModel.get('align');\r\n\r\n            if (itemAlign === 'auto') {\r\n                itemAlign = (legendModel.get('left') === 'right'\r\n                    && legendModel.get('orient') === 'vertical')\r\n                    ? 'right' : 'left';\r\n            }\r\n\r\n            var legendDrawedMap = {};\r\n\r\n            zrUtil.each(legendModel.getData(), function (itemModel) {\r\n                var name = itemModel.get('name');\r\n\r\n                // Use empty string or \\n as a newline string\r\n                if (name === '' || name === '\\n') {\r\n                    group.add(new graphic.Group({\r\n                        newline: true\r\n                    }));\r\n                    return;\r\n                }\r\n\r\n                var seriesModel = ecModel.getSeriesByName(name)[0];\r\n\r\n                if (legendDrawedMap[name]) {\r\n                    // Have been drawed\r\n                    return;\r\n                }\r\n\r\n                // Series legend\r\n                if (seriesModel) {\r\n                    var data = seriesModel.getData();\r\n                    var color = data.getVisual('color');\r\n\r\n                    // If color is a callback function\r\n                    if (typeof color === 'function') {\r\n                        // Use the first data\r\n                        color = color(seriesModel.getDataParams(0));\r\n                    }\r\n\r\n                    // Using rect symbol defaultly\r\n                    var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\r\n                    var symbolType = data.getVisual('symbol');\r\n\r\n                    var itemGroup = this._createItem(\r\n                        name, itemModel, legendModel,\r\n                        legendSymbolType, symbolType,\r\n                        itemAlign, color,\r\n                        selectMode\r\n                    );\r\n\r\n                    itemGroup.on('click', curry(dispatchSelectAction, name, api))\r\n                        .on('mouseover', curry(dispatchHighlightAction, seriesModel, '', api))\r\n                        .on('mouseout', curry(dispatchDownplayAction, seriesModel, '', api));\r\n\r\n                    legendDrawedMap[name] = true;\r\n                }\r\n                else {\r\n                    // Data legend of pie, funnel\r\n                    ecModel.eachRawSeries(function (seriesModel) {\r\n                        // In case multiple series has same data name\r\n                        if (legendDrawedMap[name]) {\r\n                            return;\r\n                        }\r\n                        if (seriesModel.legendDataProvider) {\r\n                            var data = seriesModel.legendDataProvider();\r\n                            var idx = data.indexOfName(name);\r\n                            if (idx < 0) {\r\n                                return;\r\n                            }\r\n\r\n                            var color = data.getItemVisual(idx, 'color');\r\n\r\n                            var legendSymbolType = 'roundRect';\r\n\r\n                            var itemGroup = this._createItem(\r\n                                name, itemModel, legendModel,\r\n                                legendSymbolType, null,\r\n                                itemAlign, color,\r\n                                selectMode\r\n                            );\r\n\r\n                            itemGroup.on('click', curry(dispatchSelectAction, name, api))\r\n                                // FIXME Should not specify the series name\r\n                                .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api))\r\n                                .on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\r\n\r\n                            legendDrawedMap[name] = true;\r\n                        }\r\n                    }, this);\r\n                }\r\n\r\n                if (__DEV__) {\r\n                    if (!legendDrawedMap[name]) {\r\n                        console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\r\n                    }\r\n                }\r\n            }, this);\r\n\r\n            listComponentHelper.layout(group, legendModel, api);\r\n            // Render background after group is layout\r\n            // FIXME\r\n            listComponentHelper.addBackground(group, legendModel);\r\n        },\r\n\r\n        _createItem: function (\r\n            name, itemModel, legendModel,\r\n            legendSymbolType, symbolType,\r\n            itemAlign, color, selectMode\r\n        ) {\r\n            var itemWidth = legendModel.get('itemWidth');\r\n            var itemHeight = legendModel.get('itemHeight');\r\n            var inactiveColor = legendModel.get('inactiveColor');\r\n\r\n            var isSelected = legendModel.isSelected(name);\r\n            var itemGroup = new graphic.Group();\r\n\r\n            var textStyleModel = itemModel.getModel('textStyle');\r\n\r\n            var itemIcon = itemModel.get('icon');\r\n\r\n            var tooltipModel = itemModel.getModel('tooltip');\r\n\r\n            // Use user given icon first\r\n            legendSymbolType = itemIcon || legendSymbolType;\r\n            itemGroup.add(symbolCreator.createSymbol(\r\n                legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor\r\n            ));\r\n\r\n            // Compose symbols\r\n            // PENDING\r\n            if (!itemIcon && symbolType\r\n                // At least show one symbol, can't be all none\r\n                && ((symbolType !== legendSymbolType) || symbolType == 'none')\r\n            ) {\r\n                var size = itemHeight * 0.8;\r\n                if (symbolType === 'none') {\r\n                    symbolType = 'circle';\r\n                }\r\n                // Put symbol in the center\r\n                itemGroup.add(symbolCreator.createSymbol(\r\n                    symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size,\r\n                    isSelected ? color : inactiveColor\r\n                ));\r\n            }\r\n\r\n            // Text\r\n            var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\r\n            var textAlign = itemAlign;\r\n\r\n            var formatter = legendModel.get('formatter');\r\n            var content = name;\r\n            if (typeof formatter === 'string' && formatter) {\r\n                content = formatter.replace('{name}', name);\r\n            }\r\n            else if (typeof formatter === 'function') {\r\n                content = formatter(name);\r\n            }\r\n\r\n            var text = new graphic.Text({\r\n                style: {\r\n                    text: content,\r\n                    x: textX,\r\n                    y: itemHeight / 2,\r\n                    fill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\r\n                    textFont: textStyleModel.getFont(),\r\n                    textAlign: textAlign,\r\n                    textVerticalAlign: 'middle'\r\n                }\r\n            });\r\n            itemGroup.add(text);\r\n\r\n            // Add a invisible rect to increase the area of mouse hover\r\n            var hitRect = new graphic.Rect({\r\n                shape: itemGroup.getBoundingRect(),\r\n                invisible: true,\r\n                tooltip: tooltipModel.get('show') ? zrUtil.extend({\r\n                    content: name,\r\n                    // Defaul formatter\r\n                    formatter: function () {\r\n                        return name;\r\n                    },\r\n                    formatterParams: {\r\n                        componentType: 'legend',\r\n                        legendIndex: legendModel.componentIndex,\r\n                        name: name,\r\n                        $vars: ['name']\r\n                    }\r\n                }, tooltipModel.option) : null\r\n            });\r\n            itemGroup.add(hitRect);\r\n\r\n            itemGroup.eachChild(function (child) {\r\n                child.silent = true;\r\n            });\r\n\r\n            hitRect.silent = !selectMode;\r\n\r\n\r\n\r\n            this.group.add(itemGroup);\r\n\r\n            graphic.setHoverStyle(itemGroup);\r\n\r\n            return itemGroup;\r\n        }\r\n    });\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/component/legend/LegendView.js\n ** module id = 653\n ** module chunks = 15 29 36 37 42 61\n **/","'use strict';\r\n// Symbol factory\r\n\r\n\r\n    var graphic = require('./graphic');\r\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\r\n\r\n    /**\r\n     * Triangle shape\r\n     * @inner\r\n     */\r\n    var Triangle = graphic.extendShape({\r\n        type: 'triangle',\r\n        shape: {\r\n            cx: 0,\r\n            cy: 0,\r\n            width: 0,\r\n            height: 0\r\n        },\r\n        buildPath: function (path, shape) {\r\n            var cx = shape.cx;\r\n            var cy = shape.cy;\r\n            var width = shape.width / 2;\r\n            var height = shape.height / 2;\r\n            path.moveTo(cx, cy - height);\r\n            path.lineTo(cx + width, cy + height);\r\n            path.lineTo(cx - width, cy + height);\r\n            path.closePath();\r\n        }\r\n    });\r\n    /**\r\n     * Diamond shape\r\n     * @inner\r\n     */\r\n    var Diamond = graphic.extendShape({\r\n        type: 'diamond',\r\n        shape: {\r\n            cx: 0,\r\n            cy: 0,\r\n            width: 0,\r\n            height: 0\r\n        },\r\n        buildPath: function (path, shape) {\r\n            var cx = shape.cx;\r\n            var cy = shape.cy;\r\n            var width = shape.width / 2;\r\n            var height = shape.height / 2;\r\n            path.moveTo(cx, cy - height);\r\n            path.lineTo(cx + width, cy);\r\n            path.lineTo(cx, cy + height);\r\n            path.lineTo(cx - width, cy);\r\n            path.closePath();\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Pin shape\r\n     * @inner\r\n     */\r\n    var Pin = graphic.extendShape({\r\n        type: 'pin',\r\n        shape: {\r\n            // x, y on the cusp\r\n            x: 0,\r\n            y: 0,\r\n            width: 0,\r\n            height: 0\r\n        },\r\n\r\n        buildPath: function (path, shape) {\r\n            var x = shape.x;\r\n            var y = shape.y;\r\n            var w = shape.width / 5 * 3;\r\n            // Height must be larger than width\r\n            var h = Math.max(w, shape.height);\r\n            var r = w / 2;\r\n\r\n            // Dist on y with tangent point and circle center\r\n            var dy = r * r / (h - r);\r\n            var cy = y - h + r + dy;\r\n            var angle = Math.asin(dy / r);\r\n            // Dist on x with tangent point and circle center\r\n            var dx = Math.cos(angle) * r;\r\n\r\n            var tanX = Math.sin(angle);\r\n            var tanY = Math.cos(angle);\r\n\r\n            path.arc(\r\n                x, cy, r,\r\n                Math.PI - angle,\r\n                Math.PI * 2 + angle\r\n            );\r\n\r\n            var cpLen = r * 0.6;\r\n            var cpLen2 = r * 0.7;\r\n            path.bezierCurveTo(\r\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\r\n                x, y - cpLen2,\r\n                x, y\r\n            );\r\n            path.bezierCurveTo(\r\n                x, y - cpLen2,\r\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\r\n                x - dx, cy + dy\r\n            );\r\n            path.closePath();\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Arrow shape\r\n     * @inner\r\n     */\r\n    var Arrow = graphic.extendShape({\r\n\r\n        type: 'arrow',\r\n\r\n        shape: {\r\n            x: 0,\r\n            y: 0,\r\n            width: 0,\r\n            height: 0\r\n        },\r\n\r\n        buildPath: function (ctx, shape) {\r\n            var height = shape.height;\r\n            var width = shape.width;\r\n            var x = shape.x;\r\n            var y = shape.y;\r\n            var dx = width / 3 * 2;\r\n            ctx.moveTo(x, y);\r\n            ctx.lineTo(x + dx, y + height);\r\n            ctx.lineTo(x, y + height / 4 * 3);\r\n            ctx.lineTo(x - dx, y + height);\r\n            ctx.lineTo(x, y);\r\n            ctx.closePath();\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Map of path contructors\r\n     * @type {Object.<string, module:zrender/graphic/Path>}\r\n     */\r\n    var symbolCtors = {\r\n        line: graphic.Line,\r\n\r\n        rect: graphic.Rect,\r\n\r\n        roundRect: graphic.Rect,\r\n\r\n        square: graphic.Rect,\r\n\r\n        circle: graphic.Circle,\r\n\r\n        diamond: Diamond,\r\n\r\n        pin: Pin,\r\n\r\n        arrow: Arrow,\r\n\r\n        triangle: Triangle\r\n    };\r\n\r\n    var symbolShapeMakers = {\r\n\r\n        line: function (x, y, w, h, shape) {\r\n            // FIXME\r\n            shape.x1 = x;\r\n            shape.y1 = y + h / 2;\r\n            shape.x2 = x + w;\r\n            shape.y2 = y + h / 2;\r\n        },\r\n\r\n        rect: function (x, y, w, h, shape) {\r\n            shape.x = x;\r\n            shape.y = y;\r\n            shape.width = w;\r\n            shape.height = h;\r\n        },\r\n\r\n        roundRect: function (x, y, w, h, shape) {\r\n            shape.x = x;\r\n            shape.y = y;\r\n            shape.width = w;\r\n            shape.height = h;\r\n            shape.r = Math.min(w, h) / 4;\r\n        },\r\n\r\n        square: function (x, y, w, h, shape) {\r\n            var size = Math.min(w, h);\r\n            shape.x = x;\r\n            shape.y = y;\r\n            shape.width = size;\r\n            shape.height = size;\r\n        },\r\n\r\n        circle: function (x, y, w, h, shape) {\r\n            // Put circle in the center of square\r\n            shape.cx = x + w / 2;\r\n            shape.cy = y + h / 2;\r\n            shape.r = Math.min(w, h) / 2;\r\n        },\r\n\r\n        diamond: function (x, y, w, h, shape) {\r\n            shape.cx = x + w / 2;\r\n            shape.cy = y + h / 2;\r\n            shape.width = w;\r\n            shape.height = h;\r\n        },\r\n\r\n        pin: function (x, y, w, h, shape) {\r\n            shape.x = x + w / 2;\r\n            shape.y = y + h / 2;\r\n            shape.width = w;\r\n            shape.height = h;\r\n        },\r\n\r\n        arrow: function (x, y, w, h, shape) {\r\n            shape.x = x + w / 2;\r\n            shape.y = y + h / 2;\r\n            shape.width = w;\r\n            shape.height = h;\r\n        },\r\n\r\n        triangle: function (x, y, w, h, shape) {\r\n            shape.cx = x + w / 2;\r\n            shape.cy = y + h / 2;\r\n            shape.width = w;\r\n            shape.height = h;\r\n        }\r\n    };\r\n\r\n    var symbolBuildProxies = {};\r\n    for (var name in symbolCtors) {\r\n        symbolBuildProxies[name] = new symbolCtors[name]();\r\n    }\r\n\r\n    var Symbol = graphic.extendShape({\r\n\r\n        type: 'symbol',\r\n\r\n        shape: {\r\n            symbolType: '',\r\n            x: 0,\r\n            y: 0,\r\n            width: 0,\r\n            height: 0\r\n        },\r\n\r\n        beforeBrush: function () {\r\n            var style = this.style;\r\n            var shape = this.shape;\r\n            // FIXME\r\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\r\n                style.textPosition = ['50%', '40%'];\r\n                style.textAlign = 'center';\r\n                style.textVerticalAlign = 'middle';\r\n            }\r\n        },\r\n\r\n        buildPath: function (ctx, shape, inBundle) {\r\n            var symbolType = shape.symbolType;\r\n            var proxySymbol = symbolBuildProxies[symbolType];\r\n            if (shape.symbolType !== 'none') {\r\n                if (!proxySymbol) {\r\n                    // Default rect\r\n                    symbolType = 'rect';\r\n                    proxySymbol = symbolBuildProxies[symbolType];\r\n                }\r\n                symbolShapeMakers[symbolType](\r\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\r\n                );\r\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\r\n            }\r\n        }\r\n    });\r\n\r\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\r\n    var symbolPathSetColor = function (color) {\r\n        if (this.type !== 'image') {\r\n            var symbolStyle = this.style;\r\n            var symbolShape = this.shape;\r\n            if (symbolShape && symbolShape.symbolType === 'line') {\r\n                symbolStyle.stroke = color;\r\n            }\r\n            else if (this.__isEmptyBrush) {\r\n                symbolStyle.stroke = color;\r\n                symbolStyle.fill = '#fff';\r\n            }\r\n            else {\r\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\r\n                symbolStyle.fill && (symbolStyle.fill = color);\r\n                symbolStyle.stroke && (symbolStyle.stroke = color);\r\n            }\r\n            this.dirty(false);\r\n        }\r\n    };\r\n\r\n    var symbolUtil = {\r\n        /**\r\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\r\n         * @param {string} symbolType\r\n         * @param {number} x\r\n         * @param {number} y\r\n         * @param {number} w\r\n         * @param {number} h\r\n         * @param {string} color\r\n         */\r\n        createSymbol: function (symbolType, x, y, w, h, color) {\r\n            var isEmpty = symbolType.indexOf('empty') === 0;\r\n            if (isEmpty) {\r\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\r\n            }\r\n            var symbolPath;\r\n\r\n            if (symbolType.indexOf('image://') === 0) {\r\n                symbolPath = new graphic.Image({\r\n                    style: {\r\n                        image: symbolType.slice(8),\r\n                        x: x,\r\n                        y: y,\r\n                        width: w,\r\n                        height: h\r\n                    }\r\n                });\r\n            }\r\n            else if (symbolType.indexOf('path://') === 0) {\r\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\r\n            }\r\n            else {\r\n                symbolPath = new Symbol({\r\n                    shape: {\r\n                        symbolType: symbolType,\r\n                        x: x,\r\n                        y: y,\r\n                        width: w,\r\n                        height: h\r\n                    }\r\n                });\r\n            }\r\n\r\n            symbolPath.__isEmptyBrush = isEmpty;\r\n\r\n            symbolPath.setColor = symbolPathSetColor;\r\n\r\n            symbolPath.setColor(color);\r\n\r\n            return symbolPath;\r\n        }\r\n    };\r\n\r\n    module.exports = symbolUtil;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/util/symbol.js\n ** module id = 654\n ** module chunks = 15 29 36 37 42 53 54 61\n **/","\r\n    // List layout\r\n    var layout = require('../../util/layout');\r\n    var formatUtil = require('../../util/format');\r\n    var graphic = require('../../util/graphic');\r\n\r\n    function positionGroup(group, model, api) {\r\n        layout.positionGroup(\r\n            group, model.getBoxLayoutParams(),\r\n            {\r\n                width: api.getWidth(),\r\n                height: api.getHeight()\r\n            },\r\n            model.get('padding')\r\n        );\r\n    }\r\n\r\n    module.exports = {\r\n        /**\r\n         * Layout list like component.\r\n         * It will box layout each items in group of component and then position the whole group in the viewport\r\n         * @param {module:zrender/group/Group} group\r\n         * @param {module:echarts/model/Component} componentModel\r\n         * @param {module:echarts/ExtensionAPI}\r\n         */\r\n        layout: function (group, componentModel, api) {\r\n            var rect = layout.getLayoutRect(componentModel.getBoxLayoutParams(), {\r\n                width: api.getWidth(),\r\n                height: api.getHeight()\r\n            }, componentModel.get('padding'));\r\n            layout.box(\r\n                componentModel.get('orient'),\r\n                group,\r\n                componentModel.get('itemGap'),\r\n                rect.width,\r\n                rect.height\r\n            );\r\n\r\n            positionGroup(group, componentModel, api);\r\n        },\r\n\r\n        addBackground: function (group, componentModel) {\r\n            var padding = formatUtil.normalizeCssArray(\r\n                componentModel.get('padding')\r\n            );\r\n            var boundingRect = group.getBoundingRect();\r\n            var style = componentModel.getItemStyle(['color', 'opacity']);\r\n            style.fill = componentModel.get('backgroundColor');\r\n            var rect = new graphic.Rect({\r\n                shape: {\r\n                    x: boundingRect.x - padding[3],\r\n                    y: boundingRect.y - padding[0],\r\n                    width: boundingRect.width + padding[1] + padding[3],\r\n                    height: boundingRect.height + padding[0] + padding[2]\r\n                },\r\n                style: style,\r\n                silent: true,\r\n                z2: -1\r\n            });\r\n            graphic.subPixelOptimizeRect(rect);\r\n\r\n            group.add(rect);\r\n        }\r\n    };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/component/helper/listComponent.js\n ** module id = 655\n ** module chunks = 15 29 36 37 42 61\n **/","\r\n   module.exports = function (ecModel) {\r\n        var legendModels = ecModel.findComponents({\r\n            mainType: 'legend'\r\n        });\r\n        if (legendModels && legendModels.length) {\r\n            ecModel.filterSeries(function (series) {\r\n                // If in any legend component the status is not selected.\r\n                // Because in legend series is assumed selected when it is not in the legend data.\r\n                for (var i = 0; i < legendModels.length; i++) {\r\n                    if (!legendModels[i].isSelected(series.name)) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            });\r\n        }\r\n    };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/component/legend/legendFilter.js\n ** module id = 656\n ** module chunks = 15 29 36 37 42 61\n **/","import * as React from 'react'\r\nimport { Row, Col } from 'antd';\r\n\"use strict\";\r\n\r\ninterface AdminBasicInfoProps extends React.Props<AdminBasicInfo> {\r\n\r\n}\r\n\r\ninterface AdminBasicInfoState {\r\n\r\n}\r\n/**\r\n * 管理员个人信息+统计结果\r\n */\r\nclass AdminBasicInfo extends React.Component<AdminBasicInfoProps, AdminBasicInfoState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    static defaultProps = {};\r\n\r\n    render() {\r\n        return (\r\n            <Row className=\"display-box\">\r\n                <Col span={17} className=\"am-padding-right-sm\">\r\n                    <div className=\"right-info\">\r\n                        <img src=\"vendor/images/default-headpic.jpg\"/>\r\n                        <div className=\"name\">\r\n                            李自强\r\n                            <span className=\"right-credit\">管理员</span>\r\n                        </div>\r\n                        <div className=\"number-sign\">\r\n                            <span className=\"am-block\">教工号：10203</span>\r\n                            <span className=\"am-block am-margin-top-xs\">个性签名：桃李不言，下自成蹊</span>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n                <Col span={7} className=\"block-box-shadows \">\r\n                    <div className=\"left-statistics\">\r\n                        <div className=\"title\">学校帐户统计</div>\r\n                        <div className=\"statistics-single\">\r\n                            学生帐户\r\n                            <span className=\"rightCount green\">230</span>\r\n                        </div>\r\n                        <div className=\"statistics-single\">\r\n                            管理员/老师帐户\r\n                            <span className=\"rightCount blue\">20</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    \r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport = AdminBasicInfo\n\n\n/** WEBPACK FOOTER **\n ** ./pages/AdminPage/Component/AdminBasicInfo.tsx\n **/","import * as React from 'react'\r\nimport AdminBasicInfo = require('../Component/AdminBasicInfo')\r\nimport CardTabs = require('../../../common/Component/CardTabs')\r\nimport ActivitiesLibChart = require('./Component/ActivitiesLibChart')\r\nimport ActiveDegreeChart = require('./Component/ActiveDegreeChart')\r\n\"use strict\";\r\n\r\ninterface StatisticsProps extends React.Props<Statistics> {\r\n\r\n}\r\n\r\ninterface StatisticsState {\r\n\r\n}\r\n\r\nclass Statistics extends React.Component<StatisticsProps, StatisticsState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    static defaultProps = {};\r\n\r\n    render() {\r\n        var subTab = [\r\n            {tabName:\"综合素质活动库统计\",tabContent:<ActivitiesLibChart /> },\r\n            {tabName:\"学生活跃度\",tabContent:<ActiveDegreeChart />},\r\n        ];\r\n\r\n        return (\r\n            <div>\r\n                <AdminBasicInfo />\r\n                <div className=\"am-margin-top block-box-shadows-0\">\r\n                    <CardTabs tabs={subTab} />\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport = Statistics\n\n\n/** WEBPACK FOOTER **\n ** ./pages/AdminPage/Statistics/Statistics.tsx\n **/","import * as React from 'react'\r\n// 引入 ECharts 主模块\r\nvar echarts = require('echarts/lib/echarts')\r\nimport * as ajaxUtil from '../../../../common/ajaxUtil'\r\nimport * as ActionTypes from '../../../../actions/AdminPage/AdminPageActionTypes'\r\n// 引入饼图\r\nrequire('echarts/lib/chart/pie')\r\nrequire('echarts/lib/component/title')\r\nrequire('echarts/lib/component/legend')\r\nrequire('echarts/lib/component/tooltip')\r\n\"use strict\";\r\n\r\ninterface ActivitiesLibChartProps extends React.Props<ActivitiesLibChart> {\r\n\r\n}\r\n\r\ninterface ActivitiesLibChartState {\r\n\r\n}\r\n\r\nclass ActivitiesLibChart extends React.Component<ActivitiesLibChartProps, ActivitiesLibChartState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    static defaultProps = {};\r\n\r\n    componentDidMount(){\r\n        var this_ = this;\r\n        ajaxUtil.getDataByActionID(ActionTypes.GET_ADMIN_ACTIVITYLIBSTATISTICS,function (response) {\r\n            var data = [];\r\n            response.result.eventCategoryStatistics.forEach(function(item,index){\r\n                data[index]={};\r\n                data[index].name = item.eventCategoryName;\r\n                data[index].value = item.count\r\n            });\r\n            this_.getEcharts(data);\r\n        });\r\n\r\n\r\n    }\r\n\r\n    getEcharts(chartData){\r\n        var containerHeight = 400;\r\n        $(\"#echartDom\").css(\"height\", containerHeight);\r\n        var myChart = echarts.init(document.getElementById('echartDom'));\r\n        var titleName = [];\r\n        for(var i=0;i<chartData.length;i++){\r\n            titleName.push(chartData[i].name)\r\n        }\r\n\r\n        // 指定图表的配置项和数据\r\n        var option = {\r\n            title : {\r\n                text: '综合素质活动统计',\r\n                x:'center'\r\n            },\r\n            tooltip : {\r\n                trigger: 'item',\r\n                formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n            },\r\n            legend: {\r\n                orient: 'vertical',\r\n                left: 'right',\r\n                data: titleName\r\n            },\r\n            series : [\r\n                {\r\n                    name: '活动',\r\n                    type: 'pie',\r\n                    radius : '55%',\r\n                    center: ['50%', '60%'],\r\n                    data:chartData,\r\n                    itemStyle: {\r\n                        emphasis: {\r\n                            shadowBlur: 10,\r\n                            shadowOffsetX: 0,\r\n                            shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        };\r\n\r\n\r\n        // 使用刚指定的配置项和数据显示图表。\r\n        myChart.setOption(option);\r\n        myChart.resize();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div  style={{margin:\"30px\"}}>\r\n                <div id=\"echartDom\"  ></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport = ActivitiesLibChart\n\n\n/** WEBPACK FOOTER **\n ** ./pages/AdminPage/Statistics/Component/ActivitiesLibChart.tsx\n **/","\r\n\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var echarts = require('../echarts');\r\n\r\n    require('./pie/PieSeries');\r\n    require('./pie/PieView');\r\n\r\n    require('../action/createDataSelectAction')('pie', [{\r\n        type: 'pieToggleSelect',\r\n        event: 'pieselectchanged',\r\n        method: 'toggleSelected'\r\n    }, {\r\n        type: 'pieSelect',\r\n        event: 'pieselected',\r\n        method: 'select'\r\n    }, {\r\n        type: 'pieUnSelect',\r\n        event: 'pieunselected',\r\n        method: 'unSelect'\r\n    }]);\r\n\r\n    echarts.registerVisual(zrUtil.curry(require('../visual/dataColor'), 'pie'));\r\n\r\n    echarts.registerLayout(zrUtil.curry(\r\n        require('./pie/pieLayout'), 'pie'\r\n    ));\r\n\r\n    echarts.registerProcessor(zrUtil.curry(require('../processor/dataFilter'), 'pie'));\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/chart/pie.js\n ** module id = 709\n ** module chunks = 29\n **/","'use strict';\r\n\r\n\r\n    var List = require('../../data/List');\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var modelUtil = require('../../util/model');\r\n    var completeDimensions = require('../../data/helper/completeDimensions');\r\n\r\n    var dataSelectableMixin = require('../../component/helper/selectableMixin');\r\n\r\n    var PieSeries = require('../../echarts').extendSeriesModel({\r\n\r\n        type: 'series.pie',\r\n\r\n        // Overwrite\r\n        init: function (option) {\r\n            PieSeries.superApply(this, 'init', arguments);\r\n\r\n            // Enable legend selection for each data item\r\n            // Use a function instead of direct access because data reference may changed\r\n            this.legendDataProvider = function () {\r\n                return this._dataBeforeProcessed;\r\n            };\r\n\r\n            this.updateSelectedMap(option.data);\r\n\r\n            this._defaultLabelLine(option);\r\n        },\r\n\r\n        // Overwrite\r\n        mergeOption: function (newOption) {\r\n            PieSeries.superCall(this, 'mergeOption', newOption);\r\n            this.updateSelectedMap(this.option.data);\r\n        },\r\n\r\n        getInitialData: function (option, ecModel) {\r\n            var dimensions = completeDimensions(['value'], option.data);\r\n            var list = new List(dimensions, this);\r\n            list.initData(option.data);\r\n            return list;\r\n        },\r\n\r\n        // Overwrite\r\n        getDataParams: function (dataIndex) {\r\n            var data = this._data;\r\n            var params = PieSeries.superCall(this, 'getDataParams', dataIndex);\r\n            var sum = data.getSum('value');\r\n            // FIXME toFixed?\r\n            //\r\n            // Percent is 0 if sum is 0\r\n            params.percent = !sum ? 0 : +(data.get('value', dataIndex) / sum * 100).toFixed(2);\r\n\r\n            params.$vars.push('percent');\r\n            return params;\r\n        },\r\n\r\n        _defaultLabelLine: function (option) {\r\n            // Extend labelLine emphasis\r\n            modelUtil.defaultEmphasis(option.labelLine, ['show']);\r\n\r\n            var labelLineNormalOpt = option.labelLine.normal;\r\n            var labelLineEmphasisOpt = option.labelLine.emphasis;\r\n            // Not show label line if `label.normal.show = false`\r\n            labelLineNormalOpt.show = labelLineNormalOpt.show\r\n                && option.label.normal.show;\r\n            labelLineEmphasisOpt.show = labelLineEmphasisOpt.show\r\n                && option.label.emphasis.show;\r\n        },\r\n\r\n        defaultOption: {\r\n            zlevel: 0,\r\n            z: 2,\r\n            legendHoverLink: true,\r\n\r\n            hoverAnimation: true,\r\n            // 默认全局居中\r\n            center: ['50%', '50%'],\r\n            radius: [0, '75%'],\r\n            // 默认顺时针\r\n            clockwise: true,\r\n            startAngle: 90,\r\n            // 最小角度改为0\r\n            minAngle: 0,\r\n            // 选中是扇区偏移量\r\n            selectedOffset: 10,\r\n\r\n            // If use strategy to avoid label overlapping\r\n            avoidLabelOverlap: true,\r\n            // 选择模式，默认关闭，可选single，multiple\r\n            // selectedMode: false,\r\n            // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\r\n            // roseType: null,\r\n\r\n            label: {\r\n                normal: {\r\n                    // If rotate around circle\r\n                    rotate: false,\r\n                    show: true,\r\n                    // 'outer', 'inside', 'center'\r\n                    position: 'outer'\r\n                    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\r\n                    // textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE\r\n                    // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\r\n                },\r\n                emphasis: {}\r\n            },\r\n            // Enabled when label.normal.position is 'outer'\r\n            labelLine: {\r\n                normal: {\r\n                    show: true,\r\n                    // 引导线两段中的第一段长度\r\n                    length: 15,\r\n                    // 引导线两段中的第二段长度\r\n                    length2: 15,\r\n                    smooth: false,\r\n                    lineStyle: {\r\n                        // color: 各异,\r\n                        width: 1,\r\n                        type: 'solid'\r\n                    }\r\n                }\r\n            },\r\n            itemStyle: {\r\n                normal: {\r\n                    borderWidth: 1\r\n                },\r\n                emphasis: {}\r\n            },\r\n\r\n            animationEasing: 'cubicOut',\r\n\r\n            data: []\r\n        }\r\n    });\r\n\r\n    zrUtil.mixin(PieSeries, dataSelectableMixin);\r\n\r\n    module.exports = PieSeries;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/chart/pie/PieSeries.js\n ** module id = 710\n ** module chunks = 29\n **/","/**\r\n * Data selectable mixin for chart series.\r\n * To eanble data select, option of series must have `selectedMode`.\r\n * And each data item will use `selected` to toggle itself selected status\r\n *\r\n * @module echarts/chart/helper/DataSelectable\r\n */\r\n\r\n\r\n    var zrUtil = require('zrender/lib/core/util');\r\n\r\n    module.exports = {\r\n\r\n        updateSelectedMap: function (targetList) {\r\n            this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\r\n                targetMap[target.name] = target;\r\n                return targetMap;\r\n            }, {});\r\n        },\r\n        /**\r\n         * @param {string} name\r\n         */\r\n        // PENGING If selectedMode is null ?\r\n        select: function (name) {\r\n            var targetMap = this._selectTargetMap;\r\n            var target = targetMap[name];\r\n            var selectedMode = this.get('selectedMode');\r\n            if (selectedMode === 'single') {\r\n                zrUtil.each(targetMap, function (target) {\r\n                    target.selected = false;\r\n                });\r\n            }\r\n            target && (target.selected = true);\r\n        },\r\n\r\n        /**\r\n         * @param {string} name\r\n         */\r\n        unSelect: function (name) {\r\n            var target = this._selectTargetMap[name];\r\n            // var selectedMode = this.get('selectedMode');\r\n            // selectedMode !== 'single' && target && (target.selected = false);\r\n            target && (target.selected = false);\r\n        },\r\n\r\n        /**\r\n         * @param {string} name\r\n         */\r\n        toggleSelected: function (name) {\r\n            var target = this._selectTargetMap[name];\r\n            if (target != null) {\r\n                this[target.selected ? 'unSelect' : 'select'](name);\r\n                return target.selected;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @param {string} name\r\n         */\r\n        isSelected: function (name) {\r\n            var target = this._selectTargetMap[name];\r\n            return target && target.selected;\r\n        }\r\n    };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/component/helper/selectableMixin.js\n ** module id = 711\n ** module chunks = 29\n **/","\r\n\r\n    var graphic = require('../../util/graphic');\r\n    var zrUtil = require('zrender/lib/core/util');\r\n\r\n    /**\r\n     * @param {module:echarts/model/Series} seriesModel\r\n     * @param {boolean} hasAnimation\r\n     * @inner\r\n     */\r\n    function updateDataSelected(uid, seriesModel, hasAnimation, api) {\r\n        var data = seriesModel.getData();\r\n        var dataIndex = this.dataIndex;\r\n        var name = data.getName(dataIndex);\r\n        var selectedOffset = seriesModel.get('selectedOffset');\r\n\r\n        api.dispatchAction({\r\n            type: 'pieToggleSelect',\r\n            from: uid,\r\n            name: name,\r\n            seriesId: seriesModel.id\r\n        });\r\n\r\n        data.each(function (idx) {\r\n            toggleItemSelected(\r\n                data.getItemGraphicEl(idx),\r\n                data.getItemLayout(idx),\r\n                seriesModel.isSelected(data.getName(idx)),\r\n                selectedOffset,\r\n                hasAnimation\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param {module:zrender/graphic/Sector} el\r\n     * @param {Object} layout\r\n     * @param {boolean} isSelected\r\n     * @param {number} selectedOffset\r\n     * @param {boolean} hasAnimation\r\n     * @inner\r\n     */\r\n    function toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\r\n        var midAngle = (layout.startAngle + layout.endAngle) / 2;\r\n\r\n        var dx = Math.cos(midAngle);\r\n        var dy = Math.sin(midAngle);\r\n\r\n        var offset = isSelected ? selectedOffset : 0;\r\n        var position = [dx * offset, dy * offset];\r\n\r\n        hasAnimation\r\n            // animateTo will stop revious animation like update transition\r\n            ? el.animate()\r\n                .when(200, {\r\n                    position: position\r\n                })\r\n                .start('bounceOut')\r\n            : el.attr('position', position);\r\n    }\r\n\r\n    /**\r\n     * Piece of pie including Sector, Label, LabelLine\r\n     * @constructor\r\n     * @extends {module:zrender/graphic/Group}\r\n     */\r\n    function PiePiece(data, idx) {\r\n\r\n        graphic.Group.call(this);\r\n\r\n        var sector = new graphic.Sector({\r\n            z2: 2\r\n        });\r\n        var polyline = new graphic.Polyline();\r\n        var text = new graphic.Text();\r\n        this.add(sector);\r\n        this.add(polyline);\r\n        this.add(text);\r\n\r\n        this.updateData(data, idx, true);\r\n\r\n        // Hover to change label and labelLine\r\n        function onEmphasis() {\r\n            polyline.ignore = polyline.hoverIgnore;\r\n            text.ignore = text.hoverIgnore;\r\n        }\r\n        function onNormal() {\r\n            polyline.ignore = polyline.normalIgnore;\r\n            text.ignore = text.normalIgnore;\r\n        }\r\n        this.on('emphasis', onEmphasis)\r\n            .on('normal', onNormal)\r\n            .on('mouseover', onEmphasis)\r\n            .on('mouseout', onNormal);\r\n    }\r\n\r\n    var piePieceProto = PiePiece.prototype;\r\n\r\n    function getLabelStyle(data, idx, state, labelModel, labelPosition) {\r\n        var textStyleModel = labelModel.getModel('textStyle');\r\n        var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\r\n        return {\r\n            fill: textStyleModel.getTextColor()\r\n                || (isLabelInside ? '#fff' : data.getItemVisual(idx, 'color')),\r\n            opacity: data.getItemVisual(idx, 'opacity'),\r\n            textFont: textStyleModel.getFont(),\r\n            text: zrUtil.retrieve(\r\n                data.hostModel.getFormattedLabel(idx, state), data.getName(idx)\r\n            )\r\n        };\r\n    }\r\n\r\n    piePieceProto.updateData = function (data, idx, firstCreate) {\r\n\r\n        var sector = this.childAt(0);\r\n\r\n        var seriesModel = data.hostModel;\r\n        var itemModel = data.getItemModel(idx);\r\n        var layout = data.getItemLayout(idx);\r\n        var sectorShape = zrUtil.extend({}, layout);\r\n        sectorShape.label = null;\r\n        if (firstCreate) {\r\n            sector.setShape(sectorShape);\r\n            sector.shape.endAngle = layout.startAngle;\r\n            graphic.updateProps(sector, {\r\n                shape: {\r\n                    endAngle: layout.endAngle\r\n                }\r\n            }, seriesModel, idx);\r\n        }\r\n        else {\r\n            graphic.updateProps(sector, {\r\n                shape: sectorShape\r\n            }, seriesModel, idx);\r\n        }\r\n\r\n        // Update common style\r\n        var itemStyleModel = itemModel.getModel('itemStyle');\r\n        var visualColor = data.getItemVisual(idx, 'color');\r\n\r\n        sector.useStyle(\r\n            zrUtil.defaults(\r\n                {\r\n                    lineJoin: 'bevel',\r\n                    fill: visualColor\r\n                },\r\n                itemStyleModel.getModel('normal').getItemStyle()\r\n            )\r\n        );\r\n        sector.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\r\n\r\n        // Toggle selected\r\n        toggleItemSelected(\r\n            this,\r\n            data.getItemLayout(idx),\r\n            itemModel.get('selected'),\r\n            seriesModel.get('selectedOffset'),\r\n            seriesModel.get('animation')\r\n        );\r\n\r\n        function onEmphasis() {\r\n            // Sector may has animation of updating data. Force to move to the last frame\r\n            // Or it may stopped on the wrong shape\r\n            sector.stopAnimation(true);\r\n            sector.animateTo({\r\n                shape: {\r\n                    r: layout.r + 10\r\n                }\r\n            }, 300, 'elasticOut');\r\n        }\r\n        function onNormal() {\r\n            sector.stopAnimation(true);\r\n            sector.animateTo({\r\n                shape: {\r\n                    r: layout.r\r\n                }\r\n            }, 300, 'elasticOut');\r\n        }\r\n        sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\r\n        if (itemModel.get('hoverAnimation') && seriesModel.ifEnableAnimation()) {\r\n            sector\r\n                .on('mouseover', onEmphasis)\r\n                .on('mouseout', onNormal)\r\n                .on('emphasis', onEmphasis)\r\n                .on('normal', onNormal);\r\n        }\r\n\r\n        this._updateLabel(data, idx);\r\n\r\n        graphic.setHoverStyle(this);\r\n    };\r\n\r\n    piePieceProto._updateLabel = function (data, idx) {\r\n\r\n        var labelLine = this.childAt(1);\r\n        var labelText = this.childAt(2);\r\n\r\n        var seriesModel = data.hostModel;\r\n        var itemModel = data.getItemModel(idx);\r\n        var layout = data.getItemLayout(idx);\r\n        var labelLayout = layout.label;\r\n        var visualColor = data.getItemVisual(idx, 'color');\r\n\r\n        graphic.updateProps(labelLine, {\r\n            shape: {\r\n                points: labelLayout.linePoints || [\r\n                    [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]\r\n                ]\r\n            }\r\n        }, seriesModel, idx);\r\n\r\n        graphic.updateProps(labelText, {\r\n            style: {\r\n                x: labelLayout.x,\r\n                y: labelLayout.y\r\n            }\r\n        }, seriesModel, idx);\r\n        labelText.attr({\r\n            style: {\r\n                textVerticalAlign: labelLayout.verticalAlign,\r\n                textAlign: labelLayout.textAlign,\r\n                textFont: labelLayout.font\r\n            },\r\n            rotation: labelLayout.rotation,\r\n            origin: [labelLayout.x, labelLayout.y],\r\n            z2: 10\r\n        });\r\n\r\n        var labelModel = itemModel.getModel('label.normal');\r\n        var labelHoverModel = itemModel.getModel('label.emphasis');\r\n        var labelLineModel = itemModel.getModel('labelLine.normal');\r\n        var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\r\n        var labelPosition = labelModel.get('position') || labelHoverModel.get('position');\r\n\r\n        labelText.setStyle(getLabelStyle(data, idx, 'normal', labelModel, labelPosition));\r\n\r\n        labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\r\n        labelText.hoverIgnore = !labelHoverModel.get('show');\r\n\r\n        labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\r\n        labelLine.hoverIgnore = !labelLineHoverModel.get('show');\r\n\r\n        // Default use item visual color\r\n        labelLine.setStyle({\r\n            stroke: visualColor,\r\n            opacity: data.getItemVisual(idx, 'opacity')\r\n        });\r\n        labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\r\n\r\n        labelText.hoverStyle = getLabelStyle(data, idx, 'emphasis', labelHoverModel, labelPosition);\r\n        labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\r\n\r\n        var smooth = labelLineModel.get('smooth');\r\n        if (smooth && smooth === true) {\r\n            smooth = 0.4;\r\n        }\r\n        labelLine.setShape({\r\n            smooth: smooth\r\n        });\r\n    };\r\n\r\n    zrUtil.inherits(PiePiece, graphic.Group);\r\n\r\n\r\n    // Pie view\r\n    var Pie = require('../../view/Chart').extend({\r\n\r\n        type: 'pie',\r\n\r\n        init: function () {\r\n            var sectorGroup = new graphic.Group();\r\n            this._sectorGroup = sectorGroup;\r\n        },\r\n\r\n        render: function (seriesModel, ecModel, api, payload) {\r\n            if (payload && (payload.from === this.uid)) {\r\n                return;\r\n            }\r\n\r\n            var data = seriesModel.getData();\r\n            var oldData = this._data;\r\n            var group = this.group;\r\n\r\n            var hasAnimation = ecModel.get('animation');\r\n            var isFirstRender = !oldData;\r\n\r\n            var onSectorClick = zrUtil.curry(\r\n                updateDataSelected, this.uid, seriesModel, hasAnimation, api\r\n            );\r\n\r\n            var selectedMode = seriesModel.get('selectedMode');\r\n\r\n            data.diff(oldData)\r\n                .add(function (idx) {\r\n                    var piePiece = new PiePiece(data, idx);\r\n                    if (isFirstRender) {\r\n                        piePiece.eachChild(function (child) {\r\n                            child.stopAnimation(true);\r\n                        });\r\n                    }\r\n\r\n                    selectedMode && piePiece.on('click', onSectorClick);\r\n\r\n                    data.setItemGraphicEl(idx, piePiece);\r\n\r\n                    group.add(piePiece);\r\n                })\r\n                .update(function (newIdx, oldIdx) {\r\n                    var piePiece = oldData.getItemGraphicEl(oldIdx);\r\n\r\n                    piePiece.updateData(data, newIdx);\r\n\r\n                    piePiece.off('click');\r\n                    selectedMode && piePiece.on('click', onSectorClick);\r\n                    group.add(piePiece);\r\n                    data.setItemGraphicEl(newIdx, piePiece);\r\n                })\r\n                .remove(function (idx) {\r\n                    var piePiece = oldData.getItemGraphicEl(idx);\r\n                    group.remove(piePiece);\r\n                })\r\n                .execute();\r\n\r\n            if (hasAnimation && isFirstRender && data.count() > 0) {\r\n                var shape = data.getItemLayout(0);\r\n                var r = Math.max(api.getWidth(), api.getHeight()) / 2;\r\n\r\n                var removeClipPath = zrUtil.bind(group.removeClipPath, group);\r\n                group.setClipPath(this._createClipPath(\r\n                    shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel\r\n                ));\r\n            }\r\n\r\n            this._data = data;\r\n        },\r\n\r\n        _createClipPath: function (\r\n            cx, cy, r, startAngle, clockwise, cb, seriesModel\r\n        ) {\r\n            var clipPath = new graphic.Sector({\r\n                shape: {\r\n                    cx: cx,\r\n                    cy: cy,\r\n                    r0: 0,\r\n                    r: r,\r\n                    startAngle: startAngle,\r\n                    endAngle: startAngle,\r\n                    clockwise: clockwise\r\n                }\r\n            });\r\n\r\n            graphic.initProps(clipPath, {\r\n                shape: {\r\n                    endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\r\n                }\r\n            }, seriesModel, cb);\r\n\r\n            return clipPath;\r\n        }\r\n    });\r\n\r\n    module.exports = Pie;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/chart/pie/PieView.js\n ** module id = 712\n ** module chunks = 29\n **/","\r\n    var echarts = require('../echarts');\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    module.exports = function (seriesType, actionInfos) {\r\n        zrUtil.each(actionInfos, function (actionInfo) {\r\n            actionInfo.update = 'updateView';\r\n            /**\r\n             * @payload\r\n             * @property {string} seriesName\r\n             * @property {string} name\r\n             */\r\n            echarts.registerAction(actionInfo, function (payload, ecModel) {\r\n                var selected = {};\r\n                ecModel.eachComponent(\r\n                    {mainType: 'series', subType: seriesType, query: payload},\r\n                    function (seriesModel) {\r\n                        if (seriesModel[actionInfo.method]) {\r\n                            seriesModel[actionInfo.method](payload.name);\r\n                        }\r\n                        var data = seriesModel.getData();\r\n                        // Create selected map\r\n                        data.each(function (idx) {\r\n                            var name = data.getName(idx);\r\n                            selected[name] = seriesModel.isSelected(name) || false;\r\n                        });\r\n                    }\r\n                );\r\n                return {\r\n                    name: payload.name,\r\n                    selected: selected\r\n                };\r\n            });\r\n        });\r\n    };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/action/createDataSelectAction.js\n ** module id = 713\n ** module chunks = 29\n **/","// Pick color from palette for each data item\r\n\r\n\r\n    module.exports = function (seriesType, ecModel) {\r\n        // Pie and funnel may use diferrent scope\r\n        var paletteScope = {};\r\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\r\n            var dataAll = seriesModel.getRawData();\r\n            var idxMap = {};\r\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\r\n                var data = seriesModel.getData();\r\n                data.each(function (idx) {\r\n                    var rawIdx = data.getRawIndex(idx);\r\n                    idxMap[rawIdx] = idx;\r\n                });\r\n                dataAll.each(function (rawIdx) {\r\n                    // FIXME Performance\r\n                    var itemModel = dataAll.getItemModel(rawIdx);\r\n                    var filteredIdx = idxMap[rawIdx];\r\n                    // If series.itemStyle.normal.color is a function. itemVisual may be encoded\r\n                    var singleDataColor = data.getItemVisual(filteredIdx, 'color', true);\r\n\r\n                    if (!singleDataColor) {\r\n                        var color = itemModel.get('itemStyle.normal.color')\r\n                            || seriesModel.getColorFromPalette(dataAll.getName(rawIdx), paletteScope);\r\n                        // Legend may use the visual info in data before processed\r\n                        dataAll.setItemVisual(rawIdx, 'color', color);\r\n                        data.setItemVisual(filteredIdx, 'color', color);\r\n                    }\r\n                    else {\r\n                        // Set data all color for legend\r\n                        dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/visual/dataColor.js\n ** module id = 714\n ** module chunks = 29 53 54\n **/","// TODO minAngle\r\n\r\n\r\n\r\n    var numberUtil = require('../../util/number');\r\n    var parsePercent = numberUtil.parsePercent;\r\n    var labelLayout = require('./labelLayout');\r\n    var zrUtil = require('zrender/lib/core/util');\r\n\r\n    var PI2 = Math.PI * 2;\r\n    var RADIAN = Math.PI / 180;\r\n\r\n    module.exports = function (seriesType, ecModel, api, payload) {\r\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\r\n            var center = seriesModel.get('center');\r\n            var radius = seriesModel.get('radius');\r\n\r\n            if (!zrUtil.isArray(radius)) {\r\n                radius = [0, radius];\r\n            }\r\n            if (!zrUtil.isArray(center)) {\r\n                center = [center, center];\r\n            }\r\n\r\n            var width = api.getWidth();\r\n            var height = api.getHeight();\r\n            var size = Math.min(width, height);\r\n            var cx = parsePercent(center[0], width);\r\n            var cy = parsePercent(center[1], height);\r\n            var r0 = parsePercent(radius[0], size / 2);\r\n            var r = parsePercent(radius[1], size / 2);\r\n\r\n            var data = seriesModel.getData();\r\n\r\n            var startAngle = -seriesModel.get('startAngle') * RADIAN;\r\n\r\n            var minAngle = seriesModel.get('minAngle') * RADIAN;\r\n\r\n            var sum = data.getSum('value');\r\n            // Sum may be 0\r\n            var unitRadian = Math.PI / (sum || data.count()) * 2;\r\n\r\n            var clockwise = seriesModel.get('clockwise');\r\n\r\n            var roseType = seriesModel.get('roseType');\r\n\r\n            // [0...max]\r\n            var extent = data.getDataExtent('value');\r\n            extent[0] = 0;\r\n\r\n            // In the case some sector angle is smaller than minAngle\r\n            var restAngle = PI2;\r\n            var valueSumLargerThanMinAngle = 0;\r\n\r\n            var currentAngle = startAngle;\r\n\r\n            var dir = clockwise ? 1 : -1;\r\n            data.each('value', function (value, idx) {\r\n                var angle;\r\n                // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\r\n                if (roseType !== 'area') {\r\n                    angle = sum === 0 ? unitRadian : (value * unitRadian);\r\n                }\r\n                else {\r\n                    angle = PI2 / (data.count() || 1);\r\n                }\r\n\r\n                if (angle < minAngle) {\r\n                    angle = minAngle;\r\n                    restAngle -= minAngle;\r\n                }\r\n                else {\r\n                    valueSumLargerThanMinAngle += value;\r\n                }\r\n\r\n                var endAngle = currentAngle + dir * angle;\r\n                data.setItemLayout(idx, {\r\n                    angle: angle,\r\n                    startAngle: currentAngle,\r\n                    endAngle: endAngle,\r\n                    clockwise: clockwise,\r\n                    cx: cx,\r\n                    cy: cy,\r\n                    r0: r0,\r\n                    r: roseType\r\n                        ? numberUtil.linearMap(value, extent, [r0, r])\r\n                        : r\r\n                });\r\n\r\n                currentAngle = endAngle;\r\n            }, true);\r\n\r\n            // Some sector is constrained by minAngle\r\n            // Rest sectors needs recalculate angle\r\n            if (restAngle < PI2) {\r\n                // Average the angle if rest angle is not enough after all angles is\r\n                // Constrained by minAngle\r\n                if (restAngle <= 1e-3) {\r\n                    var angle = PI2 / data.count();\r\n                    data.each(function (idx) {\r\n                        var layout = data.getItemLayout(idx);\r\n                        layout.startAngle = startAngle + dir * idx * angle;\r\n                        layout.endAngle = startAngle + dir * (idx + 1) * angle;\r\n                    });\r\n                }\r\n                else {\r\n                    unitRadian = restAngle / valueSumLargerThanMinAngle;\r\n                    currentAngle = startAngle;\r\n                    data.each('value', function (value, idx) {\r\n                        var layout = data.getItemLayout(idx);\r\n                        var angle = layout.angle === minAngle\r\n                            ? minAngle : value * unitRadian;\r\n                        layout.startAngle = currentAngle;\r\n                        layout.endAngle = currentAngle + dir * angle;\r\n                        currentAngle += angle;\r\n                    });\r\n                }\r\n            }\r\n\r\n            labelLayout(seriesModel, r, width, height);\r\n        });\r\n    };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/chart/pie/pieLayout.js\n ** module id = 715\n ** module chunks = 29\n **/","'use strict';\r\n// FIXME emphasis label position is not same with normal label position\r\n\r\n\r\n    var textContain = require('zrender/lib/contain/text');\r\n\r\n    function adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\r\n        list.sort(function (a, b) {\r\n            return a.y - b.y;\r\n        });\r\n\r\n        // 压\r\n        function shiftDown(start, end, delta, dir) {\r\n            for (var j = start; j < end; j++) {\r\n                list[j].y += delta;\r\n                if (j > start\r\n                    && j + 1 < end\r\n                    && list[j + 1].y > list[j].y + list[j].height\r\n                ) {\r\n                    shiftUp(j, delta / 2);\r\n                    return;\r\n                }\r\n            }\r\n\r\n            shiftUp(end - 1, delta / 2);\r\n        }\r\n\r\n        // 弹\r\n        function shiftUp(end, delta) {\r\n            for (var j = end; j >= 0; j--) {\r\n                list[j].y -= delta;\r\n                if (j > 0\r\n                    && list[j].y > list[j - 1].y + list[j - 1].height\r\n                ) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        function changeX(list, isDownList, cx, cy, r, dir) {\r\n            var lastDeltaX = dir > 0\r\n                ? isDownList                // 右侧\r\n                    ? Number.MAX_VALUE      // 下\r\n                    : 0                     // 上\r\n                : isDownList                // 左侧\r\n                    ? Number.MAX_VALUE      // 下\r\n                    : 0;                    // 上\r\n\r\n            for (var i = 0, l = list.length; i < l; i++) {\r\n                // Not change x for center label\r\n                if (list[i].position === 'center') {\r\n                    continue;\r\n                }\r\n                var deltaY = Math.abs(list[i].y - cy);\r\n                var length = list[i].len;\r\n                var length2 = list[i].len2;\r\n                var deltaX = (deltaY < r + length)\r\n                    ? Math.sqrt(\r\n                          (r + length + length2) * (r + length + length2)\r\n                          - deltaY * deltaY\r\n                      )\r\n                    : Math.abs(list[i].x - cx);\r\n                if (isDownList && deltaX >= lastDeltaX) {\r\n                    // 右下，左下\r\n                    deltaX = lastDeltaX - 10;\r\n                }\r\n                if (!isDownList && deltaX <= lastDeltaX) {\r\n                    // 右上，左上\r\n                    deltaX = lastDeltaX + 10;\r\n                }\r\n\r\n                list[i].x = cx + deltaX * dir;\r\n                lastDeltaX = deltaX;\r\n            }\r\n        }\r\n\r\n        var lastY = 0;\r\n        var delta;\r\n        var len = list.length;\r\n        var upList = [];\r\n        var downList = [];\r\n        for (var i = 0; i < len; i++) {\r\n            delta = list[i].y - lastY;\r\n            if (delta < 0) {\r\n                shiftDown(i, len, -delta, dir);\r\n            }\r\n            lastY = list[i].y + list[i].height;\r\n        }\r\n        if (viewHeight - lastY < 0) {\r\n            shiftUp(len - 1, lastY - viewHeight);\r\n        }\r\n        for (var i = 0; i < len; i++) {\r\n            if (list[i].y >= cy) {\r\n                downList.push(list[i]);\r\n            }\r\n            else {\r\n                upList.push(list[i]);\r\n            }\r\n        }\r\n        changeX(upList, false, cx, cy, r, dir);\r\n        changeX(downList, true, cx, cy, r, dir);\r\n    }\r\n\r\n    function avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\r\n        var leftList = [];\r\n        var rightList = [];\r\n        for (var i = 0; i < labelLayoutList.length; i++) {\r\n            if (labelLayoutList[i].x < cx) {\r\n                leftList.push(labelLayoutList[i]);\r\n            }\r\n            else {\r\n                rightList.push(labelLayoutList[i]);\r\n            }\r\n        }\r\n\r\n        adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\r\n        adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\r\n\r\n        for (var i = 0; i < labelLayoutList.length; i++) {\r\n            var linePoints = labelLayoutList[i].linePoints;\r\n            if (linePoints) {\r\n                var dist = linePoints[1][0] - linePoints[2][0];\r\n                if (labelLayoutList[i].x < cx) {\r\n                    linePoints[2][0] = labelLayoutList[i].x + 3;\r\n                }\r\n                else {\r\n                    linePoints[2][0] = labelLayoutList[i].x - 3;\r\n                }\r\n                linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\r\n                linePoints[1][0] = linePoints[2][0] + dist;\r\n            }\r\n        }\r\n    }\r\n\r\n    module.exports = function (seriesModel, r, viewWidth, viewHeight) {\r\n        var data = seriesModel.getData();\r\n        var labelLayoutList = [];\r\n        var cx;\r\n        var cy;\r\n        var hasLabelRotate = false;\r\n\r\n        data.each(function (idx) {\r\n            var layout = data.getItemLayout(idx);\r\n\r\n            var itemModel = data.getItemModel(idx);\r\n            var labelModel = itemModel.getModel('label.normal');\r\n            // Use position in normal or emphasis\r\n            var labelPosition = labelModel.get('position') || itemModel.get('label.emphasis.position');\r\n\r\n            var labelLineModel = itemModel.getModel('labelLine.normal');\r\n            var labelLineLen = labelLineModel.get('length');\r\n            var labelLineLen2 = labelLineModel.get('length2');\r\n\r\n            var midAngle = (layout.startAngle + layout.endAngle) / 2;\r\n            var dx = Math.cos(midAngle);\r\n            var dy = Math.sin(midAngle);\r\n\r\n            var textX;\r\n            var textY;\r\n            var linePoints;\r\n            var textAlign;\r\n\r\n            cx = layout.cx;\r\n            cy = layout.cy;\r\n\r\n            var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\r\n            if (labelPosition === 'center') {\r\n                textX = layout.cx;\r\n                textY = layout.cy;\r\n                textAlign = 'center';\r\n            }\r\n            else {\r\n                var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\r\n                var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\r\n\r\n                textX = x1 + dx * 3;\r\n                textY = y1 + dy * 3;\r\n\r\n                if (!isLabelInside) {\r\n                    // For roseType\r\n                    var x2 = x1 + dx * (labelLineLen + r - layout.r);\r\n                    var y2 = y1 + dy * (labelLineLen + r - layout.r);\r\n                    var x3 = x2 + ((dx < 0 ? -1 : 1) * labelLineLen2);\r\n                    var y3 = y2;\r\n\r\n                    textX = x3 + (dx < 0 ? -5 : 5);\r\n                    textY = y3;\r\n                    linePoints = [[x1, y1], [x2, y2], [x3, y3]];\r\n                }\r\n\r\n                textAlign = isLabelInside ? 'center' : (dx > 0 ? 'left' : 'right');\r\n            }\r\n            var font = labelModel.getModel('textStyle').getFont();\r\n\r\n            var labelRotate = labelModel.get('rotate')\r\n                ? (dx < 0 ? -midAngle + Math.PI : -midAngle) : 0;\r\n            var text = seriesModel.getFormattedLabel(idx, 'normal')\r\n                        || data.getName(idx);\r\n            var textRect = textContain.getBoundingRect(\r\n                text, font, textAlign, 'top'\r\n            );\r\n            hasLabelRotate = !!labelRotate;\r\n            layout.label = {\r\n                x: textX,\r\n                y: textY,\r\n                position: labelPosition,\r\n                height: textRect.height,\r\n                len: labelLineLen,\r\n                len2: labelLineLen2,\r\n                linePoints: linePoints,\r\n                textAlign: textAlign,\r\n                verticalAlign: 'middle',\r\n                font: font,\r\n                rotation: labelRotate\r\n            };\r\n\r\n            // Not layout the inside label\r\n            if (!isLabelInside) {\r\n                labelLayoutList.push(layout.label);\r\n            }\r\n        });\r\n        if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\r\n            avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\r\n        }\r\n    };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/chart/pie/labelLayout.js\n ** module id = 716\n ** module chunks = 29\n **/","\r\n    module.exports = function (seriesType, ecModel) {\r\n        var legendModels = ecModel.findComponents({\r\n            mainType: 'legend'\r\n        });\r\n        if (!legendModels || !legendModels.length) {\r\n            return;\r\n        }\r\n        ecModel.eachSeriesByType(seriesType, function (series) {\r\n            var data = series.getData();\r\n            data.filterSelf(function (idx) {\r\n                var name = data.getName(idx);\r\n                // If in any legend component the status is not selected.\r\n                for (var i = 0; i < legendModels.length; i++) {\r\n                    if (!legendModels[i].isSelected(name)) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            }, this);\r\n        }, this);\r\n    };\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/processor/dataFilter.js\n ** module id = 717\n ** module chunks = 29 53 54\n **/","// FIXME Better way to pack data in graphic element\r\n\r\n\r\n    require('./tooltip/TooltipModel');\r\n\r\n    require('./tooltip/TooltipView');\r\n\r\n    // Show tip action\r\n    /**\r\n     * @action\r\n     * @property {string} type\r\n     * @property {number} seriesIndex\r\n     * @property {number} dataIndex\r\n     * @property {number} [x]\r\n     * @property {number} [y]\r\n     */\r\n    require('../echarts').registerAction(\r\n        {\r\n            type: 'showTip',\r\n            event: 'showTip',\r\n            update: 'none'\r\n        },\r\n        // noop\r\n        function () {}\r\n    );\r\n    // Hide tip action\r\n    require('../echarts').registerAction(\r\n        {\r\n            type: 'hideTip',\r\n            event: 'hideTip',\r\n            update: 'none'\r\n        },\r\n        // noop\r\n        function () {}\r\n    );\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/component/tooltip.js\n ** module id = 718\n ** module chunks = 29 37 53 54\n **/","\r\n\r\n    require('../../echarts').extendComponentModel({\r\n\r\n        type: 'tooltip',\r\n\r\n        defaultOption: {\r\n            zlevel: 0,\r\n\r\n            z: 8,\r\n\r\n            show: true,\r\n\r\n            // tooltip主体内容\r\n            showContent: true,\r\n\r\n            // 触发类型，默认数据触发，见下图，可选为：'item' ¦ 'axis'\r\n            trigger: 'item',\r\n\r\n            // 触发条件，支持 'click' | 'mousemove'\r\n            triggerOn: 'mousemove',\r\n\r\n            // 是否永远显示 content\r\n            alwaysShowContent: false,\r\n\r\n            // 位置 {Array} | {Function}\r\n            // position: null\r\n\r\n            // 内容格式器：{string}（Template） ¦ {Function}\r\n            // formatter: null\r\n\r\n            showDelay: 0,\r\n\r\n            // 隐藏延迟，单位ms\r\n            hideDelay: 100,\r\n\r\n            // 动画变换时间，单位s\r\n            transitionDuration: 0.4,\r\n\r\n            enterable: false,\r\n\r\n            // 提示背景颜色，默认为透明度为0.7的黑色\r\n            backgroundColor: 'rgba(50,50,50,0.7)',\r\n\r\n            // 提示边框颜色\r\n            borderColor: '#333',\r\n\r\n            // 提示边框圆角，单位px，默认为4\r\n            borderRadius: 4,\r\n\r\n            // 提示边框线宽，单位px，默认为0（无边框）\r\n            borderWidth: 0,\r\n\r\n            // 提示内边距，单位px，默认各方向内边距为5，\r\n            // 接受数组分别设定上右下左边距，同css\r\n            padding: 5,\r\n\r\n            // Extra css text\r\n            extraCssText: '',\r\n\r\n            // 坐标轴指示器，坐标轴触发有效\r\n            axisPointer: {\r\n                // 默认为直线\r\n                // 可选为：'line' | 'shadow' | 'cross'\r\n                type: 'line',\r\n\r\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\r\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\r\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\r\n                // 极坐标系会默认选择 angle 轴\r\n                axis: 'auto',\r\n\r\n                animation: true,\r\n                animationDurationUpdate: 200,\r\n                animationEasingUpdate: 'exponentialOut',\r\n\r\n                // 直线指示器样式设置\r\n                lineStyle: {\r\n                    color: '#555',\r\n                    width: 1,\r\n                    type: 'solid'\r\n                },\r\n\r\n                crossStyle: {\r\n                    color: '#555',\r\n                    width: 1,\r\n                    type: 'dashed',\r\n\r\n                    // TODO formatter\r\n                    textStyle: {}\r\n                },\r\n\r\n                // 阴影指示器样式设置\r\n                shadowStyle: {\r\n                    color: 'rgba(150,150,150,0.3)'\r\n                }\r\n            },\r\n            textStyle: {\r\n                color: '#fff',\r\n                fontSize: 14\r\n            }\r\n        }\r\n    });\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/component/tooltip/TooltipModel.js\n ** module id = 719\n ** module chunks = 29 37 53 54\n **/","\r\n\r\n    var TooltipContent = require('./TooltipContent');\r\n    var graphic = require('../../util/graphic');\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var formatUtil = require('../../util/format');\r\n    var numberUtil = require('../../util/number');\r\n    var parsePercent = numberUtil.parsePercent;\r\n    var env = require('zrender/lib/core/env');\r\n    var Model = require('../../model/Model');\r\n\r\n    function dataEqual(a, b) {\r\n        if (!a || !b) {\r\n            return false;\r\n        }\r\n        var round = numberUtil.round;\r\n        return round(a[0]) === round(b[0])\r\n            && round(a[1]) === round(b[1]);\r\n    }\r\n    /**\r\n     * @inner\r\n     */\r\n    function makeLineShape(x1, y1, x2, y2) {\r\n        return {\r\n            x1: x1,\r\n            y1: y1,\r\n            x2: x2,\r\n            y2: y2\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @inner\r\n     */\r\n    function makeRectShape(x, y, width, height) {\r\n        return {\r\n            x: x,\r\n            y: y,\r\n            width: width,\r\n            height: height\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @inner\r\n     */\r\n    function makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\r\n        return {\r\n            cx: cx,\r\n            cy: cy,\r\n            r0: r0,\r\n            r: r,\r\n            startAngle: startAngle,\r\n            endAngle: endAngle,\r\n            clockwise: true\r\n        };\r\n    }\r\n\r\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight) {\r\n        var width = el.clientWidth;\r\n        var height = el.clientHeight;\r\n        var gap = 20;\r\n\r\n        if (x + width + gap > viewWidth) {\r\n            x -= width + gap;\r\n        }\r\n        else {\r\n            x += gap;\r\n        }\r\n        if (y + height + gap > viewHeight) {\r\n            y -= height + gap;\r\n        }\r\n        else {\r\n            y += gap;\r\n        }\r\n        return [x, y];\r\n    }\r\n\r\n    function calcTooltipPosition(position, rect, dom) {\r\n        var domWidth = dom.clientWidth;\r\n        var domHeight = dom.clientHeight;\r\n        var gap = 5;\r\n        var x = 0;\r\n        var y = 0;\r\n        var rectWidth = rect.width;\r\n        var rectHeight = rect.height;\r\n        switch (position) {\r\n            case 'inside':\r\n                x = rect.x + rectWidth / 2 - domWidth / 2;\r\n                y = rect.y + rectHeight / 2 - domHeight / 2;\r\n                break;\r\n            case 'top':\r\n                x = rect.x + rectWidth / 2 - domWidth / 2;\r\n                y = rect.y - domHeight - gap;\r\n                break;\r\n            case 'bottom':\r\n                x = rect.x + rectWidth / 2 - domWidth / 2;\r\n                y = rect.y + rectHeight + gap;\r\n                break;\r\n            case 'left':\r\n                x = rect.x - domWidth - gap;\r\n                y = rect.y + rectHeight / 2 - domHeight / 2;\r\n                break;\r\n            case 'right':\r\n                x = rect.x + rectWidth + gap;\r\n                y = rect.y + rectHeight / 2 - domHeight / 2;\r\n        }\r\n        return [x, y];\r\n    }\r\n\r\n    /**\r\n     * @param  {string|Function|Array.<number>} positionExpr\r\n     * @param  {number} x Mouse x\r\n     * @param  {number} y Mouse y\r\n     * @param  {module:echarts/component/tooltip/TooltipContent} content\r\n     * @param  {Object|<Array.<Object>} params\r\n     * @param  {module:zrender/Element} el target element\r\n     * @param  {module:echarts/ExtensionAPI} api\r\n     * @return {Array.<number>}\r\n     */\r\n    function updatePosition(positionExpr, x, y, content, params, el, api) {\r\n        var viewWidth = api.getWidth();\r\n        var viewHeight = api.getHeight();\r\n\r\n        var rect = el && el.getBoundingRect().clone();\r\n        el && rect.applyTransform(el.transform);\r\n        if (typeof positionExpr === 'function') {\r\n            // Callback of position can be an array or a string specify the position\r\n            positionExpr = positionExpr([x, y], params, content.el, rect);\r\n        }\r\n\r\n        if (zrUtil.isArray(positionExpr)) {\r\n            x = parsePercent(positionExpr[0], viewWidth);\r\n            y = parsePercent(positionExpr[1], viewHeight);\r\n        }\r\n        // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\r\n        else if (typeof positionExpr === 'string' && el) {\r\n            var pos = calcTooltipPosition(\r\n                positionExpr, rect, content.el\r\n            );\r\n            x = pos[0];\r\n            y = pos[1];\r\n        }\r\n        else {\r\n            var pos = refixTooltipPosition(\r\n                x, y, content.el, viewWidth, viewHeight\r\n            );\r\n            x = pos[0];\r\n            y = pos[1];\r\n        }\r\n\r\n        content.moveTo(x, y);\r\n    }\r\n\r\n    function ifSeriesSupportAxisTrigger(seriesModel) {\r\n        var coordSys = seriesModel.coordinateSystem;\r\n        var trigger = seriesModel.get('tooltip.trigger', true);\r\n        // Ignore series use item tooltip trigger and series coordinate system is not cartesian or\r\n        return !(!coordSys\r\n            || (coordSys.type !== 'cartesian2d' && coordSys.type !== 'polar' && coordSys.type !== 'singleAxis')\r\n            || trigger === 'item');\r\n    }\r\n\r\n    require('../../echarts').extendComponentView({\r\n\r\n        type: 'tooltip',\r\n\r\n        _axisPointers: {},\r\n\r\n        init: function (ecModel, api) {\r\n            if (env.node) {\r\n                return;\r\n            }\r\n            var tooltipContent = new TooltipContent(api.getDom(), api);\r\n            this._tooltipContent = tooltipContent;\r\n\r\n            api.on('showTip', this._manuallyShowTip, this);\r\n            api.on('hideTip', this._manuallyHideTip, this);\r\n        },\r\n\r\n        render: function (tooltipModel, ecModel, api) {\r\n            if (env.node) {\r\n                return;\r\n            }\r\n\r\n            // Reset\r\n            this.group.removeAll();\r\n\r\n            /**\r\n             * @type {Object}\r\n             * @private\r\n             */\r\n            this._axisPointers = {};\r\n\r\n            /**\r\n             * @private\r\n             * @type {module:echarts/component/tooltip/TooltipModel}\r\n             */\r\n            this._tooltipModel = tooltipModel;\r\n\r\n            /**\r\n             * @private\r\n             * @type {module:echarts/model/Global}\r\n             */\r\n            this._ecModel = ecModel;\r\n\r\n            /**\r\n             * @private\r\n             * @type {module:echarts/ExtensionAPI}\r\n             */\r\n            this._api = api;\r\n\r\n            /**\r\n             * @type {Object}\r\n             * @private\r\n             */\r\n            this._lastHover = {\r\n                // data\r\n                // payloadBatch\r\n            };\r\n\r\n            var tooltipContent = this._tooltipContent;\r\n            tooltipContent.update();\r\n            tooltipContent.enterable = tooltipModel.get('enterable');\r\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\r\n\r\n            /**\r\n             * @type {Object.<string, Array>}\r\n             */\r\n            this._seriesGroupByAxis = this._prepareAxisTriggerData(\r\n                tooltipModel, ecModel\r\n            );\r\n\r\n            var crossText = this._crossText;\r\n            if (crossText) {\r\n                this.group.add(crossText);\r\n            }\r\n\r\n            // Try to keep the tooltip show when refreshing\r\n            if (this._lastX != null && this._lastY != null) {\r\n                var self = this;\r\n                clearTimeout(this._refreshUpdateTimeout);\r\n                this._refreshUpdateTimeout = setTimeout(function () {\r\n                    // Show tip next tick after other charts are rendered\r\n                    // In case highlight action has wrong result\r\n                    // FIXME\r\n                    self._manuallyShowTip({\r\n                        x: self._lastX,\r\n                        y: self._lastY\r\n                    });\r\n                });\r\n            }\r\n\r\n            var zr = this._api.getZr();\r\n            zr.off('click', this._tryShow);\r\n            zr.off('mousemove', this._mousemove);\r\n            zr.off('mouseout', this._hide);\r\n            zr.off('globalout', this._hide);\r\n            if (tooltipModel.get('triggerOn') === 'click') {\r\n                zr.on('click', this._tryShow, this);\r\n            }\r\n            else {\r\n                zr.on('mousemove', this._mousemove, this);\r\n                zr.on('mouseout', this._hide, this);\r\n                zr.on('globalout', this._hide, this);\r\n            }\r\n        },\r\n\r\n        _mousemove: function (e) {\r\n            var showDelay = this._tooltipModel.get('showDelay');\r\n            var self = this;\r\n            clearTimeout(this._showTimeout);\r\n            if (showDelay > 0) {\r\n                this._showTimeout = setTimeout(function () {\r\n                    self._tryShow(e);\r\n                }, showDelay);\r\n            }\r\n            else {\r\n                this._tryShow(e);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Show tip manually by\r\n         *  dispatchAction({\r\n         *      type: 'showTip',\r\n         *      x: 10,\r\n         *      y: 10\r\n         *  });\r\n         * Or\r\n         *  dispatchAction({\r\n         *      type: 'showTip',\r\n         *      seriesIndex: 0,\r\n         *      dataIndex: 1\r\n         *  });\r\n         *\r\n         *  TODO Batch\r\n         */\r\n        _manuallyShowTip: function (event) {\r\n            // From self\r\n            if (event.from === this.uid) {\r\n                return;\r\n            }\r\n\r\n            var ecModel = this._ecModel;\r\n            var seriesIndex = event.seriesIndex;\r\n            var dataIndex = event.dataIndex;\r\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\r\n            var api = this._api;\r\n\r\n            if (event.x == null || event.y == null) {\r\n                if (!seriesModel) {\r\n                    // Find the first series can use axis trigger\r\n                    ecModel.eachSeries(function (_series) {\r\n                        if (ifSeriesSupportAxisTrigger(_series) && !seriesModel) {\r\n                            seriesModel = _series;\r\n                        }\r\n                    });\r\n                }\r\n                if (seriesModel) {\r\n                    var data = seriesModel.getData();\r\n                    if (dataIndex == null) {\r\n                        dataIndex = data.indexOfName(event.name);\r\n                    }\r\n                    var el = data.getItemGraphicEl(dataIndex);\r\n                    var cx, cy;\r\n                    // Try to get the point in coordinate system\r\n                    var coordSys = seriesModel.coordinateSystem;\r\n                    if (coordSys && coordSys.dataToPoint) {\r\n                        var point = coordSys.dataToPoint(\r\n                            data.getValues(\r\n                                zrUtil.map(coordSys.dimensions, function (dim) {\r\n                                    return seriesModel.coordDimToDataDim(dim)[0];\r\n                                }), dataIndex, true\r\n                            )\r\n                        );\r\n                        cx = point && point[0];\r\n                        cy = point && point[1];\r\n                    }\r\n                    else if (el) {\r\n                        // Use graphic bounding rect\r\n                        var rect = el.getBoundingRect().clone();\r\n                        rect.applyTransform(el.transform);\r\n                        cx = rect.x + rect.width / 2;\r\n                        cy = rect.y + rect.height / 2;\r\n                    }\r\n                    if (cx != null && cy != null) {\r\n                        this._tryShow({\r\n                            offsetX: cx,\r\n                            offsetY: cy,\r\n                            target: el,\r\n                            event: {}\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                var el = api.getZr().handler.findHover(event.x, event.y);\r\n                this._tryShow({\r\n                    offsetX: event.x,\r\n                    offsetY: event.y,\r\n                    target: el,\r\n                    event: {}\r\n                });\r\n            }\r\n        },\r\n\r\n        _manuallyHideTip: function (e) {\r\n            if (e.from === this.uid) {\r\n                return;\r\n            }\r\n\r\n            this._hide();\r\n        },\r\n\r\n        _prepareAxisTriggerData: function (tooltipModel, ecModel) {\r\n            // Prepare data for axis trigger\r\n            var seriesGroupByAxis = {};\r\n            ecModel.eachSeries(function (seriesModel) {\r\n                if (ifSeriesSupportAxisTrigger(seriesModel)) {\r\n                    var coordSys = seriesModel.coordinateSystem;\r\n                    var baseAxis;\r\n                    var key;\r\n\r\n                    // Only cartesian2d, polar and single support axis trigger\r\n                    if (coordSys.type === 'cartesian2d') {\r\n                        // FIXME `axisPointer.axis` is not baseAxis\r\n                        baseAxis = coordSys.getBaseAxis();\r\n                        key = baseAxis.dim + baseAxis.index;\r\n                    }\r\n                    else if (coordSys.type === 'singleAxis') {\r\n                        baseAxis = coordSys.getAxis();\r\n                        key = baseAxis.dim + baseAxis.type;\r\n                    }\r\n                    else {\r\n                        baseAxis = coordSys.getBaseAxis();\r\n                        key = baseAxis.dim + coordSys.name;\r\n                    }\r\n\r\n                    seriesGroupByAxis[key] = seriesGroupByAxis[key] || {\r\n                        coordSys: [],\r\n                        series: []\r\n                    };\r\n                    seriesGroupByAxis[key].coordSys.push(coordSys);\r\n                    seriesGroupByAxis[key].series.push(seriesModel);\r\n                }\r\n            }, this);\r\n\r\n            return seriesGroupByAxis;\r\n        },\r\n\r\n        /**\r\n         * mousemove handler\r\n         * @param {Object} e\r\n         * @private\r\n         */\r\n        _tryShow: function (e) {\r\n            var el = e.target;\r\n            var tooltipModel = this._tooltipModel;\r\n            var globalTrigger = tooltipModel.get('trigger');\r\n            var ecModel = this._ecModel;\r\n            var api = this._api;\r\n\r\n            if (!tooltipModel) {\r\n                return;\r\n            }\r\n\r\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\r\n            this._lastX = e.offsetX;\r\n            this._lastY = e.offsetY;\r\n\r\n            // Always show item tooltip if mouse is on the element with dataIndex\r\n            if (el && el.dataIndex != null) {\r\n                // Use dataModel in element if possible\r\n                // Used when mouseover on a element like markPoint or edge\r\n                // In which case, the data is not main data in series.\r\n                var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\r\n                var dataIndex = el.dataIndex;\r\n                var itemModel = dataModel.getData().getItemModel(dataIndex);\r\n                // Series or single data may use item trigger when global is axis trigger\r\n                if ((itemModel.get('tooltip.trigger') || globalTrigger) === 'axis') {\r\n                    this._showAxisTooltip(tooltipModel, ecModel, e);\r\n                }\r\n                else {\r\n                    // Reset ticket\r\n                    this._ticket = '';\r\n                    // If either single data or series use item trigger\r\n                    this._hideAxisPointer();\r\n                    // Reset last hover and dispatch downplay action\r\n                    this._resetLastHover();\r\n\r\n                    this._showItemTooltipContent(dataModel, dataIndex, el.dataType, e);\r\n                }\r\n\r\n                api.dispatchAction({\r\n                    type: 'showTip',\r\n                    from: this.uid,\r\n                    dataIndex: el.dataIndex,\r\n                    seriesIndex: el.seriesIndex\r\n                });\r\n            }\r\n            // Tooltip provided directly. Like legend\r\n            else if (el && el.tooltip) {\r\n                var tooltipOpt = el.tooltip;\r\n                if (typeof tooltipOpt === 'string') {\r\n                    var content = tooltipOpt;\r\n                    tooltipOpt = {\r\n                        content: content,\r\n                        // Fixed formatter\r\n                        formatter: content\r\n                    };\r\n                }\r\n                var subTooltipModel = new Model(tooltipOpt, tooltipModel);\r\n                var defaultHtml = subTooltipModel.get('content');\r\n                var asyncTicket = Math.random();\r\n                this._showTooltipContent(\r\n                    // TODO params\r\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\r\n                    asyncTicket, e.offsetX, e.offsetY, el, api\r\n                );\r\n            }\r\n            else {\r\n                if (globalTrigger === 'item') {\r\n                    this._hide();\r\n                }\r\n                else {\r\n                    // Try show axis tooltip\r\n                    this._showAxisTooltip(tooltipModel, ecModel, e);\r\n                }\r\n\r\n                // Action of cross pointer\r\n                // other pointer types will trigger action in _dispatchAndShowSeriesTooltipContent method\r\n                if (tooltipModel.get('axisPointer.type') === 'cross') {\r\n                    api.dispatchAction({\r\n                        type: 'showTip',\r\n                        from: this.uid,\r\n                        x: e.offsetX,\r\n                        y: e.offsetY\r\n                    });\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Show tooltip on axis\r\n         * @param {module:echarts/component/tooltip/TooltipModel} tooltipModel\r\n         * @param {module:echarts/model/Global} ecModel\r\n         * @param {Object} e\r\n         * @private\r\n         */\r\n        _showAxisTooltip: function (tooltipModel, ecModel, e) {\r\n            var axisPointerModel = tooltipModel.getModel('axisPointer');\r\n            var axisPointerType = axisPointerModel.get('type');\r\n\r\n            if (axisPointerType === 'cross') {\r\n                var el = e.target;\r\n                if (el && el.dataIndex != null) {\r\n                    var seriesModel = ecModel.getSeriesByIndex(el.seriesIndex);\r\n                    var dataIndex = el.dataIndex;\r\n                    this._showItemTooltipContent(seriesModel, dataIndex, el.dataType, e);\r\n                }\r\n            }\r\n\r\n            this._showAxisPointer();\r\n            var allNotShow = true;\r\n            zrUtil.each(this._seriesGroupByAxis, function (seriesCoordSysSameAxis) {\r\n                // Try show the axis pointer\r\n                var allCoordSys = seriesCoordSysSameAxis.coordSys;\r\n                var coordSys = allCoordSys[0];\r\n\r\n                // If mouse position is not in the grid or polar\r\n                var point = [e.offsetX, e.offsetY];\r\n\r\n                if (!coordSys.containPoint(point)) {\r\n                    // Hide axis pointer\r\n                    this._hideAxisPointer(coordSys.name);\r\n                    return;\r\n                }\r\n\r\n                allNotShow = false;\r\n                // Make sure point is discrete on cateogry axis\r\n                var dimensions = coordSys.dimensions;\r\n                var value = coordSys.pointToData(point, true);\r\n                point = coordSys.dataToPoint(value);\r\n                var baseAxis = coordSys.getBaseAxis();\r\n                var axisType = axisPointerModel.get('axis');\r\n                if (axisType === 'auto') {\r\n                    axisType = baseAxis.dim;\r\n                }\r\n\r\n                var contentNotChange = false;\r\n                var lastHover = this._lastHover;\r\n                if (axisPointerType === 'cross') {\r\n                    // If hover data not changed\r\n                    // Possible when two axes are all category\r\n                    if (dataEqual(lastHover.data, value)) {\r\n                        contentNotChange = true;\r\n                    }\r\n                    lastHover.data = value;\r\n                }\r\n                else {\r\n                    var valIndex = zrUtil.indexOf(dimensions, axisType);\r\n\r\n                    // If hover data not changed on the axis dimension\r\n                    if (lastHover.data === value[valIndex]) {\r\n                        contentNotChange = true;\r\n                    }\r\n                    lastHover.data = value[valIndex];\r\n                }\r\n\r\n                if (coordSys.type === 'cartesian2d' && !contentNotChange) {\r\n                    this._showCartesianPointer(\r\n                        axisPointerModel, coordSys, axisType, point\r\n                    );\r\n                }\r\n                else if (coordSys.type === 'polar' && !contentNotChange) {\r\n                    this._showPolarPointer(\r\n                        axisPointerModel, coordSys, axisType, point\r\n                    );\r\n                }\r\n                else if (coordSys.type === 'singleAxis' && !contentNotChange) {\r\n                    this._showSinglePointer(\r\n                        axisPointerModel, coordSys, axisType, point\r\n                    );\r\n                }\r\n\r\n                if (axisPointerType !== 'cross') {\r\n                    this._dispatchAndShowSeriesTooltipContent(\r\n                        coordSys, seriesCoordSysSameAxis.series, point, value, contentNotChange\r\n                    );\r\n                }\r\n            }, this);\r\n\r\n            if (!this._tooltipModel.get('show')) {\r\n                this._hideAxisPointer();\r\n            }\r\n\r\n            if (allNotShow) {\r\n                this._hide();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Show tooltip on axis of cartesian coordinate\r\n         * @param {module:echarts/model/Model} axisPointerModel\r\n         * @param {module:echarts/coord/cartesian/Cartesian2D} cartesians\r\n         * @param {string} axisType\r\n         * @param {Array.<number>} point\r\n         * @private\r\n         */\r\n        _showCartesianPointer: function (axisPointerModel, cartesian, axisType, point) {\r\n            var self = this;\r\n\r\n            var axisPointerType = axisPointerModel.get('type');\r\n            var baseAxis = cartesian.getBaseAxis();\r\n            var moveAnimation = axisPointerType !== 'cross'\r\n                && baseAxis.type === 'category'\r\n                && baseAxis.getBandWidth() > 20;\r\n\r\n            if (axisPointerType === 'cross') {\r\n                moveGridLine('x', point, cartesian.getAxis('y').getGlobalExtent());\r\n                moveGridLine('y', point, cartesian.getAxis('x').getGlobalExtent());\r\n\r\n                this._updateCrossText(cartesian, point, axisPointerModel);\r\n            }\r\n            else {\r\n                var otherAxis = cartesian.getAxis(axisType === 'x' ? 'y' : 'x');\r\n                var otherExtent = otherAxis.getGlobalExtent();\r\n\r\n                if (cartesian.type === 'cartesian2d') {\r\n                    (axisPointerType === 'line' ? moveGridLine : moveGridShadow)(\r\n                        axisType, point, otherExtent\r\n                    );\r\n                }\r\n            }\r\n\r\n            /**\r\n             * @inner\r\n             */\r\n            function moveGridLine(axisType, point, otherExtent) {\r\n                var targetShape = axisType === 'x'\r\n                    ? makeLineShape(point[0], otherExtent[0], point[0], otherExtent[1])\r\n                    : makeLineShape(otherExtent[0], point[1], otherExtent[1], point[1]);\r\n\r\n                var pointerEl = self._getPointerElement(\r\n                    cartesian, axisPointerModel, axisType, targetShape\r\n                );\r\n                graphic.subPixelOptimizeLine({\r\n                    shape: targetShape,\r\n                    style: pointerEl.style\r\n                });\r\n\r\n                moveAnimation\r\n                    ? graphic.updateProps(pointerEl, {\r\n                        shape: targetShape\r\n                    }, axisPointerModel)\r\n                    :  pointerEl.attr({\r\n                        shape: targetShape\r\n                    });\r\n            }\r\n\r\n            /**\r\n             * @inner\r\n             */\r\n            function moveGridShadow(axisType, point, otherExtent) {\r\n                var axis = cartesian.getAxis(axisType);\r\n                var bandWidth = axis.getBandWidth();\r\n                var span = otherExtent[1] - otherExtent[0];\r\n                var targetShape = axisType === 'x'\r\n                    ? makeRectShape(point[0] - bandWidth / 2, otherExtent[0], bandWidth, span)\r\n                    : makeRectShape(otherExtent[0], point[1] - bandWidth / 2, span, bandWidth);\r\n\r\n                var pointerEl = self._getPointerElement(\r\n                    cartesian, axisPointerModel, axisType, targetShape\r\n                );\r\n                moveAnimation\r\n                    ? graphic.updateProps(pointerEl, {\r\n                        shape: targetShape\r\n                    }, axisPointerModel)\r\n                    :  pointerEl.attr({\r\n                        shape: targetShape\r\n                    });\r\n            }\r\n        },\r\n\r\n        _showSinglePointer: function (axisPointerModel, single, axisType, point) {\r\n            var self = this;\r\n            var axisPointerType = axisPointerModel.get('type');\r\n            var moveAnimation = axisPointerType !== 'cross' && single.getBaseAxis().type === 'category';\r\n            var rect = single.getRect();\r\n            var otherExtent = [rect.y, rect.y + rect.height];\r\n\r\n            moveSingleLine(axisType, point, otherExtent);\r\n\r\n            /**\r\n             * @inner\r\n             */\r\n            function moveSingleLine(axisType, point, otherExtent) {\r\n                var axis = single.getAxis();\r\n                var orient = axis.orient;\r\n\r\n                var targetShape = orient === 'horizontal'\r\n                    ? makeLineShape(point[0], otherExtent[0], point[0], otherExtent[1])\r\n                    : makeLineShape(otherExtent[0], point[1], otherExtent[1], point[1]);\r\n\r\n                var pointerEl = self._getPointerElement(\r\n                    single, axisPointerModel, axisType, targetShape\r\n                );\r\n                moveAnimation\r\n                    ? graphic.updateProps(pointerEl, {\r\n                        shape: targetShape\r\n                    }, axisPointerModel)\r\n                    :  pointerEl.attr({\r\n                        shape: targetShape\r\n                    });\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * Show tooltip on axis of polar coordinate\r\n         * @param {module:echarts/model/Model} axisPointerModel\r\n         * @param {Array.<module:echarts/coord/polar/Polar>} polar\r\n         * @param {string} axisType\r\n         * @param {Array.<number>} point\r\n         */\r\n        _showPolarPointer: function (axisPointerModel, polar, axisType, point) {\r\n            var self = this;\r\n\r\n            var axisPointerType = axisPointerModel.get('type');\r\n\r\n            var angleAxis = polar.getAngleAxis();\r\n            var radiusAxis = polar.getRadiusAxis();\r\n\r\n            var moveAnimation = axisPointerType !== 'cross'\r\n                && polar.getBaseAxis().type === 'category';\r\n\r\n            if (axisPointerType === 'cross') {\r\n                movePolarLine('angle', point, radiusAxis.getExtent());\r\n                movePolarLine('radius', point, angleAxis.getExtent());\r\n\r\n                this._updateCrossText(polar, point, axisPointerModel);\r\n            }\r\n            else {\r\n                var otherAxis = polar.getAxis(axisType === 'radius' ? 'angle' : 'radius');\r\n                var otherExtent = otherAxis.getExtent();\r\n\r\n                (axisPointerType === 'line' ? movePolarLine : movePolarShadow)(\r\n                    axisType, point, otherExtent\r\n                );\r\n            }\r\n            /**\r\n             * @inner\r\n             */\r\n            function movePolarLine(axisType, point, otherExtent) {\r\n                var mouseCoord = polar.pointToCoord(point);\r\n\r\n                var targetShape;\r\n\r\n                if (axisType === 'angle') {\r\n                    var p1 = polar.coordToPoint([otherExtent[0], mouseCoord[1]]);\r\n                    var p2 = polar.coordToPoint([otherExtent[1], mouseCoord[1]]);\r\n                    targetShape = makeLineShape(p1[0], p1[1], p2[0], p2[1]);\r\n                }\r\n                else {\r\n                    targetShape = {\r\n                        cx: polar.cx,\r\n                        cy: polar.cy,\r\n                        r: mouseCoord[0]\r\n                    };\r\n                }\r\n\r\n                var pointerEl = self._getPointerElement(\r\n                    polar, axisPointerModel, axisType, targetShape\r\n                );\r\n\r\n                moveAnimation\r\n                    ? graphic.updateProps(pointerEl, {\r\n                        shape: targetShape\r\n                    }, axisPointerModel)\r\n                    :  pointerEl.attr({\r\n                        shape: targetShape\r\n                    });\r\n            }\r\n\r\n            /**\r\n             * @inner\r\n             */\r\n            function movePolarShadow(axisType, point, otherExtent) {\r\n                var axis = polar.getAxis(axisType);\r\n                var bandWidth = axis.getBandWidth();\r\n\r\n                var mouseCoord = polar.pointToCoord(point);\r\n\r\n                var targetShape;\r\n\r\n                var radian = Math.PI / 180;\r\n\r\n                if (axisType === 'angle') {\r\n                    targetShape = makeSectorShape(\r\n                        polar.cx, polar.cy,\r\n                        otherExtent[0], otherExtent[1],\r\n                        // In ECharts y is negative if angle is positive\r\n                        (-mouseCoord[1] - bandWidth / 2) * radian,\r\n                        (-mouseCoord[1] + bandWidth / 2) * radian\r\n                    );\r\n                }\r\n                else {\r\n                    targetShape = makeSectorShape(\r\n                        polar.cx, polar.cy,\r\n                        mouseCoord[0] - bandWidth / 2,\r\n                        mouseCoord[0] + bandWidth / 2,\r\n                        0, Math.PI * 2\r\n                    );\r\n                }\r\n\r\n                var pointerEl = self._getPointerElement(\r\n                    polar, axisPointerModel, axisType, targetShape\r\n                );\r\n                moveAnimation\r\n                    ? graphic.updateProps(pointerEl, {\r\n                        shape: targetShape\r\n                    }, axisPointerModel)\r\n                    :  pointerEl.attr({\r\n                        shape: targetShape\r\n                    });\r\n            }\r\n        },\r\n\r\n        _updateCrossText: function (coordSys, point, axisPointerModel) {\r\n            var crossStyleModel = axisPointerModel.getModel('crossStyle');\r\n            var textStyleModel = crossStyleModel.getModel('textStyle');\r\n\r\n            var tooltipModel = this._tooltipModel;\r\n\r\n            var text = this._crossText;\r\n            if (!text) {\r\n                text = this._crossText = new graphic.Text({\r\n                    style: {\r\n                        textAlign: 'left',\r\n                        textVerticalAlign: 'bottom'\r\n                    }\r\n                });\r\n                this.group.add(text);\r\n            }\r\n\r\n            var value = coordSys.pointToData(point);\r\n\r\n            var dims = coordSys.dimensions;\r\n            value = zrUtil.map(value, function (val, idx) {\r\n                var axis = coordSys.getAxis(dims[idx]);\r\n                if (axis.type === 'category' || axis.type === 'time') {\r\n                    val = axis.scale.getLabel(val);\r\n                }\r\n                else {\r\n                    val = formatUtil.addCommas(\r\n                        val.toFixed(axis.getPixelPrecision())\r\n                    );\r\n                }\r\n                return val;\r\n            });\r\n\r\n            text.setStyle({\r\n                fill: textStyleModel.getTextColor() || crossStyleModel.get('color'),\r\n                textFont: textStyleModel.getFont(),\r\n                text: value.join(', '),\r\n                x: point[0] + 5,\r\n                y: point[1] - 5\r\n            });\r\n            text.z = tooltipModel.get('z');\r\n            text.zlevel = tooltipModel.get('zlevel');\r\n        },\r\n\r\n        _getPointerElement: function (coordSys, pointerModel, axisType, initShape) {\r\n            var tooltipModel = this._tooltipModel;\r\n            var z = tooltipModel.get('z');\r\n            var zlevel = tooltipModel.get('zlevel');\r\n            var axisPointers = this._axisPointers;\r\n            var coordSysName = coordSys.name;\r\n            axisPointers[coordSysName] = axisPointers[coordSysName] || {};\r\n            if (axisPointers[coordSysName][axisType]) {\r\n                return axisPointers[coordSysName][axisType];\r\n            }\r\n\r\n            // Create if not exists\r\n            var pointerType = pointerModel.get('type');\r\n            var styleModel = pointerModel.getModel(pointerType + 'Style');\r\n            var isShadow = pointerType === 'shadow';\r\n            var style = styleModel[isShadow ? 'getAreaStyle' : 'getLineStyle']();\r\n\r\n            var elementType = coordSys.type === 'polar'\r\n                ? (isShadow ? 'Sector' : (axisType === 'radius' ? 'Circle' : 'Line'))\r\n                : (isShadow ? 'Rect' : 'Line');\r\n\r\n            isShadow ? (style.stroke = null) : (style.fill = null);\r\n\r\n            var el = axisPointers[coordSysName][axisType] = new graphic[elementType]({\r\n                style: style,\r\n                z: z,\r\n                zlevel: zlevel,\r\n                silent: true,\r\n                shape: initShape\r\n            });\r\n\r\n            this.group.add(el);\r\n            return el;\r\n        },\r\n\r\n        /**\r\n         * Dispatch actions and show tooltip on series\r\n         * @param {Array.<module:echarts/model/Series>} seriesList\r\n         * @param {Array.<number>} point\r\n         * @param {Array.<number>} value\r\n         * @param {boolean} contentNotChange\r\n         * @param {Object} e\r\n         */\r\n        _dispatchAndShowSeriesTooltipContent: function (\r\n            coordSys, seriesList, point, value, contentNotChange\r\n        ) {\r\n\r\n            var rootTooltipModel = this._tooltipModel;\r\n\r\n            var baseAxis = coordSys.getBaseAxis();\r\n            var baseDimIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\r\n\r\n            var payloadBatch = zrUtil.map(seriesList, function (series) {\r\n                return {\r\n                    seriesIndex: series.seriesIndex,\r\n                    dataIndex: series.getAxisTooltipDataIndex\r\n                        ? series.getAxisTooltipDataIndex(series.coordDimToDataDim(baseAxis.dim), value, baseAxis)\r\n                        : series.getData().indexOfNearest(\r\n                            series.coordDimToDataDim(baseAxis.dim)[0],\r\n                            value[baseDimIndex],\r\n                            // Add a threshold to avoid find the wrong dataIndex when data length is not same\r\n                            false, baseAxis.type === 'category' ? 0.5 : null\r\n                        )\r\n                };\r\n            });\r\n\r\n            var lastHover = this._lastHover;\r\n            var api = this._api;\r\n            // Dispatch downplay action\r\n            if (lastHover.payloadBatch && !contentNotChange) {\r\n                api.dispatchAction({\r\n                    type: 'downplay',\r\n                    batch: lastHover.payloadBatch\r\n                });\r\n            }\r\n            // Dispatch highlight action\r\n            if (!contentNotChange) {\r\n                api.dispatchAction({\r\n                    type: 'highlight',\r\n                    batch: payloadBatch\r\n                });\r\n                lastHover.payloadBatch = payloadBatch;\r\n            }\r\n            // Dispatch showTip action\r\n            api.dispatchAction({\r\n                type: 'showTip',\r\n                dataIndex: payloadBatch[0].dataIndex,\r\n                seriesIndex: payloadBatch[0].seriesIndex,\r\n                from: this.uid\r\n            });\r\n\r\n            if (baseAxis && rootTooltipModel.get('showContent') && rootTooltipModel.get('show')) {\r\n                var paramsList = zrUtil.map(seriesList, function (series, index) {\r\n                    return series.getDataParams(payloadBatch[index].dataIndex);\r\n                });\r\n\r\n                if (!contentNotChange) {\r\n                    // Update html content\r\n                    var firstDataIndex = payloadBatch[0].dataIndex;\r\n\r\n                    // Default tooltip content\r\n                    // FIXME\r\n                    // (1) shold be the first data which has name?\r\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\r\n                    var firstLine = baseAxis.type === 'time'\r\n                        ? baseAxis.scale.getLabel(value[baseDimIndex])\r\n                        : seriesList[0].getData().getName(firstDataIndex);\r\n                    var defaultHtml = (firstLine ? firstLine + '<br />' : '')\r\n                        + zrUtil.map(seriesList, function (series, index) {\r\n                            return series.formatTooltip(payloadBatch[index].dataIndex, true);\r\n                        }).join('<br />');\r\n\r\n                    var asyncTicket = 'axis_' + coordSys.name + '_' + firstDataIndex;\r\n\r\n                    this._showTooltipContent(\r\n                        rootTooltipModel, defaultHtml, paramsList, asyncTicket,\r\n                        point[0], point[1], null, api\r\n                    );\r\n                }\r\n                else {\r\n                    updatePosition(\r\n                        rootTooltipModel.get('position'), point[0], point[1],\r\n                        this._tooltipContent, paramsList, null, api\r\n                    );\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Show tooltip on item\r\n         * @param {module:echarts/model/Series} seriesModel\r\n         * @param {number} dataIndex\r\n         * @param {string} dataType\r\n         * @param {Object} e\r\n         */\r\n        _showItemTooltipContent: function (seriesModel, dataIndex, dataType, e) {\r\n            // FIXME Graph data\r\n            var api = this._api;\r\n            var data = seriesModel.getData(dataType);\r\n            var itemModel = data.getItemModel(dataIndex);\r\n\r\n            var tooltipOpt = itemModel.get('tooltip', true);\r\n            if (typeof tooltipOpt === 'string') {\r\n                // In each data item tooltip can be simply write:\r\n                // {\r\n                //  value: 10,\r\n                //  tooltip: 'Something you need to know'\r\n                // }\r\n                var tooltipContent = tooltipOpt;\r\n                tooltipOpt = {\r\n                    formatter: tooltipContent\r\n                };\r\n            }\r\n            var rootTooltipModel = this._tooltipModel;\r\n            var seriesTooltipModel = seriesModel.getModel(\r\n                'tooltip', rootTooltipModel\r\n            );\r\n            var tooltipModel = new Model(tooltipOpt, seriesTooltipModel, seriesTooltipModel.ecModel);\r\n\r\n            var params = seriesModel.getDataParams(dataIndex, dataType);\r\n            var defaultHtml = seriesModel.formatTooltip(dataIndex, false, dataType);\r\n\r\n            var asyncTicket = 'item_' + seriesModel.name + '_' + dataIndex;\r\n\r\n            this._showTooltipContent(\r\n                tooltipModel, defaultHtml, params, asyncTicket,\r\n                e.offsetX, e.offsetY, e.target, api\r\n            );\r\n        },\r\n\r\n        _showTooltipContent: function (\r\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, target, api\r\n        ) {\r\n            // Reset ticket\r\n            this._ticket = '';\r\n\r\n            if (tooltipModel.get('showContent') && tooltipModel.get('show')) {\r\n                var tooltipContent = this._tooltipContent;\r\n\r\n                var formatter = tooltipModel.get('formatter');\r\n                var positionExpr = tooltipModel.get('position');\r\n                var html = defaultHtml;\r\n\r\n                if (formatter) {\r\n                    if (typeof formatter === 'string') {\r\n                        html = formatUtil.formatTpl(formatter, params);\r\n                    }\r\n                    else if (typeof formatter === 'function') {\r\n                        var self = this;\r\n                        var ticket = asyncTicket;\r\n                        var callback = function (cbTicket, html) {\r\n                            if (cbTicket === self._ticket) {\r\n                                tooltipContent.setContent(html);\r\n\r\n                                updatePosition(\r\n                                    positionExpr, x, y,\r\n                                    tooltipContent, params, target, api\r\n                                );\r\n                            }\r\n                        };\r\n                        self._ticket = ticket;\r\n                        html = formatter(params, ticket, callback);\r\n                    }\r\n                }\r\n\r\n                tooltipContent.show(tooltipModel);\r\n                tooltipContent.setContent(html);\r\n\r\n                updatePosition(\r\n                    positionExpr, x, y,\r\n                    tooltipContent, params, target, api\r\n                );\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Show axis pointer\r\n         * @param {string} [coordSysName]\r\n         */\r\n        _showAxisPointer: function (coordSysName) {\r\n            if (coordSysName) {\r\n                var axisPointers = this._axisPointers[coordSysName];\r\n                axisPointers && zrUtil.each(axisPointers, function (el) {\r\n                    el.show();\r\n                });\r\n            }\r\n            else {\r\n                this.group.eachChild(function (child) {\r\n                    child.show();\r\n                });\r\n                this.group.show();\r\n            }\r\n        },\r\n\r\n        _resetLastHover: function () {\r\n            var lastHover = this._lastHover;\r\n            if (lastHover.payloadBatch) {\r\n                this._api.dispatchAction({\r\n                    type: 'downplay',\r\n                    batch: lastHover.payloadBatch\r\n                });\r\n            }\r\n            // Reset lastHover\r\n            this._lastHover = {};\r\n        },\r\n        /**\r\n         * Hide axis pointer\r\n         * @param {string} [coordSysName]\r\n         */\r\n        _hideAxisPointer: function (coordSysName) {\r\n            if (coordSysName) {\r\n                var axisPointers = this._axisPointers[coordSysName];\r\n                axisPointers && zrUtil.each(axisPointers, function (el) {\r\n                    el.hide();\r\n                });\r\n            }\r\n            else {\r\n                if (this.group.children().length) {\r\n                    this.group.hide();\r\n                }\r\n            }\r\n        },\r\n\r\n        _hide: function () {\r\n            clearTimeout(this._showTimeout);\r\n\r\n            this._hideAxisPointer();\r\n            this._resetLastHover();\r\n            if (!this._alwaysShowContent) {\r\n                this._tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\r\n            }\r\n\r\n            this._api.dispatchAction({\r\n                type: 'hideTip',\r\n                from: this.uid\r\n            });\r\n\r\n            this._lastX = this._lastY = null;\r\n        },\r\n\r\n        dispose: function (ecModel, api) {\r\n            if (env.node) {\r\n                return;\r\n            }\r\n            var zr = api.getZr();\r\n            this._tooltipContent.hide();\r\n\r\n            zr.off('click', this._tryShow);\r\n            zr.off('mousemove', this._mousemove);\r\n            zr.off('mouseout', this._hide);\r\n            zr.off('globalout', this._hide);\r\n\r\n            api.off('showTip', this._manuallyShowTip);\r\n            api.off('hideTip', this._manuallyHideTip);\r\n        }\r\n    });\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/component/tooltip/TooltipView.js\n ** module id = 720\n ** module chunks = 29 37 53 54\n **/","/**\r\n * @module echarts/component/tooltip/TooltipContent\r\n */\r\n\r\n\r\n    var zrUtil = require('zrender/lib/core/util');\r\n    var zrColor = require('zrender/lib/tool/color');\r\n    var eventUtil = require('zrender/lib/core/event');\r\n    var formatUtil = require('../../util/format');\r\n    var each = zrUtil.each;\r\n    var toCamelCase = formatUtil.toCamelCase;\r\n    var env = require('zrender/lib/core/env');\r\n\r\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\r\n\r\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\r\n\r\n    /**\r\n     * @param {number} duration\r\n     * @return {string}\r\n     * @inner\r\n     */\r\n    function assembleTransition(duration) {\r\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\r\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\r\n                            + 'top ' + duration + 's ' + transitionCurve;\r\n        return zrUtil.map(vendors, function (vendorPrefix) {\r\n            return vendorPrefix + 'transition:' + transitionText;\r\n        }).join(';');\r\n    }\r\n\r\n    /**\r\n     * @param {Object} textStyle\r\n     * @return {string}\r\n     * @inner\r\n     */\r\n    function assembleFont(textStyleModel) {\r\n        var cssText = [];\r\n\r\n        var fontSize = textStyleModel.get('fontSize');\r\n        var color = textStyleModel.getTextColor();\r\n\r\n        color && cssText.push('color:' + color);\r\n\r\n        cssText.push('font:' + textStyleModel.getFont());\r\n\r\n        fontSize &&\r\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\r\n\r\n        each(['decoration', 'align'], function (name) {\r\n            var val = textStyleModel.get(name);\r\n            val && cssText.push('text-' + name + ':' + val);\r\n        });\r\n\r\n        return cssText.join(';');\r\n    }\r\n\r\n    /**\r\n     * @param {Object} tooltipModel\r\n     * @return {string}\r\n     * @inner\r\n     */\r\n    function assembleCssText(tooltipModel) {\r\n\r\n        tooltipModel = tooltipModel;\r\n\r\n        var cssText = [];\r\n\r\n        var transitionDuration = tooltipModel.get('transitionDuration');\r\n        var backgroundColor = tooltipModel.get('backgroundColor');\r\n        var textStyleModel = tooltipModel.getModel('textStyle');\r\n        var padding = tooltipModel.get('padding');\r\n\r\n        // Animation transition\r\n        transitionDuration &&\r\n            cssText.push(assembleTransition(transitionDuration));\r\n\r\n        if (backgroundColor) {\r\n            if (env.canvasSupported) {\r\n                cssText.push('background-Color:' + backgroundColor);\r\n            }\r\n            else {\r\n                // for ie\r\n                cssText.push(\r\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\r\n                );\r\n                cssText.push('filter:alpha(opacity=70)');\r\n            }\r\n        }\r\n\r\n        // Border style\r\n        each(['width', 'color', 'radius'], function (name) {\r\n            var borderName = 'border-' + name;\r\n            var camelCase = toCamelCase(borderName);\r\n            var val = tooltipModel.get(camelCase);\r\n            val != null &&\r\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\r\n        });\r\n\r\n        // Text style\r\n        cssText.push(assembleFont(textStyleModel));\r\n\r\n        // Padding\r\n        if (padding != null) {\r\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\r\n        }\r\n\r\n        return cssText.join(';') + ';';\r\n    }\r\n\r\n    /**\r\n     * @alias module:echarts/component/tooltip/TooltipContent\r\n     * @constructor\r\n     */\r\n    function TooltipContent(container, api) {\r\n        var el = document.createElement('div');\r\n        var zr = api.getZr();\r\n\r\n        this.el = el;\r\n\r\n        this._x = api.getWidth() / 2;\r\n        this._y = api.getHeight() / 2;\r\n\r\n        container.appendChild(el);\r\n\r\n        this._container = container;\r\n\r\n        this._show = false;\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        this._hideTimeout;\r\n\r\n        var self = this;\r\n        el.onmouseenter = function () {\r\n            // clear the timeout in hideLater and keep showing tooltip\r\n            if (self.enterable) {\r\n                clearTimeout(self._hideTimeout);\r\n                self._show = true;\r\n            }\r\n            self._inContent = true;\r\n        };\r\n        el.onmousemove = function (e) {\r\n            if (!self.enterable) {\r\n                // Try trigger zrender event to avoid mouse\r\n                // in and out shape too frequently\r\n                var handler = zr.handler;\r\n                eventUtil.normalizeEvent(container, e);\r\n                handler.dispatch('mousemove', e);\r\n            }\r\n        };\r\n        el.onmouseleave = function () {\r\n            if (self.enterable) {\r\n                if (self._show) {\r\n                    self.hideLater(self._hideDelay);\r\n                }\r\n            }\r\n            self._inContent = false;\r\n        };\r\n\r\n        compromiseMobile(el, container);\r\n    }\r\n\r\n    function compromiseMobile(tooltipContentEl, container) {\r\n        // Prevent default behavior on mobile. For example,\r\n        // default pinch gesture will cause browser zoom.\r\n        // We do not preventing event on tooltip contnet el,\r\n        // because user may need customization in tooltip el.\r\n        eventUtil.addEventListener(container, 'touchstart', preventDefault);\r\n        eventUtil.addEventListener(container, 'touchmove', preventDefault);\r\n        eventUtil.addEventListener(container, 'touchend', preventDefault);\r\n\r\n        function preventDefault(e) {\r\n            if (contains(e.target)) {\r\n                e.preventDefault();\r\n            }\r\n        }\r\n\r\n        function contains(targetEl) {\r\n            while (targetEl && targetEl !== container) {\r\n                if (targetEl === tooltipContentEl) {\r\n                    return true;\r\n                }\r\n                targetEl = targetEl.parentNode;\r\n            }\r\n        }\r\n    }\r\n\r\n    TooltipContent.prototype = {\r\n\r\n        constructor: TooltipContent,\r\n\r\n        enterable: true,\r\n\r\n        /**\r\n         * Update when tooltip is rendered\r\n         */\r\n        update: function () {\r\n            var container = this._container;\r\n            var stl = container.currentStyle\r\n                || document.defaultView.getComputedStyle(container);\r\n            var domStyle = container.style;\r\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\r\n                domStyle.position = 'relative';\r\n            }\r\n            // Hide the tooltip\r\n            // PENDING\r\n            // this.hide();\r\n        },\r\n\r\n        show: function (tooltipModel) {\r\n            clearTimeout(this._hideTimeout);\r\n            var el = this.el;\r\n\r\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\r\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\r\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\r\n                + (tooltipModel.get('extraCssText') || '');\r\n\r\n            el.style.display = el.innerHTML ?  'block' : 'none';\r\n\r\n            this._show = true;\r\n        },\r\n\r\n        setContent: function (content) {\r\n            var el = this.el;\r\n            el.innerHTML = content;\r\n            el.style.display = content ? 'block' : 'none';\r\n        },\r\n\r\n        moveTo: function (x, y) {\r\n            var style = this.el.style;\r\n            style.left = x + 'px';\r\n            style.top = y + 'px';\r\n\r\n            this._x = x;\r\n            this._y = y;\r\n        },\r\n\r\n        hide: function () {\r\n            this.el.style.display = 'none';\r\n            this._show = false;\r\n        },\r\n\r\n        // showLater: function ()\r\n\r\n        hideLater: function (time) {\r\n            if (this._show && !(this._inContent && this.enterable)) {\r\n                if (time) {\r\n                    this._hideDelay = time;\r\n                    // Set show false to avoid invoke hideLater mutiple times\r\n                    this._show = false;\r\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\r\n                }\r\n                else {\r\n                    this.hide();\r\n                }\r\n            }\r\n        },\r\n\r\n        isShow: function () {\r\n            return this._show;\r\n        }\r\n    };\r\n\r\n    module.exports = TooltipContent;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/echarts/lib/component/tooltip/TooltipContent.js\n ** module id = 721\n ** module chunks = 29 37 53 54\n **/","import * as React from 'react'\r\nvar echarts = require('echarts/lib/echarts');\r\nimport * as ajaxUtil from '../../../../common/ajaxUtil'\r\nimport * as ActionTypes from '../../../../actions/AdminPage/AdminPageActionTypes'\r\n// 引入柱状图\r\nrequire('echarts/lib/chart/bar')\r\nrequire('echarts/lib/component/title')\r\nrequire('echarts/lib/component/legend')\r\n\r\n\"use strict\";\r\n\r\ninterface ActiveDegreeChartProps extends React.Props<ActiveDegreeChart> {\r\n\r\n}\r\n\r\ninterface ActiveDegreeChartState {\r\n\r\n}\r\n\r\nclass ActiveDegreeChart extends React.Component<ActiveDegreeChartProps, ActiveDegreeChartState> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    static defaultProps = {};\r\n\r\n    setData(){\r\n        var this_ = this;\r\n        ajaxUtil.getDataByActionID(ActionTypes.GET_ADMIN_STUDENTACTIVITYSTATISTICS,function (response) {\r\n            var data = response.result.eventHolderStatistics;\r\n            this_.getEcharts(data);\r\n        });\r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setData()\r\n    }\r\n\r\n    getEcharts(chartData){\r\n        var containerHeight = 400;\r\n        $(\"#echartDom\").css(\"height\", containerHeight);\r\n        var myChart = echarts.init(document.getElementById('echartDom'));\r\n        var yaxisList = [],xaxisList=[];\r\n        for(var i=0;i<chartData.length;i++){\r\n            yaxisList.push(chartData[i].eventCategoryName);\r\n            xaxisList.push(chartData[i].count);\r\n        }\r\n\r\n        // 指定图表的配置项和数据\r\n        var option = {\r\n            tooltip : {\r\n                trigger: 'axis',\r\n                axisPointer : {            // 坐标轴指示器，坐标轴触发有效\r\n                    type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\r\n                }\r\n            },\r\n            grid: {\r\n                containLabel: true\r\n            },\r\n            xAxis : [\r\n                {\r\n                    type : 'value',\r\n                    splitLine:{show:false},\r\n                }\r\n            ],\r\n            yAxis : [\r\n                {\r\n                    type : 'category',\r\n                    axisTick : {show: false},\r\n                    data : yaxisList,\r\n                    splitLine:{show:false},\r\n\r\n                }\r\n            ],\r\n            series : [\r\n                {\r\n                    name:'参与人数',\r\n                    type:'bar',\r\n                    label: {\r\n                        normal: {\r\n                            show: true,\r\n                            position: 'inside'\r\n                        }\r\n                    },\r\n                    data:xaxisList\r\n                },\r\n\r\n            ]\r\n        };\r\n        // 使用刚指定的配置项和数据显示图表。\r\n        myChart.setOption(option);\r\n        myChart.resize();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div  style={{margin:\"30px\"}}>\r\n                <div style={{color:\"#C23531\",fontWeight:\"bold\",fontSize:\"18px\"}}>热闹活动与参与人数</div>\r\n                <div id=\"echartDom\"  ></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport = ActiveDegreeChart\n\n\n/** WEBPACK FOOTER **\n ** ./pages/AdminPage/Statistics/Component/ActiveDegreeChart.tsx\n **/"],"sourceRoot":""}